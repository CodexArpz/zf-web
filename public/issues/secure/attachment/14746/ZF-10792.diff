Index: tests/Zend/Mail/MailTest.php
===================================================================
--- tests/Zend/Mail/MailTest.php	(Revision 24556)
+++ tests/Zend/Mail/MailTest.php	(Arbeitskopie)
@@ -638,6 +638,27 @@
         $this->assertContains("\r\n\r\n...after", $body, $body);
     }
 
+    public function testZf10792CommaInRecipientNameIsEncodedProperly()
+    {
+        $mail = new Zend_Mail("UTF-8");
+        $mail->setFrom('from@email.com', 'Doe, John');
+        $mail->addTo('to@email.com', 'Döe, Jöhn');
+        $mail->setBodyText('my body');
+
+        $mock = new Zend_Mail_Transport_Mock();
+        $mail->send($mock);
+
+        $this->assertContains(
+            'From: "Doe, John" <from@email.com>',
+            $mock->header
+        );
+
+        $this->assertContains(
+            'To: =?UTF-8?Q?D=C3=B6e=2C=20J=C3=B6hn?= <to@email.com>',
+            $mock->header
+        );
+    }
+
     public function testGetJustBodyText()
     {
         $text = "my body\r\n\r\n...after two newlines";
Index: library/Zend/Mime.php
===================================================================
--- library/Zend/Mime.php	(Revision 24556)
+++ library/Zend/Mime.php	(Arbeitskopie)
@@ -194,7 +194,7 @@
         $str = self::_encodeQuotedPrintable($str);
 
         // Mail-Header required chars have to be encoded also:
-        $str = str_replace(array('?', ' ', '_'), array('=3F', '=20', '=5F'), $str);
+        $str = str_replace(array('?', ' ', '_', ','), array('=3F', '=20', '=5F', '=2C'), $str);
 
         // initialize first line, we need it anyways
         $lines = array(0 => "");
