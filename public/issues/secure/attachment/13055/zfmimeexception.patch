Index: library/Zend/Mime/Decode.php
===================================================================
--- library/Zend/Mime/Decode.php	(revision 22101)
+++ library/Zend/Mime/Decode.php	(working copy)
@@ -40,7 +40,7 @@
      * @param  string $body     raw body of message
      * @param  string $boundary boundary as found in content-type
      * @return array parts with content of each part, empty if no parts found
-     * @throws Zend_Exception
+     * @throws Zend_Mime_Exception
      */
     public static function splitMime($body, $boundary)
     {
@@ -69,7 +69,11 @@
         // no more parts, find end boundary
         $p = strpos($body, '--' . $boundary . '--', $start);
         if ($p===false) {
-            throw new Zend_Exception('Not a valid Mime Message: End Missing');
+            /**
+             * @see Zend_Mime_Exception
+             */
+            require_once 'Zend/Mime/Exception.php';
+            throw new Zend_Mime_Exception('Not a valid Mime Message: End Missing');
         }
 
         // the remaining part also needs to be parsed:
@@ -85,7 +89,7 @@
      * @param  string $boundary boundary as found in content-type
      * @param  string $EOL EOL string; defaults to {@link Zend_Mime::LINEEND}
      * @return array|null parts as array('header' => array(name => value), 'body' => content), null if no parts found
-     * @throws Zend_Exception
+     * @throws Zend_Mime_Exception
      */
     public static function splitMessageStruct($message, $boundary, $EOL = Zend_Mime::LINEEND)
     {
@@ -185,7 +189,7 @@
      * @param  string $wantedPart the wanted part, else an array with all parts is returned
      * @param  string $firstName  key name for the first part
      * @return string|array wanted part or all parts as array($firstName => firstPart, partname => value)
-     * @throws Zend_Exception
+     * @throws Zend_Mime_Exception
      */
     public static function splitHeaderField($field, $wantedPart = null, $firstName = 0)
     {
@@ -200,7 +204,11 @@
 
         $field = $firstName . '=' . $field;
         if (!preg_match_all('%([^=\s]+)\s*=\s*("[^"]+"|[^;]+)(;\s*|$)%', $field, $matches)) {
-            throw new Zend_Exception('not a valid header field');
+            /**
+             * @see Zend_Mime_Exception
+             */
+            require_once 'Zend/Mime/Exception.php';
+            throw new Zend_Mime_Exception('not a valid header field');
         }
 
         if ($wantedPart) {
Index: library/Zend/Mime/Message.php
===================================================================
--- library/Zend/Mime/Message.php	(revision 22101)
+++ library/Zend/Mime/Message.php	(working copy)
@@ -223,7 +223,11 @@
         // no more parts, find end boundary
         $p = strpos($body, '--' . $boundary . '--', $start);
         if ($p===false) {
-            throw new Zend_Exception('Not a valid Mime Message: End Missing');
+            /**
+             * @see Zend_Mime_Exception
+             */
+            require_once 'Zend/Mime/Exception.php';
+            throw new Zend_Mime_Exception('Not a valid Mime Message: End Missing');
         }
 
         // the remaining part also needs to be parsed:
@@ -276,7 +280,11 @@
                         $newPart->language = $value;
                         break;
                     default:
-                        throw new Zend_Exception('Unknown header ignored for MimePart:' . $key);
+                        /**
+                         * @see Zend_Mime_Exception
+                         */
+                        require_once 'Zend/Mime/Exception.php';
+                        throw new Zend_Mime_Exception('Unknown header ignored for MimePart:' . $key);
                 }
             }
             $res->addPart($newPart);
