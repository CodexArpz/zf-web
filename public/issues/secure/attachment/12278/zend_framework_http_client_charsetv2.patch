Index: Http/Client.php
===================================================================
--- Http/Client.php	(revision 18442)
+++ Http/Client.php	(working copy)
@@ -87,15 +87,16 @@
     /**
      * Content attributes
      */
-    const CONTENT_TYPE   = 'Content-Type';
-    const CONTENT_LENGTH = 'Content-Length';
+    const CONTENT_TYPE    = 'Content-Type';
+    const CONTENT_LENGTH  = 'Content-Length';
 
     /**
      * POST data encoding methods
      */
     const ENC_URLENCODED = 'application/x-www-form-urlencoded';
     const ENC_FORMDATA   = 'multipart/form-data';
-
+	const ENC_CHARSET    = 'us-ascii';
+	
     /**
      * Configuration array, set using the constructor or using ::setConfig()
      *
@@ -163,6 +164,13 @@
     protected $enctype = null;
 
     /**
+     * Request charset for url encoded requests
+     *
+     * @var string
+     */
+     protected $_charset = null;
+
+    /**
      * The raw post data to send. Could be set by setRawData($data, $enctype).
      *
      * @var string
@@ -706,6 +714,30 @@
     }
 
     /**
+     * Set the charset type for POST data
+     *
+     * @param string $charset
+     * @return Zend_Http_Client
+     */
+    public function setCharset($charset = self::ENC_CHARSET)
+    {
+        $this->_charset = $charset;
+
+        return $this;
+    }
+
+    /**
+     * Set the charset type for POST data
+     *
+     * @param string $charset
+     * @return Zend_Http_Client
+     */
+    public function getCharset()
+    {
+        return $this->_charset;
+    }
+
+    /**
      * Set the encoding type for POST data
      *
      * @param string $enctype
@@ -753,6 +785,7 @@
         $this->paramsPost    = array();
         $this->files         = array();
         $this->raw_post_data = null;
+		$this->_charset      = null;
 
         // Clear outdated headers
         if (isset($this->headers[strtolower(self::CONTENT_TYPE)])) {
@@ -988,8 +1021,11 @@
         // Set the Content-Type header
         if ($this->method == self::POST &&
            (! isset($this->headers[strtolower(self::CONTENT_TYPE)]) && isset($this->enctype))) {
-
-            $headers[] = self::CONTENT_TYPE . ': ' . $this->enctype;
+            if ($this->_charset) {
+                $headers[] = sprintf("%s: %s; charset=%s", self::CONTENT_TYPE, $this->enctype, $this->_charset);
+            } else {
+                $headers[] = sprintf("%s: %s", self::CONTENT_TYPE, $this->enctype);
+            }
         }
 
         // Set the user agent header
@@ -1089,8 +1125,11 @@
                     break;
 
                 case self::ENC_URLENCODED:
-                    // Encode body as application/x-www-form-urlencoded
-                    $this->setHeaders(self::CONTENT_TYPE, self::ENC_URLENCODED);
+                    $header = self::ENC_URLENCODED;
+                    if ($this->_charset) {
+                        $header .= '; charset=' . $this->_charset;
+                    }
+                    $this->setHeaders(self::CONTENT_TYPE, $header);
                     $body = http_build_query($this->paramsPost, '', '&');
                     break;
 
