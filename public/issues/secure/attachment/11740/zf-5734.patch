--- original.php	2009-02-10 13:56:54.000000000 -0800
+++ patched.php	2009-02-10 13:58:21.000000000 -0800
@@ -36,7 +36,7 @@
 {
     /**
      * Current dispatchable directory
-     * @var string
+     * @var array
      */
     protected $_curDirectory;
 
@@ -69,9 +69,10 @@
      *
      * @param string $path
      * @param string $module
+     * @param boolean $set Replace all paths for a module with the given path
      * @return Zend_Controller_Dispatcher_Standard
      */
-    public function addControllerDirectory($path, $module = null)
+    public function addControllerDirectory($path, $module = null, $set = false)
     {
         if (null === $module) {
             $module = $this->_defaultModule;
@@ -80,7 +81,17 @@
         $module = (string) $module;
         $path   = rtrim((string) $path, '/\\');
 
-        $this->_controllerDirectory[$module] = $path;
+        if ($set) {
+            $this->_controllerDirectory[$module] = array($path);
+        } else {
+            if (!array_key_exists($module, $this->_controllerDirectory)
+                || !is_array($this->_controllerDirectory[$module])) {
+
+                $this->_controllerDirectory[$module] = array();
+            }
+            array_unshift($this->_controllerDirectory[$module], $path);
+        }
+
         return $this;
     }
 
@@ -98,7 +109,7 @@
             $this->addControllerDirectory($directory, $module);
         } elseif (is_array($directory)) {
             foreach ((array) $directory as $module => $path) {
-                $this->addControllerDirectory($path, $module);
+                $this->addControllerDirectory($path, $module, true);
             }
         } else {
             require_once 'Zend/Controller/Exception.php';
@@ -209,10 +220,13 @@
             return true;
         }
 
-        $fileSpec    = $this->classToFilename($className);
-        $dispatchDir = $this->getDispatchDirectory();
-        $test        = $dispatchDir . DIRECTORY_SEPARATOR . $fileSpec;
-        return Zend_Loader::isReadable($test);
+        try {
+            $this->loadClass($className);
+        } catch (Zend_Controller_Dispatcher_Exception $e) {
+            return false;
+        }
+
+        return true;
     }
 
     /**
@@ -318,30 +332,27 @@
      */
     public function loadClass($className)
     {
-        $finalClass  = $className;
+        $finalClass = $className;
         if (($this->_defaultModule != $this->_curModule) 
             || $this->getParam('prefixDefaultModule')) 
         {
             $finalClass = $this->formatClassName($this->_curModule, $className);
         }
+
         if (class_exists($finalClass, false)) {
             return $finalClass;
         }
 
         $dispatchDir = $this->getDispatchDirectory();
-        $loadFile    = $dispatchDir . DIRECTORY_SEPARATOR . $this->classToFilename($className);
-
-        if (!include_once $loadFile) {
-            require_once 'Zend/Controller/Dispatcher/Exception.php';
-            throw new Zend_Controller_Dispatcher_Exception('Cannot load controller class "' . $className . '" from file "' . $loadFile . "'");
-        }
-
-        if (!class_exists($finalClass, false)) {
-            require_once 'Zend/Controller/Dispatcher/Exception.php';
-            throw new Zend_Controller_Dispatcher_Exception('Invalid controller class ("' . $finalClass . '")');
+        foreach ($dispatchDir as $dir) {
+            $loadFile = $dir . DIRECTORY_SEPARATOR . $this->classToFilename($className);
+            if (include_once $loadFile) {
+                return $finalClass;
+            }
         }
 
-        return $finalClass;
+        require_once 'Zend/Controller/Dispatcher/Exception.php';
+        throw new Zend_Controller_Dispatcher_Exception('Invalid controller: ' . $className);
     }
 
     /**
@@ -430,22 +441,11 @@
         $controllerDirs      = $this->getControllerDirectory();
         $this->_curModule    = $this->_defaultModule;
         $this->_curDirectory = $controllerDirs[$this->_defaultModule];
+
         if ($this->isValidModule($module)) {
-            $found = false;
-            if (class_exists($default, false)) {
-                $found = true;
-            } else {
-                $moduleDir = $controllerDirs[$module];
-                $fileSpec  = $moduleDir . DIRECTORY_SEPARATOR . $this->classToFilename($default);
-                if (Zend_Loader::isReadable($fileSpec)) {
-                    $found = true;
-                    $this->_curDirectory = $moduleDir;
-                }
-            }
-            if ($found) {
-                $request->setModuleName($module);
-                $this->_curModule    = $this->formatModuleName($module);
-            }
+            $this->_curDirectory = $controllerDirs[$module];
+            $request->setModuleName($module);
+            $this->_curModule = $this->formatModuleName($module);
         } else {
             $request->setModuleName($this->_defaultModule);
         }
@@ -457,7 +457,7 @@
      * Return the value of the currently selected dispatch directory (as set by
      * {@link getController()})
      *
-     * @return string
+     * @return array
      */
     public function getDispatchDirectory()
     {
