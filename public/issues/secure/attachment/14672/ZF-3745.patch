Index: library/Zend/Mail/Part.php
===================================================================
--- library/Zend/Mail/Part.php	(revision 24490)
+++ library/Zend/Mail/Part.php	(working copy)
@@ -86,6 +86,12 @@
      * @var int
      */
     protected $_messageNum = 0;
+    
+    /**
+     * Class to use when creating message parts
+     * @var string 
+     */
+    protected $_partClass;
 
     /**
      * Public constructor
@@ -122,6 +128,10 @@
             $this->_mail       = $params['handler'];
             $this->_messageNum = $params['id'];
         }
+        
+        if (isset($params['partclass'])) {
+            $this->setPartClass($params['partclass']);
+        }
 
         if (isset($params['raw'])) {
             Zend_Mime_Decode::splitMessage($params['raw'], $this->_headers, $this->_content);
@@ -140,6 +150,44 @@
             }
         }
     }
+    
+    /**
+     * Set name pf class used to encapsulate message parts
+     * @param string $class
+     * @return Zend_Mail_Part
+     */
+    public function setPartClass($class)
+    {
+        if ( !class_exists($class) ) {
+            /**
+             * @see Zend_Mail_Exception
+             */
+            require_once 'Zend/Mail/Exception.php';
+            throw new Zend_Mail_Exception("Class '{$class}' does not exist");
+        }
+        if ( !is_subclass_of($class, 'Zend_Mail_Part_Interface') ) {
+            /**
+             * @see Zend_Mail_Exception
+             */
+            require_once 'Zend/Mail/Exception.php';
+            throw new Zend_Mail_Exception("Class '{$class}' must implement Zend_Mail_Part_Interface");
+        }
+        
+        $this->_partClass = $class;
+        return $this;
+    }
+    
+    /**
+     * Retrieve the class name used to encapsulate message parts
+     * @return string 
+     */
+    public function getPartClass()
+    {
+        if ( !$this->_partClass ) {
+            $this->_partClass = __CLASS__;
+        }
+        return $this->_partClass;
+    }
 
     /**
      * Check if part is a multipart message
@@ -223,9 +271,10 @@
         if ($parts === null) {
             return;
         }
+        $partClass = $this->getPartClass();
         $counter = 1;
         foreach ($parts as $part) {
-            $this->_parts[$counter++] = new self(array('headers' => $part['header'], 'content' => $part['body']));
+            $this->_parts[$counter++] = new $partClass(array('headers' => $part['header'], 'content' => $part['body']));
         }
     }
 
Index: tests/Zend/Mail/MessageTest.php
===================================================================
--- tests/Zend/Mail/MessageTest.php	(revision 24490)
+++ tests/Zend/Mail/MessageTest.php	(working copy)
@@ -461,6 +461,53 @@
         $this->assertArrayHasKey('constructor', $flags);
         $this->assertEquals('constructor', $flags['constructor']);
     }
+    
+    /**
+     * @group ZF-3745
+     */
+    public function testBackwardsCompatibilityMaintainedWhenPartClassNotSpecified()
+    {
+        $message = new Zend_Mail_Message(array('file' => $this->_file));
+        $this->assertGreaterThan(0, count($message));
+        foreach ( $message as $part ) {
+            $this->assertEquals('Zend_Mail_Part', get_class($part));
+        }
+    }
+    
+    /**
+     * @group ZF-3745
+     */
+    public function testMessageAcceptsPartClassOverrideViaConstructor()
+    {
+        $message = new Zend_Mail_Message(array(
+            'file'      => $this->_file,
+            'partclass' => 'ZF3745_Mail_Part'
+        ));
+        $this->assertEquals('ZF3745_Mail_Part', $message->getPartClass());
+        
+        // Ensure message parts use the specified part class
+        $this->assertGreaterThan(0, count($message));
+        foreach ( $message as $part ) {
+            $this->assertEquals('ZF3745_Mail_Part', get_class($part));
+        }
+    }
+    
+    /**
+     * @group ZF-3745
+     */
+    public function testMessageAcceptsPartClassOverrideViaSetter()
+    {
+        $message = new Zend_Mail_Message(array('file' => $this->_file));
+        $message->setPartClass('ZF3745_Mail_Part');
+        $this->assertEquals('ZF3745_Mail_Part', $message->getPartClass());
+        
+        // Ensure message parts use the specified part class
+        $this->assertGreaterThan(0, count($message));
+        foreach ( $message as $part ) {
+            $this->assertEquals('ZF3745_Mail_Part', get_class($part));
+        }
+    }
+    
 }
 
 /**
@@ -472,4 +519,8 @@
     protected $_flags = array(
         'default'=>'yes!'
     );
-}
\ No newline at end of file
+}
+
+class ZF3745_Mail_Part extends Zend_Mail_Part
+{
+}
