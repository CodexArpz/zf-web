Index: tests/Zend/Controller/Router/RewriteTest.php
===================================================================
--- tests/Zend/Controller/Router/RewriteTest.php	(revision 18530)
+++ tests/Zend/Controller/Router/RewriteTest.php	(working copy)
@@ -700,6 +700,28 @@
         $url = $this->_router->assemble(array(),'chains_separator_bar');
         $this->assertEquals('/foo/bar',$url);
     }
+    
+    public function testRequestParamsUsedAsGlobalParam()
+    {
+        $route = new Zend_Controller_Router_Route(
+            '/articles/:id', 
+            array(
+                'controller' => 'blog',
+                'action'     => 'articles',
+            )
+        );
+        
+        $request = Zend_Controller_Front::getInstance()->getRequest();
+        $request->setParam('id', 777);
+        
+        $this->_router->addRoute('article-id', $route);
+        $this->_router->useRequestParametersAsGlobal(true);
+        $this->_router->route($request);
+        
+        $url = $this->_router->assemble(array(), 'article-id');
+        
+        $this->assertEquals('/articles/777', $url);
+    }
 }
 
 
Index: library/Zend/Controller/Router/Rewrite.php
===================================================================
--- library/Zend/Controller/Router/Rewrite.php	(revision 18530)
+++ library/Zend/Controller/Router/Rewrite.php	(working copy)
@@ -72,6 +72,14 @@
      * @var string
      */
     protected $_chainNameSeparator = '-';
+    
+    /**
+     * Determines if request parameters should be used as global parameters
+     * inside this router.
+     * 
+     * @var boolean
+     */
+    protected $_useCurrentParamsAsGlobal = false;
 
     /**
      * Add default routes which are used to mimic basic router behaviour
@@ -392,6 +400,13 @@
             }
         }
 
+        if($this->_useCurrentParamsAsGlobal) {
+        	$params = $request->getParams();
+            foreach($params as $param => $value) {
+            	$this->setGlobalParam($param, $value);
+            }
+        }            
+        
         return $request;
 
     }
@@ -464,7 +479,7 @@
     /**
      * Set the separator to use with chain names
      *
-     * @param  string $separator The separator to use
+     * @param string $separator The separator to use
      * @return Zend_Controller_Router_Rewrite
      */
     public function setChainNameSeparator($separator) {
@@ -481,4 +496,25 @@
     public function getChainNameSeparator() {
         return $this->_chainNameSeparator;
     }
+    
+    /**
+     * Determines/returns whether to use the request parameters as global parameters.
+     * 
+     * @param boolean|null $use 
+     *           Null/unset when you want to retrieve the current state.
+     *           True when request parameters should be global, false otherwise
+     * @return boolean|Zend_Controller_Router_Rewrite
+     *              Returns a boolean if first param isn't set, returns an
+     *              instance of Zend_Controller_Router_Rewrite otherwise.
+     *                                                 
+     */
+    public function useRequestParametersAsGlobal($use = null) {
+    	if($use === null) {
+    		return $this->_useCurrentParamsAsGlobal;
+    	}
+    	
+    	$this->_useCurrentParamsAsGlobal = (bool) $use;
+    	
+    	return $this;
+    }
 }
Index: library/Zend/Application/Resource/Router.php
===================================================================
--- library/Zend/Application/Resource/Router.php	(revision 18530)
+++ library/Zend/Application/Resource/Router.php	(working copy)
@@ -69,6 +69,10 @@
                 $this->_router->setChainNameSeparator($options['chainNameSeparator']);
             }
 
+            if (isset($options['useRequestParametersAsGlobal'])) {
+                $this->_router->useRequestParametersAsGlobal($options['useRequestParametersAsGlobal']);
+            }
+
             $this->_router->addConfig(new Zend_Config($options['routes']));
         }
         
