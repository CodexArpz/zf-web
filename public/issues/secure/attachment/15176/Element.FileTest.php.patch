Index: tests/Zend/Form/Element/FileTest.php
===================================================================
--- tests/Zend/Form/Element/FileTest.php	(revision 25025)
+++ tests/Zend/Form/Element/FileTest.php	(working copy)
@@ -221,6 +221,7 @@
 
     public function testFileInSubSubSubform()
     {
+        // Create form
         $form = new Zend_Form();
         $element = new Zend_Form_Element_File('file1');
         $element2 = new Zend_Form_Element_File('file2');
@@ -238,8 +239,25 @@
 
         $form->setView(new Zend_View());
         $output = (string) $form;
-        $this->assertContains('name="file1"', $output);
-        $this->assertContains('name="file2"', $output);
+
+        // Tests
+        $this->assertContains(
+            'name="subform3[subform2][subform1][subform0][file1]"',
+            $output
+        );
+        $this->assertContains(
+            'id="subform3-subform2-subform1-subform0-file1"',
+            $output
+        );
+
+        $this->assertContains(
+            'name="subform3[subform2][subform1][subform0][file2]"',
+            $output
+        );
+        $this->assertContains(
+            'id="subform3-subform2-subform1-subform0-file2"',
+            $output
+        );
     }
 
     public function testMultiFileInSubSubSubform()
@@ -260,8 +278,15 @@
 
         $form->setView(new Zend_View());
         $output = (string) $form;
-        $this->assertContains('name="file[]"', $output);
-        $this->assertEquals(2, substr_count($output, 'file[]'));
+        $this->assertContains(
+            'name="subform3[subform2][subform1][subform0][file][]"',
+            $output
+        );
+        $this->assertContains(
+            'id="subform3-subform2-subform1-subform0-file-0"',
+            $output
+        );
+        $this->assertEquals(2, substr_count($output, '[file][]'));
     }
 
     public function testMultiFileWithOneFile()
@@ -501,10 +526,14 @@
             $this->markTestSkipped(__CLASS__ . '::' . __METHOD__ . ' requires PHP 5.3.0 or greater');
             return;
         }
-        $this->element->addPrefixPath('Zend\Form\Element\FileTest\Adapter', dirname(__FILE__) . '/_files/TransferAdapter', 'transfer_adapter');
+        $this->element->addPrefixPath(
+            'Zend\Form\Element\FileTest\Adapter',
+            dirname(__FILE__) . '/_files/TransferAdapter',
+            'transfer_adapter'
+        );
         $this->element->setTransferAdapter('Bar');
         $test = $this->element->getTransferAdapter();
-        $this->assertType('\Zend\Form\Element\FileTest\Adapter\Bar', $test);
+        $this->assertTrue($test instanceof \Zend\Form\Element\FileTest\Adapter\Bar);
     }
 }
 
