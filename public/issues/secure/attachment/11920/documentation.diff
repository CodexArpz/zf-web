--- documentation/manual/en/module_specs/Zend_Service_Gravatar.xml	(revision 15351)
+++ documentation/manual/en/module_specs/Zend_Service_Gravatar.xml	(working copy)
@@ -5,33 +5,51 @@
         <title>Introduction</title>
 
         <para>
-            <code>Zend_Service_Gravatar</code> provides a client for the <ulink
-                url="http://site.gravatar.com/site/implement">Gravatar Web Service</ulink>.
-            With this component you can provide to your users ability to use 
-            avatar images which are globally recognized.
+            <ulink url="http://site.gravatar.com/site/implement">Gravatar</ulink>
+            is a centralized personal avatar hosting solution, allowing users to upload
+            their avatar images once and use them on Gravatar-enabled sites all over
+            the web.  Gravatar users associate avatar images with email addresses;
+            subsequently, by using those email addresses when contributing content to
+            other sites, they can make it possible for those other sites to display
+            their avatars.
         </para>
+
+        <para>
+            <code>Zend_Service_Gravatar</code> is a simple client implementation of
+            the Gravatar service, allowing you to easily pull your user’s Gravatars
+            in alongside their contributed content.
+        </para>
     </sect2>
 
-    <sect2 id="zend.service.gravatar.simplestuse">
-        <title>Simplest use</title>
+    <sect2 id="zend.service.gravatar.displaying">
+        <title>Displaying a Gravatar</title>
 
         <para>
-            <code>Zend_Service_Gravatar::getUri()</code> is used to 
-            generate URI of the avatar for given e-mail address.
+            To get started, simply create a new <code>Zend_Service_Gravatar</code>
+            instance, passing it the user’s email address as its only argument:
         </para>
 
+        <example id="zend.service.gravatar.initialization.example-1">
+            <title>Initializing Zend_Service_Gravatar</title>
+
+            <programlisting role="php"><![CDATA[
+$gravatar = new Zend_Service_Gravatar('john.doe@example.com');
+]]>
+            </programlisting>
+        </example>
+
         <para>
-            The <code>getUri()</code> method will return URI for the avatar
-            image. It works blindly - if image doesn't exist, default image 
-            from Web Service will be printed without any checks.
+            Once you’ve instantiated your <code>Zend_Service_Gravatar</code>
+            object, you can use the <code>getUri()</code> method to retrieve
+            the image’s URI.  <code>getUri()</code> works blindly—if the supplied
+            email address is not on file with the Gravatar service, a default
+            image will automatically be used instead.
         </para>
 
-        <example id="zend.service.gravatar.simplestuse.example-1">
+        <example id="zend.service.gravatar.displaying.example-1">
             <title>getUri() Usage</title>
 
-            <programlisting role="php"><![CDATA[<?php
-$gravatar = new Zend_Service_Gravatar('john.doe@example.com'); 
-
+            <programlisting role="php"><![CDATA[
 echo '<img src="' . $gravatar->getUri() . '" />' . "\n"; 
 ]]>
             </programlisting>
@@ -40,28 +58,27 @@
     </sect2>
 
     <sect2 id="zend.service.gravatar.isvalid">
-        <title>Check for Gravatar</title>
+        <title>Validating a Gravatar</title>
 
         <para>
-            <code>Zend_Service_Gravatar::isValid()</code> is used to
-            determine if the avatar provided by the Gravatar Web Service is
-            valid. It has no arguments. 
+            Occasionally you may want to test a user’s email address to see if
+            it has an associated Gravatar <emphasis>before</emphasis> displaying
+            the image to the user.  To do this, you can use the
+            <code>Zend_Service_Gravatar::isValid()</code> method as follows:
         </para>
 
-        <para>
-            The <code>isValid()</code> method will return either true or
-            false, and throw an exception if the response is not successful.
-        </para>
-
         <example id="zend.service.gravatar.isvalid.example-1">
             <title>isValid() Usage</title>
 
-            <programlisting role="php"><![CDATA[<?php
+            <programlisting role="php"><![CDATA[
 $gravatar = new Zend_Service_Gravatar('john.doe@example.com'); 
 
 if ($gravatar->isValid()) {
-    //Avatar is valid. Let's print it.
+    // Provided email has an avatar; let's print it.
     echo '<img src="' . $gravatar->getUri() . '" />' . "\n";
+} else {
+    // Provided email does not have an avatar.
+    echo '(no avatar available)';
 }]]>
             </programlisting>
         </example>
@@ -72,58 +89,91 @@
         <title>Customizing Gravatar</title>
 
         <para>
-            You can customize avatar image passing an aray of parameters to
-            class constructor or to 
-            <code>Zend_Service_Gravatar::setParam()</code> method. 
+            Gravatar supports a variety of parameters affecting the
+            final rendered image; you can supply these parameters to 
+            <code>Zend_Service_Gravatar</code> either by passing them 
+            to either the constructor or the <code>Zend_Service_Gravatar::setParams()</code>
+            method.
         </para>
         
         <para>
-            You can use parameters:
+            The following parameters are supported:
         </para>
 
-        <itemizedlist>
+        <table id="zend.service.gravatar.customizing.parameters">
+            <title>Parameters supported by Zend_Service_Gravatar</title>
 
-            <listitem>
-                <para>
-                    <code>r (rating)</code> - parameter may follow with a value of
-                    "g" (General Audiences), "pg" (Parental Guidance Suggested), 
-                    "r" (Restricted) or "x" (No One 17 And Under Admitted) that 
-                    determines the highest rating that will be returned.
-                </para>
-            </listitem>
+            <tgroup cols="3" align="left" colsep="1" rowsep="1">
+                <thead>
+                    <row>
+                        <entry>Parameter</entry>
+                        <entry>Default value</entry>
+                        <entry>Possible values</entry>
+                        <entry>Description</entry>
+                    </row>
+                </thead>
+                <tbody>
 
-            <listitem>
-                <para>
-                    <code>s (size)</code> - parameter specifies desired width and
-                    height of avatar image. Valid values are from 1 to 512. Any
-                    bigger size will cause the original avatar image will
-                    be resampled.
-                </para>
-            </listitem>
+                    <row>
+                        <entry>r</entry>
+                        <entry>g</entry>
+                        <entry>g, pg, r, or x</entry>
+                        <entry>Rating. If specified, Gravatar will only return a URI
+                            for images whose rating is equal to or less restrictive than
+                            the rating provided; otherwise, the default image will be
+                            used. For instance, a value of "pg"
+                            here will cause Gravatar to return images with
+                            a rating of either "pg" or "g".</entry>
+                    </row>
 
-            <listitem>
-                <para>
-                    <code>d (default)</code> - parameter specifies the URI of image
-                    that should be returned if either requested e-mail address
-                    has no associated avatar image, or image is rated higher than
-                    is allowed.
-                </para>
-            </listitem>
+                    <row>
+                        <entry>s</entry>
+                        <entry>80</entry>
+                        <entry>integer between 1 and 512</entry>
+                        <entry>Size. The generated image will use the provided value
+                            for both its width and height. Any value larger than 512
+                            will cause the original image to be resampled.</entry>
+                    </row>
 
-        </itemizedlist>
-
+                    <row>
+                        <entry>d</entry>
+                        <entry>(none)</entry>
+                        <entry>valid URI, or one of "identicon", "monsterid", or "wavatar"</entry>
+                        <entry>Default. This parameter specifies the URI of the image
+                            that should be returned if either the request email address
+                            has no associated avatar image, or if the image is rated
+                            higher than is allowed via the "r" parameter.</entry>
+                    </row>
+                </tbody>
+            </tgroup>
+        </table>
+        
         <example id="zend.service.gravatar.customizing.example-1">
-            <title>Customizing Gravatar</title>
+            <title>Specifying Parameters in the Constructor</title>
 
-            <programlisting role="php"><![CDATA[<?php
-$params = array(
-    'r' => 'x',
+            <programlisting role="php"><![CDATA[
+$gravatar = new Zend_Service_Gravatar('john.doe@example.com', array(
+    'r' => 'pg',
     's' => '50',
-    'd' => 'http://www.example.com/avatar/',
-);
+    'd' => 'http://www.example.com/avatar/default-avatar.jpg',
+));
 
-$gravatar = new Zend_Service_Gravatar('john.doe@example.com', $params); 
+echo '<img src="' . $gravatar->getUri() . '" />' . "\n";
+]]>
+            </programlisting>
+        </example>
 
+        <example id="zend.service.gravatar.customizing.example-2">
+            <title>Specifying Parameters via setParam()</title>
+
+            <programlisting role="php"><![CDATA[
+$gravatar = new Zend_Service_Gravatar('john.doe@example.com');
+$gravatar->setParams(array(
+    'r' => 'pg',
+    's' => '50',
+    'd' => 'http://www.example.com/avatar/default-avatar.jpg',
+));
+
 echo '<img src="' . $gravatar->getUri() . '" />' . "\n";
 ]]>
             </programlisting>
@@ -132,18 +182,18 @@
     </sect2>
 
     <sect2 id="zend.service.gravatar.accessors">
-        <title>Zend-specific Accessor Methods</title>
+        <title>Accessor Methods</title>
 
         <para>
             <code>Zend_Service_Gravatar</code> has several additional accessors
-            that may be used for modifying internal properties.
+            that may be used for working with internal properties.
         </para>
 
         <itemizedlist>
 
             <listitem>
                 <para>
-                    <code>getGravatarId()</code> allow you to retrieve generated 
+                    <code>getGravatarId()</code> allows you to retrieve the generated 
                     Gravatar ID.
                 </para>
             </listitem>
@@ -151,7 +201,7 @@
             <listitem>
                 <para>
                     <code>getEmail()</code> and <code>setEmail()</code>
-                    allow you to retrieve and modify the e-mail address used to 
+                    allow you to retrieve and modify the email address used to 
                     make the request.
                 </para>
             </listitem>
@@ -159,11 +209,11 @@
             <listitem>
                 <para>
                     <code>getParams()</code> and <code>setParams()</code>
-                    allow you to retrieve and modify params used to 
-                    make the request.
+                    allow you to retrieve and modify parameters used in 
+                    the request.
                 </para>
             </listitem>
 
         </itemizedlist>
     </sect2>
-</sect1>
\ No newline at end of file
+</sect1>
