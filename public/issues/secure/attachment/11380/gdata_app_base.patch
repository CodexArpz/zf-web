Index: Zend/Gdata/App/Base.php
===================================================================
--- Zend/Gdata/App/Base.php	(revision 9570)
+++ Zend/Gdata/App/Base.php	(working copy)
@@ -187,15 +187,61 @@
             $element->appendChild($element->ownerDocument->createTextNode($this->_text));
         }
         foreach ($this->_extensionElements as $extensionElement) {
+                if($extensionElement == null){continue;} //TODO consider some sort of warning?
             $element->appendChild($extensionElement->getDOM($element->ownerDocument));
         }
         foreach ($this->_extensionAttributes as $attribute) {
+                if($attribute == null){continue;} //TODO consider some sort of warning?
             $element->setAttribute($attribute['name'], $attribute['value']);
         }
         return $element;
     }
 
     /**
+     * Convenience function for setting DOM attributes, handles nulls gracefully
+     *
+     * @param DOMElement $element
+     * @param string $name
+     * @param string $value
+     */
+    public static function setDomAttribute($element,$name,$value){
+        if($value == null){
+            $element->removeAttribute($name);
+        }else{
+            $element->setAttribute($name,$value);
+        }
+    }
+
+    /**
+     * Convenience function for setting a single DOM child, handles nulls gracefully
+     *
+     * @param DOMElement $element Parent element
+     * @param Zend_Gdata_App_Base $value Child Gdata object. Type hinting not used since it would cause errors on null.
+     */
+    public static function setDomChild($element, $value){
+        if ($value != null) {
+            assert($value instanceof Zend_Gdata_App_Base);
+            $element->appendChild($value->getDOM($element->ownerDocument));
+        }
+    }
+    /**
+     * Convenience function for setting a single DOM child, handles nulls gracefully
+     *
+     * @param DOMElement $element Parent element
+     * @param array $values An array of children elements, expected to be subclasses of Zend_Gdata_App_Base
+     */
+    public static function setDomChildren($element, array $values){
+        if ($values != null) {
+            foreach($values as $child){
+                // We could reuse self::setDomChild(), but PHP5 has some weird 
+                // late static binding issues that may arise in the future.
+                if($child == null){continue;}
+                assert($child instanceof Zend_Gdata_App_Base);                    
+                $element->appendChild($child->getDOM($element->ownerDocument));
+            }
+        }
+    }
+    /**
      * Given a child DOMNode, tries to determine how to map the data into
      * object instance members.  If no mapping is defined, Extension_Element
      * objects are created and stored in an array.
@@ -453,7 +499,8 @@
      */
     public function __toString()
     {
-        return $this->getText();
+        // Ensure cast to string because returning null from this magic method can cause errors
+        return((string)$this->getText());
     }
 
 }

