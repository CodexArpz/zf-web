Index: library/Zend/Uri.php
===================================================================
--- library/Zend/Uri.php	(revision 18173)
+++ library/Zend/Uri.php	(working copy)
@@ -149,10 +149,16 @@
     /**
      * Set global configuration options
      *
-     * @param array $config
+     * @param Zend_Config|array $config
      */
-    static public function setConfig(array $config)
+    static public function setConfig($config)
     {
+        if ($config instanceof Zend_Config) {
+            $config = $config->toArray();
+        } elseif (!is_array($config)) {
+            throw new Zend_Uri_Exception("Config must be an array or an instance of Zend_Config.");
+        }
+        
         foreach ($config as $k => $v) {
             self::$_config[$k] = $v;
         }
Index: tests/Zend/UriTest.php
===================================================================
--- tests/Zend/UriTest.php	(revision 18173)
+++ tests/Zend/UriTest.php	(working copy)
@@ -35,6 +35,11 @@
 require_once 'Zend/Uri.php';
 
 /**
+ * Zend_Config
+ */
+require_once 'Zend/Config.php';
+
+/**
  * @category   Zend
  * @package    Zend_Uri
  * @subpackage UnitTests
@@ -97,6 +102,38 @@
     }
 
     /**
+     * Tests that Zend_Uri::setConfig() allows Zend_Config
+     * 
+     * @see ZF-5578: Zend_Config support in Zend_Uri
+     */
+    public function testSetConfigWithArray()
+    {
+        Zend_Uri::setConfig(array('allow_unwise' => true));
+    }
+    
+    /**
+     * Tests that Zend_Uri::setConfig() allows Array
+     * 
+     * @see ZF-5578: Zend_Config support in Zend_Uri
+     */
+    public function testSetConfigWithZendConfig()
+    {
+        Zend_Uri::setConfig(new Zend_Config(array('allow_unwise' => true)));
+    }
+    
+    /**
+     * Tests that Zend_Uri::setConfig() throws Zend_Uri_Exception if no array
+     * nor Zend_Config is given as first parameter
+     * 
+     * @see ZF-5578: Zend_Config support in Zend_Uri
+     * @expectedException Zend_Uri_Exception
+     */
+    public function testSetConfigInvalid()
+    {
+        Zend_Uri::setConfig('This should cause an exception');
+    }
+
+    /**
      * Tests that an invalid $uri throws an exception and that the
      * message of that exception matches $regex.
      *
