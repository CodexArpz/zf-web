Index: Action/Interface.php
===================================================================
--- Action/Interface.php	(revision 0)
+++ Action/Interface.php	(revision 0)
@@ -0,0 +1,24 @@
+<?php
+/**
+ * General Interface for Action Controllers that can be dispatched
+ * with the Zend_Controller_Dispatcher_Standard.
+ */
+interface Zend_Controller_Action_Interface
+{
+    /**
+     * Construct Action Controller
+     *
+     * @param Zend_Controller_Request_Abstract $request
+     * @param Zend_Controller_Response_Abstract $response
+     * @param array $invokeArgs
+     */
+    public function __construct(Zend_Controller_Request_Abstract $request, Zend_Controller_Response_Abstract $response, array $invokeArgs = array());
+
+    /**
+     * Dispatch the requested action
+     *
+     * @param string $action Method name of action
+     * @return void
+     */
+    public function dispatch($action);
+}
\ No newline at end of file
Index: Action.php
===================================================================
--- Action.php	(revision 11496)
+++ Action.php	(working copy)
@@ -18,6 +18,9 @@
  * @license    http://framework.zend.com/license/new-bsd     New BSD License
  */
 
+/** Zend_Controller_Action_Interface */
+require_once 'Zend/Controller/Action/Interface.php';
+
 /** Zend_Controller_Action_HelperBroker */
 require_once 'Zend/Controller/Action/HelperBroker.php';
 
@@ -30,7 +33,7 @@
  * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (http://www.zend.com)
  * @license    http://framework.zend.com/license/new-bsd     New BSD License
  */
-abstract class Zend_Controller_Action
+abstract class Zend_Controller_Action implements Zend_Controller_Action_Interface
 {
     /**
      * Word delimiters (used for normalizing view script paths)
Index: Dispatcher/Standard.php
===================================================================
--- Dispatcher/Standard.php	(revision 11517)
+++ Dispatcher/Standard.php	(working copy)
@@ -134,8 +134,8 @@
 
     /**
      * Remove a controller directory by module name
-     * 
-     * @param  string $module 
+     *
+     * @param  string $module
      * @return bool
      */
     public function removeControllerDirectory($module)
@@ -259,7 +259,7 @@
          * arguments; throw exception if it's not an action controller
          */
         $controller = new $className($request, $this->getResponse(), $this->getParams());
-        if (!$controller instanceof Zend_Controller_Action) {
+        if (!$controller instanceof Zend_Controller_Action_Interface) {
             require_once 'Zend/Controller/Dispatcher/Exception.php';
             throw new Zend_Controller_Dispatcher_Exception("Controller '$className' is not an instance of Zend_Controller_Action");
         }
@@ -319,8 +319,8 @@
     public function loadClass($className)
     {
         $finalClass  = $className;
-        if (($this->_defaultModule != $this->_curModule) 
-            || $this->getParam('prefixDefaultModule')) 
+        if (($this->_defaultModule != $this->_curModule)
+            || $this->getParam('prefixDefaultModule'))
         {
             $finalClass = $this->formatClassName($this->_curModule, $className);
         }
