Index: tests/Zend/Form/Decorator/HtmlTagTest.php
===================================================================
--- tests/Zend/Form/Decorator/HtmlTagTest.php	(revision 23669)
+++ tests/Zend/Form/Decorator/HtmlTagTest.php	(working copy)
@@ -159,6 +159,46 @@
         }
     }
 
+    /**
+     * @see ZF-10450
+     * @group ZF-10450
+     */
+    public function testSelfClosingTagThrowsExceptionOnNoPlacement()
+    {
+        $element = new Zend_Form_Element('foo');
+        $options = array('tag' => 'div', 'class' => 'foobar', 'id' => 'foo', 'selfClosing' => true);
+        $this->decorator->setElement($element)
+             ->setOptions($options);
+        try {
+            $html = $this->decorator->render('');
+            $this->fail('Setting no placement for self closing tag should raise exception');
+        } catch (Zend_Form_Decorator_Exception $e) {
+            $this->assertContains('Must set a placement for self closing tags', $e->getMessage());
+        }
+    }
+
+    /**
+     * @see ZF-10450
+     * @group ZF-10450
+     */
+    public function testSelfClosingTagCanRender()
+    {
+        $element = new Zend_Form_Element('foo');
+        $options = array('tag' => 'div', 'class' => 'foobar', 'id' => 'foo', 'selfClosing' => true, 'placement' => 'append');
+        $this->decorator->setElement($element)
+             ->setOptions($options);
+        $html = $this->decorator->render('');
+        foreach ($options as $key => $value) {
+            if ('tag' == $key) {
+                $this->assertContains('<' . $value, $html);
+                $this->assertNotContains('</' . $value, $html);
+                $this->assertContains('/>', $html);
+            } else if (($key !== 'selfClosing') && ($key !== 'placement')) {
+                $this->assertContains($key . '="' . (string) $value . '"', $html);
+            }
+        }
+    }
+
     public function testArrayAttributesAreRenderedAsSpaceSeparatedLists()
     {
         $element = new Zend_Form_Element('foo');
@@ -193,6 +233,22 @@
         $this->assertRegexp('#(content).*?(<div>)#', $html, $html);
     }
 
+    /**
+     * @see ZF-10450
+     * @group ZF-10450
+     */
+    public function testAppendPlacementWithSelfClosingRendersOpeningTagFollowingContent()
+    {
+        $options = array(
+            'selfClosing'  => true,
+            'tag'          => 'div',
+            'placement'    => 'append'
+        );
+        $this->decorator->setOptions($options);
+        $html = $this->decorator->render('content');
+        $this->assertRegexp('#(content).*?(<div\s?/>)#', $html, $html);
+    }
+
     public function testPrependPlacementWithCloseOnlyRendersClosingTagBeforeContent()
     {
         $options = array(
@@ -217,6 +273,70 @@
         $this->assertRegexp('#(<div>).*?(content)#', $html, $html);
     }
 
+    /**
+     * @see ZF-10450
+     * @group ZF-10450
+     */
+    public function testPrependPlacementWithSelfClosingRendersOpeningTagFollowingContent()
+    {
+        $options = array(
+            'selfClosing'  => true,
+            'tag'          => 'div',
+            'placement'    => 'prepend'
+        );
+        $this->decorator->setOptions($options);
+        $html = $this->decorator->render('content');
+        $this->assertRegexp('#(<div\s/?>).*?(content)#', $html, $html);
+    }
+
+    /**
+     * @see ZF-10450
+     * @group ZF-10450
+     */
+    public function testSelfClosingIsXhtmlCompliant()
+    {
+        $doctypeHelper = new Zend_View_Helper_Doctype();
+        $doctypeHelper->doctype('XHTML1_STRICT');
+
+        $element = new Zend_Form_Element('foo');
+        $element->setView($this->getView());
+
+        $options = array(
+            'selfClosing'  => true,
+            'placement'    => 'prepend'
+        );
+        $this->decorator->setElement($element)
+                        ->setOptions($options);
+
+        $html = $this->decorator->render('content');
+        $this->assertRegexp('#(<div\s/>).*?(content)#', $html, $html);
+        
+
+    }
+
+    /**
+     * @see ZF-10450
+     * @group ZF-10450
+     */
+    public function testSelfClosingIsHtmlCompliant()
+    {
+        $doctypeHelper = new Zend_View_Helper_Doctype();
+        $doctypeHelper->doctype('HTML4_LOOSE');
+
+        $element = new Zend_Form_Element('foo');
+        $element->setView($this->getView());
+
+        $options = array(
+            'selfClosing'  => true,
+            'placement'    => 'prepend'
+        );
+        $this->decorator->setElement($element)
+                        ->setOptions($options);
+
+        $html = $this->decorator->render('content');
+        $this->assertRegexp('#(<div>).*?(content)#', $html, $html);
+    }
+
     public function testTagIsInitiallyDiv()
     {
         $this->assertEquals('div', $this->decorator->getTag());
