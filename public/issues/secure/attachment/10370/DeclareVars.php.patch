Index: Helper/DeclareVars.php
===================================================================
--- Helper/DeclareVars.php	(revision 0)
+++ Helper/DeclareVars.php	(revision 0)
@@ -0,0 +1,73 @@
+<?php
+/**
+ * Zend Framework
+ *
+ * LICENSE
+ *
+ * This source file is subject to version 1.0 of the Zend Framework
+ * license, that is bundled with this package in the file LICENSE, and
+ * is available through the world-wide-web at the following URL:
+ * http://www.zend.com/license/framework/1_0.txt. If you did not receive
+ * a copy of the Zend Framework license and are unable to obtain it
+ * through the world-wide-web, please send a note to license@zend.com
+ * so we can mail you a copy immediately.
+ *
+ * @package    Zend_View
+ * @subpackage Helpers
+ * @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (http://www.zend.com)
+ * @version    $Id$
+ * @license    http://www.zend.com/license/framework/1_0.txt Zend Framework License version 1.0
+ */
+
+/**
+ * Helper for making easy links and getting urls that depend on the routes and router
+ * 
+ * @package    Zend_View
+ * @subpackage Helpers
+ * @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://www.zend.com/license/framework/1_0.txt Zend Framework License version 1.0
+ */
+class Zend_View_Helper_DeclareVars {
+    
+    /**
+     * The view object that created this helper object.
+     * @var Zend_View
+     */
+    public $view;
+
+    /**
+     * Set any unset vars to avoid E_STRICT notices when the view uses them.
+     *
+     * When a view uses an undefined variable with E_STRICT enabled, use this
+     * method to avoid warnings without disabling E_STRICT.  For each variable listed,
+     * if it is not set in the view object, then this helper sets it to an empty string. 
+     * Thus, typos continue to result in warnings, but correctly spelled variables will not.
+     *
+     * Usage:
+     *      declareVars('varName1', 'varName2',
+     *          array('varName3' => 'defaultValue',
+     *                'varName4' => array()
+     *          )
+     *      );
+     * 
+     * @access public
+     * 
+     * @param string  variable number of arguments, all string names of variables to test
+     * 
+     * @return void
+     */
+    public function declareVars()
+    {
+        $args = func_get_args();
+        $view = & $this->view;
+        foreach($args as $key) {
+            if (is_array($key)) {
+                foreach ($key as $name => $value) {
+                    $view->$name = $value;
+                }
+            } else if (!isset($view->$key)) {
+                $view->$key = '';
+            }
+        }
+    }
+}

Property changes on: Helper/DeclareVars.php
___________________________________________________________________
Name: svn:keywords
   + Id

Index: Abstract.php
===================================================================
--- Abstract.php	(revision 4225)
+++ Abstract.php	(working copy)
@@ -153,17 +153,6 @@
     }
 
     /**
-     * Prevent E_NOTICE for nonexistent values
-     * 
-     * @param string $key 
-     * @return null
-     */
-    public function __get($key)
-    {
-        return null;
-    }
-
-    /**
      * Allows testing with empty() and isset() to work inside
      * templates.
      *
@@ -230,6 +219,9 @@
             // load class and create instance
             $class = $this->_loadClass('helper', $name);
             $this->_helper[$name] = new $class();
+            if (property_exists($class, 'view')) {
+                $this->_helper[$name]->view = $this;
+            }
         }
 
         // call the helper method
