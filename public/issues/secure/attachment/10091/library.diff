--- library/Zend/Config.php	(revision 965)
+++ library/Zend/Config.php	(working copy)
@@ -113,7 +113,80 @@
         }
     }
 
+   /**
+     * Return requested value
+     *
+     * @param string $name
+     * @param mixed  $default
+     * @return mixed
+     */
+    public function get($name,$default=null)
+    {
+        $r = $default;
+        $parts = explode('.',$name);
+        $part = array_shift($parts);
+        if (isset($this->_data[$part])) {
+            $result = $this->_data[$part];	
+        }
+        if ($result instanceof Zend_Config) {
+            $r = $result->get(implode('.',$parts),$default);
+        } elseif (sizeof($parts) > 0) {
+            $r = $default;
+        } else {
+            $r = $result;
+        }
+        return $r;
+    }
+    
     /**
+     * Return requested value
+     *
+     * @param string $name
+     * @param string  $default
+     * @return string
+     */
+    public function getString($name,$default=null)
+    {
+    	return (string)$this->get($name,(string)$default);
+    }
+
+    /**
+     * Return requested value
+     *
+     * @param string $name
+     * @param bool  $default
+     * @return bool
+     */    
+    public function getBoolean($name,$default=null)
+    {
+    	return (boolean)$this->get($name,(boolean)$default);
+    }    
+
+    /**
+     * Return requested value
+     *
+     * @param string $name
+     * @param float  $default
+     * @return float
+     */    
+    public function getFloat($name,$default=null)
+    {
+    	return (float)$this->get($name,(float)$default);
+    }
+
+    /**
+     * Return requested value
+     *
+     * @param string $name
+     * @param integer  $default
+     * @return integer
+     */    
+    public function getInteger($name,$default=null)
+    {
+    	return (int)$this->get($name,(int)$default);
+    }
+    
+    /**
      * Return an associative array of the stored data.
      *
      * @return array
