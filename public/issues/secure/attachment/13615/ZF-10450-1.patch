Index: library/Zend/Form/Decorator/HtmlTag.php
===================================================================
--- library/Zend/Form/Decorator/HtmlTag.php	(revision 23669)
+++ library/Zend/Form/Decorator/HtmlTag.php	(working copy)
@@ -37,6 +37,7 @@
  *   before content.
  * - openOnly: render opening tag only
  * - closeOnly: render closing tag only
+ * - selfClosing: self closing tag
  *
  * Any other options passed are processed as HTML attributes of the tag.
  *
@@ -180,27 +181,67 @@
     }
 
     /**
+     * Get formatted self closing tag
+     *
+     * @param   string $tag
+     * @param   array $attribs
+     * @return  string
+     */
+    protected function _getSelfClosingTag($tag, array $attribs = null)
+    {
+        $element = $this->getElement();
+        $view = null;
+
+        if (($element instanceof Zend_Form_Element) && (null !== $element)) {
+            $view = $element->getView();
+        }
+
+        $html = '<' . $tag;
+        if (null !== $attribs) {
+            $html .= $this->_htmlAttribs($attribs);
+        }
+
+        // XHTML or HTML end tag?
+        $endTag = ' />';
+        if (($view instanceof Zend_View_Abstract) && !$view->doctype()->isXhtml()) {
+            $endTag = '>';
+        }
+
+        $html .= $endTag;
+        return $html;
+    }
+
+    /**
      * Render content wrapped in an HTML tag
      *
      * @param  string $content
+     * @throws Zend_Form_Decorator_Exception on set self closing with no placement
      * @return string
      */
     public function render($content)
     {
-        $tag       = $this->getTag();
-        $placement = $this->getPlacement();
-        $noAttribs = $this->getOption('noAttribs');
-        $openOnly  = $this->getOption('openOnly');
-        $closeOnly = $this->getOption('closeOnly');
+        $tag         = $this->getTag();
+        $placement   = $this->getPlacement();
+        $noAttribs   = $this->getOption('noAttribs');
+        $openOnly    = $this->getOption('openOnly');
+        $closeOnly   = $this->getOption('closeOnly');
+        $selfClosing = $this->getOption('selfClosing');
         $this->removeOption('noAttribs');
         $this->removeOption('openOnly');
         $this->removeOption('closeOnly');
+        $this->removeOption('selfClosing');
 
         $attribs = null;
         if (!$noAttribs) {
             $attribs = $this->getOptions();
         }
 
+        if ($selfClosing && ($placement !== self::APPEND) && ($placement !== self::PREPEND)) {
+            require_once 'Zend/Form/Decorator/Exception.php';
+            throw new Zend_Form_Decorator_Exception('Must set a placement for self closing tags');
+        }
+
+
         switch ($placement) {
             case self::APPEND:
                 if ($closeOnly) {
@@ -209,6 +250,9 @@
                 if ($openOnly) {
                     return $content . $this->_getOpenTag($tag, $attribs);
                 }
+                if ($selfClosing) {
+                    return $content . $this->_getSelfClosingTag($tag, $attribs);
+                }
                 return $content
                      . $this->_getOpenTag($tag, $attribs)
                      . $this->_getCloseTag($tag);
@@ -219,6 +263,9 @@
                 if ($openOnly) {
                     return $this->_getOpenTag($tag, $attribs) . $content;
                 }
+                if ($selfClosing) {
+                    return $this->_getSelfClosingTag($tag, $attribs) . $content;
+                }
                 return $this->_getOpenTag($tag, $attribs)
                      . $this->_getCloseTag($tag)
                      . $content;
