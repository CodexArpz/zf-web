diff --git a/library/Zend/Validate/Date.php b/library/Zend/Validate/Date.php
index 15dc400..1a260d8 100644
--- a/library/Zend/Validate/Date.php
+++ b/library/Zend/Validate/Date.php
@@ -173,7 +173,7 @@ class Zend_Validate_Date extends Zend_Validate_Abstract
              $value instanceof Zend_Date) {
             require_once 'Zend/Date.php';
             if (!Zend_Date::isDate($value, $this->_format, $this->_locale)) {
-                if ($this->_checkFormat($value) === false) {
+                if (is_string($value) && $this->_checkFormat($value) === false) {
                     $this->_error(self::FALSEFORMAT);
                 } else {
                     $this->_error(self::INVALID_DATE);
diff --git a/tests/Zend/Validate/DateTest.php b/tests/Zend/Validate/DateTest.php
index ecc395b..1ccd933 100644
--- a/tests/Zend/Validate/DateTest.php
+++ b/tests/Zend/Validate/DateTest.php
@@ -241,6 +241,19 @@ class Zend_Validate_DateTest extends PHPUnit_Framework_TestCase
     }
 
     /**
+     * @group ZF-11926
+     */
+    public function testArrayValidationErrorMessage()
+    {
+        $array = array('day' => 29, 'month' => 2, 'year' => 2012);
+        $this->assertTrue($this->_validator->isValid($array), "array expected to be valid");
+        $array['day'] = 30;
+        $this->assertFalse($this->_validator->isValid($array), "array expected to be not valid");
+        $this->assertArrayHasKey(Zend_Validate_Date::INVALID_DATE, $this->_validator->getMessages());
+    }
+
+
+    /**
      * Ignores a raised PHP error when in effect, but throws a flag to indicate an error occurred
      *
      * @param  integer $errno
