Index: library/Zend/Db/Adapter/Pdo/Mysql.php
===================================================================
--- library/Zend/Db/Adapter/Pdo/Mysql.php	(revision 12689)
+++ library/Zend/Db/Adapter/Pdo/Mysql.php	(working copy)
@@ -161,6 +161,10 @@
                 $row[$type] = 'decimal';
                 $precision = $matches[1];
                 $scale = $matches[2];
+            } else if (preg_match('/^float\((\d+),(\d+)\)/', $row[$type], $matches)) {
+                $row[$type] = 'float';
+                $precision = $matches[1];
+                $scale = $matches[2];
             } else if (preg_match('/^((?:big|medium|small|tiny)?int)\((\d+)\)/', $row[$type], $matches)) {
                 $row[$type] = $matches[1];
                 // The optional argument of a MySQL int type is not precision
Index: tests/Zend/Db/Adapter/Pdo/MysqlTest.php
===================================================================
--- tests/Zend/Db/Adapter/Pdo/MysqlTest.php	(revision 12689)
+++ tests/Zend/Db/Adapter/Pdo/MysqlTest.php	(working copy)
@@ -253,6 +253,19 @@
     }
 
     /**
+     * test that describeTable() returns correct types
+     * @group ZF-3624
+     * 
+     */
+    public function testAdapterDescribeTableAttributeColumn()
+    {
+        $desc = $this->_db->describeTable('zfprice');
+
+        $this->assertEquals('zfprice',        $desc['price']['TABLE_NAME']);
+        $this->assertRegExp('/float/i',       $desc['price']['DATA_TYPE']);
+    }
+    
+    /**
      * Ensures that the character sequence ":0'" is handled properly
      *
      * @link   http://framework.zend.com/issues/browse/ZF-2059
Index: tests/Zend/Db/TestUtil/Common.php
===================================================================
--- tests/Zend/Db/TestUtil/Common.php	(revision 12689)
+++ tests/Zend/Db/TestUtil/Common.php	(working copy)
@@ -292,6 +292,7 @@
         return array(
             'product_id'    => 'INTEGER NOT NULL',
             'price_name'    => 'VARCHAR(100)',
+            'price'         => 'FLOAT(10,8) NOT NULL',
             'price_total'   => 'DECIMAL(10,2) NOT NULL',
             'PRIMARY KEY'   => 'product_id'
             );
@@ -406,9 +407,10 @@
     {
         return array(
             array(
-                'product_id'   => 1,
-                'price_name'   => 'Price 1',
-                'price_total'  => 200.45
+                'product_id'    => 1,
+                'price_name'    => 'Price 1',
+                'price'         => 20.450458,
+                'price_total'   => 200.45
             )
         );
     }
