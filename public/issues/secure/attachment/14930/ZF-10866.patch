Index: library/Zend/Db/Statement/Pdo.php
===================================================================
--- library/Zend/Db/Statement/Pdo.php	(revision 24628)
+++ library/Zend/Db/Statement/Pdo.php	(working copy)
@@ -422,14 +422,41 @@
      * Set the default fetch mode for this statement.
      *
      * @param int   $mode The fetch mode.
+     * @param array $arguments The extra arguments required by the chosen mode
+     *              (see: http://www.php.net/manual/en/pdostatement.setfetchmode.php)
      * @return bool
      * @throws Zend_Db_Statement_Exception
      */
-    public function setFetchMode($mode)
+    public function setFetchMode($mode, $arguments=array())
     {
         $this->_fetchMode = $mode;
         try {
-            return $this->_stmt->setFetchMode($mode);
+            switch ($mode) {
+                case PDO::FETCH_COLUMN:
+                    if (!isset($arguments['colno'])) {
+                        require_once 'Zend/Db/Statement/Exception.php';
+                        throw new Zend_Db_Statement_Exception("You must provide argument 'colno' when using FETCH_COLUMN");
+                    }
+                    return $this->_stmt->setFetchMode($mode, $arguments['colno']);
+                case PDO::FETCH_CLASS:
+                    if (!isset($arguments['classname'])) {
+                        require_once 'Zend/Db/Statement/Exception.php';
+                        throw new Zend_Db_Statement_Exception("You must provide argument 'classname' when using FETCH_CLASS");
+                    }
+                    if (!isset($arguments['ctorargs'])) {
+                        require_once 'Zend/Db/Statement/Exception.php';
+                        throw new Zend_Db_Statement_Exception("You must provide argument 'ctorargs' when using FETCH_CLASS");
+                    }
+                    return $this->_stmt->setFetchMode($mode, $arguments['classname'], $arguments['ctorargs']);
+                case PDO::FETCH_INTO:
+                    if (!isset($arguments['object'])) {
+                        require_once 'Zend/Db/Statement/Exception.php';
+                        throw new Zend_Db_Statement_Exception("You must provide argument 'object' when using FETCH_OBJECT");
+                    }
+                    return $this->_stmt->setFetchMode($mode, $arguments['colno']);
+                default:
+                    return $this->_stmt->setFetchMode($mode);
+            }
         } catch (PDOException $e) {
             require_once 'Zend/Db/Statement/Exception.php';
             throw new Zend_Db_Statement_Exception($e->getMessage(), $e->getCode(), $e);
Index: tests/Zend/Db/Statement/Pdo/TestCommon.php
===================================================================
--- tests/Zend/Db/Statement/Pdo/TestCommon.php	(revision 24628)
+++ tests/Zend/Db/Statement/Pdo/TestCommon.php	(working copy)
@@ -120,4 +120,63 @@
 
     }
 
+    /**
+     * @group ZF-10866
+     * @expectedException Zend_Db_Statement_Exception
+     */
+    public function testSetFetchModeThrowsExceptionWhenRequiredExtraArgumentsAreNotProvided()
+    {
+        $select = $this->_db->select()->from('zfproducts');
+        $stmt = new Zend_Db_Statement_Pdo($this->_db, $select);
+        $stmt->setFetchMode(PDO::FETCH_CLASS);
+    }
+
+    /**
+     * @group ZF-10866
+     */
+    public function testSetFetchModeColumnWorks()
+    {
+        $select = $this->_db->select()->from('zfproducts');
+        $stmt = new Zend_Db_Statement_Pdo($this->_db, $select);
+        $stmt->setFetchMode(PDO::FETCH_COLUMN, array('colno'=>0));
+        $this->assertTrue($stmt->execute());
+        $this->assertEquals(1, $stmt->fetch());
+    }
+
+    /**
+     * @group ZF-10866
+     */
+    public function testSetFetchModeObjectWorks()
+    {
+        $select = $this->_db->select()->from('zfproducts');
+        $stmt = new Zend_Db_Statement_Pdo($this->_db, $select);
+        $stmt->setFetchMode(PDO::FETCH_CLASS, array(
+            'classname'=>'ZF10866_FetchedObject', 
+            'ctorargs'=>array()
+        ));
+        $this->assertTrue($stmt->execute());
+        $row = $stmt->fetch();
+        $this->assertType('object', $row);
+        $this->assertObjectHasAttribute('product_id', $row);
+        $this->assertObjectHasAttribute('product_name', $row);
+    }
+
+    /**
+     * @group ZF-10866
+     */
+    public function testSetFetchModeIntoWorks()
+    {
+        $select = $this->_db->select()->from('zfproducts');
+        $stmt = new Zend_Db_Statement_Pdo($this->_db, $select);
+        $row = new stdClass();
+        $stmt->setFetchMode(PDO::FETCH_INTO, array('object'=>$row));
+        $this->assertTrue($stmt->execute());
+        $this->assertType('object', $row);
+        $this->assertObjectHasAttribute('product_id', $row);
+        $this->assertObjectHasAttribute('product_name', $row);
+    }
 }
+
+class ZF10866_FetchedObject
+{
+}
