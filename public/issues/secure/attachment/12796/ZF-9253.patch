Index: tests/Zend/Service/TwitterTest.php
===================================================================
--- tests/Zend/Service/TwitterTest.php	(revision 21188)
+++ tests/Zend/Service/TwitterTest.php	(working copy)
@@ -133,7 +133,7 @@
         } catch (Zend_Rest_Client_Result_Exception $e) {
             // ignores empty response complaint from Zend_Rest
         }
-        $this->assertContains('GET /statuses/user_timeline/123.xml?page=1&count=123&user_id=123&since_id=123&max_id=123&screen_name=abcdef', $twitter->getLocalHttpClient()->getLastRequest());
+        $this->assertContains('GET /1/statuses/user_timeline/123.xml?page=1&count=123&user_id=123&since_id=123&max_id=123&screen_name=abcdef', $twitter->getLocalHttpClient()->getLastRequest());
     }
 
     /**
Index: library/Zend/Service/Twitter.php
===================================================================
--- library/Zend/Service/Twitter.php	(revision 21188)
+++ library/Zend/Service/Twitter.php	(working copy)
@@ -110,7 +110,7 @@
             $this->setUsername($username);
             $this->setPassword($password);
         }
-        $this->setUri('http://twitter.com');
+        $this->setUri('http://api.twitter.com');
         $this->_localHttpClient->setHeaders('Accept-Charset', 'ISO-8859-1,utf-8');
     }
 
@@ -265,7 +265,7 @@
     public function statusPublicTimeline()
     {
         $this->_init();
-        $path = '/statuses/public_timeline.xml';
+        $path = '/1/statuses/public_timeline.xml';
         $response = $this->_get($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -286,7 +286,7 @@
     public function statusFriendsTimeline(array $params = array())
     {
         $this->_init();
-        $path = '/statuses/friends_timeline';
+        $path = '/1/statuses/friends_timeline';
         $_params = array();
         foreach ($params as $key => $value) {
             switch (strtolower($key)) {
@@ -332,7 +332,7 @@
     public function statusUserTimeline(array $params = array())
     {
         $this->_init();
-        $path = '/statuses/user_timeline';
+        $path = '/1/statuses/user_timeline';
         $_params = array();
         foreach ($params as $key => $value) {
             switch (strtolower($key)) {
@@ -382,7 +382,7 @@
     public function statusShow($id)
     {
         $this->_init();
-        $path = '/statuses/show/' . $this->_validInteger($id) . '.xml';
+        $path = '/1/statuses/show/' . $this->_validInteger($id) . '.xml';
         $response = $this->_get($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -399,7 +399,7 @@
     public function statusUpdate($status, $inReplyToStatusId = null)
     {
         $this->_init();
-        $path = '/statuses/update.xml';
+        $path = '/1/statuses/update.xml';
         $len = iconv_strlen(htmlspecialchars($status, ENT_QUOTES, 'UTF-8'), 'UTF-8');
         if ($len > self::STATUS_MAX_CHARACTERS) {
             include_once 'Zend/Service/Twitter/Exception.php';
@@ -430,7 +430,7 @@
     public function statusReplies(array $params = array())
     {
         $this->_init();
-        $path = '/statuses/replies.xml';
+        $path = '/1/statuses/replies.xml';
         $_params = array();
         foreach ($params as $key => $value) {
             switch (strtolower($key)) {
@@ -458,7 +458,7 @@
     public function statusDestroy($id)
     {
         $this->_init();
-        $path = '/statuses/destroy/' . $this->_validInteger($id) . '.xml';
+        $path = '/1/statuses/destroy/' . $this->_validInteger($id) . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -473,7 +473,7 @@
     public function userFriends(array $params = array())
     {
         $this->_init();
-        $path = '/statuses/friends';
+        $path = '/1/statuses/friends';
         $_params = array();
 
         foreach ($params as $key => $value) {
@@ -504,7 +504,7 @@
     public function userFollowers($lite = false)
     {
         $this->_init();
-        $path = '/statuses/followers.xml';
+        $path = '/1/statuses/followers.xml';
         if ($lite) {
             $this->lite = 'true';
         }
@@ -521,7 +521,7 @@
     public function userFeatured()
     {
         $this->_init();
-        $path = '/statuses/featured.xml';
+        $path = '/1/statuses/featured.xml';
         $response = $this->_get($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -536,7 +536,7 @@
     public function userShow($id)
     {
         $this->_init();
-        $path = '/users/show/' . $id . '.xml';
+        $path = '/1/users/show/' . $id . '.xml';
         $response = $this->_get($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -555,7 +555,7 @@
     public function directMessageMessages(array $params = array())
     {
         $this->_init();
-        $path = '/direct_messages.xml';
+        $path = '/1/direct_messages.xml';
         $_params = array();
         foreach ($params as $key => $value) {
             switch (strtolower($key)) {
@@ -587,7 +587,7 @@
     public function directMessageSent(array $params = array())
     {
         $this->_init();
-        $path = '/direct_messages/sent.xml';
+        $path = '/1/direct_messages/sent.xml';
         $_params = array();
         foreach ($params as $key => $value) {
             switch (strtolower($key)) {
@@ -617,7 +617,7 @@
     public function directMessageNew($user, $text)
     {
         $this->_init();
-        $path = '/direct_messages/new.xml';
+        $path = '/1/direct_messages/new.xml';
         $len = iconv_strlen($text, 'UTF-8');
         if (0 == $len) {
             throw new Zend_Service_Twitter_Exception('Direct message must contain at least one character');
@@ -639,7 +639,7 @@
     public function directMessageDestroy($id)
     {
         $this->_init();
-        $path = '/direct_messages/destroy/' . $this->_validInteger($id) . '.xml';
+        $path = '/1/direct_messages/destroy/' . $this->_validInteger($id) . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -654,7 +654,7 @@
     public function friendshipCreate($id)
     {
         $this->_init();
-        $path = '/friendships/create/' . $id . '.xml';
+        $path = '/1/friendships/create/' . $id . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -669,7 +669,7 @@
     public function friendshipDestroy($id)
     {
         $this->_init();
-        $path = '/friendships/destroy/' . $id . '.xml';
+        $path = '/1/friendships/destroy/' . $id . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -684,7 +684,7 @@
     public function friendshipExists($id)
     {
         $this->_init();
-        $path = '/friendships/exists.xml';
+        $path = '/1/friendships/exists.xml';
         $data = array('user_a' => $this->getUsername(), 'user_b' => $id);
         $response = $this->_get($path, $data);
         return new Zend_Rest_Client_Result($response->getBody());
@@ -699,7 +699,7 @@
     public function accountVerifyCredentials()
     {
         $this->_init();
-        $response = $this->_get('/account/verify_credentials.xml');
+        $response = $this->_get('/1/account/verify_credentials.xml');
         return new Zend_Rest_Client_Result($response->getBody());
     }
 
@@ -712,7 +712,7 @@
     public function accountEndSession()
     {
         $this->_init();
-        $this->_get('/account/end_session');
+        $this->_get('/1/account/end_session');
         return true;
     }
 
@@ -725,7 +725,7 @@
     public function accountRateLimitStatus()
     {
         $this->_init();
-        $response = $this->_get('/account/rate_limit_status.xml');
+        $response = $this->_get('/1/account/rate_limit_status.xml');
         return new Zend_Rest_Client_Result($response->getBody());
     }
 
@@ -743,7 +743,7 @@
     public function favoriteFavorites(array $params = array())
     {
         $this->_init();
-        $path = '/favorites';
+        $path = '/1/favorites';
         $_params = array();
         foreach ($params as $key => $value) {
             switch (strtolower($key)) {
@@ -772,7 +772,7 @@
     public function favoriteCreate($id)
     {
         $this->_init();
-        $path = '/favorites/create/' . $this->_validInteger($id) . '.xml';
+        $path = '/1/favorites/create/' . $this->_validInteger($id) . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -787,7 +787,7 @@
     public function favoriteDestroy($id)
     {
         $this->_init();
-        $path = '/favorites/destroy/' . $this->_validInteger($id) . '.xml';
+        $path = '/1/favorites/destroy/' . $this->_validInteger($id) . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -802,7 +802,7 @@
     public function blockCreate($id)
     {
         $this->_init();
-        $path = '/blocks/create/' . $id . '.xml';
+        $path = '/1/blocks/create/' . $id . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -816,7 +816,7 @@
     public function blockDestroy($id)
     {
         $this->_init();
-        $path = '/blocks/destroy/' . $id . '.xml';
+        $path = '/1/blocks/destroy/' . $id . '.xml';
         $response = $this->_post($path);
         return new Zend_Rest_Client_Result($response->getBody());
     }
@@ -831,7 +831,7 @@
     public function blockExists($id, $returnResult = false)
     {
         $this->_init();
-        $path = '/blocks/exists/' . $id . '.xml';
+        $path = '/1/blocks/exists/' . $id . '.xml';
         $response = $this->_get($path);
 
         $cr = new Zend_Rest_Client_Result($response->getBody());
@@ -856,7 +856,7 @@
     public function blockBlocking($page = 1, $returnUserIds = false)
     {
         $this->_init();
-        $path = '/blocks/blocking';
+        $path = '/1/blocks/blocking';
         if ($returnUserIds === true) {
             $path .= '/ids';
         }
