Index: tests/Zend/Controller/Response/HttpTest.php
===================================================================
--- tests/Zend/Controller/Response/HttpTest.php	(revision 19748)
+++ tests/Zend/Controller/Response/HttpTest.php	(working copy)
@@ -124,6 +124,20 @@
         $this->assertEquals(0, count($headers));
     }
 
+	/**
+	 * @group ZF-6038
+	 */
+    public function testClearHeader()
+    {
+        $this->_response->setHeader('Connection', 'keep-alive');
+        $original_headers = $this->_response->getHeaders();
+
+        $this->_response->clearHeader('Connection');
+        $updated_headers  = $this->_response->getHeaders();
+        
+        $this->assertFalse($original_headers == $updated_headers);
+    }
+
     public function testSetRawHeader()
     {
         $this->_response->setRawHeader('HTTP/1.0 404 Not Found');
@@ -142,6 +156,21 @@
         $this->assertTrue(empty($headers));
     }
 
+	/**
+	 * @group ZF-6038
+	 */
+    public function testClearRawHeader()
+    {
+        $this->_response->setRawHeader('HTTP/1.0 404 Not Found');
+        $this->_response->setRawHeader('HTTP/1.0 401 Unauthorized');
+        $originalHeadersRaw = $this->_response->getRawHeaders();
+
+        $this->_response->clearRawHeader('HTTP/1.0 404 Not Found');
+        $updatedHeadersRaw  = $this->_response->getRawHeaders();
+        
+        $this->assertFalse($originalHeadersRaw == $updatedHeadersRaw);
+    }
+
     public function testClearAllHeaders()
     {
         $this->_response->setRawHeader('HTTP/1.0 404 Not Found');
Index: library/Zend/Controller/Response/Abstract.php
===================================================================
--- library/Zend/Controller/Response/Abstract.php	(revision 19748)
+++ library/Zend/Controller/Response/Abstract.php	(working copy)
@@ -184,6 +184,27 @@
         return $this;
     }
 
+	/**
+	 * Clears the specified HTTP header
+	 *
+	 * @param  string $name
+	 * @return Zend_Controller_Response_Abstract
+	 */
+	public function clearHeader($name)
+	{
+		if (! count($this->_headers)) {
+			return $this;
+		}
+
+		foreach ($this->_headers as $index => $header) {
+			if ($name == $header['name']) {
+				unset($this->_headers[$index]);
+			}
+		}
+
+		return $this;
+	}
+
     /**
      * Set raw HTTP header
      *
@@ -223,6 +244,24 @@
         return $this;
     }
 
+	/**
+	 * Clears the specified raw HTTP header
+	 *
+	 * @param  string $headerRaw
+	 * @return Zend_Controller_Response_Abstract
+	 */
+	public function clearRawHeader($headerRaw)
+	{
+		if (! count($this->_headersRaw)) {
+			return $this;
+		}
+
+		$key = array_search($headerRaw, $this->_headersRaw);
+		unset($this->_headersRaw[$key]);
+
+		return $this;
+	}
+
     /**
      * Clear all headers, normal and raw
      *
