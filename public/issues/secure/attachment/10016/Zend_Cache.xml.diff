Index: documentation/manual/en/module_specs/Zend_Cache.xml
===================================================================
--- documentation/manual/en/module_specs/Zend_Cache.xml	(revision 759)
+++ documentation/manual/en/module_specs/Zend_Cache.xml	(working copy)
@@ -154,7 +154,7 @@
       					<entry><code>boolean</code></entry>
       					<entry><code>false</code></entry>
       					<entry>
-        					if set to true, logging thow <code>Zend_Log</code> is activated 
+        					if set to true, logging through <code>Zend_Log</code> is activated 
         					(but the system is slower) 	    
       					</entry>
       				</row>
@@ -229,7 +229,7 @@
 // [...] // require, configuration and factory
 
 $id1 = 'foo'; // cache id of block1
-$id1 = 'foo'; // cache id of block2
+$id2 = 'bar'; // cache id of block2
 
 // BLOCK1
 if (!($data = $cache->get($id1))) {
@@ -276,7 +276,7 @@
     	<para>
     		"tags" are a way to categorize cache records. When you save a cache with the <code>save()</code>
     		method, you can set an array of tags to apply for this record. Then, you will be 
-    		able to clean all cache records tagged with a given tag... It's a really powerfull
+    		able to clean all cache records tagged with a given tag... It's a really powerful
     		way to manage cache records by groups.
     	</para>
     	<para>
@@ -465,7 +465,7 @@
     <sect2 id="zend.cache.backends.sqlite">
     	<title>Zend_Cache_Backend_Sqlite</title>
     	<para>
-    		This backends stores cache records into a SQLITE database.
+    		This backends stores cache records into a SQLite database.
     	</para>
     	<para>
     		Available options are :
@@ -487,7 +487,7 @@
       					<entry><code>string</code></entry>
       					<entry><code>null</code></entry>
       					<entry>
-      						The complete path (filename included) of the SQLITE database
+      						The complete path (filename included) of the SQLite database
       					</entry>
       				</row>
       			</tbody>
