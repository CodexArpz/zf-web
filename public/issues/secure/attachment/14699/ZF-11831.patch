Index: tests/Zend/Form/FormTest.php
===================================================================
--- tests/Zend/Form/FormTest.php	(revision 24514)
+++ tests/Zend/Form/FormTest.php	(working copy)
@@ -4479,6 +4479,67 @@
         $count = substr_count($html, 'randomelementname-element');
         $this->assertEquals(1, $count, $html);
     }
+    
+    /**
+     * @group ZF-11831
+     */
+    public function testFormDoesNotOverrideExplicitlySetTranslatorOfSubForm()
+    {
+        // Translator to use for main form
+        $trForm = new Zend_Translate(array(
+            'adapter' => 'array',
+            'content' => array(
+                'source'=>'Form'
+            ),
+            'locale' => 'en'
+        ));
+        
+        // Translator to explictly set in SubForm
+        $trSubForm = new Zend_Translate(array(
+            'adapter' => 'array',
+            'content' => array(
+                'source'=>'SubForm'
+            ),
+            'locale' => 'en'
+        ));
+        
+        // Global default translator
+        $trDefault = new Zend_Translate(array(
+            'adapter' => 'array',
+            'content' => array(
+                'source'=>'Default'
+            ),
+            'locale' => 'en'
+        ));
+        Zend_Registry::set('Zend_Translate', $trDefault);
+        
+        // Change the form's translator
+        $form = new Zend_Form();        
+        $form->setTranslator($trForm);
+        
+        // Create a subform with it's own validator
+        $sf1 = new Zend_Form_SubForm();
+        $sf1->setTranslator($trSubForm);
+        $form->addSubForm($sf1, 'Test1');
+
+        // Create a subform with no validator
+        $sf2 = new Zend_Form_SubForm();
+        $form->addSubForm($sf2, 'Test2');
+        
+        $sf3 = new Zend_Form_SubForm();
+        $sf1->addSubForm($sf3, 'Test3');
+        
+        $form->isValid(array());
+
+        // Form should still have $trForm
+        $this->assertSame($trForm->getAdapter(), $form->getTranslator());
+        // Test 1 should have $trSubForm, as it's explicitly set
+        $this->assertSame($trSubForm->getAdapter(), $sf1->getTranslator());
+        // Test2 should have $trForm, as it's the form's default
+        $this->assertSame($trForm->getAdapter(), $sf2->getTranslator());
+        // Test3 should have $trForm, as it's the form's default
+        $this->assertSame($trForm->getAdapter(), $sf2->getTranslator());
+    }
 }
 
 class Zend_Form_FormTest_DisplayGroup extends Zend_Form_DisplayGroup
