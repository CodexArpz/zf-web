Index: documentation/manual/en/module_specs/Zend_Form-Decorators.xml
===================================================================
--- documentation/manual/en/module_specs/Zend_Form-Decorators.xml	(revision 22206)
+++ documentation/manual/en/module_specs/Zend_Form-Decorators.xml	(working copy)
@@ -281,14 +281,14 @@
 
         <programlisting language="php"><![CDATA[
 // for an element:
+$form->addElementPrefixPath('My_Decorator',
+                            'My/Decorator/',
+                            'decorator');
+
+// for all elements:
 $element->addPrefixPath('My_Decorator',
                         'My/Decorator/',
                         'decorator');
-
-// for all elements:
-$form->addElementPrefixPath('My_Decorator',
-                            'My/Decorator/',
-                            'decorator');
 ]]></programlisting>
 
         <para>
Index: library/Zend/Form.php
===================================================================
--- library/Zend/Form.php	(revision 22206)
+++ library/Zend/Form.php	(working copy)
@@ -464,7 +464,7 @@
      *
      * Otherwise, the path prefix is set on the appropriate plugin loader.
      *
-     * If $type is 'decorators', sets the path in the decorator plugin loader
+     * If $type is 'decorator', sets the path in the decorator plugin loader
      * for all elements. Additionally, if no $type is provided,
      * {@link Zend_Form_Element::addPrefixPath()} is called on each element.
      *
@@ -2050,8 +2050,8 @@
      * Given an array, an optional arrayPath and a key this method
      * dissolves the arrayPath and unsets the key within the array
      * if it exists.
-     * 
-     * @param array $array 
+     *
+     * @param array $array
      * @param string|null $arrayPath
      * @param string $key
      * @return array
@@ -2101,8 +2101,8 @@
     }
 
     /**
-     * This is a helper function until php 5.3 is widespreaded 
-     * 
+     * This is a helper function until php 5.3 is widespreaded
+     *
      * @param array $into
      * @access protected
      * @return void
@@ -2882,13 +2882,13 @@
     
     /**
      * Does this form have its own specific translator?
-     * 
+     *
      * @return bool
      */
     public function hasTranslator()
     {
         return (bool)$this->_translator;
-    }    
+    }
 
     /**
      * Get global default translator object
@@ -2913,11 +2913,11 @@
 
     /**
      * Is there a default translation object set?
-     * 
+     *
      * @return boolean
      */
     public static function hasDefaultTranslator()
-    { 
+    {
         return (bool)self::$_translatorDefault;
     }
     
