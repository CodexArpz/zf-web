Index: Loader.php
===================================================================
--- Loader.php	(Revision 7049)
+++ Loader.php	(Arbeitskopie)
@@ -222,8 +222,8 @@
     /**
      * Register {@link autoload()} with spl_autoload()
      *
-     * @param string OPTIONAL $class
-     * @param boolean OPTIONAL $enabled
+     * @param string $class (optional)
+     * @param boolean $enabled (optional)
      * @return void
      * @throws Zend_Exception if spl_autoload() is not found
      * or if the specified class does not have an autoload() method.
Index: XmlRpc/Request.php
===================================================================
--- XmlRpc/Request.php	(Revision 7049)
+++ XmlRpc/Request.php	(Arbeitskopie)
@@ -91,8 +91,8 @@
     /**
      * Create a new XML-RPC request
      *
-     * @param string method (optional)
-     * @param array params  (optional)
+     * @param string $method (optional)
+     * @param array $params  (optional)
      */
     public function __construct($method = null, $params = null)
     {
Index: OpenId/Consumer/Storage/File.php
===================================================================
--- OpenId/Consumer/Storage/File.php	(Revision 7049)
+++ OpenId/Consumer/Storage/File.php	(Arbeitskopie)
@@ -305,7 +305,7 @@
     /**
      * Removes data from the uniqueness database that is older then given date
      *
-     * @param mixed date of expired data
+     * @param mixed $date date of expired data
      */
     public function purgeNonces($date=null)
     {
Index: OpenId/Consumer/Storage.php
===================================================================
--- OpenId/Consumer/Storage.php	(Revision 7049)
+++ OpenId/Consumer/Storage.php	(Arbeitskopie)
@@ -125,7 +125,7 @@
     /**
      * Removes data from the uniqueness database that is older then given date
      *
-     * @param string date of expired data
+     * @param string $date Date of expired data
      */
     abstract public function purgeNonces($date=null);
 }
Index: OpenId/Extension/Sreg.php
===================================================================
--- OpenId/Extension/Sreg.php	(Revision 7049)
+++ OpenId/Extension/Sreg.php	(Arbeitskopie)
@@ -49,7 +49,7 @@
      * Creates SREG extension object
      *
      * @param array $props associative array of SREG variables
-     * @param string policy_url SREG policy URL
+     * @param string $policy_url SREG policy URL
      * @param float $version SREG version
      * @return array
      */
Index: Gdata/App/Feed.php
===================================================================
--- Gdata/App/Feed.php	(Revision 7049)
+++ Gdata/App/Feed.php	(Arbeitskopie)
@@ -190,7 +190,7 @@
     }
 
     /**
-     * @param array The array of Zend_Gdata_App_Entry elements
+     * @param array $value The array of Zend_Gdata_App_Entry elements
      * @return Zend_Gdata_App_Entry Provides a fluent interface
      */
     public function setEntry($value)
Index: Gdata/Gapps/Query.php
===================================================================
--- Gdata/Gapps/Query.php	(Revision 7049)
+++ Gdata/Gapps/Query.php	(Arbeitskopie)
@@ -72,7 +72,7 @@
      * constructed prior to using any methods which interact with the Google 
      * Apps provisioning service.
      * 
-     * @param value The domain to be used for this session.
+     * @param string $value The domain to be used for this session.
      */
     public function setDomain($value)
     {
Index: Controller/Router/Route.php
===================================================================
--- Controller/Router/Route.php	(Revision 7049)
+++ Controller/Router/Route.php	(Arbeitskopie)
@@ -52,6 +52,8 @@
 
     /**
      * Instantiates route based on passed Zend_Config structure
+     *
+     * @param Zend_Config $config Configuration object
      */
     public static function getInstance(Zend_Config $config)
     {
@@ -65,9 +67,9 @@
      * to a corresponding atomic parts. These parts are assigned
      * a position which is later used for matching and preparing values.
      *
-     * @param string Map used to match with later submitted URL path
-     * @param array Defaults for map variables with keys as variable names
-     * @param array Regular expression requirements for variables (keys as variable names)
+     * @param string $route Map used to match with later submitted URL path
+     * @param array $defaults Defaults for map variables with keys as variable names
+     * @param array $reqs Regular expression requirements for variables (keys as variable names)
      */
     public function __construct($route, $defaults = array(), $reqs = array())
     {
@@ -118,7 +120,7 @@
      * Matches a user submitted path with parts defined by a map. Assigns and
      * returns an array of variables on a successful match.
      *
-     * @param string Path used to match against this routing map
+     * @param string $path Path used to match against this routing map
      * @return array|false An array of assigned values or a false on a mismatch
      */
     public function match($path)
@@ -268,7 +270,7 @@
     /**
      * Return a single parameter of route's defaults
      *
-     * @param name Array key of the parameter
+     * @param string $name Array key of the parameter
      * @return string Previously set default
      */
     public function getDefault($name) {
Index: Controller/Router/Rewrite.php
===================================================================
--- Controller/Router/Rewrite.php	(Revision 7049)
+++ Controller/Router/Rewrite.php	(Arbeitskopie)
@@ -80,7 +80,7 @@
     /**
      * Add route to the route chain
      *
-     * @param string Name of the route
+     * @param string $name Name of the route
      * @param Zend_Controller_Router_Route_Interface Route
      */
     public function addRoute($name, Zend_Controller_Router_Route_Interface $route) {
@@ -91,7 +91,7 @@
     /**
      * Add routes to the route chain
      *
-     * @param array Array of routes with names as keys and routes as values
+     * @param array $routes Array of routes with names as keys and routes as values
      */
     public function addRoutes($routes) {
         foreach ($routes as $name => $route) {
@@ -119,8 +119,8 @@
      * $router = new Zend_Controller_Router_Rewrite();
      * $router->addConfig($config, 'routes');
      *
-     * @param Zend_Config Configuration object
-     * @param string Name of the config section containing route's definitions
+     * @param Zend_Config $config Configuration object
+     * @param string $section Name of the config section containing route's definitions
      * @throws Zend_Controller_Router_Exception
      */
     public function addConfig(Zend_Config $config, $section)
@@ -142,7 +142,7 @@
     /**
      * Remove a route from the route chain
      *
-     * @param string Name of the route
+     * @param string $name Name of the route
      * @throws Zend_Controller_Router_Exception
      */
     public function removeRoute($name) {
@@ -156,7 +156,6 @@
     /**
      * Remove all standard default routes
      *
-     * @param string Name of the route
      * @param Zend_Controller_Router_Route_Interface Route
      */
     public function removeDefaultRoutes() {
@@ -167,7 +166,7 @@
     /**
      * Check if named route exists
      *
-     * @param string Name of the route
+     * @param string $name Name of the route
      * @return boolean
      */
     public function hasRoute($name)
@@ -178,7 +177,7 @@
     /**
      * Retrieve a named route
      *
-     * @param string Name of the route
+     * @param string $name Name of the route
      * @throws Zend_Controller_Router_Exception
      * @return Zend_Controller_Router_Route_Interface Route object
      */
Index: Controller/Router/Route/Regex.php
===================================================================
--- Controller/Router/Route/Regex.php	(Revision 7049)
+++ Controller/Router/Route/Regex.php	(Arbeitskopie)
@@ -40,6 +40,8 @@
 
     /**
      * Instantiates route based on passed Zend_Config structure
+     *
+     * @param Zend_Config $config Configuration object
      */
     public static function getInstance(Zend_Config $config)
     {
@@ -61,7 +63,7 @@
      * Matches a user submitted path with a previously defined route.
      * Assigns and returns an array of defaults on a successful match.
      *
-     * @param string Path used to match against this routing map
+     * @param string $path Path used to match against this routing map
      * @return array|false An array of assigned values or a false on a mismatch
      */
     public function match($path)
@@ -97,9 +99,9 @@
      * indexed numerically then every associative key will be stripped. Vice versa if reversed
      * is set to true.
      *
-     * @param array Indexed or associative array of values to map
-     * @param boolean False means translation of index to association. True means reverse.
-     * @param boolean Should wrong type of keys be preserved or stripped.
+     * @param array $values Indexed or associative array of values to map
+     * @param boolean $reversed False means translation of index to association. True means reverse.
+     * @param boolean $preserve Should wrong type of keys be preserved or stripped.
      * @return array An array of mapped values
      */
     protected function _getMappedValues($values, $reversed = false, $preserve = false)
@@ -134,7 +136,7 @@
     /**
      * Assembles a URL path defined by this route
      *
-     * @param array An array of name (or index) and value pairs used as parameters
+     * @param array $data An array of name (or index) and value pairs used as parameters
      * @return string Route path with user submitted parameters
      */
     public function assemble($data = array())
@@ -164,7 +166,7 @@
     /**
      * Return a single parameter of route's defaults
      *
-     * @param name Array key of the parameter
+     * @param string $name Array key of the parameter
      * @return string Previously set default
      */
     public function getDefault($name) {
Index: Controller/Router/Route/Module.php
===================================================================
--- Controller/Router/Route/Module.php	(Revision 7049)
+++ Controller/Router/Route/Module.php	(Arbeitskopie)
@@ -84,9 +84,9 @@
     /**
      * Constructor
      *
-     * @param array Defaults for map variables with keys as variable names
-     * @param Zend_Controller_Dispatcher_Interface Dispatcher object
-     * @param Zend_Controller_Request_Abstract Request object
+     * @param array $defaults Defaults for map variables with keys as variable names
+     * @param Zend_Controller_Dispatcher_Interface $dispatcher Dispatcher object
+     * @param Zend_Controller_Request_Abstract $request Request object
      */
     public function __construct(array $defaults = array(),
                 Zend_Controller_Dispatcher_Interface $dispatcher = null,
@@ -135,7 +135,7 @@
      * setControllerName(), and setActionName() accessors to set those values.
      * Always returns the values as an array.
      *
-     * @param string Path used to match against this routing map
+     * @param string $path Path used to match against this routing map
      * @return array An array of assigned values or a false on a mismatch
      */
     public function match($path)
@@ -180,7 +180,8 @@
     /**
      * Assembles user submitted parameters forming a URL path defined by this route
      *
-     * @param array An array of variable and value pairs used as parameters
+     * @param array $data An array of variable and value pairs used as parameters
+     * @param bool $reset Weither to reset the current params
      * @return string Route path with user submitted parameters
      */
     public function assemble($data = array(), $reset = false)
Index: Controller/Router/Route/Static.php
===================================================================
--- Controller/Router/Route/Static.php	(Revision 7049)
+++ Controller/Router/Route/Static.php	(Arbeitskopie)
@@ -40,6 +40,8 @@
 
     /**
      * Instantiates route based on passed Zend_Config structure
+     *
+     * @param Zend_Config $config Configuration object
      */
     public static function getInstance(Zend_Config $config)
     {
@@ -50,8 +52,8 @@
     /**
      * Prepares the route for mapping.
      *
-     * @param string Map used to match with later submitted URL path
-     * @param array Defaults for map variables with keys as variable names
+     * @param string $route Map used to match with later submitted URL path
+     * @param array $defaults Defaults for map variables with keys as variable names
      */
     public function __construct($route, $defaults = array())
     {
@@ -63,7 +65,7 @@
      * Matches a user submitted path with a previously defined route.
      * Assigns and returns an array of defaults on a successful match.
      *
-     * @param string Path used to match against this routing map
+     * @param string $path Path used to match against this routing map
      * @return array|false An array of assigned values or a false on a mismatch
      */
     public function match($path)
@@ -77,7 +79,7 @@
     /**
      * Assembles a URL path defined by this route
      *
-     * @param array An array of variable and value pairs used as parameters
+     * @param array $data An array of variable and value pairs used as parameters
      * @return string Route path with user submitted parameters
      */
     public function assemble($data = array())
@@ -88,7 +90,7 @@
     /**
      * Return a single parameter of route's defaults
      *
-     * @param name Array key of the parameter
+     * @param string $name Array key of the parameter
      * @return string Previously set default
      */
     public function getDefault($name) {
Index: Controller/Request/Http.php
===================================================================
--- Controller/Request/Http.php	(Revision 7049)
+++ Controller/Request/Http.php	(Arbeitskopie)
@@ -716,7 +716,7 @@
      * plain, HTTP-specified header name. Ex.: Ask for 'Accept' to get the
      * Accept header, 'Accept-Encoding' to get the Accept-Encoding header.
      *
-     * @param string HTTP header name
+     * @param string $header HTTP header name
      * @return string|false HTTP header value, or false if not found
      * @throws Zend_Controller_Request_Exception
      */
Index: Cache/Backend/File.php
===================================================================
--- Cache/Backend/File.php	(Revision 7049)
+++ Cache/Backend/File.php	(Arbeitskopie)
@@ -277,7 +277,7 @@
      *                     ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
@@ -364,7 +364,7 @@
      *
      * @param string $dir directory to clean
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     private function _clean($dir, $mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
@@ -536,7 +536,7 @@
      * Transform a cache id into a file name and return it
      *
      * @param string $id cache id
-     * @param int expire timestamp
+     * @param int $expire Expiration timestamp
      * @return string file name
      */
     private function _idToFileName($id, $expire)
@@ -613,7 +613,7 @@
      * (if it fails (no cache files or several cache files for this id, the method returns null)
      *
      * @param string $id cache id
-     * @param int expire timestamp
+     * @param int $expire Expiration timestamp
      * @return string file name (with path)
      */
     private function _file($id, $expire = null)
Index: Cache/Backend/Test.php
===================================================================
--- Cache/Backend/Test.php	(Revision 7049)
+++ Cache/Backend/Test.php	(Arbeitskopie)
@@ -194,7 +194,7 @@
      *                                               ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
Index: Cache/Backend/Interface.php
===================================================================
--- Cache/Backend/Interface.php	(Revision 7049)
+++ Cache/Backend/Interface.php	(Arbeitskopie)
@@ -90,7 +90,7 @@
      *                                               ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array());
Index: Cache/Backend/Sqlite.php
===================================================================
--- Cache/Backend/Sqlite.php	(Revision 7049)
+++ Cache/Backend/Sqlite.php	(Arbeitskopie)
@@ -209,7 +209,7 @@
      *                                               ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
@@ -349,7 +349,7 @@
      *                                               ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     private function _clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
Index: Cache/Backend/Apc.php
===================================================================
--- Cache/Backend/Apc.php	(Revision 7049)
+++ Cache/Backend/Apc.php	(Arbeitskopie)
@@ -139,7 +139,7 @@
      *                     ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
Index: Cache/Backend/ZendPlatform.php
===================================================================
--- Cache/Backend/ZendPlatform.php	(Revision 7049)
+++ Cache/Backend/ZendPlatform.php	(Arbeitskopie)
@@ -182,7 +182,7 @@
      *                                               This mode is not supported in this backend
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
Index: Cache/Backend/Memcached.php
===================================================================
--- Cache/Backend/Memcached.php	(Revision 7049)
+++ Cache/Backend/Memcached.php	(Arbeitskopie)
@@ -203,7 +203,7 @@
      *                     ($tags can be an array of strings or a single string)
      *
      * @param string $mode clean mode
-     * @param tags array $tags array of tags
+     * @param array $tags array of tags
      * @return boolean true if no problem
      */
     public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array())
Index: Search/Lucene/Search/Similarity/Default.php
===================================================================
--- Search/Lucene/Search/Similarity/Default.php	(Revision 7049)
+++ Search/Lucene/Search/Similarity/Default.php	(Arbeitskopie)
@@ -38,7 +38,7 @@
      * Implemented as '1/sqrt(numTerms)'.
      *
      * @param string $fieldName
-     * @param integer numTerms
+     * @param integer $numTerms
      * @return float
      */
     public function lengthNorm($fieldName, $numTerms)
