Index: library/Zend/Filter.php
===================================================================
--- library/Zend/Filter.php	(revision 863)
+++ library/Zend/Filter.php	(working copy)
@@ -116,11 +116,11 @@
     }
 
     /**
-     * Returns value if every character is alphabetic or a digit,
+     * Returns TRUE if every character is alphabetic or a digit,
      * FALSE otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isAlnum($value)
     {
@@ -128,11 +128,11 @@
     }
 
     /**
-     * Returns value if every character is alphabetic, FALSE
+     * Returns TRUE if every character is alphabetic, FALSE
      * otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isAlpha($value)
     {
@@ -140,8 +140,8 @@
     }
 
     /**
-     * Returns value if it is greater than or equal to $min and less
-     * than or equal to $max, FALSE otherwise. If $inc is set to
+     * Returns TRUE if it is greater than or equal to $min and less
+     * than or equal to $max, FALSE otherwise. If $inclusive is set to
      * FALSE, then the value must be strictly greater than $min and
      * strictly less than $max.
      *
@@ -149,9 +149,9 @@
      * @param mixed $min
      * @param mixed $max
      * @param boolean $inclusive
-     * @return mixed
+     * @return bool
      */
-    public static function isBetween($value, $min, $max, $inc = TRUE)
+    public static function isBetween($value, $min, $max, $inclusive = TRUE)
     {
         if ($value > $min &&
             $value < $max) {
@@ -160,7 +160,7 @@
 
         if ($value >= $min &&
             $value <= $max &&
-            $inc) {
+            $inclusive) {
             return TRUE;
         }
 
@@ -203,11 +203,11 @@
     }
 
     /**
-     * Returns $value if it is a valid date, FALSE otherwise. The
+     * Returns TRUE if it is a valid date, FALSE otherwise. The
      * date is required to be in ISO 8601 format.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isDate($value)
     {
@@ -217,11 +217,11 @@
     }
 
     /**
-     * Returns value if every character is a digit, FALSE otherwise.
+     * Returns TRUE if every character is a digit, FALSE otherwise.
      * This is just like isInt(), except there is no upper limit.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isDigits($value)
     {
@@ -229,10 +229,10 @@
     }
 
     /**
-     * Returns value if it is a valid email format, FALSE otherwise.
+     * Returns TRUE if it is a valid email format, FALSE otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isEmail($value)
     {
@@ -270,11 +270,11 @@
     }
 
     /**
-     * Returns value if it is a valid hexadecimal format, FALSE
+     * Returns TRUE if it is a valid hexadecimal format, FALSE
      * otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isHex($value)
     {
@@ -282,7 +282,7 @@
     }
 
     /**
-     * Returns value if it is a valid hostname, FALSE otherwise.
+     * Returns TRUE if it is a valid hostname, FALSE otherwise.
      * Depending upon the value of $allow, Internet domain names, IP
      * addresses, and/or local network names are considered valid.
      * The default is HOST_ALLOW_ALL, which considers all of the
@@ -291,7 +291,7 @@
      * @param mixed $value
      * @param integer $allow bitfield for HOST_ALLOW_DNS, HOST_ALLOW_IP, HOST_ALLOW_LOCAL
      * @throws Zend_Filter_Exception
-     * @return mixed
+     * @return bool
      */
     public static function isHostname($value, $allow = self::HOST_ALLOW_ALL)
     {
@@ -366,10 +366,10 @@
     }
 
     /**
-     * Returns value if it is a valid IP format, FALSE otherwise.
+     * Returns TRUE if it is a valid IP format, FALSE otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isIp($value)
     {
@@ -389,11 +389,11 @@
     }
 
     /**
-     * Returns value if it is a valid format for a person's name,
+     * Returns TRUE if it is a valid format for a person's name,
      * FALSE otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isName($value)
     {
@@ -401,10 +401,11 @@
     }
 
     /**
-     * Returns value if it is one of $allowed, FALSE otherwise.
+     * Returns TRUE if it is one of $allowed, FALSE otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @param mixed $allowed
+     * @return bool
      */
     public static function isOneOf($value, $allowed = NULL)
     {
@@ -418,12 +419,13 @@
     }
 
     /**
-     * Returns value if it is a valid phone number format, FALSE
+     * Returns TRUE if it is a valid phone number format, FALSE
      * otherwise. The optional second argument indicates the country.
      * This method requires that the value consist of only digits.
      *
      * @param mixed $value
-     * @return mixed
+     * @param mixed $country
+     * @return bool
      */
     public static function isPhone($value, $country = 'US')
     {
@@ -494,18 +496,24 @@
     }
 
     /**
-     * Returns value if it matches $pattern, FALSE otherwise. Uses
+     * Returns TRUE if it matches $pattern, FALSE otherwise. Uses
      * preg_match() for the matching.
      *
      * @param mixed $value
      * @param mixed $pattern
-     * @return mixed
+     * @return bool
      */
     public static function isRegex($value, $pattern = NULL)
     {
         return (bool) preg_match($pattern, $value);
     }
 
+    /**
+     * Returns TRUE if it is a valid Uri format, FALSE otherwise.
+     *
+     * @param mixed $value
+     * @return bool
+     */
     public static function isUri($value)
     {
         /**
@@ -514,10 +522,10 @@
     }
 
     /**
-     * Returns value if it is a valid US ZIP, FALSE otherwise.
+     * Returns TRUE if it is a valid US ZIP, FALSE otherwise.
      *
      * @param mixed $value
-     * @return mixed
+     * @return bool
      */
     public static function isZip($value)
     {
