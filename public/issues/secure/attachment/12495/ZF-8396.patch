Index: tests/Zend/Pdf/Filter/AllTests.php
===================================================================
--- tests/Zend/Pdf/Filter/AllTests.php	(revision 0)
+++ tests/Zend/Pdf/Filter/AllTests.php	(revision 0)
@@ -0,0 +1,58 @@
+<?php
+/**
+ * Zend Framework
+ *
+ * LICENSE
+ *
+ * This source file is subject to the new BSD license that is bundled
+ * with this package in the file LICENSE.txt.
+ * It is also available through the world-wide-web at this URL:
+ * http://framework.zend.com/license/new-bsd
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@zend.com so we can send you a copy immediately.
+ *
+ * @category   Zend
+ * @package    Zend_Pdf
+ * @subpackage UnitTests
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ */
+
+if (!defined('PHPUnit_MAIN_METHOD')) {
+    define('PHPUnit_MAIN_METHOD', 'Zend_Pdf_Filter_AllTests::main');
+}
+
+require_once 'PHPUnit/Framework/TestSuite.php';
+require_once 'PHPUnit/TextUI/TestRunner.php';
+
+require_once 'Zend/Pdf/Filter/RunLengthTest.php';
+
+/**
+ * @category   Zend
+ * @package    Zend_Pdf
+ * @subpackage UnitTests
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ * @group      Zend_Pdf
+ */
+class Zend_Pdf_Filter_AllTests
+{
+    public static function main()
+    {
+        PHPUnit_TextUI_TestRunner::run(self::suite());
+    }
+
+    public static function suite()
+    {
+        $suite = new PHPUnit_Framework_TestSuite('Zend Framework - Zend_Pdf_Filter');
+
+        $suite->addTestSuite('Zend_Pdf_Filter_RunLengthTest');
+
+        return $suite;
+    }
+}
+
+if (PHPUnit_MAIN_METHOD == 'Zend_Pdf_Filter_AllTests::main') {
+    Zend_Pdf_Filter_AllTests::main();
+}
Index: tests/Zend/Pdf/Filter/RunLengthTest.php
===================================================================
--- tests/Zend/Pdf/Filter/RunLengthTest.php	(revision 0)
+++ tests/Zend/Pdf/Filter/RunLengthTest.php	(revision 0)
@@ -0,0 +1,86 @@
+<?php
+/**
+ * Zend Framework
+ *
+ * LICENSE
+ *
+ * This source file is subject to the new BSD license that is bundled
+ * with this package in the file LICENSE.txt.
+ * It is also available through the world-wide-web at this URL:
+ * http://framework.zend.com/license/new-bsd
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@zend.com so we can send you a copy immediately.
+ *
+ * @category   Zend
+ * @package    Zend_Pdf
+ * @subpackage UnitTests
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ */
+
+/**
+ * Zend_Pdf_Filter_RunLength
+ */
+require_once 'Zend/Pdf/Filter/RunLength.php';
+
+/**
+ * PHPUnit Test Case
+ */
+require_once 'PHPUnit/Framework/TestCase.php';
+
+/**
+ * @category   Zend
+ * @package    Zend_Pdf
+ * @subpackage UnitTests
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ * @group      Zend_Pdf
+ */
+class Zend_Pdf_Filter_RunLengthTest extends PHPUnit_Framework_TestCase
+{
+    public function testSimpleStringEncode()
+    {
+        $decodedContents  = 'WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWW';
+        $decodedContents .= 'WWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW';
+        $encodedContents = Zend_Pdf_Filter_RunLength::encode($decodedContents);
+        $testString  = "\xF5\x57\x00\x42\xF5\x57\xFE\x42";
+        $testString .= "\xE9\x57\x00\x42\xF3\x57\x80";
+        $this->assertEquals($encodedContents, $testString);
+    }
+
+    public function testSimpleStringDecode()
+    {
+        $encodedContents  = "\xF5\x57\x00\x42\xF5\x57\xFE\x42";
+        $encodedContents .= "\xE9\x57\x00\x42\xF3\x57\x80";
+        $decodedContents = Zend_Pdf_Filter_RunLength::decode($encodedContents);
+        $testString  = 'WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWW';
+        $testString .= 'WWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW';
+        $this->assertEquals($decodedContents, $testString);
+    }
+
+    public function testRepeatBytesLongerThan128BytesEncode()
+    {
+        $decodedContents  = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $decodedContents .= 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $decodedContents .= 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $decodedContents .= 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $decodedContents .= 'AAAAAAAAAAAAAAAAAAAAAABBBCDEFFFF';
+        $encodedContents = Zend_Pdf_Filter_RunLength::encode($decodedContents);
+        $testString  = "\x81\x41\xEB\x41\xFE\x42\x00\x43";
+        $testString .= "\x00\x44\x00\x45\xFD\x46\x80";
+        $this->assertEquals($encodedContents, $testString);
+    }
+
+    public function testRepeatBytesLongerThan128BytesDecode()
+    {
+        $encodedContents = "\x81\x41\xEB\x41\xFE\x42\x00\x43\x00\x44\x00\x45\xFD\x46\x80";
+        $decodedContents = Zend_Pdf_Filter_RunLength::decode($encodedContents);
+        $testString  = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $testString .= 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $testString .= 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $testString .= 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
+        $testString .= 'AAAAAAAAAAAAAAAAAAAAAABBBCDEFFFF';
+        $this->assertEquals($decodedContents, $testString);
+    }
+}
Index: library/Zend/Pdf/Filter/RunLength.php
===================================================================
--- library/Zend/Pdf/Filter/RunLength.php	(revision 0)
+++ library/Zend/Pdf/Filter/RunLength.php	(revision 0)
@@ -0,0 +1,130 @@
+<?php
+/**
+ * Zend Framework
+ *
+ * LICENSE
+ *
+ * This source file is subject to the new BSD license that is bundled
+ * with this package in the file LICENSE.txt.
+ * It is also available through the world-wide-web at this URL:
+ * http://framework.zend.com/license/new-bsd
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@zend.com so we can send you a copy immediately.
+ *
+ * @category   Zend
+ * @package    Zend_Pdf
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ */
+
+
+/** Zend_Pdf_Filter_Interface */
+require_once 'Zend/Pdf/Filter/Interface.php';
+
+/**
+ * RunLength stream filter
+ *
+ * @package    Zend_Pdf
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ */
+class Zend_Pdf_Filter_RunLength implements Zend_Pdf_Filter_Interface
+{
+    /**
+     * Encode data
+     *
+     * @param string $data
+     * @param array $params
+     * @return string
+     * @throws Zend_Pdf_Exception
+     */
+    public static function encode($data, $params = null)
+    {
+        $output = '';
+        $dataLength = strlen($data);
+        $maxRepeatLength = 128;
+        $i = 0;
+        $tmpStr = '';
+        $sectionLength = 0;
+
+        while($i <= $dataLength) {
+            if ($i == 0) {
+                $tmpStr = $data[$i];
+                $sectionLength = 1;
+                $i++;
+            } else {
+                if ($data[$i - 1] === $data[$i] && $sectionLength < 128) {
+                    $sectionLength++;
+                    $i++;
+
+                } else {
+
+                    //save the data in the temp string
+                    if (strlen($tmpStr) == 1) {
+                        $output .= chr(257 - $sectionLength);
+                        $output .= $tmpStr;
+                    } else {
+                        $output .= chr($sectionLength - 1);
+                        $output .= $tmpStr;
+
+                    }
+
+                    //start new temp string
+                    $tmpStr = $data[$i];
+                    $sectionLength = 1;
+                    $i++;
+                }
+            }
+
+        }
+
+        //EOD byte
+        $output .= chr(128);
+
+        return $output;
+    }
+
+    /**
+     * Decode data
+     *
+     * @param string $data
+     * @param array $params
+     * @return string
+     * @throws Zend_Pdf_Exception
+     */
+    public static function decode($data, $params = null)
+    {
+        $dataLength = strlen($data);
+        $output = '';
+        $i = 0;
+
+        while($i < $dataLength) {
+            $byteValue = ord($data[$i]);
+
+            //EOD byte
+            if ($byteValue == 128) {
+                break;
+            }
+
+            if ($byteValue < 128) {
+                $output .= substr($data, $i + 1, ($byteValue + 1));
+                $i += $byteValue + 2;
+            }
+
+            if ($byteValue > 128) {
+                $numOfTimesToCopy = 257 - $byteValue;
+                $copyValue = $data[$i + 1];
+
+                for($j = 0; $j < $numOfTimesToCopy; $j++) {
+                    $output .= $copyValue;
+                }
+
+                $i += 2;
+            }
+
+        }
+
+        return $output;
+    }
+}
Index: library/Zend/Pdf/Element/Object/Stream.php
===================================================================
--- library/Zend/Pdf/Element/Object/Stream.php	(revision 19316)
+++ library/Zend/Pdf/Element/Object/Stream.php	(working copy)
@@ -211,6 +211,11 @@
                                                                         $this->_originalDictionary['DecodeParms'][$id]);
                     break;
 
+                case 'RunLengthDecode':
+                    require_once 'Zend/Pdf/Filter/RunLength.php';
+                    $valueRef = Zend_Pdf_Filter_RunLength::decode($valueRef);
+                    break;
+
                 default:
                     require_once 'Zend/Pdf/Exception.php';
                     throw new Zend_Pdf_Exception('Unknown stream filter: \'' . $filterName . '\'.');
