Index: Firebug.php
===================================================================
--- Firebug.php	(revision 23694)
+++ Firebug.php	(working copy)
@@ -65,6 +65,20 @@
     protected $_totalElapsedTime = 0;
 
     /**
+     * Whether to log unfinished queries
+     * @var boolean
+     */
+    protected $_logQueryStart = true;
+
+    /**
+     * Profiler handle of last query - used to connect start query messages
+     * with end query messages
+     * @var integer
+     */
+    protected $_lastQueryId = 0;
+
+
+    /**
      * Constructor
      *
      * @param string $label OPTIONAL Label for the profiling info.
@@ -113,6 +127,39 @@
     }
 
     /**
+     * Sets whether to log start of the query - if not set,
+     * queries, that resulted in an sql error will not be shown
+     * in the firebug console. If enabled, every query will be shown
+     * twice in the console.
+     * @param boolean $_logQueryStart
+     * @return Zend_Db_Profiler_Firebug
+     */
+    public function setLogQueryStart($_logQueryStart) {
+        $this->_logQueryStart = $_logQueryStart;
+        return $this;
+    }
+
+
+
+    /**
+     * Intercepts start of the query and logs it if _logQueryStart is set to true.
+     * @param  string  $queryText   SQL statement
+     * @param  integer $queryType   OPTIONAL Type of query, one of the Zend_Db_Profiler::* constants
+     * @return integer|null
+     */
+    public function queryStart($queryText, $queryType = null) {
+
+        if ($this->getEnabled() && $this->_logQueryStart) {
+            $this->_message->addRow(array((string)0,
+                                          $queryText,
+                                         "Unfinished"));
+        }
+
+
+        $this->_lastQueryId = parent::queryStart($queryText, $queryType);
+        return $this->_lastQueryId;
+    }
+    /**
      * Intercept the query end and log the profiling data.
      *
      * @param  integer $queryId
@@ -133,9 +180,14 @@
 
         $this->_totalElapsedTime += $profile->getElapsedSecs();
 
-        $this->_message->addRow(array((string)round($profile->getElapsedSecs(),5),
+        $row = array((string)round($profile->getElapsedSecs(),5),
                                       $profile->getQuery(),
-                                      ($params=$profile->getQueryParams())?$params:null));
+                                      ($params=$profile->getQueryParams())?$params:null);
+        if(!$this->_logQueryStart || $this->_lastQueryId != $queryId){
+            $this->_message->addRow($row);
+        } else {
+            $this->_message->setRowAt($this->_message->getRowCount() -1, $row);
+        }
 
         $this->updateMessageLabel();
     }
