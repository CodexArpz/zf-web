Index: library/Zend/Feed/Writer/Feed/FeedAbstract.php
===================================================================
--- library/Zend/Feed/Writer/Feed/FeedAbstract.php	(revision 21742)
+++ library/Zend/Feed/Writer/Feed/FeedAbstract.php	(working copy)
@@ -634,6 +634,51 @@
     }
 
     /**
+     * Add an Atom:Link tag
+     * 
+     * @param array $link (href, rel, type, hreflang, length)
+     * @return void
+     */
+    public function addAtomLink(array $link)
+    {
+        if (!isset($link['href'])) {
+            require_once 'Zend/Feed/Exception.php';
+            throw new Zend_Feed_Exception('Link "href" is not set');
+        }
+        if (!Zend_Uri::check($link['href'])) {
+            require_once 'Zend/Feed/Exception.php';
+            throw new Zend_Feed_Exception('Link "href" is not a valid URI/IRI');
+        }
+        $this->_data['atomlink'][] = $link;
+    }
+
+    /**
+     * add an array of link tags 
+     * 
+     * @param array $links 
+     * @return void
+     */
+    public function addAtomLinks(array $links) 
+    {
+        foreach ($links as $link) {
+            $this->addAtomLink($link);
+        }
+    }
+
+    /**
+     * Retrieve an array of all atom links to be added to entry.
+     *
+     * @return array
+     */
+    public function getAtomLinks()
+    {
+        if (!array_key_exists('atomlink', $this->_data)) {
+            return null;
+        }
+        return $this->_data['atomlink'];
+    }
+
+    /**
      * Resets the instance and deletes all data
      *
      * @return void
Index: library/Zend/Feed/Writer/Renderer/Entry/Atom.php
===================================================================
--- library/Zend/Feed/Writer/Renderer/Entry/Atom.php	(revision 21742)
+++ library/Zend/Feed/Writer/Renderer/Entry/Atom.php	(working copy)
@@ -64,6 +64,7 @@
         $this->_setDescription($this->_dom, $entry);
         $this->_setDateCreated($this->_dom, $entry);
         $this->_setDateModified($this->_dom, $entry);
+        $this->_setAtomLinks($this->_dom, $entry);
         $this->_setLink($this->_dom, $entry);
         $this->_setId($this->_dom, $entry);
         $this->_setAuthors($this->_dom, $entry);
@@ -402,4 +403,27 @@
         $imported = $dom->importNode($element, true);
         $root->appendChild($imported); 
     }
+
+    /**
+     * Set atom links elements 
+     * 
+     * @param  DOMDocument $dom 
+     * @param  DOMElement $root 
+     * @return void
+     */
+    protected function _setAtomLinks(DOMDocument $dom, DOMElement $root)
+    {
+        $links = $this->getDataContainer()->getAtomLinks();
+        if (!$links) {
+            return;
+        }
+        foreach ($links as $linkinfo) {
+            $link = $dom->createElement('link');
+            foreach ($linkinfo as $name => $value) {
+                $link->setAttribute($name, $value);
+            }
+            $root->appendChild($link);
+        }
+    }
+
 }
Index: library/Zend/Feed/Writer/Renderer/Feed/Atom/AtomAbstract.php
===================================================================
--- library/Zend/Feed/Writer/Renderer/Feed/Atom/AtomAbstract.php	(revision 21742)
+++ library/Zend/Feed/Writer/Renderer/Feed/Atom/AtomAbstract.php	(working copy)
@@ -377,8 +377,30 @@
             $root->appendChild($hub);
         }
     }
-    
+
     /**
+     * Set atom links elements 
+     * 
+     * @param  DOMDocument $dom 
+     * @param  DOMElement $root 
+     * @return void
+     */
+    protected function _setAtomLinks(DOMDocument $dom, DOMElement $root)
+    {
+        $links = $this->getDataContainer()->getAtomLinks();
+        if (!$links) {
+            return;
+        }
+        foreach ($links as $linkinfo) {
+            $link = $dom->createElement('link');
+            foreach ($linkinfo as $name => $value) {
+                $link->setAttribute($name, $value);
+            }
+            $root->appendChild($link);
+        }
+    }
+
+    /**
      * Set feed cateories 
      * 
      * @param  DOMDocument $dom 
Index: library/Zend/Feed/Writer/Renderer/Feed/Atom.php
===================================================================
--- library/Zend/Feed/Writer/Renderer/Feed/Atom.php	(revision 21742)
+++ library/Zend/Feed/Writer/Renderer/Feed/Atom.php	(working copy)
@@ -86,6 +86,7 @@
         $this->_setGenerator($this->_dom, $root);
         $this->_setLink($this->_dom, $root);
         $this->_setFeedLinks($this->_dom, $root);
+        $this->_setAtomLinks($this->_dom, $root);
         $this->_setId($this->_dom, $root);
         $this->_setAuthors($this->_dom, $root);
         $this->_setCopyright($this->_dom, $root);
Index: library/Zend/Feed/Writer/Entry.php
===================================================================
--- library/Zend/Feed/Writer/Entry.php	(revision 21742)
+++ library/Zend/Feed/Writer/Entry.php	(working copy)
@@ -634,8 +634,53 @@
         }
         return $this->_data['enclosure'];
     }
-    
+
     /**
+     * Add an Atom:Link tag
+     * 
+     * @param array $link (href, rel, type, hreflang, length)
+     * @return void
+     */
+    public function addAtomLink(array $link)
+    {
+        if (!isset($link['href'])) {
+            require_once 'Zend/Feed/Exception.php';
+            throw new Zend_Feed_Exception('Link "href" is not set');
+        }
+        if (!Zend_Uri::check($link['href'])) {
+            require_once 'Zend/Feed/Exception.php';
+            throw new Zend_Feed_Exception('Link "href" is not a valid URI/IRI');
+        }
+        $this->_data['atomlink'][] = $link;
+    }
+
+    /**
+     * add an array of link tags 
+     * 
+     * @param array $links 
+     * @return void
+     */
+    public function addAtomLinks(array $links) 
+    {
+        foreach ($links as $link) {
+            $this->addAtomLink($link);
+        }
+    }
+
+    /**
+     * Retrieve an array of all atom links to be added to entry.
+     *
+     * @return array
+     */
+    public function getAtomLinks()
+    {
+        if (!array_key_exists('atomlink', $this->_data)) {
+            return null;
+        }
+        return $this->_data['atomlink'];
+    }
+
+    /**
      * Unset a specific data point
      *
      * @param string $name
