--- Db/Adapter/Abstract.php	(revision 12736)
+++ Db/Adapter/Abstract.php	(working copy)
@@ -535,7 +535,7 @@
             $set[] = $this->quoteIdentifier($col, true) . ' = ' . $val;
         }
 
-        $where = $this->_whereExpr($where);
+        list($where, $whbind) = $this->_whereExpr($where);
 
         /**
          * Build the UPDATE statement
@@ -548,7 +548,7 @@
         /**
          * Execute the statement and return the number of affected rows
          */
-        $stmt = $this->query($sql, array_values($bind));
+        $stmt = $this->query($sql, array_merge(array_values($bind), $whbind));
         $result = $stmt->rowCount();
         return $result;
     }
@@ -562,7 +562,7 @@
      */
     public function delete($table, $where = '')
     {
-        $where = $this->_whereExpr($where);
+        list($where, $whbind) = $this->_whereExpr($where);
 
         /**
          * Build the DELETE statement
@@ -574,7 +574,7 @@
         /**
          * Execute the statement and return the number of affected rows
          */
-        $stmt = $this->query($sql);
+        $stmt = $this->query($sql, $whbind);
         $result = $stmt->rowCount();
         return $result;
     }
@@ -582,26 +582,42 @@
     /**
      * Convert an array, string, or Zend_Db_Expr object
      * into a string to put in a WHERE clause.
+     * If $where is assoc array then values are assumed to be sql bind parameters
      *
      * @param mixed $where
-     * @return string
+     * @return array(string $sqlwhere, array $bind)
      */
     protected function _whereExpr($where)
     {
         if (empty($where)) {
-            return $where;
+            return array('', array());
         }
         if (!is_array($where)) {
             $where = array($where);
         }
-        foreach ($where as &$term) {
+
+        $bind = array();
+        foreach ($where as $key => &$term) {
             if ($term instanceof Zend_Db_Expr) {
                 $term = $term->__toString();
             }
+            elseif (is_string($key)) {
+                $bind[] = $term;
+
+                //$key is column name
+                if (strpos($key, '?')===false) {
+                    $term = $this->quoteIdentifier($key, true) . ' = ?';
+                }
+                //$key is expression
+                else {
+                    $term = $key;
+                }
+            }
             $term = '(' . $term . ')';
         }
         $where = implode(' AND ', $where);
-        return $where;
+
+        return array($where, $bind);
     }
 
     /**
