diff -u8prN library/Zend/Log/Writer/Response.php tests/Zend/Log/Writer/Response.php
--- library/Zend/Log/Writer/Response.php	2010-09-10 15:57:43.765000000 -0500
+++ tests/Zend/Log/Writer/Response.php	1969-12-31 18:00:00.000000000 -0600
@@ -1,114 +0,0 @@
-<?php
-
-/**
- * Zend Framework
- *
- * LICENSE
- *
- * This source file is subject to the new BSD license that is bundled
- * with this package in the file LICENSE.txt.
- * It is also available through the world-wide-web at this URL:
- * http://framework.zend.com/license/new-bsd
- * If you did not receive a copy of the license and are unable to
- * obtain it through the world-wide-web, please send an email
- * to license@zend.com so we can send you a copy immediately.
- *
- * @category   Zend
- * @package    Zend_Log
- * @subpackage Writer
- * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
- * @license    http://framework.zend.com/license/new-bsd     New BSD License
- * @version    $Id: Firebug.php 20096 2010-01-06 02:05:09Z bkarwin $
- */
-
-/** Zend_View_Helper_Placeholder */
-require_once 'Zend/View/Helper/Placeholder.php';
-
-/** Zend_Log_Writer_Abstract */
-require_once 'Zend/Log/Writer/Abstract.php';
-
-/** Zend_Log_Formatter_Simple */
-require_once 'Zend/Log/Formatter/Simple.php';
-
-/** Zend_Config */
-require_once 'Zend/Config.php';
-
-/**
- * Writes log messages to the response object of an MVC request so it can be
- * displayed at the bottom of a Zend_Layout/Zend_View script
- *
- * @category   Zend
- * @package    Zend_Log
- * @subpackage Writer
- * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
- * @license    http://framework.zend.com/license/new-bsd     New BSD License
- */
-
-class Zend_Log_Writer_Response extends Zend_Log_Writer_Abstract
-{
-	/**
-	 * 
-	 * The placeholder for holding the data for the view.
-	 * 
-	 * @var Zend_View_Helper_Placeholder
-	 */
-	
-	protected $_placeholder;
-	
-	/**
-	 * The name of the response segment to write to
-	 * @var string
-	 */
-	
-	protected $_name;
-	
-	public function __construct($name = 'debug')
-	{
-		$options = array();
-		if ($name instanceof Zend_Config || is_array($name)) {
-			$options = self::_parseConfig($name);
-		} else {
-			$options = array(
-			     'segmentName'   => $name
-			);
-		}
-		if (!isset($options['segmentName']) || $options['segmentName'] === null) {
-			require_once 'Zend/Log/Exception.php';
-			throw new Zend_Log_Exception('The configuration option "segmentName" must not be null');
-		}
-
-        $this->_name      = $options['segmentName'];
-        $this->_placeholder  = new Zend_View_Helper_Placeholder();
-        $this->_formatter = new Zend_Log_Formatter_Simple();
-	}
-	
-	public function setResponseName($name)
-	{
-		$this->_name = $name;
-	}
-	
-    protected function _write ($event)
-    {
-        $line = $this->_formatter->format($event);
-        $this->_placeholder->placeholder($this->_name)->append($line);
-    }
-    
-    protected static function _parseConfig($config)
-    {
-    	$config = parent::_parseConfig($config);
-        $config = array_merge(array(
-            'segmentName'       => 'debug'
-        ), $config);
-    	return $config;
-    }
-
-    public static function factory ($config = array())
-    {
-        return new self(
-            self::_parseConfig($config)
-        );
-
-    }
-
-	
-}
\ No newline at end of file
diff -u8prN library/Zend/Log/Writer/ResponseTest.php tests/Zend/Log/Writer/ResponseTest.php
--- library/Zend/Log/Writer/ResponseTest.php	1969-12-31 18:00:00.000000000 -0600
+++ tests/Zend/Log/Writer/ResponseTest.php	2010-09-10 16:01:19.306000000 -0500
@@ -0,0 +1,155 @@
+<?php
+/**
+ * Zend Framework
+ *
+ * LICENSE
+ *
+ * This source file is subject to the new BSD license that is bundled
+ * with this package in the file LICENSE.txt.
+ * It is also available through the world-wide-web at this URL:
+ * http://framework.zend.com/license/new-bsd
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@zend.com so we can send you a copy immediately.
+ *
+ * @category   Zend
+ * @package    Zend_Log
+ * @subpackage UnitTests
+ * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ * @version    $Id: FirebugTest.php 20096 2010-01-06 02:05:09Z bkarwin $
+ */
+
+/** PHPUnit_Framework_TestCase */
+require_once 'PHPUnit/Framework/TestCase.php';
+
+/** Zend_Log */
+require_once 'Zend/Log.php';
+
+/** Zend_Config */
+require_once 'Zend/Config.php';
+
+/** Zend_Log_Writer_Firebug */
+require_once 'Response.php';
+
+/** Zend_Controller_Response_Http */
+require_once 'Zend/Controller/Response/Http.php';
+
+/**
+ * @category   Zend
+ * @package    Zend_Log
+ * @subpackage UnitTests
+ * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ * @group      Zend_Log
+ */
+class Zend_Log_Writer_ResponseTest extends PHPUnit_Framework_TestCase
+{
+
+	public static function main()
+    {
+        require_once "PHPUnit/TextUI/TestRunner.php";
+
+        $suite  = new PHPUnit_Framework_TestSuite("Zend_Log_Writer_ResponseTest");
+        $result = PHPUnit_TextUI_TestRunner::run($suite);
+    }
+    
+    public function testConstructorWithSegment()
+    {
+        $placeholder = new Zend_View_Helper_Placeholder();
+        $log = new Zend_Log(new Zend_Log_Writer_Response('customSegment'));
+        $log->crit('test');
+        $this->assertGreaterThan(
+           -1,
+           strpos(
+               $placeholder->placeholder('customSegment')->toString(),
+               'test'
+           )
+        );    	
+    }
+    
+    public function testConstructorWithSingleResponseObject()
+    {
+    	$placeholder = new Zend_View_Helper_Placeholder();
+        $log = new Zend_Log(
+            new Zend_Log_Writer_Response(
+                'customSegment'
+            )
+        );
+        $log->crit('test');
+        $this->assertGreaterThan(
+           -1,
+           strpos(
+               $placeholder->placeholder('customSegment')->toString(),
+               'test'
+           )
+        );    	
+    }
+	
+    public function testConstructorNoConstructorOptions()
+    {
+    	$placeholder = new Zend_View_Helper_Placeholder();
+    	$log = new Zend_Log(new Zend_Log_Writer_Response());
+    	$log->crit('test');
+    	$this->assertGreaterThan(
+    	   -1,
+    	   strpos(
+    	       $placeholder->placeholder('debug')->toString(),
+    	       'test'
+    	   )
+        );
+    }
+    
+    public function testConstructorWithSegmentOption()
+    {
+    	$config = new Zend_Config(
+    	   array(
+    	       'segmentName'   => 'customSegment'
+    	   )
+    	);
+    	$placeholder = new Zend_View_Helper_Placeholder();
+        $log = new Zend_Log(new Zend_Log_Writer_Response($config));
+        $log->crit('test');
+        $this->assertGreaterThan(
+           -1,
+           strpos(
+               $placeholder->placeholder('customSegment')->toString(),
+               'test'
+           )
+        );
+    }
+    
+    
+    public function testConstructorWithNullSegment()
+    {
+    	try {
+            $log = new Zend_Log(new Zend_Log_Writer_Response(null));
+            $this->assertTrue(false, 'An exception was not thrown for an invalid segment name');
+    	} catch (Exception $e) {
+    		// An exception was thrown.  This is correct
+    	}
+        
+    }
+    
+    public function testEmptyStaticConstructor()
+    {
+    	$log = new Zend_Log(Zend_Log_Writer_Response::factory());
+    }
+    
+    public function testSettingResponseName()
+    {
+    	$placeholder = new Zend_View_Helper_Placeholder();
+    	$response = new Zend_Log_Writer_Response();
+    	$response->setResponseName('customSegment');
+    	$log = new Zend_Log($response);
+        $log->crit('test');
+        $this->assertGreaterThan(
+           -1,
+           strpos(
+               $placeholder->placeholder('customSegment')->toString(),
+               'test'
+           )
+        );
+    }
+}
+
