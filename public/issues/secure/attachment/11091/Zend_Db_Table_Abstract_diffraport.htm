<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- Generated by Compare It! (c) Grig Software -->
<HTML>
<HEAD>
<TITLE>File Diff Report</TITLE>
<style type="text/css">
<!--
body { font-family: Verdana,Arial,Helvetica; background-color: #FFFFFF; }
td   { border:0; font-family: Arial, Helvetica; font-size: xx-small;}
table { border:0; width:100%; color: #666666;}
thead  { background-color: #0054E3; color: #FFFFFF; font-family: Verdana, Arial, Helvetica; height: 30px; vertical-align: middle; text-align: center; font-weight: bold; }
.Same { width:48%; }
.SrcOnly { background-color: #C0DCC0; color:#008000; width:48%; }
.DstOnly { background-color: #C0DCC0; color:#C80000; width:48%; }
.Virtual { background-color: #EEEEEE; width:48%; }
.Changed { background-color: #C0DCC0; color:#0000FF; width:48%; }
.InSame{ color:#0000FF; }
.InDiff { color:#C80000; font-weight:bold; }
.LineNum { background-color: #EEEEEE; width:2%; }
.Stats { background-color: #EEEEEE; color:black; }
a { font-family: Arial, Helvetica; font-size: xx-small;background-color: #EEEEEE; color:blue;}
-->
</STYLE>
</HEAD>
<BODY>
<table><tr><td align=right>Monday, January 14, 2008 22:51:22</td></tr></table>
<table>
<thead><tr><td width=50%>F:\xampp\htdocs\Zend\Db\Table\Abstract.php</td><td width=50%>F:\library\Zend\library\Zend\Db\Table\Abstract.php</td></tr></thead></table>

<table cellspacing=1 cellpadding=0>
<tr><td class="LineNum">1</td><td class = "LineNum">1</td><td>&lt;?php</td></tr>
<tr><td class="LineNum">2</td><td class = "LineNum">2</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">3</td><td class = "LineNum">3</td><td>/**</td></tr>
<tr><td class="LineNum">4</td><td class = "LineNum">4</td><td>&nbsp;* Zend Framework</td></tr>
<tr><td class="LineNum">5</td><td class = "LineNum">5</td><td>&nbsp;*</td></tr>
<tr><td class="LineNum">6</td><td class = "LineNum">6</td><td>&nbsp;* LICENSE</td></tr>
<tr><td class="LineNum">7</td><td class = "LineNum">7</td><td>&nbsp;*</td></tr>
<tr><td class="LineNum">8</td><td class = "LineNum">8</td><td>&nbsp;* This source file is subject to the new BSD license that is bundled</td></tr>
<tr><td class="LineNum">9</td><td class = "LineNum">9</td><td>&nbsp;* with this package in the file LICENSE.txt.</td></tr>
<tr><td class="LineNum">10</td><td class = "LineNum">10</td><td>&nbsp;* It is also available through the world-wide-web at this URL:</td></tr>
<tr><td class="LineNum">11</td><td class = "LineNum">11</td><td>&nbsp;* http://framework.zend.com/license/new-bsd</td></tr>
<tr><td class="LineNum">12</td><td class = "LineNum">12</td><td>&nbsp;* If you did not receive a copy of the license and are unable to</td></tr>
<tr><td class="LineNum">13</td><td class = "LineNum">13</td><td>&nbsp;* obtain it through the world-wide-web, please send an email</td></tr>
<tr><td class="LineNum">14</td><td class = "LineNum">14</td><td>&nbsp;* to license@zend.com so we can send you a copy immediately.</td></tr>
<tr><td class="LineNum">15</td><td class = "LineNum">15</td><td>&nbsp;*</td></tr>
<tr><td class="LineNum">16</td><td class = "LineNum">16</td><td>&nbsp;* @category   Zend</td></tr>
<tr><td class="LineNum">17</td><td class = "LineNum">17</td><td>&nbsp;* @package    Zend_Db</td></tr>
<tr><td class="LineNum">18</td><td class = "LineNum">18</td><td>&nbsp;* @subpackage Table</td></tr>
<tr><td class="LineNum">19</td><td class = "LineNum">19</td><td>&nbsp;* @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (http://www.zend.com)</td></tr>
<tr><td class="LineNum">20</td><td class = "LineNum">20</td><td>&nbsp;* @license    http://framework.zend.com/license/new-bsd     New BSD License</td></tr>
<tr><td class="LineNum">21</td><td class = "LineNum">21</td><td>&nbsp;* @version    $Id: Abstract.php 6748 2007-11-06 01:46:25Z peptolab $</td></tr>
<tr><td class="LineNum">22</td><td class = "LineNum">22</td><td>&nbsp;*/</td></tr>
<tr><td class="LineNum">23</td><td class = "LineNum">23</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">24</td><td class = "LineNum">24</td><td>/**</td></tr>
<tr><td class="LineNum">25</td><td class = "LineNum">25</td><td>&nbsp;* @see Zend_Db_Adapter_Abstract</td></tr>
<tr><td class="LineNum">26</td><td class = "LineNum">26</td><td>&nbsp;*/</td></tr>
<tr><td class="LineNum">27</td><td class = "LineNum">27</td><td>require_once 'Zend/Db/Adapter/Abstract.php';</td></tr>
<tr><td class="LineNum">28</td><td class = "LineNum">28</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">29</td><td class = "LineNum">29</td><td>/**</td></tr>
<tr><td class="LineNum">30</td><td class = "LineNum">30</td><td>&nbsp;* @see Zend_Db</td></tr>
<tr><td class="LineNum">31</td><td class = "LineNum">31</td><td>&nbsp;*/</td></tr>
<tr><td class="LineNum">32</td><td class = "LineNum">32</td><td>require_once 'Zend/Db.php';</td></tr>
<tr><td class="LineNum">33</td><td class = "LineNum">33</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">34</td><td class = "LineNum">34</td><td>/**</td></tr>
<tr><td class="LineNum">35</td><td class = "LineNum">35</td><td>&nbsp;* Class for SQL table interface.</td></tr>
<tr><td class="LineNum">36</td><td class = "LineNum">36</td><td>&nbsp;*</td></tr>
<tr><td class="LineNum">37</td><td class = "LineNum">37</td><td>&nbsp;* @category   Zend</td></tr>
<tr><td class="LineNum">38</td><td class = "LineNum">38</td><td>&nbsp;* @package    Zend_Db</td></tr>
<tr><td class="LineNum">39</td><td class = "LineNum">39</td><td>&nbsp;* @subpackage Table</td></tr>
<tr><td class="LineNum">40</td><td class = "LineNum">40</td><td>&nbsp;* @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (http://www.zend.com)</td></tr>
<tr><td class="LineNum">41</td><td class = "LineNum">41</td><td>&nbsp;* @license    http://framework.zend.com/license/new-bsd     New BSD License</td></tr>
<tr><td class="LineNum">42</td><td class = "LineNum">42</td><td>&nbsp;*/</td></tr>
<tr><td class="LineNum">43</td><td class = "LineNum">43</td><td>abstract class Zend_Db_Table_Abstract</td></tr>
<tr><td class="LineNum">44</td><td class = "LineNum">44</td><td>{</td></tr>
<tr><td class="LineNum">45</td><td class = "LineNum">45</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">46</td><td class = "LineNum">46</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const ADAPTER          = 'db';</td></tr>
<tr><td class="LineNum">47</td><td class = "LineNum">47</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const SCHEMA           = 'schema';</td></tr>
<tr><td class="LineNum">48</td><td class = "LineNum">48</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const NAME             = 'name';</td></tr>
<tr><td class="LineNum">49</td><td class = "LineNum">49</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const PRIMARY          = 'primary';</td></tr>
<tr><td class="LineNum">50</td><td class = "LineNum">50</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const COLS             = 'cols';</td></tr>
<tr><td class="LineNum">51</td><td class = "LineNum">51</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const METADATA         = 'metadata';</td></tr>
<tr><td class="LineNum">52</td><td class = "LineNum">52</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const METADATA_CACHE   = 'metadataCache';</td></tr>
<tr><td class="LineNum">53</td><td class = "LineNum">53</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const ROW_CLASS        = 'rowClass';</td></tr>
<tr><td class="LineNum">54</td><td class = "LineNum">54</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const ROWSET_CLASS     = 'rowsetClass';</td></tr>
<tr><td class="LineNum">55</td><td class = "LineNum">55</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const REFERENCE_MAP    = 'referenceMap';</td></tr>
<tr><td class="LineNum">56</td><td class = "LineNum">56</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const DEPENDENT_TABLES = 'dependentTables';</td></tr>
<tr><td class="LineNum">57</td><td class = "LineNum">57</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const SEQUENCE         = 'sequence';</td></tr>
<tr><td class="LineNum">58</td><td class = "LineNum">58</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">59</td><td class = "LineNum">59</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const COLUMNS          = 'columns';</td></tr>
<tr><td class="LineNum">60</td><td class = "LineNum">60</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const REF_TABLE_CLASS  = 'refTableClass';</td></tr>
<tr><td class="LineNum">61</td><td class = "LineNum">61</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const REF_COLUMNS      = 'refColumns';</td></tr>
<tr><td class="LineNum">62</td><td class = "LineNum">62</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const ON_DELETE        = 'onDelete';</td></tr>
<tr><td class="LineNum">63</td><td class = "LineNum">63</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const ON_UPDATE        = 'onUpdate';</td></tr>
<tr><td class="LineNum">64</td><td class = "LineNum">64</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">65</td><td class = "LineNum">65</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const CASCADE          = 'cascade';</td></tr>
<tr><td class="LineNum">66</td><td class = "LineNum">66</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const RESTRICT         = 'restrict';</td></tr>
<tr><td class="LineNum">67</td><td class = "LineNum">67</td><td>&nbsp;&nbsp;&nbsp;&nbsp;const SET_NULL         = 'setNull';</td></tr>
<tr><td class="LineNum">68</td><td class = "LineNum">68</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">69</td><td class = "LineNum">69</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">70</td><td class = "LineNum">70</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Default Zend_Db_Adapter_Abstract object.</td></tr>
<tr><td class="LineNum">71</td><td class = "LineNum">71</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">72</td><td class = "LineNum">72</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var Zend_Db_Adapter_Abstract</td></tr>
<tr><td class="LineNum">73</td><td class = "LineNum">73</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">74</td><td class = "LineNum">74</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected static $_defaultDb;</td></tr>
<tr><td class="LineNum">75</td><td class = "LineNum">75</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">76</td><td class = "LineNum">76</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">77</td><td class = "LineNum">77</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Default cache for information provided by the adapter's describeTable() method.</td></tr>
<tr><td class="LineNum">78</td><td class = "LineNum">78</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">79</td><td class = "LineNum">79</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var Zend_Cache_Core</td></tr>
<tr><td class="LineNum">80</td><td class = "LineNum">80</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">81</td><td class = "LineNum">81</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected static $_defaultMetadataCache = null;</td></tr>
<tr><td class="LineNum">82</td><td class = "LineNum">82</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">83</td><td class = "LineNum">83</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">84</td><td class = "LineNum">84</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Zend_Db_Adapter_Abstract object.</td></tr>
<tr><td class="LineNum">85</td><td class = "LineNum">85</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">86</td><td class = "LineNum">86</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var Zend_Db_Adapter_Abstract</td></tr>
<tr><td class="LineNum">87</td><td class = "LineNum">87</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">88</td><td class = "LineNum">88</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_db;</td></tr>
<tr><td class="LineNum">89</td><td class = "LineNum">89</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">90</td><td class = "LineNum">90</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">91</td><td class = "LineNum">91</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The schema name (default null means current schema)</td></tr>
<tr><td class="LineNum">92</td><td class = "LineNum">92</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">93</td><td class = "LineNum">93</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var array</td></tr>
<tr><td class="LineNum">94</td><td class = "LineNum">94</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">95</td><td class = "LineNum">95</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_schema = null;</td></tr>
<tr><td class="LineNum">96</td><td class = "LineNum">96</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">97</td><td class = "LineNum">97</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">98</td><td class = "LineNum">98</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The table name.</td></tr>
<tr><td class="LineNum">99</td><td class = "LineNum">99</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">100</td><td class = "LineNum">100</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var array</td></tr>
<tr><td class="LineNum">101</td><td class = "LineNum">101</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">102</td><td class = "LineNum">102</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_name = null;</td></tr>
<tr><td class="LineNum">103</td><td class = "LineNum">103</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">104</td><td class = "LineNum">104</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">105</td><td class = "LineNum">105</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The table column names derived from Zend_Db_Adapter_Abstract::describeTable().</td></tr>
<tr><td class="LineNum">106</td><td class = "LineNum">106</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">107</td><td class = "LineNum">107</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var array</td></tr>
<tr><td class="LineNum">108</td><td class = "LineNum">108</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">109</td><td class = "LineNum">109</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_cols;</td></tr>
<tr><td class="LineNum">110</td><td class = "LineNum">110</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">111</td><td class = "LineNum">111</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">112</td><td class = "LineNum">112</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The primary key column or columns.</td></tr>
<tr><td class="LineNum">113</td><td class = "LineNum">113</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A compound key should be declared as an array.</td></tr>
<tr><td class="LineNum">114</td><td class = "LineNum">114</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* You may declare a single-column primary key</td></tr>
<tr><td class="LineNum">115</td><td class = "LineNum">115</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* as a string.</td></tr>
<tr><td class="LineNum">116</td><td class = "LineNum">116</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">117</td><td class = "LineNum">117</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var mixed</td></tr>
<tr><td class="LineNum">118</td><td class = "LineNum">118</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">119</td><td class = "LineNum">119</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_primary = null;</td></tr>
<tr><td class="LineNum">120</td><td class = "LineNum">120</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">121</td><td class = "LineNum">121</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">122</td><td class = "LineNum">122</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If your primary key is a compound key, and one of the columns uses</td></tr>
<tr><td class="LineNum">123</td><td class = "LineNum">123</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* an auto-increment or sequence-generated value, set _identity</td></tr>
<tr><td class="LineNum">124</td><td class = "LineNum">124</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to the ordinal index in the $_primary array for that column.</td></tr>
<tr><td class="LineNum">125</td><td class = "LineNum">125</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Note this index is the position of the column in the primary key,</td></tr>
<tr><td class="LineNum">126</td><td class = "LineNum">126</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* not the position of the column in the table.  The primary key</td></tr>
<tr><td class="LineNum">127</td><td class = "LineNum">127</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* array is 1-based.</td></tr>
<tr><td class="LineNum">128</td><td class = "LineNum">128</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">129</td><td class = "LineNum">129</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var integer</td></tr>
<tr><td class="LineNum">130</td><td class = "LineNum">130</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">131</td><td class = "LineNum">131</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_identity = 1;</td></tr>
<tr><td class="LineNum">132</td><td class = "LineNum">132</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">133</td><td class = "LineNum">133</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">134</td><td class = "LineNum">134</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Define the logic for new values in the primary key.</td></tr>
<tr><td class="LineNum">135</td><td class = "LineNum">135</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* May be a string, boolean true, or boolean false.</td></tr>
<tr><td class="LineNum">136</td><td class = "LineNum">136</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">137</td><td class = "LineNum">137</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var mixed</td></tr>
<tr><td class="LineNum">138</td><td class = "LineNum">138</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">139</td><td class = "LineNum">139</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_sequence = true;</td></tr>
<tr><td class="LineNum">140</td><td class = "LineNum">140</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">141</td><td class = "LineNum">141</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">142</td><td class = "LineNum">142</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Information provided by the adapter's describeTable() method.</td></tr>
<tr><td class="LineNum">143</td><td class = "LineNum">143</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">144</td><td class = "LineNum">144</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var array</td></tr>
<tr><td class="LineNum">145</td><td class = "LineNum">145</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">146</td><td class = "LineNum">146</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_metadata = array();</td></tr>
<tr><td class="LineNum">147</td><td class = "LineNum">147</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">148</td><td class = "LineNum">148</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">149</td><td class = "LineNum">149</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Cache for information provided by the adapter's describeTable() method.</td></tr>
<tr><td class="LineNum">150</td><td class = "LineNum">150</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">151</td><td class = "LineNum">151</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var Zend_Cache_Core</td></tr>
<tr><td class="LineNum">152</td><td class = "LineNum">152</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">153</td><td class = "LineNum">153</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_metadataCache = null;</td></tr>
<tr><td class="LineNum">154</td><td class = "LineNum">154</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">155</td><td class = "LineNum">155</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">156</td><td class = "LineNum">156</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Classname for row</td></tr>
<tr><td class="LineNum">157</td><td class = "LineNum">157</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">158</td><td class = "LineNum">158</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var string</td></tr>
<tr><td class="LineNum">159</td><td class = "LineNum">159</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">160</td><td class = "LineNum">160</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_rowClass = 'Zend_Db_Table_Row';</td></tr>
<tr><td class="LineNum">161</td><td class = "LineNum">161</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">162</td><td class = "LineNum">162</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">163</td><td class = "LineNum">163</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Classname for rowset</td></tr>
<tr><td class="LineNum">164</td><td class = "LineNum">164</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">165</td><td class = "LineNum">165</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var string</td></tr>
<tr><td class="LineNum">166</td><td class = "LineNum">166</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">167</td><td class = "LineNum">167</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_rowsetClass = 'Zend_Db_Table_Rowset';</td></tr>
<tr><td class="LineNum">168</td><td class = "LineNum">168</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">169</td><td class = "LineNum">169</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">170</td><td class = "LineNum">170</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Associative array map of declarative referential integrity rules.</td></tr>
<tr><td class="LineNum">171</td><td class = "LineNum">171</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* This array has one entry per foreign key in the current table.</td></tr>
<tr><td class="LineNum">172</td><td class = "LineNum">172</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Each key is a mnemonic name for one reference rule.</td></tr>
<tr><td class="LineNum">173</td><td class = "LineNum">173</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">174</td><td class = "LineNum">174</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Each value is also an associative array, with the following keys:</td></tr>
<tr><td class="LineNum">175</td><td class = "LineNum">175</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - columns       = array of names of column(s) in the child table.</td></tr>
<tr><td class="LineNum">176</td><td class = "LineNum">176</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - refTableClass = class name of the parent table.</td></tr>
<tr><td class="LineNum">177</td><td class = "LineNum">177</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - refColumns    = array of names of column(s) in the parent table,</td></tr>
<tr><td class="LineNum">178</td><td class = "LineNum">178</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                   in the same order as those in the 'columns' entry.</td></tr>
<tr><td class="LineNum">179</td><td class = "LineNum">179</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - onDelete      = "cascade" means that a delete in the parent table also</td></tr>
<tr><td class="LineNum">180</td><td class = "LineNum">180</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                   causes a delete of referencing rows in the child table.</td></tr>
<tr><td class="LineNum">181</td><td class = "LineNum">181</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - onUpdate      = "cascade" means that an update of primary key values in</td></tr>
<tr><td class="LineNum">182</td><td class = "LineNum">182</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                   the parent table also causes an update of referencing</td></tr>
<tr><td class="LineNum">183</td><td class = "LineNum">183</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                   rows in the child table.</td></tr>
<tr><td class="LineNum">184</td><td class = "LineNum">184</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">185</td><td class = "LineNum">185</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var array</td></tr>
<tr><td class="LineNum">186</td><td class = "LineNum">186</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">187</td><td class = "LineNum">187</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_referenceMap = array();</td></tr>
<tr><td class="LineNum">188</td><td class = "LineNum">188</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">189</td><td class = "LineNum">189</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">190</td><td class = "LineNum">190</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Simple array of class names of tables that are "children" of the current</td></tr>
<tr><td class="LineNum">191</td><td class = "LineNum">191</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* table, in other words tables that contain a foreign key to this one.</td></tr>
<tr><td class="LineNum">192</td><td class = "LineNum">192</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Array elements are not table names; they are class names of classes that</td></tr>
<tr><td class="LineNum">193</td><td class = "LineNum">193</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* extend Zend_Db_Table_Abstract.</td></tr>
<tr><td class="LineNum">194</td><td class = "LineNum">194</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">195</td><td class = "LineNum">195</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var array</td></tr>
<tr><td class="LineNum">196</td><td class = "LineNum">196</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">197</td><td class = "LineNum">197</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected $_dependentTables = array();</td></tr>
<tr><td class="LineNum">198</td><td class = "LineNum">198</td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">199</td><td class = "LineNum">199</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
</table>
<table  cellspacing=1 cellpadding=0>
<tr><td class="LineNum">200</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Define if use default values from databese</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">201</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">202</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @var bool</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">203</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">204</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;protected $_useDefaultValues = true ;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">205</td><td class="SrcOnly">&nbsp;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">206</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;/**</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
</table>
<table cellspacing=1 cellpadding=0>
<tr><td class="LineNum">207</td><td class = "LineNum">200</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Constructor.</td></tr>
<tr><td class="LineNum">208</td><td class = "LineNum">201</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">209</td><td class = "LineNum">202</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Supported params for $config are:</td></tr>
<tr><td class="LineNum">210</td><td class = "LineNum">203</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - db              = user-supplied instance of database connector,</td></tr>
<tr><td class="LineNum">211</td><td class = "LineNum">204</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                     or key name of registry instance.</td></tr>
<tr><td class="LineNum">212</td><td class = "LineNum">205</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - name            = table name.</td></tr>
<tr><td class="LineNum">213</td><td class = "LineNum">206</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - primary         = string or array of primary key(s).</td></tr>
<tr><td class="LineNum">214</td><td class = "LineNum">207</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - rowClass        = row class name.</td></tr>
<tr><td class="LineNum">215</td><td class = "LineNum">208</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - rowsetClass     = rowset class name.</td></tr>
<tr><td class="LineNum">216</td><td class = "LineNum">209</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - referenceMap    = array structure to declare relationship</td></tr>
<tr><td class="LineNum">217</td><td class = "LineNum">210</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*                     to parent tables.</td></tr>
<tr><td class="LineNum">218</td><td class = "LineNum">211</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - dependentTables = array of child tables.</td></tr>
<tr><td class="LineNum">219</td><td class = "LineNum">212</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - metadataCache   = cache for information from adapter describeTable().</td></tr>
<tr><td class="LineNum">220</td><td class = "LineNum">213</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">221</td><td class = "LineNum">214</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $config Array of user-specified config options, or just the Db Adapter.</td></tr>
<tr><td class="LineNum">222</td><td class = "LineNum">215</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">223</td><td class = "LineNum">216</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">224</td><td class = "LineNum">217</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function __construct($config = array())</td></tr>
<tr><td class="LineNum">225</td><td class = "LineNum">218</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">226</td><td class = "LineNum">219</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">227</td><td class = "LineNum">220</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Allow a scalar argument to be the Adapter object or Registry key.</td></tr>
<tr><td class="LineNum">228</td><td class = "LineNum">221</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">229</td><td class = "LineNum">222</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!is_array($config)) {</td></tr>
<tr><td class="LineNum">230</td><td class = "LineNum">223</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$config = array(self::ADAPTER =&gt; $config);</td></tr>
<tr><td class="LineNum">231</td><td class = "LineNum">224</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">232</td><td class = "LineNum">225</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">233</td><td class = "LineNum">226</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($config as $key =&gt; $value) {</td></tr>
<tr><td class="LineNum">234</td><td class = "LineNum">227</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch ($key) {</td></tr>
<tr><td class="LineNum">235</td><td class = "LineNum">228</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::ADAPTER:</td></tr>
<tr><td class="LineNum">236</td><td class = "LineNum">229</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setAdapter($value);</td></tr>
<tr><td class="LineNum">237</td><td class = "LineNum">230</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">238</td><td class = "LineNum">231</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::SCHEMA:</td></tr>
<tr><td class="LineNum">239</td><td class = "LineNum">232</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_schema = (string) $value;</td></tr>
<tr><td class="LineNum">240</td><td class = "LineNum">233</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">241</td><td class = "LineNum">234</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::NAME:</td></tr>
<tr><td class="LineNum">242</td><td class = "LineNum">235</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_name = (string) $value;</td></tr>
<tr><td class="LineNum">243</td><td class = "LineNum">236</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">244</td><td class = "LineNum">237</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::PRIMARY:</td></tr>
<tr><td class="LineNum">245</td><td class = "LineNum">238</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_primary = (array) $value;</td></tr>
<tr><td class="LineNum">246</td><td class = "LineNum">239</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">247</td><td class = "LineNum">240</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::ROW_CLASS:</td></tr>
<tr><td class="LineNum">248</td><td class = "LineNum">241</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;setRowClass($value);</td></tr>
<tr><td class="LineNum">249</td><td class = "LineNum">242</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">250</td><td class = "LineNum">243</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::ROWSET_CLASS:</td></tr>
<tr><td class="LineNum">251</td><td class = "LineNum">244</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;setRowsetClass($value);</td></tr>
<tr><td class="LineNum">252</td><td class = "LineNum">245</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">253</td><td class = "LineNum">246</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::REFERENCE_MAP:</td></tr>
<tr><td class="LineNum">254</td><td class = "LineNum">247</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;setReferences($value);</td></tr>
<tr><td class="LineNum">255</td><td class = "LineNum">248</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">256</td><td class = "LineNum">249</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::DEPENDENT_TABLES:</td></tr>
<tr><td class="LineNum">257</td><td class = "LineNum">250</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;setDependentTables($value);</td></tr>
<tr><td class="LineNum">258</td><td class = "LineNum">251</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">259</td><td class = "LineNum">252</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::METADATA_CACHE:</td></tr>
<tr><td class="LineNum">260</td><td class = "LineNum">253</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setMetadataCache($value);</td></tr>
<tr><td class="LineNum">261</td><td class = "LineNum">254</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">262</td><td class = "LineNum">255</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::SEQUENCE:</td></tr>
<tr><td class="LineNum">263</td><td class = "LineNum">256</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setSequence($value);</td></tr>
<tr><td class="LineNum">264</td><td class = "LineNum">257</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">265</td><td class = "LineNum">258</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</td></tr>
<tr><td class="LineNum">266</td><td class = "LineNum">259</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ignore unrecognized configuration directive</td></tr>
<tr><td class="LineNum">267</td><td class = "LineNum">260</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">268</td><td class = "LineNum">261</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">269</td><td class = "LineNum">262</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">270</td><td class = "LineNum">263</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">271</td><td class = "LineNum">264</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setup();</td></tr>
<tr><td class="LineNum">272</td><td class = "LineNum">265</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">273</td><td class = "LineNum">266</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">274</td><td class = "LineNum">267</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">275</td><td class = "LineNum">268</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  string $classname</td></tr>
<tr><td class="LineNum">276</td><td class = "LineNum">269</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">277</td><td class = "LineNum">270</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">278</td><td class = "LineNum">271</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function setRowClass($classname)</td></tr>
<tr><td class="LineNum">279</td><td class = "LineNum">272</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">280</td><td class = "LineNum">273</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_rowClass = (string) $classname;</td></tr>
<tr><td class="LineNum">281</td><td class = "LineNum">274</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">282</td><td class = "LineNum">275</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">283</td><td class = "LineNum">276</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">284</td><td class = "LineNum">277</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">285</td><td class = "LineNum">278</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">286</td><td class = "LineNum">279</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return string</td></tr>
<tr><td class="LineNum">287</td><td class = "LineNum">280</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">288</td><td class = "LineNum">281</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function getRowClass()</td></tr>
<tr><td class="LineNum">289</td><td class = "LineNum">282</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">290</td><td class = "LineNum">283</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_rowClass;</td></tr>
<tr><td class="LineNum">291</td><td class = "LineNum">284</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">292</td><td class = "LineNum">285</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">293</td><td class = "LineNum">286</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">294</td><td class = "LineNum">287</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  string $classname</td></tr>
<tr><td class="LineNum">295</td><td class = "LineNum">288</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">296</td><td class = "LineNum">289</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">297</td><td class = "LineNum">290</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function setRowsetClass($classname)</td></tr>
<tr><td class="LineNum">298</td><td class = "LineNum">291</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">299</td><td class = "LineNum">292</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_rowsetClass = (string) $classname;</td></tr>
<tr><td class="LineNum">300</td><td class = "LineNum">293</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">301</td><td class = "LineNum">294</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">302</td><td class = "LineNum">295</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">303</td><td class = "LineNum">296</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">304</td><td class = "LineNum">297</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">305</td><td class = "LineNum">298</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return string</td></tr>
<tr><td class="LineNum">306</td><td class = "LineNum">299</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">307</td><td class = "LineNum">300</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function getRowsetClass()</td></tr>
<tr><td class="LineNum">308</td><td class = "LineNum">301</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">309</td><td class = "LineNum">302</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_rowsetClass;</td></tr>
<tr><td class="LineNum">310</td><td class = "LineNum">303</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">311</td><td class = "LineNum">304</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">312</td><td class = "LineNum">305</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">313</td><td class = "LineNum">306</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param array $referenceMap</td></tr>
<tr><td class="LineNum">314</td><td class = "LineNum">307</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">315</td><td class = "LineNum">308</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">316</td><td class = "LineNum">309</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function setReferences(array $referenceMap)</td></tr>
<tr><td class="LineNum">317</td><td class = "LineNum">310</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">318</td><td class = "LineNum">311</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_referenceMap = $referenceMap;</td></tr>
<tr><td class="LineNum">319</td><td class = "LineNum">312</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">320</td><td class = "LineNum">313</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">321</td><td class = "LineNum">314</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">322</td><td class = "LineNum">315</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">323</td><td class = "LineNum">316</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">324</td><td class = "LineNum">317</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param string $tableClassname</td></tr>
<tr><td class="LineNum">325</td><td class = "LineNum">318</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param string $ruleKey OPTIONAL</td></tr>
<tr><td class="LineNum">326</td><td class = "LineNum">319</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return array</td></tr>
<tr><td class="LineNum">327</td><td class = "LineNum">320</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">328</td><td class = "LineNum">321</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">329</td><td class = "LineNum">322</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function getReference($tableClassname, $ruleKey = null)</td></tr>
<tr><td class="LineNum">330</td><td class = "LineNum">323</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">331</td><td class = "LineNum">324</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$thisClass = get_class($this);</td></tr>
<tr><td class="LineNum">332</td><td class = "LineNum">325</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$refMap = $this-&gt;_getReferenceMapNormalized();</td></tr>
<tr><td class="LineNum">333</td><td class = "LineNum">326</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($ruleKey !== null) {</td></tr>
<tr><td class="LineNum">334</td><td class = "LineNum">327</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isset($refMap[$ruleKey])) {</td></tr>
<tr><td class="LineNum">335</td><td class = "LineNum">328</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once "Zend/Db/Table/Exception.php";</td></tr>
<tr><td class="LineNum">336</td><td class = "LineNum">329</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("No reference rule \"$ruleKey\" from table $thisClass to table $tableClassname");</td></tr>
<tr><td class="LineNum">337</td><td class = "LineNum">330</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">338</td><td class = "LineNum">331</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($refMap[$ruleKey][self::REF_TABLE_CLASS] != $tableClassname) {</td></tr>
<tr><td class="LineNum">339</td><td class = "LineNum">332</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once "Zend/Db/Table/Exception.php";</td></tr>
<tr><td class="LineNum">340</td><td class = "LineNum">333</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("Reference rule \"$ruleKey\" does not reference table $tableClassname");</td></tr>
<tr><td class="LineNum">341</td><td class = "LineNum">334</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">342</td><td class = "LineNum">335</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $refMap[$ruleKey];</td></tr>
<tr><td class="LineNum">343</td><td class = "LineNum">336</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">344</td><td class = "LineNum">337</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($refMap as $reference) {</td></tr>
<tr><td class="LineNum">345</td><td class = "LineNum">338</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($reference[self::REF_TABLE_CLASS] == $tableClassname) {</td></tr>
<tr><td class="LineNum">346</td><td class = "LineNum">339</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $reference;</td></tr>
<tr><td class="LineNum">347</td><td class = "LineNum">340</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">348</td><td class = "LineNum">341</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">349</td><td class = "LineNum">342</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once "Zend/Db/Table/Exception.php";</td></tr>
<tr><td class="LineNum">350</td><td class = "LineNum">343</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("No reference from table $thisClass to table $tableClassname");</td></tr>
<tr><td class="LineNum">351</td><td class = "LineNum">344</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">352</td><td class = "LineNum">345</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">353</td><td class = "LineNum">346</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">354</td><td class = "LineNum">347</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array $dependentTables</td></tr>
<tr><td class="LineNum">355</td><td class = "LineNum">348</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">356</td><td class = "LineNum">349</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">357</td><td class = "LineNum">350</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function setDependentTables(array $dependentTables)</td></tr>
<tr><td class="LineNum">358</td><td class = "LineNum">351</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">359</td><td class = "LineNum">352</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_dependentTables = $dependentTables;</td></tr>
<tr><td class="LineNum">360</td><td class = "LineNum">353</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">361</td><td class = "LineNum">354</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">362</td><td class = "LineNum">355</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">363</td><td class = "LineNum">356</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">364</td><td class = "LineNum">357</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">365</td><td class = "LineNum">358</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return array</td></tr>
<tr><td class="LineNum">366</td><td class = "LineNum">359</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">367</td><td class = "LineNum">360</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function getDependentTables()</td></tr>
<tr><td class="LineNum">368</td><td class = "LineNum">361</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">369</td><td class = "LineNum">362</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_dependentTables;</td></tr>
<tr><td class="LineNum">370</td><td class = "LineNum">363</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">371</td><td class = "LineNum">364</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">372</td><td class = "LineNum">365</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">373</td><td class = "LineNum">366</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Sets the default Zend_Db_Adapter_Abstract for all Zend_Db_Table objects.</td></tr>
<tr><td class="LineNum">374</td><td class = "LineNum">367</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">375</td><td class = "LineNum">368</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $db Either an Adapter object, or a string naming a Registry key</td></tr>
<tr><td class="LineNum">376</td><td class = "LineNum">369</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">377</td><td class = "LineNum">370</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">378</td><td class = "LineNum">371</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public static final function setDefaultAdapter($db = null)</td></tr>
<tr><td class="LineNum">379</td><td class = "LineNum">372</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">380</td><td class = "LineNum">373</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend_Db_Table_Abstract::$_defaultDb = self::_setupAdapter($db);</td></tr>
<tr><td class="LineNum">381</td><td class = "LineNum">374</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">382</td><td class = "LineNum">375</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">383</td><td class = "LineNum">376</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">384</td><td class = "LineNum">377</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the default Zend_Db_Adapter_Abstract for all Zend_Db_Table objects.</td></tr>
<tr><td class="LineNum">385</td><td class = "LineNum">378</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">386</td><td class = "LineNum">379</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Adapter_Abstract or null</td></tr>
<tr><td class="LineNum">387</td><td class = "LineNum">380</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">388</td><td class = "LineNum">381</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public static final function getDefaultAdapter()</td></tr>
<tr><td class="LineNum">389</td><td class = "LineNum">382</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">390</td><td class = "LineNum">383</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return self::$_defaultDb;</td></tr>
<tr><td class="LineNum">391</td><td class = "LineNum">384</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">392</td><td class = "LineNum">385</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">393</td><td class = "LineNum">386</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">394</td><td class = "LineNum">387</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $db Either an Adapter object, or a string naming a Registry key</td></tr>
<tr><td class="LineNum">395</td><td class = "LineNum">388</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">396</td><td class = "LineNum">389</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">397</td><td class = "LineNum">390</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected final function _setAdapter($db)</td></tr>
<tr><td class="LineNum">398</td><td class = "LineNum">391</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">399</td><td class = "LineNum">392</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_db = self::_setupAdapter($db);</td></tr>
<tr><td class="LineNum">400</td><td class = "LineNum">393</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">401</td><td class = "LineNum">394</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">402</td><td class = "LineNum">395</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">403</td><td class = "LineNum">396</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">404</td><td class = "LineNum">397</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the Zend_Db_Adapter_Abstract for this particular Zend_Db_Table object.</td></tr>
<tr><td class="LineNum">405</td><td class = "LineNum">398</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">406</td><td class = "LineNum">399</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Adapter_Abstract</td></tr>
<tr><td class="LineNum">407</td><td class = "LineNum">400</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">408</td><td class = "LineNum">401</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public final function getAdapter()</td></tr>
<tr><td class="LineNum">409</td><td class = "LineNum">402</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">410</td><td class = "LineNum">403</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_db;</td></tr>
<tr><td class="LineNum">411</td><td class = "LineNum">404</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">412</td><td class = "LineNum">405</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">413</td><td class = "LineNum">406</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">414</td><td class = "LineNum">407</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $db Either an Adapter object, or a string naming a Registry key</td></tr>
<tr><td class="LineNum">415</td><td class = "LineNum">408</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Adapter_Abstract</td></tr>
<tr><td class="LineNum">416</td><td class = "LineNum">409</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">417</td><td class = "LineNum">410</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">418</td><td class = "LineNum">411</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected static final function _setupAdapter($db)</td></tr>
<tr><td class="LineNum">419</td><td class = "LineNum">412</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">420</td><td class = "LineNum">413</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($db === null) {</td></tr>
<tr><td class="LineNum">421</td><td class = "LineNum">414</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;</td></tr>
<tr><td class="LineNum">422</td><td class = "LineNum">415</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">423</td><td class = "LineNum">416</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_string($db)) {</td></tr>
<tr><td class="LineNum">424</td><td class = "LineNum">417</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Registry.php';</td></tr>
<tr><td class="LineNum">425</td><td class = "LineNum">418</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$db = Zend_Registry::get($db);</td></tr>
<tr><td class="LineNum">426</td><td class = "LineNum">419</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">427</td><td class = "LineNum">420</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$db instanceof Zend_Db_Adapter_Abstract) {</td></tr>
<tr><td class="LineNum">428</td><td class = "LineNum">421</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">429</td><td class = "LineNum">422</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception('Argument must be of type Zend_Db_Adapter_Abstract, or a Registry key where a Zend_Db_Adapter_Abstract object is stored');</td></tr>
<tr><td class="LineNum">430</td><td class = "LineNum">423</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">431</td><td class = "LineNum">424</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $db;</td></tr>
<tr><td class="LineNum">432</td><td class = "LineNum">425</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">433</td><td class = "LineNum">426</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">434</td><td class = "LineNum">427</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">435</td><td class = "LineNum">428</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Sets the default metadata cache for information returned by Zend_Db_Adapter_Abstract::describeTable().</td></tr>
<tr><td class="LineNum">436</td><td class = "LineNum">429</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">437</td><td class = "LineNum">430</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If $defaultMetadataCache is null, then no metadata cache is used by default.</td></tr>
<tr><td class="LineNum">438</td><td class = "LineNum">431</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">439</td><td class = "LineNum">432</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $metadataCache Either a Cache object, or a string naming a Registry key</td></tr>
<tr><td class="LineNum">440</td><td class = "LineNum">433</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">441</td><td class = "LineNum">434</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">442</td><td class = "LineNum">435</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public static function setDefaultMetadataCache($metadataCache = null)</td></tr>
<tr><td class="LineNum">443</td><td class = "LineNum">436</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">444</td><td class = "LineNum">437</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::$_defaultMetadataCache = self::_setupMetadataCache($metadataCache);</td></tr>
<tr><td class="LineNum">445</td><td class = "LineNum">438</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">446</td><td class = "LineNum">439</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">447</td><td class = "LineNum">440</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">448</td><td class = "LineNum">441</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the default metadata cache for information returned by Zend_Db_Adapter_Abstract::describeTable().</td></tr>
<tr><td class="LineNum">449</td><td class = "LineNum">442</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">450</td><td class = "LineNum">443</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Cache_Core or null</td></tr>
<tr><td class="LineNum">451</td><td class = "LineNum">444</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">452</td><td class = "LineNum">445</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public static function getDefaultMetadataCache()</td></tr>
<tr><td class="LineNum">453</td><td class = "LineNum">446</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">454</td><td class = "LineNum">447</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return self::$_defaultMetadataCache;</td></tr>
<tr><td class="LineNum">455</td><td class = "LineNum">448</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">456</td><td class = "LineNum">449</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">457</td><td class = "LineNum">450</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">458</td><td class = "LineNum">451</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Sets the metadata cache for information returned by Zend_Db_Adapter_Abstract::describeTable().</td></tr>
<tr><td class="LineNum">459</td><td class = "LineNum">452</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">460</td><td class = "LineNum">453</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If $metadataCache is null, then no metadata cache is used. Since there is no opportunity to reload metadata</td></tr>
<tr><td class="LineNum">461</td><td class = "LineNum">454</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* after instantiation, this method need not be public, particularly because that it would have no effect</td></tr>
<tr><td class="LineNum">462</td><td class = "LineNum">455</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* results in unnecessary API complexity. To configure the metadata cache, use the metadataCache configuration</td></tr>
<tr><td class="LineNum">463</td><td class = "LineNum">456</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* option for the class constructor upon instantiation.</td></tr>
<tr><td class="LineNum">464</td><td class = "LineNum">457</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">465</td><td class = "LineNum">458</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $metadataCache Either a Cache object, or a string naming a Registry key</td></tr>
<tr><td class="LineNum">466</td><td class = "LineNum">459</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">467</td><td class = "LineNum">460</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">468</td><td class = "LineNum">461</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setMetadataCache($metadataCache)</td></tr>
<tr><td class="LineNum">469</td><td class = "LineNum">462</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">470</td><td class = "LineNum">463</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_metadataCache = self::_setupMetadataCache($metadataCache);</td></tr>
<tr><td class="LineNum">471</td><td class = "LineNum">464</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">472</td><td class = "LineNum">465</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">473</td><td class = "LineNum">466</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">474</td><td class = "LineNum">467</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">475</td><td class = "LineNum">468</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Gets the metadata cache for information returned by Zend_Db_Adapter_Abstract::describeTable().</td></tr>
<tr><td class="LineNum">476</td><td class = "LineNum">469</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">477</td><td class = "LineNum">470</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Cache_Core or null</td></tr>
<tr><td class="LineNum">478</td><td class = "LineNum">471</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">479</td><td class = "LineNum">472</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function getMetadataCache()</td></tr>
<tr><td class="LineNum">480</td><td class = "LineNum">473</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">481</td><td class = "LineNum">474</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_metadataCache;</td></tr>
<tr><td class="LineNum">482</td><td class = "LineNum">475</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">483</td><td class = "LineNum">476</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">484</td><td class = "LineNum">477</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">485</td><td class = "LineNum">478</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param mixed $metadataCache Either a Cache object, or a string naming a Registry key</td></tr>
<tr><td class="LineNum">486</td><td class = "LineNum">479</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Cache_Core</td></tr>
<tr><td class="LineNum">487</td><td class = "LineNum">480</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">488</td><td class = "LineNum">481</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">489</td><td class = "LineNum">482</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected static final function _setupMetadataCache($metadataCache)</td></tr>
<tr><td class="LineNum">490</td><td class = "LineNum">483</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">491</td><td class = "LineNum">484</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($metadataCache === null) {</td></tr>
<tr><td class="LineNum">492</td><td class = "LineNum">485</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;</td></tr>
<tr><td class="LineNum">493</td><td class = "LineNum">486</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">494</td><td class = "LineNum">487</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_string($metadataCache)) {</td></tr>
<tr><td class="LineNum">495</td><td class = "LineNum">488</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Registry.php';</td></tr>
<tr><td class="LineNum">496</td><td class = "LineNum">489</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$metadataCache = Zend_Registry::get($metadataCache);</td></tr>
<tr><td class="LineNum">497</td><td class = "LineNum">490</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">498</td><td class = "LineNum">491</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$metadataCache instanceof Zend_Cache_Core) {</td></tr>
<tr><td class="LineNum">499</td><td class = "LineNum">492</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">500</td><td class = "LineNum">493</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception('Argument must be of type Zend_Cache_Core, or a Registry key where a Zend_Cache_Core object is stored');</td></tr>
<tr><td class="LineNum">501</td><td class = "LineNum">494</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">502</td><td class = "LineNum">495</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $metadataCache;</td></tr>
<tr><td class="LineNum">503</td><td class = "LineNum">496</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">504</td><td class = "LineNum">497</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">505</td><td class = "LineNum">498</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">506</td><td class = "LineNum">499</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Sets the sequence member, which defines the behavior for generating</td></tr>
<tr><td class="LineNum">507</td><td class = "LineNum">500</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* primary key values in new rows.</td></tr>
<tr><td class="LineNum">508</td><td class = "LineNum">501</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - If this is a string, then the string names the sequence object.</td></tr>
<tr><td class="LineNum">509</td><td class = "LineNum">502</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - If this is boolean true, then the key uses an auto-incrementing</td></tr>
<tr><td class="LineNum">510</td><td class = "LineNum">503</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   or identity mechanism.</td></tr>
<tr><td class="LineNum">511</td><td class = "LineNum">504</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - If this is boolean false, then the key is user-defined.</td></tr>
<tr><td class="LineNum">512</td><td class = "LineNum">505</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   Use this for natural keys, for example.</td></tr>
<tr><td class="LineNum">513</td><td class = "LineNum">506</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">514</td><td class = "LineNum">507</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param mixed $sequence</td></tr>
<tr><td class="LineNum">515</td><td class = "LineNum">508</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Adapter_Abstract Provides a fluent interface</td></tr>
<tr><td class="LineNum">516</td><td class = "LineNum">509</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">517</td><td class = "LineNum">510</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setSequence($sequence)</td></tr>
<tr><td class="LineNum">518</td><td class = "LineNum">511</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">519</td><td class = "LineNum">512</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_sequence = $sequence;</td></tr>
<tr><td class="LineNum">520</td><td class = "LineNum">513</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">521</td><td class = "LineNum">514</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this;</td></tr>
<tr><td class="LineNum">522</td><td class = "LineNum">515</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">523</td><td class = "LineNum">516</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">524</td><td class = "LineNum">517</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">525</td><td class = "LineNum">518</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Turnkey for initialization of a table object.</td></tr>
<tr><td class="LineNum">526</td><td class = "LineNum">519</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Calls other protected methods for individual tasks, to make it easier</td></tr>
<tr><td class="LineNum">527</td><td class = "LineNum">520</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* for a subclass to override part of the setup logic.</td></tr>
<tr><td class="LineNum">528</td><td class = "LineNum">521</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">529</td><td class = "LineNum">522</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">530</td><td class = "LineNum">523</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">531</td><td class = "LineNum">524</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setup()</td></tr>
<tr><td class="LineNum">532</td><td class = "LineNum">525</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">533</td><td class = "LineNum">526</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setupDatabaseAdapter();</td></tr>
<tr><td class="LineNum">534</td><td class = "LineNum">527</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setupTableName();</td></tr>
<tr><td class="LineNum">535</td><td class = "LineNum">528</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setupMetadata();</td></tr>
<tr><td class="LineNum">536</td><td class = "LineNum">529</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setupPrimaryKey();</td></tr>
<tr><td class="LineNum">537</td><td class = "LineNum">530</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">538</td><td class = "LineNum">531</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">539</td><td class = "LineNum">532</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">540</td><td class = "LineNum">533</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Initialize database adapter.</td></tr>
<tr><td class="LineNum">541</td><td class = "LineNum">534</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">542</td><td class = "LineNum">535</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">543</td><td class = "LineNum">536</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">544</td><td class = "LineNum">537</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setupDatabaseAdapter()</td></tr>
<tr><td class="LineNum">545</td><td class = "LineNum">538</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">546</td><td class = "LineNum">539</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (! $this-&gt;_db) {</td></tr>
<tr><td class="LineNum">547</td><td class = "LineNum">540</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_db = self::getDefaultAdapter();</td></tr>
<tr><td class="LineNum">548</td><td class = "LineNum">541</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">549</td><td class = "LineNum">542</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">550</td><td class = "LineNum">543</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">551</td><td class = "LineNum">544</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">552</td><td class = "LineNum">545</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Initialize table and schema names.</td></tr>
<tr><td class="LineNum">553</td><td class = "LineNum">546</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">554</td><td class = "LineNum">547</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If the table name is not set in the class definition,</td></tr>
<tr><td class="LineNum">555</td><td class = "LineNum">548</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* use the class name itself as the table name.</td></tr>
<tr><td class="LineNum">556</td><td class = "LineNum">549</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">557</td><td class = "LineNum">550</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* A schema name provided with the table name (e.g., "schema.table") overrides</td></tr>
<tr><td class="LineNum">558</td><td class = "LineNum">551</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* any existing value for $this-&gt;_schema.</td></tr>
<tr><td class="LineNum">559</td><td class = "LineNum">552</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">560</td><td class = "LineNum">553</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">561</td><td class = "LineNum">554</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">562</td><td class = "LineNum">555</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setupTableName()</td></tr>
<tr><td class="LineNum">563</td><td class = "LineNum">556</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">564</td><td class = "LineNum">557</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (! $this-&gt;_name) {</td></tr>
<tr><td class="LineNum">565</td><td class = "LineNum">558</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_name = get_class($this);</td></tr>
<tr><td class="LineNum">566</td><td class = "LineNum">559</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (strpos($this-&gt;_name, '.')) {</td></tr>
<tr><td class="LineNum">567</td><td class = "LineNum">560</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list($this-&gt;_schema, $this-&gt;_name) = explode('.', $this-&gt;_name);</td></tr>
<tr><td class="LineNum">568</td><td class = "LineNum">561</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">569</td><td class = "LineNum">562</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">570</td><td class = "LineNum">563</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">571</td><td class = "LineNum">564</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">572</td><td class = "LineNum">565</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Initializes metadata.</td></tr>
<tr><td class="LineNum">573</td><td class = "LineNum">566</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">574</td><td class = "LineNum">567</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If metadata cannot be loaded from cache, adapter's describeTable() method is called to discover metadata</td></tr>
<tr><td class="LineNum">575</td><td class = "LineNum">568</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* information. Returns true if and only if the metadata are loaded from cache.</td></tr>
<tr><td class="LineNum">576</td><td class = "LineNum">569</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">577</td><td class = "LineNum">570</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return boolean</td></tr>
<tr><td class="LineNum">578</td><td class = "LineNum">571</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">579</td><td class = "LineNum">572</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">580</td><td class = "LineNum">573</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setupMetadata()</td></tr>
<tr><td class="LineNum">581</td><td class = "LineNum">574</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">582</td><td class = "LineNum">575</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Assume that metadata will be loaded from cache</td></tr>
<tr><td class="LineNum">583</td><td class = "LineNum">576</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$isMetadataFromCache = true;</td></tr>
<tr><td class="LineNum">584</td><td class = "LineNum">577</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">585</td><td class = "LineNum">578</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If $this has no metadata cache but the class has a default metadata cache</td></tr>
<tr><td class="LineNum">586</td><td class = "LineNum">579</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (null === $this-&gt;_metadataCache && null !== self::$_defaultMetadataCache) {</td></tr>
<tr><td class="LineNum">587</td><td class = "LineNum">580</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Make $this use the default metadata cache of the class</td></tr>
<tr><td class="LineNum">588</td><td class = "LineNum">581</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_setMetadataCache(self::$_defaultMetadataCache);</td></tr>
<tr><td class="LineNum">589</td><td class = "LineNum">582</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">590</td><td class = "LineNum">583</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">591</td><td class = "LineNum">584</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If $this has a metadata cache</td></tr>
<tr><td class="LineNum">592</td><td class = "LineNum">585</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (null !== $this-&gt;_metadataCache) {</td></tr>
<tr><td class="LineNum">593</td><td class = "LineNum">586</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Define the cache identifier where the metadata are saved</td></tr>
<tr><td class="LineNum">594</td><td class = "LineNum">587</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$cacheId = md5("$this-&gt;_schema.$this-&gt;_name");</td></tr>
<tr><td class="LineNum">595</td><td class = "LineNum">588</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">596</td><td class = "LineNum">589</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">597</td><td class = "LineNum">590</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If $this has no metadata cache or metadata cache misses</td></tr>
<tr><td class="LineNum">598</td><td class = "LineNum">591</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (null === $this-&gt;_metadataCache || !($metadata = $this-&gt;_metadataCache-&gt;load($cacheId))) {</td></tr>
<tr><td class="LineNum">599</td><td class = "LineNum">592</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Metadata are not loaded from cache</td></tr>
<tr><td class="LineNum">600</td><td class = "LineNum">593</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$isMetadataFromCache = false;</td></tr>
<tr><td class="LineNum">601</td><td class = "LineNum">594</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Fetch metadata from the adapter's describeTable() method</td></tr>
<tr><td class="LineNum">602</td><td class = "LineNum">595</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$metadata = $this-&gt;_db-&gt;describeTable($this-&gt;_name, $this-&gt;_schema);</td></tr>
<tr><td class="LineNum">603</td><td class = "LineNum">596</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If $this has a metadata cache, then cache the metadata</td></tr>
<tr><td class="LineNum">604</td><td class = "LineNum">597</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (null !== $this-&gt;_metadataCache && !$this-&gt;_metadataCache-&gt;save($metadata, $cacheId)) {</td></tr>
<tr><td class="LineNum">605</td><td class = "LineNum">598</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">606</td><td class = "LineNum">599</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @see Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">607</td><td class = "LineNum">600</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">608</td><td class = "LineNum">601</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">609</td><td class = "LineNum">602</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception('Failed saving metadata to metadataCache');</td></tr>
<tr><td class="LineNum">610</td><td class = "LineNum">603</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">611</td><td class = "LineNum">604</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">612</td><td class = "LineNum">605</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">613</td><td class = "LineNum">606</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Assign the metadata to $this</td></tr>
<tr><td class="LineNum">614</td><td class = "LineNum">607</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_metadata = $metadata;</td></tr>
<tr><td class="LineNum">615</td><td class = "LineNum">608</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">616</td><td class = "LineNum">609</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Update the columns</td></tr>
<tr><td class="LineNum">617</td><td class = "LineNum">610</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_cols = array_keys($this-&gt;_metadata);</td></tr>
<tr><td class="LineNum">618</td><td class = "LineNum">611</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">619</td><td class = "LineNum">612</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Return whether the metadata were loaded from cache</td></tr>
<tr><td class="LineNum">620</td><td class = "LineNum">613</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $isMetadataFromCache;</td></tr>
<tr><td class="LineNum">621</td><td class = "LineNum">614</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">622</td><td class = "LineNum">615</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">623</td><td class = "LineNum">616</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">624</td><td class = "LineNum">617</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Initialize primary key from metadata.</td></tr>
<tr><td class="LineNum">625</td><td class = "LineNum">618</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If $_primary is not defined, discover primary keys</td></tr>
<tr><td class="LineNum">626</td><td class = "LineNum">619</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* from the information returned by describeTable().</td></tr>
<tr><td class="LineNum">627</td><td class = "LineNum">620</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">628</td><td class = "LineNum">621</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return void</td></tr>
<tr><td class="LineNum">629</td><td class = "LineNum">622</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">630</td><td class = "LineNum">623</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">631</td><td class = "LineNum">624</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _setupPrimaryKey()</td></tr>
<tr><td class="LineNum">632</td><td class = "LineNum">625</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">633</td><td class = "LineNum">626</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!$this-&gt;_primary) {</td></tr>
<tr><td class="LineNum">634</td><td class = "LineNum">627</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_primary = array();</td></tr>
<tr><td class="LineNum">635</td><td class = "LineNum">628</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($this-&gt;_metadata as $col) {</td></tr>
<tr><td class="LineNum">636</td><td class = "LineNum">629</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($col['PRIMARY']) {</td></tr>
<tr><td class="LineNum">637</td><td class = "LineNum">630</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_primary[ $col['PRIMARY_POSITION'] ] = $col['COLUMN_NAME'];</td></tr>
<tr><td class="LineNum">638</td><td class = "LineNum">631</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($col['IDENTITY']) {</td></tr>
<tr><td class="LineNum">639</td><td class = "LineNum">632</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_identity = $col['PRIMARY_POSITION'];</td></tr>
<tr><td class="LineNum">640</td><td class = "LineNum">633</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">641</td><td class = "LineNum">634</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">642</td><td class = "LineNum">635</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">643</td><td class = "LineNum">636</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if no primary key was specified and none was found in the metadata</td></tr>
<tr><td class="LineNum">644</td><td class = "LineNum">637</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// then throw an exception.</td></tr>
<tr><td class="LineNum">645</td><td class = "LineNum">638</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (empty($this-&gt;_primary)) {</td></tr>
<tr><td class="LineNum">646</td><td class = "LineNum">639</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">647</td><td class = "LineNum">640</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception('A table must have a primary key, but none was found');</td></tr>
<tr><td class="LineNum">648</td><td class = "LineNum">641</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">649</td><td class = "LineNum">642</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (!is_array($this-&gt;_primary)) {</td></tr>
<tr><td class="LineNum">650</td><td class = "LineNum">643</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_primary = array(1 =&gt; $this-&gt;_primary);</td></tr>
<tr><td class="LineNum">651</td><td class = "LineNum">644</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (isset($this-&gt;_primary[0])) {</td></tr>
<tr><td class="LineNum">652</td><td class = "LineNum">645</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array_unshift($this-&gt;_primary, null);</td></tr>
<tr><td class="LineNum">653</td><td class = "LineNum">646</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset($this-&gt;_primary[0]);</td></tr>
<tr><td class="LineNum">654</td><td class = "LineNum">647</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">655</td><td class = "LineNum">648</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">656</td><td class = "LineNum">649</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (! array_intersect((array) $this-&gt;_primary, $this-&gt;_cols) == (array) $this-&gt;_primary) {</td></tr>
<tr><td class="LineNum">657</td><td class = "LineNum">650</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">658</td><td class = "LineNum">651</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("Primary key column(s) ("</td></tr>
<tr><td class="LineNum">659</td><td class = "LineNum">652</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. implode(',', (array) $this-&gt;_primary)</td></tr>
<tr><td class="LineNum">660</td><td class = "LineNum">653</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. ") are not columns in this table ("</td></tr>
<tr><td class="LineNum">661</td><td class = "LineNum">654</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. implode(',', $this-&gt;_cols)</td></tr>
<tr><td class="LineNum">662</td><td class = "LineNum">655</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. ")");</td></tr>
<tr><td class="LineNum">663</td><td class = "LineNum">656</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">664</td><td class = "LineNum">657</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">665</td><td class = "LineNum">658</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$primary    = (array) $this-&gt;_primary;</td></tr>
<tr><td class="LineNum">666</td><td class = "LineNum">659</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pkIdentity = $primary[(int) $this-&gt;_identity];</td></tr>
<tr><td class="LineNum">667</td><td class = "LineNum">660</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">668</td><td class = "LineNum">661</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">669</td><td class = "LineNum">662</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Special case for PostgreSQL: a SERIAL key implicitly uses a sequence</td></tr>
<tr><td class="LineNum">670</td><td class = "LineNum">663</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* object whose name is "&lt;table&gt;_&lt;column&gt;_seq".</td></tr>
<tr><td class="LineNum">671</td><td class = "LineNum">664</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">672</td><td class = "LineNum">665</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($this-&gt;_sequence === true && $this-&gt;_db instanceof Zend_Db_Adapter_Pdo_Pgsql) {</td></tr>
<tr><td class="LineNum">673</td><td class = "LineNum">666</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_sequence = "{$this-&gt;_name}_{$pkIdentity}_seq";</td></tr>
<tr><td class="LineNum">674</td><td class = "LineNum">667</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($this-&gt;_schema) {</td></tr>
<tr><td class="LineNum">675</td><td class = "LineNum">668</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_sequence = $this-&gt;_schema . '.' . $this-&gt;_sequence;</td></tr>
<tr><td class="LineNum">676</td><td class = "LineNum">669</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">677</td><td class = "LineNum">670</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">678</td><td class = "LineNum">671</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">679</td><td class = "LineNum">672</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">680</td><td class = "LineNum">673</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">681</td><td class = "LineNum">674</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Returns a normalized version of the reference map</td></tr>
<tr><td class="LineNum">682</td><td class = "LineNum">675</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">683</td><td class = "LineNum">676</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return array</td></tr>
<tr><td class="LineNum">684</td><td class = "LineNum">677</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">685</td><td class = "LineNum">678</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _getReferenceMapNormalized()</td></tr>
<tr><td class="LineNum">686</td><td class = "LineNum">679</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">687</td><td class = "LineNum">680</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$referenceMapNormalized = array();</td></tr>
<tr><td class="LineNum">688</td><td class = "LineNum">681</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">689</td><td class = "LineNum">682</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($this-&gt;_referenceMap as $rule =&gt; $map) {</td></tr>
<tr><td class="LineNum">690</td><td class = "LineNum">683</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">691</td><td class = "LineNum">684</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$referenceMapNormalized[$rule] = array();</td></tr>
<tr><td class="LineNum">692</td><td class = "LineNum">685</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">693</td><td class = "LineNum">686</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($map as $key =&gt; $value) {</td></tr>
<tr><td class="LineNum">694</td><td class = "LineNum">687</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch ($key) {</td></tr>
<tr><td class="LineNum">695</td><td class = "LineNum">688</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">696</td><td class = "LineNum">689</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// normalize COLUMNS and REF_COLUMNS to arrays</td></tr>
<tr><td class="LineNum">697</td><td class = "LineNum">690</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::COLUMNS:</td></tr>
<tr><td class="LineNum">698</td><td class = "LineNum">691</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::REF_COLUMNS:</td></tr>
<tr><td class="LineNum">699</td><td class = "LineNum">692</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!is_array($value)) {</td></tr>
<tr><td class="LineNum">700</td><td class = "LineNum">693</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$referenceMapNormalized[$rule][$key] = array($value);</td></tr>
<tr><td class="LineNum">701</td><td class = "LineNum">694</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">702</td><td class = "LineNum">695</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$referenceMapNormalized[$rule][$key] = $value;</td></tr>
<tr><td class="LineNum">703</td><td class = "LineNum">696</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">704</td><td class = "LineNum">697</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">705</td><td class = "LineNum">698</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">706</td><td class = "LineNum">699</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// other values are copied as-is</td></tr>
<tr><td class="LineNum">707</td><td class = "LineNum">700</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</td></tr>
<tr><td class="LineNum">708</td><td class = "LineNum">701</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$referenceMapNormalized[$rule][$key] = $value;</td></tr>
<tr><td class="LineNum">709</td><td class = "LineNum">702</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">710</td><td class = "LineNum">703</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">711</td><td class = "LineNum">704</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">712</td><td class = "LineNum">705</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">713</td><td class = "LineNum">706</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">714</td><td class = "LineNum">707</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $referenceMapNormalized;</td></tr>
<tr><td class="LineNum">715</td><td class = "LineNum">708</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">716</td><td class = "LineNum">709</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">717</td><td class = "LineNum">710</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
</table>
<table  cellspacing=1 cellpadding=0>
<tr><td class="LineNum">718</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* sets  the use defaults property</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">719</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">720</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param bool $value</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">721</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">722</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;public function setUseDefaultValues($value)</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">723</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;{</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">724</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_useDefaultValues = $value;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">725</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">726</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">727</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;/**</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">728</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* get  the use defaults property</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">729</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">730</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return bool</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">731</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">732</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;public function getUseDefaultValues()</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">733</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;{</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">734</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_useDefaultValues;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">735</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">736</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">737</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;/**</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
</table>
<table cellspacing=1 cellpadding=0>
<tr><td class="LineNum">738</td><td class = "LineNum">711</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Returns table information.</td></tr>
<tr><td class="LineNum">739</td><td class = "LineNum">712</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">740</td><td class = "LineNum">713</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return array</td></tr>
<tr><td class="LineNum">741</td><td class = "LineNum">714</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">742</td><td class = "LineNum">715</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function info()</td></tr>
<tr><td class="LineNum">743</td><td class = "LineNum">716</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">744</td><td class = "LineNum">717</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array(</td></tr>
<tr><td class="LineNum">745</td><td class = "LineNum">718</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::SCHEMA           =&gt; $this-&gt;_schema,</td></tr>
<tr><td class="LineNum">746</td><td class = "LineNum">719</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::NAME             =&gt; $this-&gt;_name,</td></tr>
<tr><td class="LineNum">747</td><td class = "LineNum">720</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::COLS             =&gt; (array) $this-&gt;_cols,</td></tr>
<tr><td class="LineNum">748</td><td class = "LineNum">721</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::PRIMARY          =&gt; (array) $this-&gt;_primary,</td></tr>
<tr><td class="LineNum">749</td><td class = "LineNum">722</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::METADATA         =&gt; $this-&gt;_metadata,</td></tr>
<tr><td class="LineNum">750</td><td class = "LineNum">723</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::ROW_CLASS        =&gt; $this-&gt;_rowClass,</td></tr>
<tr><td class="LineNum">751</td><td class = "LineNum">724</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::ROWSET_CLASS     =&gt; $this-&gt;_rowsetClass,</td></tr>
<tr><td class="LineNum">752</td><td class = "LineNum">725</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::REFERENCE_MAP    =&gt; $this-&gt;_referenceMap,</td></tr>
<tr><td class="LineNum">753</td><td class = "LineNum">726</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::DEPENDENT_TABLES =&gt; $this-&gt;_dependentTables,</td></tr>
<tr><td class="LineNum">754</td><td class = "LineNum">727</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self::SEQUENCE         =&gt; $this-&gt;_sequence</td></tr>
<tr><td class="LineNum">755</td><td class = "LineNum">728</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</td></tr>
<tr><td class="LineNum">756</td><td class = "LineNum">729</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">757</td><td class = "LineNum">730</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">758</td><td class = "LineNum">731</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">759</td><td class = "LineNum">732</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Inserts a new row.</td></tr>
<tr><td class="LineNum">760</td><td class = "LineNum">733</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">761</td><td class = "LineNum">734</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array  $data  Column-value pairs.</td></tr>
<tr><td class="LineNum">762</td><td class = "LineNum">735</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return mixed         The primary key of the row inserted.</td></tr>
<tr><td class="LineNum">763</td><td class = "LineNum">736</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">764</td><td class = "LineNum">737</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function insert(array $data)</td></tr>
<tr><td class="LineNum">765</td><td class = "LineNum">738</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">766</td><td class = "LineNum">739</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">767</td><td class = "LineNum">740</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Zend_Db_Table assumes that if you have a compound primary key</td></tr>
<tr><td class="LineNum">768</td><td class = "LineNum">741</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* and one of the columns in the key uses a sequence,</td></tr>
<tr><td class="LineNum">769</td><td class = "LineNum">742</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* it's the _first_ column in the compound key.</td></tr>
<tr><td class="LineNum">770</td><td class = "LineNum">743</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">771</td><td class = "LineNum">744</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$primary = (array) $this-&gt;_primary;</td></tr>
<tr><td class="LineNum">772</td><td class = "LineNum">745</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pkIdentity = $primary[(int)$this-&gt;_identity];</td></tr>
<tr><td class="LineNum">773</td><td class = "LineNum">746</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">774</td><td class = "LineNum">747</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">775</td><td class = "LineNum">748</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If this table uses a database sequence object and the data does not</td></tr>
<tr><td class="LineNum">776</td><td class = "LineNum">749</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* specify a value, then get the next ID from the sequence and add it</td></tr>
<tr><td class="LineNum">777</td><td class = "LineNum">750</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* to the row.  We assume that only the first column in a compound</td></tr>
<tr><td class="LineNum">778</td><td class = "LineNum">751</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* primary key takes a value from a sequence.</td></tr>
<tr><td class="LineNum">779</td><td class = "LineNum">752</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">780</td><td class = "LineNum">753</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_string($this-&gt;_sequence) && !isset($data[$pkIdentity])) {</td></tr>
<tr><td class="LineNum">781</td><td class = "LineNum">754</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data[$pkIdentity] = $this-&gt;_db-&gt;nextSequenceId($this-&gt;_sequence);</td></tr>
<tr><td class="LineNum">782</td><td class = "LineNum">755</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">783</td><td class = "LineNum">756</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">784</td><td class = "LineNum">757</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">785</td><td class = "LineNum">758</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* If the primary key can be generated automatically, and no value was</td></tr>
<tr><td class="LineNum">786</td><td class = "LineNum">759</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* specified in the user-supplied data, then omit it from the tuple.</td></tr>
<tr><td class="LineNum">787</td><td class = "LineNum">760</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">788</td><td class = "LineNum">761</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (array_key_exists($pkIdentity, $data) && $data[$pkIdentity] === null) {</td></tr>
<tr><td class="LineNum">789</td><td class = "LineNum">762</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset($data[$pkIdentity]);</td></tr>
<tr><td class="LineNum">790</td><td class = "LineNum">763</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
</table>
<table  cellspacing=1 cellpadding=0>
<tr><td class="LineNum">791</td><td class="SrcOnly">&nbsp;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">792</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">793</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Use defauls</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">794</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">795</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">796</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($this-&gt;getUseDefaultValues()== true) {</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">797</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$defaults= array();</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">798</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$primary = (array)$this-&gt;_primary;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">799</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($this-&gt;_cols as $col) {</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">800</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (in_array($col, $primary)) {</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">801</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$defaults[$col] = null;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">802</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">803</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (isset($this-&gt;_metadata[$col]) && array_key_exists('DEFAULT', $this-&gt;_metadata[$col])) {</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">804</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$defaults[$col] = new Zend_Db_Expr('DEFAULT');</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">805</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">806</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">807</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data= array_merge($defaults,$data);</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">808</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
<tr><td class="LineNum">809</td><td class="SrcOnly">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td class="LineNum"></td><td class="Virtual">&nbsp;</td></tr>
</table>
<table cellspacing=1 cellpadding=0>
<tr><td class="LineNum">810</td><td class = "LineNum">764</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>
<tr><td class="LineNum">811</td><td class = "LineNum">765</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">812</td><td class = "LineNum">766</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* INSERT the new row.</td></tr>
<tr><td class="LineNum">813</td><td class = "LineNum">767</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">814</td><td class = "LineNum">768</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tableSpec = ($this-&gt;_schema ? $this-&gt;_schema . '.' : '') . $this-&gt;_name;</td></tr>
<tr><td class="LineNum">815</td><td class = "LineNum">769</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_db-&gt;insert($tableSpec, $data);</td></tr>
<tr><td class="LineNum">816</td><td class = "LineNum">770</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">817</td><td class = "LineNum">771</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">818</td><td class = "LineNum">772</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fetch the most recent ID generated by an auto-increment</td></tr>
<tr><td class="LineNum">819</td><td class = "LineNum">773</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* or IDENTITY column, unless the user has specified a value,</td></tr>
<tr><td class="LineNum">820</td><td class = "LineNum">774</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* overriding the auto-increment mechanism.</td></tr>
<tr><td class="LineNum">821</td><td class = "LineNum">775</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">822</td><td class = "LineNum">776</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($this-&gt;_sequence === true && !isset($data[$pkIdentity])) {</td></tr>
<tr><td class="LineNum">823</td><td class = "LineNum">777</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data[$pkIdentity] = $this-&gt;_db-&gt;lastInsertId();</td></tr>
<tr><td class="LineNum">824</td><td class = "LineNum">778</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">825</td><td class = "LineNum">779</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">826</td><td class = "LineNum">780</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">827</td><td class = "LineNum">781</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Return the primary key value if the PK is a single column,</td></tr>
<tr><td class="LineNum">828</td><td class = "LineNum">782</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* else return an associative array of the PK column/value pairs.</td></tr>
<tr><td class="LineNum">829</td><td class = "LineNum">783</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">830</td><td class = "LineNum">784</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pkData = array_intersect_key($data, array_flip($primary));</td></tr>
<tr><td class="LineNum">831</td><td class = "LineNum">785</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (count($primary) == 1) {</td></tr>
<tr><td class="LineNum">832</td><td class = "LineNum">786</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return current($pkData);</td></tr>
<tr><td class="LineNum">833</td><td class = "LineNum">787</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">834</td><td class = "LineNum">788</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $pkData;</td></tr>
<tr><td class="LineNum">835</td><td class = "LineNum">789</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">836</td><td class = "LineNum">790</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">837</td><td class = "LineNum">791</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">838</td><td class = "LineNum">792</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The last case:  the user did not specify a value for the primary</td></tr>
<tr><td class="LineNum">839</td><td class = "LineNum">793</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* key, nor is this table class declared to use an auto-increment key.</td></tr>
<tr><td class="LineNum">840</td><td class = "LineNum">794</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Since the insert did not fail, we can assume this is one of the edge</td></tr>
<tr><td class="LineNum">841</td><td class = "LineNum">795</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* cases, which may include:</td></tr>
<tr><td class="LineNum">842</td><td class = "LineNum">796</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - the table has no primary key defined;</td></tr>
<tr><td class="LineNum">843</td><td class = "LineNum">797</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - the database table uses a trigger to set a primary key value;</td></tr>
<tr><td class="LineNum">844</td><td class = "LineNum">798</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* - the RDBMS permits primary keys to be NULL or have a value set</td></tr>
<tr><td class="LineNum">845</td><td class = "LineNum">799</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*   to the column's DEFAULT</td></tr>
<tr><td class="LineNum">846</td><td class = "LineNum">800</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">847</td><td class = "LineNum">801</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;</td></tr>
<tr><td class="LineNum">848</td><td class = "LineNum">802</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">849</td><td class = "LineNum">803</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">850</td><td class = "LineNum">804</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">851</td><td class = "LineNum">805</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Updates existing rows.</td></tr>
<tr><td class="LineNum">852</td><td class = "LineNum">806</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">853</td><td class = "LineNum">807</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array        $data  Column-value pairs.</td></tr>
<tr><td class="LineNum">854</td><td class = "LineNum">808</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array|string $where An SQL WHERE clause, or an array of SQL WHERE clauses.</td></tr>
<tr><td class="LineNum">855</td><td class = "LineNum">809</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return int          The number of rows updated.</td></tr>
<tr><td class="LineNum">856</td><td class = "LineNum">810</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">857</td><td class = "LineNum">811</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function update(array $data, $where)</td></tr>
<tr><td class="LineNum">858</td><td class = "LineNum">812</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">859</td><td class = "LineNum">813</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tableSpec = ($this-&gt;_schema ? $this-&gt;_schema . '.' : '') . $this-&gt;_name;</td></tr>
<tr><td class="LineNum">860</td><td class = "LineNum">814</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_db-&gt;update($tableSpec, $data, $where);</td></tr>
<tr><td class="LineNum">861</td><td class = "LineNum">815</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">862</td><td class = "LineNum">816</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">863</td><td class = "LineNum">817</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">864</td><td class = "LineNum">818</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Called by a row object for the parent table's class during save() method.</td></tr>
<tr><td class="LineNum">865</td><td class = "LineNum">819</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">866</td><td class = "LineNum">820</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  string $parentTableClassname</td></tr>
<tr><td class="LineNum">867</td><td class = "LineNum">821</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array  $oldPrimaryKey</td></tr>
<tr><td class="LineNum">868</td><td class = "LineNum">822</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array  $newPrimaryKey</td></tr>
<tr><td class="LineNum">869</td><td class = "LineNum">823</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return int</td></tr>
<tr><td class="LineNum">870</td><td class = "LineNum">824</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">871</td><td class = "LineNum">825</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function _cascadeUpdate($parentTableClassname, array $oldPrimaryKey, array $newPrimaryKey)</td></tr>
<tr><td class="LineNum">872</td><td class = "LineNum">826</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">873</td><td class = "LineNum">827</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rowsAffected = 0;</td></tr>
<tr><td class="LineNum">874</td><td class = "LineNum">828</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($this-&gt;_getReferenceMapNormalized() as $rule =&gt; $map) {</td></tr>
<tr><td class="LineNum">875</td><td class = "LineNum">829</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($map[self::REF_TABLE_CLASS] == $parentTableClassname && isset($map[self::ON_UPDATE])) {</td></tr>
<tr><td class="LineNum">876</td><td class = "LineNum">830</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch ($map[self::ON_UPDATE]) {</td></tr>
<tr><td class="LineNum">877</td><td class = "LineNum">831</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::CASCADE:</td></tr>
<tr><td class="LineNum">878</td><td class = "LineNum">832</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$newRefs = array();</td></tr>
<tr><td class="LineNum">879</td><td class = "LineNum">833</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 0; $i &lt; count($map[self::COLUMNS]); ++$i) {</td></tr>
<tr><td class="LineNum">880</td><td class = "LineNum">834</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$col = $this-&gt;_db-&gt;foldCase($map[self::COLUMNS][$i]);</td></tr>
<tr><td class="LineNum">881</td><td class = "LineNum">835</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$refCol = $this-&gt;_db-&gt;foldCase($map[self::REF_COLUMNS][$i]);</td></tr>
<tr><td class="LineNum">882</td><td class = "LineNum">836</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (array_key_exists($refCol, $newPrimaryKey)) {</td></tr>
<tr><td class="LineNum">883</td><td class = "LineNum">837</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$newRefs[$col] = $newPrimaryKey[$refCol];</td></tr>
<tr><td class="LineNum">884</td><td class = "LineNum">838</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">885</td><td class = "LineNum">839</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$type = $this-&gt;_metadata[$col]['DATA_TYPE'];</td></tr>
<tr><td class="LineNum">886</td><td class = "LineNum">840</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$where[] = $this-&gt;_db-&gt;quoteInto(</td></tr>
<tr><td class="LineNum">887</td><td class = "LineNum">841</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_db-&gt;quoteIdentifier($col, true) . ' = ?',</td></tr>
<tr><td class="LineNum">888</td><td class = "LineNum">842</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$oldPrimaryKey[$refCol], $type);</td></tr>
<tr><td class="LineNum">889</td><td class = "LineNum">843</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">890</td><td class = "LineNum">844</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rowsAffected += $this-&gt;update($newRefs, $where);</td></tr>
<tr><td class="LineNum">891</td><td class = "LineNum">845</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">892</td><td class = "LineNum">846</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</td></tr>
<tr><td class="LineNum">893</td><td class = "LineNum">847</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no action</td></tr>
<tr><td class="LineNum">894</td><td class = "LineNum">848</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">895</td><td class = "LineNum">849</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">896</td><td class = "LineNum">850</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">897</td><td class = "LineNum">851</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">898</td><td class = "LineNum">852</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $rowsAffected;</td></tr>
<tr><td class="LineNum">899</td><td class = "LineNum">853</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">900</td><td class = "LineNum">854</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">901</td><td class = "LineNum">855</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">902</td><td class = "LineNum">856</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Deletes existing rows.</td></tr>
<tr><td class="LineNum">903</td><td class = "LineNum">857</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">904</td><td class = "LineNum">858</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array|string $where SQL WHERE clause(s).</td></tr>
<tr><td class="LineNum">905</td><td class = "LineNum">859</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return int          The number of rows deleted.</td></tr>
<tr><td class="LineNum">906</td><td class = "LineNum">860</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">907</td><td class = "LineNum">861</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function delete($where)</td></tr>
<tr><td class="LineNum">908</td><td class = "LineNum">862</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">909</td><td class = "LineNum">863</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tableSpec = ($this-&gt;_schema ? $this-&gt;_schema . '.' : '') . $this-&gt;_name;</td></tr>
<tr><td class="LineNum">910</td><td class = "LineNum">864</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;_db-&gt;delete($tableSpec, $where);</td></tr>
<tr><td class="LineNum">911</td><td class = "LineNum">865</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">912</td><td class = "LineNum">866</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">913</td><td class = "LineNum">867</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">914</td><td class = "LineNum">868</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Called by parent table's class during delete() method.</td></tr>
<tr><td class="LineNum">915</td><td class = "LineNum">869</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">916</td><td class = "LineNum">870</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  string $parentTableClassname</td></tr>
<tr><td class="LineNum">917</td><td class = "LineNum">871</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array  $primaryKey</td></tr>
<tr><td class="LineNum">918</td><td class = "LineNum">872</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return int    Number of affected rows</td></tr>
<tr><td class="LineNum">919</td><td class = "LineNum">873</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">920</td><td class = "LineNum">874</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function _cascadeDelete($parentTableClassname, array $primaryKey)</td></tr>
<tr><td class="LineNum">921</td><td class = "LineNum">875</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">922</td><td class = "LineNum">876</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rowsAffected = 0;</td></tr>
<tr><td class="LineNum">923</td><td class = "LineNum">877</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($this-&gt;_getReferenceMapNormalized() as $rule =&gt; $map) {</td></tr>
<tr><td class="LineNum">924</td><td class = "LineNum">878</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($map[self::REF_TABLE_CLASS] == $parentTableClassname && isset($map[self::ON_DELETE])) {</td></tr>
<tr><td class="LineNum">925</td><td class = "LineNum">879</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch ($map[self::ON_DELETE]) {</td></tr>
<tr><td class="LineNum">926</td><td class = "LineNum">880</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case self::CASCADE:</td></tr>
<tr><td class="LineNum">927</td><td class = "LineNum">881</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 0; $i &lt; count($map[self::COLUMNS]); ++$i) {</td></tr>
<tr><td class="LineNum">928</td><td class = "LineNum">882</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$col = $this-&gt;_db-&gt;foldCase($map[self::COLUMNS][$i]);</td></tr>
<tr><td class="LineNum">929</td><td class = "LineNum">883</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$refCol = $this-&gt;_db-&gt;foldCase($map[self::REF_COLUMNS][$i]);</td></tr>
<tr><td class="LineNum">930</td><td class = "LineNum">884</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$type = $this-&gt;_metadata[$col]['DATA_TYPE'];</td></tr>
<tr><td class="LineNum">931</td><td class = "LineNum">885</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$where[] = $this-&gt;_db-&gt;quoteInto(</td></tr>
<tr><td class="LineNum">932</td><td class = "LineNum">886</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_db-&gt;quoteIdentifier($col, true) . ' = ?',</td></tr>
<tr><td class="LineNum">933</td><td class = "LineNum">887</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$primaryKey[$refCol], $type);</td></tr>
<tr><td class="LineNum">934</td><td class = "LineNum">888</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">935</td><td class = "LineNum">889</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rowsAffected += $this-&gt;delete($where);</td></tr>
<tr><td class="LineNum">936</td><td class = "LineNum">890</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">937</td><td class = "LineNum">891</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</td></tr>
<tr><td class="LineNum">938</td><td class = "LineNum">892</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// no action</td></tr>
<tr><td class="LineNum">939</td><td class = "LineNum">893</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</td></tr>
<tr><td class="LineNum">940</td><td class = "LineNum">894</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">941</td><td class = "LineNum">895</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">942</td><td class = "LineNum">896</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">943</td><td class = "LineNum">897</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $rowsAffected;</td></tr>
<tr><td class="LineNum">944</td><td class = "LineNum">898</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">945</td><td class = "LineNum">899</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">946</td><td class = "LineNum">900</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">947</td><td class = "LineNum">901</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fetches rows by primary key.  The argument specifies one or more primary </td></tr>
<tr><td class="LineNum">948</td><td class = "LineNum">902</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* key value(s).  To find multiple rows by primary key, the argument must </td></tr>
<tr><td class="LineNum">949</td><td class = "LineNum">903</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* be an array.</td></tr>
<tr><td class="LineNum">950</td><td class = "LineNum">904</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">951</td><td class = "LineNum">905</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* This method accepts a variable number of arguments.  If the table has a </td></tr>
<tr><td class="LineNum">952</td><td class = "LineNum">906</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* multi-column primary key, the number of arguments must be the same as </td></tr>
<tr><td class="LineNum">953</td><td class = "LineNum">907</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* the number of columns in the primary key.  To find multiple rows in a </td></tr>
<tr><td class="LineNum">954</td><td class = "LineNum">908</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* table with a multi-column primary key, each argument must be an array </td></tr>
<tr><td class="LineNum">955</td><td class = "LineNum">909</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* with the same number of elements.</td></tr>
<tr><td class="LineNum">956</td><td class = "LineNum">910</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">957</td><td class = "LineNum">911</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* The find() method always returns a Rowset object, even if only one row </td></tr>
<tr><td class="LineNum">958</td><td class = "LineNum">912</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* was found.</td></tr>
<tr><td class="LineNum">959</td><td class = "LineNum">913</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">960</td><td class = "LineNum">914</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  mixed $key The value(s) of the primary keys.</td></tr>
<tr><td class="LineNum">961</td><td class = "LineNum">915</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Rowset_Abstract Row(s) matching the criteria.</td></tr>
<tr><td class="LineNum">962</td><td class = "LineNum">916</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @throws Zend_Db_Table_Exception</td></tr>
<tr><td class="LineNum">963</td><td class = "LineNum">917</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">964</td><td class = "LineNum">918</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function find($key)</td></tr>
<tr><td class="LineNum">965</td><td class = "LineNum">919</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">966</td><td class = "LineNum">920</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$args = func_get_args();</td></tr>
<tr><td class="LineNum">967</td><td class = "LineNum">921</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$keyNames = array_values((array) $this-&gt;_primary);</td></tr>
<tr><td class="LineNum">968</td><td class = "LineNum">922</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">969</td><td class = "LineNum">923</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (count($args) &lt; count($keyNames)) {</td></tr>
<tr><td class="LineNum">970</td><td class = "LineNum">924</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">971</td><td class = "LineNum">925</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("Too few columns for the primary key");</td></tr>
<tr><td class="LineNum">972</td><td class = "LineNum">926</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">973</td><td class = "LineNum">927</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">974</td><td class = "LineNum">928</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (count($args) &gt; count($keyNames)) {</td></tr>
<tr><td class="LineNum">975</td><td class = "LineNum">929</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">976</td><td class = "LineNum">930</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("Too many columns for the primary key");</td></tr>
<tr><td class="LineNum">977</td><td class = "LineNum">931</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">978</td><td class = "LineNum">932</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">979</td><td class = "LineNum">933</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereList = array();</td></tr>
<tr><td class="LineNum">980</td><td class = "LineNum">934</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$numberTerms = 0;</td></tr>
<tr><td class="LineNum">981</td><td class = "LineNum">935</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($args as $keyPosition =&gt; $keyValues) {</td></tr>
<tr><td class="LineNum">982</td><td class = "LineNum">936</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Coerce the values to an array.</td></tr>
<tr><td class="LineNum">983</td><td class = "LineNum">937</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Don't simply typecast to array, because the values</td></tr>
<tr><td class="LineNum">984</td><td class = "LineNum">938</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// might be Zend_Db_Expr objects.</td></tr>
<tr><td class="LineNum">985</td><td class = "LineNum">939</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!is_array($keyValues)) {</td></tr>
<tr><td class="LineNum">986</td><td class = "LineNum">940</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$keyValues = array($keyValues);</td></tr>
<tr><td class="LineNum">987</td><td class = "LineNum">941</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">988</td><td class = "LineNum">942</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($numberTerms == 0) {</td></tr>
<tr><td class="LineNum">989</td><td class = "LineNum">943</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$numberTerms = count($keyValues);</td></tr>
<tr><td class="LineNum">990</td><td class = "LineNum">944</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if (count($keyValues) != $numberTerms) {</td></tr>
<tr><td class="LineNum">991</td><td class = "LineNum">945</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once 'Zend/Db/Table/Exception.php';</td></tr>
<tr><td class="LineNum">992</td><td class = "LineNum">946</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw new Zend_Db_Table_Exception("Missing value(s) for the primary key");</td></tr>
<tr><td class="LineNum">993</td><td class = "LineNum">947</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">994</td><td class = "LineNum">948</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for ($i = 0; $i &lt; count($keyValues); ++$i) {</td></tr>
<tr><td class="LineNum">995</td><td class = "LineNum">949</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereList[$i][$keyPosition] = $keyValues[$i];</td></tr>
<tr><td class="LineNum">996</td><td class = "LineNum">950</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">997</td><td class = "LineNum">951</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">998</td><td class = "LineNum">952</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">999</td><td class = "LineNum">953</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereClause = null;</td></tr>
<tr><td class="LineNum">1000</td><td class = "LineNum">954</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (count($whereList)) {</td></tr>
<tr><td class="LineNum">1001</td><td class = "LineNum">955</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereOrTerms = array();</td></tr>
<tr><td class="LineNum">1002</td><td class = "LineNum">956</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($whereList as $keyValueSets) {</td></tr>
<tr><td class="LineNum">1003</td><td class = "LineNum">957</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereAndTerms = array();</td></tr>
<tr><td class="LineNum">1004</td><td class = "LineNum">958</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($keyValueSets as $keyPosition =&gt; $keyValue) {</td></tr>
<tr><td class="LineNum">1005</td><td class = "LineNum">959</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$type = $this-&gt;_metadata[$keyNames[$keyPosition]]['DATA_TYPE'];</td></tr>
<tr><td class="LineNum">1006</td><td class = "LineNum">960</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereAndTerms[] = $this-&gt;_db-&gt;quoteInto(</td></tr>
<tr><td class="LineNum">1007</td><td class = "LineNum">961</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_db-&gt;quoteIdentifier($keyNames[$keyPosition], true) . ' = ?',</td></tr>
<tr><td class="LineNum">1008</td><td class = "LineNum">962</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$keyValue, $type);</td></tr>
<tr><td class="LineNum">1009</td><td class = "LineNum">963</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1010</td><td class = "LineNum">964</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereOrTerms[] = '(' . implode(' AND ', $whereAndTerms) . ')';</td></tr>
<tr><td class="LineNum">1011</td><td class = "LineNum">965</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1012</td><td class = "LineNum">966</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$whereClause = '(' . implode(' OR ', $whereOrTerms) . ')';</td></tr>
<tr><td class="LineNum">1013</td><td class = "LineNum">967</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1014</td><td class = "LineNum">968</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1015</td><td class = "LineNum">969</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;fetchAll($whereClause);</td></tr>
<tr><td class="LineNum">1016</td><td class = "LineNum">970</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1017</td><td class = "LineNum">971</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1018</td><td class = "LineNum">972</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">1019</td><td class = "LineNum">973</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fetches all rows.</td></tr>
<tr><td class="LineNum">1020</td><td class = "LineNum">974</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">1021</td><td class = "LineNum">975</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Honors the Zend_Db_Adapter fetch mode.</td></tr>
<tr><td class="LineNum">1022</td><td class = "LineNum">976</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">1023</td><td class = "LineNum">977</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param string|array $where            OPTIONAL An SQL WHERE clause.</td></tr>
<tr><td class="LineNum">1024</td><td class = "LineNum">978</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param string|array $order            OPTIONAL An SQL ORDER clause.</td></tr>
<tr><td class="LineNum">1025</td><td class = "LineNum">979</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param int          $count            OPTIONAL An SQL LIMIT count.</td></tr>
<tr><td class="LineNum">1026</td><td class = "LineNum">980</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param int          $offset           OPTIONAL An SQL LIMIT offset.</td></tr>
<tr><td class="LineNum">1027</td><td class = "LineNum">981</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Rowset_Abstract The row results per the Zend_Db_Adapter fetch mode.</td></tr>
<tr><td class="LineNum">1028</td><td class = "LineNum">982</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">1029</td><td class = "LineNum">983</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function fetchAll($where = null, $order = null, $count = null, $offset = null)</td></tr>
<tr><td class="LineNum">1030</td><td class = "LineNum">984</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">1031</td><td class = "LineNum">985</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data  = array(</td></tr>
<tr><td class="LineNum">1032</td><td class = "LineNum">986</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'table'    =&gt; $this,</td></tr>
<tr><td class="LineNum">1033</td><td class = "LineNum">987</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'data'     =&gt; $this-&gt;_fetch($where, $order, $count, $offset),</td></tr>
<tr><td class="LineNum">1034</td><td class = "LineNum">988</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'rowClass' =&gt; $this-&gt;_rowClass,</td></tr>
<tr><td class="LineNum">1035</td><td class = "LineNum">989</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'stored'   =&gt; true</td></tr>
<tr><td class="LineNum">1036</td><td class = "LineNum">990</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</td></tr>
<tr><td class="LineNum">1037</td><td class = "LineNum">991</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1038</td><td class = "LineNum">992</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend_Loader::loadClass($this-&gt;_rowsetClass);</td></tr>
<tr><td class="LineNum">1039</td><td class = "LineNum">993</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new $this-&gt;_rowsetClass($data);</td></tr>
<tr><td class="LineNum">1040</td><td class = "LineNum">994</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1041</td><td class = "LineNum">995</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1042</td><td class = "LineNum">996</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">1043</td><td class = "LineNum">997</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fetches one row in an object of type Zend_Db_Table_Row_Abstract,</td></tr>
<tr><td class="LineNum">1044</td><td class = "LineNum">998</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* or returns null if no row matches the specified criteria.</td></tr>
<tr><td class="LineNum">1045</td><td class = "LineNum">999</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">1046</td><td class = "LineNum">1000</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param string|array $where         OPTIONAL An SQL WHERE clause.</td></tr>
<tr><td class="LineNum">1047</td><td class = "LineNum">1001</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param string|array $order         OPTIONAL An SQL ORDER clause.</td></tr>
<tr><td class="LineNum">1048</td><td class = "LineNum">1002</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Row_Abstract The row results per the</td></tr>
<tr><td class="LineNum">1049</td><td class = "LineNum">1003</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*     Zend_Db_Adapter fetch mode, or null if no row found.</td></tr>
<tr><td class="LineNum">1050</td><td class = "LineNum">1004</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">1051</td><td class = "LineNum">1005</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function fetchRow($where = null, $order = null)</td></tr>
<tr><td class="LineNum">1052</td><td class = "LineNum">1006</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">1053</td><td class = "LineNum">1007</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$keys    = array_values((array) $this-&gt;_primary);</td></tr>
<tr><td class="LineNum">1054</td><td class = "LineNum">1008</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$vals    = array_fill(0, count($keys), null);</td></tr>
<tr><td class="LineNum">1055</td><td class = "LineNum">1009</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$primary = array_combine($keys, $vals);</td></tr>
<tr><td class="LineNum">1056</td><td class = "LineNum">1010</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1057</td><td class = "LineNum">1011</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rows = $this-&gt;_fetch($where, $order, 1);</td></tr>
<tr><td class="LineNum">1058</td><td class = "LineNum">1012</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1059</td><td class = "LineNum">1013</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (count($rows) == 0) {</td></tr>
<tr><td class="LineNum">1060</td><td class = "LineNum">1014</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;</td></tr>
<tr><td class="LineNum">1061</td><td class = "LineNum">1015</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1062</td><td class = "LineNum">1016</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1063</td><td class = "LineNum">1017</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = array(</td></tr>
<tr><td class="LineNum">1064</td><td class = "LineNum">1018</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'table'   =&gt; $this,</td></tr>
<tr><td class="LineNum">1065</td><td class = "LineNum">1019</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'data'    =&gt; $rows[0],</td></tr>
<tr><td class="LineNum">1066</td><td class = "LineNum">1020</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'stored'  =&gt; true</td></tr>
<tr><td class="LineNum">1067</td><td class = "LineNum">1021</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</td></tr>
<tr><td class="LineNum">1068</td><td class = "LineNum">1022</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1069</td><td class = "LineNum">1023</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend_Loader::loadClass($this-&gt;_rowClass);</td></tr>
<tr><td class="LineNum">1070</td><td class = "LineNum">1024</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new $this-&gt;_rowClass($data);</td></tr>
<tr><td class="LineNum">1071</td><td class = "LineNum">1025</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1072</td><td class = "LineNum">1026</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1073</td><td class = "LineNum">1027</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">1074</td><td class = "LineNum">1028</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fetches a new blank row (not from the database).</td></tr>
<tr><td class="LineNum">1075</td><td class = "LineNum">1029</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">1076</td><td class = "LineNum">1030</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Row_Abstract</td></tr>
<tr><td class="LineNum">1077</td><td class = "LineNum">1031</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @deprecated since 0.9.3 - use createRow() instead.</td></tr>
<tr><td class="LineNum">1078</td><td class = "LineNum">1032</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">1079</td><td class = "LineNum">1033</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function fetchNew()</td></tr>
<tr><td class="LineNum">1080</td><td class = "LineNum">1034</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">1081</td><td class = "LineNum">1035</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $this-&gt;createRow();</td></tr>
<tr><td class="LineNum">1082</td><td class = "LineNum">1036</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1083</td><td class = "LineNum">1037</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1084</td><td class = "LineNum">1038</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">1085</td><td class = "LineNum">1039</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fetches a new blank row (not from the database).</td></tr>
<tr><td class="LineNum">1086</td><td class = "LineNum">1040</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">1087</td><td class = "LineNum">1041</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  array $data OPTIONAL data to populate in the new row.</td></tr>
<tr><td class="LineNum">1088</td><td class = "LineNum">1042</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return Zend_Db_Table_Row_Abstract</td></tr>
<tr><td class="LineNum">1089</td><td class = "LineNum">1043</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">1090</td><td class = "LineNum">1044</td><td>&nbsp;&nbsp;&nbsp;&nbsp;public function createRow(array $data = array())</td></tr>
<tr><td class="LineNum">1091</td><td class = "LineNum">1045</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">1092</td><td class = "LineNum">1046</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$defaults = array_combine($this-&gt;_cols, array_fill(0, count($this-&gt;_cols), null));</td></tr>
<tr><td class="LineNum">1093</td><td class = "LineNum">1047</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$keys = array_flip($this-&gt;_cols);</td></tr>
<tr><td class="LineNum">1094</td><td class = "LineNum">1048</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = array_intersect_key($data, $keys);</td></tr>
<tr><td class="LineNum">1095</td><td class = "LineNum">1049</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = array_merge($defaults, $data);</td></tr>
<tr><td class="LineNum">1096</td><td class = "LineNum">1050</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1097</td><td class = "LineNum">1051</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$config = array(</td></tr>
<tr><td class="LineNum">1098</td><td class = "LineNum">1052</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'table'   =&gt; $this,</td></tr>
<tr><td class="LineNum">1099</td><td class = "LineNum">1053</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'data'    =&gt; $data,</td></tr>
<tr><td class="LineNum">1100</td><td class = "LineNum">1054</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'stored'  =&gt; false</td></tr>
<tr><td class="LineNum">1101</td><td class = "LineNum">1055</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</td></tr>
<tr><td class="LineNum">1102</td><td class = "LineNum">1056</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1103</td><td class = "LineNum">1057</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zend_Loader::loadClass($this-&gt;_rowClass);</td></tr>
<tr><td class="LineNum">1104</td><td class = "LineNum">1058</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new $this-&gt;_rowClass($config);</td></tr>
<tr><td class="LineNum">1105</td><td class = "LineNum">1059</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1106</td><td class = "LineNum">1060</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1107</td><td class = "LineNum">1061</td><td>&nbsp;&nbsp;&nbsp;&nbsp;/**</td></tr>
<tr><td class="LineNum">1108</td><td class = "LineNum">1062</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Support method for fetching rows.</td></tr>
<tr><td class="LineNum">1109</td><td class = "LineNum">1063</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*</td></tr>
<tr><td class="LineNum">1110</td><td class = "LineNum">1064</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  string|array $where  OPTIONAL An SQL WHERE clause.</td></tr>
<tr><td class="LineNum">1111</td><td class = "LineNum">1065</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  string|array $order  OPTIONAL An SQL ORDER clause.</td></tr>
<tr><td class="LineNum">1112</td><td class = "LineNum">1066</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  int          $count  OPTIONAL An SQL LIMIT count.</td></tr>
<tr><td class="LineNum">1113</td><td class = "LineNum">1067</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param  int          $offset OPTIONAL An SQL LIMIT offset.</td></tr>
<tr><td class="LineNum">1114</td><td class = "LineNum">1068</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return array The row results, in FETCH_ASSOC mode.</td></tr>
<tr><td class="LineNum">1115</td><td class = "LineNum">1069</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</td></tr>
<tr><td class="LineNum">1116</td><td class = "LineNum">1070</td><td>&nbsp;&nbsp;&nbsp;&nbsp;protected function _fetch($where = null, $order = null, $count = null, $offset = null)</td></tr>
<tr><td class="LineNum">1117</td><td class = "LineNum">1071</td><td>&nbsp;&nbsp;&nbsp;&nbsp;{</td></tr>
<tr><td class="LineNum">1118</td><td class = "LineNum">1072</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// selection tool</td></tr>
<tr><td class="LineNum">1119</td><td class = "LineNum">1073</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$select = $this-&gt;_db-&gt;select();</td></tr>
<tr><td class="LineNum">1120</td><td class = "LineNum">1074</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1121</td><td class = "LineNum">1075</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the FROM clause</td></tr>
<tr><td class="LineNum">1122</td><td class = "LineNum">1076</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$select-&gt;from($this-&gt;_name, $this-&gt;_cols, $this-&gt;_schema);</td></tr>
<tr><td class="LineNum">1123</td><td class = "LineNum">1077</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1124</td><td class = "LineNum">1078</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the WHERE clause</td></tr>
<tr><td class="LineNum">1125</td><td class = "LineNum">1079</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$where = (array) $where;</td></tr>
<tr><td class="LineNum">1126</td><td class = "LineNum">1080</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($where as $key =&gt; $val) {</td></tr>
<tr><td class="LineNum">1127</td><td class = "LineNum">1081</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// is $key an int?</td></tr>
<tr><td class="LineNum">1128</td><td class = "LineNum">1082</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_int($key)) {</td></tr>
<tr><td class="LineNum">1129</td><td class = "LineNum">1083</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// $val is the full condition</td></tr>
<tr><td class="LineNum">1130</td><td class = "LineNum">1084</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$select-&gt;where($val);</td></tr>
<tr><td class="LineNum">1131</td><td class = "LineNum">1085</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {</td></tr>
<tr><td class="LineNum">1132</td><td class = "LineNum">1086</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// $key is the condition with placeholder,</td></tr>
<tr><td class="LineNum">1133</td><td class = "LineNum">1087</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// and $val is quoted into the condition</td></tr>
<tr><td class="LineNum">1134</td><td class = "LineNum">1088</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$select-&gt;where($key, $val);</td></tr>
<tr><td class="LineNum">1135</td><td class = "LineNum">1089</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1136</td><td class = "LineNum">1090</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1137</td><td class = "LineNum">1091</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1138</td><td class = "LineNum">1092</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the ORDER clause</td></tr>
<tr><td class="LineNum">1139</td><td class = "LineNum">1093</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!is_array($order)) {</td></tr>
<tr><td class="LineNum">1140</td><td class = "LineNum">1094</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$order = array($order);</td></tr>
<tr><td class="LineNum">1141</td><td class = "LineNum">1095</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1142</td><td class = "LineNum">1096</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach ($order as $val) {</td></tr>
<tr><td class="LineNum">1143</td><td class = "LineNum">1097</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$select-&gt;order($val);</td></tr>
<tr><td class="LineNum">1144</td><td class = "LineNum">1098</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1145</td><td class = "LineNum">1099</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1146</td><td class = "LineNum">1100</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the LIMIT clause</td></tr>
<tr><td class="LineNum">1147</td><td class = "LineNum">1101</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$select-&gt;limit($count, $offset);</td></tr>
<tr><td class="LineNum">1148</td><td class = "LineNum">1102</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1149</td><td class = "LineNum">1103</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// return the results</td></tr>
<tr><td class="LineNum">1150</td><td class = "LineNum">1104</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$stmt = $this-&gt;_db-&gt;query($select);</td></tr>
<tr><td class="LineNum">1151</td><td class = "LineNum">1105</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = $stmt-&gt;fetchAll(Zend_Db::FETCH_ASSOC);</td></tr>
<tr><td class="LineNum">1152</td><td class = "LineNum">1106</td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $data;</td></tr>
<tr><td class="LineNum">1153</td><td class = "LineNum">1107</td><td>&nbsp;&nbsp;&nbsp;&nbsp;}</td></tr>
<tr><td class="LineNum">1154</td><td class = "LineNum">1108</td><td>&nbsp;</td></tr>
<tr><td class="LineNum">1155</td><td class = "LineNum">1109</td><td>}</td></tr>
<tr><td class="LineNum">1156</td><td class = "LineNum">1110</td><td>&nbsp;</td></tr>
</table>


</body></html>
