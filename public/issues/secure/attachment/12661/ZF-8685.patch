Index: library/Zend/Pdf/Annotation/Stamp.php
===================================================================
--- library/Zend/Pdf/Annotation/Stamp.php	(revision 0)
+++ library/Zend/Pdf/Annotation/Stamp.php	(revision 0)
@@ -0,0 +1,115 @@
+<?php
+/**
+ * Zend Framework
+ *
+ * LICENSE
+ *
+ * This source file is subject to the new BSD license that is bundled
+ * with this package in the file LICENSE.txt.
+ * It is also available through the world-wide-web at this URL:
+ * http://framework.zend.com/license/new-bsd
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@zend.com so we can send you a copy immediately.
+ *
+ * @category   Zend
+ * @package    Zend_Pdf
+ * @subpackage Annotation
+ * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ * @version    $Id$
+ */
+
+/** Internally used classes */
+require_once 'Zend/Pdf/Element.php';
+require_once 'Zend/Pdf/Element/Array.php';
+require_once 'Zend/Pdf/Element/Dictionary.php';
+require_once 'Zend/Pdf/Element/Name.php';
+require_once 'Zend/Pdf/Element/Numeric.php';
+require_once 'Zend/Pdf/Element/String.php';
+
+
+/** Zend_Pdf_Annotation */
+require_once 'Zend/Pdf/Annotation.php';
+
+/**
+ * A stamp annotation represents a "rubber stamp" on the page.
+ *
+ * @package    Zend_Pdf
+ * @subpackage Annotation
+ * @copyright  Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)
+ * @license    http://framework.zend.com/license/new-bsd     New BSD License
+ */
+class Zend_Pdf_Annotation_Stamp extends Zend_Pdf_Annotation
+{
+
+    const NAME_APPROVED                    = 'Approved';
+    const NAME_AS_IS                       = 'AsIs';
+    const NAME_CONFIDENTIAL                = 'Confidential';
+    const NAME_DEPARTMENTAL                = 'Departmental';
+    const NAME_DRAFT                       = 'Draft';
+    const NAME_EXPERIMENTAL                = 'Experimental';
+    const NAME_EXPIRED                     = 'Expired';
+    const NAME_FINAL                       = 'Final';
+    const NAME_FOR_COMMENT                 = 'ForComment';
+    const NAME_FOR_PUBLIC_RELEASE          = 'ForPublicRelease';
+    const NAME_NOT_APPROVED                = 'NotApproved';
+    const NAME_NOT_FOR_PUBLIC_RELEASE      = 'NotForPublicRelease';
+    const NAME_SOLD                        = 'Sold';
+    const NAME_TOP_SECRET                  = 'TopSecret';
+
+
+    /**
+     * Annotation object constructor
+     *
+     * @throws Zend_Pdf_Exception
+     */
+    public function __construct(Zend_Pdf_Element $annotationDictionary)
+    {
+        if ($annotationDictionary->getType() != Zend_Pdf_Element::TYPE_DICTIONARY) {
+            require_once 'Zend/Pdf/Exception.php';
+            throw new Zend_Pdf_Exception('Annotation dictionary resource has to be a dictionary.');
+        }
+
+        if ($annotationDictionary->Subtype === null  ||
+            $annotationDictionary->Subtype->getType() != Zend_Pdf_Element::TYPE_NAME  ||
+            $annotationDictionary->Subtype->value != 'Stamp') {
+            require_once 'Zend/Pdf/Exception.php';
+            throw new Zend_Pdf_Exception('Subtype => Stamp entry is requires');
+        }
+
+        parent::__construct($annotationDictionary);
+    }
+
+    /**
+     * Create link annotation object
+     *
+     * @param float $x1
+     * @param float $y1
+     * @param float $x2
+     * @param float $y2
+     * @param string $text
+     * @param string $name
+     * @return Zend_Pdf_Annotation_Stamp
+     */
+    public static function create($x1, $y1, $x2, $y2, $text, $name = Zend_Pdf_Annotation_Stamp::NAME_DRAFT)
+    {
+        $annotationDictionary = new Zend_Pdf_Element_Dictionary();
+
+        $annotationDictionary->Type    = new Zend_Pdf_Element_Name('Annot');
+        $annotationDictionary->Subtype = new Zend_Pdf_Element_Name('Stamp');
+
+        $rectangle = new Zend_Pdf_Element_Array();
+        $rectangle->items[] = new Zend_Pdf_Element_Numeric($x1);
+        $rectangle->items[] = new Zend_Pdf_Element_Numeric($y1);
+        $rectangle->items[] = new Zend_Pdf_Element_Numeric($x2);
+        $rectangle->items[] = new Zend_Pdf_Element_Numeric($y2);
+        $annotationDictionary->Rect = $rectangle;
+
+        $annotationDictionary->Contents = new Zend_Pdf_Element_String($text);
+
+        $annotationDictionary->Name = new Zend_Pdf_Element_Name($name);
+
+        return new Zend_Pdf_Annotation_Stamp($annotationDictionary);
+    }
+}

Property changes on: library/Zend/Pdf/Annotation/Stamp.php
___________________________________________________________________
Added: svn:executable
   + *

