Index: library/Zend/Validate.php
===================================================================
--- library/Zend/Validate.php	(revision 17306)
+++ library/Zend/Validate.php	(working copy)
@@ -95,7 +95,10 @@
         $result = true;
         foreach ($this->_validators as $element) {
             $validator = $element['instance'];
-            if ($validator->isValid($value)) {
+            // support for arbitrary count of parameters (Zend_Form's validator context)
+            $method = array($validator, 'isValid');
+            $parameters = func_get_args();
+            if (call_user_func_array($method, $parameters)) {
                 continue;
             }
             $result = false;
Index: tests/Zend/ValidateTest.php
===================================================================
--- tests/Zend/ValidateTest.php	(revision 17306)
+++ tests/Zend/ValidateTest.php	(working copy)
@@ -211,6 +211,24 @@
 
         Zend_Validate::setDefaultNamespaces(array());
     }
+    
+    /**
+     * Testing context transport in validator chains
+     *
+     * @return void
+     */
+    public function testContextTransport()
+    {
+        // create mock
+        $validatorMock = $this->getMock('Zend_Validate_Abstract', array('isValid'));
+        $validatorMock->expects($this->once())
+                      ->method('isValid')
+                      ->with($this->equalTo('someVar'), $this->equalTo(array('foo', 'bar')))
+                      ->will($this->returnValue(true));
+
+        $this->_validator->addValidator($validatorMock); 
+        $this->_validator->isValid('someVar', array('foo', 'bar'));
+    }
 }
 
 
