Index: tests/Zend/Feed/Entry/RssTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/Zend/Feed/Entry/RssTest.php	(revision )
+++ tests/Zend/Feed/Entry/RssTest.php	(revision )
@@ -39,10 +39,10 @@
     public function testContentEncodedSupport()
     {
         $feed = Zend_Feed::importFile(dirname(__FILE__) . '/../_files/TestFeedEntryRssContentEncoded.xml');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
 
         $item = $feed->current();
-        $this->assertType('Zend_Feed_Entry_Rss', $item);
+        $this->assertTrue($item instanceof Zend_Feed_Entry_Rss);
 
         $this->assertTrue(isset($item->content));
         $this->assertContains(
@@ -60,11 +60,11 @@
     public function testContentEncodedNullIfEmpty()
     {
         $feed = Zend_Feed::importFile(dirname(__FILE__) . '/../_files/TestFeedEntryRssContentEncoded.xml');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
 
         $feed->next();
         $item =  $feed->current();
-        $this->assertType('Zend_Feed_Entry_Rss', $item);
+        $this->assertTrue($item instanceof Zend_Feed_Entry_Rss);
         $this->assertFalse(isset($item->content));
         $this->assertNull($item->content());
         // $this->assertNull($item->content); // always return DOMElement Object
Index: tests/Zend/Feed/ImportTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/Zend/Feed/ImportTest.php	(revision )
+++ tests/Zend/Feed/ImportTest.php	(revision )
@@ -212,7 +212,7 @@
     public function testRssImportFullArray()
     {
         $feed = Zend_Feed::importArray($this->_getFullArray(), 'rss');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
     }
 
     /**
@@ -240,7 +240,7 @@
     public function testRssImportFullBuilder()
     {
         $feed = Zend_Feed::importBuilder(new Zend_Feed_Builder($this->_getFullArray()), 'rss');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
     }
 
     /**
@@ -259,7 +259,7 @@
         $array['itunes']['block'] = 'no';
         $array['itunes']['new-feed-url'] = 'http://www.example/itunes.xml';
         $feed = Zend_Feed::importBuilder(new Zend_Feed_Builder($array), 'rss');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
     }
 
     /**
@@ -279,7 +279,7 @@
         $feed = Zend_Feed::importBuilder(new Zend_Feed_Builder($this->_getFullArray()), 'atom');
 
         $feed = Zend_Feed::importString($feed->saveXml());
-        $this->assertType('Zend_Feed_Atom', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Atom);
     }
 
     /**
@@ -288,9 +288,9 @@
     public function testRssImportFullBuilderValid()
     {
         $feed = Zend_Feed::importBuilder(new Zend_Feed_Builder($this->_getFullArray()), 'rss');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
         $feed = Zend_Feed::importString($feed->saveXml());
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
     }
 
     /**
@@ -299,9 +299,9 @@
     public function testAtomGetLink()
     {
         $feed = Zend_Feed::importBuilder(new Zend_Feed_Builder($this->_getFullArray()), 'atom');
-        $this->assertType('Zend_Feed_Atom', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Atom);
         $feed = Zend_Feed::importString($feed->saveXml());
-        $this->assertType('Zend_Feed_Atom', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Atom);
         $href = $feed->link('self');
         $this->assertEquals('http://www.example.com', $href);
     }
@@ -323,7 +323,7 @@
             $feed = Zend_Feed::import('http://localhost');
             $this->fail('Expected Zend_Feed_Exception not thrown');
         } catch (Zend_Feed_Exception $e) {
-            $this->assertType('Zend_Feed_Exception', $e);
+            $this->assertTrue($e instanceof Zend_Feed_Exception);
             $this->assertRegExp('/(XDebug is running|Empty string)/', $e->getMessage());
         }
     }
@@ -416,7 +416,7 @@
         $this->_adapter->setResponse($response);
 
         $feed = Zend_Feed::import('http://localhost');
-        $this->assertType('Zend_Feed_Atom', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Atom);
     }
 
     /**
@@ -428,7 +428,7 @@
         $this->_adapter->setResponse($response);
 
         $feed = Zend_Feed::import('http://localhost');
-        $this->assertType('Zend_Feed_Rss', $feed);
+        $this->assertTrue($feed instanceof Zend_Feed_Rss);
         return $feed;
     }
 
@@ -444,7 +444,7 @@
             $feed = Zend_Feed::import('http://localhost');
             $this->fail('Expected Zend_Feed_Exception not thrown');
         } catch (Zend_Feed_Exception $e) {
-            $this->assertType('Zend_Feed_Exception', $e);
+            $this->assertTrue($e instanceof Zend_Feed_Exception);
         }
     }
 
Index: tests/Zend/Feed/IteratorTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/Zend/Feed/IteratorTest.php	(revision )
+++ tests/Zend/Feed/IteratorTest.php	(revision )
@@ -74,12 +74,18 @@
     public function testCurrent()
     {
         foreach ($this->_feed as $f) {
-            $this->assertType('Zend_Feed_Entry_Atom', $f, 'Each feed entry should be an instance of Zend_Feed_Entry_Atom');
+            $this->assertTrue(
+                $f instanceof Zend_Feed_Entry_Atom,
+                'Each feed entry should be an instance of Zend_Feed_Entry_Atom'
+            );
             break;
         }
 
         foreach ($this->_nsfeed as $f) {
-            $this->assertType('Zend_Feed_Entry_Atom', $f, 'Each feed entry should be an instance of Zend_Feed_Entry_Atom');
+            $this->assertTrue(
+                $f instanceof Zend_Feed_Entry_Atom,
+                'Each feed entry should be an instance of Zend_Feed_Entry_Atom'
+            );
             break;
         }
     }
Index: tests/Zend/Feed/Pubsubhubbub/PubsubhubbubTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/Zend/Feed/Pubsubhubbub/PubsubhubbubTest.php	(revision )
+++ tests/Zend/Feed/Pubsubhubbub/PubsubhubbubTest.php	(revision )
@@ -41,7 +41,9 @@
     public function testCanSetCustomHttpClient()
     {
         Zend_Feed_Pubsubhubbub::setHttpClient(new Test_Http_Client_Pubsub());
-        $this->assertType('Test_Http_Client_Pubsub', Zend_Feed_Pubsubhubbub::getHttpClient());
+        $this->assertTrue(
+            Zend_Feed_Pubsubhubbub::getHttpClient() instanceof Test_Http_Client_Pubsub
+        );
     }
 
     public function testCanDetectHubs()
