Index: Deserializer.php
===================================================================
RCS file: /cvs/repositories/grumago/GRU001/04-Implementation/04_01-Fuentes/webapp-php/library/Zend/Amf/Parse/Amf3/Deserializer.php,v
retrieving revision 1.3
diff -r1.3 Deserializer.php
111c111
<                  return $this->readString();
---
>                  return $this->readByteArray();
202a203,233
>     }
>     
>     /**
>      * Read and deserialize a ByteArray
>      *
>      * ActionScript 3.0 introduces a new type to hold an Array of bytes, namely ByteArray. 
>      * AMF 3 serializes this type using a variable length encoding 29-bit integer for the 
>      * byte-length prefix followed by the raw bytes of the ByteArray.
>      * ByteArray instances can be sent as a reference to a previously occurring ByteArray 
>      * instance by using an index to the implicit object reference table.
>      *
>      * - string = 0x0c byte-data
>      * - byte-data = integer-data [ raw-byte-contents ]
>      * - raw-byte-contents = *OCTET
>      *
>      * @return String
>      * @author Juan M. Tula
>      */
>     public function readByteArray()
>     {
>         $baHeader = $this->readInteger();
> 
>         // It's never a reference, flag is always 1. References are created using Object data
>         $length = $baHeader >> 1;
>         if ($length) {
>             $data = $this->_stream->readBytes($length);
>             $this->_referenceObjects[] = $data;
>         } else {
>             $data = "";
>         }
>         return $data;
