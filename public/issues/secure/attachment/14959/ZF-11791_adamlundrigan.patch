Index: library/Zend/Controller/Response/Abstract.php
===================================================================
--- library/Zend/Controller/Response/Abstract.php	(revision 24675)
+++ library/Zend/Controller/Response/Abstract.php	(working copy)
@@ -124,6 +124,10 @@
             }
         }
 
+        if ('Location' == substr($name, 0, 8)) {
+            $this->_isRedirect = true;
+        }
+
         $this->_headers[] = array(
             'name'    => $name,
             'value'   => $value,
@@ -202,6 +206,13 @@
             }
         }
 
+        if('Location' == substr($name, 0, 8)) {
+            $code = $this->getHttpResponseCode();
+            if ('3' != substr((string)$code, 0, 1)) {
+                $this->_isRedirect = false;
+            }
+        }
+
         return $this;
     }
 
@@ -261,6 +272,13 @@
             unset($this->_headersRaw[$key]);
         }
 
+        if('Location' == substr($headerRaw, 0, 8)) {
+            $code = $this->getHttpResponseCode();
+            if ('3' != substr((string)$code, 0, 1)) {
+                $this->_isRedirect = false;
+            }
+        }
+
         return $this;
     }
 
Index: tests/Zend/Controller/Response/HttpTest.php
===================================================================
--- tests/Zend/Controller/Response/HttpTest.php	(revision 24675)
+++ tests/Zend/Controller/Response/HttpTest.php	(working copy)
@@ -642,6 +642,68 @@
         $this->assertFalse(in_array('X-Foo_Bar-Baz', $names));
         $this->assertFalse(in_array('X-FOO_bar-bAz', $names));
     }
+
+    /**
+     * @group ZF-11791
+     */
+    public function testIsRedirectFlagIsSetProperlyWhenUsingSetHeader()
+    {
+        $this->assertFalse($this->_response->isRedirect());
+        $this->_response->setHeader('Location', 'http://foo.com/');
+        $this->assertTrue($this->_response->isRedirect());
+    }
+
+    /**
+     * @group ZF-11791
+     */
+    public function testIsRedirectFlagIsSetProperlyWhenUsingClearHeader()
+    {
+        $this->testIsRedirectFlagIsSetProperlyWhenUsingSetHeader();
+        $this->_response->clearHeader('Location');
+        $this->assertFalse($this->_response->isRedirect());
+    }
+
+    /**
+     * @group ZF-11791
+     */
+    public function testIsRedirectFlagIsSetProperlyWhenUsingClearHeaderWithSeparateRedirectCode()
+    {
+        $this->_response->setRedirect('http://foo.com/', 301);
+        $this->_response->clearHeader('Location');
+        $this->assertTrue($this->_response->isRedirect());
+        $this->assertEquals(301, $this->_response->getHttpResponseCode());
+    }
+
+    /**
+     * @group ZF-11791
+     */
+    public function testIsRedirectFlagIsSetProperlyWhenUsingSetRawHeader()
+    {
+        $this->assertFalse($this->_response->isRedirect());
+        $this->_response->setRawHeader('Location: http://foo.com/');
+        $this->assertTrue($this->_response->isRedirect());
+    }
+
+    /**
+     * @group ZF-11791
+     */
+    public function testIsRedirectFlagIsSetProperlyWhenUsingClearRawHeader()
+    {
+        $this->testIsRedirectFlagIsSetProperlyWhenUsingSetRawHeader();
+        $this->_response->clearRawHeader('Location');
+        $this->assertFalse($this->_response->isRedirect());
+    }
+
+    /**
+     * @group ZF-11791
+     */
+    public function testIsRedirectFlagIsSetProperlyWhenUsingClearRawHeaderWithSeparateRedirectCode()
+    {
+        $this->_response->setRedirect('http://foo.com/', 301);
+        $this->_response->clearRawHeader('Location');
+        $this->assertTrue($this->_response->isRedirect());
+        $this->assertEquals(301, $this->_response->getHttpResponseCode());
+    }
 }
 
 require_once 'Zend/Controller/Action.php';
