--- tests/Zend/Filter/File/RenameTest.php	(revision 18667)
+++ tests/Zend/Filter/File/RenameTest.php	(working copy)
@@ -104,13 +104,14 @@
      */
     public function __construct()
     {
-        $this->_filesPath = dirname(__FILE__) . DIRECTORY_SEPARATOR
-                          . '..' . DIRECTORY_SEPARATOR . '_files' . DIRECTORY_SEPARATOR;
-        $this->_origFile  = $this->_filesPath . 'original.file';
-        $this->_oldFile   = $this->_filesPath . 'testfile.txt';
-        $this->_newFile   = $this->_filesPath . 'newfile.xml';
-        $this->_newDir    = $this->_filesPath . DIRECTORY_SEPARATOR . '_testDir2';
-        $this->_newDirFile = $this->_newDir . DIRECTORY_SEPARATOR . 'testfile.txt';
+        $this->_filesPath     = dirname(__FILE__) . DIRECTORY_SEPARATOR
+                              . '..' . DIRECTORY_SEPARATOR . '_files' . DIRECTORY_SEPARATOR;
+        $this->_origFile      = $this->_filesPath . 'original.file';
+        $this->_oldFile       = $this->_filesPath . 'testfile.txt';
+        $this->_newFile       = $this->_filesPath . 'newfile.xml';
+        $this->_newFileOldExt = $this->_newFile . '.txt';
+        $this->_newDir        = $this->_filesPath . DIRECTORY_SEPARATOR . '_testDir2';
+        $this->_newDirFile    = $this->_newDir . DIRECTORY_SEPARATOR . 'testfile.txt';
     }
 
     /**
@@ -128,6 +129,10 @@
             unlink($this->_newFile);
         }
 
+        if (file_exists($this->_newFileOldExt)) {
+            unlink($this->_newFileOldExt);
+        }
+
         if (file_exists($this->_newDirFile)) {
             unlink($this->_newDirFile);
         }
@@ -169,9 +174,10 @@
         $filter = new Zend_Filter_File_Rename($this->_newFile);
 
         $this->assertEquals(array(0 =>
-            array('source'    => '*',
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)),
+            array('source'            => '*',
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)),
             $filter->getFile());
         $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
@@ -189,9 +195,10 @@
             'target' => $this->_newFile));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
@@ -207,13 +214,15 @@
             'source' => $this->_oldFile,
             'target' => $this->_newFile,
             'overwrite' => true,
+            'preserveExtension' => true,
             'unknown'   => false));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newFile,
-                  'overwrite' => true)), $filter->getFile());
-        $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => true,
+                  'overwrite'         => true)), $filter->getFile());
+        $this->assertEquals($this->_newFileOldExt, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
 
@@ -230,9 +239,10 @@
                 'target' => $this->_newFile)));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
@@ -248,9 +258,10 @@
             'source' => $this->_oldFile));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => '*',
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => '*',
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
 
         $this->assertEquals($this->_oldFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
@@ -267,9 +278,10 @@
             'target' => $this->_newFile));
 
         $this->assertEquals(array(0 =>
-            array('source'    => '*',
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => '*',
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
 
         $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
@@ -285,9 +297,10 @@
         $filter = new Zend_Filter_File_Rename($this->_newDir);
 
         $this->assertEquals(array(0 =>
-            array('source'    => '*',
-                  'target'    => $this->_newDir,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => '*',
+                  'target'            => $this->_newDir,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newDirFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
@@ -304,9 +317,10 @@
             'target' => $this->_newDir));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newDir,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newDir,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newDirFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
@@ -324,9 +338,10 @@
                 'target' => $this->_newDir)));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newDir,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newDir,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newDirFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
@@ -342,9 +357,10 @@
             'target' => $this->_newDir));
 
         $this->assertEquals(array(0 =>
-            array('source'    => '*',
-                  'target'    => $this->_newDir,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => '*',
+                  'target'            => $this->_newDir,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
 
         $this->assertEquals($this->_newDirFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
@@ -364,9 +380,10 @@
             'target' => $this->_newFile));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
@@ -381,15 +398,34 @@
             'target' => $this->_newDir));
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newDir,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newDir,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newDirFile, $filter->getNewName($this->_oldFile));
     }
 
     /**
      * @return void
      */
+    public function testGetNewNamePreserveExtension()
+    {
+        $filter = new Zend_Filter_File_Rename(array(
+            'source' => $this->_oldFile,
+            'target' => $this->_newFile,
+            'preserveExtension' => true));
+
+        $this->assertEquals(array(0 =>
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => true,
+                  'overwrite'         => false)), $filter->getFile());
+        $this->assertEquals($this->_newFileOldExt, $filter->getNewName($this->_oldFile));
+    }
+
+    /**
+     * @return void
+     */
     public function testGetNewNameExceptionWithExistingFile()
     {
         $filter = new Zend_Filter_File_Rename(array(
@@ -399,9 +435,10 @@
         copy($this->_oldFile, $this->_newFile);
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         try {
             $this->assertEquals($this->_newFile, $filter->getNewName($this->_oldFile));
             $this->fail();
@@ -423,9 +460,10 @@
         copy($this->_oldFile, $this->_newFile);
 
         $this->assertEquals(array(0 =>
-            array('source'    => $this->_oldFile,
-                  'target'    => $this->_newFile,
-                  'overwrite' => true)), $filter->getFile());
+            array('source'            => $this->_oldFile,
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => true)), $filter->getFile());
         $this->assertEquals($this->_newFile, $filter->getNewName($this->_oldFile));
     }
 
@@ -438,9 +476,10 @@
         $filter->addFile($this->_newFile);
 
         $this->assertEquals(array(0 =>
-            array('source'    => '*',
-                  'target'    => $this->_newFile,
-                  'overwrite' => false)), $filter->getFile());
+            array('source'            => '*',
+                  'target'            => $this->_newFile,
+                  'preserveExtension' => false,
+                  'overwrite'         => false)), $filter->getFile());
         $this->assertEquals($this->_newFile, $filter->filter($this->_oldFile));
         $this->assertEquals('falsefile', $filter->filter('falsefile'));
     }
Index: library/Zend/Filter/File/Rename.php
===================================================================
--- library/Zend/Filter/File/Rename.php	(revision 18667)
+++ library/Zend/Filter/File/Rename.php	(working copy)
@@ -42,9 +42,13 @@
      *
      * Options argument may be either a string, a Zend_Config object, or an array.
      * If an array or Zend_Config object, it accepts the following keys:
-     * 'source'    => Source filename or directory which will be renamed
-     * 'target'    => Target filename or directory, the new name of the sourcefile
-     * 'overwrite' => Shall existing files be overwritten ?
+     * 'source'            => Source filename or directory which will be
+     *                        renamed
+     * 'target'            => Target filename or directory, the new name of the
+     *                        sourcefile
+     * 'preserveExtension' => If true, target filename will always use the same
+     *                        extension as the source file
+     * 'overwrite'         => Shall existing files be overwritten ?
      *
      * @param  string|array $options Target file or directory to be renamed
      * @param  string $target Source filename or directory (deprecated)
@@ -91,9 +95,13 @@
      * Sets a new file or directory as target, deleting existing ones
      *
      * Array accepts the following keys:
-     * 'source'    => Source filename or directory which will be renamed
-     * 'target'    => Target filename or directory, the new name of the sourcefile
-     * 'overwrite' => Shall existing files be overwritten ?
+     * 'source'            => Source filename or directory which will be
+     *                        renamed
+     * 'target'            => Target filename or directory, the new name of the
+     *                        sourcefile
+     * 'preserveExtension' => If true, target filename will always use the same
+     *                        extension as the source file
+     * 'overwrite'         => Shall existing files be overwritten ?
      *
      * @param  string|array $options Old file or directory to be rewritten
      * @return Zend_Filter_File_Rename
@@ -110,9 +118,13 @@
      * Adds a new file or directory as target to the existing ones
      *
      * Array accepts the following keys:
-     * 'source'    => Source filename or directory which will be renamed
-     * 'target'    => Target filename or directory, the new name of the sourcefile
-     * 'overwrite' => Shall existing files be overwritten ?
+     * 'source'            => Source filename or directory which will be
+     *                        renamed
+     * 'target'            => Target filename or directory, the new name of the
+     *                        sourcefile
+     * 'preserveExtension' => If true, target filename will always use the same
+     *                        extension as the source file
+     * 'overwrite'         => Shall existing files be overwritten ?
      *
      * @param  string|array $options Old file or directory to be rewritten
      * @return Zend_Filter_File_Rename
@@ -217,6 +229,10 @@
                     $files['target'] = (string) $value;
                     break;
 
+                case 'preserveExtension' :
+                    $files['preserveExtension'] = (boolean) $value;
+                    break;
+
                 case 'overwrite' :
                     $files['overwrite'] = (boolean) $value;
                     break;
@@ -238,6 +254,10 @@
             $files['target'] = '*';
         }
 
+        if (empty($files['preserveExtension'])) {
+            $files['preserveExtension'] = false;
+        }
+
         if (empty($files['overwrite'])) {
             $files['overwrite'] = false;
         }
@@ -299,6 +319,14 @@
             $rename['target'] .= $name;
         }
 
+        if ($value['preserveExtension']) {
+            $sourceExt = substr($value['source'], strrpos($value['source'], '.'));
+            $targetExt = substr($rename['target'], strrpos($rename['target'], '.'));
+            if ($sourceExt != $targetExt) {
+                $rename['target'] .= $sourceExt;
+            }
+        }
+
         return $rename;
     }
 }
Index: documentation/manual/en/module_specs/Zend_File_Transfer-Filters.xml
===================================================================
--- documentation/manual/en/module_specs/Zend_File_Transfer-Filters.xml	(revision 18667)
+++ documentation/manual/en/module_specs/Zend_File_Transfer-Filters.xml	(working copy)
@@ -361,6 +361,13 @@
 
             <listitem>
                 <para>
+                    <code>preserveExtension</code>: Sets if the new filename will have the same
+                    extension as the old file. The default value is false.
+                </para>
+            </listitem>
+
+            <listitem>
+                <para>
                     <code>overwrite</code>: Sets if the old file overwrites the new one if it
                     already exists. The default value is false.
                 </para>
