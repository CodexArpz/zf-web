--- Zend_Controller-Router-Route-Chain.xml.orig	2009-06-20 19:59:04.000000000 +0200
+++ Zend_Controller-Router-Route-Chain.xml	2009-06-22 22:33:12.000000000 +0200
@@ -70,14 +70,14 @@
         <title>Chain Routes via Zend_Config</title>
 
         <para>
-            To chain routes together in a config file, there are  additional
+            To chain routes together in a config file, there are additional
             parameters for the configuration of those. The simpler approach is
             to use the <code>chains</code> parameters. This one is simply a list
             of routes, which will be chained with the parent route. Neither the
             parent- nor the child-route will be added directly to the router but
             only the resulting chained route. The name of the chained route in
             the router will be the parent route name and the child route name
-            concatenated with a dash (-). A simple config in XML would look
+            concatenated with a dash (-) by default. A simple config in XML would look
             like this:
         </para>
 
@@ -177,6 +177,32 @@
     </www-imprint>
 </routes>
 ]]></programlisting>
+        <para>
+            When you configure the router with Zend_Config, chains routes and
+            want the chain name separator to be different from a dash, you
+            need to specify this separator separately:
+        </para>
+
+        <programlisting language="php"><![CDATA[
+$config = new Zend_Config(array('chainName' => array(
+    'type'=>'Zend_Controller_Router_Route_Static',
+    'route'=>'foo',
+    'chains'=> array('subRouteName'=>
+        array('type'=>'Zend_Controller_Router_Route_Static',
+              'route'=>'bar',
+              'defaults'=>array(
+                 'module'=>'module',
+                 'controller'=>'controller',
+                 'action'=>'action'))))));
+
+// Set separator before adding config
+$router->setChainNameSeparator('_separator_')
+// Add config
+$outer->addConfig($config);
+// The name of our route now is: chainName_separator_subRouteName
+echo $this->_router->assemble(array(),'chainName_separator_subRouteName');
+// The proof: it echoes /foo/bar
+]]></programlisting>
     </sect4>
 </sect3>
 <!--
