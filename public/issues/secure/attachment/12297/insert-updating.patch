diff -ur ZendFramework-1.9.3PL1-minimal/library/Zend/Db/Adapter/Abstract.php ZendFramework-1.9.3PL1-minimal-patched/library/Zend/Db/Adapter/Abstract.php
--- ZendFramework-1.9.3PL1-minimal/library/Zend/Db/Adapter/Abstract.php	2009-08-20 19:54:16.000000000 -0400
+++ ZendFramework-1.9.3PL1-minimal-patched/library/Zend/Db/Adapter/Abstract.php	2009-10-10 23:24:17.000000000 -0400
@@ -549,6 +549,21 @@
     }
 
     /**
+     * Insert a table row with specified data, or updates an existing row.
+     * Not supported by all RDBMSs.
+     *
+     * @param mixed $table The table to insert data into.
+     * @param array $bind Column-value pairs.
+     * @return int The number of affected rows.
+     */
+    public function insertUpdating($table, array $bind, array $bindOnDuplicateKey)
+    {
+        /** @see Zend_Db_Adapter_Exception */
+        require_once 'Zend/Db/Adapter/Exception.php';
+        throw new Zend_Db_Adapter_Exception(get_class($this) ." doesn't support update on duplicate key");
+    }
+
+    /**
      * Updates table rows with specified data based on a WHERE clause.
      *
      * @param  mixed        $table The table to update.
diff -ur ZendFramework-1.9.3PL1-minimal/library/Zend/Db/Adapter/Pdo/Mysql.php ZendFramework-1.9.3PL1-minimal-patched/library/Zend/Db/Adapter/Pdo/Mysql.php
--- ZendFramework-1.9.3PL1-minimal/library/Zend/Db/Adapter/Pdo/Mysql.php	2009-07-22 00:03:09.000000000 -0400
+++ ZendFramework-1.9.3PL1-minimal-patched/library/Zend/Db/Adapter/Pdo/Mysql.php	2009-10-11 02:24:27.000000000 -0400
@@ -254,4 +254,49 @@
         return $sql;
     }
 
+    public function insertUpdating($table, array $bind, array $bindOnDuplicateKey)
+    {
+        // extract and quote col names from the array keys
+        $cols = array();
+        $vals = array();
+        foreach ($bind as $col => $val) {
+            $cols[] = $this->quoteIdentifier($col, true);
+            if ($val instanceof Zend_Db_Expr) {
+                $vals[] = $val->__toString();
+                unset($bind[$col]);
+            } else {
+                $vals[] = '?';
+            }
+        }
+
+	$colsOnDupe = array();
+	$valsOnDupe = array();
+	foreach ($bindOnDuplicateKey as $col => $val) {
+            $colsOnDupe[] = $this->quoteIdentifier($col, true);
+            if ($val instanceof Zend_Db_Expr) {
+                $valsOnDupe[] = $val->__toString();
+                unset($bindOnDuplicateKey[$col]);
+            } else {
+                $valsOnDupe[] = '?';
+            }
+	}
+
+        // build the statement
+	$onDupeUpdates = array();
+	foreach ($colsOnDupe as $i => $col) {
+	  $onDupeUpdates[] = $col . ' = ' . $valsOnDupe[$i];
+	}
+        $sql = "INSERT INTO "
+             . $this->quoteIdentifier($table, true)
+             . ' (' . implode(', ', $cols) . ') '
+	     . 'VALUES (' . implode(', ', $vals) . ') ON DUPLICATE KEY UPDATE '
+	     . implode(', ', $onDupeUpdates);
+
+	$spliced_bind = array(array_values($bind), count($bind), 0, array_values($bindOnDuplicateKey));
+
+        // execute the statement and return the number of affected rows
+        $stmt = $this->query($sql, array_values($spliced_bind));
+        $result = $stmt->rowCount();
+        return $result;
+    }
 }
