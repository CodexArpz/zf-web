___________________________________________________________________
Adicionados: svn:ignore
   + .ClassTest.php.swp


Index: tests/Zend/CodeGenerator/Php/_files/zf-11703.php
===================================================================
--- tests/Zend/CodeGenerator/Php/_files/zf-11703.php	(revisão 0)
+++ tests/Zend/CodeGenerator/Php/_files/zf-11703.php	(revisão 0)
@@ -0,0 +1,13 @@
+<?php
+/**
+ * For manipulating files.
+ */
+
+class Foo
+{
+
+    public function bar()
+    {
+        // action body
+    }
+}
\ No newline at end of file
Index: tests/Zend/CodeGenerator/Php/_files/zf-11703_1.php
===================================================================
--- tests/Zend/CodeGenerator/Php/_files/zf-11703_1.php	(revisão 0)
+++ tests/Zend/CodeGenerator/Php/_files/zf-11703_1.php	(revisão 0)
@@ -0,0 +1,16 @@
+<?php
+/**
+ * For manipulating files.
+ */
+
+/**
+ * Class Foo1
+ */
+class Foo1
+{
+
+    public function bar()
+    {
+        // action body
+    }
+}
\ No newline at end of file
Index: tests/Zend/CodeGenerator/Php/FileTest.php
===================================================================
--- tests/Zend/CodeGenerator/Php/FileTest.php	(revisão 24451)
+++ tests/Zend/CodeGenerator/Php/FileTest.php	(cópia de trabalho)
@@ -295,5 +295,87 @@
         $this->assertEquals($targetLength, strlen($lines[2]));
         $this->assertEquals(';', $lines[2]{$targetLength-1});
     }
+    
+    /**
+    * @group ZF-11703
+    */
+    public function testNewMethodKeepDocBlock(){
+        $codeGenFile = Zend_CodeGenerator_Php_File::fromReflectedFileName(dirname(__FILE__).'/_files/zf-11703.php', true, true);
+        $target = <<<EOS
+<?php
+/**
+ * For manipulating files.
+ *
+ */
 
+class Foo
+{
+
+    public function bar()
+    {
+        // action body
+    }
+
+    public function bar2()
+    {
+        // action body
+    }
+
+
 }
+
+
+EOS;
+
+        $codeGenFile->getClass()->setMethod(array(
+            'name' => 'bar2',
+            'body' => '// action body'
+            ));
+
+        $this->assertEquals($target, $codeGenFile->generate());
+    }
+    
+    /**
+    * @group ZF-11703
+    */
+    public function testNewMethodKeepTwoDocBlock(){
+        $codeGenFile = Zend_CodeGenerator_Php_File::fromReflectedFileName(dirname(__FILE__).'/_files/zf-11703_1.php', true, true);
+        $target = <<<EOS
+<?php
+/**
+ * For manipulating files.
+ *
+ */
+
+
+/**
+ * Class Foo1
+ *
+ */
+class Foo1
+{
+
+    public function bar()
+    {
+        // action body
+    }
+
+    public function bar2()
+    {
+        // action body
+    }
+
+
+}
+
+
+EOS;
+
+        $codeGenFile->getClass()->setMethod(array(
+            'name' => 'bar2',
+            'body' => '// action body'
+            ));
+
+        $this->assertEquals($target, $codeGenFile->generate());
+    }
+}
Index: library/Zend/CodeGenerator/Php/File.php
===================================================================
--- library/Zend/CodeGenerator/Php/File.php	(revisão 24451)
+++ library/Zend/CodeGenerator/Php/File.php	(cópia de trabalho)
@@ -394,7 +394,7 @@
 
         // if there are markers, put the body into the output
         $body = $this->getBody();
-        if (preg_match('#/\* Zend_CodeGenerator_Php_File-(.*?)Marker:#', $body)) {
+        if (preg_match('#/\* Zend_CodeGenerator_Php_File-(.*?)Marker#', $body)) {
             $output .= $body;
             $body    = '';
         }
@@ -428,6 +428,9 @@
         $classes = $this->getClasses();
         if (!empty($classes)) {
             foreach ($classes as $class) {
+                if($this->getDocblock() == $class->getDocblock())
+                    $class->setDocblock(null);
+                    
                 $regex = str_replace('?', $class->getName(), self::$_markerClass);
                 $regex = preg_quote($regex, '#');
                 if (preg_match('#'.$regex.'#', $output)) {
Index: library/Zend/CodeGenerator/Php/Class.php
===================================================================
--- library/Zend/CodeGenerator/Php/Class.php	(revisão 24451)
+++ library/Zend/CodeGenerator/Php/Class.php	(cópia de trabalho)
@@ -161,7 +161,7 @@
 
         if (is_array($docblock)) {
             $docblock = new Zend_CodeGenerator_Php_Docblock($docblock);
-        } elseif (!$docblock instanceof Zend_CodeGenerator_Php_Docblock) {
+        } elseif ((!is_null($docblock)) && (!$docblock instanceof Zend_CodeGenerator_Php_Docblock)) {
             require_once 'Zend/CodeGenerator/Php/Exception.php';
             throw new Zend_CodeGenerator_Php_Exception('setDocblock() is expecting either a string, array or an instance of Zend_CodeGenerator_Php_Docblock');
         }
