--- Form.php	Thu Nov 12 17:26:19 2009
+++ Form.php	Fri Nov 27 11:37:52 2009
@@ -1005,8 +1005,23 @@
                     $options['decorators'] = $this->_elementDecorators;
                 }
             }
+						
+						if(is_array($options) && array_key_exists('isArray', $options)) {
+							
+							if(array_key_exists($name, $this->_elements) == false) {
+								
+								$this->_elements[$name] = array();
+								
+							}
 
-            $this->_elements[$name] = $this->createElement($element, $name, $options);
+							array_push($this->_elements[$name], $this->createElement($element, $name, $options));
+
+						}
+						else {
+
+							$this->_elements[$name] = $this->createElement($element, $name, $options);
+
+						}
         } elseif ($element instanceof Zend_Form_Element) {
             $prefixPaths              = array();
             $prefixPaths['decorator'] = $this->getPluginLoader('decorator')->getPaths();
@@ -1154,10 +1169,18 @@
      * @param  string $name
      * @return Zend_Form_Element|null
      */
-    public function getElement($name)
+    public function getElement($name, $index = 0)
     {
         if (array_key_exists($name, $this->_elements)) {
+
+						if(is_array($this->_elements[$name]) && $index >= 0) {
+
+							return $this->_elements[$name][$index];
+
+						}
+
             return $this->_elements[$name];
+						
         }
         return null;
     }
@@ -1178,18 +1201,37 @@
      * @param  string $name
      * @return boolean
      */
-    public function removeElement($name)
+    public function removeElement($name, $index = 0)
     {
         $name = (string) $name;
         if (isset($this->_elements[$name])) {
+
+					if(is_array($this->_elements[$name])) {
+
+						 unset($this->_elements[$name][$index]);
+					}
+					else {
+
             unset($this->_elements[$name]);
+
+					}
             if (array_key_exists($name, $this->_order)) {
                 unset($this->_order[$name]);
                 $this->_orderUpdated = true;
             } else {
                 foreach ($this->_displayGroups as $group) {
                     if (null !== $group->getElement($name)) {
+
+											if(null !== $group->getElement($name)) {
+
+												$group->removeElement($name);
+
+											}
+											else {
+
                         $group->removeElement($name);
+
+											}
                     }
                 }
             }
@@ -1211,7 +1253,7 @@
                 unset($this->_order[$key]);
             }
         }
-        $this->_elements     = array();
+        $this->_elements  = array();
         $this->_orderUpdated = true;
         return $this;
     }
@@ -1271,9 +1313,18 @@
      * @param  string $name
      * @return mixed
      */
-    public function getValue($name)
+    public function getValue($name, $index = 0)
     {
-        if ($element = $this->getElement($name)) {
+			
+				$element = $this->getElement($name);
+
+				if(is_array($element) && $index >= 0) {
+
+
+
+				}
+				elseif($element !== null) {
+
             return $element->getValue();
         }
 
@@ -1299,9 +1350,23 @@
     {
         $values = array();
         foreach ($this->getElements() as $key => $element) {
-            if (!$element->getIgnore()) {
-                $values[$key] = $element->getValue();
-            }
+					if(is_array($element)) {
+
+						$values[$key] = array();
+
+						foreach ($element as $sub_key => $sub_element) {
+
+							if (!$sub_element->getIgnore()) {
+
+								array_push($values[$key], $element->getValue());
+
+							}
+						}
+					}
+
+           if (!$element->getIgnore()) {
+               $values[$key] = $element->getValue();
+           }
         }
         foreach ($this->getSubForms() as $key => $subForm) {
             $fValues = $this->_attachToArray($subForm->getValues(true), $subForm->getElementsBelongTo());
@@ -1321,9 +1386,9 @@
      * @param  string $name
      * @return mixed
      */
-    public function getUnfilteredValue($name)
+    public function getUnfilteredValue($name, $index)
     {
-        if ($element = $this->getElement($name)) {
+        if ($element = $this->getElement($name, $index)) {
             return $element->getUnfilteredValue();
         }
         return null;
@@ -1338,8 +1403,26 @@
     {
         $values = array();
         foreach ($this->getElements() as $key => $element) {
-            $values[$key] = $element->getUnfilteredValue();
-        }
+
+					if(is_array($element)) {
+
+						$values[$key] = array();
+
+						foreach ($element as $sub_key => $sub_element) {
+
+							if (!$sub_element->getIgnore()) {
+
+								array_push($values[$key], $element->getValue());
+
+							}
+							else {
+
+								$values[$key] = $element->getUnfilteredValue();
+
+							}
+						}
+					}
+				}
 
         return $values;
     }
@@ -1353,7 +1436,20 @@
     public function setElementFilters(array $filters)
     {
         foreach ($this->getElements() as $element) {
-            $element->setFilters($filters);
+
+						if(is_array($element)) {
+
+							foreach ($element as $sub_element) {
+
+								$sub_element->setFilters($filters);
+
+							}
+						}
+						else {
+
+							$element->setFilters($filters);
+
+						}
         }
         return $this;
     }
@@ -1392,7 +1488,7 @@
      * @param  string $name Element name
      * @return void
      */
-    protected function _setElementsBelongTo($name = null)
+    protected function _setElementsBelongTo($name = null, $index = 0)
     {
         $array = $this->getElementsBelongTo();
 
@@ -1404,7 +1500,15 @@
             foreach ($this->getElements() as $element) {
                 $element->setBelongsTo($array);
             }
-        } else {
+        }
+				elseif(is_array($this->getElement($name))) {
+
+						$element = $this->getElement($name, $index);
+
+						$element->setBelongsTo($array);
+
+				}
+				else {
             if (null !== ($element = $this->getElement($name))) {
                 $element->setBelongsTo($array);
             }
@@ -2234,7 +2338,22 @@
             $errors = $this->getSubForm($name)->getErrors();
         } else {
             foreach ($this->_elements as $key => $element) {
+
+							if(is_array($element) == true) {
+
+								foreach ($element as $array_key => $array_element) {
+
+									$errors[$key] = array();
+
+									array_push($errors[$key], $element->getErrors());
+
+								}
+							}
+							else {
+
                 $errors[$key] = $element->getErrors();
+
+							}
             }
             foreach ($this->getSubForms() as $key => $subForm) {
                 $fErrors = $this->_attachToArray($subForm->getErrors(), $subForm->getElementsBelongTo());
