Index: tests/Zend/Reflection/MethodTest.php
===================================================================
--- tests/Zend/Reflection/MethodTest.php	(revision 20102)
+++ tests/Zend/Reflection/MethodTest.php	(working copy)
@@ -91,5 +91,14 @@
         $this->assertEquals("    {\n\n        return 'mixedValue';\n\n    }\n", $reflectionMethod->getContents(false));
     }
 
+    /**
+     * @group ZF-7633
+     */
+    public function testReturnReturn()
+    {
+        $reflectionMethod = new Zend_Reflection_Method('Zend_Reflection_TestSampleClass5', 'doSomething');
+        $return = $reflectionMethod->getReturn();
+        $this->assertEquals(get_class($return), 'Zend_Reflection_Docblock_Tag_Return');
+    }
 }
 
Index: library/Zend/Reflection/Method.php
===================================================================
--- library/Zend/Reflection/Method.php	(revision 20102)
+++ library/Zend/Reflection/Method.php	(working copy)
@@ -165,4 +165,21 @@
         // just in case we had code on the bracket lines
         return rtrim(ltrim(implode("\n", $lines), '{'), '}');
     }
+
+    /**
+     * Get return type tag
+     *
+     * @return Zend_Reflection_Docblock_Tag_Return
+     */
+    public function getReturn()
+    {
+        $docblock = $this->getDocblock();
+        if (!$docblock->hasTag('return')) {
+            require_once 'Zend/Reflection/Exception.php';
+            throw new Zend_Reflection_Exception('Method does not specify an @return annotation tag; cannot determine return type');
+        }
+        $tag    = $docblock->getTag('return');
+        $return = Zend_Reflection_Docblock_Tag::factory('@return ' . $tag->getDescription());
+        return $return;
+    }  
 }
