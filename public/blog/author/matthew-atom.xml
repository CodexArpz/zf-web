<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Author: Matthew Weier O'Phinney - ZF Blog</title>
  <updated>2016-06-02T21:15:00+00:00</updated>
  <generator uri="http://framework.zend.com" version="2">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/author/matthew.html"/>
  <link rel="self" type="application/atom+xml" href="http://framework.zend.com/blog/author/matthew-atom.xml"/>
  <id>http://framework.zend.com/blog/author/matthew.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-06-02]]></title>
    <published>2016-06-02T21:15:00+00:00</published>
    <updated>2016-06-02T21:15:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-06-02-zf3-update.html"/>
    <id>http://framework.zend.com/blog/2016-06-02-zf3-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>https://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of posts on ZF3
development status. Since the last status update:</xhtml:p>
<xhtml:ul>
<xhtml:li>~130 pull requests merged, and ~100 issues closed.</xhtml:li>
<xhtml:li>Over 30 component releases.</xhtml:li>
<xhtml:li>Completion of the component documentation migration.</xhtml:li>
<xhtml:li>Tagging of zend-mvc 3.0.</xhtml:li>
<xhtml:li>Completion of the new skeleton application and related
installers.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>Since the last update, we managed to complete the migration of
documentation to components, as well as publish documentation for
all components!</xhtml:p>
<xhtml:p>You can view a list of all documented components via GitHub
Pages:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/">https://zendframework.github.io/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Each component contains a link in the topnav to scroll in the
component list, allowing you to navigate to other components.</xhtml:p>
<xhtml:p>Please help us thank <xhtml:a href="http://www.froschdesignstudio.de">Frank Br√ºckner</xhtml:a> for the
enormous amount of assistance he provided driving this milestone to
completion!</xhtml:p>
<xhtml:h2>zend-mvc 3.0 stability</xhtml:h2>
<xhtml:p>After copious testing with the skeleton application (more on
that below), and prepping components such as zend-test to work with
it, we decided that zend-mvc was ready to tag with a 3.0 stable
version!</xhtml:p>
<xhtml:p>For those not following previous updates, the main goals of the
zend-mvc v3 effort were:</xhtml:p>
<xhtml:ul>
<xhtml:li>De-couple from other components. Many components were listed as
development requirements and suggestions due to the fact that
zend-mvc contained zend-servicemanager integrations for them. We
have moved those integrations into the components themselves.</xhtml:li>
<xhtml:li>Reduce dependencies to exactly what's needed for a basic
zend-mvc application:
<xhtml:ul>
<xhtml:li>EventManager</xhtml:li>
<xhtml:li>HTTP</xhtml:li>
<xhtml:li>ModuleManager</xhtml:li>
<xhtml:li>Router</xhtml:li>
<xhtml:li>ServiceManager</xhtml:li>
<xhtml:li>Standard Library</xhtml:li>
<xhtml:li>View</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>Split optional integrations into their own packages. These
included:
<xhtml:ul>
<xhtml:li>Console integration (now provided via zend-mvc-console)</xhtml:li>
<xhtml:li>i18n integration (now provided via zend-mvc-i18n)</xhtml:li>
<xhtml:li>Several plugins had requirements on additional libraries,
including:
<xhtml:ul>
<xhtml:li>PRG (uses zend-session)</xhtml:li>
<xhtml:li>FilePRG (uses zend-form and zend-session)</xhtml:li>
<xhtml:li>FlashMessenger (uses zend-session)</xhtml:li>
<xhtml:li>Identity (uses zend-authentication)</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:p>During the process, we were able to remove around 75% of the
code, making the component much smaller, more maintainable, and
more focused.</xhtml:p>
<xhtml:p>Once zend-mvc was tagged 3.0, we quickly followed up with a
zend-test 3.0 release, and stable releases of zend-mvc-console,
zend-mvc-i18n, and the various zend-mvc-plugin packages.</xhtml:p>
<xhtml:h2>Skeleton application</xhtml:h2>
<xhtml:p>We'd begun refactoring the skeleton application previously, and
were able to complete the work in the past couple weeks. The new
skeleton:</xhtml:p>
<xhtml:ul>
<xhtml:li>Migrates to PSR-4 directory layout for the shipped
<xhtml:code>Application</xhtml:code> module.</xhtml:li>
<xhtml:li>Relies on Composer for all autoloading, including the
<xhtml:code>Application</xhtml:code> module.</xhtml:li>
<xhtml:li>Removes all translations. These were of dubious use, and were
quite difficult to maintain.</xhtml:li>
<xhtml:li>Depends only on zend-mvc, zend-component-installer (which
automates injecting components and modules into application
configuration during installation), and zend-skeleton-installer
(more on this below).</xhtml:li>
<xhtml:li>We removed almost 8000 lines of code, adding only 800!</xhtml:li>
</xhtml:ul>
<xhtml:p>zend-skeleton-installer is a new Composer plugin that prompts
the user during installation to:</xhtml:p>
<xhtml:ul>
<xhtml:li>Decide if they want a minimal install, or want to add optional
packages.</xhtml:li>
<xhtml:li>Prompts for a number of common optional packages, including
caching, logging, console integration, i18n, etc.</xhtml:li>
<xhtml:li>When installation is complete, <xhtml:em>it removes itself from the
project!</xhtml:em></xhtml:li>
</xhtml:ul>
<xhtml:p>Matthew plans to blog on the code behind zend-skeleton-installer
in the near future.</xhtml:p>
<xhtml:p>You can test out the new skeleton using the following:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer create-project "zendframework/skeleton-application:dev-develop" zend-project
</xhtml:code>
</xhtml:pre>
<xhtml:p>The above will use the new develop branch, and create a project
in the directory <xhtml:code>zend-project</xhtml:code>.</xhtml:p>
<xhtml:p>Finally, we added both an updated <xhtml:code>Vagrantfile</xhtml:code> and
Docker support to the skeleton, allowing you to start developing in
a consistent, de-coupled environment immediately.</xhtml:p>
<xhtml:p>For Vagrant, after you've installed, execute:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ vagrant up
</xhtml:code>
</xhtml:pre>
<xhtml:p>For Docker, you will need to use <xhtml:a href="https://docs.docker.com/compose/">docker-compose</xhtml:a>; once you
have that available, execute:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ docker-compose up -d --build
</xhtml:code>
</xhtml:pre>
<xhtml:p>With each, we bind your host port 8080 to the container's port
80, allowing you to visit it at http://localhost:8080/</xhtml:p>
<xhtml:p>We're excited about the new skeleton, and look forward to
getting your feedback on it!</xhtml:p>
<xhtml:h2>Final milestones</xhtml:h2>
<xhtml:p>We have a few last milestones before we're ready to announce the
completion of the Zend Framework 3 initiatives.</xhtml:p>
<xhtml:p>First, because PHP 5.5 support ends at the end of June, we will
be releasing a new minor version of all components setting the
minimum supported PHP version to 5.6. (Many already have such
versions in place.)</xhtml:p>
<xhtml:p>Second, now that the skeleton application is ready, we will be
migrating our tutorials to a new repository, converting them to
Markdown and MkDocs, and updating them to follow the new skeleton
and component changes.</xhtml:p>
<xhtml:p>Finally, we will be deciding what the
zendframework/zendframework package will look like for a version 3
tag. In large part, it becomes unnecessary, as we can ship even the
skeleton with a minimal set of components; however, for those who
want "everything at once", keeping it around as a metapackage may
have value. We'll be announcing the plans for it soon.</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Test the new skeleton (see the directions above) and provide
feedback.</xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases since the last update!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Announcement: ZF repository renamed!]]></title>
    <published>2016-05-03T16:30:00+00:00</published>
    <updated>2016-05-03T16:30:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-05-03-zf-repo-rename.html"/>
    <id>http://framework.zend.com/blog/2016-05-03-zf-repo-rename.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>https://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>As <xhtml:a href="/blog/2016-04-27-zf2-repo-rename.html">announced
last week</xhtml:a>, today, we have <xhtml:em>renamed the "zf2" repository on
GitHub to "zendframework"</xhtml:em>.</xhtml:p>
<xhtml:p>Per the <xhtml:a href="https://help.github.com/articles/renaming-a-repository/">GitHub
documentation on renames</xhtml:a>, existing links will be automatically
redirected, and will persist as long as we do not create a new
repository with the name "zf2". Redirects occur for:</xhtml:p>
<xhtml:ul>
<xhtml:li>issues</xhtml:li>
<xhtml:li>wikis</xhtml:li>
<xhtml:li>stars</xhtml:li>
<xhtml:li>followers</xhtml:li>
<xhtml:li>git operations</xhtml:li>
</xhtml:ul>
<xhtml:h2>Update your remotes</xhtml:h2>
<xhtml:p>While git operations pushing and pulling from the original
repository URLs will continue to work, GitHub recommends you update
your git remotes to point to the new location. You can do this with
the following in the CLI:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ git remote set-url origin https://github.com/zendframework/zendframework.git
</xhtml:code>
</xhtml:pre>
<xhtml:p>Note the following:</xhtml:p>
<xhtml:ul>
<xhtml:li>Replace <xhtml:code>origin</xhtml:code> with the name of the remote you use
locally; <xhtml:code>upstream</xhtml:code> is also commonly used. Run <xhtml:code>git
remote -v</xhtml:code> to see what you're actually using.</xhtml:li>
<xhtml:li>Valid remote URLs now include:
<xhtml:ul>
<xhtml:li>
<xhtml:code>https://github.com/zendframework/zendframework.git</xhtml:code></xhtml:li>
<xhtml:li>
<xhtml:code>git://github.com/zendframework/zendframework.git</xhtml:code></xhtml:li>
<xhtml:li>
<xhtml:code>git@github.com:zendframework/zendframework.git</xhtml:code></xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Composer</xhtml:h2>
<xhtml:p>Because <xhtml:a href="https://packagist.org/">Packagist</xhtml:a> points to
GitHub, it will seamlessly redirect. Additionally, all sha1s for
all commit remain identical. As such, there should be no impact to
end-users for the change for existing installs.</xhtml:p>
<xhtml:p>We have updated Packagist to point to the new URL as well, so
that as users update, their <xhtml:code>composer.lock</xhtml:code> files will
start pointing to the new URL.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Announcement: ZF repository rename 2016-05-03]]></title>
    <published>2016-04-27T14:45:00+00:00</published>
    <updated>2016-04-27T14:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-04-27-zf2-repo-rename.html"/>
    <id>http://framework.zend.com/blog/2016-04-27-zf2-repo-rename.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>In contrast to Zend Framework 2, which was a complete rewrite
and break with the architecture of Zend Framework 1, the Zend
Framework 3 initiative is more of an evolutionary change. We are
laser-focused on keeping as much backwards compatibility as
possible, and providing reasonable migration steps for our users.
Instead of moving development to a new repository, we have split
code into multiple component repositories, and made the main Zend
Framework repository a "meta" repository, containing dependency
information only.</xhtml:p>
<xhtml:p>Another way of putting it: changes to the main repository are
happening incrementally, and version 3 will just be a new major
version update within the existing repository.</xhtml:p>
<xhtml:p>However, such evolutionary change poses a slight logistical
problem: the repository is currently named "zf2".</xhtml:p>
<xhtml:p>As such, we've decided to rename the repository to remove the
version identifier. It will become simply "zendframework".</xhtml:p>
<xhtml:p>This naming is already reflected in our Composer package, which
is named "zendframework/zendframework". Additionally, GitHub will
provide long-lived redirects for all links to the repository,
including those to issues, comments, pull requests, etc.; those
redirects also work at the git level for each of HTTPS, SSH, and
git protocol access. Because no sha1s change, this means that
Composer installs will not suffer any issues, either.</xhtml:p>
<xhtml:p>We've also verified with GitHub that references of the form
<xhtml:code>zendframework/zf2#...</xhtml:code> within commits, comments, etc.
will continue to work, and redirect to the new location.</xhtml:p>
<xhtml:p>With all our concerns satifisied, <xhtml:strong>we'll be making the
change on 3 May 2016</xhtml:strong>, and will post to the blog with
details on how to update your git remotes to point to the renamed
repository at that time.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-04-21]]></title>
    <published>2016-04-21T21:45:00+00:00</published>
    <updated>2016-04-21T21:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-04-21-zf3-update.html"/>
    <id>http://framework.zend.com/blog/2016-04-21-zf3-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of posts on ZF3
development status. In the last three weeks, we've done a lot:</xhtml:p>
<xhtml:ul>
<xhtml:li>~160 pull requests merged, and ~110 issues closed.</xhtml:li>
<xhtml:li>Over 60 component releases.</xhtml:li>
<xhtml:li>Completion of the zend-mvc version 3 refactors.</xhtml:li>
<xhtml:li>All components are now forwards-compatible with existing v3
releases, including those that depend on zend-stdlib.</xhtml:li>
<xhtml:li>Progress on the documentation initiatives, including 11 new
components documented.</xhtml:li>
<xhtml:li>Announcement of issue closures.</xhtml:li>
</xhtml:ul>
<xhtml:h2>MVC Refactor</xhtml:h2>
<xhtml:p>In the <xhtml:a href="/blog/2016-03-24-zf3-update.html">previous
update</xhtml:a>, we provided a <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
roadmap for the zend-mvc v3 refactor</xhtml:a>; at the time, we'd just
begun the initiative, but still had the bulk of the work
remaining.</xhtml:p>
<xhtml:p>As of last week, however, we have completed all tasks related to
the refactor! These include:</xhtml:p>
<xhtml:ul>
<xhtml:li>a component installer Composer plugin, which will automatically
inject installed components into application configuration as
modules. (It is also forwards-compatible with upcoming Expressive
releases!)</xhtml:li>
<xhtml:li>console functionality as a separate component (<xhtml:a href="https://zendframework.github.io/zend-mvc-console">zend-mvc-console</xhtml:a>).</xhtml:li>
<xhtml:li>separation of controller plugins with additional dependencies
into their own packages, including:
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg">PostRedirectGet</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-fileprg">FilePostRedirectGet</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-flashmessenger">FlashMessenger</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-identity">Identity</xhtml:a></xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>separation of i18n integration into a separate component
(<xhtml:a href="https://zendframework.github.io/zend-mvc-i18n">zend-mvc-i18n</xhtml:a>).</xhtml:li>
<xhtml:li>separation of the code for wiring zend-di into
zend-servicemanager into a dedicated component (<xhtml:a href="https://zendframework.github.io/zend-servicemanager-di">zend-servicemanager-di</xhtml:a>).</xhtml:li>
<xhtml:li>removal of all factories and integrations with components that
fall outside the core dependencies.</xhtml:li>
</xhtml:ul>
<xhtml:p>This latter required that we move the various factories, service
integrations, and event listener wiring code into the components
themselves. This affected eight components, though we ended up
addressing another five components that were already defining
factories for zend-servicemanager as well:</xhtml:p>
<xhtml:ul>
<xhtml:li>zend-filter</xhtml:li>
<xhtml:li>zend-form</xhtml:li>
<xhtml:li>zend-hydrator</xhtml:li>
<xhtml:li>zend-inputfilter</xhtml:li>
<xhtml:li>zend-log</xhtml:li>
<xhtml:li>zend-navigation</xhtml:li>
<xhtml:li>zend-serializer</xhtml:li>
<xhtml:li>zend-validator</xhtml:li>
<xhtml:li>zend-cache</xhtml:li>
<xhtml:li>zend-db</xhtml:li>
<xhtml:li>zend-mail</xhtml:li>
<xhtml:li>zend-paginator</xhtml:li>
<xhtml:li>zend-session</xhtml:li>
</xhtml:ul>
<xhtml:p>For each of these, we created two new classes in their defined
namespaces, <xhtml:code>ConfigProvider</xhtml:code> and <xhtml:code>Module</xhtml:code>.
The first is an invokable class returning configuration, which
might include service configuration, plugin configuration, etc.
<xhtml:code>Module</xhtml:code> is a class specific to the Zend Framework
ecosystem, and returns configuration, but, in several cases, also
wired other code into the zend-mvc workflow. All of the above
components received new minor releases once these were in place,
and zend-mvc was updated to remove dependencies on them.</xhtml:p>
<xhtml:p>The core dependencies in zend-mvc are now:</xhtml:p>
<xhtml:ul>
<xhtml:li>zend-eventmanager</xhtml:li>
<xhtml:li>zend-http</xhtml:li>
<xhtml:li>zend-modulemanager</xhtml:li>
<xhtml:li>zend-router</xhtml:li>
<xhtml:li>zend-servicemanager</xhtml:li>
<xhtml:li>zend-stdlib</xhtml:li>
<xhtml:li>zend-view</xhtml:li>
</xhtml:ul>
<xhtml:p>Once we were done, the lines of code had dropped to
approximately 25% of the size in the version 2 releases!</xhtml:p>
<xhtml:h2>Skeleton application</xhtml:h2>
<xhtml:p>With the zend-mvc refactor complete, we decided to work on the
skeleton application.</xhtml:p>
<xhtml:p>Feedback we've had includes:</xhtml:p>
<xhtml:ul>
<xhtml:li>While having i18n support is interesting in terms of seeing how
it's done, it's mostly worthless in the skeleton application. The
provided translations are only valid for the home page shipped with
the skeleton, which is replaced essentially 100% of the time with
custom content. Additionally, it poses maintenance overhead with
regards to reviewing and accepting new translations. Finally, with
the split of zend-mvc-i18n, keeping it in meant adding additional
dependencies which might never be used.</xhtml:li>
<xhtml:li>Related, we've had a lot of folks indicate that they'd like an
option for a minimal skeleton. Many developers don't want the i18n,
console, forms, cache, logging, and other facilities, or want to
pick and choose which ones they configure.</xhtml:li>
<xhtml:li>As PSR-0 is deprecated, our skeleton should reflect PSR-4 for
the default <xhtml:code>Application</xhtml:code> module.</xhtml:li>
<xhtml:li>Related, we want to encourage using composer for all
autoloading.</xhtml:li>
</xhtml:ul>
<xhtml:p>To get the ball rolling, I created a <xhtml:a href="https://github.com/zendframework/ZendSkeletonApplication/pull/329">
pull request proposing a streamlined skeleton</xhtml:a>. This has already
generated a fair bit of discussion, and we have a number of new
ideas we're going to investigate, including setting up
Expressive-like installation questions to allow bringing in common
features during the first install.</xhtml:p>
<xhtml:h2>JSON Refactor</xhtml:h2>
<xhtml:p>We also did some refactoring of the zend-json component. Several
users have complained that it includes too much: the JSON-RPC
functionality is not generally useful for those who only want JSON
de/serialization, and the XML2JSON implementation is only needed by
a subset of users.</xhtml:p>
<xhtml:p>As such, we split it into three:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-json/">zend-json</xhtml:a> contains
the JSON de/serialization logic <xhtml:em>only</xhtml:em>, starting with its v3
release.</xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-json-server">zend-json-server</xhtml:a>
contains the JSON-RPC server implementation.</xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-xml2json">zend-xml2json</xhtml:a>
contains the XML2JSON implementation.</xhtml:li>
</xhtml:ul>
<xhtml:p>We'd like to thank <xhtml:a href="https://github.com/webit4me">Ali
Bahman</xhtml:a> for his assistance with these changes!</xhtml:p>
<xhtml:h2>Forwards compatibility</xhtml:h2>
<xhtml:p>This week, we discovered half-a-dozen components that declare a
dependency on zend-stdlib, but which had not been updated to allow
usage with zend-stdlib's v3 releases. As such, we quickly updated
each to do so, releasing new maintenance releases when ready. These
include:</xhtml:p>
<xhtml:ul>
<xhtml:li>zend-code</xhtml:li>
<xhtml:li>zend-expressive-skeleton</xhtml:li>
<xhtml:li>zend-ldap</xhtml:li>
<xhtml:li>zend-mime</xhtml:li>
<xhtml:li>zend-soap</xhtml:li>
<xhtml:li>zend-xmlrpc</xhtml:li>
</xhtml:ul>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>With the MVC initiatives complete, we have begun working on the
documentation in earnest again.</xhtml:p>
<xhtml:p>The first thing we did was recognize that while it's nice to be
publishing the documentation, we really need mechanisms for
navigating to other components. As such, we created a topnav button
that, when clicked, fetches a list of components with
documentation, and slides the list in from the top of the page.</xhtml:p>
<xhtml:p>We've also been either documenting components as we create them
(see the MVC plugins and JSON changes, above), or publishing
documentation as we create new releases on components we update.
Since the last update, we've published documentation for the
following components:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-json/">zend-json</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-json-server/">zend-json-server</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mime/">zend-mime</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-fileprg/">zend-mvc-plugin-fileprg</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-flashmessenger/">zend-mvc-plugin-flashmessenger</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-identity/">zend-mvc-plugin-identity</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-servicemanager-di/">zend-servicemanager-di</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-soap/">zend-soap</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-xml2json/">zend-xml2json</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-xmlrpc/">zend-xmlrpc</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to <xhtml:a href="http://www.froschdesignstudio.de">Frank
Br√ºckner</xhtml:a> for the copious documentation updates he's
provided!</xhtml:p>
<xhtml:p>There's plenty left to do, however (32 components left at the
time of writing). We've <xhtml:a href="https://github.com/zendframework/maintainers/wiki/Documentation-TODO">
created a list of components and tasks to perform</xhtml:a> if you are
interested in helping!</xhtml:p>
<xhtml:h2>Issue closures</xhtml:h2>
<xhtml:p>Last week, <xhtml:a href="https://blog.hock.in">Gary Hockin</xhtml:a> posted
to the ZF blog about a <xhtml:a href="/blog/2016-04-11-issue-closures.html">plan to perform housekeeping
of issues posted against the main zendframework repository</xhtml:a>. The
basic summary is: issues against the main ZF repository have been
tagged as <xhtml:a href="https://github.com/zendframework/zf2/issues?q=is:open+is:issue+label:%22To+Be+Closed%22">
"To Be Closed"</xhtml:a>, and will be closed in early May <xhtml:em>unless you
comment on an issue and tag user @GeeH before 3rd May
2016</xhtml:em>.</xhtml:p>
<xhtml:h2>Pull request and issue activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+is:merged+org:zendframework+closed:%222016-03-24+..+2016-04-21%22+">
merged around 160 pull requests</xhtml:a>, and <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+closed:%222016-03-24+..+2016-04-21%22+">
resolved around 110 issues</xhtml:a>. (links require a GitHub
account).</xhtml:p>
<xhtml:h2>Notable releases</xhtml:h2>
<xhtml:p>As noted at the beginning of this post, we've done over 60
component releases since the last update (approximately four weeks
ago). Notable amongst them:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://framework.zend.com/blog/zend-framework-1-12-18-released.html">
Zend Framework 1.12.18</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-json/releases/tag/3.0.0">zend-json
3.0.0</xhtml:a>, which removes the JSON-RPC and XML2JSON functionality
(as those are now in separate components)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-inputfilter/releases/tag/release-2.6.1">
zend-inputfilter 2.6.1</xhtml:a>, which fixes a long-standing issue with
localization of <xhtml:code>NotEmpty</xhtml:code> validation messages generated
for required inputs.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-math/releases/tag/release-2.7.0">
zend-math 2.7.0</xhtml:a> provides a security hardening patch for
<xhtml:code>Zend\Math\Rand</xhtml:code>, forcing usage of PHP 7's
<xhtml:code>random_bytes()</xhtml:code> and <xhtml:code>random_int()</xhtml:code> when
available, and requiring ircmaxell/RandomLib for earlier PHP
versions.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-session/releases/tag/release-2.7.0">
zend-session 2.7.0</xhtml:a> updates the component to use ext/mongodb +
the MongoDB PHP client library instead of ext/mongo, and adds
session identifier validation by default.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-db/releases/tag/release-2.7.1">
zend-db 2.7.1</xhtml:a> updates the <xhtml:code>Pgsql</xhtml:code> adapter to accept
the <xhtml:code>charset</xhtml:code> option; fixes
<xhtml:code>Zend\Db\Sql\Insert</xhtml:code> to properly manage arrays of column
names when generating SQL INSERT statements; fixes an issue with
how row counts were reported in <xhtml:code>Oci8</xhtml:code> result sets; and
updates the <xhtml:code>IbmDb2</xhtml:code> adapter to allow <xhtml:code>#</xhtml:code>
characters in identifiers.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-cache/releases/tag/release-2.7.0">
zend-cache 2.7.0</xhtml:a> offers a ton of new features, including a new
APCu adapter, upgraded support for XCache and Redis, and numerous
bugfixes.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-stdlib/releases/tag/release-2.7.7">
zend-stdlib 2.7.7</xhtml:a> and <xhtml:a href="https://github.com/zendframework/zend-stdlib/releases/tag/release-3.0.1">
zend-stdlib 3.0.1</xhtml:a> fix declaration of
<xhtml:code>Zend\Json\Json::GLOB_BRACE</xhtml:code> when on systems based on
non-gcc versions of glob.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Help complete the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/Documentation-TODO">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>Test the <xhtml:a href="https://github.com/zendframework/ZendSkeletonApplication/pull/329">
new skeleton</xhtml:a> and provide feedback.</xhtml:li>
<xhtml:li>Review <xhtml:a href="https://github.com/zendframework/zf2/issues?q=is:open+is:issue+label:%22To+Be+Closed%22">
issues to be closed</xhtml:a></xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases since the last update!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 1.12.18 Released!]]></title>
    <published>2016-04-13T16:30:00+00:00</published>
    <updated>2016-04-13T16:30:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-1-12-18-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-1-12-18-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>https://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of:</xhtml:p>
<xhtml:ul>
<xhtml:li>Zend Framework <xhtml:strong>1.12.18</xhtml:strong></xhtml:li>
</xhtml:ul>
<xhtml:p>You can download Zend Framework at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://framework.zend.com/downloads/latest#ZF1">http://framework.zend.com/downloads/latest#ZF1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Security Fixes</xhtml:h2>
<xhtml:p>Zend Framework 1.12.18 includes a fix for <xhtml:a href="/security/advisory/ZF2016-01">security advisory ZF2016-01</xhtml:a>, a
potential insufficient entropy vulnerability in a number of methods
exposed in Zend Framework 1, including:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:code>Zend_Ldap_Attribute::createPassword</xhtml:code></xhtml:li>
<xhtml:li><xhtml:code>Zend_Form_Element_Hash::_generateHash</xhtml:code></xhtml:li>
<xhtml:li><xhtml:code>Zend_Gdata_HttpClient::filterHttpRequest</xhtml:code></xhtml:li>
<xhtml:li><xhtml:code>Zend_Filter_Encrypt_Mcrypt::_srand</xhtml:code></xhtml:li>
<xhtml:li><xhtml:code>Zend_OpenId::randomBytes</xhtml:code></xhtml:li>
</xhtml:ul>
<xhtml:p>Moreover, the fix mitigates a flaw in
<xhtml:code>openssl_random_pseudo_bytes()</xhtml:code>, ensuring sufficient
entropy will be used for any random number generated.</xhtml:p>
<xhtml:h2>Other changes</xhtml:h2>
<xhtml:p>In addition to the security patch, the release includes fourteen
other patches, primarily around documentation. You can view a full
list at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/1.12.18">Zend Framework 1.12.18
Changelog</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to our contributors, and particularly the
maintainers who coordinated this version: Frank Br√ºckner, Rob
Allen, and Enrico Zimuel.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-03-24]]></title>
    <published>2016-03-24T20:45:00+00:00</published>
    <updated>2016-03-24T20:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-03-24-zf3-update.html"/>
    <id>http://framework.zend.com/blog/2016-03-24-zf3-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of posts on ZF3
development status. It's been more than a month since the last
update, and we've been quite busy with:</xhtml:p>
<xhtml:ul>
<xhtml:li>~160 pull requests merged, and ~125 issues closed.</xhtml:li>
<xhtml:li>~60 component releases.</xhtml:li>
<xhtml:li>Completion of the zend-servicemanager/zend-eventmanager
migrations.</xhtml:li>
<xhtml:li>Completion of the component/module installer.</xhtml:li>
<xhtml:li>Progress on the zend-mvc version 3 changes, including
separation of routing and console tooling to separate
packages.</xhtml:li>
<xhtml:li>Publication of documentation for 5 components to GitHub
Pages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Compatibility Migrations</xhtml:h2>
<xhtml:p>During the first week of March, we completed the forwards
compatibility migrations of components. As a reminder, we were
working on updating components that depend on any of:</xhtml:p>
<xhtml:ul>
<xhtml:li>zend-eventmanager</xhtml:li>
<xhtml:li>zend-servicemanager</xhtml:li>
<xhtml:li>zend-stdlib</xhtml:li>
</xhtml:ul>
<xhtml:p>to be forwards compatible with the version 3 releases of each.
In particular, the first two have version 2 releases that allow
developers to make their code forwards compatible with the version
3 releases, and we were doing precisely that with the various Zend
Framework components. As of 2 March 2016, we completed this task ‚Äî
a major milestone in the ZF3 initiative!</xhtml:p>
<xhtml:p>The following component releases were made since the <xhtml:a href="/blog/2016-02-12-zf3-biweekly-update.html">last blog update</xhtml:a>
and mark the current stable versions that are forwards compatible
with the v3 releases:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-authentication/releases/tag/2.5.3">
zend-authentication 2.5.3</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-barcode/releases/tag/2.6.0">zend-barcode
2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-captcha/releases/tag/2.5.4">zend-captcha
2.5.4</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-db/releases/tag/2.7.0">zend-db
2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-eventmanager/releases/tag/3.0.1">
zend-eventmanager 3.0.1</xhtml:a> (which updates the component to use
zend-stdlib v3)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-file/releases/tag/2.6.1">zend-file
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-form/releases/tag/2.7.0">zend-form
2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-hydrator/releases/tag/1.1.0">
zend-hydrator 1.1.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-hydrator/releases/tag/2.1.0">
zend-hydrator 2.1.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-inputfilter/releases/tag/2.6.0">
zend-inputfilter 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/releases/tag/2.7.1">zend-log
2.7.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mail/releases/tag/2.6.1">zend-mail
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-modulemanager/releases/tag/2.7.1">
zend-modulemanager 2.7.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mvc/releases/tag/2.7.3">zend-mvc
2.7.3</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-navigation/releases/tag/2.6.1">
zend-navigation 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-paginator/releases/tag/2.6.0">
zend-paginator 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-progressbar/releases/tag/2.5.2">
zend-progressbar 2.5.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-session/releases/tag/2.6.2">zend-session
2.6.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-test/releases/tag/2.6.1">zend-test
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-uri/releases/tag/2.5.2">zend-uri
2.5.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-validator/releases/tag/2.6.0">
zend-validator 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-view/releases/tag/2.6.5">zend-view
2.6.5</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>In addition to the migration changes, we made a number of other
updates to zend-mvc, including:</xhtml:p>
<xhtml:ul>
<xhtml:li>addition of a new <xhtml:code>MiddlewareListener</xhtml:code>, allowing
routing to PSR-7 middleware in the MVC layer.</xhtml:li>
<xhtml:li>modifications to the <xhtml:code>EventManagerAwareInterface</xhtml:code>
initializers; since shared managers are injected in
<xhtml:code>EventManager</xhtml:code> instances via the constructor in
zend-eventmanager v3, the initializers needed changes in order to
work with both v2 and v3.</xhtml:li>
<xhtml:li><xhtml:code>AbstractController::getServiceLocator()</xhtml:code> now raises
an <xhtml:code>E_USER_DEPRECATED</xhtml:code> notice. zend-servicemanager v3
removes the <xhtml:code>ServiceLocatorAwareInterface</xhtml:code>, and zend-mvc
will remove the implementations with version 3. Users should start
updating their controllers to accept dependencies via constructor
injection.</xhtml:li>
</xhtml:ul>
<xhtml:p>The above are messaged in more detail in the <xhtml:a href="http://zendframework.github.io/zend-mvc/migration/">zend-mvc
migration guide</xhtml:a>.</xhtml:p>
<xhtml:h2>Component / Module Installer</xhtml:h2>
<xhtml:p>One goal for zend-mvc is to reduce the number of dependencies.
Much of the functionality within zend-mvc is not directly related
to execution of the MVC, but rather integrating components.
Typically this is done by either providing and wiring factories for
components, or providing and/or wiring event listeners for
components.</xhtml:p>
<xhtml:p>We already have functionality that allows doing these tasks via
the zend-modulemanager component, which means we can expose
components as application modules. However, this creates an
installation issue: just like modules, you would need to:</xhtml:p>
<xhtml:ol>
<xhtml:li>Install the package containing the module.</xhtml:li>
<xhtml:li>Enable the module in your application.</xhtml:li>
</xhtml:ol>
<xhtml:p>To automate the second task, we developed <xhtml:a href="https://zendframework.github.io/zend-component-installer">zend-component-installer</xhtml:a>
back in December. As part of the current milestones, we completed
that component, by making the following changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>It now acts as a <xhtml:a href="https://getcomposer.org/doc/articles/plugins.md">composer
plugin</xhtml:a>. You install it as a development dependency, and it will
then inspect any package you install to see if it can handle
installation tasks. This vastly simplifies the previous iteration,
which required downloading a self-updating PHAR to install the
composer scripts within an application.</xhtml:li>
<xhtml:li>It now prompts you to ask which file to inject the detected
component or module into, allowing you to choose from:
<xhtml:ul>
<xhtml:li><xhtml:code>config/application.config.php</xhtml:code> (vanilla zend-mvc
application)</xhtml:li>
<xhtml:li><xhtml:code>config/modules.config.php</xhtml:code> (Apigility
application)</xhtml:li>
<xhtml:li><xhtml:code>config/development.config.php</xhtml:code> (application using
zend-development-mode)</xhtml:li>
<xhtml:li><xhtml:code>config/config.php</xhtml:code> (for Expressive users using the
expressive-config-manager)</xhtml:li>
<xhtml:li>or "do not inject".</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>It now prompts you to ask if you want to use the selection made
on additional packages being installed.</xhtml:li>
</xhtml:ul>
<xhtml:p>We've become quite excited about the possibilities Composer
plugins and installer scripts offer, and plan to leverage them as
much as possible!</xhtml:p>
<xhtml:h2>zend-mvc v3 progress</xhtml:h2>
<xhtml:p>Several weeks ago, we created a <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
detailed plan for the zend-mvc v3 refactor</xhtml:a>. The work is
primarily around reducing the number of dependencies zend-mvc
requires; the above work on the component installer directly
enables these changes, but much more needs to be done.</xhtml:p>
<xhtml:p>Since we posted that, we've also started work on the various
milestones it details. In particular, we've done the following:</xhtml:p>
<xhtml:ul>
<xhtml:li>Created the <xhtml:a href="https://zendframework.github.io/zend-router/">zend-router</xhtml:a>
component, to provide all routing capabilities. This reduces the
amount of code in zend-mvc tremendously, and also makes it easier
to re-use routing in other projects (e.g., <xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/pull/6">
zend-expressive-zendrouter</xhtml:a>). We also removed console routing
from the component, letting it focus on HTTP routing only (more on
this).</xhtml:li>
<xhtml:li>Created the <xhtml:a href="https://zendframework.github.io/zend-mvc-console/">zend-mvc-console</xhtml:a>
component, to provide integration between zend-console, zend-mvc,
zend-router, and zend-view. Essentially, all console-related
functionality from zend-mvc, zend-router, and zend-view were pushed
into this component.</xhtml:li>
<xhtml:li>Created <xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a>,
which makes a standalone component out of the <xhtml:code>prg()</xhtml:code>
controller plugin. This is the first of <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components#split-out-some-controller-plugins">
several component plugins</xhtml:a> being developed.</xhtml:li>
</xhtml:ul>
<xhtml:p>As part of this effort, we are <xhtml:a href="https://github.com/zendframework/zend-mvc/blob/develop/doc/book/migration/to-v3-0.md">
documenting migration steps</xhtml:a> needed by end-users, to ensure that
developers will be able to update their applications once version 3
is tagged.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>The documentation effort was put on the back-burner during these
past few weeks so that we can focus on the development efforts.
Regardless, we managed to publish 5 components to GitHub Pages:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-barcode/">zend-barcode</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc/">zend-mvc</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-console/">zend-mvc-console</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-router/">zend-router</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, a number of contributors, and notably <xhtml:a href="http://www.froschdesignstudio.de">Frank Br√ºckner</xhtml:a>, have been
providing patches to resolve issues created following the automated
documentation migration.</xhtml:p>
<xhtml:h2>Diactoros, Stratigility, and Expressive</xhtml:h2>
<xhtml:p>A fair number of issues and feature patches have been reported
on the <xhtml:a href="https://github.com/zendframework/zend-diactoros">Diactoros
(PSR-7)</xhtml:a>, <xhtml:a href="https://github.com/zendframework/zend-stratigility">Stratigility
(PSR-7 middleware foundation)</xhtml:a>, and <xhtml:a href="https://zendframework.github.io/zend-expressive/">Expressive</xhtml:a>
projects, and we had a short sprint to resolve these.</xhtml:p>
<xhtml:ul>
<xhtml:li>The latest version of Diactoros is <xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.5">
1.3.5</xhtml:a>, and it incorporates around 20 bugfixes and documentation
fixes; among others, if fixes detection of HTTP/2 requests in the
<xhtml:code>ServerRequestFactory</xhtml:code>.</xhtml:li>
<xhtml:li>The latest version of Stratigiliy, <xhtml:a href="https://github.com/zendframework/zend-stratigility/releases/tag/1.2.0">
1.2.0</xhtml:a>, makes the behavior of its internal <xhtml:code>Response</xhtml:code>
class less error-prone following calls to <xhtml:code>end()</xhtml:code>.
Additionally, it:
<xhtml:ul>
<xhtml:li>ensures that exception details are not emitted in production
mode, and makes production mode the default.</xhtml:li>
<xhtml:li>adds a <xhtml:code>FinalHandler::setOriginalResponse()</xhtml:code> method,
to allow injection after instantiation.</xhtml:li>
<xhtml:li>adds support for catching <xhtml:code>Throwable</xhtml:code> errors in PHP
7 applications within the dispatcher.</xhtml:li>
<xhtml:li>provides a more meaningful
<xhtml:code>InvalidMiddlewareException</xhtml:code> that is raised by
<xhtml:code>MiddlewarePipe::pipe()</xhtml:code> for non-callable
middleware.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/releases/tag/1.0.1">
zend-expressive-skeleton</xhtml:a> provides a number of fixes:
<xhtml:ul>
<xhtml:li>It updates the Pimple container script to cache factory
instances for re-use.</xhtml:li>
<xhtml:li>It updates the <xhtml:code>composer.json</xhtml:code> to allow installing
zend-servicemanager v3, whoops v2, and ProxyManager v2.</xhtml:li>
<xhtml:li>It fixes an issue in the installer whereby specified
constraints were not being passed to Composer prior to dependency
resolution, resulting in stale dependencies.</xhtml:li>
<xhtml:li>It removes error/exception display from the shipped default
error templates, to make them secure by default.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendviewrenderer/releases/tag/1.1.0">
zend-expressive-zendviewrenderer 1.1.0</xhtml:a> updates the component to
be forward-compatible with the zend-servicemanager and
zend-eventmanager v3 releases.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/releases/tag/1.1.0">
zend-expressive-zendrouter 1.1.0</xhtml:a> updates the component to
depend on zend-router instead of zend-mvc.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Pull request and issue activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+is:merged+org:zendframework+closed:%222016-02-12+..+2016-03-24%22">
merged around 160 pull requests</xhtml:a>, and <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+closed:%222016-02-12+..+2016-03-24%22+">
resolved around 125 issues</xhtml:a>. (links require a GitHub
account).</xhtml:p>
<xhtml:p>Unlike previous posts, we are not detailing every component
release this time; the sheer number of them (around 60!) would
result in a very long read!</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>You can help with the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
MVC milestone</xhtml:a>; the linked page provides plenty of detail on how
you can assist.</xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases since the last update!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-02-12]]></title>
    <published>2016-02-12T17:40:00+00:00</published>
    <updated>2016-02-12T17:40:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-02-12-zf3-biweekly-update.html"/>
    <id>http://framework.zend.com/blog/2016-02-12-zf3-biweekly-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of bi-weekly posts
on ZF3 development status.</xhtml:p>
<xhtml:p>The highlights:</xhtml:p>
<xhtml:ul>
<xhtml:li>~60 pull requests merged, and ~100 issues closed.</xhtml:li>
<xhtml:li>Another v3 release: zend-stdlib!</xhtml:li>
<xhtml:li>16 components updated to
zend-servicemanager/zend-eventmanager/zend-stdlib v3 changes, and
tagged with stable releases.</xhtml:li>
<xhtml:li>25 component releases.</xhtml:li>
<xhtml:li>Publication of documentation for 13 components to GitHub
Pages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>New 3.0 versions</xhtml:h2>
<xhtml:p>We released another component with version 3.0 stability,
<xhtml:a href="https://zendframework.github.io/zend-stdlib/">zend-stdlib</xhtml:a>.
This release got the major version bump for a number of
reasons:</xhtml:p>
<xhtml:ul>
<xhtml:li>Per version 2.7.0, the hydrator sub-component was deprecated
(it has been moved into its own component, <xhtml:a href="https://github.com/zendframework/zend-hydrator">zend-hydrator</xhtml:a>).
With the new major version, we were able to remove it.</xhtml:li>
<xhtml:li>A number of features existed as polyfills to provide
forwards-compatibility support from PHP 5.3 or PHP 5.4 to later PHP
versions. Since we now support only PHP 5.5+, we could remove
these.</xhtml:li>
</xhtml:ul>
<xhtml:p>Unless a component depends specifically on the hydrators, it's
essentially <xhtml:em>already</xhtml:em> forwards-compatible with the new
version 3! As such, we'll be gradually updating components that
depend on zend-stdlib to depend on <xhtml:code>^2.7 || ^3.0</xhtml:code>.</xhtml:p>
<xhtml:h2>Compatibility Migrations</xhtml:h2>
<xhtml:p>The past two weeks have been heavily focused on preparing
components to be forwards compatible with the version 3 releases of
zend-stdlib, zend-eventmanager, and zend-servicemanager. We had
several breakthroughs that are enabling these migrations.</xhtml:p>
<xhtml:p>First, we can test the different versions via additional
Travis-CI jobs. As an example, consider these PHP 5.5 entries from
the zend-cache test matrix:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-yaml">matrix:
  include:
    - php: 5.5
      env:
        - EXECUTE_CS_CHECK=true
        - PECL_INSTALL_APCU='apcu-4.0.8'
    - php: 5.5
      env:
        - SERVICE_MANAGER_VERSION="^2.7.5"
        - EVENT_MANAGER_VERSION="^2.6.2"
        - PECL_INSTALL_APCU='apcu-4.0.8'
</xhtml:code>
</xhtml:pre>
<xhtml:p>Note that in the second entry, we specify specific v2 versions
of zend-eventmanager and zend-servicemanager to use.</xhtml:p>
<xhtml:p>Later, in our <xhtml:code>before_install</xhtml:code> section, we do the
following:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-yaml">before_install:
  - if [[ $SERVICE_MANAGER_VERSION != '' ]]; then composer require --no-update "zendframework/zend-servicemanager:$SERVICE_MANAGER_VERSION" ; fi
  - if [[ $SERVICE_MANAGER_VERSION == '' ]]; then composer require --no-update "zendframework/zend-servicemanager:^3.0.3" ; fi
  - if [[ $SERVICE_MANAGER_VERSION == '' ]]; then composer remove --dev --no-update zendframework/zend-session ; fi
  - if [[ $EVENT_MANAGER_VERSION != '' ]]; then composer require --no-update "zendframework/zend-eventmanager:$EVENT_MANAGER_VERSION" ; fi
  - if [[ $EVENT_MANAGER_VERSION == '' ]]; then composer require --no-update "zendframework/zend-eventmanager:^3.0" ; fi
</xhtml:code>
</xhtml:pre>
<xhtml:p>Essentially, we have two builds. One against the v2 components,
and one against the v3 components; the items above force one or the
other for the particular build. This allows us to verify that the
code works against both versions, and that any later changes
require that both versions continue to work.</xhtml:p>
<xhtml:p>What about that line to <xhtml:em>remove</xhtml:em> dependencies,
though?</xhtml:p>
<xhtml:p>The tricky part of migration has been unravelling dependencies.
If a dependency of a component being migrated <xhtml:em>also</xhtml:em> depends
on one of the updated components, we have to wait until the
dependency is migrated. Or do we?</xhtml:p>
<xhtml:p>In many cases, these dependencies are marked as
<xhtml:em>suggestions</xhtml:em>, and as <xhtml:em>development</xhtml:em> dependencies
only; they are not <xhtml:em>hard requirements</xhtml:em> of the component.
Realizing this, we discovered the following workflow:</xhtml:p>
<xhtml:ul>
<xhtml:li>We can remove dependencies when testing against v3 components
<xhtml:strong>if</xhtml:strong>:
<xhtml:ul>
<xhtml:li>the dependency is not yet migrated</xhtml:li>
<xhtml:li>the dependency is <xhtml:em>optional</xhtml:em> (only listed in
<xhtml:code>require-dev</xhtml:code> and/or <xhtml:code>suggest</xhtml:code>)</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>We can update the tests to skip tests that depend on those
particular components <xhtml:em>if classes or interfaces from that
component are missing</xhtml:em>.</xhtml:li>
</xhtml:ul>
<xhtml:p>This means that we're testing specifically that the
<xhtml:em>current</xhtml:em> component is forwards-compatible with the new
versions. Later, once those dependencies are updated, we can
re-enable those tests.</xhtml:p>
<xhtml:p>Finally, a contributor wrote a trait that we can compose in
plugin manager tests to verify that a plugin manager implementation
is both v2 and v3 compatible. By adding these to components, we're
able to verify with much more confidence that the code works on
both versions.</xhtml:p>
<xhtml:p>With these findings and tools in place, we were able to complete
migration of 16 components these past two weeks, tagging each with
new stable versions! These include:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-math/releases/tag/release-2.6.0">
zend-math 2.6.0</xhtml:a> (technically, this one <xhtml:em>removes</xhtml:em> the
dependency on zend-servicemanager, as it was an internal detail,
and not necessary)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-serializer/releases/tag/release-2.6.0">
zend-serializer 2.6.0</xhtml:a> / <xhtml:a href="https://github.com/zendframework/zend-serializer/releases/tag/release-2.6.1">
zend-serializer 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-tag/releases/tag/release-2.6.0">
zend-tag 2.6.0</xhtml:a> / <xhtml:a href="https://github.com/zendframework/zend-tag/releases/tag/release-2.6.1">
zend-tag 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-permissions-acl/releases/tag/release-2.6.0">
zend-permissions-acl 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-crypt/releases/tag/release-2.6.0">
zend-crypt 2.6.0</xhtml:a> (this one replaces zend-servicemanager with
container-interop)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-filter/releases/tag/release-2.6.0">
zend-filter 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-http/releases/tag/release-2.5.4">
zend-http 2.5.4</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-server/releases/tag/release-2.6.1">
zend-server 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-json/releases/tag/release-2.6.1">
zend-json 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-config/releases/tag/release-2.6.0">
zend-config 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-text/releases/tag/release-2.6.0">
zend-text 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-console/releases/tag/release-2.6.0">
zend-console 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/releases/tag/release-2.7.0">
zend-log 2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-i18n/releases/tag/release-2.6.0">
zend-i18n 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-feed/releases/tag/release-2.7.0">
zend-feed 2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-cache/releases/tag/release-2.6.0">
zend-cache 2.6.0</xhtml:a> / <xhtml:a href="https://github.com/zendframework/zend-cache/releases/tag/release-2.6.1">
zend-cache 2.6.1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>We've made every effort to ensure that these releases continue
to work with existing version 2 functionality; however,
occasionally, errors occur. If you notice such errors, please
report them as soon as you can, with as many details as you can, so
we can correct them. Additionally, please be aware that developers
are fellow human beings, and be respectful in your communication.
Nobody is intentionally trying to break your applications, and
contributors desire a smooth migration for you as well.</xhtml:p>
<xhtml:p>At this point, we're about half-done with the migrations, and of
the remaining half, around half have patches under review. If you
want to assist, please review the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
migrations page</xhtml:a> to see which patches are need review, and where
you might be able to help.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>As noted in <xhtml:a href="/blog/2016-01-28-zf3-biweekly-update.html">our last update</xhtml:a>,
<xhtml:a href="http://blog.hock.in/">Gary Hockin</xhtml:a> performed an
automated migration of our documentation from our reStructuredText
sources to per-component Markdown a few weeks ago, and opened
issues against each component to guide review of the documentation
before publication. We also mentioned a plan to host documentation
via <xhtml:a href="https://pages.github.com/">GitHub Pages</xhtml:a>.</xhtml:p>
<xhtml:p>As part of the migration process, we decided to review and ready
documentation for publication for any component getting a new minor
release. This has resulted in new documentation for the following
13 components!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-servicemanager/">zend-servicemanager</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-stdlib/">zend-stdlib</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-hydrator/">zend-hydrator</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-tag/">zend-tag</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-permissions-acl/">zend-permissions-acl</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-filter/">zend-filter</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-config/">zend-config</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-text/">zend-text</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-console/">zend-console</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-log/">zend-log</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-i18n/">zend-i18n</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-feed/">zend-feed</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-cache/">zend-cache</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>We're very excited about the new documentation, particularly as
it's mobile-friendly, and has in-site search!</xhtml:p>
<xhtml:h2>Pull request and issue activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+is:merged+org:zendframework+closed:%222016-01-28+..+2016-02-12%22+">
merged around 60 pull requests</xhtml:a>, <xhtml:a href="https://github.com/issues?page=2&amp;q=is:issue+org:zendframework+closed:%222016-01-28+..+2016-02-12%22&amp;utf8=%E2%9C%93">
closing over 100 issues</xhtml:a>. (links require a GitHub account).
Activity has been particularly high on documentation issues.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following is a list of component releases since the last
update, minus those noted in the migration section already. While
not all releases are related to ZF3 specifically, this list is
intended to detail activity within the organization.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/releases/tag/1.1.1">
zend-expressive-twigrenderer 1.1.1</xhtml:a> updates the
<xhtml:code>TwigExtension</xhtml:code> to implement
<xhtml:code>Twig_Extension_GlobalsInterface</xhtml:code>, to ensure it is
forwards-compatible with Twig v2.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.5">
zend-servicemanager 2.7.5</xhtml:a> fixes the behavior of the
<xhtml:code>InvokableFactory</xhtml:code> for situations when options are
passed via a plugin manager, and provides tests for validating
plugin managers are ready for both v2 and v3.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.3">
zend-servicemanager 3.0.3</xhtml:a> provides a number of fixes:
<xhtml:ul>
<xhtml:li>cyclical alias detection and reporting.</xhtml:li>
<xhtml:li>skips alias resolution if no aliases are present.</xhtml:li>
<xhtml:li>adds tests to verify plugin managers are v3-ready.</xhtml:li>
<xhtml:li>publishes documentation to GitHub Pages.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/ZendXml/releases/tag/release-1.0.2">
ZendXml 1.0.2</xhtml:a> updates the PHP dependency to <xhtml:code>^5.3.3 ||
^7.0</xhtml:code>, allowing it to work with any ZF component, in any
supported PHP version. It also expands the test matrix to include
PHP 7.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-i18n/releases/tag/release-2.6.0">
zend-i18n 2.6.0</xhtml:a>, while previously noted, also contained the
following changes:
<xhtml:ul>
<xhtml:li>adds support for <xhtml:code>NumberFormatter</xhtml:code> text attributes
when using the <xhtml:code>NumberFormat</xhtml:code> view helper.</xhtml:li>
<xhtml:li>provides updated postal code verifications for Mauritius and
Serbia.</xhtml:li>
<xhtml:li>allows multiple invocations of the <xhtml:code>DateTime</xhtml:code>
validator with different sets of input.</xhtml:li>
<xhtml:li>provides null checks on provided message strings.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>Also, as noted above, you can assist with <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
refactoring components to support v2 + v3 of
zend-servicemanager</xhtml:a>.</xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases these past two weeks!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-01-28]]></title>
    <published>2016-01-28T16:45:00+00:00</published>
    <updated>2016-01-28T16:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-28-zf3-biweekly-update.html"/>
    <id>http://framework.zend.com/blog/2016-01-28-zf3-biweekly-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of bi-weekly posts
on ZF3 development status.</xhtml:p>
<xhtml:p>The highlights:</xhtml:p>
<xhtml:ul>
<xhtml:li>&gt; 70 pull requests merged</xhtml:li>
<xhtml:li>2 components updated to zend-servicemanager/zend-eventmanager
v3 changes</xhtml:li>
<xhtml:li>23 releases of components, <xhtml:strong>including <xhtml:a href="/blog/2016-01-28-expressive-1.0-stable.html">Expressive
1.0</xhtml:a></xhtml:strong>, and new maintenance releases of Apigility and the
ZF2 package.</xhtml:li>
<xhtml:li>Kickstarting of the documentation migration</xhtml:li>
</xhtml:ul>
<xhtml:h2>Expressive 1.0!</xhtml:h2>
<xhtml:p>Following <xhtml:a href="/blog/2016-01-19-expressive-rc6-rc7.html">two</xhtml:a> <xhtml:a href="/blog/2016-01-21-expressive-rc7-rc8.html">final</xhtml:a> release
candidates, and after three months in release candidate status,
we've finally tagged <xhtml:a href="/blog/2016-01-28-expressive-1.0-stable.html">Expressive 1.0
stable</xhtml:a>! Among other things, we've created a <xhtml:a href="https://zendframework.github.io/zend-expressive/">dedicated
documentation site</xhtml:a>, which will update automatically as features
are merged to the project.</xhtml:p>
<xhtml:p>We feel Expressive is the true cornerstone of the ZF3
initiative, and we look forward to seeing the middleware-based
projects people develop using it!</xhtml:p>
<xhtml:h2>ZF2 and Apigility</xhtml:h2>
<xhtml:p>We noted that the <xhtml:code>zendframework/zendframework</xhtml:code>
package, which since 2.5.0 has been a metapackage aggregating the
various independent components, was using <xhtml:code>~2.5.0</xhtml:code> for
component constraints. This is problematic, as many components have
2.6 and even 2.7 versions, and some of those contain security
fixes. To fix this, we released version 2.5.3, which modifies the
component constraints to <xhtml:code>^2.5</xhtml:code>, allowing them to get
the latest 2.X series of any given component.</xhtml:p>
<xhtml:p>We also released version 1.3.2 of Apigility, to bring in some
changes merged many months ago to fix things like DB Autodiscovery,
as well as to pick up the 2.5.3 version of ZF2.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p><xhtml:a href="http://blog.hock.in">Gary Hockin</xhtml:a> generously donated
some time and wrote scripts to automate translation of individual
component documentation from the ZF2 reStructured Text sources to
markdown, and submitted pull requests across all components, which
we have now merged. These are incomplete; some syntax cannot be
translated correctly, imports within files could not be automated,
etc.</xhtml:p>
<xhtml:p>If you want to assist, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
labeled all documentation tasks</xhtml:a> (link requires github login);
feel free to jump in on the effort!</xhtml:p>
<xhtml:p>We're also working on a plan to host the documentation via
<xhtml:a href="https://pages.github.com">GitHub Pages</xhtml:a>, to allow
constant, up-to-date documentation, based on the work we did for
the Expressive documentation. Most of the tooling for this is now
<xhtml:a href="https://github.com/zendframework/zf-mkdoc-theme">created</xhtml:a>, and
we will be able to start pushing it out to components once their
documentation is ready to publish.</xhtml:p>
<xhtml:h2>Pull request activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+org:zendframework+is:merged+closed:%222016-01-14+..+2016-01-28%22">
merged over 70 pull requests</xhtml:a> (link requires a GitHub account).
Activity has been particularly high on Expressive and documentation
issues.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following is a list of component releasessince the last
update, minus a number of Expressive releases leading to the stable
release. While not all releases are related to ZF3 specifically,
this list is intended to detail activity within the
organization.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-view/releases/tag/release-2.5.3">
zend-view 2.5.3</xhtml:a> adds support for the <xhtml:code>itemprop</xhtml:code> HTML
attribute in the <xhtml:code>headLink()</xhtml:code> view helper, and updates
<xhtml:code>PhpRenderer::render()</xhtml:code> to no longer lazy-instantiate a
<xhtml:code>FilterChain</xhtml:code> if none is already present.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.4">
zend-servicemanager 2.7.4</xhtml:a> fixed an issue with resolving aliases
of aliases due to canonicalization changes in previous
versions.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.1">
zend-servicemanager 3.0.1</xhtml:a> removes the dependency on zend-stdlib
by inlining the <xhtml:code>ArrayUtils::merge()</xhtml:code> routine into the
<xhtml:code>Config</xhtml:code> class.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/releases/tag/1.1.0">
zend-expressive-twigrenderer 1.1.0</xhtml:a> adds several new features:
<xhtml:ul>
<xhtml:li><xhtml:code>url</xhtml:code> and <xhtml:code>absolute_url</xhtml:code> template
functions for generating URL paths and absolute URIs.</xhtml:li>
<xhtml:li>New "globals" configuration for specifying variables to make
available in all templates.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.2">
zend-servicemanager 3.0.2</xhtml:a> fixes an issue whereby the creation
context was not being passed correctly to abstract factories from
plugin managers, and provides a performance boost for alias
resolution.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-code/releases/tag/release-3.0.1">
zend-code 3.0.1</xhtml:a> moves the phpcs dependency to the require-dev
section, and ensures that the method name is required when adding a
method to the class generator.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/releases/tag/1.4.1">
zend-apigility-admin 1.4.1</xhtml:a> fixes an issue in the
<xhtml:code>RpcServiceModel</xhtml:code> to ensure that a correct pattern is
generated when fetching a service by name.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin-ui/releases/tag/1.2.2">
zend-apigility-admin-ui 1.2.2</xhtml:a> fixes a number of issues
discovered, including:
<xhtml:ul>
<xhtml:li>DB Autodiscovery was failing due to inability to properly
select the DB adapter name.</xhtml:li>
<xhtml:li>Custom authentication adapters are now displayed.</xhtml:li>
<xhtml:li>The regex for validating custom content-types was fixed to
ensure it only allows valid MIME type specifications.</xhtml:li>
<xhtml:li>Fixes validation for REST and RPC service names, raising a
warning on invalid input.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>ZF3 Refactors</xhtml:h2>
<xhtml:p>Our refactoring effort has slowed due to our focus on getting
Expressive stabilized, though we're starting to get a number of
community contributions to aid the effort.</xhtml:p>
<xhtml:p>If you wish to assist, please read the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
ZF3 ServiceManager refactoring guide</xhtml:a>; be sure to edit the wiki
to indicate when you're working on a component, as well as to
indicate the relevant pull request.</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>As noted above, help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>Also, as noted above, you can assist with <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
refactoring components to support v2 + v3 of
zend-servicemanager</xhtml:a>.</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases these past two weeks!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Expressive 1.0.0 STABLE Released!]]></title>
    <published>2016-01-28T16:00:00+00:00</published>
    <updated>2016-01-28T16:00:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-28-expressive-1.0-stable.html"/>
    <id>http://framework.zend.com/blog/2016-01-28-expressive-1.0-stable.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of <xhtml:a href="https://zendframework.github.io/zend-expressive/">Expressive</xhtml:a>
1.0.0 STABLE!</xhtml:p>
<xhtml:p>You can install it using <xhtml:a href="https://getcomposer.org">Composer</xhtml:a>, via the
<xhtml:code>create-project</xhtml:code> command:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer create-project zendframework/zend-expressive-skeleton expressive
</xhtml:code>
</xhtml:pre>
<xhtml:p>If you were using a release candidate, you can update your
existing applications using:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer require "zendframework/zend-expressive:^1.0"
</xhtml:code>
</xhtml:pre>
<xhtml:h2>What's new in the stable version?</xhtml:h2>
<xhtml:p>Nothing!</xhtml:p>
<xhtml:p>Well, not "nothing". Since last week, we merged a few
documentation fixes, but, more importantly, finalized our
documentation. This included a few changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>Some re-organization, to better categorize the documentation
hierarchy.</xhtml:li>
<xhtml:li>Switching from <xhtml:a href="http://bookdown.io">bookdown</xhtml:a> to
<xhtml:a href="http://www.mkdocs.org">MkDocs</xhtml:a> as our build engine of
choice. We'd already been using MkDocs to publish on <xhtml:a href="http://rtfd.org">ReadTheDocs</xhtml:a>, so this wasn't a huge change.
The choice was made based on stability, maturity, and ecosystem;
MkDocs has been around for quite some time, and enabled us to
accomplish a number of ideas quite quickly.</xhtml:li>
<xhtml:li>Automated publishing to <xhtml:a href="https://pages.github.com">GitHub Pages</xhtml:a>, via Travis-CI. Any
time we push to our master branch, the documentation will be
updated.</xhtml:li>
</xhtml:ul>
<xhtml:p>We're quite proud of <xhtml:a href="https://zendframework.github.io/zend-expressive/">the results</xhtml:a>,
and hope that the new documentation serves our users well.</xhtml:p>
<xhtml:h2>What's to look forward to?</xhtml:h2>
<xhtml:p>Shipping a stable version means that you can depend on the API
going forward. As such, we're messaging that it's production ready;
start building and shipping your applications on it today!</xhtml:p>
<xhtml:p>For the next feature version, we already have a few things
scheduled:</xhtml:p>
<xhtml:ul>
<xhtml:li>Removal of the deprecated
<xhtml:code>pre_routing</xhtml:code>/<xhtml:code>post_routing</xhtml:code> configuration
support, as messaged in the <xhtml:a href="http://zendframework.github.io/zend-expressive/reference/migration/rc-to-v1/#timeline-for-migration">
migration documentation</xhtml:a>.</xhtml:li>
<xhtml:li>Providing <xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/pull/31">
modular functionality</xhtml:a> by default (with opt-out). This will
likely include also providing a solution similar to the <xhtml:a href="https://github.com/zendframework/zend-component-installer">component
installer</xhtml:a> to aid with auto-registering installed packages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Kudos</xhtml:h2>
<xhtml:p><xhtml:a href="https://github.com/zendframework/zend-expressive-router/graphs/contributors">
We</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-aurarouter/graphs/contributors">
wish</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-fastroute/graphs/contributors">
to</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/graphs/contributors">
thank</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-template/graphs/contributors">
everyone</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-platesrenderer/graphs/contributors">
who</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/graphs/contributors">
contributed</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-zendviewrenderer/graphs/contributors">
to</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-helpers/graphs/contributors">
the</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive/graphs/contributors">
Expressive</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/graphs/contributors">
project</xhtml:a>! (That previous sentence is a link for every one of our
11 Expressive repositories!)</xhtml:p>
<xhtml:p>Additionally, we thank everyone who has provided us feedback ‚Äî
whether in the form of questions, bug reports, or suggestions ‚Äî
these past few months; without the critical feedback, the project
would not be where it is today.</xhtml:p>
<xhtml:p>A few folks stand out:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://www.zimuel.it">Enrico Zimuel</xhtml:a>, who started
it all!</xhtml:li>
<xhtml:li><xhtml:a href="https://xtreamwayz.com">Geert Eltink</xhtml:a>, who did the
hard work of making the installer work!</xhtml:li>
<xhtml:li><xhtml:a href="http://harikt.com">Hari K T</xhtml:a>, who nudged us to
split the repository into discrete, single-purpose projects!</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/michaelmoussa">Michael Moussa</xhtml:a>,
who suggested the idea that middleware specifications could be
pipelines themselves ‚Äî and then implemented the solution!</xhtml:li>
</xhtml:ul>
<xhtml:h2>Write your next project Expressively!</xhtml:h2>
<xhtml:p>Write your PSR-7 middleware today! Consult <xhtml:a href="https://zendframework.github.io/zend-expressive/">the
documentation</xhtml:a> to get started!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Expressive 1.0.0RC7/RC8 Released!]]></title>
    <published>2016-01-21T16:35:00+00:00</published>
    <updated>2016-01-21T16:35:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-21-expressive-rc7-rc8.html"/>
    <id>http://framework.zend.com/blog/2016-01-21-expressive-rc7-rc8.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Expressive 1.0.0rc7 and the Expressive
Skeleton and Installer 1.0.0rc8!</xhtml:p>
<xhtml:p>You can install the latest versions using <xhtml:a href="https://getcomposer.org">Composer</xhtml:a>, via the
<xhtml:code>create-project</xhtml:code> command:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer create-project -s rc zendframework/zend-expressive-skeleton expressive
</xhtml:code>
</xhtml:pre>
<xhtml:p>You can update your existing applications using:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer update
</xhtml:code>
</xhtml:pre>
<xhtml:p>This release candidate contains bug fixes for dispatching error
middleware pipelines. Additionally, we've released a new version of
our Twig integration, and detail those changes below.</xhtml:p>
<xhtml:h2>Changes in zend-expressive RC7</xhtml:h2>
<xhtml:p>RC6 updated the configuration for the middleware pipeline to
make it a single pipeline. We recommended that developers make use
of our middleware grouping feature, however, which allows you to
specify not just a single, named middleware service, but an
<xhtml:em>array</xhtml:em> of named middleware services. This feature is great
for grouping middleware based on when it should execute, and makes
ordering related middleware simpler.</xhtml:p>
<xhtml:p>Per our suggested, default configuration:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">use Zend\Expressive\Container\ApplicationFactory;
use Zend\Expressive\Helper;

return [
    'dependencies' =&gt; [
        'factories' =&gt; [
            Helper\ServerUrlMiddleware::class =&gt; Helper\ServerUrlMiddlewareFactory::class,
            Helper\UrlHelperMiddleware::class =&gt; Helper\UrlHelperMiddlewareFactory::class,
        ],
    ],
    // This can be used to seed pre- and/or post-routing middleware
    'middleware_pipeline' =&gt; [
        // An array of middleware to register. Each item is of the following
        // specification:
        //
        // [
        //  Required:
        //     'middleware' =&gt; 'Name or array of names of middleware services and/or callables',
        //  Optional:
        //     'path'     =&gt; '/path/to/match', // string; literal path prefix to match
        //                                     // middleware will not execute
        //                                     // if path does not match!
        //     'error'    =&gt; true, // boolean; true for error middleware
        //     'priority' =&gt; 1, // int; higher values == register early;
        //                      // lower/negative == register last;
        //                      // default is 1, if none is provided.
        // ],
        //
        // While the ApplicationFactory ignores the keys associated with
        // specifications, they can be used to allow merging related values
        // defined in multiple configuration files/locations. This file defines
        // some conventional keys for middleware to execute early, routing
        // middleware, and error middleware.
        'always' =&gt; [
            'middleware' =&gt; [
                // Add more middleware here that you want to execute on
                // every request:
                // - bootstrapping
                // - pre-conditions
                // - modifications to outgoing responses
                Helper\ServerUrlMiddleware::class,
            ],
            'priority' =&gt; 10000,
        ],

        'routing' =&gt; [
            'middleware' =&gt; [
                ApplicationFactory::ROUTING_MIDDLEWARE,
                Helper\UrlHelperMiddleware::class,
                // Add more middleware here that needs to introspect the routing
                // results; this might include:
                // - route-based authentication
                // - route-based validation
                // - etc.
                ApplicationFactory::DISPATCH_MIDDLEWARE,
            ],
            'priority' =&gt; 1,
        ],

        'error' =&gt; [
            'middleware' =&gt; [
                // Add error middleware here.
            ],
            'priority' =&gt; -10000,
            'error' =&gt; true,
        ],
    ],
];
</xhtml:code>
</xhtml:pre>
<xhtml:p>Unfortunately, for <xhtml:em>error middleware</xhtml:em>, this was not
working correctly.</xhtml:p>
<xhtml:p>Internally, when we encounter an array of middleware, we create
a <xhtml:code>Zend\Stratigility\MiddlewarePipe</xhtml:code> instance, and pipe
each middleware service to it in order. The problem is that
<xhtml:code>MiddlewarePipe</xhtml:code> does not implement the error middleware
signature ‚Äî which meant that error middleware pipelines were
completely skipped!</xhtml:p>
<xhtml:p>To make this work, we introduced a proxy class,
<xhtml:code>Zend\Expressive\ErrorMiddlewarePipe</xhtml:code>, which wraps a
<xhtml:code>MiddlewarePipe</xhtml:code>, and exposes the error middleware
signature. This is now used internally whenever an error middleware
pipeline needs to be created.</xhtml:p>
<xhtml:h2>Changes in zend-expressive-skeleton RC8</xhtml:h2>
<xhtml:p>When we created the new default middleware pipeline
configuration for RC6/RC7, we forgot one important detail: the
<xhtml:code>error</xhtml:code> middleware group was missing its
<xhtml:code>error</xhtml:code> key, meaning it wasn't attempting to create
error middleware at all! We've fixed this in RC8.</xhtml:p>
<xhtml:p>If you upgraded to RC6/RC7 earlier this week, make sure you add
that <xhtml:code>error</xhtml:code> key, as detailed in the above example.</xhtml:p>
<xhtml:h2>Twig integration updates</xhtml:h2>
<xhtml:p>Today we released <xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/releases/tag/1.1.0">
version 1.0.1 of our Twig integration</xhtml:a>. This includes a few new
features:</xhtml:p>
<xhtml:ul>
<xhtml:li>It adds a dependency on zend-expressive-helpers and, if the
<xhtml:code>UrlHelper</xhtml:code> and <xhtml:code>ServerUrlHelper</xhtml:code> services
are registered, makes new <xhtml:code>url</xhtml:code> and
<xhtml:code>absolute_url</xhtml:code> template functions available.</xhtml:li>
<xhtml:li>It adds a new "globals" configuration sub-section for
registering variables to pass to all templates.</xhtml:li>
</xhtml:ul>
<xhtml:p>You can read more in the <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/template/twig/">Twig
integration documentation</xhtml:a>.</xhtml:p>
<xhtml:p>Many thanks to <xhtml:a href="https://xtreamwayz.com">Geert Eltink</xhtml:a>
for these new features!</xhtml:p>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>Code is stabilizing, and we're seeing fewer issues hitting our
issue tracker. We hope that in a week or two we can release a
stable version.</xhtml:p>
<xhtml:p>If you are testing Expressive ‚Äî whether for the first time, or
updating an existing application ‚Äî please help us prepare it for
general availability!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
