<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
  <channel>
    <title>Author: Matthew Weier O'Phinney - ZF Blog</title>
    <description>Author: Matthew Weier O'Phinney - ZF Blog</description>
    <pubDate>Fri, 07 Mar 2014 17:50:00 +0000</pubDate>
    <generator>Zend_Feed_Writer 2 (http://framework.zend.com)</generator>
    <link>http://framework.zend.com/blog/author/matthew.html</link>
    <atom:link rel="self" type="application/rss+xml" href="http://framework.zend.com/blog/author/matthew-rss.xml"/>
    <item>
      <title>Zend Framework 1.12.5 Released!</title>
      <pubDate>Fri, 07 Mar 2014 17:50:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-1-12-5-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-1-12-5-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework 1.12.5!
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This release fixes PHP 5.2 support for the 1.12 series. If you use PHP 5.2 
    with Zend Framework 1.12, we encourage you to upgrade immediately.
</p><h2>5.2 support</h2>

<p>
    <a href="/blog/zend-framework-1-12-4-2-1-6-and-2-2-6-released.html">Yesterday's 1.12.4 release</a>
    provided several security fixes around XML eXternal Entity and XML Entity Expansion attack
    vectors. Unfortunately, we had not reviewed our patch to consider PHP 5.2 support, and the
    code contained PHP closures -- which have only been available since PHP 5.3.
</p>

<p>
    The code in the <code>Zend\Xml</code> component was updated to remove the closures, and
    tests for all affected components were run to ensure they worked across PHP versions from
    5.2 - 5.5.
</p>

<h2>Thank You!</h2>

<p>
    A big thank you to those contributors who spotted the errors and provided the 
    initial fixes, particularly Martin Hujer and Frank Bruckner.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 1.12.4, 2.1.6, and 2.2.6 Released!</title>
      <pubDate>Thu, 06 Mar 2014 23:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-1-12-4-2-1-6-and-2-2-6-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-1-12-4-2-1-6-and-2-2-6-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of:
</p>

<ul>
    <li>Zend Framework <strong>1.12.4</strong></li>
    <li>Zend Framework <strong>2.1.6</strong></li>
    <li>Zend Framework <strong>2.2.6</strong></li>
</ul>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    While these are scheduled maintenance releases, they also contain important security
    fixes; we strongly encourage users to upgrade.
</p><h2>Security Fixes</h2>

<p>
    Two new security advisories have been made:
</p>

<ul>
    <li><a href="/security/advisory/ZF2014-01">ZF2014-01</a>, which mitigates
        XML eXternal Entity and XML Entity Expansion vectors in a variety of
        components. While we had taken measures two years ago to mitigate
        these issues, a researcher discovered several components that remained
        vulnerable.
    </li>

    <li><a href="/security/advisory/ZF2014-02">ZF2014-02</a>, which mitigates
        an issue in our OpenID consumers whereby a malicious Identity Provider
        could be used to spoof the identity of other providers.
    </li>
</ul>

<p>
    For more information, follow the links above; if you use any of the components
    affected, please upgrade as soon as possible.
</p>

<h2>1.12.4</h2>

<p>
    This is the first maintenance release in almost a year on the 1.12 series, and
    contains fixes too numerous to list. Among some of the more important ones,
    however:
</p>

<ul>
    <li>The testing infrastructure has been upgraded to PHPUnit 3.7, making it far simpler for contributors to test changes.</li>
    <li><a href="https://github.com/zendframework/zf1/pull/221">#221</a> removes the TinySrc view helper, as the TinySrc service no longer exists.</li>
    <li><a href="https://github.com/zendframework/zf1/pull/222">#222</a> removes the InfoCard component, as the CardSpace service no longer exists.</li>
    <li><a href="https://github.com/zendframework/zf1/pull/271">#271</a> removes the Nirvanix component, as the Nirvanix service shut down in October 2013.</li>
</ul>

<p>
    Many thanks to all the contributors who helped polish ZF1, including both Frank 
    Bruckner and Adam Lundrigan, who provided a ton of patches and feedback, and
    to Rob Allen, our release manager, for shepherding in contributions!
</p>

<h2>2.1.6</h2>

<p>
    <strong>2.1.6</strong> is a security release only, and issued to provide
    fixes for <a href="/security/advisory/ZF2014-01">ZF2014-01</a>.
</p>

<h2>2.2.6</h2>

<p>
    <strong>2.2.6</strong> is both a security and maintenance release. It
    addresses specifically <a href="/security/advisory/ZF2014-01">ZF2014-01</a>.
    Additionally, more than 100 patches were contributed to this release.
</p>

<p>
    For the complete list of changes, <a href="/changelog/2.2.6">read the changelog</a>.
</p>

<h2>ZendXml</h2>

<p>
    We have released a new component, <a href="https://github.com/zendframework/ZendXml">ZendXml</a>,
    to help PHP developers mitigate XXE and XEE vectors in their own code. We highly
    recommend using it if you ware working with XML. It is available via Composer, as well
    as via <a href="https://packages.zendframework.com/">our packages site</a>.
</p>

<h2>Component Releases</h2>

<p>The following components were updated, to the versions specified, to mitigate security issues.</p>

<ul>
    <li>ZendOpenId, v2.0.2</li>
    <li>ZendRest, v2.0.2</li>
    <li>ZendService_Amazon, v2.0.3</li>
    <li>ZendService_Api, v1.0.0</li>
    <li>ZendService_Audioscrobbler, v2.0.2</li>
    <li>ZendService_Nirvanix, v2.0.2</li>
    <li>ZendService_SlideShare, v2.0.2</li>
    <li>ZendService_Technorati, v2.0.2</li>
    <li>ZendService_WindowsAzure, v2.0.2</li>
</ul>

<h2>Thank You!</h2>

<p>
    As always, I'd like to thank the many contributors who made these
    releases possible! The project is gaining in consistency and capabilities
    daily as a result of your efforts.
</p>

<h2>Roadmap</h2>

<p>
    We plan to ship version 2.3.0 sometime next week (week of 10 March 2014).
    We will likely adopt a semi-monthly maintenance release schedule
    thereafter.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Apigility 0.9.1 Released!</title>
      <pubDate>Sat, 01 Mar 2014 18:20:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/apigility-0-9-1-released.html</link>
      <guid>http://framework.zend.com/blog/apigility-0-9-1-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>Today, we're releasing version 0.9.1 of Apigility! You can grab and test it
using one of the following two methods:</p>
<ul>
    <li>Composer:
        <code>composer create-project zfcampus/zf-apigility-skeleton apigility 0.9.1</code>
    </li>
    <li>Manual download:
        <pre><code>
        wget https://github.com/zfcampus/zf-apigility-skeleton/releases/download/0.9.0/zf-apigility-skeleton-0.9.1.zip
        unzip zf-apigility-skeleton-0.9.1.zip
        </code></pre>
    </li>
</ul>

<p>This release is a maintenance release, fixing two critical issues reported against 0.9.0</p><h2>Fixes</h2>

<ul>
    <li>
        <p><a href="https://github.com/zfcampus/zf-oauth2/issues/27">zfcampus/zfoauth2#27</a>
        reported an inability to save OAuth2 adapter details from the Apigility admin
        UI. These are now corrected.</p>
    </li>

    <li>
        <p><a href="https://groups.google.com/a/zend.com/d/msgid/apigility-users/b7723f69-e4cc-4619-84d8-c3dd8c1f93a5%40zend.com">A report on the apigility-users mailing
        list</a>
        indicated that authorizations performed against REST entities were not working
        correctly. This was due to an incomplete change from "resource" to "entity"
        (as noted in the 0.9.0 release notes); the situation is now corrected.</p>
    </li>
</ul>

<h2>Future</h2>

<p>
    At this point, we turn our attention to stabilizing Zend Framework 2.3.0, 
    on which Apigility will depend, due to features added to that upcoming
    version.
</p>

<p>
    Once Zend Framework 2.3.0 is released, we will begin the beta cycle for
    Apigility 1.0.0. During that timeframe, we will due some additional improvements
    to the UI, and work to ensure the engine is stable. Additionally, we will
    document the project, providing documentation for each module, as well as
    for how the modules work together as a whole. We hope to provide "recipes"
    for a number of common practices and development and deployment situations.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Apigility 0.9.0 Released!</title>
      <pubDate>Mon, 03 Mar 2014 18:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/apigility-0-9-0-released.html</link>
      <guid>http://framework.zend.com/blog/apigility-0-9-0-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>Today, we're releasing version 0.9.0 of Apigility! You can grab and test it
using one of the following two methods:</p>
<ul>
    <li>Composer:
        <code>composer create-project zfcampus/zf-apigility-skeleton apigility 0.9.0</code>
    </li>
    <li>Manual download:
        <pre><code>
        wget https://github.com/zfcampus/zf-apigility-skeleton/releases/download/0.9.0/zf-apigility-skeleton-0.9.0.zip
        unzip zf-apigility-skeleton-0.9.0.zip
        </code></pre>
    </li>
</ul>

<p>This release brings in our last planned feature for the upcoming 1.0.0 stable release:
the ability to document your APIs, and then provide that documentation to your end-users!
</p><h2>Documentation</h2>

<p>
    An API is useless without documentation.
</p>

<p>
    The Apigility admin UI now allows you to capture narrative documentation 
    for your services, collections, entities, and operations. You can document
    what the request and response bodies should look like. You can document
    each field you configure.
</p>

<p>
    Apigility then merges this documentation with what it knows of your services:
    what Accept headers are allowed, what Content-Types are allowed, what response
    status codes may be expected, what fields are available, whether or not 
    authorization is required, and more. The admin UI provides a visualization of
    this information for you.
</p>

<p>
    We provide several more visualizations, too.  The 
    <kbd>zf-apigility-documentation</kbd> module is enabled now by default in 
    the <kbd>zf-apigility-skeleton</kbd>, providing both JSON and HTML 
    representations of the documentation at the URI 
    <kbd>/apigility/documentation</kbd> (the representation will depend on the 
    <kbd>Accept</kbd> header value you provide -- Apigility's own content 
    negotiation at work!).
</p>

<p>
    You can also opt in to the new <kbd>zf-apigility-documentation-swagger</kbd>
    module, which will allow you to either seed an existing <a href="https://github.com/wordnik/swagger-ui">Swagger UI</a>
    installation, or, if you visit the <kbd>/apigility/swagger</kbd> URI, provide
    the Swagger UI itself.
</p>

<p>
    To see what's possible, <a href="http://apigility.org/get-started-video.html">Introduction to Documentation</a> 
    video on the Apigility website!
</p>


<h4>Adding documentation to existing Apigility installs</h4>

<p>
    If you are already using Apigility, you will need to add the new modules to
    your application. Add the following dependencies to your <kbd>composer.json</kbd>:
</p>

<ul>
    <li><kbd>"zfcampus/zf-apigility-documentation": "~1.0-dev"</kbd> (necessary 
    for any documentation visualization, other than in the admin)</li>
    <li><kbd>"zfcampus/zf-apigility-documentation-swagger": "~1.0-dev"</kbd> (if 
    you want the Swagger UI)</li>
</ul>

<p>
    After running <kbd>composer update</kbd>, add the modules to your `config/application.config.php`:
</p>

<ul>
    <li><kbd>ZF\Apigility\Documentation</kbd></li>
    <li><kbd>ZF\Apigility\Documentation\Swagger</kbd></li>
</ul>

<h2>Changelog</h2>

<p>
    This release has been a little over two months in the making, and has a ton of changes.
    The following is a list of important changes for existing users.
</p>

<ul>
<li>
<p><strong>Changes minimum supported PHP version to 5.3.23</strong>, in line with the upcoming
  ZF 2.3.0. We still recommend <strong>5.4.8</strong> for serving the admin user interface.</p>
</li>
<li>
<p>New modules, <a href="https://github.com/zfcampus/zf-apigility-documentation">zf-apigility-documentation</a> and
  <a href="https://github.com/zfcampus/zf-apigility-documentation-swagger">zf-apigility-documentation-swagger</a>,
  providing documentation visualizations of APIs created with Apigility. The
  base module provides both JSON and HTML visualizations via the URI
  <code>/apigility/documentation</code>, based on the Accept header value present.
  zf-apigility-documentation-swagger provides an additional JSON visualization
  for the mediatype <code>application/vnd.swagger+json</code>, for seeding a <a href="https://github.com/wordnik/swagger-ui">Swagger
  UI</a> installation; additionally, it
  provides the Swagger UI via <code>/apigility/swagger</code>.</p>
</li>
</ul>
<p>zf-apigility-documentation is enabled by default in zf-apigility-skeleton;
  zf-apigility-documentation-swagger is an opt-in module.</p>
<ul>
<li>
<p><strong>The <code>/admin</code> and <code>/welcome</code> routes are now removed!</strong> The admin UI now uses
  <code>/apigility/ui</code>, and the welcome screen uses <code>/apigility/welcome</code>. New routes
  for documentation are also available, as detailed above.</p>
</li>
<li>
<p>A new module was created for Apigility-specific interfaces,
  <a href="https://github.com/zfcampus/zf-apigility-provider">zf-apigility-provider</a>.
  The primary use case is for composition in modules that may or may not be
  consumed by Apigility (e.g., a general-purpose module that could be composed
  into many projects). The only interface currently is
  <code>ZF\Apigility\Provider\ApigilityProviderInterface</code>, which replaces
  <code>Zend\Apigility\ApigilityModuleInterface</code> (and thus prevents the necessity of
  installing all Apigility modules just to implement the interface!).</p>
</li>
<li>
<p>A new module was introduced for handling development mode, 
  <a href="https://github.com/zfcampus/zf-development-mode">zf-development-mode</a>;
  this is a fork of <a href="https://github.com/19ft/NFDevelopmentMode">NFDevelopmentMode</a>,
  which was based off the equivalent functionality in zf-apigility-skeleton's
  <code>Application</code> module. We removed the functionality from the skeleton, and
  added a dependency on the new module.</p>
</li>
<li>
<p>zf-apigility-skeleton's layout was updated to match that of the admin UI.</p>
</li>
<li>
<p>zf-apigility-admin received numerous updates:</p>
<ul>
<li>
<p>Ability to add documentation of services, fields, and operations.</p>
</li>
<li>
<p>Ability to use <a href="http://www.mongodb.org/">MongoDB</a> when configuring an
  OAuth2 authentication adapter.</p>
</li>
<li>
<p>Ability to inspect, add, configure, and delete zf-content-negotiation
  selectors.</p>
</li>
<li>
<p>Links to HTML documentation of APIs managed by the Apigility instance
  (more on this below).</p>
</li>
<li>
<p>Ability to create and manipulate filter chains for each field in a
  service.</p>
</li>
<li>
<p>(Limited) detection of whether or not an opcode cache is enabled; if
  detected, a modal dialog will be presented to the end-user detailing how
  to disable it.</p>
</li>
<li>
<p>Completely overhauled and refactored admin UI application to ease
  maintenance and feature additions. The admin UI now uses
  <a href="http://bower.io">Bower</a> for managing UI asset dependencies, and
  <a href="http://gruntjs.com">Grunt</a> for building the UI distribution. We have
  dropped ng-route for the <a href="https://github.com/angular-ui/ui-router">angular-ui
  ui-router</a>, providing us with
  more flexibility in UI implementation and layout. All services,
  controllers, and directives have been moved into their own files.</p>
</li>
<li>
<p>Countless UI/UX improvements.</p>
</li>
</ul>
</li>
<li>
<p>zf-apigility-welcome has been updated to use the Apigility "Rocket ElePHPant"
  logo for the splash screen, and to provide buttons to the HTML and Swagger
  documentation, if the appropriate modules are available.</p>
</li>
<li>
<p><strong>zf-rest and zf-rpc now each store a <code>service_name</code> key in the configuration
  for each service.</strong> While efforts have been made to ensure existing
  configuration still works, we recommend adding this key to each service. The
  value should be the short name representation for the service, usually the
  name you provided when creating the service.</p>
</li>
<li>
<p><strong>All repositories have been updated to make a clean distinction between the
  terms "Entity", "Collection", and "Resource".</strong> An "Entity" is anything
  addressable via a URI containing a unique identifier. A "Collection" is any
  URI that returns a set of entities. A "Resource" refers to a URI that may
  return collections and/or entities. As such, we have several BC breaks:</p>
<ul>
<li>
<p>The event <code>renderResource</code> is now <code>renderEntity</code>.</p>
</li>
<li>
<p>The event <code>renderCollection.resource</code> is now <code>renderCollection.entity</code>.</p>
</li>
<li>
<p><code>ZF\Hal\Resource</code> was renamed to <code>ZF\Hal\Entity</code>.</p>
</li>
<li>
<p>The subkey <code>resource</code> in the zf-mvc-auth configuration is now <code>entity</code>.</p>
</li>
<li>
<p>The subkey <code>resource_http_methods</code> in zf-rest is now
  <code>entity_http_methods</code>.</p>
</li>
<li>
<p>The subkey <code>resource_class</code> in zf-rest is now <code>entity_class</code>.</p>
</li>
<li>
<p>The subkey <code>resource_identifier_name</code> in zf-rest is now
  <code>entity_identifier_name</code>. (This change only affects those who have been
  using latest master, but have not updated since late-January 2014.)</p>
</li>
<li>
<p>The subkey <code>identifier_name</code> in zf-apigility <code>db-connected</code> configuration
  is now <code>entity_identifier_name</code>;</p>
</li>
</ul>
</li>
<li>
<p>zf-hal now properly differentiates between the identifier used in the route
  definition, and the identifier used for the entity; this allows you to use one
  value on the uri -- e.g., <code>status_id</code> -- and another in your entity class --
  e.g., <code>id</code>. zf-hal will fallback to the <code>route_identifier_name</code> if no
  <code>entity_identifier_name</code> is present.</p>
</li>
<li>
<p>zf-apigility, when detecting an input filter is present, will pull values from
  the input filter, and not use any other values even if provided in the
  request. This prevents SQL errors due to unknown columns.</p>
</li>
</ul>
<p>Additionally, zf-apigility's assets were updated, and a Grunt + Bower
  toolchain provided for keeping them up-to-date.</p>
<ul>
<li>zf-rest, when detecting an input filter is present for the current request,
  will inject it into the <code>ResourceEvent</code>, allowing developers to retrieve it
  via <code>$this-&gt;getEvent()-&gt;getInputFilter()</code>. </li>
</ul>
<p>Additionally, support for <code>patchList</code> was added to the
  <code>AbstractResourceListener</code>.</p>
<ul>
<li>zf-api-problem was updated to match <a href="http://tools.ietf.org/html/draft-nottingham-http-problem-05">Problem
  API draft 5</a>.
  This has changed the internal structure and JSON representation of problem
  results. If you were manipulating <code>ApiProblem</code> objects directly previously,
  you may need to alter your code.</li>
</ul>

<h2>Future</h2>

<p>
    At this point, we turn our attention to stabilizing Zend Framework 2.3.0, 
    on which Apigility will depend, due to features added to that upcoming
    version.
</p>

<p>
    Once Zend Framework 2.3.0 is released, we will begin the beta cycle for
    Apigility 1.0.0. During that timeframe, we will due some additional improvements
    to the UI, and work to ensure the engine is stable. Additionally, we will
    document the project, providing documentation for each module, as well as
    for how the modules work together as a whole. We hope to provide "recipes"
    for a number of common practices and development and deployment situations.
</p>

<h4>Updates</h4>

<ul>
    <li>2014-03-03 12:00: Fixed zf-apigility-documentation to read zf-apigility-provider in fourth bullet-point of changelog.</li>
    <li>2014-03-01 12:20: Fixed <kbd>wget</kbd> command to reference correct download link.</li>
</ul>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Apigility 0.8.0 Released!</title>
      <pubDate>Sat, 21 Dec 2013 16:10:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/apigility-0-8-0-released.html</link>
      <guid>http://framework.zend.com/blog/apigility-0-8-0-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>Today, we're releasing version 0.8.0 of Apigility! You can grab and test it
using one of the following two methods:</p>
<ul>
<li>Composer:
    <code>composer create-project zfcampus/zf-apigility-skeleton apigility</code></li>
<li>Manual download:
<pre><code>
wget https://github.com/zfcampus/zf-apigility-skeleton/releases/download/0.8.0/zf-apigility-skeleton-0.8.0.zip
unzip zf-apigility-skeleton-0.8.0.zip</li>
</code></pre>
</ul>
<p>We never announced our 0.7.0 version (though we showed off the features at
several conferences this past month), so there's a ton to announce!</p><h2>Authentication and Authorization</h2>
<p>Authentication and Authorization were the number one requested feature after our
original release announcement at ZendCon 2013. We managed to get
this in place in time for ZendCon 2013 Europe, and the features include:</p>
<ul>
<li>Ability to use HTTP Basic or Digest authentication, or OAuth2.</li>
<li>Ability to create authorization rules per HTTP method, per service in your
  API.</li>
</ul>
<p>We are leveraging Zend Framework 2's <code>Zend\Authentication</code> library for HTTP
authentication, and Brent Shaffer's <a href="https://github.com/bshaffer/oauth2-server-php">oauth2-server-php</a>
library for OAuth2.</p>
<p>Apigility allows you to define one authentication scheme per application. You
can set the authentication details on the main dashboard, under the heading
"Authentication":</p>
<p style="text-align:center"><img style="border: 1px solid black" width="640" alt="Authentication choices" src="/images/ag/authentication-buttons.png"></p>
<p style="text-align:center"><img style="border: 1px solid black" width="640" alt="Authentication form" src="/images/ag/authentication-form.png"></p>
<p style="text-align:center"><img style="border: 1px solid black" width="640" alt="Authentication view" src="/images/ag/authentication-view.png"></p>
<p>To use HTTP Basic authentication, you will need to create a <code>htpasswd</code> file,
using Apache's <code>htpasswd</code> utility. When you add HTTP Basic authentication to
your application, you will specify the location of the <code>htpasswd</code> file.</p>
<p>For HTTP Digest authentication, you will need to create a file with lines in the
following format:</p>
<p><code>&lt;username&gt;:&lt;realm&gt;:&lt;credentials&gt;</code></p>
<p>The <code>credentials</code> field must be an MD5 hash of the password that will be
accepted. When adding the HTTP Digest authentication to your application, you
will specify the location of this file, and will also need to specify the
appropriate <code>realm</code>, <code>nonce\_timeout</code> (number of seconds the credentials remain
valid), and, optionally, a list of <code>digest_domains</code> (the domains for which the
same authentication information is valid).</p>
<p>To use OAuth2 authentication, you will need to setup a database, and add clients
and optionally users (users are only necessary if using the <code>password</code> grant
type). <a href="https://github.com/zfcampus/zf-oauth2">See the zf-oauth2 README</a> for
details on how to setup the database and seed it.</p>
<p>Once you have authentication setup, you can start setting up authorization
restrictions on your API. To do this, navigate to the "Authorization" menu item
in any API:</p>
<p style="text-align:center"><img style="border: 1px solid black" width="640" alt="Authorization" src="/images/ag/authorization.png"></p>
<p>By default, APIs created with Apigility are public. To require authorization on
specific services or specific HTTP methods of services, check the appropriate
boxes and save your changes. From that point forward, authentication will be
required for those actions!</p>
<p>For more information, <a href="http://bit.ly/ag-auth">view the demo video</a></p>
<h2>Cross Origin Resource Sharing</h2>
<p>In order to operate a web-based application that interact with your APIs, you
may need to investigate Cross Origin Resource Sharing (CORS). CORS describes
HTTP requests for HTTP resources made from a different domain than the resource
exists on. As an example, if your API is at <code>http://example.com/api/</code>, but you
want to request it from <code>http://my-uber-cool-app.com/</code>, CORS is in effect.</p>
<p>If a browser attempts to create an <code>XMLHttpRequest</code> to a different domain than
the current page, then it will detect a CORS request. At that point, the browser
will ask the server with the resource if the request is allowed; if the
originating server does not reply with the appropriate headers, the browser will
not submit the original request, and the <code>XMLHttpRequest</code> will fail.</p>
<p>Apigility does not deal with CORS by default, but the 0.8.0 release includes
changes that ensure that CORS requests <em>can</em> be honored if you are using a CORS
plugin. We have tested against the <a href="https://github.com/zf-fr/zfr-cors">ZfrCors ZF2
module</a>, and it works seamlessly with
Apigility at this point.</p>
<p>We highly recommend the combination of Apigility and ZfrCors when building
web-based JavaScript applications that will operate on separate domains from
your APIs.</p>
<h2>Validation</h2>
<p>Another aspect of API security is validating the incoming input. Ideally, you
should reject anything that does not validate outright, and as early as
possible.</p>
<p>0.8.0 adds a new module,
<a href="https://github.com/zfcampus/zf-content-validation">zf-content-validation</a>,
which provides a validation engine based on Zend Framework's <code>InputFilter</code>
component. This component, when a request method that contains incoming data
occurs, checks to see if the matched service has a corresponding input filter,
and, if so, attempts to validate the incoming data against it. If the validation
fails, an error response is immediately returned.</p>
<p>In the Apigility Admin UI, each service now has an "Inputs" tab that allows you
to define the input filter. In this tab, you define inputs, which correspond to
each field of data you will be expecting. For each input, you can define one or
more validators, along with any configuration you want for each. In this case, a
picture is probably more sufficient:</p>
<p style="text-align:center"><img style="border: 1px solid black" width="640" alt="Validation" src="/images/ag/inputfilter.png"></p>
<p>For more information, <a href="http://bit.ly/ag-validation">view the demo video</a>.</p>
<h2>Future</h2>
<p>At this point, we're wrapping up the featureset for a stable version of
Apigility. The last milestones we have include:</p>
<ul>
<li>a module for generating API documentation. At this time, we are favoring <a href="http://apiblueprint.org/">API
  Blueprint</a> as the markup is trivial to generate from
  our configuration, and, being markdown-derived, relatively easy to edit and
  expand once the initial generation is complete.</li>
<li>some cleanup of the UI, including some long-overdue refactoring and formalized
  testing.</li>
<li>documentation of the various components, as well as tutorials on how they all
  fit together.</li>
</ul>
<p>We hope to complete the API documentation milestone in the first weeks of 2014.
At that point, we will start the beta release cycle, spending that time to do
the UI refactoring and project documentation. Once those are complete, we'll
finally issue a stable release; we're aiming for late February 2014 at this
time.</p>

<h4>Updates</h4>

<ul>
    <li>2013-12-21 16:10 UTC: Fixed <code>wget</code> command and URI, per reports of errors in comments.</li>
</ul>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.2.5 Released!</title>
      <pubDate>Thu, 31 Oct 2013 19:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-2-5-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-2-5-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework 2.2.5! Packages and installation instructions are
    available at:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This release includes a security fix for <code>Zend\Http\PhpEnvironment\RemoteAddress</code>
    and <code>Zend\Session\Validator\RemoteAddr</code>; if you use either of these classes,
    we urge you to upgrade to 2.2.5 immediately.
</p>

<p>
    We've not had a release in a couple of months, due to an exciting development: Zend's
    Zend Framework team has announced an initial preview release of 
    <a href="http://apigility.org">Apigility</a>, an API builder and management tool, built
    on top of Zend Framework 2! If you are building APIs or plan to in the future, we
    encourage you to check out this tool and help drive it toward a stable release!
</p><h2>Security</h2>

<p>
    A developer reported a problem with how we were handling situations when
    <code>Zend\Http\PhpEnvironment\RemoteAddress</code> was configured to
    use proxies, had a list of trusted proxies, 
    <code>$_SERVER['REMOTE_ADDR']</code> was not in that list of trusted 
    proxies. Essentially, we were still consulting the <code>X-Forwarded-For</code>
    header in this situation, but should have been used the provided
    <code>$_SERVER['REMOTE_ADDR']</code>, according to the specification.
</p>

<p>
    2.2.5 fixes this situation. If you use that class, or 
    <code>Zend\Session\Validator\RemoteAddr</code>, you should upgrade immediately.
</p>

<p>
    For more details, visit the <a href="/security/advisory/ZF2013-04">ZF2013-04 security advisory</a>.
</p>

<h2>Changelog</h2>

<p>
    To see the full changelog, visit:
</p>

<ul>
    <li><a href="/changelog/2.2.5">http://framework.zend.com/changelog/2.2.5</a></li>
</ul>

<h2>Thank You!</h2>

<p>
    Thank you to everybody who has contributed to this release. With more than 
    70 issues resolved, it's one of the busiest and most robust releases on the 
    2.2 branch to-date.
</p>

<h2>Roadmap</h2>

<p>
    Maintenance releases happen (roughly) monthly on (approximately) the third 
    Wednesday. We will be gearing up for the next minor release, 2.3.0, soon.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.2.4 Released!</title>
      <pubDate>Mon, 26 Aug 2013 16:45:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-2-4-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-2-4-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework 2.2.4! Packages and installation instructions are
    available at:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This release fixes a regression found in the Form component released with version
    2.2.3; if you use that component, we urge you to upgrade to 2.2.4.
</p><h2>Regressions</h2>

<p>
    <a href="/blog/zend-framework-2-2-3-released.html">Version 2.2.3</a> introduced a
    regression in the Form component, as a side-effect of fixing another issue.
    The <code>preferFormInputFilter</code> flag was originally created to allow 
    developers to choose whether they wanted to prefer the input filter they
    explicitly composed in the form to have priority, or use the input filter 
    settings the form aggregated from default elements instead. Interestingly,
    the form component essentially enforced the latter situation (prefering what
    the form aggregated), making the flag have no semantic meaning.
</p>

<p>
    A side effect of this, however, led to a regression in the InputFilter 
    component. Starting sometime in the 2.2 series, the behavior of input
    merging was changed to merge the old input into the new. In 2.2.3, we
    corrected this behavior -- but it broke the default merging order in the
    Form component. On inspection, we discovered that the fix to the 
    InputFilter essentially gave semantic meaning back to the 
    <code>preferFormInputFilter</code> flag -- but that the default behavior -- 
    which was to prefer what the form aggregates -- was now flip-flopped.
</p>

<p>
    The fix in 2.2.4 is to enable the <code>preferFormInputFilter</code> flag
    by default, thus restoring the previous expected behavior. Additionally,
    we now provide the ability to set this flag via form options or the form
    factory.
</p>

<p>
    If you use the Form component, we urge you to upgrade to 2.2.4 immediately.
</p>

<h2>Changelog</h2>

<p>
    To see the full changelog, visit:
</p>

<ul>
    <li><a href="/changelog/2.2.4">http://framework.zend.com/changelog/2.2.4</a></li>
</ul>

<h2>Thank You!</h2>

<p>
    Many thanks to Michaël Gallego and Michael Gooden for helping me troubleshoot
    the form issues!
</p>

<h2>Roadmap</h2>

<p>
    Maintenance releases happen monthly on the third Wednesday.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.2.3 Released!</title>
      <pubDate>Wed, 21 Aug 2013 21:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-2-3-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-2-3-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework 2.2.3! Packages and installation instructions are
    available at:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This is the third monthly maintenance release in the 2.2 series. 
</p><h2>Changelog</h2>

<p>
    This release features over 25 changes. Some notable changes include:
</p>

<ul>
    <li>An update that ensures the filter and validator plugin managers are injected 
        into the input filter factory when using the form factory. (<a href="https://github.com/zendframework/zf2/issues/4851">#4851</a>)</li>
    <li>Fixes to code generation to ensure <code>use</code> statements are unique, and that
        non-namespaced class generation is possible. 
        (<a href="https://github.com/zendframework/zf2/issues/4988">#4988</a> and 
        <a href="https://github.com/zendframework/zf2/issues/4990">#4990</a>)</li>
    <li>A fix to input filters and forms to ensure overwriting of inputs and input filters
        happens correctly. (<a href="https://github.com/zendframework/zf2/issues/4996">#4996</a>)</li>
</ul>

<p>
    To see the full changelog, visit:
</p>

<ul>
    <li><a href="/changelog/2.2.3">http://framework.zend.com/changelog/2.2.3</a></li>
</ul>

<h2>Thank You!</h2>

<p>
    I'd like to thank everyone who provided issue reports, typo fixes, maintenance
    improvements, bugfixes, and documentation improvements; your efforts make the
    framework increasingly better!
</p>

<h2>Roadmap</h2>

<p>
    Maintenance releases happen monthly on the third Wednesday.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.2.2 Released!</title>
      <pubDate>Wed, 24 Jul 2013 17:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-2-2-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-2-2-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework 2.2.2! Packages and installation instructions are
    available at:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This is the second monthly maintenance release in the 2.2 series. 
</p><h2>Changelog</h2>

<p>
    This release features over 60 changes. Some notable changes include:
</p>

<ul>
    <li>The cURL adapter for <code>Zend\Http</code> will no longer double-decode
    gzip-encoded bodies. (<a href="https://github.com/zendframework/zf2/issues/4555">#4555</a>)</li>
    <li>A <code>headLink()</code> method was added to the HeadLink view helper
    so that its usage matches the documentation. (<a href="https://github.com/zendframework/zf2/issues/4105">#4105</a>)</li>
    <li>The validator plugin manager was updated to include the new 
    "PhoneNumber" validator. (<a href="https://github.com/zendframework/zf2/issues/4644">#4644</a>)</li>
    <li>Abstract methods in the <code>AbstractRestfulController</code> were made
    non-abstract, and modified to set a 405 ("Method Not Allowed") status. (<a href="https://github.com/zendframework/zf2/issues/4808">#4808</a>)</li>
</ul>

<p>
    To see the full changelog, visit:
</p>

<ul>
    <li><a href="/changelog/2.2.2">http://framework.zend.com/changelog/2.2.2</a></li>
</ul>

<h2>Thank You!</h2>

<p>
    I'd like to thank everyone who provided issue reports, typo fixes, maintenance
    improvements, bugfixes, and documentation improvements; your efforts make the
    framework increasingly better!
</p>

<h2>Roadmap</h2>

<p>
    Maintenance releases happen monthly on the third Wednesday. Version 2.3.0 
    is tentatively scheduled for September.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.2.1 Released!</title>
      <pubDate>Wed, 12 Jun 2013 20:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-2-1-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-2-1-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework 2.2.1! Packages and installation instructions are
    available at:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This is the first monthly maintenance release in the 2.2 series. 
</p><h2>Changelog</h2>

<p>
    This release features almost 70 changes, ranging from minor typographical 
    issues to changes to allow easier utilisation of new features introduced in 
    2.2 (e.g., you can now actually select the new 
    <code>TranslatorAwareTreeRouteStack</code> as a router via configuration).  
    The full changelog for 2.2.1 is available:
</p>

<ul>
    <li><a href="/changelog/2.2.1">http://framework.zend.com/changelog/2.2.1</a></li>
</ul>

<h2>Thank You!</h2>

<p>
    I'd like to thank everyone who provided issue reports, typo fixes, maintenance
    improvements, bugfixes, and documentation improvements; your efforts make the
    framework increasingly better!
</p>

<h2>Roadmap</h2>

<p>
    Maintenance releases happen monthly on the third Wednesday. Version 2.3.0 
    is tentatively scheduled for the end of August.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
  </channel>
</rss>
