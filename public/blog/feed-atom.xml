<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog Entries - ZF Blog</title>
  <updated>2013-12-20T23:00:00+0000</updated>
  <generator uri="http://framework.zend.com" version="2">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://framework.zend.com/blog.html"/>
  <link rel="self" type="application/atom+xml" href="http://framework.zend.com/blog-atom.xml"/>
  <id>http://framework.zend.com/blog.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 0.8.0 Released!]]></title>
    <published>2013-12-20T23:00:00+0000</published>
    <updated>2013-12-20T23:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-0-8-0-released.html"/>
    <id>http://framework.zend.com/blog/apigility-0-8-0-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>Today, we're releasing version 0.8.0 of Apigility! You can grab
and test it using one of the following two methods:</xhtml:p>
<xhtml:ul>
<xhtml:li>Composer: <xhtml:code>composer create-project
zfcampus/zf-apigility-skeleton apigility</xhtml:code></xhtml:li>
<xhtml:li>Manual download:
<xhtml:pre>
<xhtml:code>
wget -O ag-0.8.0.zip https://bit.ly/ag-0.8.0
unzip ag-0.8.0</xhtml:code>
</xhtml:pre></xhtml:li>
</xhtml:ul>
<xhtml:p>We never announced our 0.7.0 version (though we showed off the
features at several conferences this past month), so there's a ton
to announce!</xhtml:p>
<xhtml:h2>Authentication and Authorization</xhtml:h2>
<xhtml:p>Authentication and Authorization were the number one requested
feature after our original release announcement at ZendCon 2013. We
managed to get this in place in time for ZendCon 2013 Europe, and
the features include:</xhtml:p>
<xhtml:ul>
<xhtml:li>Ability to use HTTP Basic or Digest authentication, or
OAuth2.</xhtml:li>
<xhtml:li>Ability to create authorization rules per HTTP method, per
service in your API.</xhtml:li>
</xhtml:ul>
<xhtml:p>We are leveraging Zend Framework 2's
<xhtml:code>Zend\Authentication</xhtml:code> library for HTTP authentication,
and Brent Shaffer's <xhtml:a href="https://github.com/bshaffer/oauth2-server-php">oauth2-server-php</xhtml:a>
library for OAuth2.</xhtml:p>
<xhtml:p>Apigility allows you to define one authentication scheme per
application. You can set the authentication details on the main
dashboard, under the heading "Authentication":</xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authentication choices" src="/images/ag/authentication-buttons.png"/></xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authentication form" src="/images/ag/authentication-form.png"/></xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authentication view" src="/images/ag/authentication-view.png"/></xhtml:p>
<xhtml:p>To use HTTP Basic authentication, you will need to create a
<xhtml:code>htpasswd</xhtml:code> file, using Apache's <xhtml:code>htpasswd</xhtml:code>
utility. When you add HTTP Basic authentication to your
application, you will specify the location of the
<xhtml:code>htpasswd</xhtml:code> file.</xhtml:p>
<xhtml:p>For HTTP Digest authentication, you will need to create a file
with lines in the following format:</xhtml:p>
<xhtml:p>
<xhtml:code>&lt;username&gt;:&lt;realm&gt;:&lt;credentials&gt;</xhtml:code></xhtml:p>
<xhtml:p>The <xhtml:code>credentials</xhtml:code> field must be an MD5 hash of the
password that will be accepted. When adding the HTTP Digest
authentication to your application, you will specify the location
of this file, and will also need to specify the appropriate
<xhtml:code>realm</xhtml:code>, <xhtml:code>nonce\_timeout</xhtml:code> (number of seconds
the credentials remain valid), and, optionally, a list of
<xhtml:code>digest_domains</xhtml:code> (the domains for which the same
authentication information is valid).</xhtml:p>
<xhtml:p>To use OAuth2 authentication, you will need to setup a database,
and add clients and optionally users (users are only necessary if
using the <xhtml:code>password</xhtml:code> grant type). <xhtml:a href="https://github.com/zfcampus/zf-oauth2">See the zf-oauth2
README</xhtml:a> for details on how to setup the database and seed
it.</xhtml:p>
<xhtml:p>Once you have authentication setup, you can start setting up
authorization restrictions on your API. To do this, navigate to the
"Authorization" menu item in any API:</xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authorization" src="/images/ag/authorization.png"/></xhtml:p>
<xhtml:p>By default, APIs created with Apigility are public. To require
authorization on specific services or specific HTTP methods of
services, check the appropriate boxes and save your changes. From
that point forward, authentication will be required for those
actions!</xhtml:p>
<xhtml:p>For more information, <xhtml:a href="http://bit.ly/ag-auth">view the
demo video</xhtml:a></xhtml:p>
<xhtml:h2>Cross Origin Resource Sharing</xhtml:h2>
<xhtml:p>In order to operate a web-based application that interact with
your APIs, you may need to investigate Cross Origin Resource
Sharing (CORS). CORS describes HTTP requests for HTTP resources
made from a different domain than the resource exists on. As an
example, if your API is at <xhtml:code>http://example.com/api/</xhtml:code>,
but you want to request it from
<xhtml:code>http://my-uber-cool-app.com/</xhtml:code>, CORS is in effect.</xhtml:p>
<xhtml:p>If a browser attempts to create an <xhtml:code>XMLHttpRequest</xhtml:code>
to a different domain than the current page, then it will detect a
CORS request. At that point, the browser will ask the server with
the resource if the request is allowed; if the originating server
does not reply with the appropriate headers, the browser will not
submit the original request, and the <xhtml:code>XMLHttpRequest</xhtml:code>
will fail.</xhtml:p>
<xhtml:p>Apigility does not deal with CORS by default, but the 0.8.0
release includes changes that ensure that CORS requests
<xhtml:em>can</xhtml:em> be honored if you are using a CORS plugin. We have
tested against the <xhtml:a href="https://github.com/zf-fr/zfr-cors">ZfrCors ZF2 module</xhtml:a>, and it
works seamlessly with Apigility at this point.</xhtml:p>
<xhtml:p>We highly recommend the combination of Apigility and ZfrCors
when building web-based JavaScript applications that will operate
on separate domains from your APIs.</xhtml:p>
<xhtml:h2>Validation</xhtml:h2>
<xhtml:p>Another aspect of API security is validating the incoming input.
Ideally, you should reject anything that does not validate
outright, and as early as possible.</xhtml:p>
<xhtml:p>0.8.0 adds a new module, <xhtml:a href="https://github.com/zfcampus/zf-content-validation">zf-content-validation</xhtml:a>,
which provides a validation engine based on Zend Framework's
<xhtml:code>InputFilter</xhtml:code> component. This component, when a request
method that contains incoming data occurs, checks to see if the
matched service has a corresponding input filter, and, if so,
attempts to validate the incoming data against it. If the
validation fails, an error response is immediately returned.</xhtml:p>
<xhtml:p>In the Apigility Admin UI, each service now has an "Inputs" tab
that allows you to define the input filter. In this tab, you define
inputs, which correspond to each field of data you will be
expecting. For each input, you can define one or more validators,
along with any configuration you want for each. In this case, a
picture is probably more sufficient:</xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Validation" src="/images/ag/inputfilter.png"/></xhtml:p>
<xhtml:p>For more information, <xhtml:a href="http://bit.ly/ag-validation">view
the demo video</xhtml:a>.</xhtml:p>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>At this point, we're wrapping up the featureset for a stable
version of Apigility. The last milestones we have include:</xhtml:p>
<xhtml:ul>
<xhtml:li>a module for generating API documentation. At this time, we are
favoring <xhtml:a href="http://apiblueprint.org/">API Blueprint</xhtml:a> as
the markup is trivial to generate from our configuration, and,
being markdown-derived, relatively easy to edit and expand once the
initial generation is complete.</xhtml:li>
<xhtml:li>some cleanup of the UI, including some long-overdue refactoring
and formalized testing.</xhtml:li>
<xhtml:li>documentation of the various components, as well as tutorials
on how they all fit together.</xhtml:li>
</xhtml:ul>
<xhtml:p>We hope to complete the API documentation milestone in the first
weeks of 2014. At that point, we will start the beta release cycle,
spending that time to do the UI refactoring and project
documentation. Once those are complete, we'll finally issue a
stable release; we're aiming for late February 2014 at this
time.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.5 Released!]]></title>
    <published>2013-10-31T19:00:00+0000</published>
    <updated>2013-10-31T19:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-5-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-5-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.5! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release includes a security fix for
<xhtml:code>Zend\Http\PhpEnvironment\RemoteAddress</xhtml:code> and
<xhtml:code>Zend\Session\Validator\RemoteAddr</xhtml:code>; if you use either
of these classes, we urge you to upgrade to 2.2.5 immediately.</xhtml:p>
<xhtml:p>We've not had a release in a couple of months, due to an
exciting development: Zend's Zend Framework team has announced an
initial preview release of <xhtml:a href="http://apigility.org">Apigility</xhtml:a>, an API builder and management
tool, built on top of Zend Framework 2! If you are building APIs or
plan to in the future, we encourage you to check out this tool and
help drive it toward a stable release!</xhtml:p>
<xhtml:h2>Security</xhtml:h2>
<xhtml:p>A developer reported a problem with how we were handling
situations when <xhtml:code>Zend\Http\PhpEnvironment\RemoteAddress</xhtml:code>
was configured to use proxies, had a list of trusted proxies,
<xhtml:code>$_SERVER['REMOTE_ADDR']</xhtml:code> was not in that list of
trusted proxies. Essentially, we were still consulting the
<xhtml:code>X-Forwarded-For</xhtml:code> header in this situation, but should
have been used the provided <xhtml:code>$_SERVER['REMOTE_ADDR']</xhtml:code>,
according to the specification.</xhtml:p>
<xhtml:p>2.2.5 fixes this situation. If you use that class, or
<xhtml:code>Zend\Session\Validator\RemoteAddr</xhtml:code>, you should upgrade
immediately.</xhtml:p>
<xhtml:p>For more details, visit the <xhtml:a href="/security/advisory/ZF2013-04">ZF2013-04 security advisory</xhtml:a>.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.5">http://framework.zend.com/changelog/2.2.5</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Thank you to everybody who has contributed to this release. With
more than 70 issues resolved, it's one of the busiest and most
robust releases on the 2.2 branch to-date.</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen (roughly) monthly on (approximately)
the third Wednesday. We will be gearing up for the next minor
release, 2.3.0, soon.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.4 Released!]]></title>
    <published>2013-08-26T16:45:00+0000</published>
    <updated>2013-08-26T16:45:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-4-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-4-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.4! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release fixes a regression found in the Form component
released with version 2.2.3; if you use that component, we urge you
to upgrade to 2.2.4.</xhtml:p>
<xhtml:h2>Regressions</xhtml:h2>
<xhtml:p><xhtml:a href="/blog/zend-framework-2-2-3-released.html">Version
2.2.3</xhtml:a> introduced a regression in the Form component, as a
side-effect of fixing another issue. The
<xhtml:code>preferFormInputFilter</xhtml:code> flag was originally created to
allow developers to choose whether they wanted to prefer the input
filter they explicitly composed in the form to have priority, or
use the input filter settings the form aggregated from default
elements instead. Interestingly, the form component essentially
enforced the latter situation (prefering what the form aggregated),
making the flag have no semantic meaning.</xhtml:p>
<xhtml:p>A side effect of this, however, led to a regression in the
InputFilter component. Starting sometime in the 2.2 series, the
behavior of input merging was changed to merge the old input into
the new. In 2.2.3, we corrected this behavior -- but it broke the
default merging order in the Form component. On inspection, we
discovered that the fix to the InputFilter essentially gave
semantic meaning back to the <xhtml:code>preferFormInputFilter</xhtml:code>
flag -- but that the default behavior -- which was to prefer what
the form aggregates -- was now flip-flopped.</xhtml:p>
<xhtml:p>The fix in 2.2.4 is to enable the
<xhtml:code>preferFormInputFilter</xhtml:code> flag by default, thus restoring
the previous expected behavior. Additionally, we now provide the
ability to set this flag via form options or the form factory.</xhtml:p>
<xhtml:p>If you use the Form component, we urge you to upgrade to 2.2.4
immediately.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.4">http://framework.zend.com/changelog/2.2.4</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Many thanks to Michaël Gallego and Michael Gooden for helping me
troubleshoot the form issues!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.3 Released!]]></title>
    <published>2013-08-21T21:00:00+0000</published>
    <updated>2013-08-21T21:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-3-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-3-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.3! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the third monthly maintenance release in the 2.2
series.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release features over 25 changes. Some notable changes
include:</xhtml:p>
<xhtml:ul>
<xhtml:li>An update that ensures the filter and validator plugin managers
are injected into the input filter factory when using the form
factory. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4851">#4851</xhtml:a>)</xhtml:li>
<xhtml:li>Fixes to code generation to ensure <xhtml:code>use</xhtml:code> statements
are unique, and that non-namespaced class generation is possible.
(<xhtml:a href="https://github.com/zendframework/zf2/issues/4988">#4988</xhtml:a> and
<xhtml:a href="https://github.com/zendframework/zf2/issues/4990">#4990</xhtml:a>)</xhtml:li>
<xhtml:li>A fix to input filters and forms to ensure overwriting of
inputs and input filters happens correctly. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4996">#4996</xhtml:a>)</xhtml:li>
</xhtml:ul>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.3">http://framework.zend.com/changelog/2.2.3</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>I'd like to thank everyone who provided issue reports, typo
fixes, maintenance improvements, bugfixes, and documentation
improvements; your efforts make the framework increasingly
better!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.2 Released!]]></title>
    <published>2013-07-24T17:00:00+0000</published>
    <updated>2013-07-24T17:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-2-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.2! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the second monthly maintenance release in the 2.2
series.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release features over 60 changes. Some notable changes
include:</xhtml:p>
<xhtml:ul>
<xhtml:li>The cURL adapter for <xhtml:code>Zend\Http</xhtml:code> will no longer
double-decode gzip-encoded bodies. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4555">#4555</xhtml:a>)</xhtml:li>
<xhtml:li>A <xhtml:code>headLink()</xhtml:code> method was added to the HeadLink view
helper so that its usage matches the documentation. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4105">#4105</xhtml:a>)</xhtml:li>
<xhtml:li>The validator plugin manager was updated to include the new
"PhoneNumber" validator. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4644">#4644</xhtml:a>)</xhtml:li>
<xhtml:li>Abstract methods in the <xhtml:code>AbstractRestfulController</xhtml:code>
were made non-abstract, and modified to set a 405 ("Method Not
Allowed") status. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4808">#4808</xhtml:a>)</xhtml:li>
</xhtml:ul>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.2">http://framework.zend.com/changelog/2.2.2</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>I'd like to thank everyone who provided issue reports, typo
fixes, maintenance improvements, bugfixes, and documentation
improvements; your efforts make the framework increasingly
better!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.
Version 2.3.0 is tentatively scheduled for September.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.1 Released!]]></title>
    <published>2013-06-12T20:00:00+0000</published>
    <updated>2013-06-12T20:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-1-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-1-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.1! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the first monthly maintenance release in the 2.2
series.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release features almost 70 changes, ranging from minor
typographical issues to changes to allow easier utilisation of new
features introduced in 2.2 (e.g., you can now actually select the
new <xhtml:code>TranslatorAwareTreeRouteStack</xhtml:code> as a router via
configuration). The full changelog for 2.2.1 is available:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.1">http://framework.zend.com/changelog/2.2.1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>I'd like to thank everyone who provided issue reports, typo
fixes, maintenance improvements, bugfixes, and documentation
improvements; your efforts make the framework increasingly
better!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.
Version 2.3.0 is tentatively scheduled for the end of August.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.0 Stable Released!]]></title>
    <published>2013-05-15T15:00:00+0000</published>
    <updated>2013-05-15T15:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-0-stable-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-0-stable-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.0! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the first <xhtml:em>stable</xhtml:em> release in the 2.2 series.</xhtml:p>
<xhtml:h2>Usability and Consistency</xhtml:h2>
<xhtml:p>The primary focus of the 2.2 release has been usability and
consistency, primarily with regard to creation and configuration of
services such as hydrators, input filters, logs, DB connections,
cache objects, translators, and forms.</xhtml:p>
<xhtml:p>Most of these services now have what are known as "Abstract
Factories" that are either registered by default, or can be added
quickly to your application configuration. Abstract factories are
used by the service manager when you have multiple services that
follow the same instantiation pattern, but which have different
names. The typical pattern the new abstract factories follow is to
use key/configuration pairs under a common top-level configuration
key to describe the instances desired:</xhtml:p>
<xhtml:pre class="highlight">
<xhtml:code><xhtml:span style="color: #000000">
<xhtml:span style="color: #0000BB">&lt;?php<xhtml:br/></xhtml:span><xhtml:span style="color: #DD0000">'log' </xhtml:span><xhtml:span style="color: #007700">=&gt; array(<xhtml:br/>    </xhtml:span><xhtml:span style="color: #DD0000">'Application\Log' </xhtml:span><xhtml:span style="color: #007700">=&gt; array(<xhtml:br/>        </xhtml:span><xhtml:span style="color: #DD0000">'writers' </xhtml:span><xhtml:span style="color: #007700">=&gt; array(<xhtml:br/>            array(<xhtml:br/>                </xhtml:span><xhtml:span style="color: #DD0000">'name'     </xhtml:span><xhtml:span style="color: #007700">=&gt; </xhtml:span><xhtml:span style="color: #DD0000">'stream'</xhtml:span><xhtml:span style="color: #007700">,<xhtml:br/>                </xhtml:span><xhtml:span style="color: #DD0000">'priority' </xhtml:span><xhtml:span style="color: #007700">=&gt; </xhtml:span><xhtml:span style="color: #0000BB">1000</xhtml:span><xhtml:span style="color: #007700">,<xhtml:br/>                </xhtml:span><xhtml:span style="color: #DD0000">'options'  </xhtml:span><xhtml:span style="color: #007700">=&gt; array(<xhtml:br/>                    </xhtml:span><xhtml:span style="color: #DD0000">'stream' </xhtml:span><xhtml:span style="color: #007700">=&gt; </xhtml:span><xhtml:span style="color: #DD0000">'data/logs/app.log'</xhtml:span><xhtml:span style="color: #007700">,<xhtml:br/>                ),<xhtml:br/>            ),<xhtml:br/>        ),<xhtml:br/>    ),<xhtml:br/>),<xhtml:br/></xhtml:span>
</xhtml:span>
</xhtml:code>
</xhtml:pre>
<xhtml:p>The above creates a logger named "Application\Log" which you can
retrieve directly from the service manager. If you wanted to have
additional loggers, you could do so by adding additional entries
under the "log" heading, each named, and each providing
configuration for a logger.</xhtml:p>
<xhtml:p>Besides the logger abstract factory illustrated above, the
following components each have abstract factories now, too, using
the configuration keys noted:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:code>Zend\Cache</xhtml:code>: "caches" configuration section,
allowing multiple named cache storage objects.</xhtml:li>
<xhtml:li><xhtml:code>Zend\Db</xhtml:code>: "adapters" subkey of the "db"
configuration section; this abstract factory allows you to finally
have multiple named DB adapter instances, effectively allowing for
read-only and write-only connections.</xhtml:li>
<xhtml:li><xhtml:code>Zend\Form</xhtml:code>: "forms" configuration section (which
makes use of several old and new plugin managers, as noted
below).</xhtml:li>
</xhtml:ul>
<xhtml:p>A number of new plugin managers were also added. Plugin managers
are specialized service manager instances used by objects that will
be consuming many different related object instances, often based
on runtime conditions. As examples, view helpers and controller
plugins are mediated by plugin managers.</xhtml:p>
<xhtml:p>The new plugin manager instances include:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:code>Zend\Stdlib\Hydrator\HydratorPluginManager</xhtml:code>, for
retrieving hydrator instances. This allows re-use of individual
hydrators, and coupled with the forms abstract factory, allows
usage of custom hydrators across your form instances.</xhtml:li>
<xhtml:li><xhtml:code>Zend\InputFilter\InputFilterPluginManager</xhtml:code>, for
retrieving (configurable) input filter instances. This allows
re-use of input filters, as well as ensures that all input
instances are provided with custom validators and/or filters (from
the existing validator and filter plugin managers). The forms
abstract factory makes use of this, which allows us to finally tie
together the various plugin managers to create fully configurable
and custom forms.</xhtml:li>
</xhtml:ul>
<xhtml:p>Finally, a couple new service factories were created. Service
factories usually have a 1:1 relationship between the named service
and the instance provided, and are ideal for situations where you
only need one instance of a given service type. In the case of the
new factories for 2.2, these include <xhtml:em>translators</xhtml:em> and
<xhtml:em>sessions</xhtml:em>.</xhtml:p>
<xhtml:h2>Data Definition Language Abstraction</xhtml:h2>
<xhtml:p>Zend Framework 2.2 also offers initial support in
<xhtml:code>Zend\Db</xhtml:code> for dynamic DDL queries. DDL, for Data
Definition Language, is a subset of SQL that comprises different
commands for building RDBMS data structures like tables, columns,
constraints, indexes, views, triggers and the like.</xhtml:p>
<xhtml:p>Initial support is limited to creating tables with SQL92
data-types, and some specialization for MySQL support. Here is an
example of <xhtml:code>CREATE TABLE</xhtml:code> statement:</xhtml:p>
<xhtml:pre class="highlight">
<xhtml:code><xhtml:span style="color: #000000">
<xhtml:span style="color: #0000BB">&lt;?php<xhtml:br/>    </xhtml:span><xhtml:span style="color: #007700">use </xhtml:span><xhtml:span style="color: #0000BB">Zend</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Db</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Sql</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Sql</xhtml:span><xhtml:span style="color: #007700">;<xhtml:br/>    use </xhtml:span><xhtml:span style="color: #0000BB">Zend</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Db</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Sql</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">;<xhtml:br/><xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t </xhtml:span><xhtml:span style="color: #007700">= new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">CreateTable</xhtml:span><xhtml:span style="color: #007700">();<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">setTable</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'bar'</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addColumn</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Column</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Integer</xhtml:span><xhtml:span style="color: #007700">(<xhtml:br/>        </xhtml:span><xhtml:span style="color: #DD0000">'id'</xhtml:span><xhtml:span style="color: #007700">, <xhtml:br/>        </xhtml:span><xhtml:span style="color: #0000BB">12</xhtml:span><xhtml:span style="color: #007700">, <xhtml:br/>        </xhtml:span><xhtml:span style="color: #0000BB">true</xhtml:span><xhtml:span style="color: #007700">, <xhtml:br/>        </xhtml:span><xhtml:span style="color: #0000BB">null</xhtml:span><xhtml:span style="color: #007700">,<xhtml:br/>        [</xhtml:span><xhtml:span style="color: #DD0000">'auto_increment' </xhtml:span><xhtml:span style="color: #007700">=&gt; </xhtml:span><xhtml:span style="color: #0000BB">true</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'comment' </xhtml:span><xhtml:span style="color: #007700">=&gt; </xhtml:span><xhtml:span style="color: #DD0000">'Some comment'</xhtml:span><xhtml:span style="color: #007700">]<xhtml:br/>    ));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addColumn</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Column</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Varchar</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'name'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #0000BB">255</xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addColumn</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Column</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Char</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'foo'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #0000BB">20</xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addConstraint</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Constraint</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">PrimaryKey</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'id'</xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addConstraint</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Constraint</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">UniqueKey</xhtml:span><xhtml:span style="color: #007700">(<xhtml:br/>        [</xhtml:span><xhtml:span style="color: #DD0000">'name'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'foo'</xhtml:span><xhtml:span style="color: #007700">],<xhtml:br/>        </xhtml:span><xhtml:span style="color: #DD0000">'my_unique_key'<xhtml:br/>    </xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/><xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$sql </xhtml:span><xhtml:span style="color: #007700">= new </xhtml:span><xhtml:span style="color: #0000BB">Sql</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #0000BB">$adapter</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/>    echo </xhtml:span><xhtml:span style="color: #0000BB">$sql</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">getSqlStringForSqlObject</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/></xhtml:span>
</xhtml:span>
</xhtml:code>
</xhtml:pre>
<xhtml:p>Once this table is created, it can then be altered:</xhtml:p>
<xhtml:pre class="highlight">
<xhtml:code><xhtml:span style="color: #000000">
<xhtml:span style="color: #0000BB">&lt;?php<xhtml:br/>    $t </xhtml:span><xhtml:span style="color: #007700">= new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">AlterTable</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'bar'</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">changeColumn</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'name'</xhtml:span><xhtml:span style="color: #007700">, new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Column</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Varchar</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'new_name'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #0000BB">50</xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addColumn</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Column</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Varchar</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'another'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #0000BB">255</xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addColumn</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Column</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Varchar</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'other_id'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #0000BB">255</xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">dropColumn</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'foo'</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">addConstraint</xhtml:span><xhtml:span style="color: #007700">(new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">Constraint</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">ForeignKey</xhtml:span><xhtml:span style="color: #007700">(<xhtml:br/>        </xhtml:span><xhtml:span style="color: #DD0000">'my_fk'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'other_id'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'other_table'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'id'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'CASCADE'</xhtml:span><xhtml:span style="color: #007700">, </xhtml:span><xhtml:span style="color: #DD0000">'CASCADE'<xhtml:br/>    </xhtml:span><xhtml:span style="color: #007700">));<xhtml:br/>    </xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">dropConstraint</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'my_index'</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/>    echo </xhtml:span><xhtml:span style="color: #0000BB">$sql</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">getSqlStringForSqlObject</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #0000BB">$t</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/></xhtml:span>
</xhtml:span>
</xhtml:code>
</xhtml:pre>
<xhtml:p>Or even dropped:</xhtml:p>
<xhtml:pre class="highlight">
<xhtml:code><xhtml:span style="color: #000000">
<xhtml:span style="color: #0000BB">&lt;?php<xhtml:br/>    $dt </xhtml:span><xhtml:span style="color: #007700">= new </xhtml:span><xhtml:span style="color: #0000BB">Ddl</xhtml:span><xhtml:span style="color: #007700">\</xhtml:span><xhtml:span style="color: #0000BB">DropTable</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #DD0000">'bar'</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/>    echo </xhtml:span><xhtml:span style="color: #0000BB">$sql</xhtml:span><xhtml:span style="color: #007700">-&gt;</xhtml:span><xhtml:span style="color: #0000BB">getSqlStringForSqlObject</xhtml:span><xhtml:span style="color: #007700">(</xhtml:span><xhtml:span style="color: #0000BB">$dt</xhtml:span><xhtml:span style="color: #007700">);<xhtml:br/></xhtml:span>
</xhtml:span>
</xhtml:code>
</xhtml:pre>
<xhtml:p>What can this be used for?</xhtml:p>
<xhtml:p>That is where you come in. This particular feature was asked for
numerous times during ZF1 development. We'd like to see what kind
of ZF2 modules can be created with this base infrastructure.
Migration assistant? ORM database creation tool? Advanced CMS? Let
us know; we'll be adding more vendor specific support over the 2.2
to 2.3 timeline.</xhtml:p>
<xhtml:h2>New Service Wrappers</xhtml:h2>
<xhtml:p>Zend Framework has a long history of providing API wrappers; in
fact, they were a prominent part of the initial pre-release! The
tradition continues in ZF2, though each API wrapper now has its own
repository.</xhtml:p>
<xhtml:p>Alongside the 2.2.0 release, we're also providing initial beta
releases of two new service components:
<xhtml:code>ZendService_Api</xhtml:code> and
<xhtml:code>ZendService_OpenStack</xhtml:code>.</xhtml:p>
<xhtml:h3>ZendService_Api</xhtml:h3>
<xhtml:p>This is an HTTP microframework for consuming generic API calls
in PHP. This framework can be used to create PHP libraries that
consume specific HTTP APIs using either a simple configuration
array or files. This project uses the <xhtml:code>Zend\Http\Client</xhtml:code>
component of Zend Framework 2. <xhtml:a href="http://www.zimuel.it/en/zendservice-api-micro-http-framework/">Enrico
has blogged about the component previously.</xhtml:a></xhtml:p>
<xhtml:h3>ZendService_OpenStack</xhtml:h3>
<xhtml:p>We began the development of a new library to support the last
API version of <xhtml:a href="http://www.openstack.org">OpenStack</xhtml:a>.
The goal of this component is to simplify the usage of OpenStack in
PHP, providing a simple object oriented interface to its API
services. This component is based on <xhtml:code>ZendService_Api</xhtml:code>,
giving us a flexible way to update the HTTP specification with the
future API versions.</xhtml:p>
<xhtml:h2>ZFTool Diagnostic Features</xhtml:h2>
<xhtml:p>Artur Bodera (aka Thinkscape) provided a new diagnostics feature
for ZFTool. Using this feature, we can allow the execution of
customized diagnostics tests in ZF2 projects, including testing for
the required PHP version, testing for specific PHP extensions,
testing for specific ZF2 modules, testing for specific PHP INI
settings, and more; <xhtml:a href="https://github.com/zendframework/ZFTool/blob/master/docs/DIAGNOSTICS.md">
read the documentation to get an idea of the variety of tests
available.</xhtml:a></xhtml:p>
<xhtml:p>Moreover, with the collaboration of the <xhtml:a href="https://github.com/liip/LiipMonitor">LiipMonitor project</xhtml:a>, we
decided to create common interfaces for performing diagnostic tests
in PHP applications. An initial draft is available in the <xhtml:a href="https://github.com/zendframework/ZendDiagnostics">ZendDiagnostic
repository</xhtml:a>.</xhtml:p>
<xhtml:p>The diagnostics feature is available in the <xhtml:a href="https://packages.zendframework.com/zftool.phar">latest version of
ZFTool</xhtml:a>.</xhtml:p>
<xhtml:h2>Hydrator Improvements</xhtml:h2>
<xhtml:p>As noted earlier, <xhtml:code>Zend\Stdlib\Hydrator</xhtml:code> now has a
plugin manager you can compose into your objects for managing
hydrator instances. However, beyond that, we also now have an
"Aggregate Hydrator", which allows you to provide specialized
mapping of your object types to hydrators via an event-based
system.</xhtml:p>
<xhtml:p>Why is this exciting? Many of our users utilize <xhtml:a href="http://doctrine-project.org">Doctrine</xhtml:a> as an Object Relational
Mapping (ORM) system. Oftentimes, the entities that you work with
will also form a hierarchical structure. The Aggregate Hydrator
allows allows you to attach a single hydrator to the parent object,
and ensure that all child and descendant objects are either
hydrated or extracted according to their type.</xhtml:p>
<xhtml:h2>Reducing Dependencies</xhtml:h2>
<xhtml:p>We have started work on a new story for the framework: reducing
dependencies for individual components. We have received feedback
from a number of developers and organizations indicating that even
though each component can be installed individually, the number of
dependencies most components mark as required leads to a situation
where they feel they must choose whether or not they adopt the
framework, versus adopting just the component. While of course we'd
like them to adopt the framework, we'd rather they get a taste for
it, if you will.</xhtml:p>
<xhtml:p>While this story is primarily slated for 2.3, we have made our
first steps in 2.2, with the <xhtml:code>Zend\Feed</xhtml:code> and
<xhtml:code>Zend\Validator</xhtml:code> components.</xhtml:p>
<xhtml:p><xhtml:code>Zend\Validator</xhtml:code> removed its dependency on the i18n
component. We achieved this by creating <xhtml:a href="http://martinfowler.com/eaaCatalog/separatedInterface.html" target="_blank">Separated Interfaces</xhtml:a> for the translator.
Considering translation was only enabled if you explicitly injected
a translator, this was a natural course of action. (It also
introduced a minor backwards compatibility break; see below for
more information.)</xhtml:p>
<xhtml:p>For <xhtml:code>Zend\Feed</xhtml:code>, many "required" dependencies were
actually optional already, and we could mark them as such. There
were two that were not, however, and which required similar
treatment as <xhtml:code>Zend\Validator</xhtml:code> in creating separated
interfaces: the service manager (used for extension management) and
HTTP (for fetching remote feeds with the reader). Interfaces were
developed for each of these, and <xhtml:code>Zend\Feed</xhtml:code> now has
only two required dependencies. A nice side benefit is that you can
now use third-party HTTP clients with
<xhtml:code>Zend\Feed\Reader</xhtml:code>!</xhtml:p>
<xhtml:h2>Migration Notes</xhtml:h2>
<xhtml:p>While we have worked hard to keep code backwards compatible
(BC), there are a few noteworth changes that <xhtml:em>may</xhtml:em> affect
your code.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:code>Zend\Validator</xhtml:code> no longer directly consumes a
<xhtml:code>Zend\I18n\Translator\Translator</xhtml:code> instance; instead, you
must either implement
<xhtml:code>Zend\Validator\Translator\TranslatorInterface</xhtml:code> or use
<xhtml:code>Zend\Mvc\I18n\Translator</xhtml:code>. In most cases, this change
should be transparent, as validator instances managed by the
ValidatorPluginManager will already be using the correct
instance.</xhtml:li>
<xhtml:li>In 2.1.5, a BC break was accidently introduced into
<xhtml:code>Zend\Navigation</xhtml:code> in order to enable a feature: MVC
pages were altered to always use route match values when available
when generating URIs. 2.2.0 was modified to add a flag to enable
this behavior on demand, but defaults to the original behavior,
which does not pass the route match values to the pages. If you
relied on this behavior in 2.1.5, add the following option to your
individual MVC page definitions:
<xhtml:pre class="highlight">
<xhtml:code><xhtml:span style="color: #000000">
<xhtml:span style="color: #0000BB">&lt;?php<xhtml:br/></xhtml:span><xhtml:span style="color: #DD0000">'use_route_match' </xhtml:span><xhtml:span style="color: #007700">=&gt; </xhtml:span><xhtml:span style="color: #0000BB">true</xhtml:span><xhtml:span style="color: #007700">,<xhtml:br/></xhtml:span>
</xhtml:span>
</xhtml:code>        
</xhtml:pre></xhtml:li>
</xhtml:ul>
<xhtml:h2>Other Notable Improvements</xhtml:h2>
<xhtml:ul>
<xhtml:li><xhtml:strong>Authentication:</xhtml:strong> The DB adapter now supports
non-RDBMS credential validation.</xhtml:li>
<xhtml:li><xhtml:strong>Cache:</xhtml:strong> New storage backend: Redis.</xhtml:li>
<xhtml:li><xhtml:strong>Code:</xhtml:strong> The ClassGenerator now has a
removeMethod() method.</xhtml:li>
<xhtml:li><xhtml:strong>Console:</xhtml:strong> Incremental improvements to layout
and colorization of banners and usage messages; fixes for how
literal and non-literal matches are returned.</xhtml:li>
<xhtml:li><xhtml:strong>Filter:</xhtml:strong> New DateTimeFormatter filter.</xhtml:li>
<xhtml:li><xhtml:strong>Form:</xhtml:strong> Many incremental improvements to
selected elements; new FormAbstractServiceFactory for defining form
services; minor improvements to make the form component work with
the DI service factory.</xhtml:li>
<xhtml:li><xhtml:strong>InputFilter</xhtml:strong>: new CollectionInputFilter for
working with form Collections; new InputFilterPluginManager
providing integration and services for the ServiceManager.</xhtml:li>
<xhtml:li><xhtml:strong>I18n:</xhtml:strong> We removed ext/intl as a hard
requirement, and made it only a suggested requirement; the
Translator has an optional dependency on the EventManager,
providing the ability to tie into "missing message" and "missing
translations" events; new country-specific PhoneNumber
validator.</xhtml:li>
<xhtml:li><xhtml:strong>ModuleManager:</xhtml:strong> Now allows passing actual
Module instances (not just names).</xhtml:li>
<xhtml:li><xhtml:strong>Navigation:</xhtml:strong> Incremental improvements,
particularly to URL generation.</xhtml:li>
<xhtml:li><xhtml:strong>MVC:</xhtml:strong> You can now configure the initial set of
MVC event listeners in the configuration file; the MVC stack now
detects generic HTTP responses when detecting event short
circuiting; the default ExceptionStrategy now allows returning
JSON; opt-in translatable segment routing; many incremental
improvements to the AbstractRestfulController to make it more
configurable and extensible; the Forward plugin was refactored to
no longer require a ServiceLocatorAware controller, and instead
receive the ControllerManager via its factory.</xhtml:li>
<xhtml:li><xhtml:strong>Paginator:</xhtml:strong> Support for TableGateway
objects.</xhtml:li>
<xhtml:li><xhtml:strong>ServiceManager:</xhtml:strong> Incremental improvements;
performance optimizations; delegate factories, which provide a way
to write factories for objects that replace a service with a
decorator; "lazy" factories, allowing the ability to delay factory
creation invocation until the moment of first use.</xhtml:li>
<xhtml:li><xhtml:strong>Stdlib:</xhtml:strong> Addition of a HydratorAwareInterface;
creation of a HydratorPluginManager.</xhtml:li>
<xhtml:li><xhtml:strong>SOAP:</xhtml:strong> Major refactor of WSDL generation to
make it more maintainable.</xhtml:li>
<xhtml:li><xhtml:strong>Validator:</xhtml:strong> New Brazilian IBAN format for IBAN
validator; validators now only return unique error messages;
improved Maestro detection in CreditCard validator.</xhtml:li>
<xhtml:li><xhtml:strong>Version:</xhtml:strong> use the ZF website API for finding
the latest version, instead of GitHub.</xhtml:li>
<xhtml:li><xhtml:strong>View:</xhtml:strong> Many incremental improvements, primarily
to helpers; deprecation of the Placeholder Registry and removal of
it from the implemented placeholder system; new explicit factory
classes for helpers that have collaborators (making them easier to
override/replace).</xhtml:li>
</xhtml:ul>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>Greater than 150 patches were applied for 2.2.0.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.0">http://framework.zend.com/changelog/2.2.0</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Other Announcements</xhtml:h2>
<xhtml:p>Over a month ago, we migrated <xhtml:a href="https://github.com/zendframework/zf1">Zend Framework 1 to
GitHub</xhtml:a>. At that time, we also migrated active issues created
since 1.12.0 to the <xhtml:a href="https://github.com/zendframework/zf1/issues">GitHub issue
tracker</xhtml:a>, and marked our self-hosted issue tracker read-only. We
have decided to turn off that issue tracker, but still retain the
original issues at their original locations for purposes of history
and transparency. You can find information on the change on our
<xhtml:a href="/issues">issues landing page</xhtml:a>.</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Please join me in thanking everyone who provided new features
and code improvements for the 2.2.0 release! We had a huge leap
forward in usability of many components, and a number of key new
features that make developing applications simpler. We'll be
continuing on these themes for the next release as well.</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases are scheduled for the third Wednesday of
each month; expect 2.2.1 on 19 June 2013. Minor releases are
scheduled roughly every quarter; look for 2.3 sometime around
mid-August or early September. Proposals and ideas for stories will
be presented on the zf-contributors mailing list; subscribe by
sending an email to zf-contributors-subscribe [at] lists.zend.com
if you are interested in assisting with its development.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.0rc3 Released!]]></title>
    <published>2013-05-10T13:30:00+0000</published>
    <updated>2013-05-10T13:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-0rc3-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-0rc3-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.0rc3! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is a <xhtml:em>release candidate</xhtml:em>. It is not the final
release, and while stability is generally considered good, there
may still be issues to resolve between now and the stable release.
Use in production with caution.</xhtml:p>
<xhtml:p><xhtml:strong>DO</xhtml:strong> please test your applications on this RC, as
we would like to ensure that it remains backwards compatible, and
that the migration path is smooth.</xhtml:p>
<xhtml:h2>Changes in this version</xhtml:h2>
<xhtml:p>Please see our <xhtml:a href="/blog/zend-framework-2-2-0rc1-released.html">post for 2.2.0rc1</xhtml:a>
and our <xhtml:a href="/blog/zend-framework-2-2-0rc1-released.html">post
for 2.2.0rc2</xhtml:a> for a list of changes. In addition to those
changes, the following have been made:</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p>A late addition of <xhtml:code>Zend\Stdlib\Hydrator\Aggregate</xhtml:code>
was made. This functionality allows the ability to map hydrators to
objects via events, and generally streamlines the process of having
a single hydrator for a hierarchy of objects. Read more in the
<xhtml:a href="http://zf2.readthedocs.org/en/latest/modules/zend.stdlib.hydrator.aggregate.html">
AggregateHydrator documentation</xhtml:a>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Improvements were made to <xhtml:code>Zend\Di</xhtml:code> to make it work
better with the various "Aware" interfaces that have proliferated
throughout the framework, eliminating issues where the component
would attempt to instantiate an interface.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>Almost 200 patches were applied for 2.2.0. We will not release a
full changelog until we create the stable release. In the meantime,
you can view a full set of patches applied for 2.2.0 in the 2.2.0
milestone on GitHub:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf2/issues?milestone=14&amp;state=closed">
Zend Framework 2.2.0 milestone</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Please join me in thanking everyone who provided new features
and code improvements for this upcoming 2.2.0 release!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>This is the third release candidate. At this time, we anticipate
a stable release sometime mid-week next week.</xhtml:p>
<xhtml:p>Over the next few days, we will be expanding on documentation,
and fixing any critical issues brought to our attention; we do not
anticipate many, if any, critical issues at this time, however.</xhtml:p>
<xhtml:p>Again, <xhtml:strong>DO</xhtml:strong> please test your applications on this
RC, as we would like to ensure that it remains backwards
compatible, and that the migration path is smooth.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.0rc2 Released!]]></title>
    <published>2013-05-06T22:00:00+0000</published>
    <updated>2013-05-06T22:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-0rc2-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-0rc2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.0rc2! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is a <xhtml:em>release candidate</xhtml:em>. It is not the final
release, and while stability is generally considered good, there
may still be issues to resolve between now and the stable release.
Use in production with caution.</xhtml:p>
<xhtml:p><xhtml:strong>DO</xhtml:strong> please test your applications on this RC, as
we would like to ensure that it remains backwards compatible, and
that the migration path is smooth.</xhtml:p>
<xhtml:h2>Changes in this version</xhtml:h2>
<xhtml:p>Please see our <xhtml:a href="/blog/zend-framework-2-2-0rc1-released.html">post for 2.2.0rc1</xhtml:a>
for a list of changes. In addition to those changes, the following
have been made:</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p>A late change was made to eliminate and/or make optional several
dependencies in <xhtml:code>Zend\Feed</xhtml:code> and
<xhtml:code>Zend\Validator</xhtml:code>. While these are generally backwards
compatible, we need to note that you can no longer directly use
<xhtml:code>Zend\I18n\Translator\Translator</xhtml:code> with validators;
instead, you must use <xhtml:code>Zend\Mvc\I18n\Translator</xhtml:code>. In
most cases, this will not present an issue, as the translator
object is generally injected via the
<xhtml:code>ValidatorPluginManager</xhtml:code>, which has already been updated
to inject the correct translator object.</xhtml:p>
<xhtml:p><xhtml:strong><xhtml:em>If you were manually injecting your validators with
a translator object, please note that you must now use
<xhtml:code>Zend\Mvc\I18n\Translator</xhtml:code>.</xhtml:em></xhtml:strong></xhtml:p>
<xhtml:p>The changes have some immediate benefits: you can now use
<xhtml:code>Zend\Feed</xhtml:code> with third-party HTTP clients!</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>Almost 200 patches were applied for 2.2.0. We will not release a
full changelog until we create the stable release. In the meantime,
you can view a full set of patches applied for 2.2.0 in the 2.2.0
milestone on GitHub:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf2/issues?milestone=14&amp;state=closed">
Zend Framework 2.2.0 milestone</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Please join me in thanking everyone who provided new features
and code improvements for this upcoming 2.2.0 release!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>We plan to release additional RCs every 3-5 days until we feel
the 2.2.0 release is generally stable; we anticipate a stable
release sometime next week.</xhtml:p>
<xhtml:p>During the RC period, we will be expanding on documentation, and
fixing any critical issues brought to our attention.</xhtml:p>
<xhtml:p>Again, <xhtml:strong>DO</xhtml:strong> please test your applications on this
RC, as we would like to ensure that it remains backwards
compatible, and that the migration path is smooth.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.0rc1 Released!]]></title>
    <published>2013-05-01T22:50:00+0000</published>
    <updated>2013-05-01T22:50:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-0rc1-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-0rc1-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.0rc1! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://packages.zendframework.com/">http://packages.zendframework.com/</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is a <xhtml:em>release candidate</xhtml:em>. It is not the final
release, and while stability is generally considered good, there
may still be issues to resolve between now and the stable release.
Use in production with caution.</xhtml:p>
<xhtml:p><xhtml:strong>DO</xhtml:strong> please test your applications on this RC, as
we would like to ensure that it remains backwards compatible, and
that the migration path is smooth.</xhtml:p>
<xhtml:h2>Changes in this version</xhtml:h2>
<xhtml:ul>
<xhtml:li>
<xhtml:p><xhtml:strong>Addition of many more plugin managers and abstract
service factories.</xhtml:strong> In order to simplify usage of the
<xhtml:code>ServiceManager</xhtml:code> as an <xhtml:a href="http://en.wikipedia.org/wiki/Inversion_of_Control">Inversion of
Control</xhtml:a> container, as well as to provide more flexibility in
and consistency in how various framework components are consumed, a
number of plugin managers and service factories were created and
enabled.</xhtml:p>
<xhtml:p>Among the various plugin managers created are Translator loader
manager, a Hydrator plugin manager (allowing named hydrator
instances), and an InputFilter manager.</xhtml:p>
<xhtml:p>New factories include a Translator service factory, and
factories for both the Session configuration and
SessionManager.</xhtml:p>
<xhtml:p>New abstract factories include one for the DB component
(allowing you to manage multiple named adapters), Loggers (for
having multiple Logger instances), Cache storage (for managing
multiple cache backends), and Forms (which makes use of the
existing FormElementsPluginManager, as well as the new Hydrator and
InputFilter plugin managers).</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:strong>Data Definition Language (DDL) support in
Zend\Db.</xhtml:strong> DDL provides the ability to create, alter, and
drop tables in a relational database system. Zend\Db now offers
abstraction around DDL, and specifically MySQL and ANSI SQL-92; we
will gradually add this capability for the other database vendors
we support.</xhtml:p>
</xhtml:li>
<xhtml:li><xhtml:strong>Authentication:</xhtml:strong> The DB adapter now supports
non-RDBMS credential validation.</xhtml:li>
<xhtml:li><xhtml:strong>Cache:</xhtml:strong> New storage backend: Redis.</xhtml:li>
<xhtml:li><xhtml:strong>Code:</xhtml:strong> The ClassGenerator now has a
removeMethod() method.</xhtml:li>
<xhtml:li><xhtml:strong>Console:</xhtml:strong> Incremental improvements to layout
and colorization of banners and usage messages; fixes for how
literal and non-literal matches are returned.</xhtml:li>
<xhtml:li><xhtml:strong>DB:</xhtml:strong> New DDL support (noted earlier); many
incremental improvements.</xhtml:li>
<xhtml:li><xhtml:strong>Filter:</xhtml:strong> New DateTimeFormatter filter.</xhtml:li>
<xhtml:li><xhtml:strong>Form:</xhtml:strong> Many incremental improvements to
selected elements; new FormAbstractServiceFactory for defining form
services; minor improvements to make the form component work with
the DI service factory.</xhtml:li>
<xhtml:li><xhtml:strong>InputFilter</xhtml:strong>: new CollectionInputFilter for
working with form Collections; new InputFilterPluginManager
providing integration and services for the ServiceManager.</xhtml:li>
<xhtml:li><xhtml:strong>I18n:</xhtml:strong> We removed ext/intl as a hard
requirement, and made it only a suggested requirement; the
Translator has an optional dependency on the EventManager,
providing the ability to tie into "missing message" and "missing
translations" events; new country-specific PhoneNumber
validator.</xhtml:li>
<xhtml:li><xhtml:strong>ModuleManager:</xhtml:strong> Now allows passing actual
Module instances (not just names).</xhtml:li>
<xhtml:li><xhtml:strong>Navigation:</xhtml:strong> Incremental improvements,
particularly to URL generation.</xhtml:li>
<xhtml:li><xhtml:strong>MVC:</xhtml:strong> You can now configure the initial set of
MVC event listeners in the configuration file; the MVC stack now
detects generic HTTP responses when detecting event short
circuiting; the default ExceptionStrategy now allows returning
JSON; opt-in translatable segment routing; many incremental
improvements to the AbstractRestfulController to make it more
configurable and extensible; the Forward plugin was refactored to
no longer require a ServiceLocatorAware controller, and instead
receive the ControllerManager via its factory.</xhtml:li>
<xhtml:li><xhtml:strong>Paginator:</xhtml:strong> Support for TableGateway
objects.</xhtml:li>
<xhtml:li><xhtml:strong>ServiceManager:</xhtml:strong> Incremental improvements;
performance optimizations; delegate factories, which provide a way
to write factories for objects that replace a service with a
decorator; "lazy" factories, allowing the ability to delay factory
creation invocation until the moment of first use.</xhtml:li>
<xhtml:li><xhtml:strong>Stdlib:</xhtml:strong> Addition of a HydratorAwareInterface;
creation of a HydratorPluginManager.</xhtml:li>
<xhtml:li><xhtml:strong>SOAP:</xhtml:strong> Major refactor of WSDL generation to
make it more maintainable.</xhtml:li>
<xhtml:li><xhtml:strong>Validator:</xhtml:strong> New Brazilian IBAN format for IBAN
validator; validators now only return unique error messages;
improved Maestro detection in CreditCard validator.</xhtml:li>
<xhtml:li><xhtml:strong>Version:</xhtml:strong> use the ZF website API for finding
the latest version, instead of GitHub.</xhtml:li>
<xhtml:li><xhtml:strong>View:</xhtml:strong> Many incremental improvements, primarily
to helpers; deprecation of the Placeholder Registry and removal of
it from the implemented placeholder system; new explicit factory
classes for helpers that have collaborators (making them easier to
override/replace).</xhtml:li>
</xhtml:ul>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>Almost 200 patches were applied for 2.2.0. We will not release a
full changelog until we create the stable release. In the meantime,
you can view a full set of patches applied for 2.2.0 in the 2.2.0
milestone on GitHub:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf2/issues?milestone=14&amp;state=closed">
Zend Framework 2.2.0 milestone</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Other Announcements</xhtml:h2>
<xhtml:p>Around a month ago, we migrated <xhtml:a href="https://github.com/zendframework/zf1">Zend Framework 1 to
GitHub</xhtml:a>. At that time, we also migrated active issues created
since 1.12.0 to the <xhtml:a href="https://github.com/zendframework/zf1/issues">GitHub issue
tracker</xhtml:a>, and marked our self-hosted issue tracker read-only. We
have decided to turn off that issue tracker, but still retain the
original issues at their original locations for purposes of history
and transparency. You can find information on the change on our
<xhtml:a href="/issues">issues landing page</xhtml:a>.</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Please join me in thanking everyone who provided new features
and code improvements for this upcoming 2.2.0 release!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>We plan to release additional RCs every 3-5 days until we feel
the 2.2.0 release is generally stable; we anticipate a stable
release in the next 2-3 weeks.</xhtml:p>
<xhtml:p>During the RC period, we will be expanding on documentation, and
fixing any critical issues brought to our attention.</xhtml:p>
<xhtml:p>Again, <xhtml:strong>DO</xhtml:strong> please test your applications on this
RC, as we would like to ensure that it remains backwards
compatible, and that the migration path is smooth.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
