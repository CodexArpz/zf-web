<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog Entries - ZF Blog</title>
  <updated>2016-04-12T17:45:00+00:00</updated>
  <generator uri="http://framework.zend.com" version="2">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://framework.zend.com/blog.html"/>
  <link rel="self" type="application/atom+xml" href="http://framework.zend.com/blog-atom.xml"/>
  <id>http://framework.zend.com/blog.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Issues, Tags, and Closures (oh my)]]></title>
    <published>2016-04-12T17:45:00+00:00</published>
    <updated>2016-04-12T17:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-04-11-issue-closures.html"/>
    <id>http://framework.zend.com/blog/2016-04-11-issue-closures.html</id>
    <author>
      <name>Gary Hockin</name>
      <email>gary@hock.in</email>
      <uri>https://blog.hock.in/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>Hello Zend Frameworkians.</xhtml:p>
<xhtml:p>I want to make you aware of some upcoming changes to the issues
that are currently logged in GitHub. We currently have 426 open
issues that are logged against the (now) meta <xhtml:a href="https://github.com/zendframework/zf2">zf2 repository</xhtml:a>. The vast
majority of these are now in the wrong place, as we've split our
once monolithic single repository into the many single component
repositories. These issues should be moved from the zf2 repository
to the correct component that the issue relates to.</xhtml:p>
<xhtml:p>In preparation for this, we've been doing a little housekeeping
and have already closed a few minor issues that have been open
since before we even used GitHub for issue tracking. Matthew,
Enrico and I also had a long discussion at Midwest PHP on the best
way to handle these issues, and we came up with a plan of attack
that hopefully will allow us to close off a bunch of historical
issues that are no longer relevant, and then move issues that need
to be moved to the correct place.</xhtml:p>
<xhtml:p>You may have noticed that over the last few weeks, a number of
issues have been tagged with the new label of "To Be Closed". These
are issues that have been open for a number of years and still
haven't been fixed. Its probable that a number of these issues
<xhtml:em>should not be closed</xhtml:em> as they are still relevant all this
time later (after all, just because an issue has been open for many
years does not mean that it will never be addressed). However, at
some point these issues need to be triaged so that issues that are
old and not relevant can be closed, and this is the convenient
time.</xhtml:p>
<xhtml:p>So, in early may, all the issues that are tagged with "To Be
Closed" will be closed. <xhtml:strong>If you feel an issue needs to
remain open for any reason, then please comment on the issue with a
mention of my username (GeeH)</xhtml:strong>. I will then remove the "To
Be Closed" tag. Next, no sooner than the 3rd May 2016, we will run
a script that will automatically close every tagged issue,
commenting on it to advise the original author to re-open an issue
on the correct repository if they feel that issue is still
valid.</xhtml:p>
<xhtml:p>Once this has been done, we will be left with around 100-150
issues by my estimation. Most of these have already been labelled
with the correct repository to move them to (thanks to the sterling
work of the community). The next step will be to run a script that
opens a new issue with the same body text on the correct
repository, adding a link to the original issue on the central zf2
repo. A comment will be added referencing the new issue on the
original, and the original will be closed.</xhtml:p>
<xhtml:p>Hopefully, once this process is complete, we will be left with a
few issues that are either in the right place (after all, some
issues will relate to the meta package on the zf2 repository), or
can be moved by hand.</xhtml:p>
<xhtml:blockquote>
<xhtml:h2>TLDR</xhtml:h2>
</xhtml:blockquote>
<xhtml:blockquote>
<xhtml:p>You need to comment on an issue mentioning <xhtml:em>GeeH</xhtml:em> BEFORE
the 3rd May 2016 to ensure it remains open after that date (if it's
currently tagged <xhtml:a href="https://github.com/zendframework/zf2/issues?q=is:open+is:issue+label:%22To+Be+Closed%22">
"To Be Closed"</xhtml:a>).</xhtml:p>
</xhtml:blockquote>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-03-24]]></title>
    <published>2016-03-24T20:45:00+00:00</published>
    <updated>2016-03-24T20:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-03-24-zf3-update.html"/>
    <id>http://framework.zend.com/blog/2016-03-24-zf3-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of posts on ZF3
development status. It's been more than a month since the last
update, and we've been quite busy with:</xhtml:p>
<xhtml:ul>
<xhtml:li>~160 pull requests merged, and ~125 issues closed.</xhtml:li>
<xhtml:li>~60 component releases.</xhtml:li>
<xhtml:li>Completion of the zend-servicemanager/zend-eventmanager
migrations.</xhtml:li>
<xhtml:li>Completion of the component/module installer.</xhtml:li>
<xhtml:li>Progress on the zend-mvc version 3 changes, including
separation of routing and console tooling to separate
packages.</xhtml:li>
<xhtml:li>Publication of documentation for 5 components to GitHub
Pages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Compatibility Migrations</xhtml:h2>
<xhtml:p>During the first week of March, we completed the forwards
compatibility migrations of components. As a reminder, we were
working on updating components that depend on any of:</xhtml:p>
<xhtml:ul>
<xhtml:li>zend-eventmanager</xhtml:li>
<xhtml:li>zend-servicemanager</xhtml:li>
<xhtml:li>zend-stdlib</xhtml:li>
</xhtml:ul>
<xhtml:p>to be forwards compatible with the version 3 releases of each.
In particular, the first two have version 2 releases that allow
developers to make their code forwards compatible with the version
3 releases, and we were doing precisely that with the various Zend
Framework components. As of 2 March 2016, we completed this task â€”
a major milestone in the ZF3 initiative!</xhtml:p>
<xhtml:p>The following component releases were made since the <xhtml:a href="/blog/2016-02-12-zf3-biweekly-update.html">last blog update</xhtml:a>
and mark the current stable versions that are forwards compatible
with the v3 releases:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-authentication/releases/tag/2.5.3">
zend-authentication 2.5.3</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-barcode/releases/tag/2.6.0">zend-barcode
2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-captcha/releases/tag/2.5.4">zend-captcha
2.5.4</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-db/releases/tag/2.7.0">zend-db
2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-eventmanager/releases/tag/3.0.1">
zend-eventmanager 3.0.1</xhtml:a> (which updates the component to use
zend-stdlib v3)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-file/releases/tag/2.6.1">zend-file
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-form/releases/tag/2.7.0">zend-form
2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-hydrator/releases/tag/1.1.0">
zend-hydrator 1.1.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-hydrator/releases/tag/2.1.0">
zend-hydrator 2.1.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-inputfilter/releases/tag/2.6.0">
zend-inputfilter 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/releases/tag/2.7.1">zend-log
2.7.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mail/releases/tag/2.6.1">zend-mail
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-modulemanager/releases/tag/2.7.1">
zend-modulemanager 2.7.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mvc/releases/tag/2.7.3">zend-mvc
2.7.3</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-navigation/releases/tag/2.6.1">
zend-navigation 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-paginator/releases/tag/2.6.0">
zend-paginator 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-progressbar/releases/tag/2.5.2">
zend-progressbar 2.5.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-session/releases/tag/2.6.2">zend-session
2.6.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-test/releases/tag/2.6.1">zend-test
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-uri/releases/tag/2.5.2">zend-uri
2.5.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-validator/releases/tag/2.6.0">
zend-validator 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-view/releases/tag/2.6.5">zend-view
2.6.5</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>In addition to the migration changes, we made a number of other
updates to zend-mvc, including:</xhtml:p>
<xhtml:ul>
<xhtml:li>addition of a new <xhtml:code>MiddlewareListener</xhtml:code>, allowing
routing to PSR-7 middleware in the MVC layer.</xhtml:li>
<xhtml:li>modifications to the <xhtml:code>EventManagerAwareInterface</xhtml:code>
initializers; since shared managers are injected in
<xhtml:code>EventManager</xhtml:code> instances via the constructor in
zend-eventmanager v3, the initializers needed changes in order to
work with both v2 and v3.</xhtml:li>
<xhtml:li><xhtml:code>AbstractController::getServiceLocator()</xhtml:code> now raises
an <xhtml:code>E_USER_DEPRECATED</xhtml:code> notice. zend-servicemanager v3
removes the <xhtml:code>ServiceLocatorAwareInterface</xhtml:code>, and zend-mvc
will remove the implementations with version 3. Users should start
updating their controllers to accept dependencies via constructor
injection.</xhtml:li>
</xhtml:ul>
<xhtml:p>The above are messaged in more detail in the <xhtml:a href="http://zendframework.github.io/zend-mvc/migration/">zend-mvc
migration guide</xhtml:a>.</xhtml:p>
<xhtml:h2>Component / Module Installer</xhtml:h2>
<xhtml:p>One goal for zend-mvc is to reduce the number of dependencies.
Much of the functionality within zend-mvc is not directly related
to execution of the MVC, but rather integrating components.
Typically this is done by either providing and wiring factories for
components, or providing and/or wiring event listeners for
components.</xhtml:p>
<xhtml:p>We already have functionality that allows doing these tasks via
the zend-modulemanager component, which means we can expose
components as application modules. However, this creates an
installation issue: just like modules, you would need to:</xhtml:p>
<xhtml:ol>
<xhtml:li>Install the package containing the module.</xhtml:li>
<xhtml:li>Enable the module in your application.</xhtml:li>
</xhtml:ol>
<xhtml:p>To automate the second task, we developed <xhtml:a href="https://zendframework.github.io/zend-component-installer">zend-component-installer</xhtml:a>
back in December. As part of the current milestones, we completed
that component, by making the following changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>It now acts as a <xhtml:a href="https://getcomposer.org/doc/articles/plugins.md">composer
plugin</xhtml:a>. You install it as a development dependency, and it will
then inspect any package you install to see if it can handle
installation tasks. This vastly simplifies the previous iteration,
which required downloading a self-updating PHAR to install the
composer scripts within an application.</xhtml:li>
<xhtml:li>It now prompts you to ask which file to inject the detected
component or module into, allowing you to choose from:
<xhtml:ul>
<xhtml:li><xhtml:code>config/application.config.php</xhtml:code> (vanilla zend-mvc
application)</xhtml:li>
<xhtml:li><xhtml:code>config/modules.config.php</xhtml:code> (Apigility
application)</xhtml:li>
<xhtml:li><xhtml:code>config/development.config.php</xhtml:code> (application using
zend-development-mode)</xhtml:li>
<xhtml:li><xhtml:code>config/config.php</xhtml:code> (for Expressive users using the
expressive-config-manager)</xhtml:li>
<xhtml:li>or "do not inject".</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>It now prompts you to ask if you want to use the selection made
on additional packages being installed.</xhtml:li>
</xhtml:ul>
<xhtml:p>We've become quite excited about the possibilities Composer
plugins and installer scripts offer, and plan to leverage them as
much as possible!</xhtml:p>
<xhtml:h2>zend-mvc v3 progress</xhtml:h2>
<xhtml:p>Several weeks ago, we created a <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
detailed plan for the zend-mvc v3 refactor</xhtml:a>. The work is
primarily around reducing the number of dependencies zend-mvc
requires; the above work on the component installer directly
enables these changes, but much more needs to be done.</xhtml:p>
<xhtml:p>Since we posted that, we've also started work on the various
milestones it details. In particular, we've done the following:</xhtml:p>
<xhtml:ul>
<xhtml:li>Created the <xhtml:a href="https://zendframework.github.io/zend-router/">zend-router</xhtml:a>
component, to provide all routing capabilities. This reduces the
amount of code in zend-mvc tremendously, and also makes it easier
to re-use routing in other projects (e.g., <xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/pull/6">
zend-expressive-zendrouter</xhtml:a>). We also removed console routing
from the component, letting it focus on HTTP routing only (more on
this).</xhtml:li>
<xhtml:li>Created the <xhtml:a href="https://zendframework.github.io/zend-mvc-console/">zend-mvc-console</xhtml:a>
component, to provide integration between zend-console, zend-mvc,
zend-router, and zend-view. Essentially, all console-related
functionality from zend-mvc, zend-router, and zend-view were pushed
into this component.</xhtml:li>
<xhtml:li>Created <xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a>,
which makes a standalone component out of the <xhtml:code>prg()</xhtml:code>
controller plugin. This is the first of <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components#split-out-some-controller-plugins">
several component plugins</xhtml:a> being developed.</xhtml:li>
</xhtml:ul>
<xhtml:p>As part of this effort, we are <xhtml:a href="https://github.com/zendframework/zend-mvc/blob/develop/doc/book/migration/to-v3-0.md">
documenting migration steps</xhtml:a> needed by end-users, to ensure that
developers will be able to update their applications once version 3
is tagged.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>The documentation effort was put on the back-burner during these
past few weeks so that we can focus on the development efforts.
Regardless, we managed to publish 5 components to GitHub Pages:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-barcode/">zend-barcode</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc/">zend-mvc</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-console/">zend-mvc-console</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-router/">zend-router</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, a number of contributors, and notably <xhtml:a href="http://www.froschdesignstudio.de">Frank BrÃ¼ckner</xhtml:a>, have been
providing patches to resolve issues created following the automated
documentation migration.</xhtml:p>
<xhtml:h2>Diactoros, Stratigility, and Expressive</xhtml:h2>
<xhtml:p>A fair number of issues and feature patches have been reported
on the <xhtml:a href="https://github.com/zendframework/zend-diactoros">Diactoros
(PSR-7)</xhtml:a>, <xhtml:a href="https://github.com/zendframework/zend-stratigility">Stratigility
(PSR-7 middleware foundation)</xhtml:a>, and <xhtml:a href="https://zendframework.github.io/zend-expressive/">Expressive</xhtml:a>
projects, and we had a short sprint to resolve these.</xhtml:p>
<xhtml:ul>
<xhtml:li>The latest version of Diactoros is <xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.5">
1.3.5</xhtml:a>, and it incorporates around 20 bugfixes and documentation
fixes; among others, if fixes detection of HTTP/2 requests in the
<xhtml:code>ServerRequestFactory</xhtml:code>.</xhtml:li>
<xhtml:li>The latest version of Stratigiliy, <xhtml:a href="https://github.com/zendframework/zend-stratigility/releases/tag/1.2.0">
1.2.0</xhtml:a>, makes the behavior of its internal <xhtml:code>Response</xhtml:code>
class less error-prone following calls to <xhtml:code>end()</xhtml:code>.
Additionally, it:
<xhtml:ul>
<xhtml:li>ensures that exception details are not emitted in production
mode, and makes production mode the default.</xhtml:li>
<xhtml:li>adds a <xhtml:code>FinalHandler::setOriginalResponse()</xhtml:code> method,
to allow injection after instantiation.</xhtml:li>
<xhtml:li>adds support for catching <xhtml:code>Throwable</xhtml:code> errors in PHP
7 applications within the dispatcher.</xhtml:li>
<xhtml:li>provides a more meaningful
<xhtml:code>InvalidMiddlewareException</xhtml:code> that is raised by
<xhtml:code>MiddlewarePipe::pipe()</xhtml:code> for non-callable
middleware.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/releases/tag/1.0.1">
zend-expressive-skeleton</xhtml:a> provides a number of fixes:
<xhtml:ul>
<xhtml:li>It updates the Pimple container script to cache factory
instances for re-use.</xhtml:li>
<xhtml:li>It updates the <xhtml:code>composer.json</xhtml:code> to allow installing
zend-servicemanager v3, whoops v2, and ProxyManager v2.</xhtml:li>
<xhtml:li>It fixes an issue in the installer whereby specified
constraints were not being passed to Composer prior to dependency
resolution, resulting in stale dependencies.</xhtml:li>
<xhtml:li>It removes error/exception display from the shipped default
error templates, to make them secure by default.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendviewrenderer/releases/tag/1.1.0">
zend-expressive-zendviewrenderer 1.1.0</xhtml:a> updates the component to
be forward-compatible with the zend-servicemanager and
zend-eventmanager v3 releases.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/releases/tag/1.1.0">
zend-expressive-zendrouter 1.1.0</xhtml:a> updates the component to
depend on zend-router instead of zend-mvc.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Pull request and issue activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+is:merged+org:zendframework+closed:%222016-02-12+..+2016-03-24%22">
merged around 160 pull requests</xhtml:a>, and <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+closed:%222016-02-12+..+2016-03-24%22+">
resolved around 125 issues</xhtml:a>. (links require a GitHub
account).</xhtml:p>
<xhtml:p>Unlike previous posts, we are not detailing every component
release this time; the sheer number of them (around 60!) would
result in a very long read!</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>You can help with the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
MVC milestone</xhtml:a>; the linked page provides plenty of detail on how
you can assist.</xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases since the last update!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-03-24]]></title>
    <published>2016-03-24T20:45:00+00:00</published>
    <updated>2016-03-24T20:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-03-24-zf3-update.html"/>
    <id>http://framework.zend.com/blog/2016-03-24-zf3-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of posts on ZF3
development status. It's been more than a month since the last
update, and we've been quite busy with:</xhtml:p>
<xhtml:ul>
<xhtml:li>~160 pull requests merged, and ~125 issues closed.</xhtml:li>
<xhtml:li>~60 component releases.</xhtml:li>
<xhtml:li>Completion of the zend-servicemanager/zend-eventmanager
migrations.</xhtml:li>
<xhtml:li>Completion of the component/module installer.</xhtml:li>
<xhtml:li>Progress on the zend-mvc version 3 changes, including
separation of routing and console tooling to separate
packages.</xhtml:li>
<xhtml:li>Publication of documentation for 5 components to GitHub
Pages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Compatibility Migrations</xhtml:h2>
<xhtml:p>During the first week of March, we completed the forwards
compatibility migrations of components. As a reminder, we were
working on updating components that depend on any of:</xhtml:p>
<xhtml:ul>
<xhtml:li>zend-eventmanager</xhtml:li>
<xhtml:li>zend-servicemanager</xhtml:li>
<xhtml:li>zend-stdlib</xhtml:li>
</xhtml:ul>
<xhtml:p>to be forwards compatible with the version 3 releases of each.
In particular, the first two have version 2 releases that allow
developers to make their code forwards compatible with the version
3 releases, and we were doing precisely that with the various Zend
Framework components. As of 2 March 2016, we completed this task â€”
a major milestone in the ZF3 initiative!</xhtml:p>
<xhtml:p>The following component releases were made since the <xhtml:a href="/blog/2016-02-12-zf3-biweekly-update.html">last blog update</xhtml:a>
and mark the current stable versions that are forwards compatible
with the v3 releases:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-authentication/releases/tag/2.5.3">
zend-authentication 2.5.3</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-barcode/releases/tag/2.6.0">zend-barcode
2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-captcha/releases/tag/2.5.4">zend-captcha
2.5.4</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-db/releases/tag/2.7.0">zend-db
2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-eventmanager/releases/tag/3.0.1">
zend-eventmanager 3.0.1</xhtml:a> (which updates the component to use
zend-stdlib v3)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-file/releases/tag/2.6.1">zend-file
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-form/releases/tag/2.7.0">zend-form
2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-hydrator/releases/tag/1.1.0">
zend-hydrator 1.1.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-hydrator/releases/tag/2.1.0">
zend-hydrator 2.1.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-inputfilter/releases/tag/2.6.0">
zend-inputfilter 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/releases/tag/2.7.1">zend-log
2.7.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mail/releases/tag/2.6.1">zend-mail
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-modulemanager/releases/tag/2.7.1">
zend-modulemanager 2.7.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mvc/releases/tag/2.7.3">zend-mvc
2.7.3</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-navigation/releases/tag/2.6.1">
zend-navigation 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-paginator/releases/tag/2.6.0">
zend-paginator 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-progressbar/releases/tag/2.5.2">
zend-progressbar 2.5.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-session/releases/tag/2.6.2">zend-session
2.6.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-test/releases/tag/2.6.1">zend-test
2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-uri/releases/tag/2.5.2">zend-uri
2.5.2</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-validator/releases/tag/2.6.0">
zend-validator 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-view/releases/tag/2.6.5">zend-view
2.6.5</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>In addition to the migration changes, we made a number of other
updates to zend-mvc, including:</xhtml:p>
<xhtml:ul>
<xhtml:li>addition of a new <xhtml:code>MiddlewareListener</xhtml:code>, allowing
routing to PSR-7 middleware in the MVC layer.</xhtml:li>
<xhtml:li>modifications to the <xhtml:code>EventManagerAwareInterface</xhtml:code>
initializers; since shared managers are injected in
<xhtml:code>EventManager</xhtml:code> instances via the constructor in
zend-eventmanager v3, the initializers needed changes in order to
work with both v2 and v3.</xhtml:li>
<xhtml:li><xhtml:code>AbstractController::getServiceLocator()</xhtml:code> now raises
an <xhtml:code>E_USER_DEPRECATED</xhtml:code> notice. zend-servicemanager v3
removes the <xhtml:code>ServiceLocatorAwareInterface</xhtml:code>, and zend-mvc
will remove the implementations with version 3. Users should start
updating their controllers to accept dependencies via constructor
injection.</xhtml:li>
</xhtml:ul>
<xhtml:p>The above are messaged in more detail in the <xhtml:a href="http://zendframework.github.io/zend-mvc/migration/">zend-mvc
migration guide</xhtml:a>.</xhtml:p>
<xhtml:h2>Component / Module Installer</xhtml:h2>
<xhtml:p>One goal for zend-mvc is to reduce the number of dependencies.
Much of the functionality within zend-mvc is not directly related
to execution of the MVC, but rather integrating components.
Typically this is done by either providing and wiring factories for
components, or providing and/or wiring event listeners for
components.</xhtml:p>
<xhtml:p>We already have functionality that allows doing these tasks via
the zend-modulemanager component, which means we can expose
components as application modules. However, this creates an
installation issue: just like modules, you would need to:</xhtml:p>
<xhtml:ol>
<xhtml:li>Install the package containing the module.</xhtml:li>
<xhtml:li>Enable the module in your application.</xhtml:li>
</xhtml:ol>
<xhtml:p>To automate the second task, we developed <xhtml:a href="https://zendframework.github.io/zend-component-installer">zend-component-installer</xhtml:a>
back in December. As part of the current milestones, we completed
that component, by making the following changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>It now acts as a <xhtml:a href="https://getcomposer.org/doc/articles/plugins.md">composer
plugin</xhtml:a>. You install it as a development dependency, and it will
then inspect any package you install to see if it can handle
installation tasks. This vastly simplifies the previous iteration,
which required downloading a self-updating PHAR to install the
composer scripts within an application.</xhtml:li>
<xhtml:li>It now prompts you to ask which file to inject the detected
component or module into, allowing you to choose from:
<xhtml:ul>
<xhtml:li><xhtml:code>config/application.config.php</xhtml:code> (vanilla zend-mvc
application)</xhtml:li>
<xhtml:li><xhtml:code>config/modules.config.php</xhtml:code> (Apigility
application)</xhtml:li>
<xhtml:li><xhtml:code>config/development.config.php</xhtml:code> (application using
zend-development-mode)</xhtml:li>
<xhtml:li><xhtml:code>config/config.php</xhtml:code> (for Expressive users using the
expressive-config-manager)</xhtml:li>
<xhtml:li>or "do not inject".</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>It now prompts you to ask if you want to use the selection made
on additional packages being installed.</xhtml:li>
</xhtml:ul>
<xhtml:p>We've become quite excited about the possibilities Composer
plugins and installer scripts offer, and plan to leverage them as
much as possible!</xhtml:p>
<xhtml:h2>zend-mvc v3 progress</xhtml:h2>
<xhtml:p>Several weeks ago, we created a <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
detailed plan for the zend-mvc v3 refactor</xhtml:a>. The work is
primarily around reducing the number of dependencies zend-mvc
requires; the above work on the component installer directly
enables these changes, but much more needs to be done.</xhtml:p>
<xhtml:p>Since we posted that, we've also started work on the various
milestones it details. In particular, we've done the following:</xhtml:p>
<xhtml:ul>
<xhtml:li>Created the <xhtml:a href="https://zendframework.github.io/zend-router/">zend-router</xhtml:a>
component, to provide all routing capabilities. This reduces the
amount of code in zend-mvc tremendously, and also makes it easier
to re-use routing in other projects (e.g., <xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/pull/6">
zend-expressive-zendrouter</xhtml:a>). We also removed console routing
from the component, letting it focus on HTTP routing only (more on
this).</xhtml:li>
<xhtml:li>Created the <xhtml:a href="https://zendframework.github.io/zend-mvc-console/">zend-mvc-console</xhtml:a>
component, to provide integration between zend-console, zend-mvc,
zend-router, and zend-view. Essentially, all console-related
functionality from zend-mvc, zend-router, and zend-view were pushed
into this component.</xhtml:li>
<xhtml:li>Created <xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a>,
which makes a standalone component out of the <xhtml:code>prg()</xhtml:code>
controller plugin. This is the first of <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components#split-out-some-controller-plugins">
several component plugins</xhtml:a> being developed.</xhtml:li>
</xhtml:ul>
<xhtml:p>As part of this effort, we are <xhtml:a href="https://github.com/zendframework/zend-mvc/blob/develop/doc/book/migration/to-v3-0.md">
documenting migration steps</xhtml:a> needed by end-users, to ensure that
developers will be able to update their applications once version 3
is tagged.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>The documentation effort was put on the back-burner during these
past few weeks so that we can focus on the development efforts.
Regardless, we managed to publish 5 components to GitHub Pages:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-barcode/">zend-barcode</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc/">zend-mvc</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-console/">zend-mvc-console</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-mvc-plugin-prg/">zend-mvc-plugin-prg</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-router/">zend-router</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, a number of contributors, and notably <xhtml:a href="http://www.froschdesignstudio.de">Frank BrÃ¼ckner</xhtml:a>, have been
providing patches to resolve issues created following the automated
documentation migration.</xhtml:p>
<xhtml:h2>Diactoros, Stratigility, and Expressive</xhtml:h2>
<xhtml:p>A fair number of issues and feature patches have been reported
on the <xhtml:a href="https://github.com/zendframework/zend-diactoros">Diactoros
(PSR-7)</xhtml:a>, <xhtml:a href="https://github.com/zendframework/zend-stratigility">Stratigility
(PSR-7 middleware foundation)</xhtml:a>, and <xhtml:a href="https://zendframework.github.io/zend-expressive/">Expressive</xhtml:a>
projects, and we had a short sprint to resolve these.</xhtml:p>
<xhtml:ul>
<xhtml:li>The latest version of Diactoros is <xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.5">
1.3.5</xhtml:a>, and it incorporates around 20 bugfixes and documentation
fixes; among others, if fixes detection of HTTP/2 requests in the
<xhtml:code>ServerRequestFactory</xhtml:code>.</xhtml:li>
<xhtml:li>The latest version of Stratigiliy, <xhtml:a href="https://github.com/zendframework/zend-stratigility/releases/tag/1.2.0">
1.2.0</xhtml:a>, makes the behavior of its internal <xhtml:code>Response</xhtml:code>
class less error-prone following calls to <xhtml:code>end()</xhtml:code>.
Additionally, it:
<xhtml:ul>
<xhtml:li>ensures that exception details are not emitted in production
mode, and makes production mode the default.</xhtml:li>
<xhtml:li>adds a <xhtml:code>FinalHandler::setOriginalResponse()</xhtml:code> method,
to allow injection after instantiation.</xhtml:li>
<xhtml:li>adds support for catching <xhtml:code>Throwable</xhtml:code> errors in PHP
7 applications within the dispatcher.</xhtml:li>
<xhtml:li>provides a more meaningful
<xhtml:code>InvalidMiddlewareException</xhtml:code> that is raised by
<xhtml:code>MiddlewarePipe::pipe()</xhtml:code> for non-callable
middleware.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/releases/tag/1.0.1">
zend-expressive-skeleton</xhtml:a> provides a number of fixes:
<xhtml:ul>
<xhtml:li>It updates the Pimple container script to cache factory
instances for re-use.</xhtml:li>
<xhtml:li>It updates the <xhtml:code>composer.json</xhtml:code> to allow installing
zend-servicemanager v3, whoops v2, and ProxyManager v2.</xhtml:li>
<xhtml:li>It fixes an issue in the installer whereby specified
constraints were not being passed to Composer prior to dependency
resolution, resulting in stale dependencies.</xhtml:li>
<xhtml:li>It removes error/exception display from the shipped default
error templates, to make them secure by default.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendviewrenderer/releases/tag/1.1.0">
zend-expressive-zendviewrenderer 1.1.0</xhtml:a> updates the component to
be forward-compatible with the zend-servicemanager and
zend-eventmanager v3 releases.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/releases/tag/1.1.0">
zend-expressive-zendrouter 1.1.0</xhtml:a> updates the component to
depend on zend-router instead of zend-mvc.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Pull request and issue activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+is:merged+org:zendframework+closed:%222016-02-12+..+2016-03-24%22">
merged around 160 pull requests</xhtml:a>, and <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+closed:%222016-02-12+..+2016-03-24%22+">
resolved around 125 issues</xhtml:a>. (links require a GitHub
account).</xhtml:p>
<xhtml:p>Unlike previous posts, we are not detailing every component
release this time; the sheer number of them (around 60!) would
result in a very long read!</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>You can help with the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/zend-mvc-v3-refactor:-reduce-components">
MVC milestone</xhtml:a>; the linked page provides plenty of detail on how
you can assist.</xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases since the last update!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-02-12]]></title>
    <published>2016-02-12T17:40:00+00:00</published>
    <updated>2016-02-12T17:40:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-02-12-zf3-biweekly-update.html"/>
    <id>http://framework.zend.com/blog/2016-02-12-zf3-biweekly-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of bi-weekly posts
on ZF3 development status.</xhtml:p>
<xhtml:p>The highlights:</xhtml:p>
<xhtml:ul>
<xhtml:li>~60 pull requests merged, and ~100 issues closed.</xhtml:li>
<xhtml:li>Another v3 release: zend-stdlib!</xhtml:li>
<xhtml:li>16 components updated to
zend-servicemanager/zend-eventmanager/zend-stdlib v3 changes, and
tagged with stable releases.</xhtml:li>
<xhtml:li>25 component releases.</xhtml:li>
<xhtml:li>Publication of documentation for 13 components to GitHub
Pages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>New 3.0 versions</xhtml:h2>
<xhtml:p>We released another component with version 3.0 stability,
<xhtml:a href="https://zendframework.github.io/zend-stdlib/">zend-stdlib</xhtml:a>.
This release got the major version bump for a number of
reasons:</xhtml:p>
<xhtml:ul>
<xhtml:li>Per version 2.7.0, the hydrator sub-component was deprecated
(it has been moved into its own component, <xhtml:a href="https://github.com/zendframework/zend-hydrator">zend-hydrator</xhtml:a>).
With the new major version, we were able to remove it.</xhtml:li>
<xhtml:li>A number of features existed as polyfills to provide
forwards-compatibility support from PHP 5.3 or PHP 5.4 to later PHP
versions. Since we now support only PHP 5.5+, we could remove
these.</xhtml:li>
</xhtml:ul>
<xhtml:p>Unless a component depends specifically on the hydrators, it's
essentially <xhtml:em>already</xhtml:em> forwards-compatible with the new
version 3! As such, we'll be gradually updating components that
depend on zend-stdlib to depend on <xhtml:code>^2.7 || ^3.0</xhtml:code>.</xhtml:p>
<xhtml:h2>Compatibility Migrations</xhtml:h2>
<xhtml:p>The past two weeks have been heavily focused on preparing
components to be forwards compatible with the version 3 releases of
zend-stdlib, zend-eventmanager, and zend-servicemanager. We had
several breakthroughs that are enabling these migrations.</xhtml:p>
<xhtml:p>First, we can test the different versions via additional
Travis-CI jobs. As an example, consider these PHP 5.5 entries from
the zend-cache test matrix:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-yaml">matrix:
  include:
    - php: 5.5
      env:
        - EXECUTE_CS_CHECK=true
        - PECL_INSTALL_APCU='apcu-4.0.8'
    - php: 5.5
      env:
        - SERVICE_MANAGER_VERSION="^2.7.5"
        - EVENT_MANAGER_VERSION="^2.6.2"
        - PECL_INSTALL_APCU='apcu-4.0.8'
</xhtml:code>
</xhtml:pre>
<xhtml:p>Note that in the second entry, we specify specific v2 versions
of zend-eventmanager and zend-servicemanager to use.</xhtml:p>
<xhtml:p>Later, in our <xhtml:code>before_install</xhtml:code> section, we do the
following:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-yaml">before_install:
  - if [[ $SERVICE_MANAGER_VERSION != '' ]]; then composer require --no-update "zendframework/zend-servicemanager:$SERVICE_MANAGER_VERSION" ; fi
  - if [[ $SERVICE_MANAGER_VERSION == '' ]]; then composer require --no-update "zendframework/zend-servicemanager:^3.0.3" ; fi
  - if [[ $SERVICE_MANAGER_VERSION == '' ]]; then composer remove --dev --no-update zendframework/zend-session ; fi
  - if [[ $EVENT_MANAGER_VERSION != '' ]]; then composer require --no-update "zendframework/zend-eventmanager:$EVENT_MANAGER_VERSION" ; fi
  - if [[ $EVENT_MANAGER_VERSION == '' ]]; then composer require --no-update "zendframework/zend-eventmanager:^3.0" ; fi
</xhtml:code>
</xhtml:pre>
<xhtml:p>Essentially, we have two builds. One against the v2 components,
and one against the v3 components; the items above force one or the
other for the particular build. This allows us to verify that the
code works against both versions, and that any later changes
require that both versions continue to work.</xhtml:p>
<xhtml:p>What about that line to <xhtml:em>remove</xhtml:em> dependencies,
though?</xhtml:p>
<xhtml:p>The tricky part of migration has been unravelling dependencies.
If a dependency of a component being migrated <xhtml:em>also</xhtml:em> depends
on one of the updated components, we have to wait until the
dependency is migrated. Or do we?</xhtml:p>
<xhtml:p>In many cases, these dependencies are marked as
<xhtml:em>suggestions</xhtml:em>, and as <xhtml:em>development</xhtml:em> dependencies
only; they are not <xhtml:em>hard requirements</xhtml:em> of the component.
Realizing this, we discovered the following workflow:</xhtml:p>
<xhtml:ul>
<xhtml:li>We can remove dependencies when testing against v3 components
<xhtml:strong>if</xhtml:strong>:
<xhtml:ul>
<xhtml:li>the dependency is not yet migrated</xhtml:li>
<xhtml:li>the dependency is <xhtml:em>optional</xhtml:em> (only listed in
<xhtml:code>require-dev</xhtml:code> and/or <xhtml:code>suggest</xhtml:code>)</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>We can update the tests to skip tests that depend on those
particular components <xhtml:em>if classes or interfaces from that
component are missing</xhtml:em>.</xhtml:li>
</xhtml:ul>
<xhtml:p>This means that we're testing specifically that the
<xhtml:em>current</xhtml:em> component is forwards-compatible with the new
versions. Later, once those dependencies are updated, we can
re-enable those tests.</xhtml:p>
<xhtml:p>Finally, a contributor wrote a trait that we can compose in
plugin manager tests to verify that a plugin manager implementation
is both v2 and v3 compatible. By adding these to components, we're
able to verify with much more confidence that the code works on
both versions.</xhtml:p>
<xhtml:p>With these findings and tools in place, we were able to complete
migration of 16 components these past two weeks, tagging each with
new stable versions! These include:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-math/releases/tag/release-2.6.0">
zend-math 2.6.0</xhtml:a> (technically, this one <xhtml:em>removes</xhtml:em> the
dependency on zend-servicemanager, as it was an internal detail,
and not necessary)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-serializer/releases/tag/release-2.6.0">
zend-serializer 2.6.0</xhtml:a> / <xhtml:a href="https://github.com/zendframework/zend-serializer/releases/tag/release-2.6.1">
zend-serializer 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-tag/releases/tag/release-2.6.0">
zend-tag 2.6.0</xhtml:a> / <xhtml:a href="https://github.com/zendframework/zend-tag/releases/tag/release-2.6.1">
zend-tag 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-permissions-acl/releases/tag/release-2.6.0">
zend-permissions-acl 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-crypt/releases/tag/release-2.6.0">
zend-crypt 2.6.0</xhtml:a> (this one replaces zend-servicemanager with
container-interop)</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-filter/releases/tag/release-2.6.0">
zend-filter 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-http/releases/tag/release-2.5.4">
zend-http 2.5.4</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-server/releases/tag/release-2.6.1">
zend-server 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-json/releases/tag/release-2.6.1">
zend-json 2.6.1</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-config/releases/tag/release-2.6.0">
zend-config 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-text/releases/tag/release-2.6.0">
zend-text 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-console/releases/tag/release-2.6.0">
zend-console 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/releases/tag/release-2.7.0">
zend-log 2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-i18n/releases/tag/release-2.6.0">
zend-i18n 2.6.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-feed/releases/tag/release-2.7.0">
zend-feed 2.7.0</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-cache/releases/tag/release-2.6.0">
zend-cache 2.6.0</xhtml:a> / <xhtml:a href="https://github.com/zendframework/zend-cache/releases/tag/release-2.6.1">
zend-cache 2.6.1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>We've made every effort to ensure that these releases continue
to work with existing version 2 functionality; however,
occasionally, errors occur. If you notice such errors, please
report them as soon as you can, with as many details as you can, so
we can correct them. Additionally, please be aware that developers
are fellow human beings, and be respectful in your communication.
Nobody is intentionally trying to break your applications, and
contributors desire a smooth migration for you as well.</xhtml:p>
<xhtml:p>At this point, we're about half-done with the migrations, and of
the remaining half, around half have patches under review. If you
want to assist, please review the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
migrations page</xhtml:a> to see which patches are need review, and where
you might be able to help.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>As noted in <xhtml:a href="/blog/2016-01-28-zf3-biweekly-update.html">our last update</xhtml:a>,
<xhtml:a href="http://blog.hock.in/">Gary Hockin</xhtml:a> performed an
automated migration of our documentation from our reStructuredText
sources to per-component Markdown a few weeks ago, and opened
issues against each component to guide review of the documentation
before publication. We also mentioned a plan to host documentation
via <xhtml:a href="https://pages.github.com/">GitHub Pages</xhtml:a>.</xhtml:p>
<xhtml:p>As part of the migration process, we decided to review and ready
documentation for publication for any component getting a new minor
release. This has resulted in new documentation for the following
13 components!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-servicemanager/">zend-servicemanager</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-stdlib/">zend-stdlib</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-hydrator/">zend-hydrator</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-tag/">zend-tag</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-permissions-acl/">zend-permissions-acl</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-filter/">zend-filter</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-config/">zend-config</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-text/">zend-text</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-console/">zend-console</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-log/">zend-log</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-i18n/">zend-i18n</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-feed/">zend-feed</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://zendframework.github.io/zend-cache/">zend-cache</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>We're very excited about the new documentation, particularly as
it's mobile-friendly, and has in-site search!</xhtml:p>
<xhtml:h2>Pull request and issue activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+is:merged+org:zendframework+closed:%222016-01-28+..+2016-02-12%22+">
merged around 60 pull requests</xhtml:a>, <xhtml:a href="https://github.com/issues?page=2&amp;q=is:issue+org:zendframework+closed:%222016-01-28+..+2016-02-12%22&amp;utf8=%E2%9C%93">
closing over 100 issues</xhtml:a>. (links require a GitHub account).
Activity has been particularly high on documentation issues.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following is a list of component releases since the last
update, minus those noted in the migration section already. While
not all releases are related to ZF3 specifically, this list is
intended to detail activity within the organization.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/releases/tag/1.1.1">
zend-expressive-twigrenderer 1.1.1</xhtml:a> updates the
<xhtml:code>TwigExtension</xhtml:code> to implement
<xhtml:code>Twig_Extension_GlobalsInterface</xhtml:code>, to ensure it is
forwards-compatible with Twig v2.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.5">
zend-servicemanager 2.7.5</xhtml:a> fixes the behavior of the
<xhtml:code>InvokableFactory</xhtml:code> for situations when options are
passed via a plugin manager, and provides tests for validating
plugin managers are ready for both v2 and v3.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.3">
zend-servicemanager 3.0.3</xhtml:a> provides a number of fixes:
<xhtml:ul>
<xhtml:li>cyclical alias detection and reporting.</xhtml:li>
<xhtml:li>skips alias resolution if no aliases are present.</xhtml:li>
<xhtml:li>adds tests to verify plugin managers are v3-ready.</xhtml:li>
<xhtml:li>publishes documentation to GitHub Pages.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/ZendXml/releases/tag/release-1.0.2">
ZendXml 1.0.2</xhtml:a> updates the PHP dependency to <xhtml:code>^5.3.3 ||
^7.0</xhtml:code>, allowing it to work with any ZF component, in any
supported PHP version. It also expands the test matrix to include
PHP 7.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-i18n/releases/tag/release-2.6.0">
zend-i18n 2.6.0</xhtml:a>, while previously noted, also contained the
following changes:
<xhtml:ul>
<xhtml:li>adds support for <xhtml:code>NumberFormatter</xhtml:code> text attributes
when using the <xhtml:code>NumberFormat</xhtml:code> view helper.</xhtml:li>
<xhtml:li>provides updated postal code verifications for Mauritius and
Serbia.</xhtml:li>
<xhtml:li>allows multiple invocations of the <xhtml:code>DateTime</xhtml:code>
validator with different sets of input.</xhtml:li>
<xhtml:li>provides null checks on provided message strings.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>Help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>Also, as noted above, you can assist with <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
refactoring components to support v2 + v3 of
zend-servicemanager</xhtml:a>.</xhtml:li>
<xhtml:li>Search for <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22help+wanted%22+">
help wanted</xhtml:a> or <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:issue+org:zendframework+is:open+label:%22EasyFix%22+">
EasyFix</xhtml:a> issues (most of the latter are documentation).</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases these past two weeks!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-01-28]]></title>
    <published>2016-01-28T16:45:00+00:00</published>
    <updated>2016-01-28T16:45:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-28-zf3-biweekly-update.html"/>
    <id>http://framework.zend.com/blog/2016-01-28-zf3-biweekly-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of bi-weekly posts
on ZF3 development status.</xhtml:p>
<xhtml:p>The highlights:</xhtml:p>
<xhtml:ul>
<xhtml:li>&gt; 70 pull requests merged</xhtml:li>
<xhtml:li>2 components updated to zend-servicemanager/zend-eventmanager
v3 changes</xhtml:li>
<xhtml:li>23 releases of components, <xhtml:strong>including <xhtml:a href="/blog/2016-01-28-expressive-1.0-stable.html">Expressive
1.0</xhtml:a></xhtml:strong>, and new maintenance releases of Apigility and the
ZF2 package.</xhtml:li>
<xhtml:li>Kickstarting of the documentation migration</xhtml:li>
</xhtml:ul>
<xhtml:h2>Expressive 1.0!</xhtml:h2>
<xhtml:p>Following <xhtml:a href="/blog/2016-01-19-expressive-rc6-rc7.html">two</xhtml:a> <xhtml:a href="/blog/2016-01-21-expressive-rc7-rc8.html">final</xhtml:a> release
candidates, and after three months in release candidate status,
we've finally tagged <xhtml:a href="/blog/2016-01-28-expressive-1.0-stable.html">Expressive 1.0
stable</xhtml:a>! Among other things, we've created a <xhtml:a href="https://zendframework.github.io/zend-expressive/">dedicated
documentation site</xhtml:a>, which will update automatically as features
are merged to the project.</xhtml:p>
<xhtml:p>We feel Expressive is the true cornerstone of the ZF3
initiative, and we look forward to seeing the middleware-based
projects people develop using it!</xhtml:p>
<xhtml:h2>ZF2 and Apigility</xhtml:h2>
<xhtml:p>We noted that the <xhtml:code>zendframework/zendframework</xhtml:code>
package, which since 2.5.0 has been a metapackage aggregating the
various independent components, was using <xhtml:code>~2.5.0</xhtml:code> for
component constraints. This is problematic, as many components have
2.6 and even 2.7 versions, and some of those contain security
fixes. To fix this, we released version 2.5.3, which modifies the
component constraints to <xhtml:code>^2.5</xhtml:code>, allowing them to get
the latest 2.X series of any given component.</xhtml:p>
<xhtml:p>We also released version 1.3.2 of Apigility, to bring in some
changes merged many months ago to fix things like DB Autodiscovery,
as well as to pick up the 2.5.3 version of ZF2.</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p><xhtml:a href="http://blog.hock.in">Gary Hockin</xhtml:a> generously donated
some time and wrote scripts to automate translation of individual
component documentation from the ZF2 reStructured Text sources to
markdown, and submitted pull requests across all components, which
we have now merged. These are incomplete; some syntax cannot be
translated correctly, imports within files could not be automated,
etc.</xhtml:p>
<xhtml:p>If you want to assist, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
labeled all documentation tasks</xhtml:a> (link requires github login);
feel free to jump in on the effort!</xhtml:p>
<xhtml:p>We're also working on a plan to host the documentation via
<xhtml:a href="https://pages.github.com">GitHub Pages</xhtml:a>, to allow
constant, up-to-date documentation, based on the work we did for
the Expressive documentation. Most of the tooling for this is now
<xhtml:a href="https://github.com/zendframework/zf-mkdoc-theme">created</xhtml:a>, and
we will be able to start pushing it out to components once their
documentation is ready to publish.</xhtml:p>
<xhtml:h2>Pull request activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+org:zendframework+is:merged+closed:%222016-01-14+..+2016-01-28%22">
merged over 70 pull requests</xhtml:a> (link requires a GitHub account).
Activity has been particularly high on Expressive and documentation
issues.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following is a list of component releasessince the last
update, minus a number of Expressive releases leading to the stable
release. While not all releases are related to ZF3 specifically,
this list is intended to detail activity within the
organization.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-view/releases/tag/release-2.5.3">
zend-view 2.5.3</xhtml:a> adds support for the <xhtml:code>itemprop</xhtml:code> HTML
attribute in the <xhtml:code>headLink()</xhtml:code> view helper, and updates
<xhtml:code>PhpRenderer::render()</xhtml:code> to no longer lazy-instantiate a
<xhtml:code>FilterChain</xhtml:code> if none is already present.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.4">
zend-servicemanager 2.7.4</xhtml:a> fixed an issue with resolving aliases
of aliases due to canonicalization changes in previous
versions.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.1">
zend-servicemanager 3.0.1</xhtml:a> removes the dependency on zend-stdlib
by inlining the <xhtml:code>ArrayUtils::merge()</xhtml:code> routine into the
<xhtml:code>Config</xhtml:code> class.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/releases/tag/1.1.0">
zend-expressive-twigrenderer 1.1.0</xhtml:a> adds several new features:
<xhtml:ul>
<xhtml:li><xhtml:code>url</xhtml:code> and <xhtml:code>absolute_url</xhtml:code> template
functions for generating URL paths and absolute URIs.</xhtml:li>
<xhtml:li>New "globals" configuration for specifying variables to make
available in all templates.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.2">
zend-servicemanager 3.0.2</xhtml:a> fixes an issue whereby the creation
context was not being passed correctly to abstract factories from
plugin managers, and provides a performance boost for alias
resolution.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-code/releases/tag/release-3.0.1">
zend-code 3.0.1</xhtml:a> moves the phpcs dependency to the require-dev
section, and ensures that the method name is required when adding a
method to the class generator.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/releases/tag/1.4.1">
zend-apigility-admin 1.4.1</xhtml:a> fixes an issue in the
<xhtml:code>RpcServiceModel</xhtml:code> to ensure that a correct pattern is
generated when fetching a service by name.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin-ui/releases/tag/1.2.2">
zend-apigility-admin-ui 1.2.2</xhtml:a> fixes a number of issues
discovered, including:
<xhtml:ul>
<xhtml:li>DB Autodiscovery was failing due to inability to properly
select the DB adapter name.</xhtml:li>
<xhtml:li>Custom authentication adapters are now displayed.</xhtml:li>
<xhtml:li>The regex for validating custom content-types was fixed to
ensure it only allows valid MIME type specifications.</xhtml:li>
<xhtml:li>Fixes validation for REST and RPC service names, raising a
warning on invalid input.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>ZF3 Refactors</xhtml:h2>
<xhtml:p>Our refactoring effort has slowed due to our focus on getting
Expressive stabilized, though we're starting to get a number of
community contributions to aid the effort.</xhtml:p>
<xhtml:p>If you wish to assist, please read the <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
ZF3 ServiceManager refactoring guide</xhtml:a>; be sure to edit the wiki
to indicate when you're working on a component, as well as to
indicate the relevant pull request.</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>As noted above, help complete the <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:open+is:issue+org:zendframework+label:documentation+label:EasyFix">
documentation migration</xhtml:a>!</xhtml:li>
<xhtml:li>Also, as noted above, you can assist with <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
refactoring components to support v2 + v3 of
zend-servicemanager</xhtml:a>.</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases these past two weeks!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Expressive 1.0.0 STABLE Released!]]></title>
    <published>2016-01-28T16:00:00+00:00</published>
    <updated>2016-01-28T16:00:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-28-expressive-1.0-stable.html"/>
    <id>http://framework.zend.com/blog/2016-01-28-expressive-1.0-stable.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of <xhtml:a href="https://zendframework.github.io/zend-expressive/">Expressive</xhtml:a>
1.0.0 STABLE!</xhtml:p>
<xhtml:p>You can install it using <xhtml:a href="https://getcomposer.org">Composer</xhtml:a>, via the
<xhtml:code>create-project</xhtml:code> command:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer create-project zendframework/zend-expressive-skeleton expressive
</xhtml:code>
</xhtml:pre>
<xhtml:p>If you were using a release candidate, you can update your
existing applications using:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer require "zendframework/zend-expressive:^1.0"
</xhtml:code>
</xhtml:pre>
<xhtml:h2>What's new in the stable version?</xhtml:h2>
<xhtml:p>Nothing!</xhtml:p>
<xhtml:p>Well, not "nothing". Since last week, we merged a few
documentation fixes, but, more importantly, finalized our
documentation. This included a few changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>Some re-organization, to better categorize the documentation
hierarchy.</xhtml:li>
<xhtml:li>Switching from <xhtml:a href="http://bookdown.io">bookdown</xhtml:a> to
<xhtml:a href="http://www.mkdocs.org">MkDocs</xhtml:a> as our build engine of
choice. We'd already been using MkDocs to publish on <xhtml:a href="http://rtfd.org">ReadTheDocs</xhtml:a>, so this wasn't a huge change.
The choice was made based on stability, maturity, and ecosystem;
MkDocs has been around for quite some time, and enabled us to
accomplish a number of ideas quite quickly.</xhtml:li>
<xhtml:li>Automated publishing to <xhtml:a href="https://pages.github.com">GitHub Pages</xhtml:a>, via Travis-CI. Any
time we push to our master branch, the documentation will be
updated.</xhtml:li>
</xhtml:ul>
<xhtml:p>We're quite proud of <xhtml:a href="https://zendframework.github.io/zend-expressive/">the results</xhtml:a>,
and hope that the new documentation serves our users well.</xhtml:p>
<xhtml:h2>What's to look forward to?</xhtml:h2>
<xhtml:p>Shipping a stable version means that you can depend on the API
going forward. As such, we're messaging that it's production ready;
start building and shipping your applications on it today!</xhtml:p>
<xhtml:p>For the next feature version, we already have a few things
scheduled:</xhtml:p>
<xhtml:ul>
<xhtml:li>Removal of the deprecated
<xhtml:code>pre_routing</xhtml:code>/<xhtml:code>post_routing</xhtml:code> configuration
support, as messaged in the <xhtml:a href="http://zendframework.github.io/zend-expressive/reference/migration/rc-to-v1/#timeline-for-migration">
migration documentation</xhtml:a>.</xhtml:li>
<xhtml:li>Providing <xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/pull/31">
modular functionality</xhtml:a> by default (with opt-out). This will
likely include also providing a solution similar to the <xhtml:a href="https://github.com/zendframework/zend-component-installer">component
installer</xhtml:a> to aid with auto-registering installed packages.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Kudos</xhtml:h2>
<xhtml:p><xhtml:a href="https://github.com/zendframework/zend-expressive-router/graphs/contributors">
We</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-aurarouter/graphs/contributors">
wish</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-fastroute/graphs/contributors">
to</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/graphs/contributors">
thank</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-template/graphs/contributors">
everyone</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-platesrenderer/graphs/contributors">
who</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/graphs/contributors">
contributed</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-zendviewrenderer/graphs/contributors">
to</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-helpers/graphs/contributors">
the</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive/graphs/contributors">
Expressive</xhtml:a> <xhtml:a href="https://github.com/zendframework/zend-expressive-skeleton/graphs/contributors">
project</xhtml:a>! (That previous sentence is a link for every one of our
11 Expressive repositories!)</xhtml:p>
<xhtml:p>Additionally, we thank everyone who has provided us feedback â€”
whether in the form of questions, bug reports, or suggestions â€”
these past few months; without the critical feedback, the project
would not be where it is today.</xhtml:p>
<xhtml:p>A few folks stand out:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://www.zimuel.it">Enrico Zimuel</xhtml:a>, who started
it all!</xhtml:li>
<xhtml:li><xhtml:a href="https://xtreamwayz.com">Geert Eltink</xhtml:a>, who did the
hard work of making the installer work!</xhtml:li>
<xhtml:li><xhtml:a href="http://harikt.com">Hari K T</xhtml:a>, who nudged us to
split the repository into discrete, single-purpose projects!</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/michaelmoussa">Michael Moussa</xhtml:a>,
who suggested the idea that middleware specifications could be
pipelines themselves â€” and then implemented the solution!</xhtml:li>
</xhtml:ul>
<xhtml:h2>Write your next project Expressively!</xhtml:h2>
<xhtml:p>Write your PSR-7 middleware today! Consult <xhtml:a href="https://zendframework.github.io/zend-expressive/">the
documentation</xhtml:a> to get started!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Expressive 1.0.0RC7/RC8 Released!]]></title>
    <published>2016-01-21T16:35:00+00:00</published>
    <updated>2016-01-21T16:35:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-21-expressive-rc7-rc8.html"/>
    <id>http://framework.zend.com/blog/2016-01-21-expressive-rc7-rc8.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Expressive 1.0.0rc7 and the Expressive
Skeleton and Installer 1.0.0rc8!</xhtml:p>
<xhtml:p>You can install the latest versions using <xhtml:a href="https://getcomposer.org">Composer</xhtml:a>, via the
<xhtml:code>create-project</xhtml:code> command:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer create-project -s rc zendframework/zend-expressive-skeleton expressive
</xhtml:code>
</xhtml:pre>
<xhtml:p>You can update your existing applications using:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer update
</xhtml:code>
</xhtml:pre>
<xhtml:p>This release candidate contains bug fixes for dispatching error
middleware pipelines. Additionally, we've released a new version of
our Twig integration, and detail those changes below.</xhtml:p>
<xhtml:h2>Changes in zend-expressive RC7</xhtml:h2>
<xhtml:p>RC6 updated the configuration for the middleware pipeline to
make it a single pipeline. We recommended that developers make use
of our middleware grouping feature, however, which allows you to
specify not just a single, named middleware service, but an
<xhtml:em>array</xhtml:em> of named middleware services. This feature is great
for grouping middleware based on when it should execute, and makes
ordering related middleware simpler.</xhtml:p>
<xhtml:p>Per our suggested, default configuration:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">use Zend\Expressive\Container\ApplicationFactory;
use Zend\Expressive\Helper;

return [
    'dependencies' =&gt; [
        'factories' =&gt; [
            Helper\ServerUrlMiddleware::class =&gt; Helper\ServerUrlMiddlewareFactory::class,
            Helper\UrlHelperMiddleware::class =&gt; Helper\UrlHelperMiddlewareFactory::class,
        ],
    ],
    // This can be used to seed pre- and/or post-routing middleware
    'middleware_pipeline' =&gt; [
        // An array of middleware to register. Each item is of the following
        // specification:
        //
        // [
        //  Required:
        //     'middleware' =&gt; 'Name or array of names of middleware services and/or callables',
        //  Optional:
        //     'path'     =&gt; '/path/to/match', // string; literal path prefix to match
        //                                     // middleware will not execute
        //                                     // if path does not match!
        //     'error'    =&gt; true, // boolean; true for error middleware
        //     'priority' =&gt; 1, // int; higher values == register early;
        //                      // lower/negative == register last;
        //                      // default is 1, if none is provided.
        // ],
        //
        // While the ApplicationFactory ignores the keys associated with
        // specifications, they can be used to allow merging related values
        // defined in multiple configuration files/locations. This file defines
        // some conventional keys for middleware to execute early, routing
        // middleware, and error middleware.
        'always' =&gt; [
            'middleware' =&gt; [
                // Add more middleware here that you want to execute on
                // every request:
                // - bootstrapping
                // - pre-conditions
                // - modifications to outgoing responses
                Helper\ServerUrlMiddleware::class,
            ],
            'priority' =&gt; 10000,
        ],

        'routing' =&gt; [
            'middleware' =&gt; [
                ApplicationFactory::ROUTING_MIDDLEWARE,
                Helper\UrlHelperMiddleware::class,
                // Add more middleware here that needs to introspect the routing
                // results; this might include:
                // - route-based authentication
                // - route-based validation
                // - etc.
                ApplicationFactory::DISPATCH_MIDDLEWARE,
            ],
            'priority' =&gt; 1,
        ],

        'error' =&gt; [
            'middleware' =&gt; [
                // Add error middleware here.
            ],
            'priority' =&gt; -10000,
            'error' =&gt; true,
        ],
    ],
];
</xhtml:code>
</xhtml:pre>
<xhtml:p>Unfortunately, for <xhtml:em>error middleware</xhtml:em>, this was not
working correctly.</xhtml:p>
<xhtml:p>Internally, when we encounter an array of middleware, we create
a <xhtml:code>Zend\Stratigility\MiddlewarePipe</xhtml:code> instance, and pipe
each middleware service to it in order. The problem is that
<xhtml:code>MiddlewarePipe</xhtml:code> does not implement the error middleware
signature â€” which meant that error middleware pipelines were
completely skipped!</xhtml:p>
<xhtml:p>To make this work, we introduced a proxy class,
<xhtml:code>Zend\Expressive\ErrorMiddlewarePipe</xhtml:code>, which wraps a
<xhtml:code>MiddlewarePipe</xhtml:code>, and exposes the error middleware
signature. This is now used internally whenever an error middleware
pipeline needs to be created.</xhtml:p>
<xhtml:h2>Changes in zend-expressive-skeleton RC8</xhtml:h2>
<xhtml:p>When we created the new default middleware pipeline
configuration for RC6/RC7, we forgot one important detail: the
<xhtml:code>error</xhtml:code> middleware group was missing its
<xhtml:code>error</xhtml:code> key, meaning it wasn't attempting to create
error middleware at all! We've fixed this in RC8.</xhtml:p>
<xhtml:p>If you upgraded to RC6/RC7 earlier this week, make sure you add
that <xhtml:code>error</xhtml:code> key, as detailed in the above example.</xhtml:p>
<xhtml:h2>Twig integration updates</xhtml:h2>
<xhtml:p>Today we released <xhtml:a href="https://github.com/zendframework/zend-expressive-twigrenderer/releases/tag/1.1.0">
version 1.0.1 of our Twig integration</xhtml:a>. This includes a few new
features:</xhtml:p>
<xhtml:ul>
<xhtml:li>It adds a dependency on zend-expressive-helpers and, if the
<xhtml:code>UrlHelper</xhtml:code> and <xhtml:code>ServerUrlHelper</xhtml:code> services
are registered, makes new <xhtml:code>url</xhtml:code> and
<xhtml:code>absolute_url</xhtml:code> template functions available.</xhtml:li>
<xhtml:li>It adds a new "globals" configuration sub-section for
registering variables to pass to all templates.</xhtml:li>
</xhtml:ul>
<xhtml:p>You can read more in the <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/template/twig/">Twig
integration documentation</xhtml:a>.</xhtml:p>
<xhtml:p>Many thanks to <xhtml:a href="https://xtreamwayz.com">Geert Eltink</xhtml:a>
for these new features!</xhtml:p>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>Code is stabilizing, and we're seeing fewer issues hitting our
issue tracker. We hope that in a week or two we can release a
stable version.</xhtml:p>
<xhtml:p>If you are testing Expressive â€” whether for the first time, or
updating an existing application â€” please help us prepare it for
general availability!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Expressive 1.0.0RC6/RC7 Released!]]></title>
    <published>2016-01-19T19:10:00+00:00</published>
    <updated>2016-01-19T19:10:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-19-expressive-rc6-rc7.html"/>
    <id>http://framework.zend.com/blog/2016-01-19-expressive-rc6-rc7.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Expressive 1.0.0rc6 and 1.0.0rc7!</xhtml:p>
<xhtml:p>You can install the latest versions using <xhtml:a href="https://getcomposer.org">Composer</xhtml:a>, via the
<xhtml:code>create-project</xhtml:code> command:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer create-project -s rc zendframework/zend-expressive-skeleton expressive
</xhtml:code>
</xhtml:pre>
<xhtml:p>You can update your existing applications using:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-bash">$ composer update
</xhtml:code>
</xhtml:pre>
<xhtml:p>Unfortunately, zend-expressive RC6 introduces some breaking
changes. Several issues were raised that could not be handled in a
fully backwards compatible fashion, and we felt they were important
enough to introduce before a stable release is made. We continue to
honor previous application configuration; however, deprecation
notices will be raised, and the code for parsing the old
configuration will be removed for the 1.1 release.</xhtml:p>
<xhtml:p>We also released zend-expressive-skeleton RC7 quick on the heels
of RC6 in order to correct an issue with installation whereby the
development dependencies at time of invocation were installed,
rather than the rewritten ones. This affected only the skeleton,
which is why we're announcing RC6 <xhtml:em>and</xhtml:em> RC7 releases.</xhtml:p>
<xhtml:p>See below for full details on what has changed.</xhtml:p>
<xhtml:h2>Changes in zend-expressive RC6</xhtml:h2>
<xhtml:p>Like RC5, the bulk of the changes merged for RC6 were
documentation, including:</xhtml:p>
<xhtml:ul>
<xhtml:li>a cookbook recipe detailing <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/helpers/url-helper/#base-path-support">
how to set the base path on a <xhtml:code>UrlHelper</xhtml:code>
instance</xhtml:a>.</xhtml:li>
<xhtml:li>two cookbook recipes detailing mechanisms for enabling <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/cookbook/setting-locale-without-routing-parameter/">
localized</xhtml:a> <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/cookbook/setting-locale-depending-routing-parameter/">
routes</xhtml:a>.</xhtml:li>
<xhtml:li>a cookbook recipe detailing <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/cookbook/debug-toolbars/">
how to add several popular debug toolbars to your
applications</xhtml:a>.</xhtml:li>
<xhtml:li>a cookbook recipe detailing <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/cookbook/using-routed-middleware-class-as-controller/">
how to write classes for handling multiple routes</xhtml:a>. (similar to
controllers in MVC-oriented systems).</xhtml:li>
<xhtml:li>a <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/features/#flow-overview">
flow diagram</xhtml:a> for the "Features" chapter.</xhtml:li>
</xhtml:ul>
<xhtml:p>Unlike RC5, however, we introduced a significant code change,
prompted by user feedback. In particular, we saw each of the
following reported multiple times:</xhtml:p>
<xhtml:ul>
<xhtml:li>confusion over the <xhtml:code>pre_routing</xhtml:code> and
<xhtml:code>post_routing</xhtml:code> middleware pipeline keys, and how they
relate to routed middleware.</xhtml:li>
<xhtml:li>requests to split the routing middleware into two distinct
responsibilities: routing middleware, and dispatch middleware.</xhtml:li>
<xhtml:li>requests to allow dispatching middleware when triggering route
result observers.</xhtml:li>
</xhtml:ul>
<xhtml:p>On analysis, and in discussions with users, we decided to make
the following changes.</xhtml:p>
<xhtml:h3>Splitting the routing middleware</xhtml:h3>
<xhtml:p>We split the routing middleware into two discrete methods:
routing and dispatch. This solved multiple problems, and enables a
number of interesting workflows.</xhtml:p>
<xhtml:p>In particular, it allows you to define middleware that can act
on the routing results in order to satisify pre-conditions in an
automated way.</xhtml:p>
<xhtml:p>As an example, let's say you have a workflow where you want
to:</xhtml:p>
<xhtml:ul>
<xhtml:li>Authenticate a user</xhtml:li>
<xhtml:li>Authorize the user</xhtml:li>
<xhtml:li>Perform content negotiation</xhtml:li>
<xhtml:li>Validate incoming body parameters</xhtml:li>
</xhtml:ul>
<xhtml:p>However, you don't want to perform these actions for
<xhtml:em>every</xhtml:em> request, only specific routes.</xhtml:p>
<xhtml:p>Previously, you would need to define an array of middleware for
each route that needs this set of responsibilities:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">[
    'routes' =&gt; [
        'api.ping' =&gt; [
            'path' =&gt; '/api/ping',
            'middleware' =&gt; [
                AuthenticationMiddleware::class,
                AuthorizationMiddleware::class,
                ContentNegotiationMiddleware::class,
                BodyValidationMiddleware::class,
                PingMiddleware::class,
            ],
            'allowed_methods' =&gt; ['GET'],
        ],
        'api.books' =&gt; [
            'path' =&gt; '/api/books[/{id:[a-f0-9]{8}}]',
            'middleware' =&gt; [
                AuthenticationMiddleware::class,
                AuthorizationMiddleware::class,
                ContentNegotiationMiddleware::class,
                BodyValidationMiddleware::class,
                BooksMiddleware::class,
            ],
        ],
        /* etc. */
    ],
]
</xhtml:code>
</xhtml:pre>
<xhtml:p>This is repetitive, and prone to error: any change in the
workflow requires propagation to <xhtml:em>every route</xhtml:em>.</xhtml:p>
<xhtml:p>Splitting the routing and dispatch middleware allows you to pipe
middleware <xhtml:em>between</xhtml:em> the two actions, allowing you to
register such workflows <xhtml:em>once</xhtml:em>. The middleware could then
introspect the route results to determine if they have work to
do.</xhtml:p>
<xhtml:p>This means you can now write middleware like this:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">use Zend\Expressive\Router\RouteResult;

$authenticationMiddleware = function ($request, $response, $next) use ($map, $authenticate) {
    $routeResult = $request-&gt;getAttribute(RouteResult::class, false);
    if (! $routeResult instanceof RouteResult) {
        return $next($request, $response);
    }

    if (! in_array($routeResult-&gt;getMatchedRouteName(), $map)) {
        return $next($request, $response);
    }

    $authenticationResult = $authenticate($request);
    if (! $authenticationResult-&gt;isSuccess()) {
        // ERROR!
        return new AuthenticationErrorResponse();
    }

    return $next(
        $request-&gt;withAttribute($authenticationResult-&gt;getIdentity()),
        $response
    );
}
</xhtml:code>
</xhtml:pre>
<xhtml:p>You would then sandwich it between the routing and dispatch
middleware. Programmatically, that looks like:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">$app-&gt;pipeRoutingMiddleware();
$app-&gt;pipe($authenticationMiddleware);
$app-&gt;pipeDispatchMiddleware();
</xhtml:code>
</xhtml:pre>
<xhtml:p>We'll look at configuration later, as it changes more
dramatically.</xhtml:p>
<xhtml:h3>No more auto-registration of the routing middleware</xhtml:h3>
<xhtml:p>Prior to RC6, the routing middleware was auto-registered
when:</xhtml:p>
<xhtml:ul>
<xhtml:li>any call to <xhtml:code>route()</xhtml:code> was made, including those via
the methods that proxy to it (<xhtml:code>get()</xhtml:code>,
<xhtml:code>post()</xhtml:code>, <xhtml:code>any()</xhtml:code>, etc.).</xhtml:li>
<xhtml:li>as soon as the <xhtml:code>Application</xhtml:code> instance was invoked as
middleware (i.e., by calling <xhtml:code>$app($request, $response)</xhtml:code>
or calling <xhtml:code>$app-&gt;run()</xhtml:code>).</xhtml:li>
</xhtml:ul>
<xhtml:p>You could also always register it manually when creating your
application pipeline using the <xhtml:code>pipeRoutingMiddleware()</xhtml:code>
method.</xhtml:p>
<xhtml:p>Because routing was split into two distinct actions, and one
primary purpose for doing so was to allow registering middleware
between those actions, we felt that auto-registration was not only
no longer useful, but a liability.</xhtml:p>
<xhtml:p>As such, when creating your application programmatically, there
is now <xhtml:em>exactly one workflow</xhtml:em> to use to enable the routing
and dispatch middleware: each must be piped explicitly into the
pipeline:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">$app-&gt;pipe(ServerUrlMiddleware::class);
$app-&gt;pipe(BaseParamsMiddleware::class);
$app-&gt;pipeRoutingMiddleware();
$app-&gt;pipe(UrlHelperMiddleware::class);
$app-&gt;pipeDispatchMiddleware();
</xhtml:code>
</xhtml:pre>
<xhtml:p><xhtml:strong>If you are building your application programmatically,
you <xhtml:em>must</xhtml:em> update it to pipe the routing and dispatch
middleware in order for it to continue to work.</xhtml:strong></xhtml:p>
<xhtml:p>We'll look at configuration for the
<xhtml:code>ApplicationFactory</xhtml:code> later, as it changes as well.</xhtml:p>
<xhtml:h3>No more route result observers</xhtml:h3>
<xhtml:p>Another consequence of splitting the routing middleware in two
was a pleasant discovery: there was no longer any need for the
route result observer system!</xhtml:p>
<xhtml:p>The route result observer system was added in RC3 to allow the
application to notify interested observers of the results of
routing, as there was no other way to trigger functionality between
the act of routing and when the matched middleware was dispatched
(if any was actually matched!).</xhtml:p>
<xhtml:p>Several developers complained that they couldn't return a
response from these observers when they detected an error
condition, nor could they introspect the request in such
situations.</xhtml:p>
<xhtml:p>With the routing middleware split, there's an answer to those
questions, and the observer system is no longer needed; just place
middleware between the routing and dispatch middleware, and have it
act on the <xhtml:code>RouteResult</xhtml:code> instance (which the routing
middleware injects as a request attribute). In fact, we've already
demonstrated this above!</xhtml:p>
<xhtml:p>For RC6, we removed the <xhtml:code>RouteResultSubjectInterface</xhtml:code>
implementation from the <xhtml:code>Application</xhtml:code> instance, while
keeping the original methods defined in that interface; these
methods now trigger deprecation notices. If you were using
observers previously, and keep your existing RC5 configuration, we
also inject a special "route result observer middleware" between
the routing and dispatch middleware that will notify the observers.
The deprecation messages will prompt you to update your code, and
provide a link to the migration guide to help you.</xhtml:p>
<xhtml:p>A new <xhtml:em>minor</xhtml:em> version of zend-expressive-router was
released, v1.2.0, marking each of the
<xhtml:code>RouteResultSubjectInterface</xhtml:code> and
<xhtml:code>RouteResultObserverInterface</xhtml:code> as deprecated.</xhtml:p>
<xhtml:p>A new <xhtml:em>major</xhtml:em> version of zend-expressive-helpers was
released, v2.0.0, that removes the
<xhtml:code>RouteResultObserverInterface</xhtml:code> implementation from the
<xhtml:code>UrlHelper</xhtml:code>, and updates its related middleware to act
between the routing and dispatch middleware.</xhtml:p>
<xhtml:h3>Simplified configuration</xhtml:h3>
<xhtml:p>We've alluded to configuration changes several times; it's now
time to detail those.</xhtml:p>
<xhtml:p>One common confusion that arose was around the
<xhtml:code>pre_routing</xhtml:code> and <xhtml:code>post_routing</xhtml:code> names. Many
assumed that <xhtml:code>pre_routing</xhtml:code> meant that the middleware
listed only operated before routing â€” and did not realize that such
middleware could also post-process responses. Similarly, many
assumed that <xhtml:code>post_routing</xhtml:code> middleware was executed
after routed middleware, even when the routed middleware returned a
response (it was only executed if the routed middleware called
<xhtml:code>$next()</xhtml:code> or if an error occurred).</xhtml:p>
<xhtml:p>We wanted to clarify how the middleware pipeline worked, and
with the switch to split the routing and dispatch middleware, and a
desire to allow injecting middleware between routing and dispatch,
we had an opportunity to positiveily change the configuration to
make it more clear.</xhtml:p>
<xhtml:p><xhtml:a href="http://www.zimuel.it">Enrico</xhtml:a> suggested that instead
of segregating into pre/post, we have a single pipeline. This would
require defining entries for the routing and dispatch middleware as
part of the pipeline, but you would then be able to see the exact
workflow.</xhtml:p>
<xhtml:p>One counter-argument, however, is when merging configuration,
which is done by default in the skeleton, and which is a
recommended practice to keep configuration for related
functionality in discrete places. How would order be preserved?</xhtml:p>
<xhtml:p>We decided to introduce a <xhtml:code>priority</xhtml:code> key into our
middleware configuration specifications. This works with
<xhtml:code>SplPriorityQueue</xhtml:code>: higher values are piped earlier and
execute earlier, while lower/negative values are piped later. This
provides the ability to define the pipeline across multiple files,
merge it, and get a predictable order.</xhtml:p>
<xhtml:p>Additionally, we realized we could lever another existing
feature: middleware specifications used by the pipeline
configuration allow you to specify <xhtml:em>lists</xhtml:em> of middleware to
execute, not just individual middleware. This means that you can
group middleware under the same priority, in the order you want it
to execute. This is a great technique for segregating
configuration.</xhtml:p>
<xhtml:p>What we came up with ends up looking like this when you start
out with the new skeleton:</xhtml:p>
<xhtml:pre>
<xhtml:code class="language-php">use Zend\Expressive\Container\ApplicationFactory;
use Zend\Expressive\Helper;

return [
    'dependencies' =&gt; [
        'factories' =&gt; [
            Helper\ServerUrlMiddleware::class =&gt; Helper\ServerUrlMiddlewareFactory::class,
            Helper\UrlHelperMiddleware::class =&gt; Helper\UrlHelperMiddlewareFactory::class,
        ],
    ],
    // This can be used to seed pre- and/or post-routing middleware
    'middleware_pipeline' =&gt; [
        // An array of middleware to register. Each item is of the following
        // specification:
        //
        // [
        //  Required:
        //     'middleware' =&gt; 'Name or array of names of middleware services and/or callables',
        //  Optional:
        //     'path'     =&gt; '/path/to/match', // string; literal path prefix to match
        //                                     // middleware will not execute
        //                                     // if path does not match!
        //     'error'    =&gt; true, // boolean; true for error middleware
        //     'priority' =&gt; 1, // int; higher values == register early;
        //                      // lower/negative == register last;
        //                      // default is 1, if none is provided.
        // ],
        //
        // While the ApplicationFactory ignores the keys associated with
        // specifications, they can be used to allow merging related values
        // defined in multiple configuration files/locations. This file defines
        // some conventional keys for middleware to execute early, routing
        // middleware, and error middleware.
        'always' =&gt; [
            'middleware' =&gt; [
                // Add more middleware here that you want to execute on
                // every request:
                // - bootstrapping
                // - pre-conditions
                // - modifications to outgoing responses
                Helper\ServerUrlMiddleware::class,
            ],
            'priority' =&gt; 10000,
        ],

        'routing' =&gt; [
            'middleware' =&gt; [
                ApplicationFactory::ROUTING_MIDDLEWARE,
                Helper\UrlHelperMiddleware::class,
                // Add more middleware here that needs to introspect the routing
                // results; this might include:
                // - route-based authentication
                // - route-based validation
                // - etc.
                ApplicationFactory::DISPATCH_MIDDLEWARE,
            ],
            'priority' =&gt; 1,
        ],

        'error' =&gt; [
            'middleware' =&gt; [
                // Add error middleware here.
            ],
            'priority' =&gt; -10000,
        ],
    ],
];
</xhtml:code>
</xhtml:pre>
<xhtml:p>For existing users:</xhtml:p>
<xhtml:ul>
<xhtml:li>Existing RC5 and earlier configuration is still honored, but
will emit deprecation notices, prompting you to update; these
notices include links to the migration guide.</xhtml:li>
<xhtml:li>To update, you'll need to:
<xhtml:ul>
<xhtml:li>update your zend-expressive-helpers version constraint to
<xhtml:code>^2.0</xhtml:code>.</xhtml:li>
<xhtml:li>update your configuration, using the above as a guide.</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
<xhtml:p>We're excited about this change, as we feel it simplifies the
configuration, adds flexibility, and provides predictability in the
system. While it is a large change for a release candidate, we also
felt it was important enough to warrant introducing before the
stable release.</xhtml:p>
<xhtml:h2>Full migration details</xhtml:h2>
<xhtml:p>The above narrative is use-case-centered. We have, however,
published a <xhtml:a href="http://zend-expressive.readthedocs.org/en/latest/migration/rc-to-v1/">
full migration guide</xhtml:a> as part of the release to give exact
details on changes you will need to make.</xhtml:p>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>At this point, we feel that the code has stabilized
significantly, and that the improvements in these latest releases
have provided important simplicity and flexibility to make the
system robust. We'll be waiting a week or two to see how you, our
users, respond, and hopefully be able to tag a stable release
shortly!</xhtml:p>
<xhtml:p>If you are testing Expressive â€” whether for the first time, or
updating an existing application â€” please help us prepare it for
general availability!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2016-01-14]]></title>
    <published>2016-01-14T23:00:00+00:00</published>
    <updated>2016-01-14T23:00:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2016-01-14-zf3-biweekly-update.html"/>
    <id>http://framework.zend.com/blog/2016-01-14-zf3-biweekly-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is an installment in an ongoing series of bi-weekly posts
on ZF3 development status.</xhtml:p>
<xhtml:p>Following a roughly two week hiatus at the end of the year,
we've picked up where we left off and continued the momentum
towards the ZF3 initiatives.</xhtml:p>
<xhtml:p>The highlights:</xhtml:p>
<xhtml:ul>
<xhtml:li>48 pull requests merged</xhtml:li>
<xhtml:li>11 releases of components, <xhtml:strong>including 3 3.0 releases in
3 days!</xhtml:strong></xhtml:li>
<xhtml:li>6 components updated to zend-servicemanager/zend-eventmanager
v3 changes</xhtml:li>
<xhtml:li>Major updates for an upcoming Expressive RC6</xhtml:li>
</xhtml:ul>
<xhtml:h2>3.0 Releases!</xhtml:h2>
<xhtml:p>A number of components reached stability in the past few weeks,
and this week we did a spree of three 3.0 releases in three
days:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-3.0.0">
zend-servicemanager 3.0.0</xhtml:a> is the first 3.0 release of any ZF
components, and features a complete rewrite of the internals to
provide up to 4x faster performance! We have been careful to retain
as much backwards compatibility as possible, and the v2.7.0 release
provides features that make migration between versions seamless for
users. <xhtml:a href="http://zend-servicemanager.rtfd.org/en/latest/book/migration/">A
migration guide is available</xhtml:a>.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-eventmanager/releases/tag/release-3.0.0">
zend-eventmanager 3.0.0</xhtml:a> is our second 3.0 release of a ZF
component, and features a complete rewrite of the internals of the
EventManager implementation to provide up to 4X faster performance.
By following the <xhtml:a href="http://zend-eventmanager.readthedocs.org/en/latest/migration/intro/">
migration guide</xhtml:a>, you can update your v2 code to work on both v2
and v3.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-code/releases/tag/release-3.0.0">
zend-code 3.0.0</xhtml:a> is our third 3.0 release of a ZF component, and
features updates to allow usage with PHP 5.5, 5.6, and PHP 7, and,
specifically, scalar typehints, return typehints, generators, and
variadics.</xhtml:li>
</xhtml:ul>
<xhtml:p>Be aware that you cannot make use of these new 3.0 versions
within existing ZF2 applications quite yet; we are still in the
process of updating components to work with these releases.
However, they can be used standalone, or within projects based on
Expressive!</xhtml:p>
<xhtml:h2>Pull request activity</xhtml:h2>
<xhtml:p>Since the last update, we've <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+org:zendframework+is:merged+closed:%3E=2015-12-22">
merged 48 pull requests</xhtml:a> (link requires a GitHub account).
Activity has been particularly high on Expressive,
zend-servicemanager, and components refactoring to the latest
zend-servicemanager and zend-eventmanager updates.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following is a list of component releases (other than the
3.0 releases listed above) since the last update. While not all
releases are related to ZF3 specifically, this list is intended to
detail activity within the organization.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-helpers/releases/tag/1.4.0">
zend-expressive-helpers 1.4.0</xhtml:a> adds base path support to the
<xhtml:code>UrlHelper</xhtml:code>.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.3">
Diactoros 1.3.3</xhtml:a> fixes an issue in
<xhtml:code>ServerRequestFactory::marshalHeaders()</xhtml:code> whereby we were
explicitly omitting cookie headers; they are now aggregated.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-zendrouter/releases/tag/1.0.1">
zend-expressive-zendrouter 1.0.1</xhtml:a> fixes an issue whereby
appending a trailing slash when requesting a route that did not
define one resulted in a 405 instead of a 404 error.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.0">
zend-servicemanager 2.7.0</xhtml:a>, <xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.1">
zend-servicemanager 2.7.1</xhtml:a>, <xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.2">
zend-servicemanager 2.7.2</xhtml:a>, and <xhtml:a href="https://github.com/zendframework/zend-servicemanager/releases/tag/release-2.7.3">
zend-servicemanager 2.7.3</xhtml:a> are forwards-compatibility releases,
providing several features that allow users to update their code to
work with both the v2 and v3 series of the service manager.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-eventmanager/releases/tag/release-2.6.2">
zend-eventmanager 2.6.2</xhtml:a> introduces a trait,
<xhtml:code>EventListenerIntrospectionTrait</xhtml:code>, for use with PHPUnit
test cases. It provides a consistent API for introspecting what
events and listeners are attached to an EventManager instance, and
provides a custom assertion for validating that a given listener is
registered at a given priority on a given event. This trait can be
used to write assertions for validating listener attachment in a
way that will be forwards compatible with version 3.</xhtml:li>
</xhtml:ul>
<xhtml:h2>ZF3 Refactors</xhtml:h2>
<xhtml:p>Since the last update, the following components have been
refactored to work with the planned v3 versions of
zend-servicemanager and zend-eventmanager. Please note that no new
versions have been released at this time; all work remains either
in pull requests or in the develop branches of each component.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-mail/pull/47">zend-mail</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-validator/pull/49">zend-validator</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, we have created pull requests for several
components to work with the forwards compatibility releases of
zend-servicemanager and zend-eventmanager. These will allow us to
release 2.x versions of these components that can be used by code
consuming the v3 versions of those two components.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-barcode/pull/16">zend-barcode</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-cache/pull/64">zend-cache</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/pull/17">zend-log</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-i18n/pull/22">zend-i18n</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-validator/pull/51">zend-validator</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Expressive</xhtml:h2>
<xhtml:p>We've had quite a number of people testing Expressive heavily,
and pointing out both its strengths and weaknesses. This has
resulted in a ton of additional tests, bringing coverage to 100% in
some cases, as well as copious amounts of new documentation.</xhtml:p>
<xhtml:p>After several issue threads and IRC conversations, we've decided
to release an additional RC, RC6, to accomplish the following:</xhtml:p>
<xhtml:ul>
<xhtml:li>Simplification of the middleware pipeline; we will be doing
away with the <xhtml:code>pre_routing</xhtml:code> and
<xhtml:code>post_routing</xhtml:code> keys, and allowing a single pipeline
representing the entire application lifecycle.</xhtml:li>
<xhtml:li>Splitting of the routing middleware into separate routing and
dispatch middleware. This allows developers to tie into the
application lifecycle using middleware between routing and
dispatch, facilitating such things as route-based authentication,
validation, etc.</xhtml:li>
<xhtml:li>Removal of auto-registration of the routing middleware; this is
done to allow substituting alternative routing middleware and/or
dispatch middleware.</xhtml:li>
<xhtml:li>Deprecation of the route result observer system. The same
functionality can now be accomplished with middleware that acts
between routing and dispatch.</xhtml:li>
</xhtml:ul>
<xhtml:p>We've attempted to preserve backwards compatibility for existing
applications, but have marked deprecated features for removal with
1.1. A migration guide will assist our early adopters in updating
their applications.</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>If you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>There are new <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-ServiceManager-component-refactors,-phase-2">
component refactors to complete or review</xhtml:a>.</xhtml:li>
<xhtml:li>Test Expressive, and help us reach a stable release of this new
feature!</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases! In particular, I want to call
out:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/Ocramius">Marco Pivetta</xhtml:a> for his
work on updating zend-code to work with PHP 7 (and PHP 5.5, and PHP
5.6) features.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/bakura10">MichaÃ«l Gallego</xhtml:a> for
his work on the zend-servicemanager and zend-eventmanager
refactors, and his relentless pursuit of performance
increases.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/ezimuel">Enrico Zimuel</xhtml:a> for his
work on the zend-eventmanager refactor, and taking on the drudgery
of updating components to the new zend-eventmanager and
zend-servicemanager changes.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/RalfEggert">Ralf Eggert</xhtml:a> and
<xhtml:a href="https://github.com/danizord">Daniel Gimenes</xhtml:a> for the
constant stream of questions and suggestions for Expressive; their
feedback is changing it for the better!</xhtml:li>
</xhtml:ul>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 3 Update for 2015-12-22]]></title>
    <published>2015-12-22T23:10:00+00:00</published>
    <updated>2015-12-22T23:10:00+00:00</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/2015-12-22-zf3-biweekly-update.html"/>
    <id>http://framework.zend.com/blog/2015-12-22-zf3-biweekly-update.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>This is the second in an ongoing series of bi-weekly posts on
ZF3 development status.</xhtml:p>
<xhtml:p>The highlights:</xhtml:p>
<xhtml:ul>
<xhtml:li>45 pull requests merged</xhtml:li>
<xhtml:li>14 releases of components</xhtml:li>
<xhtml:li>5 components updated to zend-servicemanager/zend-eventmanager
v3 changes</xhtml:li>
<xhtml:li>1 release candidates of expressive</xhtml:li>
</xhtml:ul>
<xhtml:h2>Pull request activity</xhtml:h2>
<xhtml:p>Activity has continued to be quite high the past couple weeks,
though slower than the previous update, with <xhtml:a href="https://github.com/issues?utf8=%E2%9C%93&amp;q=is:pr+org:zendframework+is:merged+closed:%3E=2015-12-10">
45 pull requests merged</xhtml:a> (link requires a GitHub account). While
Expressive still dominates the list, many of these were related to
ZF3 refactors and ongoing component maintenance.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following is a list of component releases since the last
update. While not all releases are related to ZF3 specifically,
this list is intended to detail activity within the organization.
It omits the Expressive release candidates, as well as new
components, which will be listed later in this post.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-fastroute/releases/tag/1.0.1">
zend-expressive-fastroute 1.0.1</xhtml:a> released 2015-12-14; fixes an
issue with the returned <xhtml:code>RouteResult</xhtml:code>, ensuring it
contains the name, not the path, of the route matched.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.2.1">
zend-diactoros 1.2.1</xhtml:a> was a bugfix release that fixed:
<xhtml:ul>
<xhtml:li>issues with how <xhtml:code>withHeader()</xhtml:code> handled replacing
existing headers that used a different casing strategy.</xhtml:li>
<xhtml:li>the <xhtml:code>$statusCode</xhtml:code> argument of the
<xhtml:code>Response</xhtml:code> to never allow <xhtml:code>null</xhtml:code> values.</xhtml:li>
<xhtml:li>constructor header validation on all message types to:
<xhtml:ul>
<xhtml:li>allow numeric values (e.g., Content-Length)</xhtml:li>
<xhtml:li>raise an exception on invalid header names (non-empty strings
or non-string values)</xhtml:li>
<xhtml:li>raise an exception on invalid individual header values (non
strings/non-numerics)</xhtml:li>
</xhtml:ul>
</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.0">
zend-diactoros 1.3.0</xhtml:a> was a feature release adding:
<xhtml:ul>
<xhtml:li><xhtml:code>SapiEmitterTrait</xhtml:code>, which replaces a number of
methods in the <xhtml:code>SapiEmitter</xhtml:code> to provide a re-useable
base for emitters; <xhtml:code>SapiEmitter</xhtml:code> was updated to use the
trait instead of to directly define the methods.</xhtml:li>
<xhtml:li><xhtml:code>SapiStreamEmitter</xhtml:code> provides functionality for
iteratively emitting stream-based responses, and includes support
for Content-Range headers.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.1">
zend-diactoros 1.3.1</xhtml:a> was a bugfix release that fixed:
<xhtml:ul>
<xhtml:li>an issue in the response serializer, whereby the discovered
status code wasn't being cast to an integer.</xhtml:li>
<xhtml:li>an issue in the various concrete, text-based response types
whereby they were not rewinding the message body stream after
creation, causing later calls to <xhtml:code>getContents()</xhtml:code> to
return an empty string (as it was starting from the end of the
stream). These now rewind the stream during initialization.</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-diactoros/releases/tag/1.3.2">
zend-diactoros 1.3.2</xhtml:a> fixes an issue in the
<xhtml:code>ServerRequestFactory</xhtml:code> whereby we were omitting parsing
for and injection of the HTTP protocol version.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-psr7bridge/releases/tag/0.2.1">
zend-psr7bridge 0.2.1</xhtml:a> adds support for injecting generated
PSR-7 instances with the cookies present in the zend-http request
instance.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-math/releases/tag/2.5.2">zend-math
2.5.2</xhtml:a> fixes base conversions for base36 and below.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-server/releases/tag/release-2.6.0">
zend-server 2.6.0</xhtml:a> adds support for unwinding
<xhtml:code>{@inheritdoc}</xhtml:code> annotations, and fixes a misleading
exception in <xhtml:code>reflectFunction</xhtml:code>.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-development-mode/releases/tag/release-2.1.2">
zf-development-mode 2.1.2</xhtml:a> fixes the factory to pull and set the
configuration caching rules under the correct configuration
key.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-helpers/releases/tag/1.2.1">
zend-expressive-helpers 1.2.1</xhtml:a> adds the protected method
<xhtml:code>getRouteResult()</xhtml:code>, to allow extensions access to the
route result instance.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-expressive-helpers/releases/tag/1.3.0">
zend-expressive-helpers 1.3.0</xhtml:a> adds a new general-purpose
<xhtml:code>BodyParamsMiddleware</xhtml:code>, for parsing the request body and
returning a new instance populated with the parsed body parameters.
The solution uses a strategy pattern, allowing developers to
provide additional strategies per their application needs.</xhtml:li>
</xhtml:ul>
<xhtml:h2>ZF3 Refactors</xhtml:h2>
<xhtml:p>Since the last update, the following components have been
refactored to work with the planned v3 versions of
zend-servicemanager and zend-eventmanager. Please note that no new
versions have been released at this time; all work remains either
in pull requests or in the develop branches of each component.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-session/pull/8">zend-session</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-log/pull/14">zend-log</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-tag/pull/3">zend-tag</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-text/pull/2">zend-text</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zend-filter/pull/15">zend-filter</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Component Installer</xhtml:h2>
<xhtml:p>One idea floated for helping the goal of reducing dependencies
in both zend-mvc and the zf2 meta-repository is to have components
also act as modules. This would allow them to provide
configuration, factories, and event listeners to the MVC runtime in
a completely opt-in fashion. The one problem with the approach,
however, is automating registration with the application.</xhtml:p>
<xhtml:p>To this end, we created a <xhtml:a href="https://zendframework.github.io/zend-component-installer">component
installer</xhtml:a>. This package provides composer post un/install
scripts that look for metadata in the package; if the metadata is
present, the script adds an entry to the application's module list.
Components are added to the top of the list, and modules to the
bottom.</xhtml:p>
<xhtml:p>The new package can be installed as a global composer utility,
or downloaded as a self-updateable PHAR file. We will begin
updating components to expose themselves to this tooling soon, and
update the application skeleton with the scripts as generated by
the package, to automate the facilities for greenfield
projects.</xhtml:p>
<xhtml:h2>Expressive Release Candidate</xhtml:h2>
<xhtml:p>Today, we issued a new release candidate of Expressive, RC5. Be
sure to read the <xhtml:a href="/blog/expressive-1-0-0rc5-released.html">announcement</xhtml:a> to find
out what changes have been made! The bulk of the work has gone into
expanding the documentation to cover common use case scenarios.</xhtml:p>
<xhtml:h2>Until next time</xhtml:h2>
<xhtml:p>The winter holidays are upon our team at this time, and we do
not expect much progress in the coming two weeks. Look for updates
in January!</xhtml:p>
<xhtml:p>Until then, if you want to help:</xhtml:p>
<xhtml:ul>
<xhtml:li>There are still <xhtml:a href="https://github.com/zendframework/maintainers/wiki/ZF3-code-refactoring">
component refactors to complete or review</xhtml:a>.</xhtml:li>
<xhtml:li>Test Expressive, and help us reach a stable release of this new
feature!</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who have provided feedback,
patches, reviews, or releases!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
