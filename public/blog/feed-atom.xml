<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog Entries - ZF Blog</title>
  <updated>2014-08-13T21:30:00+0000</updated>
  <generator uri="http://framework.zend.com" version="2">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://framework.zend.com/blog.html"/>
  <link rel="self" type="application/atom+xml" href="http://framework.zend.com/blog-atom.xml"/>
  <id>http://framework.zend.com/blog.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 1.0.4 Released!]]></title>
    <published>2014-08-13T21:30:00+0000</published>
    <updated>2014-08-13T21:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-1-0-4-released.html"/>
    <id>http://framework.zend.com/blog/apigility-1-0-4-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:h1>Apigility 1.0.4</xhtml:h1>
<xhtml:p>We are pleased to announce the immediate availability of
Apigility 1.0.4!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://apigility.org/download">https://apigility.org/download</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is our fourth maintenance release of Apigility.</xhtml:p>
<xhtml:h2>IBM i Support</xhtml:h2>
<xhtml:p>This release contains a number of fixes to ensure the ability to
use Apigility on IBM i. Among them:</xhtml:p>
<xhtml:ul>
<xhtml:li>We are pinning support to Zend Framework 2.3.2 and above, which
contains updates supporting DB2:<xhtml:br/></xhtml:li>
<xhtml:li>Full transaction support.<xhtml:br/></xhtml:li>
<xhtml:li>Fixed LIMIT support, allowing for paginated DB result
sets.<xhtml:br/></xhtml:li>
<xhtml:li>Fixes to database-backed authentication<xhtml:br/></xhtml:li>
<xhtml:li>The ability to specify database driver options via the Admin
UI. Most DB2<xhtml:br/>
connections need additional driver options specified, and you can
now do so via the UI.</xhtml:li>
</xhtml:ul>
<xhtml:h2>UI Improvements</xhtml:h2>
<xhtml:p>One lingering issue we've had reported is an error when creating
APIs: the UI reports an error, but the API has been created. We
made several patches that, in aggregate, should resolve these
issues going forward:</xhtml:p>
<xhtml:ul>
<xhtml:li>We discovered that our promise chains in the Admin UI were not
optimally constructed, and could potentially raise errors under the
appropriate conditions; these have been fixed.<xhtml:br/></xhtml:li>
<xhtml:li>We introduced comprehensive cache control headers to prevent
client-side caching of Admin API calls.<xhtml:br/></xhtml:li>
<xhtml:li>We introduced a timeout between successful completion of API
creation and deletion calls, and subsequent fetching of the API
list from the Admin API. In working with <xhtml:a href="https://github.com/jguittard">Julien Guittard</xhtml:a>, we were able to
find an optimal timeout that resolves the issue.</xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, for those users using Apache to serve the Admin UI
and Admin API, we have stopped using backslashes in URI identifiers
(Apache rejects URI-encoded slashes by default).</xhtml:p>
<xhtml:p>Other fixes were also made that are detailed under the
"zf-apigility-admin" header below.</xhtml:p>
<xhtml:h2>Documentation fixes</xhtml:h2>
<xhtml:p>zf-apigility-documentation was not using the correct
configuration key to discover input filters, which meant it was not
reporting fields at all. This had further implications for
zf-apigility-documentation-swagger, which was then unable to expose
models based on those fields. This situation is now resolved.</xhtml:p>
<xhtml:h2>Collections</xhtml:h2>
<xhtml:p>While Apigility has supported retrieving collections in REST
services, creating, replacing, updating, or deleting them has been
an exercise left to the developer previously. With this release,
field definitions can now be used to validate the items passed to
collections, giving collections first-class support.</xhtml:p>
<xhtml:h2>Console</xhtml:h2>
<xhtml:p>zf-console was extensively updated, with many contributions and
ideas from Zend's <xhtml:a href="https://github.com/slaff">Slavey
Karadzhov</xhtml:a>. These include:</xhtml:p>
<xhtml:ul>
<xhtml:li>Simplification of mapping the command name to the route. By
default the command name is considered the first argument of the
route now.<xhtml:br/></xhtml:li>
<xhtml:li>Command handlers may now be specified in the configuration via
the <xhtml:code>handler</xhtml:code> key for a command.<xhtml:br/></xhtml:li>
<xhtml:li>A number of useful CLI-specific filters are now provided,
including an <xhtml:code>Explode</xhtml:code> filter (split comma or other
delimited arguments to an array), a <xhtml:code>QueryString</xhtml:code> filter
(specify arguments in query string format), and a <xhtml:code>Json</xhtml:code>
filter (specify arguments in JSON).<xhtml:br/></xhtml:li>
<xhtml:li>Better error handling and error reporting.<xhtml:br/></xhtml:li>
<xhtml:li>The ability to generate autocompletion scripts for your CLI
commands.</xhtml:li>
</xhtml:ul>
<xhtml:p>zf-console is shaping up as a capable microframework for CLI
commands!</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Many thanks to everyone who contributed fixes, big or small,
towards this release!</xhtml:p>
<xhtml:h2>Issues closed:</xhtml:h2>
<xhtml:h3>zf-apigility-admin</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/220">Timeout
delay upon API creation and deletion</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/219">Introduced
timeouts to API create/delete actions</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/218">Disable
HTTP caching for Admin API</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/215">url-encoded
backslashes cause issues in Apache</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/214">File
permissions upon resources files creation</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/213">Revise
promise chains</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/212">Allow
defining DB adapter driver options</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/211">Resolves
#210 by correcting the dead link</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/205">Undefined
index: input_filter_specs</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/204">OAuth2
Mongo Adapter cannot be created successfully</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/196">zf-hal
option 'render_collections' can break Apigility
admin</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/190">Feature
request: Ability to disable pagination from admin ui</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/issues/175">Creating
new API fails with "API not found"</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/172">Can't
Edit OAuth Adapter</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-apigility-documentation</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-documentation/pull/13">Fixed
usage of configuration-driven creation of input filters</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-apigility-documentation-swagger</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-documentation-swagger/pull/6">
Use service name instead of api name to describe
endpoint</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-documentation-swagger/pull/5">
Add dependency</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-apigility-skeleton</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-skeleton/pull/76">Bump
ZF2 version requirement</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-skeleton/pull/73">Prefix
config glob path</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-skeleton/issues/71">Apache
configuration</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-skeleton/pull/67">Ensure
default Apache site is disabled</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-console</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-console/pull/11">Added
out-of-the-box autocompletion help for all applications based on
zf-console</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-console/pull/9">Better
error handling</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-console/pull/8">Useful
filters</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-console/pull/7">Allow
setting handler in route configuration</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-console/pull/5">Simplify mapping
the command name to the route</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-content-validation</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-content-validation/pull/20">Bug:
Validation bypassed when POST is empty</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-content-validation/pull/19">isCollection()
method returning true for entities</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-content-validation/pull/3">Problems
concerning validating collections</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-deploy</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-deploy/pull/27">Remove
include of application configuration</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-deploy/pull/26">Cannot
validate deployment.xml if zfdeploy.phar is in a folder with
spaces</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-deploy/pull/22">Updated
to use features from latest master of zf-console</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-deploy/pull/21">Execute
composer.phar with the PHP binary running zf-deploy</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-hal</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/issues/51">422
status when my entity has no identifier on creation</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/pull/50">Possible
issue on HAL collection first link of the paginator.</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/pull/48">Allow -1
for page size</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/pull/47">Links in
metadata map are no longer honored</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/pull/45">Update Hal
Plugin to support entities with $id = 0</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/pull/39">Can't
return a collection object with embedded entities when content
negotiation is set to Json</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-mvc-auth</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-mvc-auth/pull/36">deny_by_default
inverts permission rules</xhtml:a></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-mvc-auth/pull/35">Support for
OAuth2 Token in Query String / POST Body</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-oauth2</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-oauth2/pull/58">Use
content negotiation in AuthController</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-oauth2/pull/56">Ensure
bodyParams is an array before creating request</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-oauth2/pull/54">Update
PdoAdapter.php</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-oauth2/pull/48">refactored the
class to support better reuse when extending the
class</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-oauth2/issues/46">Separate
MongoClient creation from MongoAdapter factory</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-rest:</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-rest/pull/43">Allow
returning entities without identifiers from creation
routines</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-rest/pull/39">Allow
Header tied to 'id' param.</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-rest/pull/38">Can't
attach to a resource's event using the
SharedEventManager</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-rest/pull/36">Update
RestController to handle entities with $id = 0</xhtml:a><xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-rest/pull/31">Can't
return a collection object with embedded entities when content
negotiation is set to Json</xhtml:a></xhtml:li>
</xhtml:ul>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.3.2 Released!]]></title>
    <published>2014-08-11T17:30:00+0000</published>
    <updated>2014-08-11T17:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-3-2-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-3-2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.3.2!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the second maintenance release in the 2.3 series, and
resolves more than 100 issues.</xhtml:p>
<xhtml:h2>Notable Changes</xhtml:h2>
<xhtml:p>The following changes are noted as being fixes that may have
potential implications for existing applications.</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf2/pull/6295">#6295</xhtml:a>
introduces a slight change to how <xhtml:kbd>Zend\Form\Fieldset</xhtml:kbd>
handles disabled values. Previously, they were represented in the
form, and still processed on submit, which allowed the possibility
of changing the value. This pull request modifies the behavior to
extract the original value from any bound data if present and use
that value instead, which is the correct behavior.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf2/pull/6423">#6423</xhtml:a> modifies
the behavior of <xhtml:kbd>Zend\Validator\File\UploadFile</xhtml:kbd> to only
return the <xhtml:kbd>FILE_NOT_FOUND</xhtml:kbd> error if upload was
successful; previously, it incorrectly would report this error even
if an error occurred during upload.</xhtml:li>
</xhtml:ul>
<xhtml:p>For the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.3.2">http://framework.zend.com/changelog/2.3.2</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>A big thank you to the host of contributors who helped make this
maintenance release a reality!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 1.12.7 Released!]]></title>
    <published>2014-06-12T20:00:00+0000</published>
    <updated>2014-06-12T20:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-1-12-7-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-1-12-7-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 1.12.7:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest#ZF1">http://framework.zend.com/downloads/latest#ZF1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release contains an important security fix in
<xhtml:code>Zend_Db_Select</xhtml:code>; we strongly encourage users of this
component to upgrade.</xhtml:p>
<xhtml:h2>Security Fixes</xhtml:h2>
<xhtml:p>One new security advisory has been made, and has been patched in
1.12.7:</xhtml:p>
<xhtml:p><xhtml:a href="/security/advisory/ZF2014-04">ZF2014-04</xhtml:a>, which
mitigates a potential SQL Injection (SQLi) vector when usiing ORDER
BY clauses in <xhtml:kbd>Zend_Db_Select</xhtml:kbd>; SQL function calls were
improperly detected, rendering ORDER clauses such as
<xhtml:kbd>MD5(1);drop table foo</xhtml:kbd> unfiltered. The logic has been
updated to prevent SQLi vectors, and users of this functionality
are strongly encouraged to upgrade immediately.</xhtml:p>
<xhtml:p>For more information, follow the link above; if you use the
component affected, please upgrade as soon as possible.</xhtml:p>
<xhtml:h2>Important Changes</xhtml:h2>
<xhtml:p>In addition to the security fix above, a number of other
important changes were made, including:</xhtml:p>
<xhtml:ul>
<xhtml:li>Support for PHPUnit 4 and 4.1, both within the Zend Framework
test suite and inside the <xhtml:kbd>Zend_Test_PHPUnit</xhtml:kbd>
component.</xhtml:li>
<xhtml:li>Backported support from ZF2 for recursive page removal within
<xhtml:kbd>Zend_Navigation</xhtml:kbd>.</xhtml:li>
<xhtml:li>Support within the <xhtml:kbd>Hostname</xhtml:kbd> validator for the newly
released IANA top level domains.</xhtml:li>
<xhtml:li>Forward-compatibility changes were made to ensure Zend
Framework 1 will run on the upcoming PHP 5.6.</xhtml:li>
</xhtml:ul>
<xhtml:p>For the complete list of changes, <xhtml:a href="/changelog/1.12.7">read the changelog</xhtml:a>.</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>As always, I'd like to thank the many contributors who made this
release possible, particularly Cassiano Dal Pizzol and Lars
Kneschke for reporting the security vulnerability, and Enrico
Zimuel for patching it.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 1.0.3 Released!]]></title>
    <published>2014-06-05T16:30:00+0000</published>
    <updated>2014-06-05T16:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-1-0-3-released.html"/>
    <id>http://framework.zend.com/blog/apigility-1-0-3-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>We are pleased to announce the immediate availability of
Apigility 1.0.3!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://apigility.org/download">https://apigility.org/download</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is our third maintenance release of Apigility, and the
first containing security fixes; read on for more information.</xhtml:p>
<xhtml:h2>Security Fixes</xhtml:h2>
<xhtml:p>We were notified by <xhtml:a href="https://github.com/stefanotorresi">Stefano Torresi</xhtml:a> of a
potential security vector in
<xhtml:code>ZF\Apigility\DbConnectedResource</xhtml:code>. While the
<xhtml:code>create()</xhtml:code> method of that class pulls data from the
composed input filter, if present, the <xhtml:code>patch()</xhtml:code> and
<xhtml:code>update()</xhtml:code> methods were not, making it possible for an
attacker to send unwanted data to the API service.</xhtml:p>
<xhtml:p>We have updated the class to pull from the composed input
filter, if present, for each of the <xhtml:code>create()</xhtml:code>,
<xhtml:code>patch()</xhtml:code>, and <xhtml:code>update()</xhtml:code> methods.</xhtml:p>
<xhtml:p>If you use DB-Connected REST resources in Apigility, we
<xhtml:strong>strongly</xhtml:strong> recommend updating immediately. You can
do so by running <xhtml:code>composer update</xhtml:code> inside your
application.</xhtml:p>
<xhtml:p><xhtml:a href="/security/advisory/AG2014-01">Read the security
advisory for more details.</xhtml:a></xhtml:p>
<xhtml:h2>Deployment Fixes</xhtml:h2>
<xhtml:p>We were notified that the logic for finding a Composer
executable in <xhtml:a href="https://github.com/zfcampus/zf-deploy">zf-deploy</xhtml:a> would fail in
some situations. A fix was contributed that better resolves the
path to the executable, particularly in situations where a
<xhtml:code>composer.phar</xhtml:code> must first be downloaded.</xhtml:p>
<xhtml:p>Additionally, in reviewing this fix, <xhtml:a href="https://twitter.com/ezimuel">Enrico Zimuel</xhtml:a> noted that we
needed test coverage for most of the ZFDeploy functionality; we now
have a comprehensive set of tests, all passing!</xhtml:p>
<xhtml:h2>Documentation Fixes</xhtml:h2>
<xhtml:p><xhtml:a href="https://github.com/kaloyan-raev">Kaloyan Raev</xhtml:a> noted
that the HTML documentation does not render properly under Internet
Explorer, due to the order in which media type selectors are
matched. A swap in the order fixes the situation, and continues to
work as expected under other browsers.</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Many thanks to Stefano Torresi for working with us on the
DB-Connected security issue, to Kaloyan Raev for his assistance
with zf-deploy and the documentation, and to Enrico Zimuel, for the
huge amount of testing he added to zf-deploy!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 1.0.2 Released!]]></title>
    <published>2014-06-04T18:00:00+0000</published>
    <updated>2014-06-04T18:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-1-0-2-released.html"/>
    <id>http://framework.zend.com/blog/apigility-1-0-2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>We are pleased to announce the immediate availability of
Apigility 1.0.2!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://apigility.org/download">https://apigility.org/download</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is our second maintenance release of Apigility, fixing a
number of issues, and providing significant improvements for file
upload capabilities.</xhtml:p>
<xhtml:h2>Upload Support</xhtml:h2>
<xhtml:p>Uploads were possible before this release, but were difficult to
properly enable. Additionally, PATCH and PUT requests required
manually handling the file uploads, as PHP does not natively
support file uploads for those request methods; the Zend Framework
2 InputFilter component, because it utilizes PHP's native support
for validating that an upload completed and for moving an upload
file to a new location, also could not deal with these methods.</xhtml:p>
<xhtml:p>This release makes the following changes in order to facilitate
file uploads via your Apigility API:</xhtml:p>
<xhtml:ul>
<xhtml:li>Content validation was altered to merge file upload data, when
present, with the submitted API fields.</xhtml:li>
<xhtml:li>The Admin UI now allows you to mark a field as representing a
file upload; this ensures that content validation will work
properly, as content validation differs for file uploads.</xhtml:li>
<xhtml:li>The content negotiation module now provides emulation for PHP's
file upload support when receiving PATCH and PUT requests, ensuring
that the files are uploaded in the same manner, cleaned up
post-request, and passed to validation properly. You should notice
no difference between POST, PUT, or PATCH requests when performing
file uploads, whether a single or multiple files are provided.</xhtml:li>
</xhtml:ul>
<xhtml:p>File uploads are only done using the
<xhtml:code>multipart/form-data</xhtml:code> media type. You will need to add
that media type to the content negotiation whitelist if you plan to
perform file uploads.</xhtml:p>
<xhtml:p>If you have further questions, you can <xhtml:a href="https://apigility.org/documentation/recipes/upload-files-to-api">consult
the documentation</xhtml:a>.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>While upload support is the major feature of this release, we
fixed many other issues.</xhtml:p>
<xhtml:h3>General</xhtml:h3>
<xhtml:ul>
<xhtml:li>
<xhtml:p>All repositories have updated <xhtml:code>composer.json</xhtml:code> files
that properly define the two branch aliases for the
<xhtml:code>master</xhtml:code> and <xhtml:code>develop</xhtml:code> branches.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>All repositories have updated <xhtml:code>README.md</xhtml:code> files that
provide a "Requirements" section linking to the
<xhtml:code>composer.json</xhtml:code> file.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-apigility-admin</xhtml:h3>
<xhtml:ul>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/181">Fixes for
the "Encrypt" and "Compress" filter adapters</xhtml:a>, ensuring that
these filters can be properly created and configured.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/182">Ability
to specify file upload fields</xhtml:a>. A field can now be marked as
representing a file upload, ensuring it can then be validated
correctly.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/171">Fix for
unclosed link in authentication screen</xhtml:a>, which was preventing
edits and saves of authentication details.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/184">Remove
charset option for Postgres adapters</xhtml:a>, as that adapter does not
support setting the character set.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/185">Added DSN
to DB adapter input filter</xhtml:a>, so that edits to an existing DB
adapter will save when the DSN is provided.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-apigility-admin/pull/178">Fixes to
the DB-Connected service model</xhtml:a>, to ensure that update data is
saved properly.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-apigility-documentation</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-documentation/pull/9">Fixes
HTTP status code for POST operations</xhtml:a>, to now display
<xhtml:code>201</xhtml:code> as a potential status.</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-apigility-skeleton</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-apigility-skeleton/pull/63">Adds
composer.phar to the skeleton</xhtml:a>, since it should have always been
there!</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-content-negotiation</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-content-negotiation/pull/18">Implements
file uploads</xhtml:a> <xhtml:a href="https://github.com/zfcampus/zf-content-negotiation/pull/20">via
request body streaming</xhtml:a> for PUT and PATCH requests.</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-content-validation</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-content-validation/pull/14">Ensures
file upload data is passed to validation</xhtml:a>, which allows
validating file uploads.</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-deploy</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-deploy/pull/15">Ensures
--gitignore flag is passed when copying source tree</xhtml:a>.</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-hal</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-hal/pull/35">Always
store the original entity within ZF\Hal\Entity</xhtml:a>, fixing an issue
where REST controllers cast entities to arrays prior to creating
the <xhtml:code>ZF\Hal\Entity</xhtml:code> instance, and thus causing listeners
on <xhtml:code>renderEntity</xhtml:code> et. al. to receive data that could
never be matched.</xhtml:li>
</xhtml:ul>
<xhtml:h3>zf-oauth2</xhtml:h3>
<xhtml:ul>
<xhtml:li><xhtml:a href="https://github.com/zfcampus/zf-oauth2/pull/43">Pass
all OAuth2 adapter options to oauth2-server-php</xhtml:a>, enabling the
ability to turn on refresh token re-issue, among other things.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Many thanks for all the great issue reports and discussions on
the <xhtml:a href="http://bit.ly/apigility-users">mailing list</xhtml:a> and
the various issue trackers!</xhtml:p>
<xhtml:p>We will do additional maintenance releases on an as-needed
basis. The next feature release, 1.1, is in development, and
includes:</xhtml:p>
<xhtml:ul>
<xhtml:li>Doctrine-Connected REST services</xhtml:li>
<xhtml:li>Database Autodiscovery for REST services (think of this as
DB-Connected that finds all your tables and proposes field
configuration for you!)</xhtml:li>
<xhtml:li>Mongo-Connected REST services</xhtml:li>
<xhtml:li>HTTP Caching</xhtml:li>
</xhtml:ul>
<xhtml:p>We would appreciate any feedback you can provide, either in the
mailing lists, in issues, or via comments on associated pull
requests.</xhtml:p>
<xhtml:p>Stay tuned!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 1.0.0 Released!]]></title>
    <published>2014-05-07T15:00:00+0000</published>
    <updated>2014-05-07T15:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-1-0-0-released.html"/>
    <id>http://framework.zend.com/blog/apigility-1-0-0-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:img src="/images/ag-hero.png" style="display: block; margin-left: auto; margin-right: auto; max-width: 100%" alt="Apigility"/>
<xhtml:p>We're happy to announce the immediate availability of Apigility
1.0.0!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://apigility.org/download">http://apigility.org/download</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>Apigility is the world's easiest way to create robust,
well-formed, documented, and secure APIs.</xhtml:p>
<xhtml:p>We've noticed that web development has fundamentally shifted
over the past few years. Server side applications that return heavy
loads of HTML markup are waning; instead APIs are driving the web.
APIs are being used to enable inter-division data exchange. APIs
are being used as the building blocks for web applications --
allowing user interface experts the flexibility to change the look
and feel of a website with no intervention from the server-side
application developers. APIs are driving and empowering the mobile
web, allowing creation of both native mobile applications and
mobile web applications.</xhtml:p>
<xhtml:p>Apigility exists to allow <xhtml:em>you</xhtml:em> to expose <xhtml:em>your</xhtml:em>
business logic as an API.</xhtml:p>
<xhtml:h2>Opinionated</xhtml:h2>
<xhtml:p>APIs are not just about tossing around some JSON or XML. They
require a ton of architectural decisions every step of the way as
you implement the API:</xhtml:p>
<xhtml:ul>
<xhtml:li>How will you handle HTTP method negotiation?<xhtml:br/></xhtml:li>
<xhtml:li>How will you handle content negotiation?<xhtml:br/></xhtml:li>
<xhtml:li>How will you handle authentication?<xhtml:br/></xhtml:li>
<xhtml:li>How will you handle authorization?<xhtml:br/></xhtml:li>
<xhtml:li>How will you handle input validation?<xhtml:br/></xhtml:li>
<xhtml:li>What representation format will you use?<xhtml:br/></xhtml:li>
<xhtml:li>How will you represent errors?<xhtml:br/></xhtml:li>
<xhtml:li>How will you document your API?</xhtml:li>
</xhtml:ul>
<xhtml:p>Most of these questions have no single, correct answer. Many
standards, proposals, and drafts exist for all aspects of APIs. As
a developer, you have to wade through them and choose which you
will use, and how you will put them together.</xhtml:p>
<xhtml:p>In short, when developing an API, you often spend an equal or
greater amount of time developing the architecture for the API as
you would writing the code you want to expose in the first
place.</xhtml:p>
<xhtml:p>Apigility is opinionated <xhtml:em>for you</xhtml:em>, and provides a
flexible and robust engine that answers these questions:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://tools.ietf.org/html/draft-kelly-json-hal-06">application/hal+json</xhtml:a>
is<xhtml:br/>
used for the representation format (but you can add your own
representations<xhtml:br/>
if you really want).<xhtml:br/></xhtml:li>
<xhtml:li><xhtml:a href="http://tools.ietf.org/html/draft-nottingham-http-problem-06">application/problem+json</xhtml:a><xhtml:br/>

is used for representing errors.<xhtml:br/></xhtml:li>
<xhtml:li>HTTP method negotiation is handled early, returning appropriate
response<xhtml:br/>
status codes and headers when invalid methods are detected. Support
for<xhtml:br/>
<xhtml:code>OPTIONS</xhtml:code> requests is built in.<xhtml:br/></xhtml:li>
<xhtml:li>Content negotiation is handled early, returning appropriate
response<xhtml:br/>
status codes and headers when we cannot return an appropriate
representation,<xhtml:br/>
or cannot understand the data provided to the
application.<xhtml:br/></xhtml:li>
<xhtml:li>Authentication is handled early, returning appropriate
response<xhtml:br/>
status codes and headers when invalid credentials are detected. We
provide<xhtml:br/>
HTTP Basic, HTTP Digest, and OAuth2 support out-of-the-box, but
provide a<xhtml:br/>
flexible, event-driven system for implementing or integrating your
own<xhtml:br/>
authentication systems.<xhtml:br/></xhtml:li>
<xhtml:li>Authorization is handled early, returning appropriate
response<xhtml:br/>
status codes and headers when access is not allowed. We provide an
ACL-based<xhtml:br/>
system that can be easily extended to provide user-specific
permissions as<xhtml:br/>
well as an event-driven system for implementing or integrating your
own<xhtml:br/>
authorization systems if needed.<xhtml:br/></xhtml:li>
<xhtml:li>Input validation is handled early, returning appropriate
response status codes<xhtml:br/>
and error messages when invalid data is detected.<xhtml:br/></xhtml:li>
<xhtml:li>Documentation is provided out of the box. We provide HTML,
JSON, and<xhtml:br/>
<xhtml:a href="https://helloreverb.com/developers/swagger">Swagger</xhtml:a>
representations; we<xhtml:br/>
anticipate adding more in the future. Documentation is generated
automatically<xhtml:br/>
from your API configuration, and you are able to add descriptions
and more<xhtml:br/>
detail as desired.</xhtml:li>
</xhtml:ul>
<xhtml:p>We make decisions so you don't have to. However, you'll note
that we've created flexibility so that if <xhtml:em>you</xhtml:em> have an
opinion, you can integrate it!</xhtml:p>
<xhtml:h2>Interface with your API</xhtml:h2>
<xhtml:p>Apigility is not just an engine. Apigility also provides a
web-based Admin UI to allow you to quickly create and modify your
API and services, set up authentication, create authorization
rules, set up validations for incoming data, and write
document.</xhtml:p>
<xhtml:img src="/images/apigility-1.0.0-dashboard.png" style="display: block; margin-left: auto; margin-right: auto; max-width: 100%" alt="Apigility Dashboard"/>
<xhtml:p>The Admin UI is built using <xhtml:a href="https://angularjs.org/">AngularJS</xhtml:a>, and is backed by... an API!
(We're taking the "API First" mantra very seriously!)</xhtml:p>
<xhtml:h2>Get Started in Seconds</xhtml:h2>
<xhtml:p>You can install Apigility in seconds; execute the following
command in your shell:</xhtml:p>
<xhtml:pre class="console">
<xhtml:code>$ curl -sS http://apigility.org/install | php</xhtml:code>
</xhtml:pre>
<xhtml:p>or, if you don't have <xhtml:a href="http://curl.haxx.se/">curl</xhtml:a>
installed, use the PHP interpreter itself:</xhtml:p>
<xhtml:pre>
<xhtml:code>$ php -r "readfile('http://apigility.org/install');" | php</xhtml:code>
</xhtml:pre>
<xhtml:h2>Deploy Anywhere</xhtml:h2>
<xhtml:p>Apigility is built on top of Zend Framework 2, and has tools to
ensure that the Admin UI is only present in development mode. As
such, you can deploy Apigility anywhere you normally deploy PHP
applications: a local server, your web host provider, or the
cloud.</xhtml:p>
<xhtml:p>We provide a tool, <xhtml:a href="https://github.com/zfcampus/zf-deploy">ZFDeploy</xhtml:a>, to aid in
creating deployment packages, including Zend Server ZPK files.</xhtml:p>
<xhtml:h2>Modular</xhtml:h2>
<xhtml:p>Apigility consists of more than a dozen Zend Framework 2
modules, each doing one specific task in the workflow. As such, you
can mix and match these modules in your own ZF2 applications, or
even <xhtml:a href="http://apigility.org/documentation/recipes/apigility-in-an-existing-zf2-application">
add Apigility to an existing application</xhtml:a>.</xhtml:p>
<xhtml:h2>The Future</xhtml:h2>
<xhtml:p>Reaching 1.0 is a huge milestone -- but it's not the end of the
road!</xhtml:p>
<xhtml:p>We already have a number of great features waiting in the wings
for a 1.1 release: Doctrine-Connected services, Database
Autodiscovery, Mongo-Connected services, and HTTP Caching.</xhtml:p>
<xhtml:p>What will <xhtml:em>you</xhtml:em> build today?</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 1.0.0beta3 Released!]]></title>
    <published>2014-04-30T20:30:00+0000</published>
    <updated>2014-04-30T20:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-1-0-0beta3-released.html"/>
    <id>http://framework.zend.com/blog/apigility-1-0-0beta3-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>We are pleased to announce the immediate availability of
Apigility 1.0.0beta3!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://apigility.org/download">http://apigility.org/download</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is our third -- and likely last! -- beta release of
Apigility! The features in this release are mainly around
stabilization.</xhtml:p>
<xhtml:h2>Deployment and Console</xhtml:h2>
<xhtml:p>Most of the work we've performed since beta2 was on <xhtml:a href="https://github.com/zfcampus/zf-deploy">zf-deploy</xhtml:a>, our
packaging/deployment tool. We made the following changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>First, the tool can now be used both within an application, as
well as a standalone <xhtml:a href="http://php.net/phar">phar</xhtml:a> file.
When used as a standalone phar file, you can now self update it
with the <xhtml:code>self-update</xhtml:code> command; this will check <xhtml:a href="https://packages.zendframework.com/">https://packages.zendframework.com/</xhtml:a>
for any new versions, and, if found, do an "in-place" update of the
tool. (Note: the library we use that provides this functionality
often emits PHP fatal errors; in practice, however, we've noticed
that the process works even when such errors are reported.)</xhtml:li>
<xhtml:li>Second, we were not happy with the argument handling we were
using, nor with the strong coupling of console argument parsing
logic with the logic consuming the arguments. We built a small
microframework around <xhtml:code>Zend\Console</xhtml:code>'s
<xhtml:code>RouteMatcher</xhtml:code> subcomponent that provides more
flexibility around argument handling, and are now shipping this in
the module <xhtml:a href="https://github.com/zfcampus/zf-console">zf-console</xhtml:a>.</xhtml:li>
</xhtml:ul>
<xhtml:p>In addition to these architectural changes, we also implemented
two new features in the tool:</xhtml:p>
<xhtml:ul>
<xhtml:li>You can specify a directory with the "local" configuration you
want to use in the deployment package via the
<xhtml:code>--configs</xhtml:code> argument.</xhtml:li>
<xhtml:li>You can specify a directory containing the ZPK skeleton you
wish to use when creating a ZPK (Zend Server deployment package);
this directory should contain a <xhtml:code>deployment.xml</xhtml:code> and any
scripts you will be using.</xhtml:li>
</xhtml:ul>
<xhtml:p>With these changes, we feel that <xhtml:code>zf-deploy</xhtml:code> is ready
for inclusion in a stable Apigility release!</xhtml:p>
<xhtml:h2>Documentation Updates</xhtml:h2>
<xhtml:p>We've received a number of documentation improvements since
beta2, and added a few documents as well.</xhtml:p>
<xhtml:p>In particular:</xhtml:p>
<xhtml:ul>
<xhtml:li>An error was spotted in the "HAL for RPC services" recipe that
made the code unusable.</xhtml:li>
<xhtml:li>We've documented how to use the Zend Server SDK to deploy ZPK
packages.</xhtml:li>
<xhtml:li>We've added a recipe for adding Apigility modules to an
existing Zend Framework 2 application.</xhtml:li>
<xhtml:li>We've added documentation on the new <xhtml:code>zf-console</xhtml:code>
module.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Beta3 Updates</xhtml:h2>
<xhtml:p>In addition to the deployment and console tooling, we made the
following changes:</xhtml:p>
<xhtml:ul>
<xhtml:li>We updated the <xhtml:code>SendResponse</xhtml:code> listener in
<xhtml:code>zf-api-problem</xhtml:code> to merge in any headers set in the
application response object before sending the API Problem
response. This ensures that any previously set headers are also set
-- solving several issues observed when using third-party modules
for Cross Origin Resource Sharing (CORS), as well as HTTP
authentication.</xhtml:li>
<xhtml:li>The storage adapters we ship with <xhtml:code>zf-oauth</xhtml:code> now
both allow you to specify configuration via a
<xhtml:code>storage_settings</xhtml:code> key; this change allows you to
specify custom tables for both the PDO and Mongo adapters.</xhtml:li>
<xhtml:li>We've updated the "api.enable" service to ensure it works with
current versions of Apigility (and no longer raises errors!).</xhtml:li>
<xhtml:li>We no longer display a resource class in the "Source Code" tab
of a service if a corresponding class does not exist (e.g.,
DB-Connected resource classes are virtual services).</xhtml:li>
<xhtml:li>We've added the option to recursively delete the directory for
a service to the Admin API; the Admin UI now presents a checkbox
with this option.</xhtml:li>
<xhtml:li>We've added the option to delete an entire API. By default,
this only removes the API's module from application configuration;
however, you have the option to recursively delete the API module
as well (once again presented in the Admin UI via a checkbox).</xhtml:li>
<xhtml:li>We now generate factories for RPC controllers and REST resource
classes when creating new services. This simplifies the story for
dependency injection of these classes.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>At this time, we feel Apigility has become very stable, and that
we have addressed the most pressing usability issues. We anticipate
issuing a stable release next week (week of 5 May 2014).</xhtml:p>
<xhtml:p>As noted in previous beta announcements, reaching stability is
only the first step, however! Features such as
"Doctrine-Connected", "Mongo-Connected", and "DB-Autodiscovery"
REST services are already either implemented or will be soon, and
we will be debuting these in a 1.1 version in the very near
future.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 1.0.0beta2 Released!]]></title>
    <published>2014-04-16T18:30:00+0000</published>
    <updated>2014-04-16T18:30:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-1-0-0beta2-released.html"/>
    <id>http://framework.zend.com/blog/apigility-1-0-0beta2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>We are pleased to announce the immediate availability of
Apigility 1.0.0beta2!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="http://apigility.org/download">http://apigility.org/download</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is our second beta release of Apigility, and introduces
extensive documentation, Admin UI performance improvements, and
deployment tools!</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>The primary goal of the beta phase for the Zend Framework team
is documenting the project. We've made enormous headway at this
point, but we'll let <xhtml:strong>you</xhtml:strong> be the judge of that;
<xhtml:a href="http://apigility.org/documentation">visit the
documentation yourself</xhtml:a>!</xhtml:p>
<xhtml:p>Among topics covered:</xhtml:p>
<xhtml:ul>
<xhtml:li>A "Getting Started" guide, and a companion, "REST Service
Tutorial".</xhtml:li>
<xhtml:li>An API Primer</xhtml:li>
<xhtml:li>Chapters on Authentication/Authorization, Content Validation,
and the Documentation features.</xhtml:li>
<xhtml:li>A module-by-module reference guide, detailing configuration
options.</xhtml:li>
</xhtml:ul>
<xhtml:h2>New Features</xhtml:h2>
<xhtml:p>While the beta cycle is primarily around stabilizing the API and
Admin UI, we decided one new feature warranted inclusion in version
1: a packaging/deployment tool, <xhtml:a href="https://github.com/zfcampus/zf-deploy">zf-deploy</xhtml:a>.</xhtml:p>
<xhtml:p>This tool allows you to create packages from your Apigility --
or any ZF2 application -- for deployment. Formats supported include
zip, tar, tgz, and zpk (the Zend Server deployment package format).
We plan to integrate support for deploying zpk packages soon as
well.</xhtml:p>
<xhtml:h2>Beta2 Updates</xhtml:h2>
<xhtml:p>Polishing, polishing, polishing was our mantra for beta2. This
included incorporating user feedback, but also scrutinizing the UI
and code for consistency issues.</xhtml:p>
<xhtml:h3>UI Updates</xhtml:h3>
<xhtml:p>Following beta1, we had a number of complaints about UI
responsiveness, particularly around the "Fields" screen. We did
some analysis of the UI, and a lot of work around dynamically
loading and unloading DOM in the admin based on what should be
visible. As a result, we were able to significantly improve
responsiveness. There may be more work to do, but early reports
indicate that the changes make the Admin UI usable in situations
that previously crashed the browser.</xhtml:p>
<xhtml:p>In addition to the performance improvements, we made the
following updates:</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p>On the "Authorizations" screen for each API, if no
authentication is currently configured, we display a message to
this effect, and link to the authentication screen. Unfortunately,
in beta1, that link was invalid; we've fixed this.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The "Fields" tab received a slight overhaul. We noticed that
items with toggles displayed "Yes/No" terminology, but "On/Off" for
the actual form input; these now use "Yes/No" verbiage
consistently. The "Help" screen could not be dismissed with the
<xhtml:code>&lt;Esc&gt;</xhtml:code> key; it now can. Previously, when hitting
<xhtml:code>&lt;Enter&gt;</xhtml:code> from the "Create New Field" text input,
it would raise the "Help" screen; it now properly creates the new
field. The "Description" field was moved to the first option
displayed for each field, to promote documentation of fields. We
also added a "Validation Failure Message" field to allow specifying
a unified error message on failed validation (vs. one or more per
validator); we also ensured that "blanking" out the data in this
field will remove any such message previously set. Finally, filters
are now listed before validators, to signal the order in which
validation operations occur (filtering/normalization occurs before
validation).</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The "Source Code" tab was not properly generating links for
files; we've fixed this in beta2.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h3>Engine Updates</xhtml:h3>
<xhtml:p>A few improvements were made to the API engine itself:</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p>The <xhtml:code>UnauthorizedListener</xhtml:code> registered by the
<xhtml:code>zf-apigility</xhtml:code> module was not registering headers set by
the <xhtml:code>zf-mvc-auth</xhtml:code> module, meaning that the
<xhtml:code>WWW-Authenticate</xhtml:code> header was not propagating. This has
been corrected.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>We modified <xhtml:code>ZF\ContentNegotiation\JsonModel</xhtml:code> to
check for <xhtml:code>json_encode()</xhtml:code> errors, and to raise an
exception when one is detected. This prevents situations where an
empty response is returned on inability to serialize to JSON.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:code>zf-apigility-documentation-swagger</xhtml:code> was not
returning a <xhtml:code>Content-Type</xhtml:code> header value of
<xhtml:code>application/vnd.swagger+json</xhtml:code>; it now does.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>We fixed the bcrypt cost in <xhtml:code>zf-oauth2</xhtml:code> to use the
defaults from <xhtml:code>Zend\Crypt</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>We updated the OAuth2 database schema in <xhtml:code>zf-oauth2</xhtml:code>
to match that of the upstream <xhtml:a href="https://github.com/bshaffer/oauth2-server-php">oauth2-server-php
package</xhtml:a>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>We now inject the <xhtml:code>ZF\Rest\ResourceEvent</xhtml:code> with the
current MVC request object; you can retrieve it from within your
resource class using
<xhtml:code>$this-&gt;getEvent()-&gt;getRequest()</xhtml:code>. This will give
you access to HTTP request headers, query string arguments,
etc.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>We no longer allow multiple "self" relational links in
<xhtml:code>zf-hal</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>When specifying route parameters for a <xhtml:code>zf-hal</xhtml:code>
metadata map, you can now use a PHP callable as the value;
<xhtml:code>zf-hal</xhtml:code> will invoke that callable with the object for
which a link is being generated in order to get the value for that
route parameter. This is particularly useful for deterimining
identifiers for parent resources.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>We moved the <xhtml:code>zf-apiglity-welcome</xhtml:code> requirement to be
a development-only requirement.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>We're excited to get a stable release of Apigility as soon as we
possibly can. We feel that both the engine and Admin UI have
stabilized significantly, and are targetting a stable release by
the end of this month. <xhtml:strong>During that time, we will be working
primarily on additional documentation and critical
bugfixes.</xhtml:strong></xhtml:p>
<xhtml:p>As noted in the beta1 announcement, reaching stability is only
the first step, however! We already have contributors making
significant headway on features such as "Doctrine-Connected",
"Mongo-Connected", and "DB-Autodiscovery" REST services, and we
will be debuting these in a 1.1 version not long after we reach
version 1.0. Stay tuned!</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.7 and 2.3.1 Released!]]></title>
    <published>2014-04-15T20:05:00+0000</published>
    <updated>2014-04-15T20:05:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-7-and-2-3-1-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-7-and-2-3-1-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of:</xhtml:p>
<xhtml:ul>
<xhtml:li>Zend Framework <xhtml:strong>2.2.7</xhtml:strong></xhtml:li>
<xhtml:li>Zend Framework <xhtml:strong>2.3.1</xhtml:strong></xhtml:li>
</xhtml:ul>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest#ZF2">http://framework.zend.com/downloads/latest#ZF2</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>While these are scheduled maintenance releases, they also
contain important security fixes; we strongly encourage users to
upgrade.</xhtml:p>
<xhtml:h2>Security Fixes</xhtml:h2>
<xhtml:p>One new security advisory has been made, and has been patched in
both 2.2.7 and 2.3.1.</xhtml:p>
<xhtml:p><xhtml:a href="/security/advisory/ZF2014-03">ZF2014-03</xhtml:a>, which
mitigates potential cross site scripting (XSS) vectors in multiple
view helpers due to inappropriate HTML attribute escaping. Many
view helpers were using the <xhtml:kbd>escapeHtml()</xhtml:kbd> view helper in
order to escape HTML attributes. This release patches them to use
the <xhtml:kbd>escapeHtmlAttr()</xhtml:kbd> view helper in these situations. If
you use form or navigation view helpers, or "HTML element" view
helpers (such as <xhtml:kbd>gravatar()</xhtml:kbd>, <xhtml:kbd>htmlFlash()</xhtml:kbd>,
<xhtml:kbd>htmlPage()</xhtml:kbd>, or <xhtml:kbd>htmlQuicktime()</xhtml:kbd>), we recommend
upgrading immediately.</xhtml:p>
<xhtml:p>For more information, follow the links above; if you use any of
the components affected, please upgrade as soon as possible.</xhtml:p>
<xhtml:h2>2.3.1</xhtml:h2>
<xhtml:p>In addition to the security fixes listed above,
<xhtml:strong>2.3.1</xhtml:strong> contains more than 80 bugfixes. In
particular, a number of improvements were made to the behavior of
nested form fieldsets and collection input filters (which often go
hand-in-hand).</xhtml:p>
<xhtml:p>For the complete list of changes, <xhtml:a href="/changelog/2.3.1">read the changelog</xhtml:a>.</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>As always, I'd like to thank the many contributors who made
these releases possible! In particular, I'd like to thank the team
at <xhtml:a href="https://roave.com">Roave</xhtml:a>, who both reported and
patched the ZF2014-03 security issue.</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Zend Framework 2 maintenance releases will happen bi-monthly,
with the next one scheduled for mid-June, 2014. Releases may occur
more frequently if security issues are reported.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 1.12.6 Released!]]></title>
    <published>2014-04-15T20:00:00+0000</published>
    <updated>2014-04-15T20:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-1-12-6-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-1-12-6-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 1.12.6!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest#ZF1">http://framework.zend.com/downloads/latest#ZF1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is a maintenance release, and corrects a backwards
compatibility break introduced in 1.12.4.</xhtml:p>
<xhtml:h2>Locale Updates</xhtml:h2>
<xhtml:p>Zend Framework 1.12.4 included an update to the <xhtml:a href="//cldr.unicode.org/">CLDR</xhtml:a> version shipped, bumping to version
24. Our previous CLDR version, however, was version 2.0 or newer --
a version over 3 years old at this point.</xhtml:p>
<xhtml:p>The problem that arose is that <xhtml:a href="https://github.com/akrabat/zf1/blob/0282f49112688f124373bcf915abb6227d050454/library/Zend/Locale.php#L38-L67">
more than two dozen locales have been renamed</xhtml:a> in the official
CLDR sources since then, and Zend Framework 1.12.4 shipped exactly
what CLDR ships. As a result, users of those old locales suddenly
found their applications no longer working, due to newly invalid
locales.</xhtml:p>
<xhtml:p>We have created some functionality in Zend Framework 1.12.6 to
alias old locales to the equivalent new locale string, thus
restoring backwards compatibility with versions prior to
1.12.4.</xhtml:p>
<xhtml:h2>Tag Updates</xhtml:h2>
<xhtml:p>Prior to 1.12.4, we used Subversion for maintaining Zend
Framework 1, and thus for tagging releases. Tags in Subversion,
however, are branches, not snapshots, and our build process at the
time took advantage of that fact, for better or for worse: we would
build the documentation, and then replace the documentation sources
with the built artifacts; we would inject the ZF1 Extras
repository; and we would inject the Dojo repository. As a result,
the tag was not a 1:1 snapshot of the trunk at the time, but rather
the result of a build process.</xhtml:p>
<xhtml:p>This meant that if a user was using <xhtml:kbd>svn:externals</xhtml:kbd> and
pinned to a tag, they would have the equivalent of our distribution
packages -- in other words, access to the ZF1 Extras, Dojo, and
documentation.</xhtml:p>
<xhtml:p>With the <xhtml:a href="http://framework.zend.com/blog/2013-03-27-zf1-git-migration.html">migration
to Git a year ago</xhtml:a>, our build processes needed to change. Git
does true tags: a tag is a snapshot of the branch at the revision
when it was tagged. The result is that tags no longer contain the
ZF1 Extras or documentation. Several users contacted us indicating
this broke apps in which they were using
<xhtml:kbd>svn:externals</xhtml:kbd>.</xhtml:p>
<xhtml:p>We have decided we will <xhtml:em>not</xhtml:em> be returning to the
previous tagging methodology, as we much prefer keeping a
separation between tags and the build artifacts. For those users
who want to retain the same semantic structure of having the ZF1
Extras imported via <xhtml:kbd>svn:externals</xhtml:kbd> within the ZF1
library, you can still do that, by adding an additional line to
your <xhtml:kbd>svn:externals</xhtml:kbd> property:</xhtml:p>
<xhtml:pre>
<xhtml:code>
vendor/ZendFramework https://github.com/zendframework/zf1/tags/{VERSION}
vendor/ZendFramework/extras https://github.com/zendframework/zf1-extras/tags/{VERSION}
</xhtml:code>
</xhtml:pre>
<xhtml:p>(Modify the above to reflect your own project structure, and to
inject the appropriate version string.)</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>As always, I'd like to thank the many contributors who made this
release possible! In particular, Rob Allen identified the various
locales that needed updating, and submitted the locale aliasing
solution.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
