<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog Entries - ZF Blog</title>
  <updated>2014-03-07T17:50:00+0000</updated>
  <generator uri="http://framework.zend.com" version="2">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://framework.zend.com/blog.html"/>
  <link rel="self" type="application/atom+xml" href="http://framework.zend.com/blog-atom.xml"/>
  <id>http://framework.zend.com/blog.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 1.12.5 Released!]]></title>
    <published>2014-03-07T17:50:00+0000</published>
    <updated>2014-03-07T17:50:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-1-12-5-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-1-12-5-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 1.12.5!</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release fixes PHP 5.2 support for the 1.12 series. If you
use PHP 5.2 with Zend Framework 1.12, we encourage you to upgrade
immediately.</xhtml:p>
<xhtml:h2>5.2 support</xhtml:h2>
<xhtml:p><xhtml:a href="/blog/zend-framework-1-12-4-2-1-6-and-2-2-6-released.html">Yesterday's
1.12.4 release</xhtml:a> provided several security fixes around XML
eXternal Entity and XML Entity Expansion attack vectors.
Unfortunately, we had not reviewed our patch to consider PHP 5.2
support, and the code contained PHP closures -- which have only
been available since PHP 5.3.</xhtml:p>
<xhtml:p>The code in the <xhtml:code>Zend\Xml</xhtml:code> component was updated to
remove the closures, and tests for all affected components were run
to ensure they worked across PHP versions from 5.2 - 5.5.</xhtml:p>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>A big thank you to those contributors who spotted the errors and
provided the initial fixes, particularly Martin Hujer and Frank
Bruckner.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 1.12.4, 2.1.6, and 2.2.6 Released!]]></title>
    <published>2014-03-06T23:00:00+0000</published>
    <updated>2014-03-06T23:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-1-12-4-2-1-6-and-2-2-6-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-1-12-4-2-1-6-and-2-2-6-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of:</xhtml:p>
<xhtml:ul>
<xhtml:li>Zend Framework <xhtml:strong>1.12.4</xhtml:strong></xhtml:li>
<xhtml:li>Zend Framework <xhtml:strong>2.1.6</xhtml:strong></xhtml:li>
<xhtml:li>Zend Framework <xhtml:strong>2.2.6</xhtml:strong></xhtml:li>
</xhtml:ul>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>While these are scheduled maintenance releases, they also
contain important security fixes; we strongly encourage users to
upgrade.</xhtml:p>
<xhtml:h2>Security Fixes</xhtml:h2>
<xhtml:p>Two new security advisories have been made:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/security/advisory/ZF2014-01">ZF2014-01</xhtml:a>, which
mitigates XML eXternal Entity and XML Entity Expansion vectors in a
variety of components. While we had taken measures two years ago to
mitigate these issues, a researcher discovered several components
that remained vulnerable.</xhtml:li>
<xhtml:li><xhtml:a href="/security/advisory/ZF2014-02">ZF2014-02</xhtml:a>, which
mitigates an issue in our OpenID consumers whereby a malicious
Identity Provider could be used to spoof the identity of other
providers.</xhtml:li>
</xhtml:ul>
<xhtml:p>For more information, follow the links above; if you use any of
the components affected, please upgrade as soon as possible.</xhtml:p>
<xhtml:h2>1.12.4</xhtml:h2>
<xhtml:p>This is the first maintenance release in almost a year on the
1.12 series, and contains fixes too numerous to list. Among some of
the more important ones, however:</xhtml:p>
<xhtml:ul>
<xhtml:li>The testing infrastructure has been upgraded to PHPUnit 3.7,
making it far simpler for contributors to test changes.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf1/pull/221">#221</xhtml:a> removes
the TinySrc view helper, as the TinySrc service no longer
exists.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf1/pull/222">#222</xhtml:a> removes
the InfoCard component, as the CardSpace service no longer
exists.</xhtml:li>
<xhtml:li><xhtml:a href="https://github.com/zendframework/zf1/pull/271">#271</xhtml:a> removes
the Nirvanix component, as the Nirvanix service shut down in
October 2013.</xhtml:li>
</xhtml:ul>
<xhtml:p>Many thanks to all the contributors who helped polish ZF1,
including both Frank Bruckner and Adam Lundrigan, who provided a
ton of patches and feedback, and to Rob Allen, our release manager,
for shepherding in contributions!</xhtml:p>
<xhtml:h2>2.1.6</xhtml:h2>
<xhtml:p><xhtml:strong>2.1.6</xhtml:strong> is a security release only, and issued to
provide fixes for <xhtml:a href="/security/advisory/ZF2014-01">ZF2014-01</xhtml:a>.</xhtml:p>
<xhtml:h2>2.2.6</xhtml:h2>
<xhtml:p><xhtml:strong>2.2.6</xhtml:strong> is both a security and maintenance
release. It addresses specifically <xhtml:a href="/security/advisory/ZF2014-01">ZF2014-01</xhtml:a>. Additionally, more
than 100 patches were contributed to this release.</xhtml:p>
<xhtml:p>For the complete list of changes, <xhtml:a href="/changelog/2.2.6">read the changelog</xhtml:a>.</xhtml:p>
<xhtml:h2>ZendXml</xhtml:h2>
<xhtml:p>We have released a new component, <xhtml:a href="https://github.com/zendframework/ZendXml">ZendXml</xhtml:a>, to help PHP
developers mitigate XXE and XEE vectors in their own code. We
highly recommend using it if you ware working with XML. It is
available via Composer, as well as via <xhtml:a href="https://packages.zendframework.com/">our packages site</xhtml:a>.</xhtml:p>
<xhtml:h2>Component Releases</xhtml:h2>
<xhtml:p>The following components were updated, to the versions
specified, to mitigate security issues.</xhtml:p>
<xhtml:ul>
<xhtml:li>ZendOpenId, v2.0.2</xhtml:li>
<xhtml:li>ZendRest, v2.0.2</xhtml:li>
<xhtml:li>ZendService_Amazon, v2.0.3</xhtml:li>
<xhtml:li>ZendService_Api, v1.0.0</xhtml:li>
<xhtml:li>ZendService_Audioscrobbler, v2.0.2</xhtml:li>
<xhtml:li>ZendService_Nirvanix, v2.0.2</xhtml:li>
<xhtml:li>ZendService_SlideShare, v2.0.2</xhtml:li>
<xhtml:li>ZendService_Technorati, v2.0.2</xhtml:li>
<xhtml:li>ZendService_WindowsAzure, v2.0.2</xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>As always, I'd like to thank the many contributors who made
these releases possible! The project is gaining in consistency and
capabilities daily as a result of your efforts.</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>We plan to ship version 2.3.0 sometime next week (week of 10
March 2014). We will likely adopt a semi-monthly maintenance
release schedule thereafter.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 0.9.1 Released!]]></title>
    <published>2014-03-01T18:20:00+0000</published>
    <updated>2014-03-01T18:20:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-0-9-1-released.html"/>
    <id>http://framework.zend.com/blog/apigility-0-9-1-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>Today, we're releasing version 0.9.1 of Apigility! You can grab
and test it using one of the following two methods:</xhtml:p>
<xhtml:ul>
<xhtml:li>Composer: <xhtml:code>composer create-project
zfcampus/zf-apigility-skeleton apigility 0.9.1</xhtml:code></xhtml:li>
<xhtml:li>Manual download:
<xhtml:pre>
<xhtml:code>
        wget https://github.com/zfcampus/zf-apigility-skeleton/releases/download/0.9.0/zf-apigility-skeleton-0.9.1.zip
        unzip zf-apigility-skeleton-0.9.1.zip
        </xhtml:code>
</xhtml:pre></xhtml:li>
</xhtml:ul>
<xhtml:p>This release is a maintenance release, fixing two critical
issues reported against 0.9.0</xhtml:p>
<xhtml:h2>Fixes</xhtml:h2>
<xhtml:ul>
<xhtml:li>
<xhtml:p><xhtml:a href="https://github.com/zfcampus/zf-oauth2/issues/27">zfcampus/zfoauth2#27</xhtml:a>
reported an inability to save OAuth2 adapter details from the
Apigility admin UI. These are now corrected.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:a href="https://groups.google.com/a/zend.com/d/msgid/apigility-users/b7723f69-e4cc-4619-84d8-c3dd8c1f93a5%40zend.com">
A report on the apigility-users mailing list</xhtml:a> indicated that
authorizations performed against REST entities were not working
correctly. This was due to an incomplete change from "resource" to
"entity" (as noted in the 0.9.0 release notes); the situation is
now corrected.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>At this point, we turn our attention to stabilizing Zend
Framework 2.3.0, on which Apigility will depend, due to features
added to that upcoming version.</xhtml:p>
<xhtml:p>Once Zend Framework 2.3.0 is released, we will begin the beta
cycle for Apigility 1.0.0. During that timeframe, we will due some
additional improvements to the UI, and work to ensure the engine is
stable. Additionally, we will document the project, providing
documentation for each module, as well as for how the modules work
together as a whole. We hope to provide "recipes" for a number of
common practices and development and deployment situations.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 0.9.0 Released!]]></title>
    <published>2014-02-28T23:00:00+0000</published>
    <updated>2014-03-03T18:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-0-9-0-released.html"/>
    <id>http://framework.zend.com/blog/apigility-0-9-0-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>Today, we're releasing version 0.9.0 of Apigility! You can grab
and test it using one of the following two methods:</xhtml:p>
<xhtml:ul>
<xhtml:li>Composer: <xhtml:code>composer create-project
zfcampus/zf-apigility-skeleton apigility 0.9.0</xhtml:code></xhtml:li>
<xhtml:li>Manual download:
<xhtml:pre>
<xhtml:code>
        wget https://github.com/zfcampus/zf-apigility-skeleton/releases/download/0.9.0/zf-apigility-skeleton-0.9.0.zip
        unzip zf-apigility-skeleton-0.9.0.zip
        </xhtml:code>
</xhtml:pre></xhtml:li>
</xhtml:ul>
<xhtml:p>This release brings in our last planned feature for the upcoming
1.0.0 stable release: the ability to document your APIs, and then
provide that documentation to your end-users!</xhtml:p>
<xhtml:h2>Documentation</xhtml:h2>
<xhtml:p>An API is useless without documentation.</xhtml:p>
<xhtml:p>The Apigility admin UI now allows you to capture narrative
documentation for your services, collections, entities, and
operations. You can document what the request and response bodies
should look like. You can document each field you configure.</xhtml:p>
<xhtml:p>Apigility then merges this documentation with what it knows of
your services: what Accept headers are allowed, what Content-Types
are allowed, what response status codes may be expected, what
fields are available, whether or not authorization is required, and
more. The admin UI provides a visualization of this information for
you.</xhtml:p>
<xhtml:p>We provide several more visualizations, too. The
<xhtml:kbd>zf-apigility-documentation</xhtml:kbd> module is enabled now by
default in the <xhtml:kbd>zf-apigility-skeleton</xhtml:kbd>, providing both
JSON and HTML representations of the documentation at the URI
<xhtml:kbd>/apigility/documentation</xhtml:kbd> (the representation will depend
on the <xhtml:kbd>Accept</xhtml:kbd> header value you provide -- Apigility's
own content negotiation at work!).</xhtml:p>
<xhtml:p>You can also opt in to the new
<xhtml:kbd>zf-apigility-documentation-swagger</xhtml:kbd> module, which will
allow you to either seed an existing <xhtml:a href="https://github.com/wordnik/swagger-ui">Swagger UI</xhtml:a>
installation, or, if you visit the <xhtml:kbd>/apigility/swagger</xhtml:kbd>
URI, provide the Swagger UI itself.</xhtml:p>
<xhtml:p>To see what's possible, <xhtml:a href="http://apigility.org/get-started-video.html">Introduction to
Documentation</xhtml:a> video on the Apigility website!</xhtml:p>
<xhtml:h4>Adding documentation to existing Apigility installs</xhtml:h4>
<xhtml:p>If you are already using Apigility, you will need to add the new
modules to your application. Add the following dependencies to your
<xhtml:kbd>composer.json</xhtml:kbd>:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:kbd>"zfcampus/zf-apigility-documentation": "~1.0-dev"</xhtml:kbd>
(necessary for any documentation visualization, other than in the
admin)</xhtml:li>
<xhtml:li><xhtml:kbd>"zfcampus/zf-apigility-documentation-swagger":
"~1.0-dev"</xhtml:kbd> (if you want the Swagger UI)</xhtml:li>
</xhtml:ul>
<xhtml:p>After running <xhtml:kbd>composer update</xhtml:kbd>, add the modules to
your `config/application.config.php`:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:kbd>ZF\Apigility\Documentation</xhtml:kbd></xhtml:li>
<xhtml:li><xhtml:kbd>ZF\Apigility\Documentation\Swagger</xhtml:kbd></xhtml:li>
</xhtml:ul>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release has been a little over two months in the making,
and has a ton of changes. The following is a list of important
changes for existing users.</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p><xhtml:strong>Changes minimum supported PHP version to
5.3.23</xhtml:strong>, in line with the upcoming ZF 2.3.0. We still
recommend <xhtml:strong>5.4.8</xhtml:strong> for serving the admin user
interface.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>New modules, <xhtml:a href="https://github.com/zfcampus/zf-apigility-documentation">zf-apigility-documentation</xhtml:a>
and <xhtml:a href="https://github.com/zfcampus/zf-apigility-documentation-swagger">zf-apigility-documentation-swagger</xhtml:a>,
providing documentation visualizations of APIs created with
Apigility. The base module provides both JSON and HTML
visualizations via the URI <xhtml:code>/apigility/documentation</xhtml:code>,
based on the Accept header value present.
zf-apigility-documentation-swagger provides an additional JSON
visualization for the mediatype
<xhtml:code>application/vnd.swagger+json</xhtml:code>, for seeding a <xhtml:a href="https://github.com/wordnik/swagger-ui">Swagger UI</xhtml:a>
installation; additionally, it provides the Swagger UI via
<xhtml:code>/apigility/swagger</xhtml:code>.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:p>zf-apigility-documentation is enabled by default in
zf-apigility-skeleton; zf-apigility-documentation-swagger is an
opt-in module.</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p><xhtml:strong>The <xhtml:code>/admin</xhtml:code> and <xhtml:code>/welcome</xhtml:code> routes
are now removed!</xhtml:strong> The admin UI now uses
<xhtml:code>/apigility/ui</xhtml:code>, and the welcome screen uses
<xhtml:code>/apigility/welcome</xhtml:code>. New routes for documentation are
also available, as detailed above.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>A new module was created for Apigility-specific interfaces,
<xhtml:a href="https://github.com/zfcampus/zf-apigility-provider">zf-apigility-provider</xhtml:a>.
The primary use case is for composition in modules that may or may
not be consumed by Apigility (e.g., a general-purpose module that
could be composed into many projects). The only interface currently
is <xhtml:code>ZF\Apigility\Provider\ApigilityProviderInterface</xhtml:code>,
which replaces <xhtml:code>Zend\Apigility\ApigilityModuleInterface</xhtml:code>
(and thus prevents the necessity of installing all Apigility
modules just to implement the interface!).</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>A new module was introduced for handling development mode,
<xhtml:a href="https://github.com/zfcampus/zf-development-mode">zf-development-mode</xhtml:a>;
this is a fork of <xhtml:a href="https://github.com/19ft/NFDevelopmentMode">NFDevelopmentMode</xhtml:a>,
which was based off the equivalent functionality in
zf-apigility-skeleton's <xhtml:code>Application</xhtml:code> module. We removed
the functionality from the skeleton, and added a dependency on the
new module.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>zf-apigility-skeleton's layout was updated to match that of the
admin UI.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>zf-apigility-admin received numerous updates:</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p>Ability to add documentation of services, fields, and
operations.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Ability to use <xhtml:a href="http://www.mongodb.org/">MongoDB</xhtml:a>
when configuring an OAuth2 authentication adapter.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Ability to inspect, add, configure, and delete
zf-content-negotiation selectors.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Links to HTML documentation of APIs managed by the Apigility
instance (more on this below).</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Ability to create and manipulate filter chains for each field in
a service.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>(Limited) detection of whether or not an opcode cache is
enabled; if detected, a modal dialog will be presented to the
end-user detailing how to disable it.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Completely overhauled and refactored admin UI application to
ease maintenance and feature additions. The admin UI now uses
<xhtml:a href="http://bower.io">Bower</xhtml:a> for managing UI asset
dependencies, and <xhtml:a href="http://gruntjs.com">Grunt</xhtml:a> for
building the UI distribution. We have dropped ng-route for the
<xhtml:a href="https://github.com/angular-ui/ui-router">angular-ui
ui-router</xhtml:a>, providing us with more flexibility in UI
implementation and layout. All services, controllers, and
directives have been moved into their own files.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>Countless UI/UX improvements.</xhtml:p>
</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>
<xhtml:p>zf-apigility-welcome has been updated to use the Apigility
"Rocket ElePHPant" logo for the splash screen, and to provide
buttons to the HTML and Swagger documentation, if the appropriate
modules are available.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:strong>zf-rest and zf-rpc now each store a
<xhtml:code>service_name</xhtml:code> key in the configuration for each
service.</xhtml:strong> While efforts have been made to ensure existing
configuration still works, we recommend adding this key to each
service. The value should be the short name representation for the
service, usually the name you provided when creating the
service.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:strong>All repositories have been updated to make a clean
distinction between the terms "Entity", "Collection", and
"Resource".</xhtml:strong> An "Entity" is anything addressable via a URI
containing a unique identifier. A "Collection" is any URI that
returns a set of entities. A "Resource" refers to a URI that may
return collections and/or entities. As such, we have several BC
breaks:</xhtml:p>
<xhtml:ul>
<xhtml:li>
<xhtml:p>The event <xhtml:code>renderResource</xhtml:code> is now
<xhtml:code>renderEntity</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The event <xhtml:code>renderCollection.resource</xhtml:code> is now
<xhtml:code>renderCollection.entity</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p><xhtml:code>ZF\Hal\Resource</xhtml:code> was renamed to
<xhtml:code>ZF\Hal\Entity</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The subkey <xhtml:code>resource</xhtml:code> in the zf-mvc-auth
configuration is now <xhtml:code>entity</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The subkey <xhtml:code>resource_http_methods</xhtml:code> in zf-rest is now
<xhtml:code>entity_http_methods</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The subkey <xhtml:code>resource_class</xhtml:code> in zf-rest is now
<xhtml:code>entity_class</xhtml:code>.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The subkey <xhtml:code>resource_identifier_name</xhtml:code> in zf-rest is
now <xhtml:code>entity_identifier_name</xhtml:code>. (This change only affects
those who have been using latest master, but have not updated since
late-January 2014.)</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>The subkey <xhtml:code>identifier_name</xhtml:code> in zf-apigility
<xhtml:code>db-connected</xhtml:code> configuration is now
<xhtml:code>entity_identifier_name</xhtml:code>;</xhtml:p>
</xhtml:li>
</xhtml:ul>
</xhtml:li>
<xhtml:li>
<xhtml:p>zf-hal now properly differentiates between the identifier used
in the route definition, and the identifier used for the entity;
this allows you to use one value on the uri -- e.g.,
<xhtml:code>status_id</xhtml:code> -- and another in your entity class -- e.g.,
<xhtml:code>id</xhtml:code>. zf-hal will fallback to the
<xhtml:code>route_identifier_name</xhtml:code> if no
<xhtml:code>entity_identifier_name</xhtml:code> is present.</xhtml:p>
</xhtml:li>
<xhtml:li>
<xhtml:p>zf-apigility, when detecting an input filter is present, will
pull values from the input filter, and not use any other values
even if provided in the request. This prevents SQL errors due to
unknown columns.</xhtml:p>
</xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, zf-apigility's assets were updated, and a Grunt +
Bower toolchain provided for keeping them up-to-date.</xhtml:p>
<xhtml:ul>
<xhtml:li>zf-rest, when detecting an input filter is present for the
current request, will inject it into the
<xhtml:code>ResourceEvent</xhtml:code>, allowing developers to retrieve it via
<xhtml:code>$this-&gt;getEvent()-&gt;getInputFilter()</xhtml:code>.</xhtml:li>
</xhtml:ul>
<xhtml:p>Additionally, support for <xhtml:code>patchList</xhtml:code> was added to
the <xhtml:code>AbstractResourceListener</xhtml:code>.</xhtml:p>
<xhtml:ul>
<xhtml:li>zf-api-problem was updated to match <xhtml:a href="http://tools.ietf.org/html/draft-nottingham-http-problem-05">Problem
API draft 5</xhtml:a>. This has changed the internal structure and JSON
representation of problem results. If you were manipulating
<xhtml:code>ApiProblem</xhtml:code> objects directly previously, you may need
to alter your code.</xhtml:li>
</xhtml:ul>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>At this point, we turn our attention to stabilizing Zend
Framework 2.3.0, on which Apigility will depend, due to features
added to that upcoming version.</xhtml:p>
<xhtml:p>Once Zend Framework 2.3.0 is released, we will begin the beta
cycle for Apigility 1.0.0. During that timeframe, we will due some
additional improvements to the UI, and work to ensure the engine is
stable. Additionally, we will document the project, providing
documentation for each module, as well as for how the modules work
together as a whole. We hope to provide "recipes" for a number of
common practices and development and deployment situations.</xhtml:p>
<xhtml:h4>Updates</xhtml:h4>
<xhtml:ul>
<xhtml:li>2014-03-03 12:00: Fixed zf-apigility-documentation to read
zf-apigility-provider in fourth bullet-point of changelog.</xhtml:li>
<xhtml:li>2014-03-01 12:20: Fixed <xhtml:kbd>wget</xhtml:kbd> command to reference
correct download link.</xhtml:li>
</xhtml:ul>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Apigility 0.8.0 Released!]]></title>
    <published>2013-12-20T23:00:00+0000</published>
    <updated>2013-12-21T16:10:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/apigility-0-8-0-released.html"/>
    <id>http://framework.zend.com/blog/apigility-0-8-0-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>Today, we're releasing version 0.8.0 of Apigility! You can grab
and test it using one of the following two methods:</xhtml:p>
<xhtml:ul>
<xhtml:li>Composer: <xhtml:code>composer create-project
zfcampus/zf-apigility-skeleton apigility</xhtml:code></xhtml:li>
<xhtml:li>Manual download:
<xhtml:pre>
<xhtml:code>
wget https://github.com/zfcampus/zf-apigility-skeleton/releases/download/0.8.0/zf-apigility-skeleton-0.8.0.zip
unzip zf-apigility-skeleton-0.8.0.zip</xhtml:code>
</xhtml:pre></xhtml:li>
</xhtml:ul>
<xhtml:p>We never announced our 0.7.0 version (though we showed off the
features at several conferences this past month), so there's a ton
to announce!</xhtml:p>
<xhtml:h2>Authentication and Authorization</xhtml:h2>
<xhtml:p>Authentication and Authorization were the number one requested
feature after our original release announcement at ZendCon 2013. We
managed to get this in place in time for ZendCon 2013 Europe, and
the features include:</xhtml:p>
<xhtml:ul>
<xhtml:li>Ability to use HTTP Basic or Digest authentication, or
OAuth2.</xhtml:li>
<xhtml:li>Ability to create authorization rules per HTTP method, per
service in your API.</xhtml:li>
</xhtml:ul>
<xhtml:p>We are leveraging Zend Framework 2's
<xhtml:code>Zend\Authentication</xhtml:code> library for HTTP authentication,
and Brent Shaffer's <xhtml:a href="https://github.com/bshaffer/oauth2-server-php">oauth2-server-php</xhtml:a>
library for OAuth2.</xhtml:p>
<xhtml:p>Apigility allows you to define one authentication scheme per
application. You can set the authentication details on the main
dashboard, under the heading "Authentication":</xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authentication choices" src="/images/ag/authentication-buttons.png"/></xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authentication form" src="/images/ag/authentication-form.png"/></xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authentication view" src="/images/ag/authentication-view.png"/></xhtml:p>
<xhtml:p>To use HTTP Basic authentication, you will need to create a
<xhtml:code>htpasswd</xhtml:code> file, using Apache's <xhtml:code>htpasswd</xhtml:code>
utility. When you add HTTP Basic authentication to your
application, you will specify the location of the
<xhtml:code>htpasswd</xhtml:code> file.</xhtml:p>
<xhtml:p>For HTTP Digest authentication, you will need to create a file
with lines in the following format:</xhtml:p>
<xhtml:p>
<xhtml:code>&lt;username&gt;:&lt;realm&gt;:&lt;credentials&gt;</xhtml:code></xhtml:p>
<xhtml:p>The <xhtml:code>credentials</xhtml:code> field must be an MD5 hash of the
password that will be accepted. When adding the HTTP Digest
authentication to your application, you will specify the location
of this file, and will also need to specify the appropriate
<xhtml:code>realm</xhtml:code>, <xhtml:code>nonce\_timeout</xhtml:code> (number of seconds
the credentials remain valid), and, optionally, a list of
<xhtml:code>digest_domains</xhtml:code> (the domains for which the same
authentication information is valid).</xhtml:p>
<xhtml:p>To use OAuth2 authentication, you will need to setup a database,
and add clients and optionally users (users are only necessary if
using the <xhtml:code>password</xhtml:code> grant type). <xhtml:a href="https://github.com/zfcampus/zf-oauth2">See the zf-oauth2
README</xhtml:a> for details on how to setup the database and seed
it.</xhtml:p>
<xhtml:p>Once you have authentication setup, you can start setting up
authorization restrictions on your API. To do this, navigate to the
"Authorization" menu item in any API:</xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Authorization" src="/images/ag/authorization.png"/></xhtml:p>
<xhtml:p>By default, APIs created with Apigility are public. To require
authorization on specific services or specific HTTP methods of
services, check the appropriate boxes and save your changes. From
that point forward, authentication will be required for those
actions!</xhtml:p>
<xhtml:p>For more information, <xhtml:a href="http://bit.ly/ag-auth">view the
demo video</xhtml:a></xhtml:p>
<xhtml:h2>Cross Origin Resource Sharing</xhtml:h2>
<xhtml:p>In order to operate a web-based application that interact with
your APIs, you may need to investigate Cross Origin Resource
Sharing (CORS). CORS describes HTTP requests for HTTP resources
made from a different domain than the resource exists on. As an
example, if your API is at <xhtml:code>http://example.com/api/</xhtml:code>,
but you want to request it from
<xhtml:code>http://my-uber-cool-app.com/</xhtml:code>, CORS is in effect.</xhtml:p>
<xhtml:p>If a browser attempts to create an <xhtml:code>XMLHttpRequest</xhtml:code>
to a different domain than the current page, then it will detect a
CORS request. At that point, the browser will ask the server with
the resource if the request is allowed; if the originating server
does not reply with the appropriate headers, the browser will not
submit the original request, and the <xhtml:code>XMLHttpRequest</xhtml:code>
will fail.</xhtml:p>
<xhtml:p>Apigility does not deal with CORS by default, but the 0.8.0
release includes changes that ensure that CORS requests
<xhtml:em>can</xhtml:em> be honored if you are using a CORS plugin. We have
tested against the <xhtml:a href="https://github.com/zf-fr/zfr-cors">ZfrCors ZF2 module</xhtml:a>, and it
works seamlessly with Apigility at this point.</xhtml:p>
<xhtml:p>We highly recommend the combination of Apigility and ZfrCors
when building web-based JavaScript applications that will operate
on separate domains from your APIs.</xhtml:p>
<xhtml:h2>Validation</xhtml:h2>
<xhtml:p>Another aspect of API security is validating the incoming input.
Ideally, you should reject anything that does not validate
outright, and as early as possible.</xhtml:p>
<xhtml:p>0.8.0 adds a new module, <xhtml:a href="https://github.com/zfcampus/zf-content-validation">zf-content-validation</xhtml:a>,
which provides a validation engine based on Zend Framework's
<xhtml:code>InputFilter</xhtml:code> component. This component, when a request
method that contains incoming data occurs, checks to see if the
matched service has a corresponding input filter, and, if so,
attempts to validate the incoming data against it. If the
validation fails, an error response is immediately returned.</xhtml:p>
<xhtml:p>In the Apigility Admin UI, each service now has an "Inputs" tab
that allows you to define the input filter. In this tab, you define
inputs, which correspond to each field of data you will be
expecting. For each input, you can define one or more validators,
along with any configuration you want for each. In this case, a
picture is probably more sufficient:</xhtml:p>
<xhtml:p style="text-align:center"><xhtml:img style="border: 1px solid black" width="640" alt="Validation" src="/images/ag/inputfilter.png"/></xhtml:p>
<xhtml:p>For more information, <xhtml:a href="http://bit.ly/ag-validation">view
the demo video</xhtml:a>.</xhtml:p>
<xhtml:h2>Future</xhtml:h2>
<xhtml:p>At this point, we're wrapping up the featureset for a stable
version of Apigility. The last milestones we have include:</xhtml:p>
<xhtml:ul>
<xhtml:li>a module for generating API documentation. At this time, we are
favoring <xhtml:a href="http://apiblueprint.org/">API Blueprint</xhtml:a> as
the markup is trivial to generate from our configuration, and,
being markdown-derived, relatively easy to edit and expand once the
initial generation is complete.</xhtml:li>
<xhtml:li>some cleanup of the UI, including some long-overdue refactoring
and formalized testing.</xhtml:li>
<xhtml:li>documentation of the various components, as well as tutorials
on how they all fit together.</xhtml:li>
</xhtml:ul>
<xhtml:p>We hope to complete the API documentation milestone in the first
weeks of 2014. At that point, we will start the beta release cycle,
spending that time to do the UI refactoring and project
documentation. Once those are complete, we'll finally issue a
stable release; we're aiming for late February 2014 at this
time.</xhtml:p>
<xhtml:h4>Updates</xhtml:h4>
<xhtml:ul>
<xhtml:li>2013-12-21 16:10 UTC: Fixed <xhtml:code>wget</xhtml:code> command and URI,
per reports of errors in comments.</xhtml:li>
</xhtml:ul>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.5 Released!]]></title>
    <published>2013-10-31T19:00:00+0000</published>
    <updated>2013-10-31T19:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-5-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-5-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.5! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release includes a security fix for
<xhtml:code>Zend\Http\PhpEnvironment\RemoteAddress</xhtml:code> and
<xhtml:code>Zend\Session\Validator\RemoteAddr</xhtml:code>; if you use either
of these classes, we urge you to upgrade to 2.2.5 immediately.</xhtml:p>
<xhtml:p>We've not had a release in a couple of months, due to an
exciting development: Zend's Zend Framework team has announced an
initial preview release of <xhtml:a href="http://apigility.org">Apigility</xhtml:a>, an API builder and management
tool, built on top of Zend Framework 2! If you are building APIs or
plan to in the future, we encourage you to check out this tool and
help drive it toward a stable release!</xhtml:p>
<xhtml:h2>Security</xhtml:h2>
<xhtml:p>A developer reported a problem with how we were handling
situations when <xhtml:code>Zend\Http\PhpEnvironment\RemoteAddress</xhtml:code>
was configured to use proxies, had a list of trusted proxies,
<xhtml:code>$_SERVER['REMOTE_ADDR']</xhtml:code> was not in that list of
trusted proxies. Essentially, we were still consulting the
<xhtml:code>X-Forwarded-For</xhtml:code> header in this situation, but should
have been used the provided <xhtml:code>$_SERVER['REMOTE_ADDR']</xhtml:code>,
according to the specification.</xhtml:p>
<xhtml:p>2.2.5 fixes this situation. If you use that class, or
<xhtml:code>Zend\Session\Validator\RemoteAddr</xhtml:code>, you should upgrade
immediately.</xhtml:p>
<xhtml:p>For more details, visit the <xhtml:a href="/security/advisory/ZF2013-04">ZF2013-04 security advisory</xhtml:a>.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.5">http://framework.zend.com/changelog/2.2.5</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Thank you to everybody who has contributed to this release. With
more than 70 issues resolved, it's one of the busiest and most
robust releases on the 2.2 branch to-date.</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen (roughly) monthly on (approximately)
the third Wednesday. We will be gearing up for the next minor
release, 2.3.0, soon.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.4 Released!]]></title>
    <published>2013-08-26T16:45:00+0000</published>
    <updated>2013-08-26T16:45:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-4-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-4-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.4! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This release fixes a regression found in the Form component
released with version 2.2.3; if you use that component, we urge you
to upgrade to 2.2.4.</xhtml:p>
<xhtml:h2>Regressions</xhtml:h2>
<xhtml:p><xhtml:a href="/blog/zend-framework-2-2-3-released.html">Version
2.2.3</xhtml:a> introduced a regression in the Form component, as a
side-effect of fixing another issue. The
<xhtml:code>preferFormInputFilter</xhtml:code> flag was originally created to
allow developers to choose whether they wanted to prefer the input
filter they explicitly composed in the form to have priority, or
use the input filter settings the form aggregated from default
elements instead. Interestingly, the form component essentially
enforced the latter situation (prefering what the form aggregated),
making the flag have no semantic meaning.</xhtml:p>
<xhtml:p>A side effect of this, however, led to a regression in the
InputFilter component. Starting sometime in the 2.2 series, the
behavior of input merging was changed to merge the old input into
the new. In 2.2.3, we corrected this behavior -- but it broke the
default merging order in the Form component. On inspection, we
discovered that the fix to the InputFilter essentially gave
semantic meaning back to the <xhtml:code>preferFormInputFilter</xhtml:code>
flag -- but that the default behavior -- which was to prefer what
the form aggregates -- was now flip-flopped.</xhtml:p>
<xhtml:p>The fix in 2.2.4 is to enable the
<xhtml:code>preferFormInputFilter</xhtml:code> flag by default, thus restoring
the previous expected behavior. Additionally, we now provide the
ability to set this flag via form options or the form factory.</xhtml:p>
<xhtml:p>If you use the Form component, we urge you to upgrade to 2.2.4
immediately.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.4">http://framework.zend.com/changelog/2.2.4</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>Many thanks to Michaël Gallego and Michael Gooden for helping me
troubleshoot the form issues!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.3 Released!]]></title>
    <published>2013-08-21T21:00:00+0000</published>
    <updated>2013-08-21T21:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-3-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-3-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.3! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the third monthly maintenance release in the 2.2
series.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release features over 25 changes. Some notable changes
include:</xhtml:p>
<xhtml:ul>
<xhtml:li>An update that ensures the filter and validator plugin managers
are injected into the input filter factory when using the form
factory. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4851">#4851</xhtml:a>)</xhtml:li>
<xhtml:li>Fixes to code generation to ensure <xhtml:code>use</xhtml:code> statements
are unique, and that non-namespaced class generation is possible.
(<xhtml:a href="https://github.com/zendframework/zf2/issues/4988">#4988</xhtml:a> and
<xhtml:a href="https://github.com/zendframework/zf2/issues/4990">#4990</xhtml:a>)</xhtml:li>
<xhtml:li>A fix to input filters and forms to ensure overwriting of
inputs and input filters happens correctly. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4996">#4996</xhtml:a>)</xhtml:li>
</xhtml:ul>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.3">http://framework.zend.com/changelog/2.2.3</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>I'd like to thank everyone who provided issue reports, typo
fixes, maintenance improvements, bugfixes, and documentation
improvements; your efforts make the framework increasingly
better!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.2 Released!]]></title>
    <published>2013-07-24T17:00:00+0000</published>
    <updated>2013-07-24T17:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-2-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-2-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.2! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the second monthly maintenance release in the 2.2
series.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release features over 60 changes. Some notable changes
include:</xhtml:p>
<xhtml:ul>
<xhtml:li>The cURL adapter for <xhtml:code>Zend\Http</xhtml:code> will no longer
double-decode gzip-encoded bodies. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4555">#4555</xhtml:a>)</xhtml:li>
<xhtml:li>A <xhtml:code>headLink()</xhtml:code> method was added to the HeadLink view
helper so that its usage matches the documentation. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4105">#4105</xhtml:a>)</xhtml:li>
<xhtml:li>The validator plugin manager was updated to include the new
"PhoneNumber" validator. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4644">#4644</xhtml:a>)</xhtml:li>
<xhtml:li>Abstract methods in the <xhtml:code>AbstractRestfulController</xhtml:code>
were made non-abstract, and modified to set a 405 ("Method Not
Allowed") status. (<xhtml:a href="https://github.com/zendframework/zf2/issues/4808">#4808</xhtml:a>)</xhtml:li>
</xhtml:ul>
<xhtml:p>To see the full changelog, visit:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.2">http://framework.zend.com/changelog/2.2.2</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>I'd like to thank everyone who provided issue reports, typo
fixes, maintenance improvements, bugfixes, and documentation
improvements; your efforts make the framework increasingly
better!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.
Version 2.3.0 is tentatively scheduled for September.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Zend Framework 2.2.1 Released!]]></title>
    <published>2013-06-12T20:00:00+0000</published>
    <updated>2013-06-12T20:00:00+0000</updated>
    <link rel="alternate" type="text/html" href="http://framework.zend.com/blog/zend-framework-2-2-1-released.html"/>
    <id>http://framework.zend.com/blog/zend-framework-2-2-1-released.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>matthew@zend.com</email>
      <uri>http://mwop.net/</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>The Zend Framework community is pleased to announce the
immediate availability of Zend Framework 2.2.1! Packages and
installation instructions are available at:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/downloads/latest">http://framework.zend.com/downloads/latest</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:p>This is the first monthly maintenance release in the 2.2
series.</xhtml:p>
<xhtml:h2>Changelog</xhtml:h2>
<xhtml:p>This release features almost 70 changes, ranging from minor
typographical issues to changes to allow easier utilisation of new
features introduced in 2.2 (e.g., you can now actually select the
new <xhtml:code>TranslatorAwareTreeRouteStack</xhtml:code> as a router via
configuration). The full changelog for 2.2.1 is available:</xhtml:p>
<xhtml:ul>
<xhtml:li><xhtml:a href="/changelog/2.2.1">http://framework.zend.com/changelog/2.2.1</xhtml:a></xhtml:li>
</xhtml:ul>
<xhtml:h2>Thank You!</xhtml:h2>
<xhtml:p>I'd like to thank everyone who provided issue reports, typo
fixes, maintenance improvements, bugfixes, and documentation
improvements; your efforts make the framework increasingly
better!</xhtml:p>
<xhtml:h2>Roadmap</xhtml:h2>
<xhtml:p>Maintenance releases happen monthly on the third Wednesday.
Version 2.3.0 is tentatively scheduled for the end of August.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
