<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
  <channel>
    <title>Blog Entries - ZF Blog</title>
    <description>Blog Entries - ZF Blog</description>
    <pubDate>Tue, 11 Aug 2015 17:30:00 +0000</pubDate>
    <generator>Zend_Feed_Writer 2 (http://framework.zend.com)</generator>
    <link>http://framework.zend.com/blog.html</link>
    <atom:link rel="self" type="application/rss+xml" href="http://framework.zend.com/blog-rss.xml"/>
    <item>
      <title>Zend Framework 1.12.15 and 2.4.7 Released!</title>
      <pubDate>Tue, 11 Aug 2015 17:30:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-1-12-15-and-2-4-7-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-1-12-15-and-2-4-7-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of:
</p>

<ul>
    <li>Zend Framework <strong>1.12.15</strong></li>
    <li>Zend Framework <strong>2.4.7</strong></li>
</ul>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul><h2>Zend Framework 1.12.15</h2>

<p>
    Zend Framework 1.12.15 contains several fixes to ensure backwards compatibility
    with previous releases as well as supported PHP versions:
</p>

<ul>
    <li><a href="https:/github.com/zendframework/zf1/pull/591">#591</a> ensures that
        thet patch introduced to fix <a href="/security/advisory/ZF2015-06">ZF2015-06</a>
        works for PHP 5.2 users.
    </li>

    <li><a href="https://github.com/zendframework/zf1/pull/587">#587</a> fixes a
        regular expression in <code>Zend_Http_Response::extractHeaders()</code> to ensure
        it will work with any valid header name, as well as empty header values.</li>
    <li><a href="https://github.com/zendframework/zf1/pull/597">#597</a> updates
        <code>Zend_Http_Client_Adapter_Curl</code> to ensure it properly distinguishes
        between the <code>timeout</code> and <code>request_timeout</code> options,
        using them to set <code>CURLOPT_CONNECTTIMEOUT</code> and <code>CURLOPT_TIMEOUT</code>,
        respectively.  </li>
</ul>

<p>
    For a full list of changes, see:
</p>

<ul>
    <li><a href="/changelog/1.12.15">http://framework.zend.com/changelog/1.12.15</a></li>
</ul>

<h2>Zend Framework 2.4.7</h2>

<p>
    Zend Framework 2.4.7 has a single change:
</p>

<ul>
    <li><a href="https://github.com/zendframework/zend-inputfilter/pull/15">zend-inputfilter #15</a>
        ensures that input filters can validate not just arrays, but objects implementing
        <code>ArrayAccess</code>, a scenario that broke with fixes introduced for 2.4.5.
    </li>
</ul>

<h2>Long Term Support</h2>

<p>
    As a reminder, the 2.4 series is our current Long Term Support release, and will
    receive security and critical bug fixes until 31 March 2018.
</p>

<p>
    You can opt-in to the LTS version by pinning your <code>zendframework/zendframework</code>
    <a href="https://getcomposer.org">Composer</a> requirement to the version <code>~2.4.0</code>.
</p>

<p>
    <a href="/long-term-support">Visit our Long Term Support information page</a> for more information.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 1.12.14, 2.4.6 and 2.5.2 Released!</title>
      <pubDate>Mon, 03 Aug 2015 19:15:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-1-12-14-2-4-6-and-2-5-2-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-1-12-14-2-4-6-and-2-5-2-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of:
</p>

<ul>
    <li>Zend Framework <strong>1.12.14</strong></li>
    <li>Zend Framework <strong>2.4.6</strong></li>
    <li>Zend Framework <strong>2.5.2</strong></li>
</ul>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    These releases contain a critical security fix.
</p><h2>Security Fix</h2>

<p>
    Zend Framework versions 1.12.14, and 2.4.6, and 2.5.2 introduced fixes for
    <a href="/security/advisory/ZF2015-06">ZF2015-06</a>, a serious vulnerability 
    in <code>ZendXml</code> when used under PHP-FPM to process multibyte XML
    documents. The advisory provides full details; if you process XML in your
    application and will be deploying or already deploy using PHP-FPM, we recommend
    upgrading immediately.
</ul>

<h2>Other changes</h2>

<p>
    Zend Framework 1.12.14 has two other changes that may impact users:
</p>

<ul>
    <li><code>Zend_Service_DeveloperGarden</code> was removed, as the service closed its API on 30
        June 2015.</li>
    <li><code>Zend_Service_Technorati</code> was removed, as the API has been unavailable for an
        indeterminate amount of time.</li>
</ul>

<p>
    Both Zend Framework 2.4.6 and 2.5.2 also incorporate a change in <code>Zend\InputFilter</code>;
    fixes done in the 2.4/2.5 series removed support for fallback values when performing validation;
    that support has been reinstated with the latest releases.
</p>

<h3>Changelog</h3>

<p>
    For the full changelog on each version:
</p>

<ul>
    <li><a href="/changelog/1.12.14">http://framework.zend.com/changelog/1.12.14</a></li>
    <li><a href="/changelog/2.4.6">http://framework.zend.com/changelog/2.4.6</a></li>
    <li><a href="/changelog/2.5.2">http://framework.zend.com/changelog/2.5.2</a></li>
</ul>

<h2>Long Term Support</h2>

<p>
    As a reminder, the 2.4 series is our current Long Term Support release, and will
    receive security and critical bug fixes until 31 March 2018.
</p>

<p>
    You can opt-in to the LTS version by pinning your <code>zendframework/zendframework</code>
    <a href="https://getcomposer.org">Composer</a> requirement to the version <code>~2.4.0</code>.
</p>

<p>
    <a href="/long-term-support">Visit our Long Term Support information page</a> for more information.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.4.5 Released!</title>
      <pubDate>Tue, 28 Jul 2015 16:45:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-4-5-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-4-5-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework <strong>2.4.5</strong>. You can download it from the Zend Framework site:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This is a <a href="/long-term-support/">Long Term Support</a> release.
</p><h2>Bugfix</h2>

<p>
    This release contains a single critical bugfix. A <a href="https://github.com/zendframework/zend-inputfilter/pull/7">developer 
    reported an issue against zend-inputfilter</a>, indicating that the combination
    of <em>required</em> and <em>allow_empty</em> was not working as expected.
    When the given input was missing from the submitted data set, the set was
    still considered valid, when it should not be. When the value was present but
    empty, validation worked as expected.
</p>

<p>
    We supplied a patch to ensure behavior is as expected. The patch is also applied
    to zend-inputfilter 2.5.2.
</p>

<p>
    As this scenario affects a common use case for input validation, we deemed 
    the issue critical and backported the fix to the LTS release.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.4.4 Released!</title>
      <pubDate>Tue, 21 Jul 2015 16:45:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-4-4-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-4-4-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework <strong>2.4.4</strong>. You can download it from the Zend Framework site:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This is a <a href="/long-term-support/">Long Term Support</a> release.
</p><h2>Bugfix</h2>

<p>
    This release contains a single critical bugfix. A <a href="https://github.com/zendframework/zend-stdlib/pull/9">developer 
    reported an issue against zend-stdlib</a>
    indicating that our count increment in 
    <code>Zend\Stdlib\PriorityList</code> was incrementing incorrectly,
    and failing to take into account whether or not the item already was 
    present.
</p>

<p>
    As this scenario affects usage of PriorityList with duplicate data, one of 
    its specific use cases, we deemed the issue critical and backported the fix
    to the LTS release.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.4.3 Released!</title>
      <pubDate>Thu, 18 Jun 2015 14:30:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-4-3-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-4-3-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of Zend Framework <strong>2.4.3</strong>. You can download it from the Zend Framework site:
</p>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    This is a <a href="/long-term-support/">Long Term Support</a> release.
</p><h2>Bugfix</h2>

<p>
    This release contains a single critical bugfix. A <a 
    href="https://github.com/zendframework/zend-view/pull/4">developer reported an issue against zend-view</a>
    indicating that when using port forwarding, and particularly when combined with non-standard 
    ports, the <code>ServerUrl</code> view helper was incorrectly generating URIs containing both 
    the local port and the public port.  As an example, a server running on port 10081, but accessed 
    via port 10088 was reporting a URI in the form "localhost:10088:10081". For purposes of public 
    links, the public port 10088 <em>only</em> should be present in the generated URI.
</p>

<p>
    As this scenario is common when using Vagrant, we deemed the issue critical and backported the fix
    to the LTS release.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.5.1 Released!</title>
      <pubDate>Thu, 04 Jun 2015 15:30:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-5-1-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-5-1-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>Today we've released Zend Framework 2.5.1!</p>

<p>
    To update, use <a href="https://getcomposer.org">Composer</a>:
</p>

<pre class="highlight"><code>
$ composer update zendframework/zendframework
</code></pre><h3>Changes</h3>

<p>
    The only issue reported against 2.5.0 was a blocker for many: with the shift
    to ZF becoming a metapackage, one component, <a href="https://github.com/zendframework/zend-ldap">zend-ldap</a>,
    had a hard requirement on a specific PHP extension (ext/ldap), meaning that 
    the extension then became a requirement for the entire framework.
</p>

<p>
    ZF 2.5.1 addresses this by making zend/ldap a <a href="https://getcomposer.org/doc/04-schema.md#suggest">
    suggested</a> component. <em>This means that the zend-ldap component is no longer installed
    by default.</em> If you rely on zend-ldap for your application, you will need to
    perform the following after upgrading to 2.5.1:
</p>

<pre class="highlight"><code>
$ composer require zendframework/zend-ldap
</code></pre>

<p>
    The above will add zend-ldap as a requirement to your project, ensuring it
    is present going forward.
</p>

<p>
    We also audited all other components for hard dependencies on extensions; no
    other components did so.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.5.0 Released!</title>
      <pubDate>Wed, 03 Jun 2015 19:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-5-0-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-5-0-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>Today we've released Zend Framework 2.5.0!</p>

<p>
    I'm not going to provide a link to the downloads page, as this release 
    marks a radical change for Zend Framework 2: as of this release, all 
    components are now developed in their own separate repositories, and Zend 
    Framework is itself essentially only a metapackage that aggregates the 
    components via <a href="https://getcomposer.org">Composer</a>!
</p>

<p>
    The impact on users is transparent; a <code>composer update</code> will 
    pick up the new version, which will in turn install the individual 
    components.
</p><h3>Impact</h3>

<p>There are a few potential issues for users upgrading to 2.5.0.</p>

<p>
    First, for those users who were incorporating the repository via git 
    submodules, that approach will no longer work, as the ZF2 repository no 
    longer contains code! If you are doing this, you will either need to start 
    using Composer, or add every component as a git submodule, which will 
    likely also require setting up custom autoloading.
</p>

<p>
    Second, for users who were using the download packages we previously had 
    available via our <a href="/downloads/latest">Downloads page</a>, we are 
    not currently providing a package. You can safely stay at version 2.4 
    (which is our <a href="/long-term-support">long-term support</a> version) 
    for now. We are evaluating re-instating full download packages in the 
    future, but need to gauge interest and how much effort will be needed 
    to automate such packaging.
</p>

<p>
    Third, for users of our translation resources, the translation files are no 
    longer in the <code>resources/languages/</code> directory. This is because 
    they now have their own dedicated package, 
    <a href="https://github.com/zendframework/zend-i18n-resources">zendframework/zend-i18n-resources</a>! 
    As such, you cannot just point your code at that directory in your ZF2 
    install; you will need to do a little bit of work to integrate. The 
    repository has full information on how you can accomplish that.
</p>

<p>
    Finally, we have a significant bump in our minimum supported PHP version 
    starting with 2.5.0: we now require PHP 5.5+. PHP 5.3 is no longer 
    receiving even security updates at this time, and <a 
    href="http://php.net/supported-versions.php">PHP 5.4 support ends on 14 
    September 2015</a> — just over 3 months from now. We encourage our users on 
    versions prior to 5.5 to migrate immediately; the migration from 5.4 to 5.5 
    or 5.6 is trivial, and you'll get substantial performance benefits in 
    addition to new features.
</p>

<h3>Changes</h3>

<p>
    Other than the major architectural change and the PHP version bump, the 
    code in 2.5.0 is exactly the same as you have in 2.4.2.
</p>

<h3>Components</h3>

<p>
    The following is a listing of the various components that make up Zend 
    Framework, linked to their GitHub repository. Each component contains full 
    history of changes for that component since the 2.0.0 release.
</p>

<ul>
    <li><a href="https://github.com/zendframework/zend-authentication">Zend\Authentication (zend-authentication)</a> </li>
    <li><a href="https://github.com/zendframework/zend-barcode">Zend\Barcode (zend-barcode)</a> </li>
    <li><a href="https://github.com/zendframework/zend-cache">Zend\Cache (zend-cache)</a> </li>
    <li><a href="https://github.com/zendframework/zend-captcha">Zend\Captcha (zend-captcha)</a> </li>
    <li><a href="https://github.com/zendframework/zend-code">Zend\Code (zend-code)</a> </li>
    <li><a href="https://github.com/zendframework/zend-config">Zend\Config (zend-config)</a> </li>
    <li><a href="https://github.com/zendframework/zend-console">Zend\Console (zend-console)</a> </li>
    <li><a href="https://github.com/zendframework/zend-crypt">Zend\Crypt (zend-crypt)</a> </li>
    <li><a href="https://github.com/zendframework/zend-db">Zend\Db (zend-db)</a> </li>
    <li><a href="https://github.com/zendframework/zend-debug">Zend\Debug (zend-debug)</a> </li>
    <li><a href="https://github.com/zendframework/zend-di">Zend\Di (zend-di)</a> </li>
    <li><a href="https://github.com/zendframework/zend-dom">Zend\Dom (zend-dom)</a> </li>
    <li><a href="https://github.com/zendframework/zend-escaper">Zend\Escaper (zend-escaper)</a> </li>
    <li><a href="https://github.com/zendframework/zend-eventmanager">Zend\EventManager (zend-eventmanager)</a> </li>
    <li><a href="https://github.com/zendframework/zend-feed">Zend\Feed (zend-feed)</a> </li>
    <li><a href="https://github.com/zendframework/zend-file">Zend\File (zend-file)</a> </li>
    <li><a href="https://github.com/zendframework/zend-filter">Zend\Filter (zend-filter)</a> </li>
    <li><a href="https://github.com/zendframework/zend-form">Zend\Form (zend-form)</a> </li>
    <li><a href="https://github.com/zendframework/zend-http">Zend\Http (zend-http)</a> </li>
    <li><a href="https://github.com/zendframework/zend-i18n">Zend\I18n (zend-i18n)</a> </li>
    <li><a href="https://github.com/zendframework/zend-inputfilter">Zend\InputFilter (zend-inputfilter)</a> </li>
    <li><a href="https://github.com/zendframework/zend-json">Zend\Json (zend-json)</a> </li>
    <li><a href="https://github.com/zendframework/zend-ldap">Zend\Ldap (zend-ldap)</a> </li>
    <li><a href="https://github.com/zendframework/zend-loader">Zend\Loader (zend-loader)</a> </li>
    <li><a href="https://github.com/zendframework/zend-log">Zend\Log (zend-log)</a> </li>
    <li><a href="https://github.com/zendframework/zend-mail">Zend\Mail (zend-mail)</a> </li>
    <li><a href="https://github.com/zendframework/zend-math">Zend\Math (zend-math)</a> </li>
    <li><a href="https://github.com/zendframework/zend-memory">Zend\Memory (zend-memory)</a> </li>
    <li><a href="https://github.com/zendframework/zend-mime">Zend\Mime (zend-mime)</a> </li>
    <li><a href="https://github.com/zendframework/zend-modulemanager">Zend\ModuleManager (zend-modulemanager)</a> </li>
    <li><a href="https://github.com/zendframework/zend-mvc">Zend\Mvc (zend-mvc)</a> </li>
    <li><a href="https://github.com/zendframework/zend-navigation">Zend\Navigation (zend-navigation)</a> </li>
    <li><a href="https://github.com/zendframework/zend-paginator">Zend\Paginator (zend-paginator)</a> </li>
    <li><a href="https://github.com/zendframework/zend-permissions-acl">Zend\Permissions\Acl (zend-permissions-acl)</a> </li>
    <li><a href="https://github.com/zendframework/zend-permissions-rbac">Zend\Permissions\Rbac (zend-permissions-rbac)</a> </li>
    <li><a href="https://github.com/zendframework/zend-progressbar">Zend\ProgressBar (zend-progressbar)</a> </li>
    <li><a href="https://github.com/zendframework/zend-serializer">Zend\Serializer (zend-serializer)</a> </li>
    <li><a href="https://github.com/zendframework/zend-server">Zend\Server (zend-server)</a> </li>
    <li><a href="https://github.com/zendframework/zend-servicemanager">Zend\ServiceManager (zend-servicemanager)</a> </li>
    <li><a href="https://github.com/zendframework/zend-session">Zend\Session (zend-session)</a> </li>
    <li><a href="https://github.com/zendframework/zend-soap">Zend\Soap (zend-soap)</a> </li>
    <li><a href="https://github.com/zendframework/zend-stdlib">Zend\Stdlib (zend-stdlib)</a> </li>
    <li><a href="https://github.com/zendframework/zend-tag">Zend\Tag (zend-tag)</a> </li>
    <li><a href="https://github.com/zendframework/zend-test">Zend\Test (zend-test)</a> </li>
    <li><a href="https://github.com/zendframework/zend-text">Zend\Text (zend-text)</a> </li>
    <li><a href="https://github.com/zendframework/zend-uri">Zend\Uri (zend-uri)</a> </li>
    <li><a href="https://github.com/zendframework/zend-validator">Zend\Validator (zend-validator)</a> </li>
    <li><a href="https://github.com/zendframework/zend-version">Zend\Version (zend-version)</a> </li>
    <li><a href="https://github.com/zendframework/zend-view">Zend\View (zend-view)</a> </li>
    <li><a href="https://github.com/zendframework/zend-xmlrpc">Zend\XmlRpc (zend-xmlrpc)</a> </li>
    <li><a href="https://github.com/zendframework/ZendXml">ZendXml</a></li>
</ul>

<h3>New Components</h3>

<p>We also have two new components in the Zend Framework family:</p>

<ul>
    <li><a 
        href="https://github.com/zendframework/zend-diactoros">Diactoros</a>, a <a 
        href="http://www.php-fig.org/psr/psr-7">PSR-7</a> implementation, providing 
        HTTP message, URI, uploaded file, and stream implementations. </li>
    <li><a 
        href="https://github.com/zendframework/zend-stratigility">Stratigility</a>, a 
        PSR-7-compatible middleware implementation based on <a 
        href="https://github.com/senchalabs/connect">Sencha Connect</a>.</li>
</ul>

<p>
    These are in their early 1.0 versions, though fully stable. We'll be 
    discussing them in more detail in later blog posts. If you want information 
    now, Matthew recently delivered a <a 
    href="http://info.zend.com/Lq80CX0040Ue0LMxR0A0j0r">webinar on PSR-7 and 
    Stratigility</a>.
</p>

<h3>The Future!</h3>

<p>
    This release marks the completion of the first major milestone towards Zend 
    Framework 3! With the various components now versioned on their own 
    timelines and in their own repositories, we can start cherry-picking which 
    components need refactoring or new features. Along the way, we will be 
    creating teams of interested contributors to maintain specific components, 
    which should help accelerate development velocity.
</p>

<p>
    In the near future, we will be working on introducing PSR-7 and middleware 
    support in the ZF2 MVC layer, as well as creating a workflow for wrapping 
    the ZF2 MVC inside of PSR-7-based middleware to allow execution alongside 
    other frameworks and code bases.
</p>

<h3>Thank Yous</h3>

<p>
    Splitting the components into their own repositories and setting up the 
    metapackage approach for the ZF2 repository was not easy. Fortunately, we 
    had some very motivated contributors to assist along the way. In 
    particular:
</p>

<ul>
    <li><a href="http://gianarb.it/">Gianluca Arebezzano</a> and <a 
        href="http://www.corley.it/">Corley</a> (an Italian AWS partner). Gianluca 
        suggested we perform the component splits in parallel via AWS, and 
        convinced Corley, where he works, to help make it happen. Because of this 
        generous support, we were able to do what would have taken weeks in a 
        matter of a single day. </li>
    <li><a href="https://github.com/maks3w">Maks3w</a>, one of our community 
        review team, who did a ton of work around our testing and continuous 
        integration structure to ensure that the rewritten component repositories 
        could be tested seamlessly.</li>
</ul>

<p>
    Version 2.5.0 is only the beginning; you'll be seeing some exciting changes 
    in the Zend Framework project soon!
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 1.12.13 Released!</title>
      <pubDate>Wed, 20 May 2015 16:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-1-12-13-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-1-12-13-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of:
</p>

<ul>
    <li>Zend Framework <strong>1.12.13</strong></li>
</ul>

<p>You can download Zend Framework at:</p>

<ul>
    <li>
        <a href="/downloads/latest#ZF1">http://framework.zend.com/downloads/latest#ZF1</a>
    </li>
</ul><h2>Regression Fix</h2>

<p>
  Version 1.12.12 included a fix for <a href="/security/advisory/ZF2015-04">ZF2015-04</a>,
  which details message splitting vulnerabilities in <code>Zend_Mail</code> and <code>Zend_Http</code>.
  The fix, however, was slightly too strict, and did not allow integer or float values as HTTP header
  values. In most cases, this is not an issue, but several key headers such as <code>Content-Length</code>
  are typically provided as integers. As such, many components such as <code>Zend_XmlRpc</code>,
  <code>Zend_OpenId</code>, and a variety of <code>Zend_Service</code> components were affected.
</p>

<p>
  Version 1.12.13 contains a fix for this issue. If you use <code>Zend_Http</code>, or one of the
  various <code>Zend_Service</code>, <code>Zend_OpenId</code>, <code>Zend_Oauth</code> components,
  we highly recommend upgrading immediately.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 1.12.12 Released!</title>
      <pubDate>Tue, 19 May 2015 19:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-1-12-12-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-1-12-12-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of:
</p>

<ul>
    <li>Zend Framework <strong>1.12.12</strong></li>
</ul>

<p>You can download Zend Framework at:</p>

<ul>
    <li>
        <a href="/downloads/latest#ZF1">http://framework.zend.com/downloads/latest#ZF1</a>
    </li>
</ul><h2>Security Fix</h2>

<p>
    This release includes a security fix for <a href="/security/advisory/ZF2015-04">ZF2015-04</a>,
    which details message splitting vulnerabilities in <code>Zend_Mail</code> and <code>Zend_Http</code>.
    The patch for Zend Framework 1.12 ensures that headers cannot contain incorrect sequences that could
    lead to the vulnerability. Additionally, several new classes were introduced:
</p>

<ul>
    <li><code>Zend_Mail_Header_HeaderName</code></li>
    <li><code>Zend_Mail_Header_HeaderValue</code></li>
    <li><code>Zend_Http_Header_HeaderValue</code></li>
</ul>

<p>
    Each class contains the following methods:
</p>

<ul>
    <li><code>filter($value)</code>, which will perform a lossy filter on the value, ensuring
        any invalid characters are stripped.</li>
    <li><code>isValid($value)</code>, which will tell you whether or not the value is valid
        per the specification it targets.</li>
    <li><code>assertValid($value)</code>, which will raise an exception for invalid values.</li>
</ul>

<p>
    Internally, classes that work with headers utilize <code>assertValid()</code> to ensure
    your messages are safe.
</p>

<p>
    We strongly recommend that consumers of the <code>Zend_Http</code> and <code>Zend_Mail</code>
    components upgrade immediately. If you cannot, you can download the patch separately and
    apply it to your ZF install:
</p>

<ul>
    <li><a href="https://packages.zendframework.com/releases/ZendFramework-1.12.12/0001-ZF2015-04-Fix-CRLF-injections-in-HTTP-and-Mail.patch">ZF2015-04 patch for ZF1</a></li>
</ul>

<h2>Fixes</h2>

<p>
    Besides the security patch, two primary features were added with this release:
</p>

<ul>
    <li><a href="https://github.com/zendframework/zf1/pull/537">#537</a> fixed a problem
        introduced with 1.12.11 with regards to view template resolution when the 
        matched module, controller, or action contains special characters.</li>
    <li>Zend Framework 1 was audited to pass unit tests on PHP 7; this means that
        you should be able to run ZF1 on PHP 7 nightly builds!</li>
</ul>

<p>
    For the full list of changes, visit the changelog:
</p>

<ul>
    <li><a href="/changelog/1.12.12">Changelog</a></li>
</ul>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Zend Framework 2.3.9 and 2.4.2 Released!</title>
      <pubDate>Mon, 11 May 2015 18:00:00 +0000</pubDate>
      <link>http://framework.zend.com/blog/zend-framework-2-3-9-and-2-4-2-released.html</link>
      <guid>http://framework.zend.com/blog/zend-framework-2-3-9-and-2-4-2-released.html</guid>
      <author>matthew@zend.com (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    The Zend Framework community is pleased to announce the immediate availability
    of:
</p>

<ul>
    <li>Zend Framework <strong>2.3.9</strong></li>
    <li>Zend Framework <strong>2.4.2</strong></li>
</ul>

<ul>
    <li>
        <a href="/downloads/latest">http://framework.zend.com/downloads/latest</a>
    </li>
</ul>

<p>
    These are the ninth and second feature releases, respectively, for these minor versions. The releases contain fixes for BC breaks introduced in 2.3.8 and 2.4.1.
</p><h2>Backwards Compatibility Fixes</h2>

<p>
    Zend Framework versions 2.3.8 and 2.4.2 introduced fixes for
    <a href="/security/advisory/ZF2015-04">ZF2015-04</a>, a serious vulnerability 
    in the <code>Zend\Mail</code> and <code>Zend\Http</code> components.</li>
</ul>

<p>
    Unfortunately, in fixing the security vulnerabilities, several use cases 
    were broken, due to lack of tests covering the specific cases. These include:
</p>

<ul>
    <li><a href="https://github.com/zendframework/zf2/issues/7514">Mail messages with multipart bodies were providing an incorrect header continuation.</a></li>
    <li><a href="https://github.com/zendframework/zf2/issues/7506">Mail messages containing UTF-8 addresses were not being improperly tagged as invalid.</a></li>
    <li><a href="https://github.com/zendframework/zf2/issues/7507">Cookies with array values were not being serialized and urlencoded, and thus were improperly tagged as invalid.</a></li>
</ul>

<p>
    The new releases fix these issues, ensuring that applications will be both protected from ZF2015-04, as well as continue to work under common use cases. Regression tests were added to ensure the functionality continues to work in the future.
</p>

<h3>Changelog</h3>

<p>
    For the full changelog on each version:
</p>

<ul>
    <li><a href="/changelog/2.4.2">http://framework.zend.com/changelog/2.4.2</a></li>
    <li><a href="/changelog/2.3.9">http://framework.zend.com/changelog/2.3.9</a></li>
</ul>

<h2>Long Term Support</h2>

<p>
    As a reminder, the 2.4 series is our current Long Term Support release, and will
    receive security and critical bug fixes until 31 March 2018.
</p>

<p>
    You can opt-in to the LTS version by pinning your <code>zendframework/zendframework</code>
    <a href="https://getcomposer.org">Composer</a> requirement to the version <code>~2.4.0</code>.
</p>

<p>
    <a href="/long-term-support">Visit our Long Term Support information page</a> for more information.
</p>

<h2>Roadmap</h2>

<p>
    We are currently <a href="/blog/announcing-the-zend-framework-3-roadmap.html">shifting gears
    towards Zend Framework 3</a> development.
</p>

<h2>Thank You!</h2>

<p>
    I would like to thank <a href="https://github.com/Maks3w">Maks3w</a>
    for assisting with triage and patching of these issues.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
  </channel>
</rss>
