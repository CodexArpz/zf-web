{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11089",
    "key": "ZF-11089",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Cache_Frontend_Page:  _makeId function should use only make_id_with_*  paramters."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11089\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-03-02T12:44:20.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=niedbalski",
                "name": "niedbalski",
                "displayName": "Jorge Niedbalski",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-02-18T14:59:11.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-03-02T12:44:22.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Use case :\r\n{code:title=usecase.php|borderStyle=solid}\r\n    {\r\n        $frontendOptions = array(\r\n            'lifetime' => 7200,\r\n            'automatic_serialization' => true,\r\n            'debug_header' => false,\r\n            'cache_with_get_variables' => true,\r\n            'cache_with_post_variables' => true,\r\n            'cache_with_files_variables' => true,\r\n            'cache_with_cookie_variables' => true,\r\n            'cache_with_session_variables' => false,\r\n            'make_id_with_session_variables' => false,\r\n            'make_id_with_get_variables' => true,\r\n            'make_id_with_post_variables' => true,\r\n            'make_id_with_files_variables' => true,\r\n            'make_id_with_cookie_variables' => true,\r\n            'regexps' => array(\r\n                '^\/' => array('cache' => true),\r\n            )\r\n        );\r\n\r\n        $backendOptions = array(\r\n                'cache_dir' => '\/tmp\/cache\/views\/'\r\n        );\r\n\r\n        \/\/ getting a Zend_Cache_Frontend_Page object\r\n        $cache = Zend_Cache::factory('Page',\r\n                             'File',\r\n                             $frontendOptions,\r\n                             $backendOptions);\r\n \r\n        $cache->start();\r\n{code}\r\n                \r\nWhen we use the variables :\r\n\r\n            'cache_with_session_variables' => false,\r\n            'make_id_with_session_variables' => false,\r\n\r\nThe cache simply doesn't work because both conditions are false.\r\n\r\nQuestion :\r\n\r\nWhy the _makeID function is using the cache_with_* and make_id_with_* parameters, if only we are using this function for Id generation ?\r\n\r\nSolution :\r\n\r\nDeprecate the use of cache_with_* if aren't being used, the control logic on the_makePartialId is bad for ( false - false test cases ). Use  make_id_with options only when they are set to true.\r\n\r\n\r\nPatch :\r\n{code:title=patch.diff|borderStyle=solid}\r\n===================================================================\r\n--- library\/Zend\/Cache\/Frontend\/Page.php\t(revision 8718)\r\n+++ library\/Zend\/Cache\/Frontend\/Page.php\t(working copy)\r\n@@ -333,32 +333,28 @@\r\n     \/**\r\n      * Make an id depending on REQUEST_URI and superglobal arrays (depending on options)\r\n      *\r\n-     * @return mixed|false a cache id (string), false if the cache should have not to be used\r\n+\t * @return mixed|false a cache id (string),\r\n      *\/\r\n     protected function _makeId()\r\n     {\r\n-        $tmp = $_SERVER['REQUEST_URI'];\r\n-        $array = explode('?', $tmp, 2);\r\n-          $tmp = $array[0];\r\n-        foreach (array('Get', 'Post', 'Session', 'Files', 'Cookie') as $arrayName) {\r\n-            $tmp2 = $this->_makePartialId($arrayName, $this->_activeOptions['cache_with_' . strtolower($arrayName) . '_variables'], $this->_activeOptions['make_id_with_' . strtolower($arrayName) . '_variables']);\r\n-            if ($tmp2===false) {\r\n-                return false;\r\n-            }\r\n-            $tmp = $tmp . $tmp2;\r\n-        }\r\n-        return md5($tmp);\r\n+\r\n+\t\t$array = explode('?', $_SERVER['REQUEST_URI'], 2);\r\n+\t\t$idString = $array[0];\r\n+\r\n+\t\tforeach (array('Get', 'Post', 'Session', 'Files', 'Cookie') as $arrayName) {\r\n+\t\t\tif($this->_activeOptions['make_id_with_' . strtolower($arrayName) . '_variables']) \r\n+\t\t\t\t$idString .= $this->_arraySerialize($arrayName);\r\n+\t\t}\r\n+\r\n+\t\treturn md5($idString);\r\n     }\r\n \r\n     \/**\r\n-     * Make a partial id depending on options\r\n+     * Serialize a Superglobal array \r\n      *\r\n      * @param  string $arrayName Superglobal array name\r\n-     * @param  bool   $bool1     If true, cache is still on even if there are some variables in the superglobal array\r\n-     * @param  bool   $bool2     If true, we have to use the content of the superglobal array to make a partial id\r\n-     * @return mixed|false Partial id (string) or false if the cache should have not to be used\r\n+     * @return mixed Partial id (string) or null if the cache should have not to be used\r\n      *\/\r\n-    protected function _makePartialId($arrayName, $bool1, $bool2)\r\n+    protected function _arraySerialize($arrayName)\r\n     {\r\n         switch ($arrayName) {\r\n         case 'Get':\r\n@@ -385,18 +381,11 @@\r\n             $var = $_FILES;\r\n             break;\r\n         default:\r\n-            return false;\r\n-        }\r\n-        if ($bool1) {\r\n-            if ($bool2) {\r\n-                return serialize($var);\r\n-            }\r\n-            return '';\r\n-        }\r\n-        if (count($var) > 0) {\r\n-            return false;\r\n-        }\r\n-        return '';\r\n+\t$var = null;\r\n+\tbreak;\r\n+      }\r\n+     return ( $var === null ) ? '' : serialize($var);\r\n     }\r\n{code}\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11089\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10420",
                    "id": 10420,
                    "description": "Minor Release",
                    "name": "1.11.0",
                    "userReleaseDate": "02\/Nov\/10",
                    "archived": false,
                    "releaseDate": "2010-11-02",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44549",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=niedbalski",
                        "name": "niedbalski",
                        "displayName": "Jorge Niedbalski",
                        "active": true
                    },
                    "body": "Any comments on this ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=niedbalski",
                        "name": "niedbalski",
                        "displayName": "Jorge Niedbalski",
                        "active": true
                    },
                    "created": "2011-02-23T05:33:32.000+0000",
                    "updated": "2011-02-23T05:33:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44619",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "You misunderstand the logic of cache_with* and make_id_with* options:\r\n\r\n*cache_with_xxxx_variables*:\r\n- If disabled don't cache pages if the request send one or more of this variables\r\n- the validation will be done on makeId and returns false\r\n\r\n*make_id_with_xxxx_variables*:\r\n- If enabled generate a cache id in base of this variables\r\n- if it's option of cache_with_xxxx_variables is disabled\r\n  there is no need to make an id this it because caching will be disabled\r\n  or the variable is empty",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-03-02T12:44:22.000+0000",
                    "updated": "2011-03-02T12:44:22.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11089\/transitions"
}