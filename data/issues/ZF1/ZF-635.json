{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-635",
    "key": "ZF-635",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Select getter methods to return individual parts"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-635\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-02-08T20:50:06.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                "name": "zendfw",
                "displayName": "Shekar Reddy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-12-10T13:50:24.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:33.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Currently, the select component only accepts arguments to store for statement composition later:\n\n$select->from( ... )\n$select->where( ... )\n$select->join( ... )\n$sql = $select->__toString()\n\n\nIt would be very useful for the select component to return the invidual parts as return values if invoked with NO arguments. In other words, the following behavior - after the above function calls:\n\n$from = $select->from();\neg: SELECT id, name FROM user ...\n\n$where = $select->where();\neg: WHERE id = 1 AND ...\n\n$join = $select->join();\neg: JOIN admin a ON u.id = a.id ...\n\n\nHere are some other methods:\n\n$select->orWhere();\n$select->group();\n$select->having();\n$select->limit();\n$select->limitPage();\n$select->order();\n\n\nThoughts...?\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-635\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11863",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "We merge\/consolidate from, join and where clauses dynamically based on some conditions. Even if these methods return the previously set values as-is (eg: arrays), that would reduce a large chunk of code in our application. As it is, these methods in the select component function as set-methods while the get methods are missing and I thought we could toggle their functionality to return the originally set values if the arguments passed while invoking them were empty.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2006-12-13T00:51:30.000+0000",
                    "updated": "2006-12-13T00:51:30.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11865",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "I see these methods return $this for fluent interfaces. I guess providing get*() methods to return arrays (by reference) would leave their functionality intact. We particularly need access to where, from and join clauses so a single\/universal method - getPart( $part ) should do the trick. Eg:\n\n$where =& $select->getPart( 'where' )\n\nTIA\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2006-12-13T09:04:19.000+0000",
                    "updated": "2006-12-13T09:04:19.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11933",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assigning to Bill Karwin.  Scheduling for 0.8.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2006-12-19T12:37:55.000+0000",
                    "updated": "2006-12-19T12:37:55.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11935",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assigning to Bill Karwin.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2006-12-19T12:38:47.000+0000",
                    "updated": "2006-12-19T12:38:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12075",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "I would choose to implement get* methods so that the fluent interface is not spoiled.  I would make a separate method for each part, instead of the getPart() method.  This would be friendlier to code-completion tools.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-01-04T00:11:43.000+0000",
                    "updated": "2007-01-04T00:11:43.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12123",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Recategorize in Zend_Db_Select component.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-01-05T17:02:22.000+0000",
                    "updated": "2007-01-05T17:02:22.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12623",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Implemented in revision 3320.\n\nThe method is called {{getPart()}}.  You pass a string to name the part you want to get. \n{code}\n$select->getPart( 'where' );\n{code}\n\nYou can also use constants that are defined for this purpose in Zend_Db_Select:\n{code}\n$select->getPart( Zend_Db_Select::WHERE );\n{code}\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-08T20:50:05.000+0000",
                    "updated": "2007-02-08T20:50:05.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12630",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "Very neat implementation, indeed!\n\nThanks, much!",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2007-02-09T00:37:59.000+0000",
                    "updated": "2007-02-09T00:37:59.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12632",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "Just a couple of things:\n\n{code}\n- public function getPart($part)\n+ public function &getPart($part)         \/\/ Returns part by reference instead of as a copy to conserve memory\n\n\n   public function reset($part = null)\n    {\n        if ($part == null) {\n-            $this->_parts = $this->_partsInit;\n+            $this->_parts = self::$_partsInit;\n        } else if (array_key_exists($part, $this->_partsInit)) {\n-            $this->_parts[$part] = $this->_partsInit[$part];\n+           $this->_parts[$part] = self::$_partsInit[$part];\n        }\n    } \n{code}\n\n\nI noticed the new code is adding aliases to the column names which is bombing in certain cases:\n\n{code}\n$select->from( 'user', 'Count(*)' );\n$select->where( 'ID = ?', $id );\necho $select->__toString();\n\nOutput:\n\nSELECT\tuser_1.Count(*)\nFROM user user_1\nWHERE\n\tID = 1\n{code}\n\nThe above statement is not a valid SQL statement. I guess we need to either remove the aliasing logic or provide an additional argument (default true) to prefix aliases or not.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2007-02-09T01:20:40.000+0000",
                    "updated": "2007-02-09T01:20:40.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12645",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Thanks, I have fixed it in revision 3323.\n\nSee ZF-204 for the table aliases issue. If you pass '' as the table name you can add expressions that will not be prepended with table names.\n\n{code}\n$select->from( '', 'count(*)' );\n{code}\n\nThis isn't the final solution that I would propose. But it does work for now.\n\nI'll write a new proposal soon, but to give a preview of the use case I have in mind:\n\n{code}\n$select->from( array('*', new Zend_Db_Expr('count(*)' )) );\n{code}\n\nThus the 'count( * )' is an object of a particular class, not a plain string. Zend_Db_Select can use 'instanceof' and thus will know not to treat it as it would do for column names. This can also help for insert(), update(), delete(), {{quoteInto()}}, etc.\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-09T12:09:27.000+0000",
                    "updated": "2007-02-09T12:09:27.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-635\/transitions"
}