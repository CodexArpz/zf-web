{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10038",
    "key": "ZF-10038",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Currency uses locale settings to determine currency"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10038\/votes",
                "votes": 5,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                "name": "alexatkeplar",
                "displayName": "Alex Dean",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-06-23T04:41:32.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2013-02-28T14:57:57.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "There is no way using Zend_Currency to show a price in dollars to a German user (browser language set to 'de_DE') geo-located in the US, because 'de_US' is not a valid locale.\r\n\r\nI'm not clear on why Zend_Currency determines the currency to use by doing a locale region-based lookup. It would be much better to be able to explicitly set the currency using the ISO 4217 code ('USD' etc), and only use a locale region-based lookup as a fallback\/default if the ISO 4217 code is not provided.\r\n\r\nRelated, it's counter-intuitive that the 'currency' option to Zend_Currency specifies the currency _abbreviation_ to display, rather than actually specifying which currency to use for the object.\r\n\r\nBasically I expect to be able to do the following:\r\n\r\n{code}\r\n$currency = new Zend_Currency(array(\r\n                'value' => 1234.56\r\n                'set_currency' => 'USD',\r\n                'format'   => 'de'));\r\nprint $currency; \/\/ returns $1.234,56\r\n{code}\r\n\r\nCurrently Zend_Currency throws an exception if a user's browser has no region information in the locale (e.g. 'de' instead of 'de_DE'). This is because as currently built, Zend_Currency is dependent on the locale region to determine currency to display. With the changes above, Zend_Currency should only throw an exception if a) 'set_currency' did not contain a valid ISO 4217 code AND b) the locale region is not set."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10038\/watchers",
                "isWatching": false,
                "watchCount": 7
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/4",
                "name": "Reopened"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10470",
                    "id": 10470,
                    "description": "Mini Release",
                    "name": "1.10.6",
                    "userReleaseDate": "22\/Jun\/10",
                    "archived": false,
                    "releaseDate": "2010-06-22",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10071",
                    "id": 10071,
                    "name": "Zend_Currency",
                    "description": "Zend_Currency is a Class which handles all Currency related functions and is locale aware.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41157",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "body": "This is not an issue for multiple reasons.\r\nFirstly, you can explicitly state a locale to use as the second param of the constructor.\r\nSecondly, the automatic lookup is because you have not initilalised Zend_Locale, so it is doing its best (according to common best practice) to work out the expected locale for the *http client*.\r\nlastly, the automatic lookup can be overridden in your config if you are using Zend_Application with resources.local = \"de_DE\"\r\n\r\nPlease direct support requests to either the mailing list, or #zftalk on IRC. the issue tracker is not an appropriate place.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "created": "2010-06-23T04:49:14.000+0000",
                    "updated": "2010-06-23T04:49:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41158",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Did you read my issue Ryan? You've given me three different ways of setting a de_DE locale. That's great, and I was aware of all three of them (they're all in the Zend documentation).\r\n\r\nBut a locale of de_DE will not allow me to show a German-formatted _dollar_ price to a German based in the US. To do that, I would have to set a locale of 'de_US', and we both know that locale doesn't exist. (Zend throws a \"Uncaught exception 'Zend_Currency_Exception' with message 'No region found within the locale 'de'\" if you try it).\r\n\r\nThe problem is a simple one: using a locale region as the only way to determine which currency a Zend_Currency object can display is wrong. Not being able to manually configure the currency of a Zend Currency object using a valid ISO 4217 code is just odd.\r\n\r\nMy German in the US example is perhaps a little niche, but I can think of plenty of other examples where you would want to manually configure Zend_Currency objects using ISO 4217s (say, *any* forex application).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2010-06-23T05:04:53.000+0000",
                    "updated": "2010-06-23T05:04:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41159",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "body": "Yes, I did read it.\r\n\r\nfrom your comment now, it seems more that you have an issue with how locale codes are universally used, not just with ZF.\r\n\r\nIf you want to do non-standard formatting, then you must use non-standard means to do so. ZF cannot possibly accommodate all non-standard possibilities, and for it to attempt to do so, would be just wrong.\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "created": "2010-06-23T05:14:59.000+0000",
                    "updated": "2010-06-23T05:14:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41160",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Hey Ryan,\r\n\r\nI don't have any issues with the locale system - I'm very happy for de_US not to exist as a locale code (there's no reason why it needs to exist). My problem is specifically with ZF using locale region as the only way of configuring a Zend Currency object.\r\n\r\nAs ZF currently stands, to create a Zend Currency object, it's not enough for me to know the ISO 4217 currency code for the currency I want to create. I also need to have up my sleeve a valid locale for a country which uses that currency. I can't write: \"create a currency in EUR\", I have to write: \"create a currency for, let's say, de_DE\".\r\n\r\nI've just looked in the Zend codebase and the problem seems to be an architectural one: namely that currencies are merely attributes (<currency type=\"USD\">) of individual locales (en_US.xml etc). I would suggest that currencies should be entities in their own right, if the Zend_Currency object is going to be of general use to people doing work with currencies.\r\n\r\n(As it stands, I'm now using my own lookup table and Zend_Locale_Format in place of Zend_Currency.)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2010-06-23T05:43:24.000+0000",
                    "updated": "2010-06-23T05:43:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41168",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Reopened issue:\r\n\r\nNote:\r\nI expect that you did not read the manual completly.\r\nThe locale itself is not needed to set the currency.\r\n\r\nYou can define ANY setting of a currency.\r\nStill at initiation the locale must be given to know the default number format. Zend_Currency MUST have any sort of locale as the needed formatting and currency informations are only available within the locale database.\r\n\r\nYour parameters are:\r\n\"format\" can be used to set a own number formatting.\r\n\"currency\" can be used to set the wished currency (f.e. \"USD\").\r\n\"locale\" must be set to know the proper grouping and decimal signs.\r\n\r\nSo the proper usecase for your example would be the following:\r\n{code}\r\narray('locale' => 'de_DE', 'currency' => 'USD');\r\n{code}\r\n\r\nWhen you know that you must display the currency with english notation then simply use \"en_US\" as locale.\r\n\r\nLocale upgrading is not that easy but it actually in development for Zend_Locale. As long as it's not available Zend_Currency works as is which means that for default number formatting and number recognition a proper locale must be given.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-06-23T12:46:09.000+0000",
                    "updated": "2010-06-23T12:46:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41172",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Hi Thomas,\r\n\r\nThanks for your detailed and thoughtful response.\r\n\r\nUnfortunately, array('locale' => 'de_DE', 'currency' => 'USD') throws an exception if the user has their browser locale set to 'de' rather than e.g. 'de_DE'.\r\n\r\nAlso: you say that that \"currency\" can be used to set the wished currency (e.g. \"USD\"), but the manual (http:\/\/zendframework.com\/manual\/en\/zend.currency.options.html) clearly says:\r\n\r\n\"currency: Defines the abbreviation which can be displayed.\"\r\n\r\nIn other words, 'currency' merely customises the currency shortname - it does not actually override currency as inferred by the region locale. I've done some additional tests so that I can understand empirically the behaviour of Zend_Currency - I reproduce them below because I don't believe they are consistent with the behaviour of Zend_Currency as you describe, or even as the manual describes. All tests were with browser locale set to 'de', because that seems to be a better way of detecting issues with Zend_Currency:\r\n\r\n$currency = new Zend_Currency(array('value' => 1234.56, 'locale' => 'de_DE', 'format' => 'de', 'currency' => 'USD'));\r\n\/\/ Throws exception. 'locale' does not override browser locale, which is region-less\r\n\r\n$locale = new Zend_Locale('en_GB');\r\nZend_Registry::set('Zend_Locale', $locale);\r\n$currency = new Zend_Currency(array('value' => 1234.56, 'format' => 'de', 'display' => Zend_Currency::USE_SYMBOL));\r\nprint $currency; \/\/ Shows '1.234,56 \u00a3', using GBP as inferred from the locale region, and German formatting style\r\n\r\n$locale = new Zend_Locale('en_GB');\r\nZend_Registry::set('Zend_Locale', $locale);\r\n$currency = new Zend_Currency(array('value' => 1234.56, 'format' => 'de', 'currency' => 'USD', 'display' => Zend_Currency::USE_SYMBOL));\r\nprint $currency; \/\/ Still shows '1.234,56 \u00a3' - i.e. 'currency' of 'USD' does not override 'locale'\r\n\r\n$locale = new Zend_Locale('en_GB');\r\nZend_Registry::set('Zend_Locale', $locale);\r\n$currency = new Zend_Currency(array('value' => 1234.56, 'format' => 'de', 'currency' => 'USD', 'display' => Zend_Currency::USE_SHORTNAME));\r\nprint $currency; \/\/ Still shows '1.234,56 \u00a3', 'currency' does not successfully override 'locale' and 'display' is not working\r\n\r\nMy conclusions from these tests would be:\r\n - There seems to be a bug where 'locale' does not override a region-less browser locale, and an exception is thrown\r\n - There seems to be a bug whereby the 'display' settings e.g. Zend_Currency::USE_SHORTNAME do not work\r\n - As per my original issue title, Zend_Currency can only use locale settings to determine a currency object\r\n\r\nMy recommendations would be:\r\n - Rename the 'currency' option to 'shortname' to make it clear that this option is just about customising the currency abbreviation aka shortname\r\n - Add a new 'currency' option which takes a ISO 4217 code to define which currency a Zend_Currency object should represent\r\n - Do not throw an exception if locale region is not available through any of the three methods set out by Ryan, as long as both 'currency' and 'format' are supplied as options ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2010-06-24T02:25:48.000+0000",
                    "updated": "2010-06-24T02:25:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41180",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Nope... my fault... ZF 2 code will not work with ZF 1 ;-)\r\n\r\nIt should be:\r\n\r\n{code}\r\nZend_Currency(array('currency' => 'USD'), 'de_DE');\r\n{code}\r\n\r\nOtherwise the locale parameter is null and it will use automatic detection which means browser first hand.\r\n\r\nRegarding USE_SHORTNAME and USE_SYMBOL:\r\nWhen there is no shortname or symbol defined for a currency within the defined locale, then it falls back to the next declaration for this currency. Symbol -> Shortname -> Name\r\n\r\nBtw: You can also override any of the default settings done by locale by using the options as described within the manual:\r\n\r\n{code}\r\n     'position'  => Position for the currency sign\r\n     'script'    => Script for the output\r\n     'format'    => Locale for numeric output\r\n     'display'   => Currency detail to show\r\n     'precision' => Precision for the currency\r\n     'name'      => Name for this currency\r\n     'currency'  => 3 lettered international abbreviation\r\n     'symbol'    => Currency symbol\r\n     'locale'    => Locale for this currency \r\n     'value'     => Money value\r\n     'service'   => Exchange service to use\r\n{code}\r\n\r\nSo you can set your own number format, currency sign or whatever.\r\n\r\nAs conclusion to your tests:\r\n1.) No bug with locale\r\n2.) SHORTNAME works as expected (otherwise you would have an empty string.. you would not even know that it's an currency when there is no fallback)\r\n3.) This is no bug as locale setting must be given. Otherwise there is no way to determinate which details should be returned. Using \"de\" you would have \"Amerikanische Dollar\" and using \"en\" you would have \"US Dollar\". Simply using \"USD\" would negotate the relation which Zend_Currency needs to know where to search for currency details.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-06-24T14:07:38.000+0000",
                    "updated": "2010-06-24T14:07:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41182",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Hi Thomas,\r\n\r\nThanks for bearing with me! A couple of things from your last comment:\r\n\r\n1. \"Regarding USE_SHORTNAME and USE_SYMBOL:\r\nWhen there is no shortname or symbol defined for a currency within the defined locale, then it falls back to the next declaration for this currency. Symbol -> Shortname -> Name\"\r\n\r\nJust to confirm, do you mean that some locales are not aware of the ISO 4217 code or the name of their own currency? The following code seems to bear this out:\r\n\r\n$currency = new Zend_Currency(array('value' => 1234.56, 'display' => Zend_Currency::USE_SHORTNAME), 'en_GB');\r\nreturn $currency; \/\/ Prints \u00a31,234.56 not GBP 1,234.56\r\n\r\nHaving currencies which don't know their own ISO 4217 seems very weird to me in a currency library...\r\n\r\n2. Also your suggested code doesn't fulfil my original use case:\r\n\r\n$currency = new Zend_Currency(array(\r\n'value' => 1234.56,\r\n'currency' => 'USD'), 'de_DE');\r\nreturn $currency; \/\/ Returns 1.234,56 \u20ac not 1.234,56 $\r\n\r\nIf I want to show a currency in USD to a German in a German format, I need to do this instead:\r\n\r\n$currency = new Zend_Currency(array(\r\n'value' => 1234.56,\r\n'format' => 'de'), 'en_US');\r\nreturn $currency; \/\/ Returns 1.234,56 $\r\n\r\nI think I'm repeating myself now, but it's totally counter-intuitive to me that if I want to show a US Dollar amount to a German, I have to change locale to 'en_US' and then override format with 'de' rather than just specifying 'USD':\r\n\r\n\"This is no bug as locale setting must be given. Otherwise there is no way to determinate which details should be returned. Using \"de\" you would have \"Amerikanische Dollar\" and using \"en\" you would have \"US Dollar\". Simply using \"USD\" would negotate the relation which Zend_Currency needs to know where to search for currency details.\"\r\n\r\nI hope you don't take this the wrong way Thomas, but you seem to be confusing currencies with currency formatting. The Euro is a currency - it exists independently of any 'locale', and it has an ISO 4217 code of 'EUR'. It has its own symbol, and it has a dynamic exchange rate with other currencies, which also have ISO 4217 codes.\r\n\r\nThe point of a Currency object is to make it possible to create an amount of EUR 100, just as the point of a Date object is to make it possible to define a date of 24th Jan 2010. Currency formatting, like date formatting, is just a human-readable, locale-sensitive expression of a currency object. In other words, it should be the default to create a currency object like this:\r\n\r\n$currency = new Zend_Currency(array('iso_4217' => 'EUR', 'value' => 1234.56));\r\n\r\nLocale\/localisation is only important when formatting a currency for display - and then only around a) the full name of the currency (e.g. \"Amerikanische Dollar\") and b) the currency layout (e.g. digit grouping, symbol position). Symbols and ISO codes are constant. It makes total sense to use the current locale to determine name and layout, and I do acknowledge that e.g. different de_ countries format currencies in different ways, but throwing an exception if the locale is region-less is wrong - it's just an artefact of this strange dependency on using the locale to determine the currency.\r\n\r\nI appreciate that the current architecture of ZF may make some of my points above difficult to implement, but I wanted to give you my view on what a currency library _should_ be, rather than what a currency library can be currently, given its technical legacy. :-)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2010-06-24T16:28:14.000+0000",
                    "updated": "2010-06-24T16:28:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41197",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Sorry to comment again before your response Thomas, but a colleague pointed out to me that Cuba actually has two official currencies (ISO 4217s CUC and CUP), so the idea of a one-to-one mapping from locale to currency breaks down still further.\r\n\r\nAnd of course you've got historic currencies (DEM, CYP etc)... As far as I can see there is no support for these either in the Zend_Currency object.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2010-06-25T06:51:33.000+0000",
                    "updated": "2010-06-25T06:51:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41335",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "@1)\r\nYou are using \"en_GB\" as locale. When no currency is given Zend_Currency tries to detect the currency by using the region. In your example the region GB is connected with \"english pound\". The locale is in this case used as fallback for a not given currency. Otherwise Zend_Currency would have to return an exeption.\r\n\r\nWhy do you think that Zend_Currency does not know its internals?\r\nYou did not call it's info methods but only output a representation for the object which contains not all informations.\r\n\r\nPlease note that all details for a currency come from unicode's CLDR library. When CLDR does not define a symbol or a longname for a currency then non of these names will be available for representation.\r\n\r\n@2)\r\nYour thoughts contain multiple problems.\r\n\r\nYou want to have USD => \"US Dollar\" and the proper number notation. But these notations are localized. Within an other locale it could be \"Amerikanische Dollar\" and also a different notation. Therefor a currency can not exist without a proper locale in case of Zend_Currency.\r\n\r\nAlso when only \"EUR\" would be accepted Zend_Currency would not know how to format this currency. French and english notations are completly different. This would not work.\r\n\r\nA currency itself is already a localized representation... it is not possible to have a \"normalized\" currency value because this would be a plain float value which is completly useless for a currency representation.\r\n\r\nActually ALL currencies are supported... even historic as also CU or GW or IO. There are several countries which use multiple currencies.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-07-04T14:09:36.000+0000",
                    "updated": "2010-07-04T14:09:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41398",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Thanks Thomas, a few questions about your last comment:\r\n\r\n1. \"When no currency is given Zend_Currency tries to detect the currency by using the region.\"\r\n\r\nYou say that region is a fallback for Zend_Currency when currency is not given - but I can't find a way of giving currency to the constructor for Zend_Currency. Yes there is a \"currency\" option, but the documentation (http:\/\/framework.zend.com\/manual\/en\/zend.currency.options.html) clearly says that \"currency: Defines the abbreviation which can be displayed\" - i.e. it's a formatting option, it doesn't determine the currency of the object.\r\n\r\nIf you can provide a code excerpt which demonstrates creating a Zend_Currency using an ISO 4217 code, I would love to see it.\r\n\r\n2. \"Please note that all details for a currency come from unicode's CLDR library.\"\r\n\r\nCan you show me a working example of Zend_Currency::USE_SHORTNAME? I can't get it working for any locales I've tried.\r\n\r\n3. \"a currency can not exist without a proper locale in case of Zend_Currency\"\r\n\r\nSorry, but that's a design limitation of Zend_Currency rather than best practice for a money\/currency object. Java and Python, two languages which see a lot of financial\/monetary usage, totally disagree with this approach. See the following examples:\r\n\r\njava.util.Currency: public static Currency getInstance(String currencyCode)\r\n\r\nAnd python-money:\r\nUSD100 = Money(100, \"USD\")\r\nEUR100 = Money(100, \"EUR\")\r\nUAH100 = Money(100, \"UAH\")\r\n\r\n4. \"A currency itself is already a localized representation... it is not possible to have a \"normalized\" currency value because this would be a plain float value which is completly useless for a currency representation.\"\r\n\r\nSorry no, a currency is not a localized representation, that's why we have ISO standards. It's probably worth looking at the Wikipedia page for ISO 4217: \"ISO 4217 is the international standard describing three-letter codes (also known as the currency code) to define the names of currencies established by the International Organization for Standardization (ISO)\".\r\n\r\nThere is nothing localized about an ISO 4217 currency - it is internationalized. That's what the 'I' in ISO stands for. And there is nothing localized about [float=400.00 iso4217=EUR], which is a perfectly useful description of 400 units of the Euro currency. Plenty of software systems could happily work with a float+iso4217 definition of a currency without worrying about locale - to repeat my previous point, locale is only an issue when you are rendering currencies for a user. It's irrelevant for when you are defining currency objects, doing exchange rate conversions, adding currency amounts together etc.\r\n\r\n5. A final point on this - I've never encountered a system where you have a money amount of \"10\" and you show it as \"10 EUR\" to somebody in de_AT and show the same amount as \"$10\" to somebody in en_US. Pricing just doesn't happen that way. You store a price as \"10 GBP for UK\", and \"12 EUR for Europe\" (or whatever), you never just \"localise\" a fixed number to get the right money amount for the user's current locale. \r\n\r\nPhew! I think that's everything. Look forward to your thoughts and example code.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2010-07-08T11:51:54.000+0000",
                    "updated": "2010-07-08T11:51:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45863",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sootsnoot",
                        "name": "sootsnoot",
                        "displayName": "Rich Peterson",
                        "active": true
                    },
                    "body": "I'm trying to use Zend_Currency for the first time.  After reading the documentation several times, and playing a little with some code, I still found things puzzling, much along the lines that Alex described.  I, too, came to the subject with the expectation that the primary attributes for the constructor would be the standard name for the currency and the amount, that the purpose of locale information would be primarily for formatting the value, and that having the currency default from the region of the locale in effect was just a convenience.  Reading this issue and its replies has clarified things tremendously!\r\n\r\nThe biggest eye-opener for me was Thomas' point that a currency without a locale isn't really useful.  While Alex argues to the contrary by naming ways that it could be used, I think Thomas' point wasn't so much that it has no use, but that it isn't complete, because it might not be able to be displayed.  While the ISO 4217 codes provide a standard way to identify currencies, they don't provide a standard way of rendering to the user the values of those currencies.  So I take Thomas' point to mean that renderings are always localized - and if you don't have a locale that knows how to render a currency, then you can't really say that you support that currency.\r\n\r\nI think the points made about currencies not always having short names, and not properly recognizing the importance of ISO 4217 are a little misleading.  At least using ZF 1.11.1, I have verified that every currency has a 3-letter short name, and I'm pretty sure that every short name is an ISO 4217 3-letter code (I only did the latter by eyeball, didn't write code to do it).  So in order to create a currency object for an ISO 4217 code, you need a table of which locales have regions that use that currency, and you then can pass one of those locales to the constructor.  You might choose the locale based on matching the language part with the browser's language, or if there's no match possibly by asking the user; or as a last resort choose one arbitrarily and use the SHORT_NAME display.  It's easy enough to construct the table from the available ZF functions (though time-consuming, you'd want to do it once and serialize it to a file to read in for use).  While that might seem a little inconvenient, it guarantees that when it comes time to display the value, it will be done using a locale that knows how to display it in a way that people who use the currency expect to see it.  Of course the counter to that is that people who deal with multiple foreign currencies probably would much prefer to see the values displayed using their native locale's conventions for displaying numeric values, along with the 3-letter code placed in the usual place where they'd see it for their own currency, even though that representation might appear bizarre to native users of the currency.  You can get that behavior, but you have to adjust each individual option manually. Probably most users would expect that setting the 'currency' option, which is the 3-letter ISO 4217 code, to a currency code that isn't one of the ones supported by the specified locale, would at least prevent the value from being displayed with the wrong currency symbol or long name; perhaps it could null out those values.\r\n\r\nUp to this point, the issues are just a matter of preference and convenience.  But one real puzzle that remains for me is the intended treatment of regions that have more than one currency.  The getCurrencyList($region) function returns an array of currencies used in the specified region.  As it happens in ZF 1.11.1, for every region of every locale that has a region, this function returns an array of one element, so it's hard to call this a bug.  But if there were a region that returned more than one currency, I see no way to tell the constructor which currency to choose.  Presumably, the 'currency' option would be used to specify the 3-letter code, but it appears that the implementation simply stores that value for display, and does not use it to make any other adjustments to the internals, such as resetting the symbol and long name...\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sootsnoot",
                        "name": "sootsnoot",
                        "displayName": "Rich Peterson",
                        "active": true
                    },
                    "created": "2011-04-13T07:16:34.000+0000",
                    "updated": "2011-04-13T07:16:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48773",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dvp",
                        "name": "dvp",
                        "displayName": "Dmitry Pereslegin",
                        "active": true
                    },
                    "body": "There is no way, to initialize Zend_Currency objects from database values\r\n\r\n[100, 'USD']\r\n[200, 'EUR']\r\n[300, 'RUB']\r\n\r\nright?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dvp",
                        "name": "dvp",
                        "displayName": "Dmitry Pereslegin",
                        "active": true
                    },
                    "created": "2011-10-24T16:47:35.000+0000",
                    "updated": "2011-10-24T16:47:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48777",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "All coding questions not related to a specific issue should be asked within the mailing list.\r\nQuestions like \"is there a way to...\" or \"this is my first time but...\" are no bugs and will therefor not be fixed within ZF's svn.\r\n\r\nPlease ask in the mailing list when you need help or when you have coding problems.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-10-24T18:40:44.000+0000",
                    "updated": "2011-10-24T18:41:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48780",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "body": "Dmitry, amazingly, you are correct - in fact your comment is an excellent synopsis of this thread.\r\n\r\nDue to an epic architectural flaw in Zend, there is no way to create a Zend_Currency without specifying a locale first. Workarounds are:\r\n1. Create a mapping table to map an appropriate locale onto each currency you want to work with\r\n2. Switch to a sane language and currency library, such as:\r\nRuby + RubyMoney\/Currency\r\nPython + python-money\r\nJava + java.util.Currency\r\n\r\nAll of these allow you to create a new currency object using data such as [100, 'USD'].\r\n\r\nHope this helps!\r\n\r\nAlex",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexatkeplar",
                        "name": "alexatkeplar",
                        "displayName": "Alex Dean",
                        "active": true
                    },
                    "created": "2011-10-24T19:02:50.000+0000",
                    "updated": "2011-10-24T19:02:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48781",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=douglas.greenshields",
                        "name": "douglas.greenshields",
                        "displayName": "Douglas Greenshields",
                        "active": true
                    },
                    "body": "I have to say I'm rather dismayed that such a common PHP library (the Zend_Currency component) is so utterly unfit for purpose because of a fundamental misunderstanding about the nature of currencies.  Currency amounts are independent of locale - how would the global financial system work if dollars suddenly became euros just because you were looking at the same thing on a different computer?  As Alex points out, formatting is locale-specific, but the money amount itself is not.  I only hope ZF2 has rewritten this and gone a different way, such as using the intl component of PHP 5.3 for currency rendering.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=douglas.greenshields",
                        "name": "douglas.greenshields",
                        "displayName": "Douglas Greenshields",
                        "active": true
                    },
                    "created": "2011-10-24T20:18:28.000+0000",
                    "updated": "2011-10-24T20:18:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/53174",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "body": "So there is no simple way for the following code:\r\n{code}\r\n$options = \/\/ Some options to tell we want to deal with euros\r\n$currency = new Zend_Currency($options);\r\n$currency->setValue(1500.42);\r\n{code}\r\n\r\nTo display:\r\n{{1,500.42 \u20ac}} with browser (or forced) {{en}} locale\r\n{{1 500,42 \u20ac}} with browser (or forced) {{fr}} locale\r\n{{1500,66 \u20ac}} with browser (or forced) {{ar}} locale\r\n?\r\n\r\nI agree with the fact that a Zend _currency_ object should be composed of a number (float), an associated currency (British pounds, U.S. dollars, European euros, French francs, etc.) and it's position regarding the number (before ? after ? separator character between number and currency).\r\nLocalization of number when displaying should be done via {{Zend_Locale_Format}}.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "created": "2013-02-28T12:05:15.000+0000",
                    "updated": "2013-02-28T12:05:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/53175",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "body": "Forgot to use full length locales in my examples:\r\n{{1,500.42 \u20ac}} with browser (or forced) {{en_US}} locale\r\n{{1 500,42 \u20ac}} with browser (or forced) {{fr_FR}} locale\r\n{{1500,42 \u20ac}} with browser (or forced) {{ar_SA}} locale\r\n\r\nI might also add:\r\n{{1'500.42 \u20ac}} with browser (or forced) {{fr_CH}} locale\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "created": "2013-02-28T14:57:57.000+0000",
                    "updated": "2013-02-28T14:57:57.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10038\/transitions"
}