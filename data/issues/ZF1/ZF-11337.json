{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11337",
    "key": "ZF-11337",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Cache_Frontend_Class::__call shoud throw an Exception on invalid method"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11337\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10680",
                    "id": 10680,
                    "description": "Mini Release",
                    "name": "1.11.7",
                    "userReleaseDate": "02\/Jun\/11",
                    "archived": false,
                    "releaseDate": "2011-06-02",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-05-10T21:09:39.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hujuice",
                "name": "hujuice",
                "displayName": "Sergio Vaccaro",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-05-01T12:51:45.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-05-10T21:09:39.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When the __call function is called, a call_user_func_array function is invoked, wrapped in a try\/catch.\r\nBut the call_user_func_array function returns a warning (not an exception) with an non-existent method name, blocking a good tracing.\r\n\r\nI think that the line 223 (1.11.5) should be out of the try\/catch and provide an exception itself in case of errors.\r\n\r\n{code:title=To give an idea (around line 223)}\r\nif (!$return = call_user_func_array(array($this->_cachedEntity, $name), $parameters))\r\n   throw new Exception ('Unable to call ' . $name . ' bla bla bla');\r\n{code}\r\n\r\nRegards,\r\nSergio"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11337\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                "name": "mabe",
                "displayName": "Marc Bennewitz (private)",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10550",
                    "id": 10550,
                    "description": "Mini Release",
                    "name": "1.11.5",
                    "userReleaseDate": "07\/Apr\/11",
                    "archived": false,
                    "releaseDate": "2011-04-07",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46370",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "We don't know what the return value of the called function\/method should be. A value of FALSE can be valid, too!\nIf you call the method without the class cache you are going in the same error.\n-> The class cache is only for caching method results and not for adding features or changing functionalities.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-05-03T21:26:52.000+0000",
                    "updated": "2011-05-03T21:26:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46503",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hujuice",
                        "name": "hujuice",
                        "displayName": "Sergio Vaccaro",
                        "active": true
                    },
                    "body": "What I meant is a bit different. The problem is to find a wrong call.\r\nAn example could be the clearest explanation.\r\n\r\nI have a class, successfully cached.\r\nAfter a while, I delete a method or change its name. Or maybe some coder mistyped the method name.\r\nHow to find that wrong call?\r\n(Ok, there are many solutions).\r\n\r\nWhen a wrong chunk of code calls the cached class, I have an error message generated by 'call_user_function' in Zend_Cache_Frontend_Class, but this way I'm not able to find where the wrong calling code is.\r\n\r\n{code:title=Code hard to find in a wide project}\r\n$obj = new cachedClass();\r\n$obj->deletedOrMistypedMethod();\r\n{code}\r\n\r\n{code:title=Result of the wrong call}\r\nWarning: call_user_func_array() expects parameter 1 to be a valid callback, class 'cachedClass'\r\ndoes not have a method 'deletedOrMistypedMethod' in\r\n\/path\/to\/lib\/ZendFramework-1.11.6\/library\/Zend\/Cache\/Frontend\/Class.php on line 223\r\n{code}\r\nThis is not so helpful.\r\n\r\nIf I skip caching, this kind of error is a fatal error with a file\/number reference:\r\n{code:title=Same error without cache}\r\n$obj = new NONcachedClass();\r\n$obj->deletedOrMistypedMethod();\r\nFatal error: Call to undefined method NONcachedClass::deletedOrMistypedMethod() in\r\n\/path\/to\/file\/containing\/the\/wrong\/code.php on line nn\r\n{code}\r\n\r\nThis is why I thought to an exception.\r\n\r\nBest regards,\r\nSergio",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hujuice",
                        "name": "hujuice",
                        "displayName": "Sergio Vaccaro",
                        "active": true
                    },
                    "created": "2011-05-08T09:11:12.000+0000",
                    "updated": "2011-05-08T09:11:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46510",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "I'll add an is_callable check and throw an exception like Zend_Cache_Frontend_Function",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-05-09T21:53:52.000+0000",
                    "updated": "2011-05-09T21:53:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46515",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hujuice",
                        "name": "hujuice",
                        "displayName": "Sergio Vaccaro",
                        "active": true
                    },
                    "body": "IMO, it would be an improvement.\r\nSergio",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hujuice",
                        "name": "hujuice",
                        "displayName": "Sergio Vaccaro",
                        "active": true
                    },
                    "created": "2011-05-10T14:12:28.000+0000",
                    "updated": "2011-05-10T14:12:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46524",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "implemented in r24031 (trunk) & r24032 (1.11 branch)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-05-10T21:09:39.000+0000",
                    "updated": "2011-05-10T21:09:39.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11337\/transitions"
}