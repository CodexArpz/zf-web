{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4644",
    "key": "ZF-4644",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_File_Transfer getFilename should return null in cases where file is not uploaded"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4644\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10260",
                    "id": 10260,
                    "description": "Minor Release",
                    "name": "1.7.0",
                    "userReleaseDate": "17\/Nov\/08",
                    "archived": false,
                    "releaseDate": "2008-11-17",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-10-22T12:39:26.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cromulent",
                "name": "cromulent",
                "displayName": "l c",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-10-20T05:57:45.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-11-13T14:10:27.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In the case when you are dealing with forms, there are times where a file input is optional and you want to be able to detect whether a file was uploaded or not prior to calling the receive method of the adapter to attempt to move it to it's final destination.\n\nThe most appropriate method appears to be getFilename on the adapter itself to determine whether a file has been uploaded or not.  A current problem exists that getFilename returns the destination directory and an empty filename in the case where the file is never uploaded. \n\nZend\/File\/Transfer\/Adapter\/Abstract.php\n{code}\npublic function getFileName($file)\n{\n\t$file = (string) $file;\n\tif (!array_key_exists($file, $this->_files)) {\n\t\t return null;\n\t}\n\n\t$directory = $this->getDestination($file);\n\treturn $directory . DIRECTORY_SEPARATOR . $this->_files[$file]['name'];\n}\n{code}\n\nIn addition to the array_key_exists check, it should also check to see if $file is empty or not and return null if filename is empty.  Right now it always returns the final destination directory. So if you happen to call getFilename on an optional file input field that nothing is uploaded to, it will return the destination directory with a trailing slash with an empty filename.  Technically no filename exists when an optional file is never uploaded, so it should return null in this scenario."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4644\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10251",
                    "id": 10251,
                    "description": "Mini Release",
                    "name": "1.6.2",
                    "userReleaseDate": "13\/Oct\/08",
                    "archived": false,
                    "releaseDate": "2008-10-13",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10320",
                    "id": 10320,
                    "name": "Zend_File_Transfer",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25230",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "This is wether a bug, nor the correct way to solve such a problem.\n\ngetFileName does not only work on upload but also on download. It returns the actual set filename of the internal element. It could even change when you use filters.\n\nBut, and this is emminent:\nIT IS NOT THE CORRECT METHOD FOR CHECKING IF A UPLOAD HAS OCCURED !!!!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-10-20T06:39:19.000+0000",
                    "updated": "2008-10-20T06:39:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25231",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cromulent",
                        "name": "cromulent",
                        "displayName": "l c",
                        "active": true
                    },
                    "body": "Thomas, \n\nI thought that may be the case, but what do you suggest for determining the filename in this use case?  \n\nIf the file is optional and ignoreNoFile is set to true, there's no way to guarantee that you can properly determine the final filename after calling receive because the return value of move_uploaded_file is skipped. In addition, with the checks done against move_uploaded_file the granularity of the error is never determined. For example, you can't tell if the file upload never existed in the first place or that  it was the subsequent move that failed. In this case, ZF-4386 may need to be revisited and additional validation\/exceptions added.\n\nIn addition, what happens when you need to store the final filename (minus it's directory path) inside of a database? From your statement, getFilename is not suitable in this case as well, but there's no clear alternative.\n\nThe documentation is now out of date here and there is no specified alternative to calling getValue on the file element.  If we can't rely on getFilename, how can you accurately determine the name of a uploaded file?\n\nhttp:\/\/framework.zend.com\/manual\/en\/zend.form.standardElements.html#zend.form.standardElements.file",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cromulent",
                        "name": "cromulent",
                        "displayName": "l c",
                        "active": true
                    },
                    "created": "2008-10-20T07:12:08.000+0000",
                    "updated": "2008-10-20T07:12:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25235",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "These are two different things.\n\nYou can't determinate the filename while the file has not been received. Because the filename can change at this point.\n\ngetValue() will return null when used with the file element, because files don't have a value in HTTP. This would be a security leak if we would provide this information to the user.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-10-20T10:13:58.000+0000",
                    "updated": "2008-10-20T10:13:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25241",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cromulent",
                        "name": "cromulent",
                        "displayName": "l c",
                        "active": true
                    },
                    "body": "Ok, I guess my question then is what is the suggested method of handling optional file uploads and properly detecting it has been uploaded?  I would imagine using isReceived, but it appear to always return false.\n\nI imagine you would propose calling receive each element, but this is problematic because if the file is optional, the current implementation of ignoreNoFile causes problems with detecting whether a file was successfully uploaded or not if there are errors in the destination directory such as write permissions or if for some reason the initial move_uploaded_file failed on a legitimate upload.\n\nLet's say I have a Zend_Form_Element_File with the name \"upload\" that is not required. As a result, ignoreNoFile is set to true when the field is not required.  The problem is though, since ignoreNoFile is set to true, you cannot rely on the value of receive to determine if the file has been uploaded properly. \n\nBased on your response, then this ticket could be closed or I may have additional suggestions for the receive method which might be better suited in a separate ticket.\n\n{code}\n$form->upload->setRequired(false);\n$upload = $form->upload->getTransferAdapter();\n$upload->setDestination('\/directory\/with\/no\/write\/access');\n\nif ($upload->receive()) {\n      \/\/ this will return true despite the fact the file won't get moved into it's final destination as specified in setDestination\n\n      \/\/ this will point to the path of the file within the default temporary upload dir, but is unexpected as it should reside within the setDestination dir\n      $filename = $form->upload->getFileName();\n      \n} else {\n      \/\/ unreachable\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cromulent",
                        "name": "cromulent",
                        "displayName": "l c",
                        "active": true
                    },
                    "created": "2008-10-20T12:01:44.000+0000",
                    "updated": "2008-10-20T12:01:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25312",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "No, I would simply propose that you use the isUploaded() method.\nIt returns exactly what you mentioned above... has a file been uploaded or not...  simply true or false.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-10-22T12:38:35.000+0000",
                    "updated": "2008-10-22T12:38:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26359",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Changing issues in preparation for the 1.7.0 release.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-11-13T14:10:27.000+0000",
                    "updated": "2008-11-13T14:10:27.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4644\/transitions"
}