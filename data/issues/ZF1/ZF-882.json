{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-882",
    "key": "ZF-882",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "isDate() accepts invalid dates"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-882\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-02-16T08:30:05.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-02-08T14:37:28.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:48.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "isDate() calls getDate()\ngetDate() calls _parseDate()\n_parseDate() automatically fixes various problems with dates specified in the input string\n\nHowever, isDate() probably should default to rejecting dates with the problems that are fixed by _parseDate().\n\nPerhaps we need a new flag to toggle this behavior in _parseDate()?"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-882\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10020",
                    "id": 10020,
                    "description": "Preview Release; I18N, Acl, Auth, Session",
                    "name": "0.7.0",
                    "userReleaseDate": "18\/Jan\/07",
                    "archived": true,
                    "releaseDate": "2007-01-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10073",
                    "id": 10073,
                    "name": "Zend_Locale",
                    "description": "Zend_Locale is a basic wrapper for all I18N and L10N issues for the Zend Framework. It provides the userbasically with access to translation functionality. It can handle different source file types for translation.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12618",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "See FishEye link \/ SVN commit message for list of changes.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-08T20:31:14.000+0000",
                    "updated": "2007-02-08T20:31:14.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12635",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "When isDate uses the standard format it should also accept dates which are automatically corrected.\n\nWhen it uses a given \/ fix format it should only accept this format.\n\nYour Feedback ?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-09T01:59:14.000+0000",
                    "updated": "2007-02-09T01:59:14.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12642",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Will developers expect isDate('13-2006-02') to return true?\n\nI do not think isDate() should return true for dates that required \"fixing\".\n\nIf they really want this behavior, then they can use getFixedDate().",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-09T10:59:41.000+0000",
                    "updated": "2007-02-09T10:59:41.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12646",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I would say to have eighter a parameter for using fixed or not fixed dates...\n\nfor example: \n\nisDate($date, TRUE); \nwould return a FIXED date\n\nisDate($date);\nwould return a NOT FIXED date\n\nisdate($date, $format);\nwould return a FIXED date\n\nA user could be wanting parsing a string and know if a date is within there.\nBut he does not know the format.\nIn my opinon the standard format should always not be fixed because the standard format is not always what the user wants and most users dont even know what the standard format for their locale is. A more loose coupling for the standard format is in my eyes better than throwing an exception for the standard format.\n\nSecond approach would be to have a own function\nisFixedDate($date);",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-09T12:17:15.000+0000",
                    "updated": "2007-02-09T12:17:15.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12650",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "After more consideration, I think we should replace:\n\nisDate($date, $format = null, $locale = null)\n\nwith:\n\nisDateFormat($date, $format)\n\nand\n\nisDateLocale($date, $locale)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-09T12:38:11.000+0000",
                    "updated": "2007-02-09T12:38:11.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12656",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Wouldn't it be better to have \nisDate() instead of isDateLocale() for not fixed format \nand \nisDateFormat() if someone want to have a fixed format ????\n\n\nOne other thing...\n$locale is needed for parsing monthnames, daynames am\/pm seperation and so on...\neven if we have  isDateFormat() the locale parameter is needed otherwise we would have problem parsing dates witch are not written in the actual systemlocale.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-09T13:08:05.000+0000",
                    "updated": "2007-02-09T13:08:05.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12662",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "From the perspective of a developer wishing to validate input dates, there are two main approaches that I see:\n\n* against a formatted date value, such as YYYY-MM-DD (please ignore the chosen symbols)\n* if the input can be unambiguously interpreted to correspond to a particular date, then \"magic\" validation would prove useful, but using this in the default case will likely result in unexpected behavior, as evidenced by recent discussions on this topic\n\nAs an aside, I could also envision having a date filter that would accept arbitrary input and return a normalized date value if possible to unambiguously determine with the given input. The {{getFixedDate()}} method seems to implement this.\n\nWith respect to the previous date validator, which only allowed the YYYY-MM-DD format, I would expect that the validator would be improved by allowing specification of a format and the input value. This is a basic validator that would check numeric date values.\n\nLocale-specific validation, such as upon \"Jan 1, 1970\", is a step further and I would expect successful validation only for unambiguous input values. I would be very careful about implementing \"magic\" interpretations of possibly valid date values.\n\nFor example, I would not consider \"Feb 31, 2007\" to be a valid date, though it _could_ be interpreted as being equivalent to March 3, 2007.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-02-09T15:54:40.000+0000",
                    "updated": "2007-02-09T15:54:40.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12663",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "{quote}\nWith respect to the previous date validator, which only allowed the YYYY-MM-DD format, I would expect that the validator would be improved by allowing specification of a format and the input value. This is a basic validator that would check numeric date values.\n{quote}\n\nThis is why we want to seperate the checking into two functions...\none for fixed formats and one for \"magic\" interpretation.\n\nThe question is only how to name them\n\nisDate \/ isDateFixed \/ isDateLocale \/ isDateFormat.....\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-09T16:17:28.000+0000",
                    "updated": "2007-02-09T16:17:28.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12669",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Probably fixed with SVN 3335.\n\nWe now have \n\nisDate() \nfor checking dates by not fixing them and we have\nisFixedDate() \nwhich checks if the input is a date and tries to fix it if there are problems with the input.\n\nSo isFixedDate() works like isDate before and isDate() does not try to correct false inputs giving false if for example the year is in a false position.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-10T06:24:58.000+0000",
                    "updated": "2007-02-10T06:24:58.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12678",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Maybe we are making this too hard ..\n\nIf a developer can construct a Zend_Date object with the date string, then the date string is valid.\nThis is DRY.\n\n{code}\ntry {\n    $date = new Zend_Date('Feb 31, 2007', Zend_Date::DATES); \/\/ arbitrary input, magic auto-fixing when possible\n    $date = new Zend_Date('Feb 31, 2007', 'dd.MM.yy'); \/\/ no magic auto-fixing\n} catch (Zend_Date_Exception $e) {\n    \/\/ date invalid;\n}\n{code}\n\nHow about isDate() and isLooseDate()?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-11T18:29:44.000+0000",
                    "updated": "2007-02-11T18:29:44.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12683",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "If you want isLooseDate you also would have to name the get function \n\ngetLooseDate...\n\nIt would not make sense to have \nisDate(), isLooseDate()\nand on the other side\ngetDate(), getFixedDate()\n\nTo be consistent both functions would have to be named the same way.\nI would prefer fixed as non english native :-)\n\nRelated to date construction...\nThis would mean that always the date class has to be avaiable if Zend_Locale is needed.\nI would not want to couple them because Zend_Locale should be stand alone. And the Date Object also uses getDate which makes the inclusion useless...\n\nisDate was included to check if within an string a date is avaiable.\nisDate is not related to Zend_Date... it is only a helpfull static standalone function like isInteger, isNumber and so on... parsing locale aware strings\/formats.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-12T01:39:38.000+0000",
                    "updated": "2007-02-12T01:39:38.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12698",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Unfortunately, \"isFixedDate()\" has connotations in English that imply the wrong semantics.\n\nThe words \"loose\" and \"fuzzy\" are often used when working with normalization involving interpretations that use heuristic algorithms.\nAlso, getFuzzyDate() and getLooseDate() don't match the behavior (getting a date that has been fixed of detectable and correctable errors).  I will ask other devteam members to voice their opinions, and see if there is a preference.\n\nI understand the desire for performance.  However, input validation of dates benefits from the numerous formats supported by Zend_Date that are not found in Zend_Locale_Format.  I will compare notes with Darby to make sure we support what he needs.  Perhaps a simpler, basic check is sufficient for Zend_Validate_Date.  The code for a robust \"is date\" check required only 5 lines in my example above :)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-12T19:05:28.000+0000",
                    "updated": "2007-02-12T19:05:28.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12699",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "API:\n\nThe names for isxxx and getxxx should be identical to be API conform.\n\n\nRelated to example and robustness:\n\nZend_Locale was annouced as standalone class without references or needs for other classes of the Framework.\nI would not want to have this broken.\n\nAlso Zend_Locale_Format was annouced to give support on normalizing of localized inputs.\nZend_Locale_Format has not to know about all 200 supported formats from Zend_Date...\n\nI would not want ot load 3000 codelines and parse through 300 just for one isDate function.\nAlso isDate calls getDate... and new Zend_Date does also call getDate but after going through several other codelines.\n\nZend_Locale_Format is only a helperclass for the locale framework and is not directly related \nto the date class. It only has to know about localized inputs and normalize them.\n\nI am strict against coupling this two classes.\n\nBtw:\nYour code can also be written as\n\n{code}\n$date = Zend_Locale_Format::isFixedDate('Feb 31, 2007'); \/\/ arbitrary input, magic auto-fixing when possible\nif (!$date) {\n    $date = Zend_Locale_Format::isDate('Feb 31, 2007', 'dd.MM.yy'); \/\/ no magic auto-fixing\n}\n{code}\n\nwhich is one codeline less than your example. ;-)\nAnd it would be faster with the same result.\n\nA \"complete\" check could be done by looping through all Zend_Date constants and try to generate a Zend_Date object...\nif no exception is thrown you would probably have found the correct input format ;-)\n\nOk.. dont ask me if this is performant... I dont think so... but it's \"complete\" ;-)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-13T01:31:38.000+0000",
                    "updated": "2007-02-13T01:31:38.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12715",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "I think your idea for using \"corrected\" is the best so far.\n\nUsing the suffix \"-able\" seems to imply the correct meanings:\n\n- isCorrectableDate()\n- getCorrectableDate()",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-13T14:50:15.000+0000",
                    "updated": "2007-02-13T14:50:15.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12799",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "See FishEye link for details.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-16T08:30:05.000+0000",
                    "updated": "2007-02-16T08:30:05.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-882\/transitions"
}