{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-932",
    "key": "ZF-932",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Proposed Feature: Enable Zend_Date \/ Zend_TimeSync to interoperate"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-932\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10022",
                    "id": 10022,
                    "description": "Beta Release; all components feature complete for 1.0",
                    "name": "0.9.0",
                    "userReleaseDate": "17\/Mar\/07",
                    "archived": true,
                    "releaseDate": "2007-03-17",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-02-23T03:36:30.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-02-20T14:30:04.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:50.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When I say \"new Zend_Date()\" with no parameters, I would like to have some way of instructing the ZF to give me a new Zend_Date object using time() + the offset from Zend_TimeSync.  Thus, if someone gives me some code using Zend_Date, I have a way to make the existing code use the correct, \"true\" time for now.\n\nCurrently:\n$server = new Zend_TimeSync('ntp:\/\/serveraddress', 'alias'); \n$date = $server->getDate();  \/\/ pretend NTP server returned a time of 00:01\n$date->isToday(); \/\/ fails if the actual server's time is 23:56 and the true time is 00:01\n\nProposed Change:\n$date->isToday() does not fail for the use case and situation above.\nFor example, the protected _getTime() could be integrated in some way with Zend_TimeSync.\n\nThere are more situations like this, where Zend_Date relies on time(), which could be wrong."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-932\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-961",
                    "issue": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-961",
                    "type": {
                        "name": "Dependency",
                        "direction": "INBOUND",
                        "description": "is dependecy of"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10072",
                    "id": 10072,
                    "name": "Zend_Date",
                    "description": "Zend_Date is the basic library for the handling of all date, time and calendar-related issues.",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10110",
                    "id": 10110,
                    "name": "Zend_TimeSync",
                    "description": "Get time from time server, e.g. NTP.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12851",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I see some problems...\n\nIf we natively add Zend_Timesync with Zend_Date probably all users will use it because it returns the \"exact\" time which seems always to be better than the servers time in users view.\n\nThis way out Zend_Framework would spread all timeservers which could lead to massive negative image due to timeserver missuse.\n\nSecond:\nNTP and SNTP only define the time and the offset to actual time. We are not receiving day or date with the NTP packet. \n\nThird:\nImplementing a \"time-setter\" function within Zend_Date could lead to missuse. A user could for example have the idea to add some \"own\" values to the existing date for example three hours because he has GMT+3 \n\n\nI'm not sure if we should implement such an problematic function.\n\nThe standard useage for Timesync is having an exact timestamp for database actions or other things which have to be very exact. The question is also if we should combine Timesync so close to Date and make it easy for the user to missuse it.\n\nHaving a returned Timesync Date is like having an own date defined. You have to use the proper functions which are not related to time()... there are only 3 functions which are related to time().\nAnd all 3 can be used with Timesync but not the way you mentioned.\n\nisToday() :\n$date->compareDate(Zend_Date::now());\n\nis what you probably wanted to do.\nWith this in mind it is not necessary to combine this two classes more as they are actualy.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-20T15:37:19.000+0000",
                    "updated": "2007-02-20T15:37:19.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12853",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "1)  The problem you mentioned is present even with Zend_TimeSync, by itself.\n\nI am only proposing that we make it possible for ZF developers to solve the use case problem described above.\nI am not proposing that all uses of Zend_Date should be coupled to Zend_TimeSync and require Zend_TimeSync to first obtain a correct, accurate timestamp.\n\n2)  No day or date is needed from the NTP packet..  [NTP uses UTC as reference time|http:\/\/www.ntp.org\/ntpfaq\/NTP-s-def.htm]  If we know the true time is \"00:01\", but the server's time is \"23:56\" we can calculate an offset and \"fix\" the server's time when using the function isToday() and thus solve the problem in the use case above.\n\n3) I have not proposed a implementation of how to \"set\" the \"now\" time in Zend_Date, but only provided a use case which fails when the server's local time is wrong.  Since we have Zend_TimeSync, there are multiple possible ways to solve the problem shown by this use case.\n\n4) isToday() fails and produces the wrong answer in the situation above.  If we provide no solution and a ZF developer is given some code written using the ZF, then the developer will have to debug and rewrite the code, instead of having a simple way to make existing uses of isToday() work on a sever with incorrect local, actual time.\n\n5) If you strongly believe this use case should fail and give the wrong answer when the server's local time is not accurate, then I won't object if you close this issue.  When the server's local time is wrong, there are other use cases that produce results developers do not expect, because many functions in Zend_Date and Zend_DateObject rely on either time() or _getTime().",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-20T16:14:09.000+0000",
                    "updated": "2007-02-20T16:14:09.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12858",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I have to think a little more about this...\nI will give response tomorrow",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-20T17:10:19.000+0000",
                    "updated": "2007-02-20T17:10:19.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12859",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Would a unit test for Zend_DateTest.php be helpful?  \n\n{code}\nfunction testIsTodayWithTimeSync()\n{\n    $server = new Zend_TimeSync('ntp:\/\/serveraddress', 'alias');\n    $date1 = $server->getDate();\n    \/\/ need to use the proxy class to simulate time() returning wrong value\n    $date2 = new Zend_Date_TestHelper($date1);\n\n    \/\/ now simulate the server having an incorrect actual, local time:\n    $date2->_setTime($date->getTimestamp() - 86400); \/\/ has side-effect\n\n    \/\/ both Zend_Date objects have the same date\/time\/timestamp\n    $this->assertSame($date1->getTimestamp(), $date2->getTimestamp());\n\n    $this->assertTrue($date2->isToday()); \/\/ fails, but shouldn't because $date2 is today\n}\n{code}\n\nI don't want to commit the code above, because the ideas in my email (leading to this Jira issue) for Zend_TimeSync were ideas and not absolute requirements but just brainstorming possible improvements for the i18n components.  We could instead just document all the ways and places Zend_Date will fail when using Zend_Date objects created using Zend_TimeSync.  I would need your help finding and documenting these places, since there are many other things I must also work on now.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-20T17:47:46.000+0000",
                    "updated": "2007-02-20T17:47:46.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12862",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I have a simpler solution in mind which I already know how to implement.\n\nBut anyway... a unit test would be nice.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-21T06:35:22.000+0000",
                    "updated": "2007-02-21T06:35:22.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12890",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Ok... I added the new feature.\n\nZend_TimeSync can now propose an offset to Zend_Date which will be used internally in all functions which make use of the time() function in Zend_Date.\n\nThe only thing which I need help with is a proper unit test... ( without changing the API :-) )",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-22T14:15:03.000+0000",
                    "updated": "2007-02-22T14:15:03.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12905",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "The issue itself was fixed with SVN 3567.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-02-23T03:36:30.000+0000",
                    "updated": "2007-02-23T03:36:30.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-932\/transitions"
}