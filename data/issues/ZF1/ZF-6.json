{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6",
    "key": "ZF-6",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Ability to use TrueType fonts in PDF documents"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10000",
                    "id": 10000,
                    "description": "Preview Release",
                    "name": "0.1.4",
                    "userReleaseDate": "29\/Jun\/06",
                    "archived": true,
                    "releaseDate": "2006-06-29",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-06-17T16:12:59.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=willie",
                "name": "willie",
                "displayName": "Willie Alberty",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-06-16T13:32:15.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:44:26.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Given a path to a TrueType font file on disk, create a font object that can be used with Zend_Pdf_Page::setFont() and Zend_Pdf_Page::drawText(). The font program should be able to be embedded in the resulting PDF document."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date",
            "value": "2006-06-19"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=willie",
                "name": "willie",
                "displayName": "Willie Alberty",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-19",
                    "issue": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-19",
                    "type": {
                        "name": "Dependency",
                        "direction": "OUTBOUND",
                        "description": "depends on"
                    }
                },
                {
                    "issueKey": "ZF-18",
                    "issue": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-18",
                    "type": {
                        "name": "Dependency",
                        "direction": "INBOUND",
                        "description": "is dependecy of"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10010",
                    "id": 10010,
                    "description": "Preview Release",
                    "name": "0.1.3",
                    "userReleaseDate": "18\/Apr\/06",
                    "archived": true,
                    "releaseDate": "2006-04-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10020",
                    "id": 10020,
                    "name": "Zend_Pdf",
                    "description": "pure PHP manipulation engine for composing PDFs",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10030",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "I have tested this patch and it has my go ahead for commit. Only questions are to the new API function names as we will have to stick with them once they are committed. \n\nThis fix should be included in 0.1.4",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2006-06-16T23:17:43.000+0000",
                    "updated": "2006-06-16T23:17:43.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10045",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=willie",
                        "name": "willie",
                        "displayName": "Willie Alberty",
                        "active": true
                    },
                    "body": "Done.\n\n----\n\nh4. New Functionality\n\n\nh5. Fonts\n\nIt is now possible to use custom TrueType fonts in your PDF documents.\n\nYou can currently use any individual TrueType font (which usually has a '.ttf' extension) or an OpenType font ('.otf' extension) if it contains TrueType outlines. Currently unsupported, but planned for a future revision are Mac OS X .dfont files and Microsoft TrueType Collection ('.ttc' extension) files.\n\nIn addition, font instantiation is now managed via factory methods in {{Zend_Pdf_Font}}. This class replaces the deprecated {{Zend_Pdf_Font_Standard}} (see the API Changes section below) and can create any type of font object: Standard PDF, TrueType, Type 1 (coming soon), etc. If you attempt to create a font using an unsupported format, the factory will throw an exception.\n\nSince font objects are immutable, the factory methods also cache them so they are reused if a font with the same name or file path is requested again.\n\nTo create a font object, you either provide its PostScript name or the full file path to the font file:\n\n{code}\n$helveticaFont = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);\n$goodDogCoolFont = Zend_Pdf_Font::fontWithPath('\/path\/to\/GOODDC__.TTF');\n{code}\n\nConstants are provided for the PostScript names of the standard 14 PDF fonts. See the {{FONT_}} constants defined in {{Zend_Pdf_Font}}.\n\nOnce instantiated, custom fonts behave exactly the same as built-in fonts, i.e. - you use the same drawing commands you are already familiar with:\n\n{code}\n$page->setFont($goodDogCoolFont, 24);\n$page->drawText('Good Dog Cool!', 72, 720);\n{code}\n\nBy default, custom fonts will be embedded in the resulting PDF document. This permits recipients to view the page as intended, even if they don't have the proper fonts installed on their system. If you are concerned about file size, you can request that the font program not be embedded by passing the appropriate option to the font factory method:\n\n{code}\n$goodDogCoolFont = Zend_Pdf_Font::fontWithPath('\/path\/to\/GOODDC__.TTF',\n                                               Zend_Pdf_Font::EMBED_DONTEMBED);\n{code}\n\nIf the font program is not embedded but the recipient of the PDF file has the font installed on their system, they will see the document as intended. If they do not have the correct font installed, the PDF viewer application will do its best to synthesize a replacement.\n\nSome fonts have very specific licensing rules which prevent them from being embedded in PDF documents. So you are not caught off-guard by this, if you try to use a font that cannot be embedded, the factory method will throw an exception.\n\nYou can still use these fonts, but you must either pass the do not embed flag as described above, or you can simply suppress the exception:\n\n{code}\n$font = Zend_Pdf_Font::fontWithPath('\/path\/to\/GOODDC__.TTF', \n                                    Zend_Pdf_Font::EMBED_SUPPRESSEMBEDEXCEPTION);\n{code}\n\nThis technique is preferred if you allow an end-user to choose their own fonts. Fonts which can be embedded in the PDF document will be; those that cannot, won't.\n\nFont programs can be rather large, some reaching into the tens of megabytes. By default, all embedded fonts are compressed using the Flate compression scheme, resulting in a space savings of 50% on average. If, for some reason, you do not want to compress the font program, you can disable it with an option:\n\n{code}\n$font = Zend_Pdf_Font::fontWithPath('\/path\/to\/GOODDC__.TTF',\n                                    Zend_Pdf_Font::EMBED_DONTCOMPRESS);\n{code}\n\nFinally, when necessary, you can combine the embedding options by using the bitwise OR operator:\n\n{code}\n$font = Zend_Pdf_Font::fontWithPath('\/path\/to\/GOODDC__.TTF',\n                                    (Zend_Pdf_Font::EMBED_SUPPRESSEMBEDEXCEPTION |\n                                     Zend_Pdf_Font::EMBED_DONTCOMPRESS));\n{code}\n\n\n\nh5. Character Encoding Methods\n\nIt is now possible to specify the character encoding method used by a string at draw time via an optional parameter to {{drawText()}}. For example:\n\n{code}\n$page->drawText('Hello world!', 72, 720, 'ISO-8859-1');\n$page->drawText($aString, 72, 360, 'UTF-8');\n{code}\n\nIf no character encoding method is provided, the string will be interpreted using the encoding method of the current locale (see http:\/\/www.php.net\/manual\/function.setlocale.php), which is usually 'ISO-8859-1'. This is consistent with the existing behavior.\n\nPlease note that although you can now specify the string's character encoding method as one of the Unicode encodings, you are still limited to the Latin-1 character set for all but the built-in Symbol and Zapf Dingbats fonts (see the next section below). Full Unicode support is still under development.\n\n\n\nh5. Symbol and Zapf Dingbats\n\nAs discussed at length on the framework mailing list (see the thread \"Zend_Pdf: Anybody actively using Symbol or Zapf Dingbats fonts?\" started on 2006-05-25), the built-in Symbol and Zapf Dingbats fonts contain characters which fall outside the Latin-1 character set. Internally, the PDF document uses special encoding methods to access characters in these fonts.\n\nThese fonts were broken in versions 0.1.4 and earlier of the framework because they did not contain the code necessary to deal with the special encoding methods. Symbol and Zapf Dingbats are now available for use, and the framework shields you from the details of their special encodings. You simply use regular Unicode characters as you would with any other font.\n\nFor example, to display a Star of David character (U+2721), a black diamond character (U+25C6), a check mark character (U+2713), and an airplane character (U+2708) using Zapf Dingbats, you would use the following string, which is in UTF-16 big-endian encoding:\n\n{code}\n$utf16String = \"\\x27\\x21\\x25\\xC6\\x27\\x13\\x27\\x08\";\n{code}\n\nNote how easy it is to read the Unicode character codes when the string uses UTF-16 big-endian encoding. Here are the same characters using UTF-8 encoding:\n\n{code}\n$utf8String  = \"\\xE2\\x9C\\xA1\\xE2\\x97\\x86\\xE2\\x9C\\x93\\xE2\\x9C\\x88\";\n{code}\n\nYou then feed this string to drawText() as any other, making sure to specify the encoding method you used:\n\n{code}\n$zapfDingbatsFont = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_ZAPFDINGBATS);\n$page->setFont($zapfDingbatsFont, 24);\n$page->drawText($utf16String, 72, 720, 'UTF-16BE');\n{code}\n\nThe Unicode characters to use with the Zapf Dingbats font can be found in the Dingbats character range (U+2700-27BF) of the Unicode standard. A reference document for these characters can be found here: http:\/\/www.unicode.org\/charts\/PDF\/U2700.pdf\n\nThe Symbol font contains a more diverse character set, coving Arabic numerals, the Greek alphabet, many mathematical symbols and more. One of the better references available online is part of the XSL-FO test suite, and can be found at the World Wide Web Consortium's web site: http:\/\/www.w3.org\/Style\/XSL\/TestSuite\/contrib\/XEP\/Tests\/symbol.pdf\n\nSimilar reference documents, which will be generated by the framework itself, will be made available in a future documentation update.\n\nIf you're new to Unicode, the following Wikipedia article provides a good introduction and contains links to other excellent Unicode resources: http:\/\/en.wikipedia.org\/wiki\/Unicode\n\n\nThere is a compatibility method available for the built-in Symbol and Zapf Dingbats fonts which converts a string using the font's internal encoding to the proper Unicode characters (in UTF-16BE encoding). This method should only be used if you need to support these fonts with legacy applications which are not Unicode-aware:\n\n{code}\n$utf16String = $zapfDingbatsFont->toUnicode($legacyString);\n{code}\n\n\n\n----\n\n\n\nh4. API Changes\n\n\nh5. Zend_Pdf_Font_Standard\n\nThe old {{Zend_Pdf_Font_Standard}} class has been removed. (Technically, it still exists, but it has been renamed and made into an abstract class.)\n\nFont instantiation is now managed by the factory methods in {{Zend_Pdf_Font}}. Consequently, you will need to make the following changes to your code:\n\n{noformat}\nOLD: $font = new Zend_Pdf_Font_Standard(Zend_Pdf_Const::FONT_HELVETICA);\nNEW: $font = Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA);\n{noformat}\n\nPlease note that the name of the constants for the built-in PDF fonts have changed as well (see the discussion in ZF-14). Both of these changes are easily handled with one global search-and-replace operation:\n\n{noformat}\nSEARCH:  new Zend_Pdf_Font_Standard(Zend_Pdf_Const\nREPLACE: Zend_Pdf_Font::fontWithName(Zend_Pdf_Font\n{noformat}\n\n\n----\n\n\nh5. Other Changes\n\nMany more changes have taken place \"under the hood.\" The entire text system is being prepared to fully support Unicode text. Additionally, font and character metrics are now available, paving the way for some powerful layout tools which are already under development. More information on these upcoming features will be available soon.\n\nFor more information on the internal changes, please refer to the inline class documentation.\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=willie",
                        "name": "willie",
                        "displayName": "Willie Alberty",
                        "active": true
                    },
                    "created": "2006-06-17T16:12:59.000+0000",
                    "updated": "2006-06-17T16:12:59.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10050",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=willie",
                        "name": "willie",
                        "displayName": "Willie Alberty",
                        "active": true
                    },
                    "body": "{panel:title=NOTE|titleBGColor=#F7D6C1|bgColor=#FFFFCE}\nThe font embedding constants referred to above have been renamed (see ZF-14):\n\nEMBED_DONTEMBED  ->  EMBED_DONT_EMBED\\\\\nEMBED_SUPPRESSEMBEDEXCEPTION -> EMBED_SUPPRESS_EMBED_EXCEPTION\\\\\nEMBED_DONTCOMPRESS -> EMBED_DONT_COMPRESS\n{panel}\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=willie",
                        "name": "willie",
                        "displayName": "Willie Alberty",
                        "active": true
                    },
                    "created": "2006-06-17T19:20:25.000+0000",
                    "updated": "2006-06-17T19:20:25.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6\/transitions"
}