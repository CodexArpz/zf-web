{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10465",
    "key": "ZF-10465",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add option 'encodeUrl' to Zend_Page_MVC config"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10465\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10981",
                    "id": 10981,
                    "description": "Mini Release",
                    "name": "1.11.11",
                    "userReleaseDate": "29\/Sep\/11",
                    "archived": false,
                    "releaseDate": "2011-09-29",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-09-04T13:02:49.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                "name": "ubeckers",
                "displayName": "Ulrich Beckers",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-09-17T02:07:26.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-09-04T13:02:50.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend_Page_MVC has the option to switch whether params should be reset when assembling URL. There are some cases where some params contain characters (like '\/') which needs to be preserved by some routes. So there needs to be a way of sitching encodeUrl.\r\n\r\nE.g.: You have a route for content-pages like this\r\n\r\n{code:title=Route definition}\r\n'content' => array(\r\n\t'type' => 'Zend_Controller_Router_Route_Regex',\r\n\t'route' => '(.+)\\.html',\r\n\t'defaults' => array(\r\n\t\t'module' => 'default',\r\n\t\t'controller' => 'content',\r\n\t\t'action' => 'content'\r\n\t),\r\n\t'map' => array(\r\n\t\t1 => 'contentKey'\r\n\t),\r\n\t'reverse' => '%s.html'\r\n),\r\n{code}\r\n\r\nAnd later on you want to define some subpages via Zend_Navigation:\r\n\r\n{code:title=Page definition}\r\n array(\r\n\t'label' => 'PageXY',\r\n\t'route' => 'content',\r\n\t'module' => 'default',\r\n\t'controller' => 'content',\r\n\t'action' => 'content',\r\n\t'params' => array(\r\n\t\t'contentKey' => 'pagexy\/subpage'\r\n\t)\r\n),\r\n{code}\r\n\r\nThis results in an invalid href, because Zend_Page_MVC calls a url-helper (Zend_Controller_Action_Helper_Url) internally, but there is no way to pass a configuration variable which controls the parameter '$encode' of url-helper\r\n\r\n\r\n\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10465\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                "name": "frosch",
                "displayName": "Frank Br\u00fcckner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-8586",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8586",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-8023",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8023",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/14343",
                    "filename": "Mvc.php.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "created": "2011-06-06T12:01:04.000+0000",
                    "size": 2243,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/14343\/Mvc.php.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/14547",
                    "filename": "MvcTest.php.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2011-07-29T07:33:57.000+0000",
                    "size": 3497,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/14547\/MvcTest.php.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10406",
                    "id": 10406,
                    "name": "Zend_Navigation",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42270",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                        "name": "ubeckers",
                        "displayName": "Ulrich Beckers",
                        "active": true
                    },
                    "body": "I changed the code of class Zend_Navigation_Page_Mvc in my setup, so there is a way to control the url encoding. Maybe there is a way this can be applied to further ZF-Version?\r\n\r\n\r\n<?php\r\n\/**\r\n * Zend Framework\r\n *\r\n * LICENSE\r\n *\r\n * This source file is subject to the new BSD license that is bundled\r\n * with this package in the file LICENSE.txt.\r\n * It is also available through the world-wide-web at this URL:\r\n * http:\/\/framework.zend.com\/license\/new-bsd\r\n * If you did not receive a copy of the license and are unable to\r\n * obtain it through the world-wide-web, please send an email\r\n * to license@zend.com so we can send you a copy immediately.\r\n *\r\n * @category   Zend\r\n * @package    Zend_Navigation\r\n * @subpackage Page\r\n * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http:\/\/www.zend.com)\r\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\r\n * @version    $Id: Mvc.php 20096 2010-01-06 02:05:09Z bkarwin $\r\n *\/\r\n\r\n\/**\r\n * @see Zend_Navigation_Page\r\n *\/\r\nrequire_once 'Zend\/Navigation\/Page.php';\r\n\r\n\/**\r\n * @see Zend_Controller_Action_HelperBroker\r\n *\/\r\nrequire_once 'Zend\/Controller\/Action\/HelperBroker.php';\r\n\r\n\/**\r\n * Used to check if page is active\r\n *\r\n * @see Zend_Controller_Front\r\n *\/\r\nrequire_once 'Zend\/Controller\/Front.php';\r\n\r\n\/**\r\n * Represents a page that is defined using module, controller, action, route\r\n * name and route params to assemble the href\r\n *\r\n * @category   Zend\r\n * @package    Zend_Navigation\r\n * @subpackage Page\r\n * @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http:\/\/www.zend.com)\r\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\r\n *\/\r\nclass Zend_Navigation_Page_Mvc extends Zend_Navigation_Page\r\n{\r\n    \/**\r\n     * Action name to use when assembling URL\r\n     *\r\n     * @var string\r\n     *\/\r\n    protected $_action;\r\n\r\n    \/**\r\n     * Controller name to use when assembling URL\r\n     *\r\n     * @var string\r\n     *\/\r\n    protected $_controller;\r\n\r\n    \/**\r\n     * Module name to use when assembling URL\r\n     *\r\n     * @var string\r\n     *\/\r\n    protected $_module;\r\n\r\n    \/**\r\n     * Params to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     * @var array\r\n     *\/\r\n    protected $_params = array();\r\n\r\n    \/**\r\n     * Route name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     * @var string\r\n     *\/\r\n    protected $_route;\r\n\r\n    \/**\r\n     * Whether params should be reset when assembling URL\r\n     *\r\n     * @see getHref()\r\n     * @var bool\r\n     *\/\r\n    protected $_resetParams = true;\r\n          \r\n    \/**\r\n     * Whether href should be encoded when assembling URL\r\n     *\r\n     * @see getHref()\r\n     * @var bool\r\n     *\/\r\n    protected $_encodeUrl = true;\r\n\r\n    \/**\r\n     * Cached href\r\n     *\r\n     * The use of this variable minimizes execution time when getHref() is\r\n     * called more than once during the lifetime of a request. If a property\r\n     * is updated, the cache is invalidated.\r\n     *\r\n     * @var string\r\n     *\/\r\n    protected $_hrefCache;\r\n\r\n    \/**\r\n     * Action helper for assembling URLs\r\n     *\r\n     * @see getHref()\r\n     * @var Zend_Controller_Action_Helper_Url\r\n     *\/\r\n    protected static $_urlHelper = null;\r\n\r\n    \/\/ Accessors:\r\n\r\n    \/**\r\n     * Returns whether page should be considered active or not\r\n     *\r\n     * This method will compare the page properties against the request object\r\n     * that is found in the front controller.\r\n     *\r\n     * @param  bool $recursive  [optional] whether page should be considered\r\n     *                          active if any child pages are active. Default is\r\n     *                          false.\r\n     * @return bool             whether page should be considered active or not\r\n     *\/\r\n    public function isActive($recursive = false)\r\n    {\r\n        if (!$this->_active) {\r\n            $front = Zend_Controller_Front::getInstance();\r\n            $reqParams = $front->getRequest()->getParams();\r\n\r\n            if (!array_key_exists('module', $reqParams)) {\r\n                $reqParams['module'] = $front->getDefaultModule();\r\n            }\r\n\r\n            $myParams = $this->_params;\r\n\r\n            if (null !== $this->_module) {\r\n                $myParams['module'] = $this->_module;\r\n            } else {\r\n                $myParams['module'] = $front->getDefaultModule();\r\n            }\r\n\r\n            if (null !== $this->_controller) {\r\n                $myParams['controller'] = $this->_controller;\r\n            } else {\r\n                $myParams['controller'] = $front->getDefaultControllerName();\r\n            }\r\n\r\n            if (null !== $this->_action) {\r\n                $myParams['action'] = $this->_action;\r\n            } else {\r\n                $myParams['action'] = $front->getDefaultAction();\r\n            }\r\n\r\n            if (count(array_intersect_assoc($reqParams, $myParams)) ==\r\n                count($myParams)) {\r\n                $this->_active = true;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return parent::isActive($recursive);\r\n    }\r\n\r\n    \/**\r\n     * Returns href for this page\r\n     *\r\n     * This method uses {@link Zend_Controller_Action_Helper_Url} to assemble\r\n     * the href based on the page's properties.\r\n     *\r\n     * @return string  page href\r\n     *\/\r\n    public function getHref()\r\n    {\r\n        if ($this->_hrefCache) {\r\n            return $this->_hrefCache;\r\n        }\r\n\r\n        if (null === self::$_urlHelper) {\r\n            self::$_urlHelper =\r\n                Zend_Controller_Action_HelperBroker::getStaticHelper('Url');\r\n        }\r\n\r\n        $params = $this->getParams();\r\n\r\n        if ($param = $this->getModule()) {\r\n            $params['module'] = $param;\r\n        }\r\n\r\n        if ($param = $this->getController()) {\r\n            $params['controller'] = $param;\r\n        }\r\n\r\n        if ($param = $this->getAction()) {\r\n            $params['action'] = $param;\r\n        }\r\n\r\n        $url = self::$_urlHelper->url($params,\r\n                                      $this->getRoute(),\r\n                                      $this->getResetParams(),\r\n\t\t\t\t\t\t\t\t\t  $this->getEncodeUrl()\r\n                                      );\r\n\r\n        return $this->_hrefCache = $url;\r\n    }\r\n\r\n    \/**\r\n     * Sets action name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  string $action             action name\r\n     * @return Zend_Navigation_Page_Mvc   fluent interface, returns self\r\n     * @throws Zend_Navigation_Exception  if invalid $action is given\r\n     *\/\r\n    public function setAction($action)\r\n    {\r\n        if (null !== $action && !is_string($action)) {\r\n            require_once 'Zend\/Navigation\/Exception.php';\r\n            throw new Zend_Navigation_Exception(\r\n                    'Invalid argument: $action must be a string or null');\r\n        }\r\n\r\n        $this->_action = $action;\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Returns action name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return string|null  action name\r\n     *\/\r\n    public function getAction()\r\n    {\r\n        return $this->_action;\r\n    }\r\n\r\n    \/**\r\n     * Sets controller name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  string|null $controller    controller name\r\n     * @return Zend_Navigation_Page_Mvc   fluent interface, returns self\r\n     * @throws Zend_Navigation_Exception  if invalid controller name is given\r\n     *\/\r\n    public function setController($controller)\r\n    {\r\n        if (null !== $controller && !is_string($controller)) {\r\n            require_once 'Zend\/Navigation\/Exception.php';\r\n            throw new Zend_Navigation_Exception(\r\n                    'Invalid argument: $controller must be a string or null');\r\n        }\r\n\r\n        $this->_controller = $controller;\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Returns controller name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return string|null  controller name or null\r\n     *\/\r\n    public function getController()\r\n    {\r\n        return $this->_controller;\r\n    }\r\n\r\n    \/**\r\n     * Sets module name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  string|null $module        module name\r\n     * @return Zend_Navigation_Page_Mvc   fluent interface, returns self\r\n     * @throws Zend_Navigation_Exception  if invalid module name is given\r\n     *\/\r\n    public function setModule($module)\r\n    {\r\n        if (null !== $module && !is_string($module)) {\r\n            require_once 'Zend\/Navigation\/Exception.php';\r\n            throw new Zend_Navigation_Exception(\r\n                    'Invalid argument: $module must be a string or null');\r\n        }\r\n\r\n        $this->_module = $module;\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Returns module name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return string|null  module name or null\r\n     *\/\r\n    public function getModule()\r\n    {\r\n        return $this->_module;\r\n    }\r\n\r\n    \/**\r\n     * Sets params to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  array|null $params        [optional] page params. Default is null\r\n     *                                   which sets no params.\r\n     * @return Zend_Navigation_Page_Mvc  fluent interface, returns self\r\n     *\/\r\n    public function setParams(array $params = null)\r\n    {\r\n        if (null === $params) {\r\n            $this->_params = array();\r\n        } else {\r\n            \/\/ TODO: do this more intelligently?\r\n            $this->_params = $params;\r\n        }\r\n\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Returns params to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return array  page params\r\n     *\/\r\n    public function getParams()\r\n    {\r\n        return $this->_params;\r\n    }\r\n\r\n    \/**\r\n     * Sets route name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  string $route              route name to use when assembling URL\r\n     * @return Zend_Navigation_Page_Mvc   fluent interface, returns self\r\n     * @throws Zend_Navigation_Exception  if invalid $route is given\r\n     *\/\r\n    public function setRoute($route)\r\n    {\r\n        if (null !== $route && (!is_string($route) || strlen($route) < 1)) {\r\n            require_once 'Zend\/Navigation\/Exception.php';\r\n            throw new Zend_Navigation_Exception(\r\n                 'Invalid argument: $route must be a non-empty string or null');\r\n        }\r\n\r\n        $this->_route = $route;\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Returns route name to use when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return string  route name\r\n     *\/\r\n    public function getRoute()\r\n    {\r\n        return $this->_route;\r\n    }\r\n\r\n    \/**\r\n     * Sets whether params should be reset when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  bool $resetParams         whether params should be reset when\r\n     *                                   assembling URL\r\n     * @return Zend_Navigation_Page_Mvc  fluent interface, returns self\r\n     *\/\r\n    public function setResetParams($resetParams)\r\n    {\r\n        $this->_resetParams = (bool) $resetParams;\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n\r\n    \/**\r\n     * Returns whether params should be reset when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return bool  whether params should be reset when assembling URL\r\n     *\/\r\n    public function getResetParams()\r\n    {\r\n        return $this->_resetParams;\r\n    }\r\n    \r\n    \/**\r\n     * Sets whether href should be encoded when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  bool $resetParams         whether href should be encoded when\r\n     *                                   assembling URL\r\n     * @return Zend_Navigation_Page_Mvc  fluent interface, returns self\r\n     *\/\r\n    public function setEncodeUrl($encodeUrl)\r\n    {\r\n        $this->_encodeUrl = (bool) $encodeUrl;\r\n        $this->_hrefCache = null;\r\n        return $this;\r\n    }\r\n    \r\n    \/**\r\n     * Returns whether herf should be encoded when assembling URL\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @return bool whether herf should be encoded when assembling URL\r\n     *\/\r\n    public function getEncodeUrl()\r\n    {\r\n        return $this->_encodeUrl;\r\n    }\r\n\r\n    \/**\r\n     * Sets action helper for assembling URLs\r\n     *\r\n     * @see getHref()\r\n     *\r\n     * @param  Zend_Controller_Action_Helper_Url $uh  URL helper\r\n     * @return void\r\n     *\/\r\n    public static function setUrlHelper(Zend_Controller_Action_Helper_Url $uh)\r\n    {\r\n        self::$_urlHelper = $uh;\r\n    }\r\n\r\n    \/\/ Public methods:\r\n\r\n    \/**\r\n     * Returns an array representation of the page\r\n     *\r\n     * @return array  associative array containing all page properties\r\n     *\/\r\n    public function toArray()\r\n    {\r\n        return array_merge(\r\n            parent::toArray(),\r\n            array(\r\n                'action'       => $this->getAction(),\r\n                'controller'   => $this->getController(),\r\n                'module'       => $this->getModule(),\r\n                'params'       => $this->getParams(),\r\n                'route'        => $this->getRoute(),\r\n                'reset_params' => $this->getResetParams()\r\n            ));\r\n    }\r\n}\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                        "name": "ubeckers",
                        "displayName": "Ulrich Beckers",
                        "active": true
                    },
                    "created": "2010-09-17T02:11:08.000+0000",
                    "updated": "2010-09-17T02:11:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44185",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "body": "Added code tags",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "created": "2011-01-26T00:39:19.000+0000",
                    "updated": "2011-01-26T00:39:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44186",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "body": "Hi Ulrich,\r\ncan you add a patch file for this and some tests? Thanks.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "created": "2011-01-26T00:44:32.000+0000",
                    "updated": "2011-01-26T00:44:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44188",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                        "name": "ubeckers",
                        "displayName": "Ulrich Beckers",
                        "active": true
                    },
                    "body": "Ok, here is the patch file. I don't know how to attach a file here, so I just Post it..\r\n\r\n\r\n--- Mvc_Orig.php\t2010-01-06 03:05:09.000000000 +0100\r\n+++ Mvc.php\t2011-01-26 11:57:51.000000000 +0100\r\n@@ -93,6 +93,14 @@\r\n      * @var bool\r\n      *\/\r\n     protected $_resetParams = true;\r\n+          \r\n+    \/**\r\n+     * Whether href should be encoded when assembling URL\r\n+     *\r\n+     * @see getHref()\r\n+     * @var bool\r\n+     *\/\r\n+    protected $_encodeUrl = true;\r\n \r\n     \/**\r\n      * Cached href\r\n@@ -201,7 +209,9 @@\r\n \r\n         $url = self::$_urlHelper->url($params,\r\n                                       $this->getRoute(),\r\n-                                      $this->getResetParams());\r\n+                                      $this->getResetParams(),\r\n+                                      $this->getEncodeUrl()\r\n+                                      );\r\n \r\n         return $this->_hrefCache = $url;\r\n     }\r\n@@ -403,6 +413,34 @@\r\n     {\r\n         return $this->_resetParams;\r\n     }\r\n+    \r\n+    \/**\r\n+     * Sets whether href should be encoded when assembling URL\r\n+     *\r\n+     * @see getHref()\r\n+     *\r\n+     * @param  bool $resetParams         whether href should be encoded when\r\n+     *                                   assembling URL\r\n+     * @return Zend_Navigation_Page_Mvc  fluent interface, returns self\r\n+     *\/\r\n+    public function setEncodeUrl($encodeUrl)\r\n+    {\r\n+        $this->_encodeUrl = (bool) $encodeUrl;\r\n+        $this->_hrefCache = null;\r\n+        return $this;\r\n+    }\r\n+    \r\n+    \/**\r\n+     * Returns whether herf should be encoded when assembling URL\r\n+     *\r\n+     * @see getHref()\r\n+     *\r\n+     * @return bool whether herf should be encoded when assembling URL\r\n+     *\/\r\n+    public function getEncodeUrl()\r\n+    {\r\n+        return $this->_encodeUrl;\r\n+    }\r\n \r\n     \/**\r\n      * Sets action helper for assembling URLs\r\n@@ -434,7 +472,8 @@\r\n                 'module'       => $this->getModule(),\r\n                 'params'       => $this->getParams(),\r\n                 'route'        => $this->getRoute(),\r\n-                'reset_params' => $this->getResetParams()\r\n+                'reset_params' => $this->getResetParams(),\r\n+                'encodeUrl'    => $this->getEncodeUrl(),\r\n             ));\r\n     }\r\n }\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                        "name": "ubeckers",
                        "displayName": "Ulrich Beckers",
                        "active": true
                    },
                    "created": "2011-01-26T03:03:36.000+0000",
                    "updated": "2011-01-26T03:03:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44189",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "body": "Please add code tags!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "created": "2011-01-26T03:09:05.000+0000",
                    "updated": "2011-01-26T03:09:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44191",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                        "name": "ubeckers",
                        "displayName": "Ulrich Beckers",
                        "active": true
                    },
                    "body": "Sorry!\r\n\r\n{code}\r\n--- Mvc_Orig.php\t2010-01-06 03:05:09.000000000 +0100\r\n+++ Mvc.php\t2011-01-26 11:57:51.000000000 +0100\r\n@@ -93,6 +93,14 @@\r\n      * @var bool\r\n      *\/\r\n     protected $_resetParams = true;\r\n+          \r\n+    \/**\r\n+     * Whether href should be encoded when assembling URL\r\n+     *\r\n+     * @see getHref()\r\n+     * @var bool\r\n+     *\/\r\n+    protected $_encodeUrl = true;\r\n \r\n     \/**\r\n      * Cached href\r\n@@ -201,7 +209,9 @@\r\n \r\n         $url = self::$_urlHelper->url($params,\r\n                                       $this->getRoute(),\r\n-                                      $this->getResetParams());\r\n+                                      $this->getResetParams(),\r\n+                                      $this->getEncodeUrl()\r\n+                                      );\r\n \r\n         return $this->_hrefCache = $url;\r\n     }\r\n@@ -403,6 +413,34 @@\r\n     {\r\n         return $this->_resetParams;\r\n     }\r\n+    \r\n+    \/**\r\n+     * Sets whether href should be encoded when assembling URL\r\n+     *\r\n+     * @see getHref()\r\n+     *\r\n+     * @param  bool $resetParams         whether href should be encoded when\r\n+     *                                   assembling URL\r\n+     * @return Zend_Navigation_Page_Mvc  fluent interface, returns self\r\n+     *\/\r\n+    public function setEncodeUrl($encodeUrl)\r\n+    {\r\n+        $this->_encodeUrl = (bool) $encodeUrl;\r\n+        $this->_hrefCache = null;\r\n+        return $this;\r\n+    }\r\n+    \r\n+    \/**\r\n+     * Returns whether herf should be encoded when assembling URL\r\n+     *\r\n+     * @see getHref()\r\n+     *\r\n+     * @return bool whether herf should be encoded when assembling URL\r\n+     *\/\r\n+    public function getEncodeUrl()\r\n+    {\r\n+        return $this->_encodeUrl;\r\n+    }\r\n \r\n     \/**\r\n      * Sets action helper for assembling URLs\r\n@@ -434,7 +472,8 @@\r\n                 'module'       => $this->getModule(),\r\n                 'params'       => $this->getParams(),\r\n                 'route'        => $this->getRoute(),\r\n-                'reset_params' => $this->getResetParams()\r\n+                'reset_params' => $this->getResetParams(),\r\n+                'encodeUrl'    => $this->getEncodeUrl(),\r\n             ));\r\n     }\r\n }\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ubeckers",
                        "name": "ubeckers",
                        "displayName": "Ulrich Beckers",
                        "active": true
                    },
                    "created": "2011-01-26T04:18:25.000+0000",
                    "updated": "2011-01-26T04:18:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44205",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "body": "Thanks for your help!\r\nI will write some test cases.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "created": "2011-01-28T08:04:35.000+0000",
                    "updated": "2011-01-28T08:04:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47002",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "body": "Unit tests",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kaiuwe",
                        "name": "kaiuwe",
                        "displayName": "Kai Uwe",
                        "active": true
                    },
                    "created": "2011-06-06T11:22:19.000+0000",
                    "updated": "2011-06-06T11:22:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47772",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "Extended unit test attached.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2011-07-29T07:33:57.000+0000",
                    "updated": "2011-07-29T07:33:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48337",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Fixed in r24444 and via ZF2 PR",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2011-09-04T13:02:50.000+0000",
                    "updated": "2011-09-04T13:02:50.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10465\/transitions"
}