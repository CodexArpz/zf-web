{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7444",
    "key": "ZF-7444",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add new method \"combine()\" which aggregates two named conditions -> Infinitly nested\/complex conditions"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/11",
                "name": "Patch",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7444\/votes",
                "votes": 3,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:48.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=beberlei",
                "name": "beberlei",
                "displayName": "Benjamin Eberlei",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-08-02T04:05:38.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:48.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Currently Zend_Db_Select does not allow infinitly complex conditions in the where clause. Its not really possible having a combination of OR and AND Statements.\n\nI propose a solution, which is derived from the \"sfPropelFinder\" plugin: http:\/\/www.symfony-project.org\/plugins\/sfPropelFinderPlugin\/0_3_0?tab=plugin_readme\n\nIts a new method combine(), which aggregates two or more named conditions into one, using either AND or OR as operation. Here are the unittests of the patch, which show 3 use-cases:\n\n{code}\n    public function testSelectTwoAndThenOr()\n    {\n        $select = $this->_db->select();\n        $select->from(\"zfproducts\")\n               ->where(\"name = Foo\")\n               ->where(\"name = Bar\")\n               ->orWhere(\"name = Baz\");\n        $sql = preg_replace('\/\\\\s+\/', ' ', $select->__toString());\n        $this->assertEquals('SELECT \"zfproducts\".* FROM \"zfproducts\" WHERE (((name = Foo) AND (name = Bar)) OR (name = Baz))', $sql);\n    }\n\n    public function testSelectWhereTwoNamedCombineOr()\n    {\n        $select = $this->_db->select();\n        $select->from(\"zfproducts\")\n               ->where(\"name = Foo\", null, null, 'cond1')\n               ->where(\"name = Bar\", null, null, 'cond2')\n               ->combine(array('cond1', 'cond2'), 'or');\n        $sql = preg_replace('\/\\\\s+\/', ' ', $select->__toString());\n        $this->assertEquals('SELECT \"zfproducts\".* FROM \"zfproducts\" WHERE ((name = Foo) OR (name = Bar))', $sql);\n    }\n\n    public function testSelectWhereCombineNamedCombine()\n    {\n        $select = $this->_db->select();\n        $select->from(\"zfproducts\")\n               ->where(\"name = Foo\", null, null, 'cond1')\n               ->where(\"name = Bar\", null, null, 'cond2')\n               ->combine(array('cond1', 'cond2'), 'and', 'cond3')\n               ->where(\"name = Baz\", null, null, 'cond4')\n               ->where('name = Lala', null, null, 'cond5')\n               ->combine(array('cond4', 'cond5'), 'and', 'cond6')\n               ->combine(array('cond3', 'cond6'), 'or');\n        $sql = preg_replace('\/\\\\s+\/', ' ', $select->__toString());\n        $this->assertEquals('SELECT \"zfproducts\".* FROM \"zfproducts\" WHERE (((name = Foo) AND (name = Bar)) OR ((name = Baz) AND (name = Lala)))', $sql);\n    }\n{code}\n\nTest 1 shows, that the proposed change is fully backwards compatible with the \"orWhere\" condition. Maybe that can be deprecated for 2.0 then."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7444\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12121",
                    "filename": "zf7444_code.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=beberlei",
                        "name": "beberlei",
                        "displayName": "Benjamin Eberlei",
                        "active": true
                    },
                    "created": "2009-08-02T04:06:55.000+0000",
                    "size": 3735,
                    "mimeType": "text\/x-diff",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12121\/zf7444_code.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12122",
                    "filename": "zf7444_tests.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=beberlei",
                        "name": "beberlei",
                        "displayName": "Benjamin Eberlei",
                        "active": true
                    },
                    "created": "2009-08-02T04:07:16.000+0000",
                    "size": 3107,
                    "mimeType": "text\/x-diff",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12122\/zf7444_tests.diff"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36745",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jplaza",
                        "name": "jplaza",
                        "displayName": "Juan Antonio Plaza",
                        "active": true
                    },
                    "body": "This would be a great update for 2.0! I've been needing this feature since the start on my new project on ZF.\r\nI don't like using raw queries anymore.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jplaza",
                        "name": "jplaza",
                        "displayName": "Juan Antonio Plaza",
                        "active": true
                    },
                    "created": "2009-12-05T22:11:21.000+0000",
                    "updated": "2009-12-05T22:11:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52462",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:52:48.000+0000",
                    "updated": "2012-11-20T20:52:48.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7444\/transitions"
}