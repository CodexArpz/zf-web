{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9593",
    "key": "ZF-9593",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Form getMessages() invalid handling of !$subform->isArray()"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/5",
                "name": "Sub-task",
                "subtask": true
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9593\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10451",
                    "id": 10451,
                    "description": "Mini Release",
                    "name": "1.10.4",
                    "userReleaseDate": "28\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-28",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-04-16T12:52:18.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-04-02T00:49:07.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-05-19T13:10:39.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "This is basically the same as the the previous Patches,\r\n[ZF-9586], [ZF-9467], [ZF-9584]\r\n\r\ni cleaned the method as well for speed.\r\n\r\nUncleaned Before Patch\r\n{code}        if ((null !== $name) && isset($this->_elements[$name])) {\r\n            return $this->getElement($name)->getMessages();\r\n        }\r\n\r\n        if ((null !== $name) && isset($this->_subForms[$name])) {\r\n            return $this->getSubForm($name)->getMessages(null, true);\r\n        }\r\n\r\n        $arrayKeys = array();\r\n        foreach ($this->getSubForms() as $key => $subForm) {\r\n            $array = $this->_getArrayName($subForm->getElementsBelongTo());\r\n            if (!empty($array)) {\r\n                if ($name == $array) {\r\n                    return $subForm->getMessages(null, true);\r\n                }\r\n                $arrayKeys[$key] = $subForm->getElementsBelongTo();\r\n            }\r\n        }\r\n{code}\r\nCleaned After Patch\r\n{code}        if (null !== $name) {\r\n            if (isset($this->_elements[$name])) {\r\n                return $this->getElement($name)->getMessages();\r\n            } else if (isset($this->_subForms[$name])) {\r\n                return $this->getSubForm($name)->getMessages(null, true);\r\n            }\r\n            foreach ($this->getSubForms() as $key => $subForm) {\r\n                if ($subForm->isArray()) {\r\n                    $belongTo = $subForm->getElementsBelongTo();\r\n                    if ($name == $this->_getArrayName($belongTo)) {\r\n                        return $subForm->getMessages(null, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n{code}\r\n\r\nThe relevant changes for !$subForm->isArray() and interferences between\r\nName and elementsBelongTo chain\r\n\r\nBefore Patch\r\n{code}\r\n         foreach ($this->getSubForms() as $key => $subForm) {\r\n            $fMessages = $subForm->getMessages(null, true);\r\n            if (!empty($fMessages)) {\r\n                if (array_key_exists($key, $arrayKeys)) {\r\n                    $fMessages = $this->_attachToArray($fMessages, $arrayKeys[$key]);\r\n                    $messages = array_merge($messages, $fMessages);\r\n                } else {\r\n                    $messages[$key] = $fMessages;\r\n                }\r\n         }\r\n{code}\r\nAnd After Patch\r\n{code}\r\n         foreach ($this->getSubForms() as $key => $subForm) {\r\n            $merge = $subForm->getMessages(null, true);\r\n            if (!empty($merge)) {\r\n                if (!$subForm->isArray()) {\r\n                    $merge = array($key => $merge);\r\n                } else {\r\n                    $messages[$key] = $fMessages;\r\n                    $merge = $this->_attachToArray($merge,\r\n                                                   $subForm->getElementsBelongTo());\r\n                }\r\n                $messages = array_merge_recursive($messages, $merge);\r\n             }\r\n         }\r\n{code}\r\n\r\nAnd finally the patch\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php\t(Revision 21732)\r\n+++ tests\/Zend\/Form\/FormTest.php\t(Arbeitskopie)\r\n@@ -1579,7 +1620,16 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function testGetMessagesWithElementsBelongTo()\r\n+    {\r\n+        $data = $this->_setup9350();\r\n+        $this->form->isValid($data['invalid']);\r\n+        $msgs = $this->form->getMessages();\r\n+        $this->assertTrue(isset($msgs['foo']['foo']['foo']['foo']));\r\n+        $this->assertTrue(isset($msgs['foo']['zoo']['iek']));\r\n+    }\r\n \r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php\t(Revision 21732)\r\n+++ library\/Zend\/Form.php\t(Arbeitskopie)\r\n@@ -2299,22 +2299,19 @@\r\n      *\/\r\n     public function getMessages($name = null, $suppressArrayNotation = false)\r\n     {\r\n-        if ((null !== $name) && isset($this->_elements[$name])) {\r\n-            return $this->getElement($name)->getMessages();\r\n-        }\r\n-\r\n-        if ((null !== $name) && isset($this->_subForms[$name])) {\r\n-            return $this->getSubForm($name)->getMessages(null, true);\r\n-        }\r\n-\r\n-        $arrayKeys = array();\r\n-        foreach ($this->getSubForms() as $key => $subForm) {\r\n-            $array = $this->_getArrayName($subForm->getElementsBelongTo());\r\n-            if (!empty($array)) {\r\n-                if ($name == $array) {\r\n-                    return $subForm->getMessages(null, true);\r\n+        if (null !== $name) {\r\n+            if (isset($this->_elements[$name])) {\r\n+                return $this->getElement($name)->getMessages();\r\n+            } else if (isset($this->_subForms[$name])) {\r\n+                return $this->getSubForm($name)->getMessages(null, true);\r\n+            }\r\n+            foreach ($this->getSubForms() as $key => $subForm) {\r\n+                if ($subForm->isArray()) {\r\n+                    $belongTo = $subForm->getElementsBelongTo();\r\n+                    if ($name == $this->_getArrayName($belongTo)) {\r\n+                        return $subForm->getMessages(null, true);\r\n+                    }\r\n                 }\r\n-                $arrayKeys[$key] = $subForm->getElementsBelongTo();\r\n             }\r\n         }\r\n \r\n@@ -2333,14 +2330,15 @@\r\n         }\r\n \r\n         foreach ($this->getSubForms() as $key => $subForm) {\r\n-            $fMessages = $subForm->getMessages(null, true);\r\n-            if (!empty($fMessages)) {\r\n-                if (array_key_exists($key, $arrayKeys)) {\r\n-                    $fMessages = $this->_attachToArray($fMessages, $arrayKeys[$key]);\r\n-                    $messages = array_merge($messages, $fMessages);\r\n+            $merge = $subForm->getMessages(null, true);\r\n+            if (!empty($merge)) {\r\n+                if (!$subForm->isArray()) {\r\n+                    $merge = array($key => $merge);\r\n                 } else {\r\n-                    $messages[$key] = $fMessages;\r\n+                    $merge = $this->_attachToArray($merge,\r\n+                                                   $subForm->getElementsBelongTo());\r\n                 }\r\n+                $messages = array_merge_recursive($messages, $merge);\r\n             }\r\n         }\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9593\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "parent": {
            "name": "parent",
            "type": "issuelinks",
            "value": {
                "issueKey": "ZF-9350",
                "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9350",
                "type": {
                    "name": "Parent",
                    "direction": "INBOUND"
                }
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-5222",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5222",
                    "type": {
                        "name": "Related",
                        "direction": "OUTBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-9862",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9862",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40081",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Patch applied to trunk and 1.10 release branch",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-04-16T12:52:18.000+0000",
                    "updated": "2010-04-16T12:52:18.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9593\/transitions"
}