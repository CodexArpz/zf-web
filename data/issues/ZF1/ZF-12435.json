{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12435",
    "key": "ZF-12435",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Passing an exception as the message to Zend_Log_Writer_Db raises an exception"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12435\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/8",
                "name": "Issue Moved"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2013-04-05T16:07:14.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=aballard",
                "name": "aballard",
                "displayName": "Andrew Ballard",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-10-04T16:35:39.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2013-04-05T16:07:14.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "Zend_Db_Adapter_Sqlsrv",
                "Zend_Log_Writer_Db"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The other log writers allow you to pass an instance of an exception as the message for logging. In particular, Zend_Log_Writer_Firebug even has a formatter that renders in a way that is easy to read when debugging XmlHttpRequests. However, I get an exception in Zend_Log_Writer_Db because the message is an object:\r\n\r\n{panel:title=Exception}\r\nexception 'Zend_Db_Statement_Sqlsrv_Exception' with message 'An invalid PHP type for parameter 4 was specified.' in ..\\library\\Zend\\Db\\Statement\\Sqlsrv.php:206 \r\nStack trace: \r\n#0 ..\\library\\Zend\\Db\\Statement.php(320): Zend_Db_Statement_Sqlsrv->_execute(Array) \r\n#1 ..\\library\\Zend\\Db\\Adapter\\Abstract.php(479): Zend_Db_Statement->execute(Array) \r\n#2 ..\\library\\Zend\\Db\\Adapter\\Sqlsrv.php(380): Zend_Db_Adapter_Abstract->query('INSERT INTO \"Ap...', Array) \r\n#3 ..\\library\\Zend\\Log\\Writer\\Db.php(143): Zend_Db_Adapter_Sqlsrv->insert('ApplicationLog', Array) \r\n#4 ..\\library\\Zend\\Log\\Writer\\Abstract.php(85): Zend_Log_Writer_Db->_write(Array) \r\n#5 ..\\library\\Zend\\Log.php(428): Zend_Log_Writer_Abstract->write(Array) \r\n#6 [internal function]: Zend_Log->log(Object(Exception), 3) \r\n#7 ..\\library\\My\\Controller\\Plugin\\Log.php(212): call_user_func_array(Array, Array) \r\n#8 [internal function]: My_Controller_Plugin_Log->__call('log', Array) \r\n#9 [internal function]: My_Controller_Plugin_Log->log(Object(Exception), 3) \r\n#10 ..\\library\\My\\Controller\\Action\\Helper\\Log.php(27): call_user_func_array(Array, Array) \r\n#11 ..\\application\\controllers\\ErrorController.php(52): My_Controller_Action_Helper_Log->__call('log', Array) \r\n#12 ..\\application\\controllers\\ErrorController.php(52): My_Controller_Action_Helper_Log->log(Object(Exception), 3) \r\n#13 ..\\library\\Zend\\Controller\\Action.php(516): ErrorController->errorAction() \r\n#14 ..\\library\\Zend\\Controller\\Dispatcher\\Standard.php(295): Zend_Controller_Action->dispatch('errorAction') \r\n#15 ..\\library\\Zend\\Controller\\Front.php(954): Zend_Controller_Dispatcher_Standard->dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http)) \r\n#16 ..\\library\\Zend\\Application\\Bootstrap\\Bootstrap.php(97): Zend_Controller_Front->dispatch() \r\n#17 ..\\library\\Zend\\Application.php(366): Zend_Application_Bootstrap_Bootstrap->run() \r\n#18 ..\\public\\index.php(126): Zend_Application->run() \r\n#19 \\{main\\}\r\n{panel}\r\n\r\nI can pass the exception in as a string, but then it is more difficult to read in Firebug. I'm also not sure if this problem is specific to the database adapter I am using (Zend_Db_Adapter_Sqlsrv) since I don't have another database\/adapter I can test right now.\r\n\r\nI think a change in Zend_Log_Writer_Db::_write() should fix it but I don't know if it might raise other issues:\r\n\r\n{code}\r\n    \/**\r\n     * Write a message to the log.\r\n     *\r\n     * @param  array  $event  event data\r\n     * @return void\r\n     * @throws Zend_Log_Exception\r\n     *\/\r\n    protected function _write($event)\r\n    {\r\n        if ($this->_db === null) {\r\n            \/\/ require_once 'Zend\/Log\/Exception.php';\r\n            throw new Zend_Log_Exception('Database adapter is null');\r\n        }\r\n\r\n        if ($this->_columnMap === null) {\r\n            $dataToInsert = $event;\r\n        } else {\r\n            $dataToInsert = array();\r\n            foreach ($this->_columnMap as $columnName => $fieldKey) {\r\n-                $dataToInsert[$columnName] = $event[$fieldKey];\r\n\r\n+            \tif ('info' == $fieldKey && (is_object($event[$fieldKey]) || is_array($event[$fieldKey]))) {\r\n+            \t\t$dataToInsert[$columnName] = Zend_Debug::dump($event[$fieldKey], gettype($event[$fieldKey]), true);\r\n+            \t} else {\r\n+                \t$dataToInsert[$columnName] = $event[$fieldKey];\r\n+            \t}\r\n            }\r\n        }\r\n\r\n        $this->_db->insert($this->_table, $dataToInsert);\r\n    }\r\n{code}\r\n\r\nI tried to resolve this by extending Zend_Log_Writer_Db to override the _write method, but all of the properties are marked private instead of protected for some reason. As a result, getting it to work would have required duplicating the entire class. (If they truly need to be private, perhaps the class should be final?)"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12435\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                "name": "frosch",
                "displayName": "Frank Br\u00fcckner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10981",
                    "id": 10981,
                    "description": "Mini Release",
                    "name": "1.11.11",
                    "userReleaseDate": "29\/Sep\/11",
                    "archived": false,
                    "releaseDate": "2011-09-29",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/11182",
                    "id": 11182,
                    "description": "Mini Release",
                    "name": "1.12.1",
                    "userReleaseDate": "18\/Dec\/12",
                    "archived": false,
                    "releaseDate": "2012-12-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10017",
                    "id": 10017,
                    "name": "Zend_Log",
                    "description": "classic logging utility functions",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51951",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=aballard",
                        "name": "aballard",
                        "displayName": "Andrew Ballard",
                        "active": true
                    },
                    "body": "Fixed code block.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=aballard",
                        "name": "aballard",
                        "displayName": "Andrew Ballard",
                        "active": true
                    },
                    "created": "2012-10-04T16:54:23.000+0000",
                    "updated": "2012-10-04T16:54:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/53140",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "Hi Andrew,\r\nI will look into your problem with exceptions. I must write a unit test.\r\n\r\n{quote} tried to resolve this by extending Zend_Log_Writer_Db to override the _write method, but all of the properties are marked private instead of protected for some reason.{quote}\r\nThis problem was fixed with ZF-12514. ([Look at the diff|http:\/\/framework.zend.com\/code\/diff.php?repname=Zend+Framework&path=%2Fbranches%2Frelease-1.12%2Flibrary%2FZend%2FLog%2FWriter%2FDb.php&rev=25247&peg=25247])\r\n\r\nThanks for your help! :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2013-02-15T07:01:44.000+0000",
                    "updated": "2013-02-15T07:01:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/53141",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=aballard",
                        "name": "aballard",
                        "displayName": "Andrew Ballard",
                        "active": true
                    },
                    "body": "{quote}\r\nbq. tried to resolve this by extending Zend_Log_Writer_Db to override the _write method, but all of the properties are marked private instead of protected for some reason.\r\n\r\nThis problem was fixed with ZF-12514.{quote}\r\n\r\nThank you!\r\n\r\nI was ultimately able to extend {{Zend_Log_Writer_Db}} in a way that works with the current version. I'm still not sure if this is the best way of handling things, but this is the class I came up with:\r\n\r\n{code:title=My_Log_Writer_Db}\r\n\/**\r\n * @category   My\r\n * @package    My_Log\r\n * @subpackage Writer\r\n *\/\r\nclass My_Log_Writer_Db extends Zend_Log_Writer_Db\r\n{\r\n\r\n    \/**\r\n     * Relates database columns names to log data field keys.\r\n     * \r\n     * THIS HAD TO BE COPIED TO THE SUBCLASS BECAUSE IT WAS DECLARED PRIVATE IN\r\n     * THE PARENT CLASS AND I NEED IT IN THE OVERRIDDEN _write METHOD BELOW. \r\n     * \r\n     * @var null|array\r\n     *\/\r\n    private $_columnMap;\r\n    \r\n    \/**\r\n     * Class constructor\r\n     * \r\n     * THIS HAD TO BE INCLUDED BECAUSE $db, $table AND $columnMap ALL  MAP TO \r\n     * PRIVATE PROPERTIES IN THE PARENT CLASS AND COULD NOT BE SET HERE.\r\n     *\r\n     * @param Zend_Db_Adapter $db   Database adapter instance\r\n     * @param string $table         Log table in database\r\n     * @param array $columnMap\r\n     * @return void\r\n     *\/\r\n    public function __construct($db, $table, $columnMap = null)\r\n    {\r\n        \r\n        \/\/ I NEED $columnMap IN THE OVERRIDDEN VERSION OF _write BELOW.\r\n        $this->_columnMap = $columnMap;\r\n        \r\n        \/\/ PASS ALL THE PARAMETERS TO THE PARENT CLASS SO THEY CAN BE SET \r\n        \/\/ CORRECTLY WHERE _write IN THE PARENT CLASS CAN ACCESS THEM.\r\n        parent::__construct($db, $table, $columnMap);\r\n    }\r\n    \r\n\r\n    \/**\r\n     * Write a message to the log.\r\n     * OVERWRITTEN: Safely converts any values in the $event to strings \r\n     *\r\n     * @param  array  $event  event data\r\n     * @return void\r\n     * @throws Zend_Log_Exception\r\n     *\/\r\n    protected function _write($event)\r\n    {\r\n\r\n        foreach ($this->_columnMap as $columnName => $fieldKey) {\r\n            \r\n            $var = $event[$fieldKey];\r\n                \r\n            switch (true) {\r\n                \r\n                case ('message' == $fieldKey && ($var instanceof Exception)):\r\n                    \/\/ Special handling if an exception was passed to the\r\n                    \/\/ message.\r\n                    \r\n                    \/\/ Store only the exception message in 'message'.\r\n                    \r\n                    \/\/ If no 'info' key exists in the event, move the exception\r\n                    \/\/ object (cast as a string) to that key.\r\n                    \r\n                    if (!array_key_exists('info', $event)) {\r\n                        $event['info'] = (string) $var; \r\n                    }\r\n                    $var = $var->getMessage();\r\n                    break; \r\n                \r\n                case (is_object($var) && method_exists($var, '__toString()')):\r\n                    \/\/ The object can be typecast to a string.\r\n                    \/\/ Fall through.\r\n                case is_bool($var):\r\n                case is_numeric($var):\r\n                    $var = (string) $var;\r\n                    break;\r\n                    \r\n                    \r\n                case ($var instanceof DateTime):\r\n                    \/\/ DateTime instances cannot be cast to a string.\r\n                    \/\/ Format the date as an ISO 8601 string.\r\n                    $var = $var->format('c');\r\n                    break;\r\n\r\n                case is_resource($var):\r\n                case is_array($var):\r\n                case is_object($var):\r\n                    \/\/ The variable cannot be typecast to a string.\r\n                    $var = Zend_Debug::dump($var, null, true);\r\n                    break;\r\n\r\n                case is_string($var):\r\n                    \/\/ No action needed; included for completeness.\r\n                    break;\r\n                    \r\n                default:\r\n                    \/\/ Not sure what other types might need to be handled.\r\n\r\n            }\r\n                    \r\n            $event[$fieldKey] = $var;\r\n        }\r\n\r\n        parent::_write($event);\r\n    }\r\n}\r\n{code}\r\n\r\nHopefully this is useful to someone else.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=aballard",
                        "name": "aballard",
                        "displayName": "Andrew Ballard",
                        "active": true
                    },
                    "created": "2013-02-15T17:40:24.000+0000",
                    "updated": "2013-02-15T17:40:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/53516",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "This issue has been closed on Jira and moved to GitHub for issue tracking.  To continue following the resolution of this issues, please visit: https:\/\/github.com\/zendframework\/zf1\/issues\/23",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2013-04-05T16:07:14.000+0000",
                    "updated": "2013-04-05T16:07:14.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12435\/transitions"
}