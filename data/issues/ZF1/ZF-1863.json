{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1863",
    "key": "ZF-1863",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Feed API is counter-intuitive and does not support many feed types by default"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1863\/votes",
                "votes": 5,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-09-19T10:18:41.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mwolff",
                "name": "mwolff",
                "displayName": "Markus Wolff",
                "active": false
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-08-20T10:08:38.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-09-19T10:18:41.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "h1. The Problem\n\nI've been trying to write a generalized feed reader using Zend_Feed and I just stumbled upon a usability issue.\n\nIMHO, it should be a design goal for Zend_Feed to be able to easily consume any common feed out there. However, I have seen quite a few feeds out there that currently can't be handled in a generalized way - that is, without writing tons of if\/else statements to filter out special cases.\n\nh2. Example 1\n\nHere's an example feed that doesn't work too well with Zend_Feed:\nhttp:\/\/toyflish.de\/service\/feed.php\n\nWhen you iterate through the feed items and try to access $item->title() or $item->description(), what you'll get instead of the expected string is an array with two DOMElement objects. The reason being, that there are two of these tags in each item: One with the namespace prefix \"media\" and one without.\n\nThe problem is: If you don't target a specific feed, you don't know in which of these items the relevant information is. You would have to check each item and see whether or not it's empty. If both have content, you would have to check which one is the media node and which is the standard one.\n\nh2. Example 2\n\nThe above feed is not the only one causing problems. Try http:\/\/feeds.feedburner.com\/Techcrunch, for example, and try to get the\nfeed link:\n{noformat} \n$techCrunchFeed = 'http:\/\/feeds.feedburner.com\/Techcrunch';\n$feed = new Zend_Feed_Rss($techCrunchFeed);\nprint_r($feed->link());\n{noformat} \n\nAgain, what you will get is an array containing two DOMElement objects.\n\nh2. Example 3\n\nAnother one that causes problems: http:\/\/www.planet-php.net\/atom\n\nProblem here is that when you try to get the link for an entry, an empty string is returned:\n{noformat} \n$feed = new Zend_Feed_Atom('http:\/\/www.planet-php.net\/atom');\nforeach($feed as $item) {\n    echo $item->link().\"\\n\";\n}\n{noformat} \n\nThe items do have links, though, but the link tag itself does not contain any text:\n\n{noformat} \n<link rel=\"alternate\" type=\"text\/html\" href=\"http:\/\/blog.ulf-wendel.de\/?p=155\" title=\"PHP: mysqlnd can&#x2019;t do wonders\"\/>\n{noformat} \n\nInstead, the link is within the href attribute - the feed reader doesn't seem to check for that, which is yet another thing that I would expect a feed reader class to do.\n\nh1. Solution Proposal\n\nPersonally, I would expect Zend_Feed to handle these cases: If there's more than one node, always return the first non-empty standard node (read: not namespaced), if that's empty, return the first non-empty namespaced node (like \"media:description\"). If the node is an empty link node, the href attribute should be checked.\n\nIf you're targeting a specific feed, you could work around the auto-detection by giving the desired namespace as a parameter, and\nprobably another parameter to toggle the empty-node auto-skipping:\n\n{noformat} \n\/\/ gets only the description nodes within the media namespace,\n\/\/ while auto-skipping empty nodes and just returning the first\n\/\/ non-empty node's content as a string:\necho $item->description(true, 'media');\n\n\/\/ gets only the description nodes within the media namespace,\n\/\/ but returns the array of DOMElement nodes if there is more than\n\/\/ one node:\nforeach($item->description(false, 'media') as $node) {\n    print_r($node);\n}\n\n\/\/ gets the first non-namespaced, non-empty description node and\n\/\/ returns its content as a string. If all non-namespaced description\n\/\/ nodes are empty, it will look for the first non-empty description\n\/\/ node in any other namespace and return the first non-empty node's\n\/\/ content as a string:\necho $item->description(true);\n\n\/\/ and this would resemble the behaviour as it is now: just return\n\/\/ an array with all description nodes as DOMElement objects...\nprint_r($item->description(false);\n{noformat} \n\nWhen following the above API proposal, I would opt for making the first parameter 'true' by default, so you'll have an easy, intuitive API that should work in at least 90% of all cases.\n\nh2. Current workaround\n\nUsing this function for outputting Zend_Feed results, I can work around the most common issues:\n{noformat}\nfunction getFirstFeedNode($nodeResult, $default='') {\n\t    if (is_array($nodeResult) && $nodeResult[0] instanceof DOMElement) {\n        \/\/ first run: check for non-empty default namespaced node\n        foreach($nodeResult as $node) {\n            if (!$node->prefix && !empty($node->nodeValue)) {\n                return (string)$node->nodeValue;\n            }\n        }\n        \/\/ second run: search for any non-empfy node in all namespaces\n        foreach($nodeResult as $node) {\n            if (!empty($node->nodeValue)) {\n                return (string)$node->nodeValue;\n            }\n        }\n    } elseif($nodeResult instanceof DOMElement && !empty($nodeResult->nodeValue)) {\n        return (string) $nodeResult->nodeValue;\n    } elseif (is_string($nodeResult) && !empty($nodeResult)) {\n        return $nodeResult;\n    }\n    return $default; \/\/ if all else fails\n}\n{noformat}\n\nUsage:\n\n{noformat}\n$feed = new Zend_Feed_Rss($feedURL);\nforeach($feed as $item) {\n    echo getFirstFeedNode($item->title());\n    echo \"<br>\\n\";\n    echo getFirstFeedNode($item->description());\n}\n{noformat}\n\nThis successfully works around the problems in example 1 and 2, but is, of  course, far from elegant. The problem described in example 3, however, cannot be worked around without extending or altering Zend_Feed itself.\n\nh1. Other resources\n\nFor user discussion, look at the thread \"Beginner demo - feed reader\" in the ZF-General mailinglist.\n\nFor an example of how simple the API *should* be usable, you may want to look at:\nhttp:\/\/pear.php.net\/manual\/en\/package.xml.xml-feed-parser.intro.php\n\nh1. Further suggestions\n\nAs seen in the feed reader class from PEAR, it may also be a good idea to be able to turn off strict XML validation and\/or offer the option to repair the feed using tidy before parsing. I have also come across feeds that are perfectly usable with most feed readers, but contain some oddities that libxml2 considers invalid XML. Currently, feeds like these are not consumable by Zend_Feed. Example feed:\nhttp:\/\/validator.w3.org\/feed\/check.cgi?url=http%3A%2F%2Fhi.baidu.com%2Fxfxnet2007%2Frss\n\nEven perfectly valid feeds seem to cause problems sometimes - a feed that does not throw an exception, but also seemingly doesn't contain any items when parsed with Zend_Feed is:\nhttp:\/\/www.bundestag.de\/aktuell\/RSS\/Bundestag_Presse.rss"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1863\/watchers",
                "isWatching": false,
                "watchCount": 5
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                "name": "padraic",
                "displayName": "P\u00e1draic Brady",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10031",
                    "id": 10031,
                    "description": "Major Release",
                    "name": "1.0.0",
                    "userReleaseDate": "30\/Jun\/07",
                    "archived": true,
                    "releaseDate": "2007-06-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10000",
                    "id": 10000,
                    "name": "Zend_Feed",
                    "description": "Zend_Feed including Atom, RSS, and other concrete implementations",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16456",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Assigned to Alex",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-08-27T14:42:17.000+0000",
                    "updated": "2007-08-27T14:42:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25140",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sidhighwind",
                        "name": "sidhighwind",
                        "displayName": "Jon Whitcraft",
                        "active": true
                    },
                    "body": "What is the status of this?  I find Zend_Feed to be very lacking in support for creating custom feeds due to this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sidhighwind",
                        "name": "sidhighwind",
                        "displayName": "Jon Whitcraft",
                        "active": true
                    },
                    "created": "2008-10-14T13:32:10.000+0000",
                    "updated": "2008-10-14T13:32:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34711",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Additional parsing support for Zend_Feed will not be added. The component is a wrapper around PHP5's DOM and does not assume to understand any particular format. This is indirectly resolved by the introduction of Zend_Feed_Reader which does understand the standards and nuances of all RSS and Atom feed types.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2009-09-19T10:18:40.000+0000",
                    "updated": "2009-09-19T10:18:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1863\/transitions"
}