{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7299",
    "key": "ZF-7299",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Paginator wrong query when getting number of results"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 0,
                "timeestimate": 0
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7299\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-07-30T00:09:13.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                "name": "hedonism",
                "displayName": "Hristo Angelov",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-07-17T04:46:35.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-07-30T00:09:13.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "Zend_Paginator",
                "having",
                "number_of_results",
                "where"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Hi there,\n\nI have problem after Zend_Paginator tries to get the number of results.\n\nHere is the example:\n\n{code:title=OK|borderStyle=solid}\n$users = new Users();\n$rows = $users->fetchAll($select);\n{code}\n\n{code:SQL|title=Performed query|borderStyle=solid}\nSELECT\n`users`.`id`,\n`users`.`first_name`,\n`users`.`last_name`,\n`users`.`position`,\n`users`.`username`,\n`users`.`email`,\n(\n    SELECT time \n    FROM events \n    WHERE\n        events.target_id = users.id\n        AND\n        action = 'eventLogin'\n        AND\n        target_table = 'users'\n    ORDER BY time DESC\n    LIMIT 1\n) AS `last_login_date`, \n(\n    SELECT time \n    FROM events \n    WHERE\n        events.target_id = users.id \n        AND \n        action = 'eventCreate' \n        AND \n        target_table = 'users' \n    ORDER BY time ASC \n    LIMIT 1\n) AS `creation_date`, \n(\n    SELECT COUNT(id) \n    FROM events \n    WHERE \n        events.target_id = users.id \n        AND \n        action = 'eventAccessCodesSent' \n        AND \n        target_table = 'users'\n) AS `access_codes_sent`, \nIF (users.status = '1', 1, 0) AS `active`,\n`roles_translations`.`name` AS `role_name`,\n`languages_translations`.`name` AS `language_name`,\nGROUP_CONCAT(DISTINCT countries_translations.name SEPARATOR ', ') AS `countries`,\n`groups`.`name` AS `groups`,\nGROUP_CONCAT(DISTINCT branches_translations.name SEPARATOR ', ') AS `branches`,\n`media`.`name` AS `media_name`,\n`types_translations`.`title` AS `media_type`,\n`coverage_translations`.`title` AS `media_coverage`,\nGROUP_CONCAT(DISTINCT categories_translations.name SEPARATOR ', ') AS `categories` \n\nFROM `users` \n\nINNER JOIN `roles` \n    ON users.role_id = roles.id AND roles.type != 7 \nLEFT JOIN `roles_translations` \n    ON users.role_id = roles_translations.role_id \n    AND roles_translations.language_id = 1 \nLEFT JOIN `languages_translations` \n    ON users.language_id = languages_translations.id \n    AND languages_translations.language_id = 1 \nLEFT JOIN `users_countries` \n    ON users.id = users_countries.country_id \nLEFT JOIN `countries_translations` \n    ON users_countries.country_id = countries_translations.country_id \n    AND countries_translations.language_id = 1 \nLEFT JOIN `users_groups` \n    ON users.id = users_groups.user_id \nLEFT JOIN `groups` \n    ON users_groups.group_id = groups.id \nLEFT JOIN `users_branches` \n    ON users.id = users_branches.user_id \nLEFT JOIN `branches_translations` \n    ON users_branches.branch_id = branches_translations.branch_id \n    AND branches_translations.language_id = 1 \nLEFT JOIN `users_media` \n    ON users.id = users_media.user_id \nLEFT JOIN `media` \n    ON users_media.media_id = media.id \nLEFT JOIN `types_translations` \n    ON media.type_id = types_translations.type_id \n    AND types_translations.language_id = 1 \nLEFT JOIN `coverage_translations` \n    ON media.coverage_id = coverage_translations.coverage_id \n    AND coverage_translations.language_id = 1 \nLEFT JOIN `users_categories` \n    ON users.id = users_categories.user_id \nLEFT JOIN `categories_translations` \n    ON users_categories.category_id = categories_translations.category_id \n    AND categories_translations.language_id = 1 \n\nWHERE (users.status != 2) \n\nGROUP BY `users`.`id` \n\nHAVING (creation_date >= '2009-07-17')\n{code}\n\n{code:title=ERR|borderStyle=solid}\n$paginator = new Dnez_Paginator(\nnew Zend_Paginator_Adapter_DbTableSelect($select)\n);\n\n$paginator->setLimit(20, 0);\n$paginator->setItemCountPerPage(20);\n$paginator->setPageRange(5);\n{code}\n\n{code:SQL|title=Performed query|borderStyle=solid}\nSELECT\nCOUNT(1) AS `zend_paginator_row_count`\n\nFROM (\n\n    SELECT\n    `users`.`id`,\n    `users`.`first_name`,\n    `users`.`last_name`, \n    `users`.`position`, \n    `users`.`username`, \n    `users`.`email`, \n    (\n        SELECT time \n        FROM events \n        WHERE \n            events.target_id = users.id \n            AND \n            action = 'eventLogin' \n            AND \n            target_table = 'users' \n        ORDER BY time DESC \n        LIMIT 1\n    ) AS `last_login_date`, \n    (\n        SELECT time \n        FROM events \n        WHERE \n            events.target_id = users.id \n            AND \n            action = 'eventCreate' \n            AND target_table = 'users' \n        ORDER BY time ASC \n        LIMIT 1\n    ) AS `creation_date`, \n    (\n        SELECT COUNT(id) \n        FROM events \n        WHERE \n            events.target_id = users.id \n            AND \n            action = 'eventAccessCodesSent' \n            AND \n            target_table = 'users'\n    ) AS `access_codes_sent`,\n    IF (users.status = '1', 1, 0) AS `active`,\n    `roles_translations`.`name` AS `role_name`,\n    `languages_translations`.`name` AS `language_name`,\n    GROUP_CONCAT(DISTINCT countries_translations.name SEPARATOR ', ') AS `countries`,\n    `groups`.`name` AS `groups`,\n    GROUP_CONCAT(DISTINCT branches_translations.name SEPARATOR ', ') AS `branches`,\n    `media`.`name` AS `media_name`,\n    `types_translations`.`title` AS `media_type`,\n    `coverage_translations`.`title` AS `media_coverage`, \n    GROUP_CONCAT(DISTINCT categories_translations.name SEPARATOR ', ') AS `categories` \n    \n    FROM `users`\n    \n    INNER JOIN `roles` \n        ON users.role_id = roles.id \n        AND roles.type != 7\n    LEFT JOIN `roles_translations` \n        ON users.role_id = roles_translations.role_id \n        AND roles_translations.language_id = 1\n    LEFT JOIN `languages_translations` \n        ON users.language_id = languages_translations.id \n        AND languages_translations.language_id = 1\n    LEFT JOIN `users_countries` \n        ON users.id = users_countries.country_id\n    LEFT JOIN `countries_translations` \n        ON users_countries.country_id = countries_translations.country_id \n        AND countries_translations.language_id = 1\n    LEFT JOIN `users_groups` \n        ON users.id = users_groups.user_id\n    LEFT JOIN `groups` \n        ON users_groups.group_id = groups.id\n    LEFT JOIN `users_branches` \n        ON users.id = users_branches.user_id\n    LEFT JOIN `branches_translations` \n        ON users_branches.branch_id = branches_translations.branch_id \n        AND branches_translations.language_id = 1\n    LEFT JOIN `users_media` \n        ON users.id = users_media.user_id\n    LEFT JOIN `media`\n        ON users_media.media_id = media.id\n    LEFT JOIN `types_translations` \n        ON media.type_id = types_translations.type_id \n        AND types_translations.language_id = 1 \n    LEFT JOIN `coverage_translations` \n        ON media.coverage_id = coverage_translations.coverage_id \n        AND coverage_translations.language_id = 1\n    LEFT JOIN `users_categories` \n        ON users.id = users_categories.user_id\n    LEFT JOIN `categories_translations` \n        ON users_categories.category_id = categories_translations.category_id \n        AND categories_translations.language_id = 1\n                 \n    WHERE (users.status != 2) \n    \n    GROUP BY `users`.`id` \n    \n    HAVING (creation_date >= '2009-07-17')\n\n) AS `t` \n\n-- the problematic where\nWHERE (users.status != 2)\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7299\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                "name": "norm2782",
                "displayName": "Jurrien Stutterheim",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10340",
                    "id": 10340,
                    "description": "Mini Release",
                    "name": "1.8.4",
                    "userReleaseDate": "23\/Jun\/09",
                    "archived": false,
                    "releaseDate": "2009-06-23",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10315",
                    "id": 10315,
                    "name": "Zend_Paginator",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32627",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "body": "Could you confirm that this error still exists with the latest trunk? ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "created": "2009-07-17T04:50:54.000+0000",
                    "updated": "2009-07-17T04:50:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32628",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "body": "I think this code example below fixes the bug:\n\n{code:title=Fix|borderStyle=solid}            \n\/\/ the first row below this comment is nuber 250 of Zend\/Paginator\/Adapter\/DbSelect.php file\n\n$rowCount->reset(Zend_Db_Select::COLUMNS)\n    ->reset(Zend_Db_Select::ORDER)\n    ->reset(Zend_Db_Select::LIMIT_OFFSET)\n    ->reset(Zend_Db_Select::GROUP)\n    ->reset(Zend_Db_Select::DISTINCT)\n    ->reset(Zend_Db_Select::HAVING)\n    ->reset(Zend_Db_Select::WHERE) \/\/the missing reset call fixing this bug\n    ->columns($expression);\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "created": "2009-07-17T04:58:11.000+0000",
                    "updated": "2009-07-17T04:58:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32629",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "body": "Hi again,\n\nYes i think the problem is still there. The where clause is not reset.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "created": "2009-07-17T05:01:21.000+0000",
                    "updated": "2009-07-17T05:01:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32688",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "body": "Can you confirm that? The where clause does not need to be reset there in most cases, so please double check :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "created": "2009-07-18T21:45:14.000+0000",
                    "updated": "2009-07-18T21:45:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32700",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "body": "Yes. The where clause in count query is not needed. You can see from example above. The count query looks like this:\n{code:SQL|borderStyle=solid|title=Count query}\n\nSELECT\n    COUNT(1)\nFROM\n(\n\/* here is the original query *\/\n)\n\nWHERE\n\/* where clause from original query  - causes SQL error *\/\n\n{code}\nIn example above the where clause is not needed but only in count query. In current version we have the same where clauses in count and original queries which causes the SQL error because the count query don't have columns from where clause of original query. So the where clause in count query is wrong and never needed.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "created": "2009-07-19T23:10:07.000+0000",
                    "updated": "2009-07-19T23:10:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32701",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "body": "I made small correction of the code. So the clearing must be applied here:\n\n{code:title=Zend\/Paginator\/Adapter\/DbSelect.php|borderStyle=solid}\n\/** \n* If there is more than one column AND it's a DISTINCT query, more\n* than one group, or if the query has a HAVING clause, then take\n* the original query and use it as a subquery os the COUNT query.\n*\/\nif (($isDistinct && count($columnParts) > 1) || count($groupParts) > 1 || !empty($havingParts)) {\n    $rowCount->reset(Zend_Db_Select::FROM);\n    $rowCount->reset(Zend_Db_Select::WHERE); \/\/clear and where clause\n    $rowCount->from($this->_select);\n} else if ($isDistinct) {\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "created": "2009-07-19T23:18:44.000+0000",
                    "updated": "2009-07-19T23:18:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32702",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "body": "In current trunk the count query works.\nNew code:\n{code}$rowCount = $db->select()->from($rowCount, $expression);{code}\nOld code:\n{code}\n$rowCount->reset(Zend_Db_Select::FROM);\n$rowCount->from($this->_select);\n{code}\n\n ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hedonism",
                        "name": "hedonism",
                        "displayName": "Hristo Angelov",
                        "active": true
                    },
                    "created": "2009-07-19T23:27:37.000+0000",
                    "updated": "2009-07-19T23:27:37.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7299\/transitions"
}