{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11765",
    "key": "ZF-11765",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "A query with group by and sum() does not show any result"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11765\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nfo",
                "name": "nfo",
                "displayName": "Andreas Beder",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-09-23T07:32:54.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-09-27T12:56:32.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "dbadapter",
                "paginator"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I have a more or less complex query, with 4 joins, a sum and group aggregate function .. \r\nAnyway, while using the Zend_Paginator_Adapter, the query doesn't result anything .. \r\ni would say that Zend_Paginator_Adapter_DbSelect::getCountSelect is the souce of all evil :)\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11765\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                "name": "norm2782",
                "displayName": "Jurrien Stutterheim",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10450",
                    "id": 10450,
                    "description": "Mini Release",
                    "name": "1.9.8",
                    "userReleaseDate": "01\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-01",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10980",
                    "id": 10980,
                    "description": "Mini Release",
                    "name": "1.11.10",
                    "userReleaseDate": "04\/Aug\/11",
                    "archived": false,
                    "releaseDate": "2011-08-04",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10315",
                    "id": 10315,
                    "name": "Zend_Paginator",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48489",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "Please give an example to reproduce the problem.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2011-09-23T07:39:11.000+0000",
                    "updated": "2011-09-23T07:39:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48543",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nfo",
                        "name": "nfo",
                        "displayName": "Andreas Beder",
                        "active": true
                    },
                    "body": "Following query result one row (which is correct) , but as soon i use the Zend_Paginator, it doesn\u00b4t\r\n\r\nQuery\r\n{code:sql} \r\nSELECT `pb_complain`.`id`,\r\n  `pb_complain`.`cid`,\r\n  `pb_complain`.`user`,\r\n  `pb_complain`.`complainDate`,\r\n  `pb_complain`.`inboundNr`,\r\n  `pb_complain`.`supplierNr`,\r\n  `pb_complain`.`notification`,\r\n  `pb_complain`.`serial`,\r\n  `pb_complain`.`PIN` AS `complain_PIN`,\r\n  `pb_complain`.`report`,\r\n  `pb_complain`.`amount`,\r\n  sum(pb_complainReturnRelation.STATE) AS `amount_ready`,\r\n  `pb_complain`.`complainRebuke`,\r\n  `pb_complain`.`complainReason`,\r\n  `pb_complain`.`rma`,\r\n  `pb_complain`.`source`,\r\n  `pb_complain`.`desire`,\r\n  `pb_complainRelation`.`complainID` AS `complainID_relation`,\r\n  `pb_complainSupplier`.`note` AS `complainSupplierNote`,\r\n  `pb_complainSupplier`.`supplier`,\r\n  `pb_complainSupplier`.`supplierid`,\r\n  `pb_complainSupplier`.`producer`,\r\n  `pb_complainSupplier`.`date`,\r\n  `pb_complainSupplier`.`note`,\r\n  `pb_complainReturn`.*,\r\n  `pb_complainRelation_2`.`complainID` AS `complainID_relation`,\r\n  `pb_complainReturnRelation`.`id` AS `pb_complainReturnRelation_id`\r\nFROM `pb_complain`\r\n    LEFT JOIN `pb_complainRelation` ON pb_complainRelation.id=pb_complain.id\r\n    LEFT JOIN `pb_complainSupplier` ON pb_complainSupplier.complainID=pb_complainRelation.complainID\r\n    LEFT JOIN `pb_complainReturn` ON pb_complainRelation.complainID=pb_complainReturn.c_id\r\n    LEFT JOIN `pb_complainRelation` AS `pb_complainRelation_2` ON pb_complainRelation.id=pb_complain.id\r\n    LEFT JOIN `pb_complainReturnRelation` ON pb_complainReturnRelation.complainID = pb_complainRelation.complainID\r\nAND pb_complainReturnRelation.id = pb_complain.id\r\nWHERE \r\n    (cid LIKE '%MANZLCD-PE12864WRF-TC%')\r\nGROUP BY `pb_complainRelation`.`id`\r\n\r\n{code} \r\nPHP Code\r\n{code:php} \r\n\/\/no sourcecode formatter for php ?! kidding me ?!\r\n$select = $this->select ( )\r\n    ->setIntegrityCheck ( false )\r\n    ->from ( $this,\r\n\t\t    array('id'=>'id',\r\n\t\t\t\t\t    'cid'=>'cid',\r\n\t\t\t\t\t    'user'=>'user',\r\n\t\t\t\t\t    'complainDate'=>'complainDate',\r\n\t\t\t\t\t    'inboundNr'=>'inboundNr',\r\n\t\t\t\t\t    'supplierNr' => 'supplierNr',\r\n\t\t\t\t\t    'notification'=>'notification',\r\n\t\t\t\t\t    'serial'=>'serial',\r\n\t\t\t\t\t    'complain_PIN' =>'PIN',\r\n\t\t\t\t\t    'report'=>'report',\r\n\t\t\t\t\t    'amount'=>'amount',\r\n\t\t\t\t\t    'amount_ready' => 'sum(pb_complainReturnRelation.state)',\r\n\t\t\t\t\t    'complainRebuke'=>'complainRebuke',\r\n\t\t\t\t\t    'complainReason'=>'complainReason',\r\n\t\t\t\t\t    'rma'=>'rma',\r\n\t\t\t\t\t    'source'=>'source',\r\n\t\t\t\t\t    'desire' => 'desire'\r\n\t\t\t\t    )\r\n\t    )\r\n\r\n\r\n    ->joinLeft(\"pb_complainRelation\",\r\n    \"pb_complainRelation.id=pb_complain.id\",\r\n\t    Array (\r\n\t\t\t    \"complainID_relation\" => \"complainID\"\r\n\t\t    ))\r\n    ->joinLeft(\"pb_complainSupplier\",\r\n    \"pb_complainSupplier.complainID=pb_complainRelation.complainID\",\r\n\t    Array (\r\n\t\t\t    \"complainSupplierNote\" => \"note\",\r\n\t\t\t    \"supplier\" => \"supplier\",\r\n\t\t\t    \"supplierid\" => \"supplierid\",\r\n\t\t\t    \"producer\" => \"producer\",\r\n\t\t\t    \"date\" => \"date\",\r\n\t\t\t    \"note\" => \"note\",\r\n\r\n\t\t    )\t)\r\n    ->joinLeft(\"pb_complainReturn\",\r\n    \"pb_complainRelation.complainID=pb_complainReturn.c_id\"\t)\r\n    ->joinLeft(\"pb_complainRelation\",\r\n    \"pb_complainRelation.id=pb_complain.id\",\r\n\t    Array (\r\n\t\t\t    \"complainID_relation\" => \"complainID\",\r\n\t\t    )\t)\r\n    ->joinLeft(\"pb_complainReturnRelation\",\r\n\t    \"pb_complainReturnRelation.complainID = pb_complainRelation.complainID AND\r\n\t      pb_complainReturnRelation.id = pb_complain.id\",\r\n    array(\"pb_complainReturnRelation_id\" => \"id\"));\r\n\r\n    $sql=\"\";\r\n\r\n    \/\/ this beautifull peace of code creates a sql condintion\r\n    \/\/ where you can enter and\/or key=value and the operators (<>!=like )\r\n    if(is_array($data))\r\n    {\r\n\t    foreach($data['key'] as $key => $value)\r\n\t    {\r\n\t\t\t    $special=($data['operator'][$key]==\"like\" ? \"%\" : \"\");\r\n\t\t\t    @$sql.=\" \".$value.\" \".$data['operator'][$key]. \" '\".$special.$data['value'][$key].$special.\"' \".$data['relation'][$key];\r\n\t    }\r\n\t    $select->where($sql);\r\n    }\r\n\r\n    $select->group(\"pb_complainRelation.id\");\r\n\r\n{code} \r\n\r\nDB Create Table statement\r\n\r\n{code:sql} \r\nCREATE TABLE IF NOT EXISTS `pb_complain` (\r\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\r\n  `cid` varchar(255) NOT NULL,\r\n  `user` int(11) NOT NULL,\r\n  `complainDate` int(11) NOT NULL,\r\n  `inboundNr` varchar(255) NOT NULL,\r\n  `supplierNr` int(11) unsigned NOT NULL,\r\n  `notification` text NOT NULL,\r\n  `serial` varchar(255) NOT NULL,\r\n  `PIN` varchar(8) NOT NULL,\r\n  `report` varchar(255) NOT NULL,\r\n  `amount` int(3) unsigned NOT NULL,\r\n  `complainRebuke` enum('y','n') NOT NULL,\r\n  `complainReason` text NOT NULL,\r\n  `rma` varchar(255) NOT NULL,\r\n  `source` varchar(10) NOT NULL,\r\n  `status` enum('new','used') NOT NULL,\r\n  `desire` varchar(50) NOT NULL,\r\n  `suspected_cost` int(11) NOT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;\r\n\r\n--\r\n-- Dumping data for table `pb_complain`\r\n--\r\n\r\nINSERT INTO `pb_complain` (`id`, `cid`, `user`, `complainDate`, `inboundNr`, `supplierNr`, `notification`, `serial`, `PIN`, `report`, `amount`, `complainRebuke`, `complainReason`, `rma`, `source`, `status`, `desire`, `suspected_cost`) VALUES\r\n(1, 'MANZLCD-PE12864WRF-TC', 114, 1317074400, '23456', 344, 'andreas@example.com, ', '', '', '', 2, 'y', 'Display defekt', '', 'inbound', 'new', '', 45),\r\n(2, 'MANZLCD240X160', 114, 1317074400, '4567', 34567, 'andreas@example.com, ', '', '', '3', 3, 'y', 'display defekt ', '', 'production', 'used', '', 2345);\r\n\r\n-- --------------------------------------------------------\r\n\r\n--\r\n-- Table structure for table `pb_complainRelation`\r\n--\r\n\r\nCREATE TABLE IF NOT EXISTS `pb_complainRelation` (\r\n  `id` int(10) unsigned NOT NULL,\r\n  `complainID` int(10) unsigned NOT NULL,\r\n  UNIQUE KEY `id` (`id`,`complainID`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n\r\n--\r\n-- Dumping data for table `pb_complainRelation`\r\n--\r\n\r\nINSERT INTO `pb_complainRelation` (`id`, `complainID`) VALUES\r\n(2, 1);\r\n\r\n-- --------------------------------------------------------\r\n\r\n--\r\n-- Table structure for table `pb_complainReturn`\r\n--\r\n\r\nCREATE TABLE IF NOT EXISTS `pb_complainReturn` (\r\n  `returnID` int(10) unsigned NOT NULL AUTO_INCREMENT,\r\n  `c_id` int(11) unsigned NOT NULL,\r\n  `inboundID` varchar(255) NOT NULL COMMENT 'return inboundID',\r\n  `errorReportNr` varchar(255) NOT NULL,\r\n  `note` text NOT NULL,\r\n  `charge` int(11) NOT NULL,\r\n  PRIMARY KEY (`returnID`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;\r\n\r\n--\r\n-- Dumping data for table `pb_complainReturn`\r\n--\r\n\r\nINSERT INTO `pb_complainReturn` (`returnID`, `c_id`, `inboundID`, `errorReportNr`, `note`, `charge`) VALUES\r\n(1, 2, '2345', '45', 'wurde reperariert', 234);\r\n\r\n-- --------------------------------------------------------\r\n\r\n--\r\n-- Table structure for table `pb_complainReturnRelation`\r\n--\r\n\r\nCREATE TABLE IF NOT EXISTS `pb_complainReturnRelation` (\r\n  `rID` int(10) unsigned NOT NULL AUTO_INCREMENT,\r\n  `complainID` int(11) unsigned NOT NULL,\r\n  `returnID` int(10) unsigned NOT NULL,\r\n  `id` int(10) unsigned NOT NULL,\r\n  `PIN` varchar(11) NOT NULL,\r\n  `errorReport` tinytext NOT NULL,\r\n  `warranty` tinyint(1) unsigned NOT NULL,\r\n  `booking` tinyint(1) unsigned NOT NULL,\r\n  `state` tinyint(1) unsigned NOT NULL,\r\n  PRIMARY KEY (`rID`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;\r\n\r\n--\r\n-- Dumping data for table `pb_complainReturnRelation`\r\n--\r\n\r\nINSERT INTO `pb_complainReturnRelation` (`rID`, `complainID`, `returnID`, `id`, `PIN`, `errorReport`, `warranty`, `booking`, `state`) VALUES\r\n(1, 1, 1, 2, '', 'test', 0, 1, 1),\r\n(2, 1, 0, 2, '', '', 0, 0, 0),\r\n(3, 1, 0, 2, '', '', 0, 0, 0);\r\n\r\n-- --------------------------------------------------------\r\n\r\n--\r\n-- Table structure for table `pb_complainSupplier`\r\n--\r\n\r\nCREATE TABLE IF NOT EXISTS `pb_complainSupplier` (\r\n  `complainID` int(10) unsigned NOT NULL AUTO_INCREMENT,\r\n  `inboundNr` varchar(20) NOT NULL,\r\n  `supplier` varchar(255) NOT NULL,\r\n  `supplierid` int(11) unsigned NOT NULL,\r\n  `producer` varchar(255) NOT NULL,\r\n  `date` int(10) unsigned NOT NULL,\r\n  `note` text NOT NULL,\r\n  `suspected_cost` varchar(50) NOT NULL,\r\n  PRIMARY KEY (`complainID`)\r\n) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;\r\n\r\n--\r\n-- Dumping data for table `pb_complainSupplier`\r\n--\r\n\r\nINSERT INTO `pb_complainSupplier` (`complainID`, `inboundNr`, `supplier`, `supplierid`, `producer`, `date`, `note`, `suspected_cost`) VALUES\r\n(1, '34', 'Display Solution AG', 3300241, 'Display & more', 1317074400, 'Test', '344');\r\n{code} \r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nfo",
                        "name": "nfo",
                        "displayName": "Andreas Beder",
                        "active": true
                    },
                    "created": "2011-09-27T09:43:33.000+0000",
                    "updated": "2011-09-27T09:43:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48544",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nfo",
                        "name": "nfo",
                        "displayName": "Andreas Beder",
                        "active": true
                    },
                    "body": "some additional info, the automatic generated count query from  Zend_Paginator_Adapter_DbSelect::getCountSelect returns 0\r\n\r\nbut in my case it should not count(distinct) the group by value from the original query....  \r\n\r\n{code:sql} \r\nSELECT COUNT(DISTINCT `pb_complainRelation`.`id`) AS `zend_paginator_row_count` FROM `pb_complain` LEFT JOIN `pb_complainRelation` ON pb_complainRelation.id=pb_complain.id LEFT JOIN `pb_complainSupplier` ON pb_complainSupplier.complainID=pb_complainRelation.complainID LEFT JOIN `pb_complainReturn` ON pb_complainRelation.complainID=pb_complainReturn.c_id LEFT JOIN `pb_complainRelation` AS `pb_complainRelation_2` ON pb_complainRelation.id=pb_complain.id LEFT JOIN `pb_complainReturnRelation` ON pb_complainReturnRelation.complainID = pb_complainRelation.complainID AND pb_complainReturnRelation.id = pb_complain.id WHERE ( cid like '%MANZLCD-PE12864WRF-TC%' )\r\n{code} ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nfo",
                        "name": "nfo",
                        "displayName": "Andreas Beder",
                        "active": true
                    },
                    "created": "2011-09-27T12:56:32.000+0000",
                    "updated": "2011-09-27T12:56:32.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11765\/transitions"
}