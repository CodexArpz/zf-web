{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12401",
    "key": "ZF-12401",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Introduce a way to customize some of the (elements) decorators either at form level or element level"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12401\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-09-04T07:36:41.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                "name": "avantis",
                "displayName": "Cristian Bichis",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-09-03T08:44:57.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-09-04T07:36:41.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Hi,\r\n\r\nCurrently trying to set just a minor config for one of the decorators (as escape=>false or tag=>span) for elements using config is a nightmare. This can be only done without hassle using code:\r\n\r\nWe must overwrite all the decorators if we try to set just a minor config for one of decorators. Basically I think the issue is when config is processed is not taken into consideration the loadDefaultDecorators value but rather all the decorators are overwrite. The desired behavior is to overwrite just the setting mentioned in config.\r\n\r\nMore details about the issue here:\r\n\r\nhttp:\/\/zend-framework-community.634137.n4.nabble.com\/Setting-decorators-options-for-form-elements-in-config-td4656613.html"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12401\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                "name": "frosch",
                "displayName": "Frank Br\u00fcckner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10510",
                    "id": 10510,
                    "description": "Minor Release",
                    "name": "1.12.0",
                    "userReleaseDate": "27\/Aug\/12",
                    "archived": false,
                    "releaseDate": "2012-08-27",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51782",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "Simple workaround: Create an array with the decorators and use names for the keys. Now you can use {{array_merge}}.\r\n\r\n{code:title=In your config file}\r\n$elementDecorators = array(\r\n    'ViewHelper'  => 'ViewHelper',\r\n    'Description' => 'Description',\r\n);\r\n\r\nreturn array(\r\n    \/\/ Elements\r\n    \/\/ \u2026\r\n    'decorators' => array_merge($elementDecorators, array('Description' => array('Description', array('escape' => false)))),\r\n);\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2012-09-03T09:40:43.000+0000",
                    "updated": "2012-09-03T09:40:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51785",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                        "name": "avantis",
                        "displayName": "Cristian Bichis",
                        "active": true
                    },
                    "body": "OK, Frank.\r\n\r\nBut I guess on $elementDecorators I need to put full decorators specs, and not just the list of decorators... Which is almost impossible to do from config if I am true (HtmlTag id part been the issue):\r\n\r\n            $this->addDecorator('ViewHelper')\r\n                 ->addDecorator('Errors')\r\n                 ->addDecorator('Description', array('tag' => 'p', 'class' => 'description'))\r\n                 ->addDecorator('HtmlTag', array(\r\n                     'tag' => 'dd',\r\n                     'id'  => array('callback' => array(get_class($this), 'resolveElementId'))\r\n                 ))\r\n                 ->addDecorator('Label', array('tag' => 'dt'));",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                        "name": "avantis",
                        "displayName": "Cristian Bichis",
                        "active": true
                    },
                    "created": "2012-09-03T10:22:37.000+0000",
                    "updated": "2012-09-03T10:22:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51787",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "{quote}But I guess on $elementDecorators I need to put full decorators specs, and not just the list of decorators... {quote}\r\nSure, the full specs!\r\n\r\nThe value for the \"id\" can you set with a custom \"HtmlTag\" decorator:\r\n\r\n{code:title=Example}\r\nclass My_Form_Decorator_HtmlTag extends Zend_Form_Decorator_HtmlTag\r\n{\r\n    \/\/ \u2026\r\n    \r\n    public function render($content)\r\n    {\r\n        \/\/ \u2026\r\n\r\n        $attribs = $this->getOptions();\r\n        if (!array_key_exists($attribs['id'])) {\r\n            $attribs['id'] = Zend_Form_Element::resolveElementId($this);\r\n        }\r\n\r\n        \/\/ \u2026\r\n    }\r\n}\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2012-09-03T11:17:06.000+0000",
                    "updated": "2012-09-03T11:38:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51788",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                        "name": "avantis",
                        "displayName": "Cristian Bichis",
                        "active": true
                    },
                    "body": "Thanks Frank. I'll do it this way for now.\r\n\r\nBut I still think a way to overwrite a simple config would be better ;) So I am maintaining the proposal for a new improvement.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                        "name": "avantis",
                        "displayName": "Cristian Bichis",
                        "active": true
                    },
                    "created": "2012-09-03T11:20:06.000+0000",
                    "updated": "2012-09-03T11:20:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51789",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "Can you write unit tests and the implementation? The component maintainer [~alab] no longer works for the ZF project.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2012-09-03T11:35:26.000+0000",
                    "updated": "2012-09-03T11:35:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51790",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                        "name": "avantis",
                        "displayName": "Cristian Bichis",
                        "active": true
                    },
                    "body": "I am not sure Frank, I am a long term ZF bug hunter (since 0.2!) and suggested new features but actually contributing (I even signed the CLA) hasn't been successfully.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=avantis",
                        "name": "avantis",
                        "displayName": "Cristian Bichis",
                        "active": true
                    },
                    "created": "2012-09-03T11:45:01.000+0000",
                    "updated": "2012-09-03T11:45:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51792",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "body": "I'm going to quote [~matthew]:\r\n{quote}\u2026at this time, there will be no new features in ZF1.{quote}\r\nSee also: ZF-12402",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frosch",
                        "name": "frosch",
                        "displayName": "Frank Br\u00fcckner",
                        "active": true
                    },
                    "created": "2012-09-04T07:35:49.000+0000",
                    "updated": "2012-09-04T07:35:49.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12401\/transitions"
}