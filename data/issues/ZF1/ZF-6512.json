{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6512",
    "key": "ZF-6512",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Allow alternative value description on the messages and a way to format message variables in Zend_Validate classes"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6512\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10360",
                    "id": 10360,
                    "description": "Minor Release",
                    "name": "1.10.0",
                    "userReleaseDate": "27\/Jan\/10",
                    "archived": false,
                    "releaseDate": "2010-01-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-10-19T11:52:00.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                "name": "leandrorc",
                "displayName": "Leandro Rodrigues Chaves",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-05-03T18:11:01.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-10-19T11:52:02.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Regarding the usability, messages like \"'1001' is not between '0' and '1000', inclusively\" are not enough informative, because, in this case, in many registration forms, users have to search by values, instead field labels. Most often, we want see messages like \"'Number' is not between '0' and '1,000', inclusively\" in Zend_Validate_Between, or \"'Password' do not match 'Confirm Password'\", in Zend_Validate_Identical (this will be possible when ZF-6511 is fixed). So, my request is to add the possibility to define alternative description to value (or values, in case of Zend_Validate_Identical) on the messages, and the possibility to format the message variables, maybe by passing locale, or filters, to Zend_Validate."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6512\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-6772",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6772",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10241",
                    "id": 10241,
                    "description": "Minor Release",
                    "name": "1.8.0",
                    "userReleaseDate": "30\/Apr\/09",
                    "archived": false,
                    "releaseDate": "2009-04-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10140",
                    "id": 10140,
                    "name": "Zend_Validate",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30622",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "This is already possible, using the validator's setMessage() method, which allows you to specify the message key (an error constant in the validator class) and the message to associate with it. These messages allow you to specify a placeholder for the value, and, if any additional values are defined in the class, for those values.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-05-03T20:11:45.000+0000",
                    "updated": "2009-05-03T20:11:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30701",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "body": "So are you suggesting something as follows?\n\n        $min = 0;\n        $max = 10000.10;\n        $numberValidator = new Zend_Validate_Between(0, $min, $max);\n        $numberValidator->setMessage(\"'%field%' is not between '%formatedMin%' and '%formatedMax%'!\", Zend_Validate_Between::NOT_BETWEEN);\n        \n        if (!$numberValidator ->isValid(11000)) {\n            $messages = $numberValidator->getMessages();\n            $messages[Zend_Validate_Between::NOT_BETWEEN] = str_replace(array('%field%', '%formatedMin%', '%formatedMax%'), array($translate->translate('Number'), $min,       Zend_Locale_Format::toNumber($max, array('locale'=>$locale, 'precision'=>2))), $messages[Zend_Validate_Between::NOT_BETWEEN]);\n            die($messages[Zend_Validate_Between::NOT_BETWEEN]);\n        }\n\n\nI think we could just to do something like (in order to create custom messages):\n\n        $min = 0;\n        $max = 10000.10;\n        $numberValidator = new Zend_Validate_Between(0, $min, $max);\n        $numberValidator->setMessage(\"'%field%' is not between '%formatedMin%' and '%formatedMax%'!\", Zend_Validate_Between::NOT_BETWEEN);\n        $formatedMax = Zend_Locale_Format::toNumber($max, array('locale'=>$locale, 'precision'=>2));\n        $numberValidator->setMessageVariables(array('field', 'formatedMin', 'formatedMax'), array('$translate->translate('Number')', 0, $formatedMax);\n        if (!$numberValidator ->isValid(11000)) {\n            die($messages[Zend_Validate_Between::NOT_BETWEEN]);\n        }\n\n\nOr even easier (in order to use default message, but just to define the value description and locale, to format numbers):\n        $min = 0;\n        $max = 10000.10;\n        $numberValidator = new Zend_Validate_Between(0, $min, $max);\n        $numberValidator->setValueDescription($translate->translate('Number')); \/\/ Or maybe just 'Number', if translator is passed to validator\n        $numberValidator->setLocale($locale); \/\/ used to show formated min and max in the messages\n        if (!$numberValidator ->isValid(11000)) {\n            die($messages[Zend_Validate_Between::NOT_BETWEEN]);\n        }\n\nWe could to define this facilities to Zend_Filter_Input too.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "created": "2009-05-05T17:37:47.000+0000",
                    "updated": "2009-05-05T17:37:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31080",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "body": "Please, review this issue!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "created": "2009-05-16T11:34:22.000+0000",
                    "updated": "2009-05-16T11:34:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31240",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "Reopened on request.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-05-21T18:27:47.000+0000",
                    "updated": "2009-05-21T18:27:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31243",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "body": "Explaning better:\nThe question is: we can use setMessage() to do what i want, but i'm just requesting something that will be a lot useful for everyone. So, we can use the actual validators' messages like id in our translation scheme. What i suggest is like the following example shows:\n\n{code}\n$min = 0;\n$max = 10000.10;\n$numberValidator = new Zend_Validate_Between(0, $min, $max);\n$numberValidator->setValueDescription($translate->translate('Number')); \/\/ Or just 'Number', if translator is passed to validator\n$numberValidator->setLocale($locale); \/\/ It will be used to show formated min and max in the messages\nif (!$numberValidator ->isValid(11000)) { \n   echo $messages[Zend_Validate_Between::NOT_BETWEEN]; \/\/ \"Number' is not between '0' and '10,000.10', inclusively\"\n}\n{code} \n\nAs you can see, the message '\"Number' is not between '0' and '10,000.10', inclusively\"' is just a well presented form of \"'11000' is not between '0' and '10000,10', inclusively\"\nIn addition, i can use the standard message \"'%value%' is not between '%min%' and '%max%', inclusively\" as the id in my translation scheme and translate it to \"'%value%' must be between '%min%' and '%max%', inclusively\" if i want, for example. I think it's easy to implement and will be a lot useful! Why use setMessage() all the times when we can simplify? Using setMessage() will be like this:\n\n{code}\n$min = 0;\n$max = 10000.10;\n$numberValidator = new Zend_Validate_Between(0, $min, $max);\n$numberValidator->setMessage(\"'%field%' is not between '%formatedMin%' and '%formatedMax%'!\", Zend_Validate_Between::NOT_BETWEEN);\nif (!$numberValidator ->isValid(11000)) { \n     $messages = $numberValidator->getMessages(); \n     $messages[Zend_Validate_Between::NOT_BETWEEN] = str_replace(array('%field%', '%formatedMin%', '%formatedMax%'),\n            array($translate->translate('Number'), $min, Zend_Locale_Format::toNumber($max, array('locale'=>$locale, 'precision'=>2))),\n           $messages[Zend_Validate_Between::NOT_BETWEEN]); \n      echo $messages[Zend_Validate_Between::NOT_BETWEEN]) \n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "created": "2009-05-21T18:37:36.000+0000",
                    "updated": "2009-05-21T18:37:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35389",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I just reviewed the examples and see no missing features.\r\nAll what is noted can easily be archived with translation.\r\n\r\n{code}\r\n'%value%' is not between '%min%' and '%max%', inclusively \r\n=>\r\n'Number' is not between '%min%' and '%max%', inclusively\r\n\r\n\/\/ or as noted afterwards\r\n=>\r\n'%value%' must be between '%min%' and '%max%', inclusively\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-10-18T14:08:12.000+0000",
                    "updated": "2009-10-18T14:08:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35390",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "body": "I can't understand in your example how i can easily do it with translation.\r\n\r\nI didn't say there are missing features. That's just a improvement request! Look my examples: what i'm suggesting will allow less coding.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "created": "2009-10-18T14:36:07.000+0000",
                    "updated": "2009-10-18T14:36:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35404",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Please look into the basics of translation.\r\nIt is already possible to archive the above examples.\r\n\r\nRegarding changing the class constants:\r\nWe will not integrate such behaviour. It would introduce an additional level and result in a more complicated behaviour for users. Additionally it would make searching for problems more problematic.\r\nThere is no reason why the value the user gives should be filtered as the user knows what he has entered, and it should be displayed to him unchanged. A localization makes no sense in this case.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-10-19T11:51:23.000+0000",
                    "updated": "2009-10-19T11:51:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35405",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Closing as won't fix.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-10-19T11:52:02.000+0000",
                    "updated": "2009-10-19T11:52:02.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6512\/transitions"
}