{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-710",
    "key": "ZF-710",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "_parseDate() - Erratic behavior when the optional $locale is not given"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-710\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10020",
                    "id": 10020,
                    "description": "Preview Release; I18N, Acl, Auth, Session",
                    "name": "0.7.0",
                    "userReleaseDate": "18\/Jan\/07",
                    "archived": true,
                    "releaseDate": "2007-01-18",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-01-03T12:33:44.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-01-03T12:08:37.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:37.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Many methods relying on Zend_Locale_Format::_parseDate(), including Zend_Date*, yield erratic behavior.\nThe problem relates to how months are handled in the data parsed, when no locale is explicitly provided.\nWe could use the default locale, but then many functions would silently produce \"strange\" results, if that was not the intended locale.\n\nIn several methods in Zend_Date, the optional parameter $locale either does not default to $this->_Locale, or the methods invoked pass along the \"false\" value for the $locale parameter, where some do correctly default to $this->_Locale and others do not (e.g. static methods that lack access to $this).\n\nI will commit a patch soon that addresses these issues, and resolves several broken unit tests.\n\nInvoking non-static methods on existing instances of Zend_Date should default to the locale of that instance. Using any other locale would not be intuitive. Separately, we should also consider the default value for $gmt in similar circumstances."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-710\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10040",
                    "id": 10040,
                    "description": "Preview Release; MVC maturation, HTTP client, Gdata",
                    "name": "0.6.0",
                    "userReleaseDate": "16\/Dec\/06",
                    "archived": true,
                    "releaseDate": "2006-12-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10073",
                    "id": 10073,
                    "name": "Zend_Locale",
                    "description": "Zend_Locale is a basic wrapper for all I18N and L10N issues for the Zend Framework. It provides the userbasically with access to translation functionality. It can handle different source file types for translation.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12051",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "See Fisheye link for changeset information.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-01-03T12:33:44.000+0000",
                    "updated": "2007-01-03T12:33:44.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12057",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "The functions which pass along the \"false\" locale parameter call a lowered function where the locale is set properly. \n\nBut most of the functions where the patch was added had no unit tests for now.\nNon of the existing unit tests were broken... and I got non reported from others.\n\nI agree with the handling of default locale... the default useage should be clear.\n\nDepending to Default GMT... \nThis could lead to massive problems...\n\nThink of a user setting GMT to TRUE...\n$date->new Zend_Date('01.01.2000 00:00:00', TRUE, 'de_AT');\n\nNow he will have massive problems when calculating with hours.\n$date->addHour(1); \nwill add no hour because de_AT has GMT +1, and as GMT is TRUE +1 will be calculated back to GMT.\n+1 hour de_AT  is equal to 0 hours GMT.\n\nSame problem with many other functions.\n$date->addTime('01:00:00');\nwill also produce an error behavior... as GMT is set to TRUE.\n\nGMT should not be set to a default other than the one from the function...\nThe constructor GMT is only relevant for knowing if the date\/time is a GMT or a localized time.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-01-03T13:18:47.000+0000",
                    "updated": "2007-01-03T13:18:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12059",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Related to the Patch 710:\n\nThe Zend_Locale_xxx functions will now have false behavior.\n\nThese functions should not be related to a Zend_Locale object. They do not need to have access to an object, they only need the identifier of the locale.\n\nExample:\n\n$array = Zend_Locale::getNumber('1,000.19', 'de_AT');\n\nshould produce the same output as\n\n$locale = new Zend_Locale('de_AT');\n$array = Zend_Locale::getNumber('1,000.19', $locale);\n\nAs the Zend_Locale_xxx functions are static they should also not be related to objects only because they need the identifier.\n\nRelated to the preg_match_all useage:\n\nDates can be given with UTF8 content...  for example german\n10.J\u00e4nner.2000\nor even with arabic month or day names.\nSo the useage of preg_match_all is necessary until we have PHP6.0.\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-01-03T13:35:42.000+0000",
                    "updated": "2007-01-03T13:35:42.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12063",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "The first patch addressed the following unit test failures, reproducible with:\nsvn export -r 2583 http:\/\/framework.zend.com\/svn\/framework\/trunk\/ zftrunk-2583\nAfter the patch, all locale\/date unit tests passed.\n\n{quote}There were 6 failures:\n\n1) testCompareTime(Zend_DateTest)\nFailed asserting that <integer:0> is identical to <integer:-1>.\n\/home\/gavin\/zftrunk-2583\/incubator\/tests\/Zend\/DateTest.php:2938\n\/usr\/local\/php5\/bin\/phpunit:40\n\n2) testGetDate(Zend_DateTest)\nFailed asserting that <string:2002-01-04T01:00:00+01:00> is identical to <string:2002-04-01T01:00:00+02:00>.\n\/home\/gavin\/zftrunk-2583\/incubator\/tests\/Zend\/DateTest.php:2953\n\/usr\/local\/php5\/bin\/phpunit:40\n\n3) testSetDate(Zend_DateTest)\nFailed asserting that <string:2008-04-11T01:31:30+02:00> is identical to <string:2008-07-10T01:31:30+02:00>.\n\/home\/gavin\/zftrunk-2583\/incubator\/tests\/Zend\/DateTest.php:2968\n\/usr\/local\/php5\/bin\/phpunit:40\n\n4) testAddDate(Zend_DateTest)\nFailed asserting that <string:2014-05-17T01:31:30+02:00> is identical to <string:2012-07-17T01:31:30+02:00>.\n\/home\/gavin\/zftrunk-2583\/incubator\/tests\/Zend\/DateTest.php:2990\n\/usr\/local\/php5\/bin\/phpunit:40\n\n5) testSubDate(Zend_DateTest)\nFailed asserting that <string:1007-09-08T00:31:30+01:00> is identical to <string:-7992-01-13T00:31:30+01:00>.\n\/home\/gavin\/zftrunk-2583\/incubator\/tests\/Zend\/DateTest.php:3016\n\/usr\/local\/php5\/bin\/phpunit:40\n\n6) testCompareDate(Zend_DateTest)\nFailed asserting that <integer:1> is identical to <integer:-1>.\n\/home\/gavin\/zftrunk-2583\/incubator\/tests\/Zend\/DateTest.php:3038\n\/usr\/local\/php5\/bin\/phpunit:40\n\n$ php -v\nPHP 5.1.6 (cgi-fcgi) (built: Oct 24 2006 19:38:28)\nCopyright (c) 1997-2006 The PHP Group\nZend Engine v2.1.0, Copyright (c) 1998-2006 Zend Technologies\n$ uname -a\nLinux sandbox.zend.com 2.6.9-34.EL #1 Fri Feb 24 16:44:51 EST 2006 i686 i686 i386 GNU\/Linux\n{quote}\n\nYes, many functions pass along the \"false\" $locale parameter, but for each of the places where I added code to set $locale from $this->_Locale, the $locale parameter was *not* being set correctly resulting in incorrect behavior under certain conditions.\n\nFor example, when developers used $dateInstance->someMethod() without specifying a $locale argument, $locale was not defaulted to $dateInstance->_Locale, resulting in unexpected return values using a different locale than $dateInstance.  In some methods, $locale was defaulted to $this->_Locale for some operations and not for others, resulting in inconsistencies.\n\nRegarding GMT, we should discuss the dangers and risks of defaults and setting GMT to incorrect values  separately, in a different issue to avoid confusing this one.\n\nRelating to _parseDate(), the changes made did not affect getNumber(), but do affect getDate() and getTime().\nThe docblock in _parseDate() did not document the $locale parameter or explain the $format parameter.\nSince _parseDate() incorrectly tried to transform digits in $number, when $locale was not specified, I thought $locale was a required parameter.  However, I now see the intent was for $locale to be an optional parameter.\nI have committed another patch to better accomodate this, including code comments and docblock clarifications. \nThe three affected methiods listed above now work with both string locales (e.g. 'de_AT') and instances of Zend_Locale. All locale\/date unit tests now pass.\n\nWhen $locale was not provided (prior to changeset 2584 shown under the Fisheye link below), the loop over $monthlist performs erroneous substitutions in the first argument ($number), resulting in several unit tests failing.\n\n{code}foreach($monthlist as $key => $name) {\n            if (($position = iconv_strpos($number, $name)) !== false) {\n                if ($key < 10) {\n                    $key = \"0\" . $key;\n                }\n                $number   = str_replace($name, $key, $number);\n                break;\n            }\n        }\n{code}\n\nRegarding preg_match_all(), by the time execution reaches the preg_match_all(), all UTF8 content has been replaced, so I don't believe preg_match_all() is needed. Regardless, even if there were some leftover UTF8 characters, extracting the digits 0-9 from it does not require preg_match_all().",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-01-03T19:08:26.000+0000",
                    "updated": "2007-01-03T19:08:26.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12076",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I agree with the latest changeset SVN 2592.\n\nBut related to preg_match_all..\n\nExpect someone has a localized date.\n10.M\u00e4rz.2000 but he wrote 10.Mr\u00e4z.2000 because of misstyping.\nOr someone having a date string with other content added.\n\nAre you sure the second, third or forth byte of a UTF8 character can never be 30-39 hex ????\n\nI am not... \n0430-0439 is related to the normal cyrilic alphabet, \n0530-0539 is related to the armenian alphabet,\n0630-0630 is related to the arabic alphabet...\nand so on.\n\nAnother way would be to use the iconv_ string functions but I expect them to be as slow as preg_match.\n\nOr we define in the docu that misstyping and\/or the useage of other content than date names can corrupt the getDate\/getTime functions. Then we could strip the useage of preg.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-01-04T01:39:48.000+0000",
                    "updated": "2007-01-04T01:39:48.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12077",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "RFC 3629 shows all bytes of extended UTF-8 characters must begin with \"10\", thus preventing \"second, third, or fourth bytes of a UTF8 character\" from ever being 30-39 hex:\n\nhttp:\/\/tools.ietf.org\/html\/rfc3629 - section 3",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-01-04T01:53:21.000+0000",
                    "updated": "2007-01-04T01:53:21.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12078",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I already knew this...\n\nI just checked the UTF8 hex table and realized that UTF8 chars would never have hex 00-79... so all numers will be parsed correct. That was my mistake\n\nBut this has nothing to do with the leading 10... the second, third and 4th character are always from 80 to ff.\n\nOk... I will look into changing this behavior as expected soon...",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-01-04T02:22:55.000+0000",
                    "updated": "2007-01-04T02:22:55.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12080",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "I should clarify that this is a performance optimization, and therefore low priority.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-01-04T03:02:37.000+0000",
                    "updated": "2007-01-04T03:02:37.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-710\/transitions"
}