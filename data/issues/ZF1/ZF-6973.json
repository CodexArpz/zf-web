{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6973",
    "key": "ZF-6973",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_CodeGenerator_Php_Property can't be an Array"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6973\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-06-28T13:15:53.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cocorambo",
                "name": "cocorambo",
                "displayName": "MARTIN Nicolas",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-06-10T01:17:59.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-06-29T06:46:07.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "Array",
                "Property",
                "Zend_CodeGenerator",
                "Zend_CodeGenerator_Php_Property"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Example:\n{code}\nnew Zend_CodeGenerator_Php_Property\n(\n\tarray\n\t(\n\t\t'name'         => '_myProperty',\n\t\t'visibility'   => 'protected',\n\t\t'defaultValue' => array('value1', 'value2')\n\t)\n)\n{code}\n\n#out in the class\nprotected $_myProperty = 'array('value1', 'value2')';\n\nSo there is \"extra\" quotes"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6973\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10330",
                    "id": 10330,
                    "description": "Mini Release",
                    "name": "1.8.2",
                    "userReleaseDate": "27\/May\/09",
                    "archived": false,
                    "releaseDate": "2009-05-27",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10407",
                    "id": 10407,
                    "name": "Zend_CodeGenerator",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31762",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "body": "It can not be used with an Array?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "created": "2009-06-11T04:14:28.000+0000",
                    "updated": "2009-06-11T04:14:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31765",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cocorambo",
                        "name": "cocorambo",
                        "displayName": "MARTIN Nicolas",
                        "active": true
                    },
                    "body": "Add an example",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cocorambo",
                        "name": "cocorambo",
                        "displayName": "MARTIN Nicolas",
                        "active": true
                    },
                    "created": "2009-06-11T04:42:09.000+0000",
                    "updated": "2009-06-11T04:42:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32227",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "body": "I can confirm this\n\nWhen calling e.g.\n{code}\n$class->setProperties(array(\n        array(\n            'name'         => '_dependentTables',\n            'visibility'   => 'public',\n            'defaultValue' => array('Test'),\n        )));\n{code}\nthe only thing that is generated is\n{code}\n    public $_dependentTables = 'Array';\n{code}\n\nWhen looking at the source code\n{code}\n    public function generate()\n    {\n        $name         = $this->getName();\n        $defaultValue = $this->getDefaultValue();\n        if ($this->isConst()) {\n            $string = '    ' . 'const ' . $name . ' = \\'' . $defaultValue . '\\';';\n        } else {\n            $string = '    ' . $this->getVisibility() . ($this->isStatic() ? ' static' : '') . ' $' . $name . ' = ' . ((null !== $defaultValue) ? '\\'' . $defaultValue . '\\'' : 'null') . ';';\n        }\n        return $string; \n    }\n{code}\n\nit is obvious that it just casts the Array to a string, without doing anything sophisticated. I would expect it to \"parse through\" the array doing something like\n\n{code}\n<?php\n\n$array = array(\"test\", 'test' => \"test\", \"test\", array(\"lalaal\", \"1234\"));\necho parseValue($array) . \"\\n\";\n\nfunction parseValue($val)\n{\n\tif ($val == null)\n\t{\n\t\treturn null;\n\t}\n\telse if (is_array($val))\n\t{\n\t\t$entries = array();\n\t\tforeach ($val as $key => $entry)\n\t\t{\n\t\t\t$entries[] = '\\''.$key.'\\' => ' . parseValue($entry);\n\t\t}\n\t\treturn 'array(' . implode(\", \",$entries) . ')';\n\t}\n\telse\n\t{\n\t\treturn '\\''.$val.'\\'';\n\t}\n}\n?>\n{code}\n\nI think I will implement it in my own ZF as a workaround for now. I don't know if there are any better (built-in?) solutions for this?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "created": "2009-06-27T11:52:53.000+0000",
                    "updated": "2009-06-27T11:52:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32229",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "body": "{code}\n\t\treturn null;\n{code}\nshould of course be\n{code}\n\t\treturn 'null';\n{code}\n\n\nLet me know if you consider implementing something like the above in the official ZF - by then, I have likely implemented \"pretty indenting\" in the function as well..",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "created": "2009-06-27T12:49:57.000+0000",
                    "updated": "2009-06-27T12:49:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32247",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Fixed in r16344",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-06-28T13:15:52.000+0000",
                    "updated": "2009-06-28T13:15:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32261",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "body": "Thanks a lot - from the code it looks like it became a little more complicated when pretty-printing etc. was needed :-)\n\nDo you have a recommended way of having objects as part of the default value?\n\nMy workaround for now is something like:\n\n\t$class->setProperties(array(\n\t\t    array(\n\t\t    \t'name'\t\t\t=> 'filters',\n\t\t    \t'visibility'\t=> 'public',\n\t\t    \t'defaultValue'\t=> array(\n\t\t\t  \t\tnew Zend_CodeGenerator_Php_Property_DefaultValue(array(\n\t\t  \t\t  \t\t'value' => 'new Zend_Filter_BaseName()',\n\t\t  \t\t  \t\t'type'\t=> Zend_CodeGenerator_Php_Property_DefaultValue::TYPE_NULL\n\t\t  \t\t  \t)),\n\t\t  \t\t  \tnew Zend_CodeGenerator_Php_Property_DefaultValue(array(\n\t\t  \t\t  \t\t'value' => 'new Zend_Filter_Int()',\n\t\t  \t\t  \t\t'type'\t=> Zend_CodeGenerator_Php_Property_DefaultValue::TYPE_NULL\n\t\t  \t\t  \t))\n\t\t    ))));\n\nI am \"misusing\" the TYPE_NULL for getting it to render the value without quotes. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "created": "2009-06-29T00:53:58.000+0000",
                    "updated": "2009-06-29T00:53:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32263",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "body": "Dang, what I wanted is actually not supported by PHP. Ignore my comment above for now..",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaagerup",
                        "name": "shaagerup",
                        "displayName": "S\u00f8ren Haagerup",
                        "active": true
                    },
                    "created": "2009-06-29T01:52:34.000+0000",
                    "updated": "2009-06-29T01:52:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32272",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Ha, yeah.  Property default values can only be scalar, constant and null.  You'd want to populate with real objects at construction time.  Rule of thumb is that CodeGenerator produces valid PHP code, so it attempts to play by all the rules of the language.\n\n-ralph",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-06-29T06:46:07.000+0000",
                    "updated": "2009-06-29T06:46:07.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6973\/transitions"
}