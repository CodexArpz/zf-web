{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1057",
    "key": "ZF-1057",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Unique id generation"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1057\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:33.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-03-15T13:40:54.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:33.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "That would be good to have something for unique id generation.\n\n[uniqid()|http:\/\/ru.php.net\/manual\/en\/function.uniqid.php] php function is based on current time and doesn't really guarantee the results are always unique.\n\n\"more_entropy\" parameter adds entropy based on pseudo-random value, but also doesn't guarantee unique value (it's also large enough - 26 chars).\n\nThat would be good to have something in framework to solve this problem. Best solution is to have possibility to generate worldwide unique values.\n\n\nFor some cases problem may be solved at other levels.\nEx. Zend_Memory needs unique ids. Zend_Cache_Backend interface may be extended with unique id generation functionality, where returned id is unique in terms of specified backend (file name, database id or something else).\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1057\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12365",
                    "filename": "Zend_Guid.php",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=d.verkade",
                        "name": "d.verkade",
                        "displayName": "Danny Verkade",
                        "active": true
                    },
                    "created": "2009-11-15T14:35:27.000+0000",
                    "size": 3645,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12365\/Zend_Guid.php"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [

            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/13998",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assign to Bill Karwin.\nCategorize under new Zend_Guid proposed component.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-04-04T17:16:00.000+0000",
                    "updated": "2007-04-04T17:16:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17291",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Changing to 'Unassigned'",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-10-17T15:28:46.000+0000",
                    "updated": "2007-10-17T15:28:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36022",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=d.verkade",
                        "name": "d.verkade",
                        "displayName": "Danny Verkade",
                        "active": true
                    },
                    "body": "Here is my version of a GUID class, maybe it can help:\r\n\r\n<?php\r\n\r\n\/**\r\n * Class representation of the globally unique identifier or GUID, a special type\r\n * of identifier used in software applications in order to provide a reference\r\n * number which is unique in any context.\r\n *\r\n * @author\t\tDanny Verkade\r\n * @copyright\t\u00a9 2009 MBWP Internetbureau\r\n *\/\r\nclass Zend_Guid\r\n{\r\n\t\/**\r\n\t * @var array\r\n\t *\/\r\n\tprotected $bytes;\r\n\r\n\t\/**\r\n\t * @var Zend_Guid\r\n\t *\/\r\n\tprotected static $emptyGuid;\r\n\r\n\t\/**\r\n\t * Constructs a new Guid instance given its underlying value as a byte\r\n\t * array.\r\n\t *\r\n\t * @param array $bytes a 16 element byte array.\r\n\t *\/\r\n\tfunction __construct($bytes)\r\n\t{\r\n\t\tif (!is_array($bytes) || count($bytes) != 16) {\r\n\t\t\tthrow new Zend_Exception(\"The argument must be a 16 element byte array\");\r\n\t\t}\r\n\t\tfor ($i = 0; $i < 16; $i++) {\r\n\t\t\t$b = $bytes[$i];\r\n\t\t\tif ((string)(int)$b !== (string)$b || $b < 0 || $b > 255) {\r\n\t\t\t\tthrow new Zend_Exception(\"Value other than a byte at offset {$i}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t$this->bytes = $bytes;\r\n\t}\r\n\r\n\t\/**\r\n\t * Returns a Guid object that has all its bits set to zero.\r\n\t *\r\n\t * @return Zend_Guid a nil Guid.\r\n\t * @static\r\n\t *\/\r\n\tpublic static function emptyGuid()\r\n\t{\r\n\t\tif (!isset($this->emptyGuid)) {\r\n\t\t\t$this->emptyGuid = new Zend_Guid(array_pad(array(), 16, 0));\r\n\t\t}\r\n\t\treturn $this->emptyGuid;\r\n\t}\r\n\r\n\t\/**\r\n\t * Returns a new, pseudo-randomly generated Guid object.\r\n\t *\r\n\t * @return Zend_Guid a new Guid object.\r\n\t *\/\r\n\tpublic static function generateGuid()\r\n\t{\r\n\t\t$bytes = array();\r\n\t\tfor ($i = 0; $i < 16; $i++) {\r\n\t\t\tif ($i == 6) { \/\/ Version field (version 4)\r\n\t\t\t\t$b = mt_rand(0, 15) | 64;\r\n\t\t\t} else if ($i == 8) { \/\/ Variant field (type 2)\r\n\t\t\t\t$b = mt_rand(0, 63) | 128;\r\n\t\t\t} else {\r\n\t\t\t\t$b = mt_rand(0, 255);\r\n\t\t\t}\r\n\t\t\t$bytes[] = $b;\r\n\t\t}\r\n\t\treturn new Zend_Guid($bytes);\r\n\t}\r\n\r\n\t\/**\r\n\t * Parses a Guid object from the specified 32 character hexadecimal\r\n\t * string. Returns a nil Guid (see Guid::nilGuid) if the string could\r\n\t * not be parsed.\r\n\t *\r\n\t * @param string $str the string representation of a Guid.\r\n\t * @return Zend_Guid a Guid object parsed from its string representation.\r\n\t *\/\r\n\tpublic static function parseGuid($str)\r\n\t{\r\n\t\t$guid = null;\r\n\t\t$str = str_replace(array('{', '(', '-', ')', '}'), '', $str);\r\n\t\tif (strlen($str) == 32) {\r\n\t\t\t$bytes = array();\r\n\t\t\tfor ($i = 1; $i <= 32; $i++) {\r\n\t\t\t\t$ch = $str{$i - 1};\r\n\t\t\t\tif (($ch < '0' || $ch > '9')\r\n\t\t\t\t\t  && ($ch < 'a' || $ch > 'f')\r\n\t\t\t\t\t  && ($ch < 'A' || $ch > 'F')) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t$n = hexdec($ch);\r\n\t\t\t\tif ($i % 2 != 0) {\r\n\t\t\t\t\t$b = $n;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$bytes[] = $b * 16 + $n;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count($bytes) == 16) {\r\n\t\t\t\t$guid = new Zend_Guid($bytes);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (is_null($guid)) {\r\n\t\t\tthrow new Zend_Exception('[Guid::parseGuid()] '\r\n\t\t\t\t. \"Could not parse string '{$str}'\");\r\n\r\n\t\t\t$guid =& Zend_Guid::emptyGuid();\r\n\t\t}\r\n\t\treturn $guid;\r\n\t}\r\n\r\n\t\/**\r\n\t * Returns a string representation of this Guid object.\r\n\t *\r\n\t * @return string a string in the format\r\n\t *  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", where \"x\" is a\r\n\t *  hexadecimal digit.\r\n\t *\/\r\n\tpublic function toString()\r\n\t{\r\n\t\t$str = '';\r\n\t\tfor ($i = 1; $i <= 16; $i++) {\r\n\t\t\t$b = $this->bytes[$i - 1];\r\n\t\t\tif ($b < 16) {\r\n\t\t\t\t$str .= '0';\r\n\t\t\t}\r\n\t\t\t$str .= dechex($b);\r\n\t\t\tif ($i == 4 || $i == 6 || $i == 8 || $i == 10) {\r\n\t\t\t\t$str .= '-';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn $str;\r\n\t}\r\n\r\n\t\/**\r\n\t * Returns a string representation of this Guid object.\r\n\t *\r\n\t * @return string a string in the format\r\n\t *  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", where \"x\" is a\r\n\t *  hexadecimal digit.\r\n\t *\/\r\n\tpublic function __toString()\r\n\t{\r\n\t\treturn $this->toString();\r\n\t}\r\n\r\n\t\/**\r\n\t * Returns a 16 element byte array containing the underlying value of\r\n\t * this Guid object.\r\n\t *\r\n\t * @return array\r\n\t *\/\r\n\tpublic function toByteArray()\r\n\t{\r\n\t\treturn $this->bytes;\r\n\t}\r\n}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=d.verkade",
                        "name": "d.verkade",
                        "displayName": "Danny Verkade",
                        "active": true
                    },
                    "created": "2009-11-15T14:33:05.000+0000",
                    "updated": "2009-11-15T14:33:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52324",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:52:33.000+0000",
                    "updated": "2012-11-20T20:52:33.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1057\/transitions"
}