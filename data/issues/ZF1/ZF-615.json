{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-615",
    "key": "ZF-615",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Routers ignore manually set Request_Http::setControllerName(), setActionName()"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-615\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10040",
                    "id": 10040,
                    "description": "Preview Release; MVC maturation, HTTP client, Gdata",
                    "name": "0.6.0",
                    "userReleaseDate": "16\/Dec\/06",
                    "archived": true,
                    "releaseDate": "2006-12-16",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-12-05T10:22:01.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                "name": "mratzloff",
                "displayName": "Matthew Ratzloff",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-12-03T21:49:21.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:31.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Say I want to dispatch a request to ExampleController::whateverAction() from the bootstrap.\n\nI request this page: http:\/\/localhost\/\n\nHere is the relevant code:\n\n{code}\n$router = new Zend_Controller_RewriteRouter();\n$controller = Zend_Controller_Front::getInstance();\n$controller->setControllerDirectory($controllerDirectory)\n           ->setBaseUrl('\/')\n           ->setRouter($router);\n$request = new Zend_Controller_Request_Http();\n$request->setControllerName('example')\n        ->setActionName('whatever');\n$controller->dispatch($request);\n{code}\n\nI would expect that the code in whateverAction() is called, but both RewriteRouter and Router ignore this.  RewriteRouter sends the request to IndexController::indexAction() instead, while Router fails to send it anywhere.\n\nIt seems to me that if the controller has been set via setControllerName() then they should treat that as gospel and ignore whatever the current URI happens to be, unless the controller doesn't exist of course.  It should then look for an action name set via setActionName() and use the default if one doesn't exist.\n\nNow, this works in both Router and RewriteRouter if I slightly change the code:\n\n{code}\n$request = new Zend_Controller_Request_Http('http:\/\/localhost\/example\/whatever');\n{code}\n\nBecause Zend_Controller_Request_Http uses Zend_Uri to parse the URI, it requires a full URI ('http:\/\/...') instead of just '\/example\/whatever'.  This is a hassle if you don't want to pass in $_SERVER['HTTP_HOST'] every time.\n\nI should also point out that Router and RewriteRouter handle a subsequent $controller->dispatch() call differently.  Router acts as if a blank Request object has been set, while RewriteRouter acts as one might expect, dispatching the same request twice."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-615\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10040",
                    "id": 10040,
                    "description": "Preview Release; MVC maturation, HTTP client, Gdata",
                    "name": "0.6.0",
                    "userReleaseDate": "16\/Dec\/06",
                    "archived": true,
                    "releaseDate": "2006-12-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11775",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Request_Http is a holder for user submitted values (POST, GET, etc). So the setControllerName and setActionName works like normal parameters passed thru the URL - these are setting the values for the controller and action whatever the controller and action keys (names) are  (with defaults being 'controller' and 'action'). You probably don't want you users to be able to override the router by specifically crafted URIs like:\n\nhttp:\/\/localhost\/archive\/2006?controller=bogus&action=other\n\nWith a route of:\n\n{code}\n$route = new Z_C_R_Route('archive\/:year', \n   array('controller' => 'archive', 'action' => 'show'));\n{code}\n\nOr even with a basic router.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-12-04T02:05:55.000+0000",
                    "updated": "2006-12-04T02:05:55.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11776",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Assigning to Matthew, lead on Zend_Controller family.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-12-04T02:28:52.000+0000",
                    "updated": "2006-12-04T02:28:52.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11778",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "body": "A developer programmatically setting the controller and action doesn't mean that visitors should be able to override the controller and action, though.  The order of precedence in Request_Http is programmatically set values -> GET -> POST.  It seems that it would just be a matter of checking if values are already set, and if not, parse the route instead like it normally does.\n\nThis weekend I began working on (and largely finished) a request-based scheduler, and requests are added to tasks by directly instantiating and populating Request objects (HTTP, of course, but it needs to work as CLI as well).  This API may change at some point (I want it to be as flexible as possible), but this change makes it easier to manually create Request objects and gives them a common API for setting controllers and actions if in the future there's a Request_Cli.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "created": "2006-12-04T11:54:14.000+0000",
                    "updated": "2006-12-04T11:54:14.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11779",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I've fixed the basic router, Zend_Controller_Router to do the right thing here -- the problem was that it was setting the controller with an empty value, due to the fact that the explode was returning an empty string.\n\nAs for the RewriteRouter, I've looked at it, and I have to side with Martel on this one. The default route in the RewriteRouter sets defaults for the index and action that should be used if no matches are found. If you want to change that, try this:\n\n{code}\n$request = new Zend_Controller_Request_http();\n$request->setControllerName('example')\n        ->setActionName('whatever');\n\n$router = new Zend_Controller_RewriteRouter();\n$router->removeDefaultRoutes();\n$router->addRoute('default', new Zend_Controller_Router_Route(':controller\/:action'));\n{code}\n\nThe above works exactly as you request.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-12-04T16:01:47.000+0000",
                    "updated": "2006-12-04T16:01:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11780",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "body": "Of course, it didn't occur to me that RewriteRouter was only for HTTP requests, so it might be enough that this is changed in Zend_Controller_Router.  That would allow a Zend_Controller_Request_Cli object to work correctly in multi-controller CLI applications, since controller and action names would have to be manually set.\n\nTo be more clear about what I am trying to do, say you are doing the following in the bootstrap:\n\n1. Do normal bootstrap-related things (importing configuration settings, setting up database connections, etc.)\n2. Dispatch several different 'maintenance' requests (for example, pruning old message board threads in a database)\n3. Dispatch main request (i.e., the visitor's request)\n\nNow, obviously #2 would be bad if not for the fact that it is governed by scheduling rules (e.g., only do this once a month at 3am).\n\nIn the scheduler itself, it could set the original router to a variable, update the controller router to the default, dispatch its requests, then change the controller router back to the one originally set.\n\nThat seems like a good solution.  Thanks, Matthew.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "created": "2006-12-04T16:59:45.000+0000",
                    "updated": "2006-12-04T16:59:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11786",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Actually it would be better to define this route as:\n\n{code}\n$router->addRoute('default', new Zend_Controller_Router_Route(':controller\/:action\/*'), array('action' => 'index'));\n{code}\n\nWithout a default for the action it would be matched only with both controller and action are set in the URL. And URL of \"http:\/\/localhost\/archive\/\" would result in IndexController::indexAction since RewriteRouter skips the route and dispatcher sets defaults to index\/index.\n\nDefault action should probably be read from the dispatcher's getDefaultAction() but that's another story.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-12-05T06:44:43.000+0000",
                    "updated": "2006-12-05T06:44:43.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11789",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Martel -- I had the same thought last night about the rewrite router default route, only I don't think we even need to set a default for the action, as that 's handled in the dispatcher. I'll update it later.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-12-05T09:51:30.000+0000",
                    "updated": "2006-12-05T09:51:30.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11791",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "RewriteRouter default route updated in revision 2110, resolving issue.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-12-05T10:22:01.000+0000",
                    "updated": "2006-12-05T10:22:01.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11792",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Matthew, I have added a test case for the issue I'm talking about - testDefaultRouteMatchedWithControllerOnly. I'm fixing RewriteRouter along with that addition. Take a look there. If you won't supply default for the action, the route won't be matched and even a single parameter won't be returned.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-12-05T10:36:47.000+0000",
                    "updated": "2006-12-05T10:36:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11793",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Martel -- I had just run into that and fixed it... and then discovered you had already! Thanks!",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-12-05T10:50:13.000+0000",
                    "updated": "2006-12-05T10:50:13.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-615\/transitions"
}