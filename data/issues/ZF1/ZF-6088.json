{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6088",
    "key": "ZF-6088",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Mixing 'find' and 'addDocument' with empty fields results in wrong indexes"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6088\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10390",
                    "id": 10390,
                    "description": "Mini Release",
                    "name": "1.9.6",
                    "userReleaseDate": "24\/Nov\/09",
                    "archived": false,
                    "releaseDate": "2009-11-24",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-11-23T12:20:16.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                "name": "roland",
                "displayName": "Roland Tapken",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-03-22T08:01:23.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-11-23T12:20:16.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "If you mix \"find\" and \"addDocument\" (e.g. if you want to update an existing document), and some of the documents are filled with empty strings, this may result in a wrong index. Here is an example:\n\n{noformat}\n\/\/ Start over with a fresh index\npassthru(\"rm -rf test.index\");\n$index = Zend_Search_Lucene::create(\"text.index\");\n\n\/\/ The list if entries we want to index\n$entries = array(\n  'asdf',\n  'abc',\n  'def',\n  'ghj',\n  'klm',\n  'nop',\n  'qrs',\n  'uvw',\n  'abc',\n  '', \/\/ If this field is not empty, everything is fine!\n  'hij',\n);\n\nforeach ($entries AS $key => $entry) {\n  \/\/ Find and delete existing documents\n  if ($old = $index->find(\"pk:$key\")){\n    \/\/ Note that this code is never reached in this example\n    $index->delete($old->id);\n  }\n\n  \/\/ Add new document\n  $doc = new Zend_Search_Lucene_Document();\n  $doc->addField(Zend_Search_Lucene_Field::UnIndexed(\"pk\", $pk));\n  $doc->addField(Zend_Search_Lucene_Field::Text(\"contents\", $entry));\n  $index->addDocument($doc);\n}\n\nforeach ($index->find(\"asdf\") AS $r) {\n  echo \"{$r->contents} ($r->score}\\n\";\n}\n\n\/\/ Expected result: asdf (1)\n\/\/ Actual result: ghj (1)\n{noformat}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6088\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10291",
                    "id": 10291,
                    "description": "Mini Release",
                    "name": "1.7.7",
                    "userReleaseDate": "16\/Mar\/09",
                    "archived": false,
                    "releaseDate": "2009-03-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10021",
                    "id": 10021,
                    "name": "Zend_Search_Lucene",
                    "description": "pure PHP robust, general purpose text search engine",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29667",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                        "name": "roland",
                        "displayName": "Roland Tapken",
                        "active": true
                    },
                    "body": "This seems to have nothing to do with empty values. I'm having this problem on real-life-data even if I'm filtering empty fields. The only thing that seems to help is to set the following parameters:\n\n{noformat}\n      $index->setMaxBufferedDocs(PHP_INT_MAX);\n      $index->setMaxMergeDocs(1);\n      $index->setMergeFactor(100);\n{noformat}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                        "name": "roland",
                        "displayName": "Roland Tapken",
                        "active": true
                    },
                    "created": "2009-03-22T08:22:43.000+0000",
                    "updated": "2009-03-22T08:22:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29668",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                        "name": "roland",
                        "displayName": "Roland Tapken",
                        "active": true
                    },
                    "body": "Sorry, even that doesn't solved the problem.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                        "name": "roland",
                        "displayName": "Roland Tapken",
                        "active": true
                    },
                    "created": "2009-03-22T08:26:16.000+0000",
                    "updated": "2009-03-22T08:26:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29669",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                        "name": "roland",
                        "displayName": "Roland Tapken",
                        "active": true
                    },
                    "body": "I found out that this problem does occur if an field is empty or totally omitted. The only solutions seems to be to add dummy data if an field is empty:\n\n{noformat}\n    \/\/ Remove an existing entry\n    if ($index->find('pk:'.$this->id))\n    {\n      $index->delete($hit->id);\n    }\n\n    $doc = new Zend_Search_Lucene_Document();\n    $doc->addField(Zend_Search_Lucene_Field::UnIndexed('pk', $this->id));\n    $fields = array('first_name', 'last_name', 'company', 'address', 'city');\n    foreach ($fields AS $field)\n    {\n      if (\"\" != ($value = trim($this->$field)))\n      {\n        $doc->addField(Zend_Search_Lucene_Field::UnStored($field, $value, sfConfig::get('sf_charset')));\n      }else {\n        \/\/ Field is empty, add dummy data\n        $doc->addField(Zend_Search_Lucene_Field::UnStored($field, \"null\", sfConfig::get('sf_charset')));\n      }\n    }\n\n    $index->addDocument($doc);\n{noformat}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=roland",
                        "name": "roland",
                        "displayName": "Roland Tapken",
                        "active": true
                    },
                    "created": "2009-03-22T08:36:22.000+0000",
                    "updated": "2009-03-22T08:36:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36440",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "body": "Fixed.\r\n\r\nThenks for really helpful issue description!\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "created": "2009-11-23T12:20:16.000+0000",
                    "updated": "2009-11-23T12:20:16.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6088\/transitions"
}