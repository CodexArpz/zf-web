{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9467",
    "key": "ZF-9467",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Form getErrors() incorrect handling when !$subform->isArray()"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/5",
                "name": "Sub-task",
                "subtask": true
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9467\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10451",
                    "id": 10451,
                    "description": "Mini Release",
                    "name": "1.10.4",
                    "userReleaseDate": "28\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-28",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-04-16T12:46:13.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-03-18T10:16:13.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-04-16T12:46:13.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend_Form getErrors() does not handle Form Structure correctly,\r\nwhen calling getErrors($name = null) without parameter, and having\r\na Form or a SubForm set isArray(false);\r\n{code}\r\nforeach ($this->getSubForms() as $key => $subForm) {\r\n    $fErrors = $this->_attachToArray($subForm->getErrors(), $subForm->getElementsBelongTo());\r\n    \/\/ the result\r\n    if (!$subForm->isArray()) {\r\n        $fErrors === array('' => array('foo' => ...\r\n    }\r\n    \/\/ because\r\n    if (!$subForm->isArray()) {\r\n        null === $subForm->getElementsBelongTo()\r\n    }\r\n}\r\n{code}\r\n\r\nI cleaned the method a bit as well, before Patch\r\n{code}\r\n    public function getErrors($name = null)\r\n    {\r\n        $errors = array();\r\n        if ((null !== $name) && isset($this->_elements[$name])) {\r\n            $errors = $this->getElement($name)->getErrors();\r\n        } elseif ((null !== $name) && isset($this->_subForms[$name])) {\r\n            $errors = $this->getSubForm($name)->getErrors();\r\n        } else {\r\n            foreach ($this->_elements as $key => $element) {\r\n                $errors[$key] = $element->getErrors();\r\n            }\r\n            foreach ($this->getSubForms() as $key => $subForm) {\r\n                $fErrors = $this->_attachToArray($subForm->getErrors(), $subForm->getElementsBelongTo());\r\n                $errors = array_merge($errors, $fErrors);\r\n            }\r\n        }\r\n        return $errors;\r\n    }\r\n{code}\r\n\/\/ Update\r\nI have learned while fixing [ZF-9586] and from [ZF-5222], that interferencing\r\nSubForm Names and Segments of elementsBelongTo cause data loss, when using\r\narray_merge instead of array_merge_recursive, so i updated this issue to\r\nreflect that too.\r\n\r\nAnd after Patch\r\n{code}\r\n    public function getErrors($name = null, $suppressArrayNotation = false)\r\n    {\r\n        $errors = array();\r\n        if (null !== $name) {\r\n            if (isset($this->_elements[$name])) {\r\n                return $this->getElement($name)->getErrors();\r\n            } else if (isset($this->_subForms[$name])) {\r\n                return $this->getSubForm($name)->getErrors(null, true);\r\n            }\r\n        }\r\n        \r\n        foreach ($this->_elements as $key => $element) {\r\n            $errors[$key] = $element->getErrors();\r\n        }\r\n        foreach ($this->getSubForms() as $key => $subForm) {\r\n            $merge = array();\r\n            if (!$subForm->isArray()) {\r\n                $merge[$key] = $subForm->getErrors();\r\n            } else {\r\n                $merge = $this->_attachToArray($subForm->getErrors(null, true),\r\n                                               $subForm->getElementsBelongTo());\r\n            }\r\n            $errors = array_merge_recursive($errors, $merge);\r\n        }\r\n\r\n        if (!$suppressArrayNotation && $this->isArray()) {\r\n            $errors = $this->_attachToArray($errors, $this->getElementsBelongTo());\r\n        }\r\n\r\n        return $errors;\r\n    }\r\n{code}\r\nThe Test as a whole\r\n{code}    public function _setup9350()\r\n    {\r\n        $this->form->addSubForm(new Zend_Form_SubForm(), 'foo')\r\n                   ->foo->setElementsBelongTo('foo[foo]')            \/\/ foo[foo]\r\n                        ->addSubForm(new Zend_Form_SubForm(), 'foo') \/\/ foo[foo][foo]\r\n                        ->foo->setIsArray(false)\r\n                             ->addElement('text', 'foo')             \/\/ foo[foo][foo][foo]\r\n                             ->foo->addValidator('Identical',\r\n                                                 false,\r\n                                                 array('foo Value'));\r\n\r\n        $this->form->foo->addSubForm(new Zend_Form_SubForm(), 'baz') \/\/ foo[foo][baz]\r\n                   ->baz->setIsArray(false)\r\n                        ->addSubForm(new Zend_Form_SubForm(), 'baz')\r\n                        ->baz->setElementsBelongTo('baz[baz]')       \/\/ foo[foo][baz][baz][baz]\r\n                             ->addElement('text', 'baz')             \/\/ foo[foo][baz][baz][baz][baz]\r\n                             ->baz->addValidator('Identical',\r\n                                                 false,\r\n                                                 array('baz Value'));\r\n\r\n        \/\/ This is appending a different named SubForm and setting\r\n        \/\/ elementsBelongTo to a !isArray() Subform name from same level\r\n        $this->form->foo->addSubForm(new Zend_Form_SubForm(), 'quo')\r\n                        ->quo->setElementsBelongTo('foo')            \/\/ foo[foo][foo] !!!!\r\n                             ->addElement('text', 'quo')             \/\/ foo[foo][foo][quo]\r\n                             ->quo->addValidator('Identical',\r\n                                                 false,\r\n                                                 array('quo Value'));\r\n        \r\n        \/\/ This is setting elementsBelongTo point into the middle of \r\n        \/\/ a chain of another SubForms elementsBelongTo\r\n        $this->form->addSubForm(new Zend_Form_SubForm(), 'duh')\r\n                   ->duh->setElementsBelongTo('foo[zoo]')            \/\/ foo[zoo] !!!!\r\n                        ->addElement('text', 'zoo')                  \/\/ foo[zoo][zoo]\r\n                        ->zoo->addValidator('Identical',\r\n                                            false,\r\n                                            array('zoo Value'));\r\n\r\n        \/\/ This is !isArray SubForms Name equal to the last segment\r\n        \/\/ of another SubForms elementsBelongTo\r\n        $this->form->addSubForm(new Zend_Form_SubForm(), 'iek')\r\n                   ->iek->setElementsBelongTo('foo')                 \/\/ foo !!!!\r\n                        ->addSubForm(new Zend_Form_SubForm(), 'zoo') \/\/ foo[zoo] !!!!\r\n                        ->zoo->setIsArray(false)\r\n                             ->addElement('text', 'iek')             \/\/ foo[zoo][iek]\r\n                             ->iek->addValidator('Identical',\r\n                                                 false,\r\n                                                 array('iek Value'));\r\n\r\n        $data = array('valid'   => array('foo' =>\r\n                                         array('foo' =>\r\n                                               array('foo' =>\r\n                                                     array('foo' => 'foo Value',\r\n                                                           'quo' => 'quo Value'),\r\n                                                     'baz' => \r\n                                                     array('baz' => \r\n                                                           array('baz' =>\r\n                                                                 array('baz' => 'baz Value')))),\r\n                                               'zoo' =>\r\n                                               array('zoo' => 'zoo Value',\r\n                                                     'iek' => 'iek Value'))),\r\n                      'invalid' => array('foo' =>\r\n                                         array('foo' =>\r\n                                               array('foo' =>\r\n                                                     array('foo' => 'foo Invalid',\r\n                                                           'quo' => 'quo Value'),\r\n                                                     'baz' => \r\n                                                     array('baz' => \r\n                                                           array('baz' =>\r\n                                                                 array('baz' => 'baz Value')))),\r\n                                               'zoo' =>\r\n                                               array('zoo' => 'zoo Value',\r\n                                                     'iek' => 'iek Invalid'))),\r\n                      'partial' => array('foo' =>\r\n                                         array('foo' =>\r\n                                               array('baz' => \r\n                                                     array('baz' => \r\n                                                           array('baz' =>\r\n                                                                 array('baz' => 'baz Value'))),\r\n                                                    'foo' => \r\n                                                     array('quo' => 'quo Value')),\r\n                                               'zoo' =>\r\n                                               array('zoo' => 'zoo Value'))));\r\n        return $data;\r\n    }\r\n\r\n    public function testGetErrorsWithElementsBelongTo()\r\n    {\r\n        $data = $this->_setup9350();\r\n        $this->form->isValid($data['invalid']);\r\n        $errors = $this->form->getErrors();\r\n\r\n        $this->assertTrue(isset($errors['foo']['foo']['foo']['foo']));\r\n        $this->assertTrue(isset($errors['foo']['zoo']['iek']));\r\n    }\r\n{code}\r\n\r\nAnd finally the patch which fixes the issue, with Unit Test\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php\t(Revision 21732)\r\n+++ tests\/Zend\/Form\/FormTest.php\t(Arbeitskopie)\r\n@@ -1579,7 +1621,17 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function testGetErrorsWithElementsBelongTo()\r\n+    {\r\n+        $data = $this->_setup9350();\r\n+        $this->form->isValid($data['invalid']);\r\n+        $errors = $this->form->getErrors();\r\n \r\n+        $this->assertTrue(isset($errors['foo']['foo']['foo']['foo']));\r\n+        $this->assertTrue(isset($errors['foo']['zoo']['iek']));\r\n+    }\r\n+\r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php\t(Revision 21732)\r\n+++ library\/Zend\/Form.php\t(Arbeitskopie)\r\n@@ -2271,22 +2272,35 @@\r\n      * @param  string $name\r\n      * @return array\r\n      *\/\r\n-    public function getErrors($name = null)\r\n+    public function getErrors($name = null, $suppressArrayNotation = false)\r\n     {\r\n         $errors = array();\r\n-        if ((null !== $name) && isset($this->_elements[$name])) {\r\n-            $errors = $this->getElement($name)->getErrors();\r\n-        } elseif ((null !== $name) && isset($this->_subForms[$name])) {\r\n-            $errors = $this->getSubForm($name)->getErrors();\r\n-        } else {\r\n-            foreach ($this->_elements as $key => $element) {\r\n-                $errors[$key] = $element->getErrors();\r\n+        if (null !== $name) {\r\n+            if (isset($this->_elements[$name])) {\r\n+                return $this->getElement($name)->getErrors();\r\n+            } else if (isset($this->_subForms[$name])) {\r\n+                return $this->getSubForm($name)->getErrors(null, true);\r\n             }\r\n-            foreach ($this->getSubForms() as $key => $subForm) {\r\n-                $fErrors = $this->_attachToArray($subForm->getErrors(), $subForm->getElementsBelongTo());\r\n-                $errors = array_merge($errors, $fErrors);\r\n+        }\r\n+        \r\n+        foreach ($this->_elements as $key => $element) {\r\n+            $errors[$key] = $element->getErrors();\r\n+        }\r\n+        foreach ($this->getSubForms() as $key => $subForm) {\r\n+            $merge = array();\r\n+            if (!$subForm->isArray()) {\r\n+                $merge[$key] = $subForm->getErrors();\r\n+            } else {\r\n+                $merge = $this->_attachToArray($subForm->getErrors(null, true),\r\n+                                               $subForm->getElementsBelongTo());\r\n             }\r\n+            $errors = array_merge_recursive($errors, $merge);\r\n         }\r\n+\r\n+        if (!$suppressArrayNotation && $this->isArray()) {\r\n+            $errors = $this->_attachToArray($errors, $this->getElementsBelongTo());\r\n+        }\r\n+\r\n         return $errors;\r\n     }\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9467\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "parent": {
            "name": "parent",
            "type": "issuelinks",
            "value": {
                "issueKey": "ZF-9350",
                "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9350",
                "type": {
                    "name": "Parent",
                    "direction": "INBOUND"
                }
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-3917",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3917",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-5222",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5222",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39699",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Ready for review and commit",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-01T04:31:09.000+0000",
                    "updated": "2010-04-01T04:31:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39723",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Updated UnitTest",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-02T00:23:14.000+0000",
                    "updated": "2010-04-02T00:23:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40078",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Patch applied to trunk and 1.10 release branch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-04-16T12:46:13.000+0000",
                    "updated": "2010-04-16T12:46:13.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9467\/transitions"
}