{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6904",
    "key": "ZF-6904",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Two Validators of the same class can not be used two times for a field in form to validate two values in db"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6904\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-11-20T09:09:13.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=buzz",
                "name": "buzz",
                "displayName": "buzz lightgear",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-06-04T13:11:05.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-11-20T09:09:13.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "db",
                "form",
                "validate"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Example:\n$validatorUniqueEmail = new Zend_Validate_Db_NoRecordExists('users', 'email');\n$validatorUniqueEmailNew = new Zend_Validate_Db_NoRecordExists('users', 'newemail');\n$email = new Zend_Form_Element_Text('email');\n$email->setRequired(true)\n\t\t->setLabel('E-Mail addresse)\n\t\t->addValidator($validatorUniqueEmail)\n\t\t->addValidator($validatorUniqueEmailNew);\nform->addElement($email);\n\nHere we want to validate if the entered email is not stored in two fields of our db.\nThe second validator overwrites the first validator in a strange unknown way. In this case\nonly the second validator will work !!!\n\n\nWe had the bug in earlier releases of zend too and solved that issue with a copy of a our validators\nExample:\n$validatorUniqueEmail = new Extlib_Validate_DbUnique('users', 'email');\n\/\/$validatorUniqueEmailNew = new Extlib_Validate_DbUnique('users', 'newemail'); -> seems not to work! A ZEND BUG ?\n$validatorUniqueEmailNew = new Extlib_Validate_DbUniqueCopy('users', 'newemail'); -> works\n\nPerhaps this helps to find the issue"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6904\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-4811",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4811",
                    "type": {
                        "name": "Duplicate",
                        "direction": "OUTBOUND",
                        "description": "duplicates"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12401",
                    "filename": "Element.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T01:36:27.000+0000",
                    "size": 1415,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12401\/Element.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10330",
                    "id": 10330,
                    "description": "Mini Release",
                    "name": "1.8.2",
                    "userReleaseDate": "27\/May\/09",
                    "archived": false,
                    "releaseDate": "2009-05-27",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31606",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "body": "Changing Component \/ Name.\n\nThis is not an issue with the Zend_Validate, but is an issue of Zend_Form_Element due to its internal naming of validators. (any two validators of the same name would produce the same result).\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "created": "2009-06-05T01:56:15.000+0000",
                    "updated": "2009-06-05T01:56:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31607",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "body": "This issue probably cannot be resolved without breaking BC, and this use-case can be satisfied by using the exclude field of the DB validator. Unless further use-cases can be demonstrated that make this impracticable, I would suggest defering to 2.0 ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "created": "2009-06-05T02:09:43.000+0000",
                    "updated": "2009-06-05T02:09:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31623",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "body": "Suggesting close as 'Wont fix'",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bittarman",
                        "name": "bittarman",
                        "displayName": "Ryan Mauger",
                        "active": true
                    },
                    "created": "2009-06-05T08:04:08.000+0000",
                    "updated": "2009-06-05T08:04:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36245",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "Noting Matthew's comments in ZF-4811, I've attached simple patch to fix this issue for the use case described (supplying element with validator objects).\r\n\r\nIt borrows from the alias system employed by element decorators, which allows you to have multiple instances of the same decorator by supplying an alias (see \"Using Multiple Decorators of the Same Type - http:\/\/framework.zend.com\/manual\/en\/zend.form.forms.html#zend.form.forms.decorators).\r\n\r\nClient code:\r\n\r\n{code:xml}\r\n$element = new Zend_Form_Element_Text( 'foo' );\r\n$validator1 = new Zend_Validate_InArray( array( 'a', 'b', 'c' ) );\r\n$validator2 = new Zend_Validate_InArray( array( 'c', 'd', 'e' ) );\r\n$element->addValidator( array( 'InArray1' => $validator1 ) );\r\n$element->addValidator( array( 'InArray2' => $validator2 ) );\r\n$element->setView( new Zend_View() );\r\nvar_dump( $element->isValid( 'c' ) );\r\n{code}\r\n\r\nTo allow the passing of aliased validator class name (rather than actual instances), the lazy loader (_loadValidator) would also need to be modified in a similar fashion to _loadDecorator. The method signature would need to change in order to pass the alias, but this would not break BC.\r\n\r\nThoughts?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T01:45:46.000+0000",
                    "updated": "2009-11-20T01:45:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36295",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "Scrub previous comment, this use case can be achieved using validator chains.\r\n\r\n{code:xml}\r\n$element = new Zend_Form_Element_Text( 'foo' );\r\n$chain = new Zend_Validate();\r\n$chain->addValidator( new Zend_Validate_InArray( array( 'a', 'b', 'c' ) ) )\r\n      ->addValidator( new Zend_Validate_InArray( array( 'c', 'd', 'e' ) ) );\r\n$element->addValidator( $chain );\r\n{code}\r\n\r\nOr in original example:\r\n\r\n{code:xml}\r\n$validator = new Zend_Validate();\r\n$validator->addValidator(new Zend_Validate_Db_NoRecordExists('users', 'email'));\r\n          ->addValidator(new Zend_Validate_Db_NoRecordExists('users', 'newemail'));\r\n$email = new Zend_Form_Element_Text('email');\r\n$email->setRequired(true)\r\n      ->setLabel('E-Mail address')\r\n      ->addValidator($validator);\r\nform->addElement($email);\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T09:08:58.000+0000",
                    "updated": "2009-11-20T09:08:58.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6904\/transitions"
}