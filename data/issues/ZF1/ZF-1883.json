{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1883",
    "key": "ZF-1883",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add polish top-level domain allowed utf-8 characters in Zend_Validate_Hostname"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1883\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10241",
                    "id": 10241,
                    "description": "Minor Release",
                    "name": "1.8.0",
                    "userReleaseDate": "30\/Apr\/09",
                    "archived": false,
                    "releaseDate": "2009-04-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-03-21T14:58:32.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rayell",
                "name": "rayell",
                "displayName": "Lukasz Rajchel",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-08-27T08:25:27.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-03-21T14:58:32.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I've created file with allowed utf-8 characters for polish top-level domains for use in Zend_Validate_Hostname. This should probably be put into Zend\/Validate\/Hostname\/Pl.php file (new file) so it would be similar like with languages already supported.\n\nThis file code is:\n{code}\n<?php\nclass Zend_Validate_Hostname_Pl implements Zend_Validate_Hostname_Interface\n{\n    \/**\n     * Returns UTF-8 characters allowed in DNS hostnames for the specified Top-Level-Domain\n     *\n     * @see http:\/\/www.dns.pl\/IDN\/rejestracja_domen_idn.txt Polish (.PL)\n     * @return string\n     *\/\n    static function getCharacters()\n    {\n        return \t'\\x{00B7}\\x{00E0}-\\x{00F6}\\x{00F8}-\\x{00FF}\\x{0101}\\x{0103}\\x{0105}\\x{0107}\\x{010B}' .\n        \t\t'\\x{010D}\\x{010F}\\x{0111}\\x{0113}\\x{0115}\\x{0117}\\x{0119}\\x{011B}\\x{011D}\\x{011F}' .\n        \t\t'\\x{0121}\\x{0123}\\x{0125}\\x{0127}\\x{0129}\\x{012B}\\x{012D}\\x{012F}\\x{0131}\\x{0135}' .\n        \t\t'\\x{0137}\\x{0138}\\x{013A}\\x{013C}\\x{013E}\\x{0142}\\x{0144}\\x{0146}\\x{0148}\\x{014B}' .\n        \t\t'\\x{014D}\\x{014F}\\x{0151}\\x{0153}\\x{0155}\\x{0157}\\x{0159}\\x{015B}\\x{015D}\\x{015F}' .\n        \t\t'\\x{0161}\\x{0163}\\x{0165}\\x{0167}\\x{0169}\\x{016B}\\x{016D}\\x{016F}\\x{0171}\\x{0173}' .\n        \t\t'\\x{0175}\\x{0177}\\x{017A}\\x{017C}\\x{017E}\\x{0390}\\x{03AC}-\\x{03CE}\\x{0430}-\\x{045F}' .\n        \t\t'\\x{0491}\\x{0492}\\x{05D0}-\\x{05EA}';\n    }\n}\n?>\n{code}\n\nUnfortunately document that specifies that special characters is available only in polish (http:\/\/www.dns.pl\/IDN\/rejestracja_domen_idn.txt)."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10040",
                "value": " Nice to Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1883\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10110",
                    "id": 10110,
                    "description": "Mini Release",
                    "name": "1.0.1",
                    "userReleaseDate": "30\/Jul\/07",
                    "archived": true,
                    "releaseDate": "2007-07-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10140",
                    "id": 10140,
                    "name": "Zend_Validate",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16460",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Assigned to Darby",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-08-27T14:47:13.000+0000",
                    "updated": "2007-08-27T14:47:13.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16732",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "body": "Darby - I can implement this as long as you're happy with the regex. Obviously I can't check the Polish site :-)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "created": "2007-09-17T09:18:58.000+0000",
                    "updated": "2007-09-17T09:18:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16733",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Yes, Simon, please do. Thank you!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-09-17T09:27:05.000+0000",
                    "updated": "2007-09-17T09:27:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16840",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "body": "This is not quite as simple as the supplied code since the .Pl domains accept 4 different character sets (Hebrew, Cyrillic, etc) and you can't mix characters between different character sets.\n\nSo I'll have to look into this a litle deeper, and will try to look at some other IDNs (i.e. .com) too. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "created": "2007-09-20T11:32:57.000+0000",
                    "updated": "2007-09-20T11:32:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16960",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rayell",
                        "name": "rayell",
                        "displayName": "Lukasz Rajchel",
                        "active": true
                    },
                    "body": "Maybe the simpliest way to validate different character sets allowed for domain when you can't mix characters berween different sets is the following.\n\nAllow the getCharacters method to return also arrays of different set characters as separate items. This needs to be done only in the interface comment (so that developers know that arrays can also be returned) and in the isValid method in HostnameValidator class. Now the hostname validation if array was returned should go like this:\n1) check domain name without any special characters, if it is valid then validation is over with success\n2) if it is not valid then check it again separately for every character set in array returned by the getCharacters method\n3) if the domain name is valid only one of the checks from point 2 should return true, if none of the checks return true or if more then one return true then given value is not valid\n\nChanges that needs to be done:\n\nChange Zend\/Validate\/Hostname\/Interface.php so that function getCharacters could return also arrays (just a comment fix)\n{code}\ninterface Zend_Validate_Hostname_Interface\n{\n\n    \/**\n     * Returns UTF-8 characters allowed in DNS hostnames for the specified Top-Level-Domain\n     *\n     * UTF-8 characters should be written as four character hex codes \\x{XXXX}\n     * For example \u0102\u00a9 (lowercase e with acute) is represented by the hex code \\x{00E9}\n     *\n     * You only need to include lower-case equivalents of characters since the hostname\n     * check is case-insensitive\n     *\n     * Please document the supported TLDs in the documentation file at:\n     * manual\/en\/module_specs\/Zend_Validate-Hostname.xml\n     *\n     * @see http:\/\/en.wikipedia.org\/wiki\/Internationalized_domain_name\n     * @see http:\/\/www.iana.org\/cctld\/ Country-Code Top-Level Domains (TLDs)\n     * @see http:\/\/www.columbia.edu\/kermit\/utf8-t1.html UTF-8 characters\n     * @return string|array\n     *\/\n    static function getCharacters();\n}\n{code}\n\nThen modify the incoming Zend\/Validate\/Hostname\/Pl.php into\n{code}\nclass Zend_Validate_Hostname_Pl implements Zend_Validate_Hostname_Interface\n{\n\t\/**\n\t * Returns UTF-8 characters allowed in DNS hostnames for the specified Top-Level-Domain\n\t *\n\t * @see http:\/\/www.dns.pl\/IDN\/rejestracja_domen_idn.txt Polish (.PL)\n\t * @return string\n\t *\/\n\tstatic function getCharacters()\n\t{\n\t\t$latin = '\\x{00B7}\\x{00E0}-\\x{00F6}\\x{00F8}-\\x{00FF}\\x{0101}\\x{0103}\\x{0105}\\x{0107}\\x{010B}' .\n        \t\t'\\x{010D}\\x{010F}\\x{0111}\\x{0113}\\x{0115}\\x{0117}\\x{0119}\\x{011B}\\x{011D}\\x{011F}' .\n        \t\t'\\x{0121}\\x{0123}\\x{0125}\\x{0127}\\x{0129}\\x{012B}\\x{012D}\\x{012F}\\x{0131}\\x{0135}' .\n        \t\t'\\x{0137}\\x{0138}\\x{013A}\\x{013C}\\x{013E}\\x{0142}\\x{0144}\\x{0146}\\x{0148}\\x{014B}' .\n        \t\t'\\x{014D}\\x{014F}\\x{0151}\\x{0153}\\x{0155}\\x{0157}\\x{0159}\\x{015B}\\x{015D}\\x{015F}' .\n        \t\t'\\x{0161}\\x{0163}\\x{0165}\\x{0167}\\x{0169}\\x{016B}\\x{016D}\\x{016F}\\x{0171}\\x{0173}' .\n        \t\t'\\x{0175}\\x{0177}\\x{017A}\\x{017C}\\x{017E}';\n\n\t\t$greek = '\\x{0390}\\x{03AC}-\\x{03CE}';\n\n\t\t$cyrillic = '\\x{0430}-\\x{045F}\\x{0491}\\x{0492}';\n\n\t\t$hebrew = '\\x{05D0}-\\x{05EA}'; \n\t\t\n\t\treturn array($latin, $greek, $cyrillic, $hebrew);\n\t}\n}\n{code}\n\nNow the last change is in Zend\/Validate\/Hostname.php isValid() method. Change following lines (319 - 369):\n{code}\n\/**\n * Match against IDN hostnames\n * @see Zend_Validate_Hostname_Interface\n *\/\n$labelChars = 'a-z0-9';\n$utf8 = false;\n$classFile = 'Zend\/Validate\/Hostname\/' . ucfirst($this->_tld) . '.php';\nif ($this->_validateIdn) {\n\tif (Zend_Loader::isReadable($classFile)) {\n\n\t\t\/\/ Load additional characters\n\t\t$className = 'Zend_Validate_Hostname_' . ucfirst($this->_tld);\n\t\tZend_Loader::loadClass($className);\n\t\t$labelChars .= call_user_func(array($className, 'getCharacters'));\n\t\t$utf8 = true;\n\t}\n}\n\n\/\/ Keep label regex short to avoid issues with long patterns when matching IDN hostnames\n$regexLabel = '\/^[' . $labelChars . '\\x2d]{1,63}$\/i';\nif ($utf8) {\n\t$regexLabel .= 'u';\n}\n\n\/\/ Check each hostname part\n$valid = true;\nforeach ($domainParts as $domainPart) {\n\n\t\/\/ Check dash (-) does not start, end or appear in 3rd and 4th positions\n\tif (strpos($domainPart, '-') === 0 ||\n\t(strlen($domainPart) > 2 && strpos($domainPart, '-', 2) == 2 && strpos($domainPart, '-', 3) == 3) ||\n\tstrrpos($domainPart, '-') === strlen($domainPart) - 1) {\n\n\t\t$this->_error(self::INVALID_DASH);\n\t\t$status = false;\n\t\tbreak 2;\n\t}\n\n\t\/\/ Check each domain part\n\t$status = @preg_match($regexLabel, $domainPart);\n\tif ($status === false) {\n\t\t\/**\n\t\t * Regex error\n\t\t * @see Zend_Validate_Exception\n\t\t *\/\n\t\trequire_once 'Zend\/Validate\/Exception.php';\n\t\tthrow new Zend_Validate_Exception('Internal error: DNS validation failed');\n\t} elseif ($status === 0) {\n\t\t$valid = false;\n\t}\n}\n{code}\n\ninto something like:\n{code}\n\/**\n * Match against IDN hostnames\n * @see Zend_Validate_Hostname_Interface\n *\/\n$labelChars = 'a-z0-9';\n$utf8 = false;\n$classFile = 'Zend\/Validate\/Hostname\/' . ucfirst($this->_tld) . '.php';\nif ($this->_validateIdn) {\n\tif (Zend_Loader::isReadable($classFile)) {\n\n\t\t\/\/ Load additional characters\n\t\t$className = 'Zend_Validate_Hostname_' . ucfirst($this->_tld);\n\t\tZend_Loader::loadClass($className);\n\t\t$specialChars = call_user_func(array($className, 'getCharacters'));\n\t\tif (!is_array($specialChars)) {\n\t\t\t$labelChars .= $specialChars;\n\t\t}\n\t\t$utf8 = true;\n\t}\n}\n\n\/\/ Keep label regex short to avoid issues with long patterns when matching IDN hostnames\n$regexLabel = '\/^[' . $labelChars . '\\x2d]{1,63}$\/i';\nif ($utf8) {\n\t$regexLabel .= 'u';\n}\n\n\/\/ Check each hostname part\n$valid = true;\nforeach ($domainParts as $domainPart) {\n\n\t\/\/ Check dash (-) does not start, end or appear in 3rd and 4th positions\n\tif (strpos($domainPart, '-') === 0 ||\n\t(strlen($domainPart) > 2 && strpos($domainPart, '-', 2) == 2 && strpos($domainPart, '-', 3) == 3) ||\n\tstrrpos($domainPart, '-') === strlen($domainPart) - 1) {\n\n\t\t$this->_error(self::INVALID_DASH);\n\t\t$status = false;\n\t\tbreak 2;\n\t}\n\n\t\/\/ Check each domain part\n\t$status = @preg_match($regexLabel, $domainPart);\n\t\n\t\/\/ If status is false it means that there are special characters in domain part that needs to be validated\n\tif ($status === false && isset($specialChars) && is_array($specialChars)) {\n\t\t\n\t\t$statusArray = array(); \/\/ holds validation result for every character set\n\t\tfor ($i = 0; $i < count($specialChars); $i++) {\n\t\t\t$regexLabel = '\/^[' . $specialChars[$i] . '\\x2d]{1,63}$\/i'; \/\/ build new regex for set\n\t\t\tif ($utf8) {\n\t\t\t\t$regexLabel .= 'u';\n\t\t\t} \n\t\t\t$statusArray[$i] = @preg_match($regexLabelTemp, $domainPart);\n\t\t}\n\t\t\n\t\t\/\/ If domain name is correct there should be only one 'TRUE' value in $statusArray\n\t\t$trueCount = 0;\n\t\tfor ($i = 0; $i < count($statusArray); $i++) {\n\t\t\tif ($statusArray[$i]) {\n\t\t\t\t$trueCount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\t$status = ($trueCount == 1); \n\t}\n\t\n\tif ($status === false) {\n\t\t\/**\n\t\t * Regex error\n\t\t * @see Zend_Validate_Exception\n\t\t *\/\n\t\trequire_once 'Zend\/Validate\/Exception.php';\n\t\tthrow new Zend_Validate_Exception('Internal error: DNS validation failed');\n\t} elseif ($status === 0) {\n\t\t$valid = false;\n\t}\n}\n{code}\n\nThis should work if I haven't done any typos.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rayell",
                        "name": "rayell",
                        "displayName": "Lukasz Rajchel",
                        "active": true
                    },
                    "created": "2007-09-25T09:42:37.000+0000",
                    "updated": "2007-09-25T09:42:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16978",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "body": "Thanks for the suggestions Lukasz. \n\nI'd suggest the following small changes:\n\n1) If IDN is enabled and if there are any special characters in the domain (i.e. anything other than a-z, dash \"-\", and 0-9) do the following steps:\n2) Load the first allowed character set and try to validate the domain\n3) If fail, go to the next allowed character set and try again\n4) Repeat until get to the last allowed character set\n\nI agree returning arrays from getCharacters is a good idea to support this. A mixed return type isn't ideal, but I don't think it's against the ZF Coding Standards.\n\nAlso, the whole domain (including any sub-domain parts) has to match one character set rather than allow any character set per domain part. I think your code would allow two different characters sets for two different domain parts.\n\nI probably also need to look into whether sub-domains (i.e. www, dev, etc) can include international characters at all since if not this process is simplified and we can just check for the main \"domain name\" part (for example \"domain\" in \"www.domain.com\") against these characters sets.\n\nHowever, another implementation I saw on the web (http:\/\/tldchk.berlios.de\/) groups some character sets into external files which are then included. This suggests it's possible to share character sets across some IDN domains. I'll check into this first since if true this may make it easier to maintain and cope with domains that accept large character sets. \n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "created": "2007-09-26T13:07:59.000+0000",
                    "updated": "2007-09-26T13:07:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21052",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:12:04.000+0000",
                    "updated": "2008-04-18T13:12:04.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21441",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "body": "No this has not been fixed. Apologies, i had a baby (at least my wife did!) before Christmas and it's taken my life over somewhat. I will take a look at this issue and will post back a more helpful response within a week",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=studio24",
                        "name": "studio24",
                        "displayName": "Simon R Jones",
                        "active": true
                    },
                    "created": "2008-04-24T11:50:54.000+0000",
                    "updated": "2008-04-24T11:50:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29656",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "New feature implemented with the last rework of Zend_Validate_HostName.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-03-21T14:58:32.000+0000",
                    "updated": "2009-03-21T14:58:32.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1883\/transitions"
}