{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2270",
    "key": "ZF-2270",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Filter_Boolean"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2270\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/7",
                "name": "Needs Proposal"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10360",
                    "id": 10360,
                    "description": "Minor Release",
                    "name": "1.10.0",
                    "userReleaseDate": "27\/Jan\/10",
                    "archived": false,
                    "releaseDate": "2010-01-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-09-30T11:59:07.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                "name": "jordanryanmoore",
                "displayName": "Jordan Ryan Moore",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-12-05T14:07:57.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-09-30T11:59:07.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "A new filter that converts values to booleans.\n\n{code}\nclass Zend_Filter_Boolean implements Zend_Filter_Interface {\n    \/**\n     * Values that are equivilent to true.\n     *\n     * @var array\n     *\/\n    protected $_true = array('t', 'true', 'y', 'yes', '1');\n\n    \/**\n     * Values that are equivilent to false.\n     *\n     * @var array\n     *\/\n    protected $_false = array('f', 'false', 'n', 'no', '0');\n\n    \/**\n     * The default value if the provided value does not match any of the\n     * expected values.\n     *\n     * @var bool\n     *\/\n    protected $_default = false;\n\n    \/**\n     * Constructs a boolean filter.\n     *\n     * @param   bool    $default    The default value if the provided value\n     *                              does not match any of the expected values.\n     *\/\n    public function __construct($default = false) {\n        $this->_default = (bool) $default;\n    }\n\n    \/**\n     * Casts value to a boolean.\n     *\n     * @param   mixed   $value\n     *\n     * @return  bool\n     *\/\n    public function filter($value) {\n        if (is_bool($value) || is_null($value)) {\n            return (bool) $value;\n        }\n\n        $value = strtolower(trim($value));\n\n        if (in_array($value, $this->_true)) {\n            return true;\n        }\n\n        if (in_array($value, $this->_false)) {\n            return false;\n        }\n\n        return $this->_default;\n    }\n}\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10040",
                "value": " Nice to Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2270\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/11010",
                    "filename": "Boolean.php",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "created": "2007-12-28T13:15:09.000+0000",
                    "size": 3266,
                    "mimeType": "application\/x-php",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/11010\/Boolean.php"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10140",
                    "id": 10140,
                    "description": "Mini Release",
                    "name": "1.0.3",
                    "userReleaseDate": "30\/Nov\/07",
                    "archived": true,
                    "releaseDate": "2007-11-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10013",
                    "id": 10013,
                    "name": "Zend_Filter",
                    "description": "methods for filtering data",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18057",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=weppos",
                        "name": "weppos",
                        "displayName": "Simone Carletti",
                        "active": true
                    },
                    "body": "Hi Jordan,\nI agree with this filter, but I think the class deserves a little more discussion.\n\nI gave a look at your suggestion but, for example, it seems unable to handle an array.\nI would expect an empty array to be evaluated as false and a not empty array as true, as (bool) already does.\nIt doesn't handle objects as well.\n\nI suggest to check whether the variable is a scalar type (http:\/\/php.net\/manual\/en\/function.is-scalar.php).\nIf no, the default (bool) cast statement might be used, otherwise we could rely to in_array() comparison.\n\nAdditionally, it would be great to provide an  #addValue method (or perhaps #addTrue() and #addFalse() methods) to let developers add more values to default array.\n\nWhat do you think?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=weppos",
                        "name": "weppos",
                        "displayName": "Simone Carletti",
                        "active": true
                    },
                    "created": "2007-12-26T17:48:17.000+0000",
                    "updated": "2007-12-26T17:48:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18068",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "body": "Added an addValue() method and support for Zend_Locale. I'm not sure if a non-scalar should return its default PHP boolean cast, or if it should return the default value set in the filter. This version returns its default PHP boolean cast.\n\n{code}\nclass Zend_Filter_Boolean implements Zend_Filter_Interface\n{\n    \/**\n     * Default values and their boolean counterparts.\n     *\n     * @var array\n     *\/\n    protected $_defaultValues = array(\n        't'     => true,\n        'true'  => true,\n        'y'     => true,\n        'yes'   => true,\n        '1'     => true,\n        'f'     => false,\n        'false' => false,\n        'n'     => false,\n        'no'    => false,\n        '0'     => false,\n    );\n\n    \/**\n     * Values and their boolean counterparts.\n     *\n     * @var array\n     *\/\n    protected $_values = array();\n\n    \/**\n     * The default value if the provided value does not match any of the expected values.\n     *\n     * @var bool\n     *\/\n    protected $_default = false;\n\n    \/**\n     * Constructs a boolean filter.\n     *\n     * @param   bool                $default    The default value if the provided value does not match any of the\n     *                                          expected values.\n     * @param   Zend_Locale|string  $locale     An optional locale to retreive true\/false values from.\n     *\/\n    public function __construct($default = null, $locale = null)\n    {\n        if (!is_null($default)) {\n            $this->_default = (bool) $default;\n        }\n\n        $this->setLocale($locale);\n    }\n\n    \/**\n     * Sets the locale.\n     *\n     * @param   Zend_Locale|null    $locale\n     *\n     * @return  Zend_Filter_Boolean\n     *\/\n    public function setLocale($locale)\n    {\n        $this->_values = $this->_defaultValues;\n\n        if (!is_null($locale)) {\n            if (!class_exists('Zend_Locale')) {\n                require_once 'Zend\/Locale.php';\n            }\n\n            if (!$local instanceof Zend_Locale) {\n                $locale = new Zend_Locale($locale);\n            }\n\n            $q = $locale->getQuestion();\n\n            $this->_values[$q['yes']]       = true;\n            $this->_values[$q['yesabbr']]   = true;\n            $this->_values[$q['no']]        = false;\n            $this->_values[$q['noabbr']]    = false;\n        }\n\n        return $this;\n    }\n\n    \/**\n     * Adds a value to the list.\n     *\n     * @param   mixed   $value\n     * @param   bool    $bool\n     *\n     * @return  Zend_Filter_Boolean\n     *\/\n    public function addValue($value, $bool)\n    {\n        if (!is_scalar($value)) {\n            require_once 'Zend\/Filter\/Exception.php';\n            throw new Zend_Filter_Exception('$value must be a scalar');\n        }\n\n        $this->_defaultValues[trim($value)] = (bool) $bool;\n\n        return $this;\n    }\n\n    \/**\n     * Casts value to a boolean.\n     *\n     * @param   mixed   $value\n     *\n     * @return  bool\n     *\/\n    public function filter($value) {\n        if (!is_scalar($value) || is_bool($value) || is_null($value)) {\n            return (bool) $value;\n        }\n\n        $value = trim($value);\n\n        if (function_exists('mb_strtolower')) {\n            $value = mb_strtolower($value);\n        } else {\n            $value = strtolower($value);\n        }\n\n        if (array_key_exists($value, $this->_values)) {\n            return $this->_values[$value];\n        }\n\n        return $this->_default;\n    }\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "created": "2007-12-27T11:18:36.000+0000",
                    "updated": "2007-12-27T11:18:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18094",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "body": "Attached new Zend_Filter_Boolean that fixes a couple bugs, returns the default value for non-scalars, uses the mb extension (if available), and ever-so-slightly improves memory usage.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "created": "2007-12-28T13:15:09.000+0000",
                    "updated": "2007-12-28T13:15:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18649",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "(reposting comment with formatting :))\n\nMaybe someone can educate me on why the following wouldn't be the best and most understandable solution?\n\n{code}\npublic function filter($value)\n{\n    return (boolean) $value;\n}\n{code}\n\nOf course, for custom needs this filter could be extended.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2008-01-29T09:59:20.000+0000",
                    "updated": "2008-01-29T09:59:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18651",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "body": "Sure, the simple version would work fine for most scenarios, but this filter takes \"yes\/no\" and \"true\/false\" string values and returns the corresponding boolean. I've found it handy quite a few times. I've used the filter for user-input, GET\/POST variable parsing, and returning data from a database.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jordanryanmoore",
                        "name": "jordanryanmoore",
                        "displayName": "Jordan Ryan Moore",
                        "active": true
                    },
                    "created": "2008-01-29T10:22:04.000+0000",
                    "updated": "2008-01-29T10:22:04.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18653",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Aha, I see now. Thanks, Jordan, for clarifying this for me. :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2008-01-29T10:29:55.000+0000",
                    "updated": "2008-01-29T10:29:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21013",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:12:00.000+0000",
                    "updated": "2008-04-18T13:12:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21181",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please evaluate and categorize\/assign as necessary.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T17:11:46.000+0000",
                    "updated": "2008-04-18T17:11:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30191",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Proposal has been added to Wiki.\nWaiting for Recommendation and Response from Zend since 15.April.2009",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-04-16T23:59:14.000+0000",
                    "updated": "2009-04-16T23:59:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35011",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Closing as \"needs proposal\".\nThe related proposal has been accepted for incubator.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-09-30T11:59:07.000+0000",
                    "updated": "2009-09-30T11:59:07.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2270\/transitions"
}