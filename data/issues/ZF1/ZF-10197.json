{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10197",
    "key": "ZF-10197",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend Http Client problem with Delicious Oauth signature"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10197\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10501",
                    "id": 10501,
                    "description": "Mini Release",
                    "name": "1.11.1",
                    "userReleaseDate": "30\/Nov\/10",
                    "archived": false,
                    "releaseDate": "2010-11-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-10-10T13:19:25.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ruflin",
                "name": "ruflin",
                "displayName": "Nicolas Ruflin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-07-21T07:51:35.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-10-10T13:55:30.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I implemented the yahoo Oauth login for delicious with Zend_Oauth. All is working as expected as long as there are no spaces in the description parameter. As soon as there is a space in the description a signature error is returned from yahoo.\r\n\r\nThe problem is, that Zend_Oauth_Client (or Zend_Http_Client) uses http_build_query to create the query. http_build_query replaces all spaces with + instead of %20. So the signature created by the server is not the same as created by the client.\r\n\r\nThe bug can be fixed by adding the following on line 959 (Zend_Http_Client).\r\n\r\n{code}\r\n$query .= http_build_query($this->paramsGet, null, '&');\r\n$query = str_replace('+','%20',$query);\r\n{code}\r\n\r\nI'm not sure if this will break other requests or what could be a better way to implement it. At the moment I created a additional socket adapter the does the replacing because I'm able to inject the adapter into the client.\r\n\r\nMore about the problem here in this thread on the bottom:\r\nhttp:\/\/support.delicious.com\/forum\/comments.php?DiscussionID=3726&page=1#Comment_19454"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10197\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                "name": "padraic",
                "displayName": "P\u00e1draic Brady",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10470",
                    "id": 10470,
                    "description": "Mini Release",
                    "name": "1.10.6",
                    "userReleaseDate": "22\/Jun\/10",
                    "archived": false,
                    "releaseDate": "2010-06-22",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10473",
                    "id": 10473,
                    "name": "Zend_Oauth",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41721",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "May need a more detailed description as to how the client is being used (i.e. request method, authorisation scheme (any option passed into Zend_Oauth). Note that Zend_Oauth has been used elsewhere with no reported problems of this specific nature. Changing the encoding may alter signatures for working services (can't be allowed to occur), so I need to see whether this is something in the way the component is used specifically for Delicious but not for other service APIs. If this is only impacting Delicious when similar use cases work elsewhere, then it will not be fixed except for specific use cases in something like Zend_Service_Delicious where it becomes necessary but limited in scope.\r\n\r\nAdditionally, Zend_Oauth extends Zend_Http_Client which is responsible for URI encoding. This would require a fix to Zend_Http_Client if an incorrect behaviour.\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2010-07-25T10:01:50.000+0000",
                    "updated": "2010-07-25T10:01:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41745",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ruflin",
                        "name": "ruflin",
                        "displayName": "Nicolas Ruflin",
                        "active": true
                    },
                    "body": "I think the problem is only in the signature part of OAuth implementation. I use also OAuth with Twitter and here it works without a problem.\r\n\r\nBut as far as I can see Twitter doesn't use the whole signature sing as Delicious (Yahoo) does in step 6: http:\/\/delicious.com\/help\/oauthapi \r\n\r\nHere is the code how I implemented it. The problem occurs in the third step (post) only if the variable $data['title'] has a space inside. Otherwise it works without a problem.\r\n{code:php}\r\n\tpublic function authorize(array $data) {\r\n\t\t\r\n\t\t$config = array(\r\n\t\t\t'siteUrl' => 'https:\/\/api.login.yahoo.com\/oauth\/v2\/get_request_token',\r\n\t\t\t'callbackUrl' => '\/callback',\r\n\t\t\t'consumerKey' => $key,\r\n\t\t\t'consumerSecret' => $secret,\r\n\t\t);\r\n\t\t\t\t\r\n\t\t$consumer = new Zend_Oauth_Consumer($config);\r\n\t\t$token = $consumer->getRequestToken();\r\n\t\t\r\n\t\t$session = new Zend_Session_Namespace('delicious_oauth');\r\n\t\t$session->token  = $token->getToken();\r\n\t    $session->secret = $token->getTokenSecret();\r\n\t\t\t\t\r\n\t\t$urlParams = $token->getResponse()->getBody();\r\n\t\t$url = 'https:\/\/api.login.yahoo.com\/oauth\/v2\/request_auth?' . $urlParams;\r\n\r\n\t\t\/\/ redirect to $url\r\n\t}\r\n\t\r\n\r\n\tpublic function callback() {\r\n\t\t\r\n\t\t$config = array(\r\n\t\t\t'siteUrl' => 'https:\/\/api.login.yahoo.com\/oauth\/v2\/get_token',\r\n\t\t\t'callbackUrl' => '\/callback',\r\n\t\t\t'consumerKey' => $key,\r\n\t\t\t'consumerSecret' => $secret,\r\n\t\t);\r\n\r\n\t\t$session = new Zend_Session_Namespace('delicious_oauth');\r\n\t\t\r\n\t\t\/\/ build the token request based on the original token and secret\r\n        $request = new Zend_Oauth_Token_Request();\r\n        $request->setToken($session->token)\r\n\t\t\t->setTokenSecret($session->secret);\r\n\t\t\r\n\t\tunset($session->token);\r\n        unset($session->secret);\r\n        \r\n\t\t$consumer = new Zend_Oauth_Consumer($config);\r\n\t\t$token = $consumer->getAccessToken($_GET, $request);\r\n\t\t\r\n\t\t$data = array('oauth_token' => $token->getToken(), 'oauth_token_secret' => $token->getTokenSecret());\r\n\t\t\/\/ store $data\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function post(array $data) {\r\n\t\t$config = array(\r\n\t\t\t'siteUrl' => 'https:\/\/api.login.yahoo.com\/oauth\/v2\/get_token',\r\n\t\t\t'callbackUrl' => '\/callback',\r\n\t\t\t'consumerKey' => $key,\r\n\t\t\t'consumerSecret' => $secret,\r\n\t\t);\r\n\t\t\r\n\t\t$data = $this->getData();\r\n\r\n\t\t$token2 = new Zend_Oauth_Token_Access();\r\n             $token2->setToken($data['oauth_token'])\r\n                ->setTokenSecret($data['oauth_token_secret']);\r\n           \r\n        \r\n             $client = $token2->getHttpClient($config);\r\n\t\t$client->resetParameters();\r\n\t\t\r\n\t\t$parameters = array(\r\n\t\t\t'url' => $data['url'],\r\n\t\t\t'description' => $data['title'],\r\n\t\t\t'tags' => $data['tags'],\r\n\t\t\t'extended' => $data['note'],\r\n\t\t);\r\n\t\t\r\n\t\t$client->setUri('http:\/\/api.del.icio.us\/v2\/posts\/add');\r\n\t\t$client->setParameterGet($parameters);\r\n\t\t\r\n\t\t$client->setMethod(Zend_Http_Client::GET);\r\n\t\t\r\n\t\t$client->setAdapter(new useKit_Http_Client_Adapter_Socket());\r\n\t\t$response = $client->request();\r\n\t\treturn true;\r\n\t}\r\n{code}\r\n\r\nHere is also the code from my client. It only overloads the standard client and adds the str_replace function.\r\n{code:php}\r\n<?php\r\n\r\nclass useKit_Http_Client_Adapter_Socket extends Zend_Http_Client_Adapter_Socket\r\n{\r\n    \/**\r\n     * Send request to the remote server\r\n     *\r\n     * @param string        $method\r\n     * @param Zend_Uri_Http $uri\r\n     * @param string        $http_ver\r\n     * @param array         $headers\r\n     * @param string        $body\r\n     * @return string Request as string\r\n     *\/\r\n    public function write($method, $uri, $http_ver = '1.1', $headers = array(), $body = '')\r\n    {\r\n        \/\/ Make sure we're properly connected\r\n        if (! $this->socket) {\r\n            require_once 'Zend\/Http\/Client\/Adapter\/Exception.php';\r\n            throw new Zend_Http_Client_Adapter_Exception('Trying to write but we are not connected');\r\n        }\r\n\r\n        $host = $uri->getHost();\r\n        $host = (strtolower($uri->getScheme()) == 'https' ? $this->config['ssltransport'] : 'tcp') . ':\/\/' . $host;\r\n        if ($this->connected_to[0] != $host || $this->connected_to[1] != $uri->getPort()) {\r\n            require_once 'Zend\/Http\/Client\/Adapter\/Exception.php';\r\n            throw new Zend_Http_Client_Adapter_Exception('Trying to write but we are connected to the wrong host');\r\n        }\r\n\r\n        \/\/ Save request method for later\r\n        $this->method = $method;\r\n\r\n        \/\/ Build request headers\r\n        $path = $uri->getPath();\r\n        \r\n        $query = str_replace('+', '%20', $uri->getQuery());\r\n                \r\n        if ($uri->getQuery()) $path .= '?' . $query;\r\n        $request = \"{$method} {$path} HTTP\/{$http_ver}\\r\\n\";\r\n        foreach ($headers as $k => $v) {\r\n            if (is_string($k)) $v = ucfirst($k) . \": $v\";\r\n            $request .= \"$v\\r\\n\";\r\n        }\r\n\r\n        if(is_resource($body)) {\r\n            $request .= \"\\r\\n\";\r\n        } else {\r\n            \/\/ Add the request body\r\n            $request .= \"\\r\\n\" . $body;\r\n        }\r\n        \r\n        \/\/ Send the request\r\n        if (! @fwrite($this->socket, $request)) {\r\n            require_once 'Zend\/Http\/Client\/Adapter\/Exception.php';\r\n            throw new Zend_Http_Client_Adapter_Exception('Error writing request to server');\r\n        }\r\n        \r\n        if(is_resource($body)) {\r\n            if(stream_copy_to_stream($body, $this->socket) == 0) {\r\n                require_once 'Zend\/Http\/Client\/Adapter\/Exception.php';\r\n                throw new Zend_Http_Client_Adapter_Exception('Error writing request to server');\r\n            }\r\n        }\r\n\r\n        return $request;\r\n    }\r\n}\r\n{code}\r\n\r\nOn thing I discovered during searching for the bug is, that the Yahoo also implements one function a bit different (the PHP library can be found here: http:\/\/developer.yahoo.com\/social\/sdk\/#php )\r\n\r\nThe url encoding is done as following\r\n\r\n{code:php}\r\nstatic function urlencode_rfc3986($input) {\r\n  ...\r\n str_replace('+', ' ',\r\n                           str_replace('%7E', '~', rawurlencode($input)));\r\n  ...\r\n  }\r\n{code}\r\n\r\nIn the Zend_Oauth_Http_Utility it is:\r\n{code:php}\r\n    public static function urlEncode($value)\r\n    {\r\n        $encoded = rawurlencode($value);\r\n        $encoded = str_replace('%7E', '~', $encoded);\r\n        return $encoded;\r\n    }\r\n{code}\r\n\r\nAs defined in the OAuth Protocol, every URL should be encode with rfc3986. I'm not sure, if the second implementation is also RFC 3986 http:\/\/tools.ietf.org\/html\/rfc3986\r\n\r\nBut like I described before, in the end it wasn't a problem of all the oauth functions, which are creating the right signature. The problem is, that inside the signature the url is encode with rfc3986 which means, it replaces spaces with %20. But then Zend_Http_Client uses http:\/\/ch2.php.net\/manual\/de\/function.http-build-query.php to create the queries, and replaces spaces with +. So the reponse server creates a different signature.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ruflin",
                        "name": "ruflin",
                        "displayName": "Nicolas Ruflin",
                        "active": true
                    },
                    "created": "2010-07-26T15:20:34.000+0000",
                    "updated": "2010-07-26T15:20:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42471",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Fixed in trunk via a patch to Zend_Http_Client to allow for RFC 3986 strict encoding",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2010-10-10T13:19:25.000+0000",
                    "updated": "2010-10-10T13:19:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42473",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ruflin",
                        "name": "ruflin",
                        "displayName": "Nicolas Ruflin",
                        "active": true
                    },
                    "body": "Thanks for the fix.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ruflin",
                        "name": "ruflin",
                        "displayName": "Nicolas Ruflin",
                        "active": true
                    },
                    "created": "2010-10-10T13:55:30.000+0000",
                    "updated": "2010-10-10T13:55:30.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10197\/transitions"
}