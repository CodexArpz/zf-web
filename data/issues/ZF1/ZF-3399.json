{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3399",
    "key": "ZF-3399",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Subclassing Zend_Db_Select\/Zend_Db_Table_Select"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3399\/votes",
                "votes": 8,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=djvirgen",
                "name": "djvirgen",
                "displayName": "Hector Virgen",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-06-05T14:54:12.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-08-31T09:07:58.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Subclasses of Zend_Db_Select cannot be used by Zend_Db_Table_Abstract::select() because it instantiates Zend_Db_Table_Select (which in turn extends Zend_Db_Select). \r\n\r\nThe only way around this is to first copy\/paste the contents of Zend\/Db\/Table\/Select.php and change the class it extends to your custom class. Then, you need to subclass Zend_Db_Table_Abstract and overload Zend_Db_Table_Abstract::select() to instantiate My_Db_Table_Select instead of Zend_Db_Table_Select."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3399\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/10000",
                "name": "Postponed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-6626",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6626",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10181",
                    "id": 10181,
                    "description": "Mini Release",
                    "name": " 1.5.2",
                    "userReleaseDate": "15\/May\/08",
                    "archived": true,
                    "releaseDate": "2008-05-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25286",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "body": "Rather than copy\/paste, we are using a subclass of Zend_Db_Table, which applies the same approach as is used for the row and rowset subclasses:\n\nNew:\n{code:none}\n    \/**\n     * Classname for Table Select statement\n     *\n     * @var string\n     *\/\n    protected $_selectClass = 'Zend_Db_Table_Select';\n{code}\n\nUpdated:\n{code:none}\n    \/**\n     * Returns an instance of a Zend_Db_Table_Select object.\n     *\n     * @return Zend_Db_Table_Select\n     *\/\n    public function select()\n    {\n        @Zend_Loader::loadClass($this->_selectClass);\n        return new $this->_selectClass($this);\n    }\n{code}\n\nI think this code could be copied straight into Zend_Db_Table_Abstract.\n\nThis allows users to override the Table_Select class in the same way they override the row or rowset classes, and would make the class more consistent.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "created": "2008-10-22T03:50:38.000+0000",
                    "updated": "2008-10-22T03:50:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25295",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "body": "_where() might also need to be updated. Currently the class is fixed:\n{code:none}    \/**\n     * Generate WHERE clause from user-supplied string or array\n     *\n     * @param  string|array $where  OPTIONAL An SQL WHERE clause.\n     * @return Zend_Db_Table_Select\n     *\/\n    protected function _where(Zend_Db_Table_Select $select, $where){code}\n\nIf we are allowed to specify our own class, it might not be a sub-class of Zend_Db_Table_Select. \n\nI know that the normal practice would be to subclass Zend_Db_Table_Select and then make any changes necessary, but Zend_Db_Table_Select is a sub-class of Zend_Db_Select and this is also frequently sub-classed (e.g. to support bind variables). I have found it easier to incorporate the functionality I need by sub-classing Zend_Db_Select first (e.g. My_Db_Select extends Zend_Db_Select), and then sub-classing that to inherit the additional functionality at the table level (My_Db_Table_Select extends My_Db_Select). \n\nThis means that I have to keep My_Db_Table_Select as a verbatim copy of Zend_Db_Table_Select, except for the extends clause! It would be better if these classes used composition rather than inheritance, but that is another battle! I'm hoping that Zend_Db_Select will be enhanced to bind variables and I can forget about my sub classes.\n\nIn any case, for people in my situation who are deliberately using a Table Select that is not sub-classed from Zend_Db_Table_Select, the following might be better:\n{code:none}    \/**\n     * Generate WHERE clause from user-supplied string or array\n     *\n     * @param  string|array $where  OPTIONAL An SQL WHERE clause.\n     * @return Zend_Db_Table_Select\n     *\/\n    protected function _where($select, $where)\n    {\n        if (! $select instanceof $this->_selectClass) {\n            $type = gettype($select);\n            if ($type == 'object') {\n                $type = 'an object of class ' . get_class($select);\n            }\n            require_once 'Zend\/Exception.php';\n            throw new Zend_Exception('Select must be a ' . $this->_selectClass . ', but it is ' . $type);\n        }\n        \n        $where = (array) $where;\n\n        foreach ($where as $key => $val) {\n            \/\/ is $key an int?\n            if (is_int($key)) {\n                \/\/ $val is the full condition\n                $select->where($val);\n            } else {\n                \/\/ $key is the condition with placeholder,\n                \/\/ and $val is quoted into the condition\n                $select->where($key, $val);\n            }\n        }\n\n        return $select;\n    }{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "created": "2008-10-22T07:43:09.000+0000",
                    "updated": "2008-10-22T07:43:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25332",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "body": "There are other places where a function requires a Zend_Db_Table_Select, e.g. Zend_Db_Table_Row_Abstract->findDependentRowset, so removing the class requirement and replacing it with the check I suggest above is probably not a good idea as it will be required in many places.\n\nA better approach might be to create Zend_Db_Table_Select_Interface and require that instread. Then our custom classes could just implement the interface.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "created": "2008-10-23T07:07:46.000+0000",
                    "updated": "2008-10-23T07:07:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30311",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "body": "Zend_Db_Adapter is similarly affected. It has variables for $_defaultStmtClass and $_defaultProfilerClass but not one for $_defaultSelectClass. It would be better if the select class could also be changed easily.\n\nI think this requires the addition of:\n{noformat} \n    \/**\n     * Default class name for a Select statement.\n     *\n     * @var string\n     *\/\n    protected $_defaultSelectClass = 'Zend_Db_Select';{noformat} \n\nand:\n{noformat} \n    \/**\n     * Get the default select class.\n     *\n     * @return string\n     *\/\n    public function getSelectClass()\n    {\n        return $this->_defaultSelectClass;\n    }\n\n    \/**\n     * Set the default select class.\n     *\n     * @return Zend_Db_Adapter_Abstract Fluent interface\n     *\/\n    public function setSelectClass($class)\n    {\n        $this->_defaultSelectClass = $class;\n        return $this;\n    }{noformat} \n\nAnd updating:\n{noformat} \n    \/**\n     * Creates and returns a new Zend_Db_Select object for this adapter.\n     *\n     * @return Zend_Db_Select\n     *\/\n    public function select()\n    {\n        return new Zend_Db_Select($this);\n    }{noformat} \n\nTo:\n{noformat} \n    \/**\n     * Creates and returns a new Zend_Db_Select object for this adapter.\n     *\n     * @return Zend_Db_Select\n     *\/\n    public function select()\n    {\n        Zend_Loader::loadClass($this->_defaultSelectClass);\n        return new $this->_defaultSelectClass($this);\n    }{noformat} \n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "created": "2009-04-22T04:58:38.000+0000",
                    "updated": "2009-04-22T04:58:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30313",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "body": "For consistency and completeness we also need getter and setter methods for the $_select in Zend_Db_Table_Abstract:\n\n{noformat}\n    \/**\n     * @param  string $classname\n     * @return Zend_Db_Table_Abstract Provides a fluent interface\n     *\/\n    public function setSelectClass($classname)\n    {\n        $this->_selectClass = (string) $classname;\n\n        return $this;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getSelectClass()\n    {\n        return $this->_selectClass;\n    }{noformat}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhunwicks",
                        "name": "rhunwicks",
                        "displayName": "Roger Hunwicks",
                        "active": true
                    },
                    "created": "2009-04-22T05:51:21.000+0000",
                    "updated": "2009-04-22T05:51:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30941",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "I agree that for such uses cases (that I understand), some interfaces are highly needed.\n\nZend_Db_Select_Interface should then define all the Zend_Db_Select methods that are actually used by Zend classes which use Zend_Db_Select typed params (all ?)\nThe Interface should also define a public function __construct(Zend_Db_Adapter_Abstract $adapter) signature\n\nWe should also create a Zend_Db_Table_Select_Interface extending Zend_Db_Select_Interface and adding Zend_Db_Table_Select methods to it for Zend object using Zend_Db_Table_Select objects as input method params",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-05-13T12:31:50.000+0000",
                    "updated": "2009-05-13T12:31:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33991",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "body": "When extending {{Zend_Db_Select::assemble()}} (to make it able to return only one part of generated SQL SELECT query) I ran into the same problem than Roger Hunwicks's\n{quote}\nI know that the normal practice would be to subclass Zend_Db_Table_Select and then make any changes necessary, but Zend_Db_Table_Select is a sub-class of Zend_Db_Select and this is also frequently sub-classed (e.g. to support bind variables). I have found it easier to incorporate the functionality I need by sub-classing Zend_Db_Select first (e.g. My_Db_Select extends Zend_Db_Select), and then sub-classing that to inherit the additional functionality at the table level (My_Db_Table_Select extends My_Db_Select).\n\nThis means that I have to keep My_Db_Table_Select as a verbatim copy of Zend_Db_Table_Select, except for the extends clause! It would be better if these classes used composition rather than inheritance, but that is another battle! I'm hoping that Zend_Db_Select will be enhanced to bind variables and I can forget about my sub classes.\n{quote}\nAnd copy\/pasting {{Zend_Db_Table_Select}} proper code (the one that differs from {{Zend_Db_Select}}) into {{My_Db_Table_Select}} is quite \"ugly\" but seems to be the only way.\n\nI think using interfaces in {{Zend_Db_Table_Abstract}} instead of concrete classes would be a good step forward.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "created": "2009-08-27T06:50:57.000+0000",
                    "updated": "2009-08-27T06:50:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34540",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "I agree, but this type of change would have to wait till 2.0 time as it would be a mostly-complete rewrite that is needed to facilitate this.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-09-17T11:16:41.000+0000",
                    "updated": "2009-09-17T11:16:41.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3399\/transitions"
}