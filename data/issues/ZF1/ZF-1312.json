{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1312",
    "key": "ZF-1312",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Use getRequest(), getResponse() in front controller"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1312\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10023",
                    "id": 10023,
                    "description": "Release Candidate 1",
                    "name": "1.0.0 RC1",
                    "userReleaseDate": "28\/May\/07",
                    "archived": true,
                    "releaseDate": "2007-05-28",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-05-21T11:53:19.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=emperor",
                "name": "emperor",
                "displayName": "Lukas Kaiser",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-04-25T08:45:16.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:44:06.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend_Controller_Front:dispatch: To get more flexibility, it would be helpful if you don't use a local variable of the request and response object\n\nI like to exchange the hole request or response object in a Controller_Action or a Controller_Plugin. At the moment, it's possible by the method \"setRequest\". But there is no effect in the working dispatch process, because you use a local reference to the old request or response object.\n\nOne example from your actual code:\n{code}Line 754: $dispatcher->dispatch($request, $response);{code}\n\nMy proposal to improve the situation and to make the above use case possible:\n{code}Line 754: $dispatcher->dispatch($this->getRequest (), $this->getResponse());{code}\n\nActually, I like to save a request object to the registry, if the user doesn't have enough privileges, and afterwards, I replace the request object by the old one. This is the concrete example for the use case."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1312\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10070",
                    "id": 10070,
                    "description": "Beta Release; bug fixes",
                    "name": "0.9.2",
                    "userReleaseDate": "06\/Apr\/07",
                    "archived": true,
                    "releaseDate": "2007-04-06",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14378",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assign to Matthew to consider this improvement request.\n\nReworded summary.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-04-26T10:59:48.000+0000",
                    "updated": "2007-04-26T10:59:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14639",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "While I understand to a degree what you wish to do, this adds significant overhead -- instead of passing references, we end up adding no fewer than 9 method calls -- possibly more.\n\nMight I suggest that you instead modify the existing request object? Since it's being passed around by reference, modifying it would modify the same reference used in the dispatch loop and plugins. There are plenty of accessors that may be used to modify it.\n\nIf this does not work, can you please give me a more concrete example of what you're trying to do and why?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-05-16T14:59:02.000+0000",
                    "updated": "2007-05-16T14:59:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14689",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=emperor",
                        "name": "emperor",
                        "displayName": "Lukas Kaiser",
                        "active": true
                    },
                    "body": "I see the problem. So, then I suggest to use:\n{code}\nLine 754: $dispatcher->dispatch($this->_request, $this->_response);\n{code}\n\nThe problem with modifying the existing object is that you can't change the kind of request- or response-object. At the moment, I don't have a good example. But I'm sure, there are.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=emperor",
                        "name": "emperor",
                        "displayName": "Lukas Kaiser",
                        "active": true
                    },
                    "created": "2007-05-21T03:07:12.000+0000",
                    "updated": "2007-05-21T03:07:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14691",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "If you wish to swap out the request object from within userland code, all you need to do is this:\n{code}\nZend_Controller_Front::getInstance()->setRequest($request);\n{code}\nSince PHP 5 passes by reference, and because $request in dispatch() is pointing to the same reference as $this->_request, you can modify it in this fashion.\n\nI have tested this already, and it works fine. Closing as 'Not an Issue'.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-05-21T08:40:28.000+0000",
                    "updated": "2007-05-21T08:40:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14692",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "$request points to the same reference as $this->_request, and can be reset at any time with a different request object by calling setRequest() on the front controller instance.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-05-21T08:41:24.000+0000",
                    "updated": "2007-05-21T08:41:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14694",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=emperor",
                        "name": "emperor",
                        "displayName": "Lukas Kaiser",
                        "active": true
                    },
                    "body": "I don't agree. It doesn't work here. I tested it one two server with almost the newest version of php. Linux and Windows. And I also created a dummy test:\n\n{code}\n<?php\nclass bevor\n{\n\tpublic function getName(){\n\t\treturn('bevor');\n\t}\n}\nclass after\n{\n\tpublic function getName(){\n\t\treturn('after');\n\t}\n}\nclass controller\n{\n\tpublic function preDispatch(){\n\t\t$f = front::getInstance();\n\t\t$f->setRequest(new after());\n\t}\n}\nclass front\n{\n\tprotected $request;\n\tprotected $controller;\n\tprotected static $instance = null;\n\t\n\tprivate function __construct()\n    {\n        $this->controller = new controller();\n    }\n\t\n\tpublic static function getInstance(){\n\t\tif(self::$instance == null){\n\t\t\tself::$instance = new front();\n\t\t}\n\t\treturn self::$instance;\n\t}\n\t\n\tpublic function setRequest($i){\n\t\t$this->request = $i;\n\t}\n\tpublic function getRequest(){\n\t\treturn $this->request;\n\t}\n\tpublic function dispatch(){\n\t\t$this->setRequest(new bevor());\n\t\t$request = $this->getRequest();\n\t\t$request2 = $this->request;\n\t\techo 'Bevor dispatch (local reference by methode): ' . $request->getName() . '<br \/>';\n\t\techo 'Bevor dispatch (local reference by property): ' . $request2->getName() . '<br \/>';\n\t\t$this->controller->preDispatch();\n\t\techo 'After dispatch (local reference by methode): ' . $request->getName() . '<br \/>';\n\t\techo 'After dispatch (local reference by property): ' . $request2->getName() . '<br \/>';\n\t\techo 'After dispatch (property): ' . $this->request->getName() . '<br \/>';\n\t}\n}\n$f = front::getInstance();\n$f->dispatch();\n\n?>\n{code}\n\nresult:\n{quote}\nBevor dispatch (local reference by methode): bevor\nBevor dispatch (local reference by property): bevor\nAfter dispatch (local reference by methode): bevor\nAfter dispatch (local reference by property): bevor\nAfter dispatch (property): after\n{quote}\n\nDo I have a miss configuration?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=emperor",
                        "name": "emperor",
                        "displayName": "Lukas Kaiser",
                        "active": true
                    },
                    "created": "2007-05-21T10:42:09.000+0000",
                    "updated": "2007-05-21T10:42:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14695",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I botched my test scripts. I've created a unit test for this behaviour now, and indeed, it doesn't work as expected. I'm in the process of modifying dispatch() to use $this->_request and $this->_response throughout.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-05-21T11:52:02.000+0000",
                    "updated": "2007-05-21T11:52:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14696",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "verified issue",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-05-21T11:53:02.000+0000",
                    "updated": "2007-05-21T11:53:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14697",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Resolved in r4880.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-05-21T11:53:19.000+0000",
                    "updated": "2007-05-21T11:53:19.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1312\/transitions"
}