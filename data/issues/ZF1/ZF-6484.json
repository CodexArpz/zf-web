{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6484",
    "key": "ZF-6484",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Resource Autoloader does not take any namespace prefix"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6484\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10520",
                    "id": 10520,
                    "description": "Mini Release",
                    "name": "1.11.2",
                    "userReleaseDate": "30\/Dec\/10",
                    "archived": false,
                    "releaseDate": "2010-12-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-07-05T15:19:05.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cmuench",
                "name": "cmuench",
                "displayName": "Christian M\u00fcnch",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-05-01T10:05:56.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-07-05T15:19:05.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "autoloader",
                "namespace"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "It's not possible to set a namespace prefix like \"Foo_Bar\" to the class Zend_Loader_Autoloader_Resource. The class checks the namespace too restrictive.\n\nThe problem is that array_shift only returns the first part. So my namespace must be \"Foo\".\n\nLine: 142\n{code} \nif (!empty($namespaceTopLevel)) {\n    $namespace = array_shift($segments);\n    if ($namespace != $this->getNamespace()) {\n         \/\/ wrong prefix? we're done\n         return false;\n    }\n}\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6484\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-7815",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7815",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-11219",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11219",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10241",
                    "id": 10241,
                    "description": "Minor Release",
                    "name": "1.8.0",
                    "userReleaseDate": "30\/Apr\/09",
                    "archived": false,
                    "releaseDate": "2009-04-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10001",
                    "id": 10001,
                    "name": "Zend_Loader",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30591",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "Assigning to Matthew.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-05-01T10:08:20.000+0000",
                    "updated": "2009-05-01T10:08:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33139",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gildas.de.cadoudal",
                        "name": "gildas.de.cadoudal",
                        "displayName": "Gildas de Cadoudal",
                        "active": false
                    },
                    "body": "I have encoutred the same problem\nfollowing you can find a prosition of solution  which replace the portion of code quote in issue description :\n\n        if (!empty($namespaceTopLevel)) {\n\t\t\tif (strpos($class, $namespaceTopLevel) !== 0) {\n                \/\/ wrong prefix? we're done\n                return false;\n\t\t\t}\n\t\t\t$namespace = substr($class, strlen($namespaceTopLevel)+1);\n\t\t\t$segments = explode('_', $namespace);\n\t\t\t$namespace = $namespaceTopLevel;\n        }\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gildas.de.cadoudal",
                        "name": "gildas.de.cadoudal",
                        "displayName": "Gildas de Cadoudal",
                        "active": false
                    },
                    "created": "2009-08-02T13:14:18.000+0000",
                    "updated": "2009-08-02T13:14:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41056",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Can you demonstrate what your use case is for this? I'm not entirely convinced it makes sense for us to support this, particularly since you can override the resource autoloader yourself and override the appropriate method to drop in the functionality you desire.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-06-18T09:30:02.000+0000",
                    "updated": "2010-06-18T09:30:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41059",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cmuench",
                        "name": "cmuench",
                        "displayName": "Christian M\u00fcnch",
                        "active": true
                    },
                    "body": "I'm writing an CMS application with a plugin system. Each plugin should have an own namespace. The CMS plugin loader iterates over all plugins and registrates the namespace during runtime. All plugins have a namespace prefix \"Plugin_\". So i have i.E. a namespace like \"Plugin_Frontend_Twitter\".\r\nI overwritten the resource loader with my own Loader (Inmon_Cms_Loader_Autoloader_Resource) extended by Zend_Loader_Autoloader_Resource. So i have currently no problem. I think it's ok so. For ZF2 i have to port the CMS to the new plugin system with native PHP namespaces. So you can close the ticket IMHO.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cmuench",
                        "name": "cmuench",
                        "displayName": "Christian M\u00fcnch",
                        "active": true
                    },
                    "created": "2010-06-18T10:51:32.000+0000",
                    "updated": "2010-06-18T10:51:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41122",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=metti",
                        "name": "metti",
                        "displayName": "Christian Opitz",
                        "active": true
                    },
                    "body": "Hi guys,\r\n\r\nhad the same issue. I'm currently writing an implementation of ZF for TYPO3-extensions and there the \"module\" classes (for ZF they are modules; for TYPO3 plugins) are prefixed Tx_MyExt_...\r\n\r\nI registered these modules with the Zend_Application_Module_Autoloader and everything worked fine except that getClassPath returned to early because it checked the toplevel namespace to be 'Tx' while the real one was Tx_ZfextSample_. My hack was then:\r\n\r\n{code:none}\r\n<?php\r\nclass ZfExt_Application_Module_Autoloader extends Zend_Application_Module_Autoloader\r\n{\r\n\t\/**\r\n\t * Overriding the parent method because it behaves wrong when using\r\n\t * prefixed namespaces.\r\n\t * <code>\r\n\t * $loader = new Zend_Loader_Autoloader_Resource(array(\r\n\t *     'namespace' => 'Tx_MyExt',\r\n\t *     'basePath'  => '\/path\/to\/tx_myextension\/plugin\/',\r\n\t * ))\r\n\t * <\/code>\r\n\t * The class names in there are f.i. Tx_MyExt_Model_DbTable_Pages\r\n\t * Problem:\r\n\t * Parent method detects 'Tx' to be it's namespace and not 'Tx_MyExt'\r\n\t * Hacked that here.\r\n\t * \r\n\t * @param string $class\r\n\t * @return string|boolean False if not matched other wise the correct path\r\n\t *\/\r\n\tpublic function getClassPath($class)\r\n\t{\r\n\t\t$namespace = $this->getNamespace();\r\n\t\tif (strpos($class, $namespace) !== 0)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t$this->_namespace = null;\r\n\t\t$classPath = parent::getClassPath($class);\r\n\t\t$this->setNamespace($namespace);\r\n\t\treturn $classPath;\r\n\t}\r\n}\r\n{code}\r\n\r\nCheers,\r\nChristian",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=metti",
                        "name": "metti",
                        "displayName": "Christian Opitz",
                        "active": true
                    },
                    "created": "2010-06-20T18:37:26.000+0000",
                    "updated": "2010-06-20T18:37:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42795",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=far-blue",
                        "name": "far-blue",
                        "displayName": "Robert Goldsmith",
                        "active": true
                    },
                    "body": "I've been trying to configure a per-module autoloader in a post-router plugin (after the module has been calculated) so I can have per-module forms, models etc. and consider the following format for the module namespace to be the 'correct' one: appNameSpace_moduleName. However, as has already bean mentioned, the getClassPath method in the 'module' autoloader assumes that the namespace for an autoloader does not contain the '_' char. Instead of exploding the class path on the '_' char and then comparing with the namespace, the following patch checks and correctly adjusts for any namespace before then continuing as normal by building the file path of a class based only on splitting on '_' chars after the namespace prefix.\r\n{code}\r\n--- Loader\/Autoloader\/Resource.php\t2010-10-29 16:27:36.000000000 +0100\r\n+++ Loader\/Autoloader\/Resource.new.php\t2010-10-29 17:01:22.000000000 +0100\r\n@@ -139,16 +139,24 @@\r\n      *\/\r\n     public function getClassPath($class)\r\n     {\r\n-        $segments          = explode('_', $class);\r\n         $namespaceTopLevel = $this->getNamespace();\r\n         $namespace         = '';\r\n \r\n         if (!empty($namespaceTopLevel)) {\r\n-            $namespace = array_shift($segments);\r\n-            if ($namespace != $namespaceTopLevel) {\r\n-                \/\/ wrong prefix? we're done\r\n+            if (strncmp($class, $namespaceTopLevel, strlen($namespaceTopLevel)) != 0) {\r\n+                \/\/ wrong namespace\r\n                 return false;\r\n+            } else {\r\n+                $segments = explode('_', substr($class, strlen($namespaceTopLevel)));\r\n+                $namespace = $namespaceTopLevel;\r\n             }\r\n+        } else {\r\n+            $segments = explode('_', $class);\r\n+        }\r\n+        \r\n+\r\n+        if($segments[0] == '') {\r\n+            array_shift($segments);\r\n         }\r\n \r\n         if (count($segments) < 2) {\r\n\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=far-blue",
                        "name": "far-blue",
                        "displayName": "Robert Goldsmith",
                        "active": true
                    },
                    "created": "2010-11-01T01:53:26.000+0000",
                    "updated": "2010-11-01T01:53:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46857",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kblomqvist",
                        "name": "kblomqvist",
                        "displayName": "Kim Blomqvist",
                        "active": true
                    },
                    "body": "Seems like this is already resolved in ZF-11219?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kblomqvist",
                        "name": "kblomqvist",
                        "displayName": "Kim Blomqvist",
                        "active": true
                    },
                    "created": "2011-05-28T07:17:57.000+0000",
                    "updated": "2011-05-28T07:17:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47359",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Fixed with ZF-11219 for version 1.11.2.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-07-05T15:19:05.000+0000",
                    "updated": "2011-07-05T15:19:05.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6484\/transitions"
}