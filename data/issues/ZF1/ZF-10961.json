{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10961",
    "key": "ZF-10961",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Refractoring of Zend_Db_Table_Row_Abstract"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/11",
                "name": "Patch",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10961\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=halleck",
                "name": "halleck",
                "displayName": "Jean-Fran\u00e7ois",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-01-18T06:19:43.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-01-22T08:43:29.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In Zend_Db_Table_Row_Abstract :\r\n\r\nIf we want override the \"update in cascade\" behavior, we must actually override the _doUpdate() method.\r\n\r\nI propose to extract the concerned code\r\n\r\n{code}\r\n\r\n\/**\r\n     * @return mixed The primary key value(s), as an associative array if the\r\n     *     key is compound, or a scalar if the key is single-column.\r\n     *\/\r\n    protected function _doUpdate() {\r\n        \/**\r\n         * A read-only row cannot be saved.\r\n         *\/\r\n        if ($this->_readOnly === true) {\r\n            require_once 'Zend\/Db\/Table\/Row\/Exception.php';\r\n            throw new Zend_Db_Table_Row_Exception('This row has been marked read-only');\r\n        }\r\n\r\n        \/**\r\n         * Get expressions for a WHERE clause\r\n         * based on the primary key value(s).\r\n         *\/\r\n        $where = $this->_getWhereQuery(false);\r\n\r\n        \/**\r\n         * Run pre-UPDATE logic\r\n         *\/\r\n        $this->_update();\r\n\r\n        \/**\r\n         * Compare the data to the modified fields array to discover\r\n         * which columns have been changed.\r\n         *\/\r\n        $diffData = array_intersect_key($this->_data, $this->_modifiedFields);\r\n\r\n        \/**\r\n         * Were any of the changed columns part of the primary key?\r\n         *\/\r\n        $pkDiffData = array_intersect_key($diffData, array_flip((array) $this->_primary));\r\n\r\n        \/**\r\n         * Execute cascading updates against dependent tables.\r\n         * Do this only if primary key value(s) were changed.\r\n         *\/\r\n        if (count($pkDiffData) > 0) {\r\n            $this->_doCascadeUpdate();\r\n        }\r\n\r\n        \/**\r\n         * Execute the UPDATE (this may throw an exception)\r\n         * Do this only if data values were changed.\r\n         * Use the $diffData variable, so the UPDATE statement\r\n         * includes SET terms only for data values that changed.\r\n         *\/\r\n        if (count($diffData) > 0) {\r\n            $this->_getTable()->update($diffData, $where);\r\n        }\r\n\r\n        \/**\r\n         * Run post-UPDATE logic.  Do this before the _refresh()\r\n         * so the _postUpdate() function can tell the difference\r\n         * between changed data and clean (pre-changed) data.\r\n         *\/\r\n        $this->_postUpdate();\r\n\r\n        \/**\r\n         * Refresh the data just in case triggers in the RDBMS changed\r\n         * any columns.  Also this resets the _cleanData.\r\n         *\/\r\n        $this->_refresh();\r\n\r\n        \/**\r\n         * Return the primary key value(s) as an array\r\n         * if the key is compound or a scalar if the key\r\n         * is a scalar.\r\n         *\/\r\n        $primaryKey = $this->_getPrimaryKey(true);\r\n        if (count($primaryKey) == 1) {\r\n            return current($primaryKey);\r\n        }\r\n\r\n        return $primaryKey;\r\n    }\r\n\r\n    \/**\r\n     * Update the dependent tables\r\n     *\/\r\n    protected function _doCascadeUpdate() {\r\n        $depTables = $this->_getTable()->getDependentTables();\r\n        if (!empty($depTables)) {\r\n            $pkNew = $this->_getPrimaryKey(true);\r\n            $pkOld = $this->_getPrimaryKey(false);\r\n            foreach ($depTables as $tableClass) {\r\n                $t = $this->_getTableFromString($tableClass);\r\n                $t->_cascadeUpdate($this->getTableClass(), $pkOld, $pkNew);\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nPS: I'm sorry I can not put the code as it is"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10961\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10520",
                    "id": 10520,
                    "description": "Mini Release",
                    "name": "1.11.2",
                    "userReleaseDate": "30\/Dec\/10",
                    "archived": false,
                    "releaseDate": "2010-12-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [

            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10961\/transitions"
}