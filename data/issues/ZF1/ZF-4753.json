{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4753",
    "key": "ZF-4753",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Session_Namespace::setExpirationSeconds does not expire data in files if session abandoned."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4753\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-05T02:43:07.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                "name": "kevin",
                "displayName": "Kevin McArthur",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-10-30T15:03:48.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-05T02:43:07.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "padraic-zf2memo"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When using persistent cookies and multiple session namespaces, setExpirationSeconds does not expire data unless the session is resumed. Abandoned sessions will leave data in the sess_ files well beyond their expire time. \n\nRequested fix is to modify the garbage collection handler to search through sessions and delete expired data.\n\n- This bug may result in a security vulnerability where session data may be stored on the server for longer than acceptable intervals."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4753\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf-caretaker-adamlundrigan",
                "zf-crteam-padraic",
                "zf-crteam-priority",
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                "name": "adamlundrigan",
                "displayName": "Adam Lundrigan",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10252",
                    "id": 10252,
                    "description": "Minor Preview Release",
                    "name": "1.7 Preview Release",
                    "userReleaseDate": "13\/Oct\/08",
                    "archived": true,
                    "releaseDate": "2008-10-13",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10096",
                    "id": 10096,
                    "name": "Zend_Session",
                    "description": "A standardized interface to common functionality found in or indigenous to site session implementations. ",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36315",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "The behaviour described is simply how sessions work in PHP (see http:\/\/php.net\/manual\/en\/ref.session.php).\r\n\r\nSessions are expired at runtime based on the gc_* family of configuration options. If PHP is not active, garbage collection will not run and the sessions will remain indefinitely.\r\n\r\nIf I have misunderstood the issue, please provide code to reproduce.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T10:05:42.000+0000",
                    "updated": "2009-11-20T10:07:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36319",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "This does not have to do with gc_ probability. It has to do with expiration seconds (a ZFW feature). ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2009-11-20T10:18:14.000+0000",
                    "updated": "2009-11-20T10:18:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36321",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "Please provide code to reproduce.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T10:38:37.000+0000",
                    "updated": "2009-11-20T10:38:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36335",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "Don't have any offhand -- but this has to do with the mechanism by which data is expired in Zend_Session's setExpirationSeconds call. Note that this bug was filed over a year ago. \r\n\r\nBasically, and if i remember what was going wrong last year..... setExpirationSeconds is used so that zend_session will delete the data after x seconds... and it will, if that SAME session is reopened. If not, that data will exist until general garbage collection on the server. (Delete on session resume) as such, session data that doesn't get resumed doesn't get deleted on the right schedule.\r\n\r\nThis problem is amplified by long-lived gc expiry cycles, like when using pesistent cookies to pickup sessions potentially weeks later. \r\n\r\nThe fix is to have the resumption of _any_ session to fire into the zfw-specific gc (based on the probability) and to search for data within the sessions that should be expired\/removed with the setExpirationSeconds mechanism.\r\n\r\nThis came up when I was trying to make a dual-zone session... with a data area for shopping cart entries (long lived) and a data area for checkout data (short lived)... with this bug, there's no way to get rid of the short lived data while retaining the long lived data, if that same session is not renewed. As a result, secure data was ending up in the session storage for far longer than was acceptable to the setExpirationSeconds policy.\r\n\r\nHope that clears it up.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2009-11-20T11:43:51.000+0000",
                    "updated": "2009-11-20T11:43:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36349",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "Thanks for the additional explanation.\r\n\r\nThe problem is that garbage collection is, by default and unless otherwise a different save handler is specified, carried out by PHP's default session handler and not by ZF. So in actual fact there is no ZF specific GC... if a save handler is not specified, it's left up to PHP to perform read\/write\/gc etc. Only when a session is accessed and analysed by ZF can it see and act upon an 'expired' (as defined by setExpirationSeconds) session.\r\n\r\nThe reverse of the issue raised is when the gc_maxlifetime is shorter than setExpirationSeconds. In that situation, sessions will likely be expired before the value in setExpirationSeconds is reached, thus rendering it useless. \r\n\r\nThe primary role of Zend_Session is to provide a convenient wrapper and namespace functionality to PHP sessions, not replace or alter the core functionality of ext\/session. Perhaps this could be made clearer in the documentation - session problems are notoriously difficult to pin down and the lack of clarity here possibly muddies the water unnecessarily.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T12:30:38.000+0000",
                    "updated": "2009-11-20T12:30:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36352",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "The ZFW gc is actually part of the constructor, and has nothing to do with php's GC... this handles the expiration seconds and the hop stuff. It is there where this patch needs to be added, and it needs to look beyond its own sesion namespace. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2009-11-20T12:47:00.000+0000",
                    "updated": "2009-11-20T12:47:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36373",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "Only available constructor in Zend_Session_* is Zend_Session_Namespace (as you'd expect):\r\n\r\n{code:xml}\r\npublic function __construct($namespace = 'Default', $singleInstance = false)\r\n{code}\r\n\r\nI understand that, on the surface, if feels like setExpirationSeconds _should_ do what you're suggesting, but for the reasons explained above, it simply can't and a patch won't help.\r\n\r\nThe only thing that could incorporate this kind of logic is a default save handler that overrides PHP's default. Since ZF's policy is to not reproduce functionality that already exists in PHP, this seems unlikely to happen.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-20T15:23:43.000+0000",
                    "updated": "2009-11-20T15:27:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36379",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "You're incorrect on this issue.\r\n\r\nIf you trace how setExpriationSeconds works you'll notice that from the namespace constructor theres a call into Zend_Session::start... which then eventually calls the _process private methods in Zend_Session...\r\n\r\nspecifically    private static function _processStartupMetadataGlobal()    is responsible for processing the time limit. To _fix_ this bug... no save handler needs to be added, just this metadata function expanded to look for other sessions as well as the one currently being operated on. In essence a garbage collector -- which should probably be entered into on a probability.\r\n\r\nThe expiration seconds mechanism has NOTHING to do with the session lifetime from a php perspective.\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2009-11-20T16:07:03.000+0000",
                    "updated": "2009-11-20T16:07:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36385",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "body": "Indeed, the expiration seconds mechanism has nothing to do with the session lifetime, but since they do effectively the same thing it's important to understand how they work and why.\r\n\r\nPut simply, there is no way to operate on a session other than the current one from within a PHP script. _That is the job of the save handler_. If you feel that statement is incorrect, please provide a code snippet which illustrates how you think it could be achieved.\r\n\r\nAs the loop in Zend_Session::_processStartupMetadataGlobal() shows, the setExpirationSeconds value is set in a session namespace's metadata and specific to a namespace (\"setExpirationSeconds() - expire the namespace, or specific variables after a specified\"). Even if it were possible\/desirable\/correct to examine other sessions here, the performance hit would be potentially huge, since every session would need to be read and each namespace examined for an expired value. On busy production websites this could be tens or hundreds of thousands of sessions.\r\n\r\nIf you really wanted to do this, you could write a custom save handler whose gc method read all available sessions and checked each namespace individually for expiry. Alternatively, as a potentially more sensible approach, perhaps you could modify the DbTable savehandler to contain a column with the soonest namespace expiry value.\r\n\r\nEither way, despite being a bit confusing, this is not a bug.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stevehollis",
                        "name": "stevehollis",
                        "displayName": "Steve Hollis",
                        "active": true
                    },
                    "created": "2009-11-21T01:01:53.000+0000",
                    "updated": "2009-11-21T01:01:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47954",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Global session expiration and setExpirationSeconds() are independent processes. Global GC is the responsibility of PHP and\/or save handlers.\n\nThe distinction should be better documented probably since confusing the two can certainly lead to valid security problems which the Zend Framework should do its utmost to avoid. I'll pick it up for ZF2 docs and do something with ZF1 in the near future.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2011-08-14T18:35:37.000+0000",
                    "updated": "2011-08-14T18:35:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47957",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "Can we not close bugs until there is a fix in code. I still consider this a valid bug, it results in a security scenario where data can live on the server beyond the expiration seconds. Its not a communication issue. Its a problem with the code. If ZFW is going to implement an expiration method then it needs a probability based garbage collector to ensure that sessions are actually expired on disk near the 'expiration seconds' demarcation. This has nothing to do with PHP session lifetime which has its own, independent settings, controlls and garbage collection.\r\n\r\nThis remains an open bug with security implications.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2011-08-14T19:15:29.000+0000",
                    "updated": "2011-08-14T19:16:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47958",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "\"Put simply, there is no way to operate on a session other than the current one from within a PHP script. That is the job of the save handler. If you feel that statement is incorrect, please provide a code snippet which illustrates how you think it could be achieved.\"\r\n\r\nThis statement is incorrect, the ZFW session is distinct from the PHP session. The sessions can be looked at on disk or via session_id()\/session_start() and session_write_close().\r\n\r\nThe Zend-Specific GC should be entered via a probability. It should register a shutdown handler, (such that the page request is not delayed) and it should loop through the list of active sessions using setExpirationSeconds which, with minor modifications, could be tracked in a separate zend-specific hash table.\r\n\r\nOne day I'll get around to fixing this bug, but until then, please leave it open and or correct it properly in code.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2011-08-14T19:23:06.000+0000",
                    "updated": "2011-08-14T19:23:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47960",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "I'll make you a deal. I won't close it, again, if you report it to the zf-security email address for resolution within a timeframe you deem acceptable. If it is a valid security concern, it should not be left on the issue tracker for years at a time to be taken advantage of.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2011-08-14T20:40:25.000+0000",
                    "updated": "2011-08-14T20:40:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47961",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "Fair enough, i'll post a note there to review ZF-4753.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2011-08-14T20:43:30.000+0000",
                    "updated": "2011-08-14T20:43:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48726",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Has there been any progress\/decision on this issue from zf-security?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-17T19:25:42.000+0000",
                    "updated": "2011-10-17T19:25:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50027",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "I'm going to take that as a no. IMHO, this may not necessarily need a fix this late in ZFv1's lifecycle, but there should at least be a \"here be dragons\" cautionary tale added to the manual so at least devs can make an informed decision and take any mitigating actions they feel are necessary.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-03-13T19:20:34.000+0000",
                    "updated": "2012-03-13T19:20:34.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4753\/transitions"
}