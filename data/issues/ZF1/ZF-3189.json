{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3189",
    "key": "ZF-3189",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Http_Client_Adapter_Proxy::connectHandshake ignores useragent set in headers"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3189\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10510",
                    "id": 10510,
                    "description": "Minor Release",
                    "name": "1.12.0",
                    "userReleaseDate": "27\/Aug\/12",
                    "archived": false,
                    "releaseDate": "2012-08-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-28T18:50:04.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=brownoxford",
                "name": "brownoxford",
                "displayName": "Chris Abernethy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-05-02T12:09:51.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-28T19:07:33.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "If the user-agent is specified in the headers, as opposed to via setConfig(), the default UA of Zend_Http_Client is used for CONNECT requests by the proxy adapter.\r\n\r\nI'm not too familiar with proxy servers, but there could be issues if the CONNECT request uses one UA and the actual request uses another. It seems like setting the UA via setHeaders should overwrite the useragent config item."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3189\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "FixForZF1.12",
                "zf-caretaker-adamlundrigan",
                "zf-crteam-padraic",
                "zf-crteam-priority"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                "name": "adamlundrigan",
                "displayName": "Adam Lundrigan",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/14673",
                    "filename": "ZF-3189.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-05T14:20:38.000+0000",
                    "size": 6558,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/14673\/ZF-3189.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10174",
                    "id": 10174,
                    "description": "Mini Release",
                    "name": "1.5.1",
                    "userReleaseDate": "25\/Mar\/08",
                    "archived": true,
                    "releaseDate": "2008-03-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10088",
                    "id": 10088,
                    "name": "Zend_Gdata",
                    "description": "Class interface to Google Data API's.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22253",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please evaluate and fix\/categorize as necessary.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-06-09T13:32:44.000+0000",
                    "updated": "2008-06-09T13:32:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44437",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Do you have any code to demonstrate this issue?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2011-02-17T15:10:19.000+0000",
                    "updated": "2011-02-17T15:10:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47009",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "In tracing through the code, I noticed the following:  Zend_Http_Client::request() calls Zend_Http_Client::_prepareHeaders(), which returns a numerically-indexed array of headers in 'name: value' format.  That array is then passed to the adapter via an argument to it's connect() method.  However, Zend_Http_Client_Adapter_Proxy::connect() treats $headers as an associative array of HeaderName=>HeaderValue pairs. \r\n\r\nDid I miss something there, or is that actually the case?  If it is, then Zend_Http_Client_Adapter_Proxy needs to be reworked to reflect that, as it uses $headers as an associative array in many places. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-06-07T02:34:34.000+0000",
                    "updated": "2011-06-07T02:44:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47010",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "It looks to me that the culprit is here:\r\n{code:title=Zend_Http_Client_Adapter_Proxy, Line 207}\r\n\/\/ Add the user-agent header\r\nif (isset($this->config['useragent'])) {\r\n    $request .= \"User-agent: \" . $this->config['useragent'] . \"\\r\\n\";\r\n}\r\n{code}\r\nThe config key 'useragent' always exists, as it has a default defined in Zend_Http_Client.  In the connectHandshake() snippet above, the User-agent header will be set up with that default value (Zend_Http_Client) regardless of what might be set in $headers, as none of those headers are sent during the CONNECT handshake.  As the original poster says, this may cause the CONNECT handshake and the subsequent request to have different UAs. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-06-07T03:06:07.000+0000",
                    "updated": "2011-06-07T03:06:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48603",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Test to reproduce the issue:\r\n{code}\r\nIndex: tests\/Zend\/Http\/Client\/ProxyAdapterTest.php\r\n===================================================================\r\n--- tests\/Zend\/Http\/Client\/ProxyAdapterTest.php (revision 24490)\r\n+++ tests\/Zend\/Http\/Client\/ProxyAdapterTest.php (working copy)\r\n@@ -118,4 +118,73 @@\r\n          * the TRACE response\r\n          *\/\r\n     }\r\n+\r\n+    \/**\r\n+     * @group ZF-3189\r\n+     *\/\r\n+    public function testConnectHandshakeSendsCustomUserAgentHeader()\r\n+    {\r\n+        \/\/ Change the adapter\r\n+        $this->config['adapter'] = 'ZF3189_ProxyAdapter';\r\n+        $this->config['useragent'] = 'ZendTest';\r\n+        parent::setUp();\r\n+\r\n+        $base = preg_replace(\"\/^http:\/\", \"https:\", $this->baseuri);\r\n+        $this->client->setUri($base . 'testSimpleRequests.php');\r\n+\r\n+        \/\/ Ensure we're proxying a HTTPS request\r\n+        $this->assertEquals('https', $this->client->getUri()->getScheme());\r\n+\r\n+        \/\/ Perform the request\r\n+        $this->client->request();\r\n+\r\n+        $this->assertContains(\r\n+            \"User-agent: {$this->config['useragent']}\",\r\n+            $this->client->getAdapter()->getLastConnectHandshakeRequest()\r\n+        );\r\n+    }\r\n+\r\n+    \/**\r\n+     * @group ZF-3189\r\n+     *\/\r\n+    public function testConnectHandshakeSendsCustomUserAgentHeaderWhenSetInHeaders()\r\n+    {\r\n+        \/\/ Change the adapter\r\n+        $this->config['adapter'] = 'ZF3189_ProxyAdapter';\r\n+        parent::setUp();\r\n+\r\n+        $base = preg_replace(\"\/^http:\/\", \"https:\", $this->baseuri);\r\n+        $this->client->setUri($base . 'testSimpleRequests.php');\r\n+        $this->client->setHeaders('User-Agent', 'ZendTest');\r\n+\r\n+        \/\/ Ensure we're proxying a HTTPS request\r\n+        $this->assertEquals('https', $this->client->getUri()->getScheme());\r\n+\r\n+        \/\/ Perform the request\r\n+        $this->client->request();\r\n+        print_r($this->client->getAdapter()->getLastConnectHandshakeRequest());\r\n+        $this->assertContains(\r\n+            \"User-agent: ZendTest\",\r\n+            $this->client->getAdapter()->getLastConnectHandshakeRequest()\r\n+        );\r\n+    }\r\n+\r\n }\r\n+\r\n+\/**\r\n+ * Exposes internal variable connectHandshakeRequest for test purposes\r\n+ * @see ZF-3189\r\n+ *\/\r\n+class ZF3189_ProxyAdapter extends Zend_Http_Client_Adapter_Proxy\r\n+{\r\n+\r\n+    \/**\r\n+     * Retrieve the request data from last CONNECT handshake\r\n+     * @return string\r\n+     *\/\r\n+    public function getLastConnectHandshakeRequest()\r\n+    {\r\n+        return $this->connectHandshakeRequest;\r\n+    }\r\n+\r\n+}\r\n\\ No newline at end of file\r\nIndex: library\/Zend\/Http\/Client\/Adapter\/Proxy.php\r\n===================================================================\r\n--- library\/Zend\/Http\/Client\/Adapter\/Proxy.php  (revision 24490)\r\n+++ library\/Zend\/Http\/Client\/Adapter\/Proxy.php  (working copy)\r\n@@ -75,6 +75,13 @@\r\n      * @var boolean\r\n      *\/\r\n     protected $negotiated = false;\r\n+\r\n+    \/**\r\n+     * Stores the last CONNECT handshake request\r\n+     *\r\n+     * @var string\r\n+     *\/\r\n+    protected $connectHandshakeRequest;\r\n\r\n     \/**\r\n      * Connect to the remote server\r\n@@ -217,6 +224,9 @@\r\n         }\r\n\r\n         $request .= \"\\r\\n\";\r\n+\r\n+        \/\/ @see ZF-3189\r\n+        $this->connectHandshakeRequest = $request;\r\n\r\n         \/\/ Send the request\r\n         if (! @fwrite($this->socket, $request)) {\r\n{code}\r\n\r\nThe first test ({{testConnectHandshakeSendsCustomUserAgentHeader}}) will pass, as setting the user agent in the client configuration works as expected.  However, the second test ({{testConnectHandshakeSendsCustomUserAgentHeaderWhenSetInHeaders}}) currently fails for the reason the OP suggested: {{connectHandshake}} does not check to see if {{$headers}}} defines a user agent header.\r\n\r\nMy reproduction test required a slight modification to {{Zend_Http_Client_Adapter_Proxy}} so that it would record the request headers sent during the {{connectHandshake}} method call.  Rather than change the public API of {{Zend_Http_Client_Adapter_Proxy}}, I added a protected variable to store the request, then created a test-specific adapter class ({{ZF3189_ProxyAdapter}}) to expose it. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-04T15:31:23.000+0000",
                    "updated": "2011-10-04T15:31:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48604",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Suggested fix:\r\n{code}\r\nIndex: library\/Zend\/Http\/Client\/Adapter\/Proxy.php\r\n===================================================================\r\n--- library\/Zend\/Http\/Client\/Adapter\/Proxy.php  (revision 24490)\r\n+++ library\/Zend\/Http\/Client\/Adapter\/Proxy.php  (working copy)\r\n@@ -136,10 +136,20 @@\r\n         }\r\n\r\n         \/\/ Add Proxy-Authorization header\r\n-        if ($this->config['proxy_user'] && ! isset($headers['proxy-authorization'])) {\r\n-            $headers['proxy-authorization'] = Zend_Http_Client::encodeAuthHeader(\r\n-                $this->config['proxy_user'], $this->config['proxy_pass'], $this->config['proxy_auth']\r\n-            );\r\n+        if ($this->config['proxy_user']) {\r\n+            \/\/ Check to see if one already exists\r\n+            $hasProxyAuthHeader = false;\r\n+            foreach ($headers as $k => $v) {\r\n+                if ($k == 'proxy-authorization' || preg_match(\"\/^proxy-authorization:\/i\", $v) ) {\r\n+                    $hasProxyAuthHeader = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+            if (!$hasProxyAuthHeader) {\r\n+                $headers[] = 'Proxy-authorization: ' . Zend_Http_Client::encodeAuthHeader(\r\n+                    $this->config['proxy_user'], $this->config['proxy_pass'], $this->config['proxy_auth']\r\n+                );\r\n+            }\r\n         }\r\n\r\n         \/\/ if we are proxying HTTPS, preform CONNECT handshake with the proxy\r\n@@ -204,18 +214,18 @@\r\n         $request = \"CONNECT $host:$port HTTP\/$http_ver\\r\\n\" .\r\n                    \"Host: \" . $this->config['proxy_host'] . \"\\r\\n\";\r\n\r\n-        \/\/ Add the user-agent header\r\n-        if (isset($this->config['useragent'])) {\r\n-            $request .= \"User-agent: \" . $this->config['useragent'] . \"\\r\\n\";\r\n+        \/\/ Process provided headers, including important ones to CONNECT request\r\n+        foreach ( $headers as $k=>$v ) {\r\n+            switch ( strtolower(substr($v,0,strpos($v,':'))) ) {\r\n+                case 'proxy-authorization':\r\n+                    \/\/ break intentionally omitted\r\n+                case 'user-agent':\r\n+                    $request .= $v . \"\\r\\n\";\r\n+                    break;\r\n+                default:\r\n+                    break;\r\n+            }\r\n         }\r\n-\r\n-        \/\/ If the proxy-authorization header is set, send it to proxy but remove\r\n-        \/\/ it from headers sent to target host\r\n-        if (isset($headers['proxy-authorization'])) {\r\n-            $request .= \"Proxy-authorization: \" . $headers['proxy-authorization'] . \"\\r\\n\";\r\n-            unset($headers['proxy-authorization']);\r\n-        }\r\n-\r\n         $request .= \"\\r\\n\";\r\n\r\n         \/\/ Send the request\r\n{code}\r\n\r\nTwo things here:\r\n * Rejig the authorization header processing {{Zend_Http_Client_Adapter_Proxy::write}} to properly detect an existing Proxy-Authorization header (old method assumed that $headers was a header=>value associative array, which it isn't. \r\n * Update {{Zend_Http_Client_Adapter_Proxy::connectHandshake}} to pass User-Agent and Proxy-Authorization headers through to CONNECT request. \r\n\r\nI've also added a third test to enforce that {{Zend_Http_Client_Adapter_Proxy::write}} does indeed properly detect a preexisting Proxy-Authorization header:\r\n{code}\r\n    \/**\r\n     * @group ZF-3189\r\n     *\/\r\n    public function testProxyAdapterDoesNotOverwriteExistingProxyAuthorizationHeader()\r\n    {      \r\n        \/\/ Change the adapter\r\n        $this->config['adapter'] = 'ZF3189_ProxyAdapter';\r\n        parent::setUp();\r\n        \r\n        $base = preg_replace(\"\/^http:\/\", \"https:\", $this->baseuri);\r\n        $this->client->setUri($base . 'testSimpleRequests.php');\r\n        $this->client->setHeaders('Proxy-Authorization', 'FooBarBaz');\r\n\r\n        \/\/ Ensure we're proxying a HTTPS request\r\n        $this->assertEquals('https', $this->client->getUri()->getScheme());\r\n        \r\n        \/\/ Perform the request\r\n        $this->client->request();\r\n        print_r($this->client->getAdapter()->getLastConnectHandshakeRequest());\r\n        \r\n        $resp = $this->client->getAdapter()->getLastConnectHandshakeRequest();\r\n        $this->assertEquals(1, preg_match_all('\/\\r\\nProxy-Authorization: ([^\\r\\n]+)\\r\\n\/i', $resp, $matches));\r\n        $this->assertEquals('FooBarBaz', $matches[1][0]);\r\n    }\r\n{code}\r\n\r\nThoughts?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-04T15:56:14.000+0000",
                    "updated": "2011-10-04T16:00:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50636",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "I would like to have this fixed in ZF 1.12.0.  Could someone with a proxy setup already in place test out this patch to ensure it works as expected?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-12T19:40:31.000+0000",
                    "updated": "2012-05-12T19:40:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50783",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Fixed in svn r24818.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-05-28T18:50:04.000+0000",
                    "updated": "2012-05-28T18:50:04.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3189\/transitions"
}