{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11833",
    "key": "ZF-11833",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Backend Static Cache clean method do not support the Zend_Cache::CLEANING_MODE_MATCHING_TAG mode"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11833\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=janos",
                "name": "janos",
                "displayName": "Janos Thiele",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-10-20T08:57:43.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-11-03T08:46:42.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "CLEANING_MODE_MATCHING_TAG",
                "backend",
                "cache",
                "static"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend_Cache_Backend_Static::clean() does not implement the option Zend_Cache::CLEANING_MODE_MATCHING_TAG.\r\n\r\nIn this case the implementation from CLEANING_MODE_MATCHING_ANY_TAG is used. Which issn't the same! \r\nCLEANING_MODE_MATCHING_TAG: Should be used for an \"and\" conitioning of given tags.\r\nCLEANING_MODE_MATCHING_ANY_TAG: Should be used for an \"or\" conitioning of given tags.\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10037",
                "value": "   Must Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11833\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "cache"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10981",
                    "id": 10981,
                    "description": "Mini Release",
                    "name": "1.11.11",
                    "userReleaseDate": "29\/Sep\/11",
                    "archived": false,
                    "releaseDate": "2011-09-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48747",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=janos",
                        "name": "janos",
                        "displayName": "Janos Thiele",
                        "active": true
                    },
                    "body": "The solution for me was to implement the case case *Zend_Cache::CLEANING_MODE_MATCHING_TAG:*\r\n\r\n{code:php|borderStyle=solid}\r\n\r\n            case Zend_Cache::CLEANING_MODE_MATCHING_TAG:\r\n                \r\n                if (empty($tags)) {\r\n                    throw new Zend_Exception('Cannot use tag matching modes as no tags were defined');\r\n                }\r\n                \r\n                if ($this->_tagged === null && $tagged = $this->getInnerCache()->load(self::INNER_CACHE_NAME)) {\r\n                    $this->_tagged = $tagged;\r\n                } elseif (!$this->_tagged) {\r\n                    return true;\r\n                }\r\n                \r\n                $urls = array_keys($this->_tagged);\r\n                foreach ($urls as $url) {\r\n                    if (isset($this->_tagged[$url]['tags'])) {\r\n\r\n                        $count = 0;\r\n                        \r\n                        foreach ($tags as $tag) {\r\n                            if (in_array($tag, $this->_tagged[$url]['tags'])) {\r\n                                $count++;\r\n                            }\r\n                        }\r\n                        \r\n                        if ($count == count($tags)) {\r\n                            $this->remove($url);\r\n                            unset($this->_tagged[$url]);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                $this->getInnerCache()->save($this->_tagged, self::INNER_CACHE_NAME);\r\n                $result = true;\r\n                break;\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=janos",
                        "name": "janos",
                        "displayName": "Janos Thiele",
                        "active": true
                    },
                    "created": "2011-10-20T09:05:49.000+0000",
                    "updated": "2011-10-20T09:05:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48851",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Can this change be safely implemented without breaking backwards-compatibility?  Any code in the wild using {{Zend_Cache::CLEANING_MODE_MATCHING_TAG}} will behave differently than the original developer expected if this cleaning mode is (re-)implemented properly. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-28T15:39:51.000+0000",
                    "updated": "2011-10-28T15:39:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48970",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=janos",
                        "name": "janos",
                        "displayName": "Janos Thiele",
                        "active": true
                    },
                    "body": "I guess so. \r\nOtherwise the developers has sed the Zend_Cache::CLEANING_MODE_MATCHING_TAG in the worng way!? \r\n\r\nThe documentation clearly says: \r\n{quote}If you want to remove cache entries matching the tags 'tagA' *and* 'tagC':\r\n\r\n    $cache->clean(\r\n        Zend_Cache::CLEANING_MODE_MATCHING_TAG,\r\n        array('tagA', 'tagC')\r\n    );{quote}\r\n\r\nand \r\n\r\n{quote}\r\nIf you want to remove cache entries matching the tags 'tagA' *or* 'tagC':\r\n\r\n    $cache->clean(\r\n        Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG,\r\n        array('tagA', 'tagC')\r\n    );\r\n{quote}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=janos",
                        "name": "janos",
                        "displayName": "Janos Thiele",
                        "active": true
                    },
                    "created": "2011-11-03T08:46:42.000+0000",
                    "updated": "2011-11-03T08:46:42.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11833\/transitions"
}