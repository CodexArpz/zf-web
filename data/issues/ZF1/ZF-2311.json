{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2311",
    "key": "ZF-2311",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Locale_Data :  add a registry to store the retrieved data and make them available upon next call"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2311\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-01-15T16:15:38.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                "name": "laurent melmoux",
                "displayName": "Laurent Melmoux",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-12-14T09:15:57.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-01-15T16:15:38.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Add a few lines in Zend_Locale_Data:: getContent() to store the data from the cache in Zend_Registy, so on next call they are pull out from the registry and speed up thing.\n\nIn the patch above this is done if the cache is enable but it is probably better to cach it even if the cache is not on.\n\n\n\n\nHere is a patch\n\nIndex: Data.php\n===================================================================\n--- Data.php\t(revision 7119)\n+++ Data.php\t(working copy)\n\n@@ -263,9 +263,14 @@\n                 $val = implode('_' , $value);\n             }\n             $id = strtr('Zend_Locale_' . $locale . '_' . $path . '_' . $val, array('-' => '_', '\/' => '_'));\n-            if ($result = self::$_cache->load($id)) {\n-                return unserialize($result);\n+            if(Zend_Registry::isRegistered($id)){\n+                return Zend_Registry::get($id);\n             }\n+            elseif ($result = self::$_cache->load($id)) {\n+                $result = unserialize($result);\n+                Zend_Registry::set($id, $result);\n+                return $result;\n+            }\n         }\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2311\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/10970",
                    "filename": "Zend_Locale_Data_Registry.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-14T09:16:49.000+0000",
                    "size": 773,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/10970\/Zend_Locale_Data_Registry.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10140",
                    "id": 10140,
                    "description": "Mini Release",
                    "name": "1.0.3",
                    "userReleaseDate": "30\/Nov\/07",
                    "archived": true,
                    "releaseDate": "2007-11-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10073",
                    "id": 10073,
                    "name": "Zend_Locale",
                    "description": "Zend_Locale is a basic wrapper for all I18N and L10N issues for the Zend Framework. It provides the userbasically with access to translation functionality. It can handle different source file types for translation.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17920",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "the patch",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-14T09:16:49.000+0000",
                    "updated": "2007-12-14T09:16:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17985",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "This depends on the used cache.\n\nI don't expect any difference if you are using memcached or registry for example.\nMaybe memcached is even faster than registry depending on how much registry settings you have within your session.\n\nIf you use file-based on the other hand, you will get quite different results showing a measureable slowing depending on how fast files are read on your machine.\n\nGenerally I think that having 2 different caching mechanism integrated is useless.\nBtw: You will of course only expect a speedup on the second request, when the setting already has been cached.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-12-17T16:47:19.000+0000",
                    "updated": "2007-12-17T16:47:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17986",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "{quote}You will of course only expect a speedup on the second request, {quote}\nYes that true. It's a request feature to find a way to seep up Zend_Date when you have to display several dates on the same script (mostly records listing with 20 to 100 records).\n\nI think something which could seep up thing is to provide a serialized version of CLDR instead of the xml one. Like that we don't need anymore cache file. If the user has setup a cache the class uses it, if not it use an internal registry cache. \nAnother advantage of the serialized version of CLDR is it is more little weight 1,7Mo instead of 8Mo.\n\nWe also have a performance lost because for each part of the date you have a read the xlm file. I guess we could gain some speed by reading the full calendar data at once and store it in the registry for later call.\n\nWhat do you think about that ?\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-18T13:25:57.000+0000",
                    "updated": "2007-12-18T13:25:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17988",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "Is there a way to use the new php DateTime class to speed thing for php version >= 5.2.0",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-18T13:31:58.000+0000",
                    "updated": "2007-12-18T13:31:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17991",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "No, this does not help.\n\nIt all depends on your cache settings. If you set your cache to resist for 1 year, for example, it would also work.\nThis would not work with the registry.\n\nRelated to CLDR... it is not possible to change the CLDR files.\nThis is not allowed from unicode and it would also produce problems with any new version (the next is coming in about 2-6 weeks). It would also import new problems,because the data is not avaiable in one language, it's linked from one language to another, sometimes even through 4 languages.\n\nBtw: The CLDR is already simplified before integration, original it has about 50% more content.\n\nThe performance loss is solved with the cache, if you don't set it, you will also get no performance boost.\nAnd reading the complete calendar data is useless... there is much data which you will never use... f.e. the calendar data for the japanese will never be used, except you are a japanese :-)\n\nRelated to DateTime... actually we have a minimum requirement of php5.1.4 which does not include the datetime class per default. Also to mention, the datetime class produced several other issues, because it can only handle dates from 0 to 9999, and it has some other disadvantages.\nBut as long as the minimum requirements are not raised there is no way to use the new DateTime class.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-12-18T14:10:47.000+0000",
                    "updated": "2007-12-18T14:10:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17997",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "{quote}Related to CLDR... it is not possible to change the CLDR files.{quote}\nI did not mean to change CLDR, but provide a serialized instance instead of plain xml.\n\n{quote}it would also produce problems with any new version{quote}\nWe just need a script able to do the conversion each time a new realise of the CLDR is out\n\n{quote}The CLDR is already simplified before integration, original it has about 50% more content.{quote}\nSo it is allowed to changed the CLDR :)\n\n{quote}And reading the complete calendar data is useless... there is much data which you will never use...{quote}\nI didn't mean to load the whole calendar with all languages, but a specific calendar (ex. Gregorian) in a specific locale (ex. fr)\n\n{quote}Related to DateTime... actually we have a minimum requirement of php5.1.4{quote}\nYes, we can keep this requirement but have a test to see if a function like date_create exist and if so use specific code for php5.2.0\n\n{quote}it can only handle dates from 0 to 9999{quote}\nIt's the 80% of the use cases\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-19T03:00:22.000+0000",
                    "updated": "2007-12-19T03:00:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17998",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Don't get me wrong, but I don't want to have legal problems because of unallowed changes of the CLDR data.\nWe just stripped the additional comments, which is allowed.\n\nAnd related to DateTime... there is a absolute no-go as long as we have 5.1.4 supported.\nBtw: I found out that DateTime itself is not so fast when you do DateMath beyound 1901 or after 2037. I already did some research in the past.\n\nZend_Date itself will be completly reworked as soon as ZF raises it's minimum requirements to 5.2... this was discussed in the past with the dev-team.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-12-19T03:13:27.000+0000",
                    "updated": "2007-12-19T03:13:27.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18001",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "{quote}Don't get me wrong, but I don't want to have legal problems because of unallowed changes of the CLDR data.{quote}\n\nI'm just teasing you Thomas \n\nI understand that date calculation is not an easy task, the fact is I really like the Zend_Date API but the speed is a blocker for me. \n\nI'm probably going to wait until its rework for php 5.2.0. before using it. If I can get some time I'll try a few thing to see if I can improve speed.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-19T06:06:50.000+0000",
                    "updated": "2007-12-19T06:06:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18005",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Wil forwarded me a new PECL component which would come very handy if it's finished...\n\nhttp:\/\/docs.php.net\/manual\/en\/book.intl.php\n\nIf will be integrated with PHP 5.3 and could completly solve our speed problem with the CLDR data.\nThis could be possible because the time and amount of codelines for integrating it is not so big.\n\nOf course, if you find a good way to speed up the whole class I would be willing to do all my best to integrate it :-)\nI think there are actually two bottlenecks...\nOne is the CLDR data and the time to parse multiple xml files... this is dramatically reduced by the cache (if set properly) but could be reduced more with this PECL component.\nSecond is the date calculation itself.\n\nA possible way to speed to the class is related to it's size... it is about 4500 lines big, but from this 4500 lines are about 2500 only documentation lines.\nSo a shortterm solution would be to strip all API docs for the production server. ;-)\n\nIf wou are willing it would be great if you could look in details and make some profiling for the locale class and\/or the date class for the actual trunk. Maybe I oversaw something or there is a bottleneck which could be fixed.\nAs myself has really much work (Translation View Helper, Translationable Exception, Phone integration, German Documentation, Http_Upload, SQL Adapter, and and and) I am actually really not able to put big amount of time into profiling.\nBut I will keep this issue opened so we won't forget about it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-12-19T07:23:51.000+0000",
                    "updated": "2007-12-19T07:23:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18007",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "I don't know well the internal of Zend_Date so I don't know well what is possible or not.\nBut as you said the 2 main bottlenecks are the CLDR and the date calculation. I have a few ideas than I need to explore if my time permit it.\n\n\n*About CLDR*\n\nFor example if I do:\n{code}\n$zDate->set($dateString, 'YYYY-MM-dd HH:mm:ss');\necho $zDate->get('dd\/MM\/YYYY'); \n{code}\n\nI know how the date is formatted and I need an output which is not local sensible so for this use case we shouldn't access at all to the CLDR file.\n\nWe could also had an Zend_Date::format() method which will not be local aware.\n\nI'm persisting to say that reading the CLDR file in bigger chuck could improve a bit performance, but I need to do some test to verify that assumption. \n\n\n*Date calculation and class size*\n\nThe class could be split in 2 or more class. \n\nFore example Zend_Date would deal with dates in a range of 0 - 9999 which is the 80% uses cases. If date_create() and date_parse()  functions exist make use of it (I persist :) )\n\nThan if you need a wider date rage you just use Zend_Date_Big \n\nMay be move all date calculation could be move to Zend_Date_Calendar wich will need an instance of Zend_Date or Zend_Date_Big at construction time. But here we introduce a BC break. May be it is acceptable for ZF version 1.2?\n\n\nMay be a call for volunteers to find solution for those bottleneck in the i18n mailing list? :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-19T08:16:58.000+0000",
                    "updated": "2007-12-19T08:16:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18008",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "{quote}\nWil forwarded me a new PECL component which would come very handy if it's finished...\nhttp:\/\/docs.php.net\/manual\/en\/book.intl.php\nIf will be integrated with PHP 5.3 and could completly solve our speed problem with the CLDR data.\n{quote}\n\nYep, the integration of ICU inside php is going to be a real win! But I though it was expect to php6. It would be nice to have it in php 5.3. \n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-19T08:32:15.000+0000",
                    "updated": "2007-12-19T08:32:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18010",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "According to the url you provided it seams possible to have ICU integrated with php 5.1.3+ and 5.2.0+ :)\n\nhttp:\/\/docs.php.net\/manual\/en\/intl.setup.php\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-19T08:45:24.000+0000",
                    "updated": "2007-12-19T08:45:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18011",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "You are throwing together two things.\n\nOne is CLDR \/ Zend_Locale, the other is Zend_Date\/DateTime.\nThey have to be viewed completly seperated.\n\nIn your example the CLDR is not accessed.\nYou will only have the creation of a locale instance at creation of the date, and this is nothing where the CLDR is accessed.\n\nCLDR is only accessed when we normalize or localize a date.\n\nBC break is not acceptable.\nActually no volunteers... for all works which had been done by \"volunteers\" I had to rework almost everything and do unit tests and docu... it took me more time that if I would have done it alone... therefor no volunteers.\n\nThe API is so simple because it's not seperated into several classes like in other languages (one for date, one for time, one for datetime and so on...). There must be another way that having the customer be aware of what dates to want to use. I have enough ideas about how to seperate them, but still it's no easy task... the original date implementation took me about 4 months. And this amount of time will also the rewrite need.\n\nI think we should seperate the whole thing...\nThis issue is for speeding up Zend_Locale. It has nothing to do with Zend_Date.\nOtherwise it would be unreadable, and I hate it when several independent things are thrown into one pot.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-12-19T08:53:43.000+0000",
                    "updated": "2007-12-19T08:53:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18012",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "No, ICU is still a experimental extension.\nNot avaiable in PHP 5.2 for now at distribution.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-12-19T08:54:59.000+0000",
                    "updated": "2007-12-19T08:54:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18032",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "{quote}\nThe API is so simple because it's not seperated into several classes like in other languages (one for date, one for time, one for datetime and so on...). There must be another way that having the customer be aware of what dates to want to use. I have enough ideas about how to seperate them, but still it's no easy task... the original date implementation took me about 4 months. And this amount of time will also the rewrite need.\n{quote}\nYes I understand that a lot of time is involved, so it's probably best to leave it as it is, and throw ideas for a rewrite with ZF 2.0\n\n{quote}\nI think we should seperate the whole thing...\nThis issue is for speeding up Zend_Locale. It has nothing to do with Zend_Date.\nOtherwise it would be unreadable, and I hate it when several independent things are thrown into one pot.\n{quote}\nYes I do agree with that.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2007-12-21T03:11:42.000+0000",
                    "updated": "2007-12-21T03:11:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18352",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "After comparison Zend_Cache with Zend_Registry we found out that there is no measurable difference between the two.\n\nIt is useless to implement two caching mechanism. With Zend_Cache the user has the benefit to select which mechanism fit's best for him.\n\nAlso CLDR and Zend_Locale has been reworked for 1.6 integration.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-01-15T16:15:38.000+0000",
                    "updated": "2008-01-15T16:15:38.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2311\/transitions"
}