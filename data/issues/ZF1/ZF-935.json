{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-935",
    "key": "ZF-935",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Multiple Zend_Db_Select::from() calls create unnecessary INNER JOINs"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-935\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/3",
                "name": "Duplicate"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10161",
                    "id": 10161,
                    "description": "Mini Release",
                    "name": "1.5.3",
                    "userReleaseDate": "28\/Jul\/08",
                    "archived": true,
                    "releaseDate": "2008-07-28",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-03-26T22:29:46.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                "name": "peptolab",
                "displayName": "Simon Mundy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-02-21T06:05:36.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-03-26T22:30:39.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "If multiple calls to Zend_Db_Select::from() are made in a Zend_Db_Select instance, new correlation names are auto-generated and unnecessary INNER JOIN are added. This affects performance and can severely impact the expected results of a query.\n\nFor example, the following query:-\n\n{code}\n$select = new Zend_Db_Select();\n$select->from('my_table', 'id');\n$select->from('my_table', 'name');\n$select->from('my_table', 'description');\n{code}\n\n*Expected result:*\n{code}\nSELECT\n\tmy_table.`id`,\n\tmy_table.`name`,\n\tmy_table.`description`\nFROM `my_table` my_table\n{code}\n\n*Actual result:*\n{code}\nSELECT\n\tmy_table.`id`,\n\tmy_table_2.`name`,\n\tmy_table_3.`description`\nFROM `my_table` my_table\n INNER JOIN `my_table` my_table_2\n INNER JOIN `my_table` my_table_3\n{code}\n\nI can see where auto-renaming could be useful, but would it be possible to ignore this rule for 'from' statements so that queries can be built atomically?"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-935\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                "name": "peptolab",
                "displayName": "Simon Mundy",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-2963",
                    "issue": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2963",
                    "type": {
                        "name": "Related",
                        "direction": "OUTBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12871",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "The intention was to make a simple interface for people to generate self-joins.\n\nBut you're right, this makes it necessary to list all columns from a given table instance in one call to from().\nThat is, currently the way to get what you expect is the following:\n\n{code}\n$select = new Zend_Db_Select();\n$select->from('my_table', array('id', 'name', 'description'));\n{code}\n\nBut I can understand that sometimes you might not have the list of column names prepared at the time you want to add them to the query.  You might have some logic to go through to decide if you need given columns.\n\nI think the best way to preserve the ability to do self-joins and also allow multiple from() calls for a single table instance is that the user must specify the correlation name:\n\n{code}\n$select = new Zend_Db_Select();\n$select->from(array('my_table' => 'm'), 'id');\n$select->from(array('my_table' => 'm'), 'name');\n$select->from(array('my_table' => 'm'), 'description');\n{code}\n\nWhereas omitting the correlation name always results in generating a new correlation name:\n\n{code}\n$select = new Zend_Db_Select();\n$select->from('my_table', 'id');          \/\/ cname = my_table\n$select->from('my_table', 'name');        \/\/ cname = my_table_2\n$select->from('my_table', 'description'); \/\/ cname = my_table_3\n{code}\n\nCurrently the code throws an exception if you specify a correlation name that is already in use (cf. line 350 of Select.php).\n\nThis solution could also apply to join() by the way:\n\n{code}\n$select = new Zend_Db_Select();\n$select->from(array('my_table' => 'm'), 'id');\n$select->join(array('contact_table' => 'o'), '<condition>', 'fax_number');\n$select->join(array('contact_table' => 'o'), '<dummy>', 'mobile_number');\n{code}\n\nIn the above example, both fax_number and mobile_number are taken from the table instance with the correlation name 'o'.  The <condition> specified in the second call to join() is ignored; the condition specified in the first call takes priority.\n\nThe risk is that people make \"cut & paste\" mistakes, so they might end up using the same correlation name repeatedly by mistake.  Throwing an exception when the correlation name is used a second time was an effort to catch this mistake.  \n\nA possible compromise would be to throw an exception if the user specifies a correlation name that was used previously, but the table specified in the from() or join() doesn't match the one previously defined for that correlation name.  For example:\n\n{code}\n$select = new Zend_Db_Select();\n$select->from(array('my_table' => 'm'), 'id');\n$select->join(array('contact_table' => 'm'), '<condition>', 'fax_number');\n{code}\n\nThe join() above is an error because 'm' is already used, and it is used by a different table than that mentioned in the join() call.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-21T11:36:58.000+0000",
                    "updated": "2007-02-21T11:36:58.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12914",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                        "name": "peptolab",
                        "displayName": "Simon Mundy",
                        "active": true
                    },
                    "body": "I like the sound of the comprise - it's going to be a lot more natural to use that way and the enforcement of unique correlation names is less intrusive but still as effective.\n\nMy original thinking for only applying this to 'from' statements was derived from the usage of select() currently - with a from() method you never specify the 'where' criteria, so it implies that you can build those atomically. Whereas all the 'join' methods you DO supply the where criteria so it implies that the method is to be called only once.\n\nIMO there should be an exception thrown if you try to resupply the criteria to a join where the correlation name already exists - if you wish to 'add' fields to an existing correlation you should supply a null value to the criteria.\n\nWould that help clarify usage?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                        "name": "peptolab",
                        "displayName": "Simon Mundy",
                        "active": true
                    },
                    "created": "2007-02-23T14:58:17.000+0000",
                    "updated": "2007-02-23T14:58:17.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/17368",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Assigning to [~peptolab] to be resolved with the approved Zend_Db_Table enhancements proposal.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-10-31T11:57:45.000+0000",
                    "updated": "2007-10-31T11:57:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/20470",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                        "name": "peptolab",
                        "displayName": "Simon Mundy",
                        "active": true
                    },
                    "body": "Resolved by using the new columns() method introduced in trunk r9057",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                        "name": "peptolab",
                        "displayName": "Simon Mundy",
                        "active": true
                    },
                    "created": "2008-03-26T22:29:46.000+0000",
                    "updated": "2008-03-26T22:29:46.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-935\/transitions"
}