{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-166",
    "key": "ZF-166",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Improvements to RewriteRouter - Can now match routes like Ruby on Rails"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-166\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-07-17T02:07:57.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                "name": "michael",
                "displayName": "Michael Sheakoski",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-06-29T13:12:58.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:11.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "h3. Overview:\nI gave the Zend_Controller_Router_Route (Route.php) class of the RewriteRouter some new features for defining routes and capturing parameters.  It can now match anything the Ruby on Rails router is capable of matching while maintaining 100% backwards compatibility with the current RewriteRouter.\n\nh3. Benefits over the current Zend_Controller_Router_Route:\n* less overhead when defining a route.  In my AdvancedRoute class __construct()'s only job is to store 3 variables into the object.  No looping or processing occurs until match() or assemble() is called.  In the current Zend_Controller_Router_Route class each call to __construct() performs 2 cases of typecasting, an explode, foreach loop containing 2 if statements, and 2 calls to substr().  Let's say you have a large site with 100 routes and the 90th route you defined is a match.  Using AdvancedRoute you will only parse and process 10 routes but with Zend_Controller_Router_Route you parse all 100 routes every request whether or not you used them in addition to processing 10 routes.\n* {{:variables}} can be defined anywhere and in any combination in your route, not just in between {{\/}}'s\n* {{:variables}} can be next to eachother\n* wildcards can be defined anywhere in your route and you can use more than one wildcard as opposed to Zend_Controller_Router_Route which only allows a single wildcard at the end of the route with a hardcoded var1\/value1\/var2\/value2 format.\n* All of this comes at a cost of only {{.1}} (yes that is point one) millisecond per request.  AdvancedRoute is 100% backwards compatible with the existing Zend_Controller_Router_Route so no code has to be changed.\n\nh3. How To Install (updated to reflect RewriteRouter API change in SVN):\n# Create a folder {{Custom\/Controller\/Router}} inside your Zend Framework {{\"library\"}} folder.  If you created the folders in the correct place you should see both {{\"Zend\"}} and {{\"Custom\"}} next to eachother in the {{\"library\"}} folder\n# Download the topmost {{AdvancedRoute.php}} from the attached files above and place it in your {{Custom\/Controller\/Router}} folder\n\nh3. How To Use:\n{noformat}\n<?php\n$router = new Zend_Controller_RewriteRouter();\n\n\/\/ you can add routes like normal still\n$router->addRoute('news', new Zend_Controller_Router_Route('news\/:controller\/:action\/:id'));\n\n\/\/ AdvancedRoute routes are backwards compatible so the same code works\n$router->addRoute('news', new Custom_Controller_Router_AdvancedRoute('news\/:controller\/:action\/:id'));\n\n\/\/ but now you can also add routes which require advanced matching\n$router->addRoute(\n    'logViewer',\n    new Custom_Controller_Router_AdvancedRoute(\n        ':controller\/:action\/customer{:id}httpd-error.:ext',\n        array(),\n        array('id' => '\\d+')\n    )\n);\n{noformat}\n\nNOTE: When naming {{:variables}} in your Advanced Routes use the PHP variable naming conventions.  Basicly the name can only consist of the following characters: {{_, A-Z, 0-9, and ASCII characters from 127 through 255}}.\nFor more information please look at http:\/\/php.net\/variables\n\nh3. Examples:\nIn Zend_Controller_Router_Route, routes are limited to only one variable between each {{'\/'}} in the url.  Now you can define routes with variables anywhere such as:\n{noformat}\n$router->addRoute(\n    'logViewer',\n    new Custom_Controller_Router_AdvancedRoute(\n        ':controller\/:action\/file:id.:ext',\n        array(),\n        array('id' => '\\d+')\n    )\n);\nmatches: http:\/\/mysite.com\/log\/view\/file206.xml\nArray\n(\n    [controller] => log\n    [action] => view\n    [id] => 206\n    [ext] => xml\n)\n{noformat}\n\nIf a variable in the route is ambiguous, you can escape it with {}'s:\n{noformat}\n$router->addRoute(\n    'logViewer',\n    new Custom_Controller_Router_AdvancedRoute(\n        ':controller\/:action\/customer{:id}httpd-error.:ext',\n        array(),\n        array('id' => '\\d+')\n    )\n);\nmatches: http:\/\/mysite.com\/log\/view\/customer206httpd-error.log\nArray\n(\n    [controller] => log\n    [action] => view\n    [id] => 206\n    [ext] => log\n)\n{noformat}\n\nYou can also use (multiple) wildcards to capture parameters:\n{noformat}\n$router->addRoute(\n    'directions',\n    new Custom_Controller_Router_AdvancedRoute(\n        'search\/:action\/from\/:from\/to\/:to',\n        array('controller' => 'mapit'),\n        array('from' => '.+', 'to' => '.+')\n    )\n);\nmatches: http:\/\/mysite.com\/search\/getDirections\/from\/1866 Euclid Ave\/Cleveland\/OH\/44315\/to\/Rome\/Italy\nArray\n(\n    [controller] => mapit\n    [action] => getDirections\n    [from] => 1866%20Euclid%20Ave\/Cleveland\/OH\/44315\n    [to] => Rome\/Italy\n)\n{noformat}\n\nYou can even put two variables next to eachother:\n{noformat}\n$router->addRoute(\n    'onlineStore',\n    new Custom_Controller_Router_AdvancedRoute(\n        ':controller\/:action\/:model_id:modelnum',\n        array(),\n        array('model_id' => '[a-z]+', 'modelnum' => '\\d+')\n    )\n);\nmatches: http:\/\/mysite.com\/product\/info\/MX1035347\nArray\n(\n    [controller] => product\n    [action] => info\n    [model_id] => MX\n    [modelnum] => 1035347\n)\n{noformat}\n\n\nh3. Benchmarks:\nWhat do these changes cost in speed?  The quick answer is that AdvancedRoute tested 2.78 requests per second less than Zend_Controller_Router_Route or about {{.1}} millisecond slower per request.  The test machine is a 2.4GHz Celeron and 1GB RAM running FreeBSD 6.1 with PHP 5.14 no optimizer (such as APC, Zend Optimizer, Turck) running as a fastcgi on Apache 2.2.2.  I ran each script 10 times after a freshly restarted apache and the 2nd best result was picked for each script.  Here are the results:\n\n\nUsing AdvancedRoute.php:\n{noformat}\n[root \/home\/mjsdigital\/public_html\/benchmark]$ ab -n 1000 -c 10 http:\/\/127.0.0.1\/benchmark\/mjs.php\nThis is ApacheBench, Version 2.0.40-dev <$Revision: 1.146 $> apache-2.0\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http:\/\/www.zeustech.net\/\nCopyright 1997-2005 The Apache Software Foundation, http:\/\/www.apache.org\/\n\nBenchmarking 127.0.0.1 (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nFinished 1000 requests\n\n\nServer Software:        Apache\/2.2.2\nServer Hostname:        127.0.0.1\nServer Port:            80\n\nDocument Path:          \/benchmark\/mjs.php\nDocument Length:        0 bytes\n\nConcurrency Level:      10\nTime taken for tests:   6.284683 seconds\nComplete requests:      1000\nFailed requests:        0\nWrite errors:           0\nTotal transferred:      245000 bytes\nHTML transferred:       0 bytes\nRequests per second:    159.12 [#\/sec] (mean)\nTime per request:       62.847 [ms] (mean)\nTime per request:       6.285 [ms] (mean, across all concurrent requests)\nTransfer rate:          38.03 [Kbytes\/sec] received\n\nConnection Times (ms)\n              min  mean[+\/-sd] median   max\nConnect:        0    0   0.7      0       9\nProcessing:    17   61  24.4     58     168\nWaiting:       17   60  24.6     57     168\nTotal:         17   61  24.4     58     168\n\nPercentage of the requests served within a certain time (ms)\n  50%     58\n  66%     68\n  75%     74\n  80%     80\n  90%     95\n  95%    108\n  98%    126\n  99%    140\n 100%    168 (longest request)\n{noformat}\n\n\n\nAnd Zend_Controller_Router_Route with wildcard support:\n{noformat}\n[[root \/home\/mjsdigital\/public_html\/benchmark]$ ab -n 1000 -c 10 http:\/\/127.0.0.1\nThis is ApacheBench, Version 2.0.40-dev <$Revision: 1.146 $> apache-2.0\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http:\/\/www.zeustech.net\/\nCopyright 1997-2005 The Apache Software Foundation, http:\/\/www.apache.org\/\n\nBenchmarking 127.0.0.1 (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nFinished 1000 requests\n\n\nServer Software:        Apache\/2.2.2\nServer Hostname:        127.0.0.1\nServer Port:            80\n\nDocument Path:          \/benchmark\/martel.php\nDocument Length:        0 bytes\n\nConcurrency Level:      10\nTime taken for tests:   6.176693 seconds\nComplete requests:      1000\nFailed requests:        0\nWrite errors:           0\nTotal transferred:      245000 bytes\nHTML transferred:       0 bytes\nRequests per second:    161.90 [#\/sec] (mean)\nTime per request:       61.767 [ms] (mean)\nTime per request:       6.177 [ms] (mean, across all concurrent requests)\nTransfer rate:          38.69 [Kbytes\/sec] received\n\nConnection Times (ms)\n              min  mean[+\/-sd] median   max\nConnect:        0    0   1.5      0      15\nProcessing:    11   58  23.3     55     237\nWaiting:        8   50  26.5     45     236\nTotal:         14   59  23.3     55     241\n\nPercentage of the requests served within a certain time (ms)\n  50%     55\n  66%     60\n  75%     65\n  80%     69\n  90%     88\n  95%    103\n  98%    126\n  99%    147\n 100%    241 (longest request)\n{noformat}\n\n\nSource code used for the tests:\nmjs.php:\n{noformat}\n<?php\nset_include_path(get_include_path() . PATH_SEPARATOR . '\/home\/mjsdigital\/public_html\/trunk\/library');\nrequire_once 'Custom\/Controller\/Router\/AdvancedRoute.php';\nrequire_once 'variables.php';\nforeach ($tests as $test) {\n    $route = new Custom_Controller_Router_AdvancedRoute($test['map'], $test['defaults'], $test['requirements']);\n    $result = $route->match($test['path']);\n    if (isset($_GET['debug'])) print_r($result);\n}\n{noformat}\n\nmartel.php:\n{noformat}\n<?php\nset_include_path(get_include_path() . PATH_SEPARATOR . '\/home\/mjsdigital\/public_html\/trunk\/library');\nrequire_once 'Zend\/Controller\/Router\/Route.php';\nrequire_once 'variables.php';\nforeach ($tests as $test) {\n    $route = new Zend_Controller_Router_Route($test['map'], $test['defaults'], $test['requirements']);\n    $result = $route->match($test['path']);\n    if (isset($_GET['debug'])) print_r($result);\n}\n{noformat}\n\nvariables.php:\n{noformat}\n<?php\n$tests = array();\n\n$tests[] = array(\n    'map'          => '',\n    'defaults'     => array('controller' => 'index', 'action' => 'index'),\n    'requirements' => array(),\n    'path'         => ''\n);\n\n$tests[] = array(\n    'map'          => ':controller\/:action\/*',\n    'defaults'     => array('action' => 'index'),\n    'requirements' => array(),\n    'path'         => 'ctrl\/act\/one\/1\/two\/2\/three\/3\/four\/4\/five\/5'\n);\n\n$tests[] = array(\n    'map'          => ':controller\/:action\/:id',\n    'defaults'     => array(),\n    'requirements' => array(),\n    'path'         => 'ctrl\/act\/myid'\n);\n\n\/\/ The following test results in an incorrect return value of \"false\"\n\/\/ in Zend_Controller_Router_Route in SVN but it used to work in 0.1.5.\n\/\/ It should return: array('controller' => 'ctrl', 'action' => null, 'id' => 'myId')\n\/\/$tests[] = array(\n\/\/    'map'          => ':controller\/:action\/:id',\n\/\/    'defaults'     => array('action' => null),\n\/\/    'requirements' => array(),\n\/\/    'path'         => 'ctrl\/\/myid'\n\/\/);\n{noformat}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-166\/watchers",
                "isWatching": false,
                "watchCount": 5
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                "name": "martel",
                "displayName": "Michal Minicki",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10062",
                    "filename": "AdvancedRoute.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-17T00:32:18.000+0000",
                    "size": 6585,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10062\/AdvancedRoute.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10055",
                    "filename": "AdvancedRoute.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-13T17:57:30.000+0000",
                    "size": 8355,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10055\/AdvancedRoute.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10056",
                    "filename": "RewriteRouter.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-13T17:57:43.000+0000",
                    "size": 410,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10056\/RewriteRouter.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10048",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-11T08:40:37.000+0000",
                    "size": 7845,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10048\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10044",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-10T23:34:51.000+0000",
                    "size": 7777,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10044\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10043",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-10T18:28:13.000+0000",
                    "size": 6297,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10043\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10036",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-08T00:48:34.000+0000",
                    "size": 6169,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10036\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10022",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-03T18:56:44.000+0000",
                    "size": 6371,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10022\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10019",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-02T22:57:15.000+0000",
                    "size": 6063,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10019\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10018",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-02T16:06:37.000+0000",
                    "size": 6343,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10018\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10014",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T18:09:03.000+0000",
                    "size": 7168,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10014\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10012",
                    "filename": "Route.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T13:13:56.000+0000",
                    "size": 6848,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10012\/Route.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10045",
                    "filename": "RouteTest.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-11T00:36:53.000+0000",
                    "size": 7123,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10045\/RouteTest.php"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10017",
                    "filename": "RouteTest.php",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-02T16:03:20.000+0000",
                    "size": 7158,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10017\/RouteTest.php"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10212",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "This issue is related to ZF-158 and ",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T13:21:15.000+0000",
                    "updated": "2006-06-29T13:21:15.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10213",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "and also ZF-158",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T13:22:24.000+0000",
                    "updated": "2006-06-29T13:22:24.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10214",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "oops I meant ZF-63 in that last comment! :)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T13:22:58.000+0000",
                    "updated": "2006-06-29T13:22:58.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10219",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Fixed some regex bugs.  Now passes all of the Route tests except for \"testVariablesWithDefaultAndRequirementAndIncorrectValue\".  I'm not sure if this test is correct or not.  In my opinion returning false is correct in this case.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T18:09:04.000+0000",
                    "updated": "2006-06-29T18:09:04.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10224",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Okay I just installed Ruby on Rails and tested the behavior I commented above (testVariablesWithDefaultAndRequirementAndIncorrectValue).\n\nOn line 156 of RouteTest.php it has:\n{noformat}\n$route = new Zend_Controller_Router_Route(':controller:\/:action:\/:year:', array('year' => 2006), array('year' => '\\d+'));\n{noformat}\n\nIt was my opinion that if {{:year:}} did not match the {{\\d+}} regex then the path does not match this route and {{match()}} should return {{false}}.  After testing on RoR they also have the same behavior.  In the current RouteTest.php it is expecting {{:year:}} to drop back to the default {{2006}} if it did not match the {{\\d+}} regex.  What are your opinions on this?  Should it return {{false}} or drop {{:year:}} to the default {{2006}} and consider it a match?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-29T20:50:40.000+0000",
                    "updated": "2006-06-29T20:50:40.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10225",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "I get a bool(false) as a result of:\n\n{code}\nrequire_once 'RouteM.php';\n\n$route = new Zend_Controller_Router_Route(':controller\/:action\/:year', array('year' => 2006), array('year' => '\\d+'));\n$values = $route->match('c\/a\/2000');\nvar_dump($values);\n{code}\n\nRouteM is your route of course. I will test it again when I will have a working solution.\n\nAbout a benchmark. You have to test it with Apache Benchmark since php has a per-thread global pool of compiled regexes. In your solution you set a different regex for each route so they have to be compiled every time - now imagine a big site with 100-1000 routes. My solution has only one regex regardles of the number of routes so it theoretically it should run faster. I will benchmark both when you provide working code.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-06-30T01:02:18.000+0000",
                    "updated": "2006-06-30T01:02:18.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10227",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Christopher Thompson proposed a different aproach for a wildcard match which suites me better. It involves two step matching - at routes level and a controller or an action level. You will be able to define global application routes (like now but with a wildcard probably) and local routes where you will be able to define routes for that particular controller only. This may save a lot of matching at global level.\n\nNow about many variables per \"dir\". I have it on my to do list and I'll try to implement it in the future. But it's really low priority for now.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-06-30T01:12:58.000+0000",
                    "updated": "2006-06-30T01:12:58.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10230",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Well, I forgot you have changed the variable representation. For above route the benchmark is:\n\nNot matching routes - common. Remeber you will have to check this O(n) times:\n\n> ab2 -n 1000 -c 10 http:\/\/localhost\/test\/router-ab2-incorrect.php\n\nMine:\nRequests per second:    313.68 [#\/sec] (mean)\nTime per request:       31.880 [ms] (mean)\nTime per request:       3.188 [ms] (mean, across all concurrent requests)\n\nYour:\nRequests per second:    287.20 [#\/sec] (mean)\nTime per request:       34.819 [ms] (mean)\nTime per request:       3.482 [ms] (mean, across all concurrent requests)\n\nAnd a rare case  - a match:\n\n> ab2 -n 1000 -c 10 http:\/\/localhost\/test\/router-ab2-match.php\n\nMatch - mine:\nRequests per second:    309.10 [#\/sec] (mean)\nTime per request:       32.352 [ms] (mean)\nTime per request:       3.235 [ms] (mean, across all concurrent requests)\n\nMatch - your:\nRequests per second:    287.93 [#\/sec] (mean)\nTime per request:       34.731 [ms] (mean)\nTime per request:       3.473 [ms] (mean, across all concurrent requests)\n\nBoth are faster in my code but the difference is negligible.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-06-30T01:29:54.000+0000",
                    "updated": "2006-06-30T01:29:54.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10231",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Can we somehow disable those smileys and other icons in the comments? They're just getting in the way.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-06-30T01:31:16.000+0000",
                    "updated": "2006-06-30T01:31:16.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10233",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Ahh so much for that I guess... I thought I had a breakthrough in routing :)  I think it would be good to test this regex method vs your current looping method when you implement \"multiple vars per dir\" and \"wildcard vars\".  Benchmarking routing code isn't easy because the input varies so much and a certain path\/map might be faster w\/ loops and slower w\/ regex or vice versa.  I must say this is a great challenge to figure out a solution to this problem though!",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-06-30T08:50:06.000+0000",
                    "updated": "2006-06-30T08:50:06.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10252",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached an updated RouteTest to work with the changes I made in Route.php.\n\n1. Changed mapVars from {{:var}} to {{:var:}}\n2. Changed expected result for {{testVariablesWithDefaultAndRequirementAndIncorrectValue()}} to {{false}}\n3. Added test {{testVariablesWithDefaultInTheMiddleAndDefaultHasRequirement()}}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-02T16:03:20.000+0000",
                    "updated": "2006-07-02T16:03:20.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10253",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached Route.php:\n\n1. Changed from a 100% regex solution to a hybrid loops\/regex similar to the current RewriteRouter\n2. Wildcard params are no longer {{:params*:}} but just a regular {{:params:}} with an entry of {{'.+'}} in the requirements parameter\n3. Now follows the same rules as Ruby on Rails when matching routes",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-02T16:06:37.000+0000",
                    "updated": "2006-07-02T16:06:37.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10255",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached an update to Route.php\n\n1. optimized match() a little\n2. re-arranged and cleaned up code, removed some redundant parts\n3. fixed a bug where an optional mapVar following a pathPart that wasn't a \/ was not being properly handled",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-02T22:57:15.000+0000",
                    "updated": "2006-07-02T22:57:15.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10271",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached: Route.php\n\n1. cleaned up \/ optimized code a bit more\n2. if a successful preg_match contains the next part of the path it will use that (cached) instead of running through another loop to find it",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-03T18:56:44.000+0000",
                    "updated": "2006-07-03T18:56:44.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10344",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached new Route.php\n\n1. A few general cleanups in the code",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-08T00:48:34.000+0000",
                    "updated": "2006-07-08T00:48:34.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10372",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jayson",
                        "name": "jayson",
                        "displayName": "Jayson Minard",
                        "active": true
                    },
                    "body": "You intending this for 0.2.0?  If not change the fix version.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jayson",
                        "name": "jayson",
                        "displayName": "Jayson Minard",
                        "active": true
                    },
                    "created": "2006-07-09T00:52:22.000+0000",
                    "updated": "2006-07-09T00:52:22.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10385",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "I'm not going use the above code since it's a major rewrite of the class but I will introduce some of the proposed changes of mapping logic in existing codebase. Wildcard match and a false on a reqirement not being met. \n\nThank you, Michael.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-07-09T03:55:28.000+0000",
                    "updated": "2006-07-09T03:55:28.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10411",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached Route.php\n\nswitched from :var: to :var and {:var} for backwards compatibility",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-10T18:28:13.000+0000",
                    "updated": "2006-07-10T18:28:13.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10415",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached Route.php\n\n1. Made code more readable\n2. some minor speed tweaks\n3. detailed comments to better understand how everything fits together\n4. assemble() now tests vars aginst required regex patterns before assembling a route",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-10T23:34:51.000+0000",
                    "updated": "2006-07-10T23:34:51.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10416",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Updated {{RouteTest.php}} back to the old style {{:vars}} instead of my crazy {{:vars:}} from before :)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-11T00:36:53.000+0000",
                    "updated": "2006-07-11T00:36:53.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10423",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached Route.php:\n\n* Fixed an undefined offset notice\n* Updated DEFAULT_REGEX to include all reserved and unreserved characters in RFC 3986 except for {{\/}}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-11T08:40:38.000+0000",
                    "updated": "2006-07-11T08:40:38.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10532",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Attached: AdvancedRoute.php\n* Incorporated best of regex method + loop method\n* optimized regex used for matching routes\n* optimized __construct() method to only assign variables\n* added parse() method which will process the parameters supplied to __construct on a per-need basis for match() and assemble()\n* AdvancedRoute is now faster than any previous file submitted",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-17T00:32:18.000+0000",
                    "updated": "2006-07-17T00:32:18.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10533",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "I am reopening this issue on the following basis:\n\n* My changes to the router are now 100% backwards compatible and current with the most recent changes in SVN\n* There is only a 3-5 request per second speed decrease in exchange for the ability to match routes with the same flexibility as Ruby on Rails\n* There are similar or less lines of code in this router than the current Route.php\n* The code is now easier to understand in this version compared to previous versions.\n\nMy proposal is for Custom_Controller_Router_AdvancedRoute (AdvancedRoute.php) to be renamed to Zend_Controller_Router_Route (Route.php) and replace the current Route.php used for the RewriteRouter.  The performance difference is neglegible and the features \/ flexibility gained are more than worth it.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-17T00:51:50.000+0000",
                    "updated": "2006-07-17T00:51:50.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10535",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Route is not backwards compatible (failed unt tests) and it's flexibility is just not worth the effort. \n\nMichael, I'm not going to accept a total rewrite of the class which does exactly the same thing but in another manner. Accept that. It won't make it, so don't waste your energy on something that's already functional. Focus on something that's not ready yet - there are a lot of fields where your help will count.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-07-17T02:07:57.000+0000",
                    "updated": "2006-07-17T02:07:57.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10536",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "It most definitely is 100% backwards compatible.  The problem is that your unit tests are flawed.\n\n__construct() expects a string and 2 optional arrays\n\n{{testVariablesWithRequirementAndValue()}} and {{testVariablesWithRequirementAndIncorrectValue()}} supply a null value for a parameter which is expected to be an array.  Your code allows for the error while mine simple enforces it and provides a detailed error message.\n\nand no the current router does not do exactly the same thing.  Please explain how to do any one of the above examples using the current Route.php.  I wrote this code because the current Route.php was not functional enough.  You have to remember that both beginners and expert developers will be using this framework.  Your Route.php has the beginner developers covered but when you want to get into more advanced matching it falls short.  People have been asking for this functionality on the mailing list.  Issues have been opened in the tracker for situations where the current router did not meet their needs.  People are using AdvancedRoute.php right now because they need more than what is offered by Route.php.  Those who are coming from other frameworks expect at least the level of routing functionality that their old frameworks had, not less.  It should not be this hard to give away code that works.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-17T02:49:17.000+0000",
                    "updated": "2006-07-17T02:49:17.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10552",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "cleaned up long lines of code in examples to make this page more readable",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-17T15:05:09.000+0000",
                    "updated": "2006-07-17T15:05:09.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-166\/transitions"
}