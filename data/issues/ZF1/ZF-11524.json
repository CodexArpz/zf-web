{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11524",
    "key": "ZF-11524",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Fast cache is inadvertently saved with infinite lifetime"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11524\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10980",
                    "id": 10980,
                    "description": "Mini Release",
                    "name": "1.11.10",
                    "userReleaseDate": "04\/Aug\/11",
                    "archived": false,
                    "releaseDate": "2011-08-04",
                    "released": true
                }
            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=davidfuhr",
                "name": "davidfuhr",
                "displayName": "David Fuhr",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-07-05T15:26:40.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-03-05T18:31:59.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "apc",
                "cache",
                "lifetime",
                "memcached"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The division in Zend_Cache_Backend_TwoLevels::_getFastLifetime() may return 0. For example if $lifetime = 1 and $priority = 8...\r\n\r\n{{$fastLifetime = (int) ($lifetime \/ (11 - $priority));}}\r\n\r\n...which results in infinite lifetime for Memcached (http:\/\/php.net\/memcached.set), APC (http:\/\/php.net\/apc_store) and XCache.\r\n\r\nThis is breaks tests which use cache lifetime of 1 and also can cause problems with auto_refresh_fast_cache where 1 can be passed as remaining cache lifetime.\r\n\r\nThis patch addresses both issues:\r\n{noformat}\r\nIndex: library\/Zend\/Cache\/Backend\/TwoLevels.php\r\n===================================================================\r\n--- library\/Zend\/Cache\/Backend\/TwoLevels.php\t(Revision 24185)\r\n+++ library\/Zend\/Cache\/Backend\/TwoLevels.php\t(Arbeitskopie)\r\n@@ -241,7 +241,7 @@\r\n             $newFastLifetime = $this->_getFastLifetime($array['lifetime'], $array['priority'], time() - $array['expire']);\r\n             \/\/ we have the time to refresh the fast cache\r\n             $usage = $this->_getFastFillingPercentage('loading');\r\n-            if (($array['priority'] > 0) && (10 * $array['priority'] >= $usage)) {\r\n+            if (($array['priority'] > 0) && (10 * $array['priority'] >= $usage) && ($newFastLifetime != 0 || $array['lifetime'] == 0)) {\r\n                 \/\/ we can refresh the fast cache\r\n                 $preparedData = $this->_prepareData($array['data'], $array['lifetime'], $array['priority']);\r\n                 $this->_fastBackend->save($preparedData, $id, array(), $newFastLifetime);\r\n@@ -481,12 +481,13 @@\r\n      *\/\r\n     private function _getFastLifetime($lifetime, $priority, $maxLifetime = null)\r\n     {\r\n-        if ($lifetime === null) {\r\n+        if ($lifetime === null || $lifetime == 0) {\r\n             \/\/ if lifetime is null, we have an infinite lifetime\r\n             \/\/ we need to use arbitrary lifetimes\r\n             $fastLifetime = (int) (2592000 \/ (11 - $priority));\r\n         } else {\r\n-            $fastLifetime = (int) ($lifetime \/ (11 - $priority));\r\n+            \/\/ prevent computed infinite lifetime (0) by ceil\r\n+            $fastLifetime = ceil($lifetime \/ (11 - $priority));\r\n         }\r\n         if (($maxLifetime !== null) && ($maxLifetime >= 0)) {\r\n             if ($fastLifetime > $maxLifetime) {\r\n{noformat}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11524\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/4",
                "name": "Reopened"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf-caretaker-adamlundrigan",
                "zf-crteam-needsexpert",
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                "name": "mabe",
                "displayName": "Marc Bennewitz (private)",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10680",
                    "id": 10680,
                    "description": "Mini Release",
                    "name": "1.11.7",
                    "userReleaseDate": "02\/Jun\/11",
                    "archived": false,
                    "releaseDate": "2011-06-02",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47543",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "use noformat to format patch\r\nassigned to me",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-07-18T18:49:30.000+0000",
                    "updated": "2011-07-18T18:49:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47546",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "fixed in r24250\n\nI'll merge it to 1.11 branch at the end of this week",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-07-18T19:36:35.000+0000",
                    "updated": "2011-07-18T19:36:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47591",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "merged to 1.11 branch in r24254",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-07-22T12:06:22.000+0000",
                    "updated": "2011-07-22T12:06:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48684",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=flytony",
                        "name": "flytony",
                        "displayName": "Anton St\u00f6ckl",
                        "active": true
                    },
                    "body": "This fix has not made it into 1.11.11.\r\nIs that intended?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=flytony",
                        "name": "flytony",
                        "displayName": "Anton St\u00f6ckl",
                        "active": true
                    },
                    "created": "2011-10-13T15:29:05.000+0000",
                    "updated": "2011-10-13T15:29:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48686",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=flytony",
                        "name": "flytony",
                        "displayName": "Anton St\u00f6ckl",
                        "active": true
                    },
                    "body": "Hm, maybe my comment is wrong.\r\nSeems that another error which leads to an infinite lifetime was introduced then:\r\n\r\n{code:title=in function _getFastLifetime()|borderStyle=solid}\r\n...\r\nif ($maxLifetime >= 0 && $fastLifetime > $maxLifetime) {\r\n    return $maxLifetime;\r\n}\r\n...\r\n{code}\r\n\r\nThe save() function in TwoLevels cache always calls _getFastLifetime() without 3rd parameter, so it is always null, so if there is a $lifetime > 0 supplied, which is normally the case, it always returns null. Which is an infinite lifetime at least in Memcached.\r\n\r\nSo this bit which seemed to be there in your patch does work (for me at least):\r\n\r\n{code:title=in some previous function _getFastLifetime()|borderStyle=solid}\r\nif (($maxLifetime !== null) && ($maxLifetime >= 0)) {\r\n    if ($fastLifetime > $maxLifetime) {\r\n        return $maxLifetime;\r\n    }\r\n}\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=flytony",
                        "name": "flytony",
                        "displayName": "Anton St\u00f6ckl",
                        "active": true
                    },
                    "created": "2011-10-13T16:39:47.000+0000",
                    "updated": "2011-10-13T16:39:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48689",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=flytony",
                        "name": "flytony",
                        "displayName": "Anton St\u00f6ckl",
                        "active": true
                    },
                    "body": "Hm, there is another issue that has a strong relation to this one.\r\n\r\nI use File as the slow store and Memcached as the fast store.\r\nWith this setup I can not change the priority that is used in Zend_Cache_Backend_TwoLevels::_getFastLifetime() so I end up with one third of the lifetime in the fast store that the slow store gets and I definitely want to set the same on both!\r\n\r\nHere's what's happening:\r\n\r\nI'm using \"Class\" as a frontend and I can set the priority there (even if it would be nice to be able to set it via options).\r\nSo Zend_Cache_Frontend_Class::setPriority() works.\r\n\r\nBut:\r\n\r\n{code:title=Zend_Cache_Core::setBackend()|borderStyle=solid}\r\n$this->_backendCapabilities = $this->_backend->getCapabilities();\r\n{code}\r\n\r\n{code:title=Zend_Cache_Core::save()|borderStyle=solid}\r\n...\r\nif (($this->_extendedBackend) && ($this->_backendCapabilities['priority'])) {\r\n    $result = $this->_backend->save($data, $id, $tags, $specificLifetime, $priority);\r\n} else {\r\n    $result = $this->_backend->save($data, $id, $tags, $specificLifetime);\r\n}\r\n...\r\n{code}\r\n\r\n{code:title=Zend_Cache_Backend_TwoLevels::getCapabilities()|borderStyle=solid}\r\npublic function getCapabilities()\r\n{\r\n    $slowBackendCapabilities = $this->_slowBackend->getCapabilities();\r\n    return array(\r\n        'automatic_cleaning' => $slowBackendCapabilities['automatic_cleaning'],\r\n        'tags' => $slowBackendCapabilities['tags'],\r\n        'expired_read' => $slowBackendCapabilities['expired_read'],\r\n        'priority' => $slowBackendCapabilities['priority'],\r\n        'infinite_lifetime' => $slowBackendCapabilities['infinite_lifetime'],\r\n        'get_list' => $slowBackendCapabilities['get_list']\r\n    );\r\n}\r\n{code}\r\n\r\nSo it always reads the priority capability from the slow store. Never from the fast store, but in\r\nZend_Cache_Backend_TwoLevels::_getFastLifetime() the lifetime of the fast store IS changed.\r\n\r\nSo to be able to keep the original lifetime in the fast store currently I'd need a SLOW store with the priority capability, which does not make much sense for me.\r\n\r\nA quick workaround would be to set the the default for the priority parameter in \r\nZend_Cache_Backend_TwoLevels::save() to 10 instead of 8, which makes the most sense for me anyway.\r\nWhy would I want to lower the lifetime to one third in the fast store by default (without beeing able to change this)?\r\n\r\nI don't know if there are other bits that would break with this quick fix, maybe something with auto_refresh_fast_cache and load() ...?\r\n\r\nAt the end of the day a user needs to be able to set the lifetime in both stores to the same value, that's what counts.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=flytony",
                        "name": "flytony",
                        "displayName": "Anton St\u00f6ckl",
                        "active": true
                    },
                    "created": "2011-10-14T07:39:54.000+0000",
                    "updated": "2011-10-14T07:39:54.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11524\/transitions"
}