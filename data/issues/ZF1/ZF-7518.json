{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7518",
    "key": "ZF-7518",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Range Query doesn't work anyway"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7518\/votes",
                "votes": 4,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10501",
                    "id": 10501,
                    "description": "Mini Release",
                    "name": "1.11.1",
                    "userReleaseDate": "30\/Nov\/10",
                    "archived": false,
                    "releaseDate": "2010-11-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-09-21T04:14:50.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielmitd",
                "name": "danielmitd",
                "displayName": "Daniel Hartmann",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-08-07T07:41:52.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-09-21T04:14:51.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Query a lucene index using the range format does not work. \n\n{code:title=test script|borderStyle=solid}\nunlink($root.\"data\/indexes\/test\/*\");\n$index = Zend_Search_Lucene::create($root.\"data\/indexes\/test\");\n$doc = new Zend_Search_Lucene_Document();\n$doc->addField(Zend_Search_Lucene_Field::Keyword('test', 9));\n$index->addDocument($doc);\n$index->commit();\n\t\necho \"<pre>\";\n$hits = $index->find('test:[1 TO 10]');\necho count($hits).\" hits\\n\"; \nforeach($hits as $hit){\n  echo \"  -> $hit->score - $hit->id\\n\";\n}\n\n$hits = $index->find('test:9');\necho count($hits).\" hits\\n\"; \nforeach($hits as $hit){\n  echo \"  -> $hit->score - $hit->id\\n\";\n}\n\n$hits = $index->find('test:11');\necho count($hits).\" hits\\n\"; \nforeach($hits as $hit){\n  echo \"  -> $hit->score - $hit->id\\n\";\n}\n{code} \n\n{code:title=output:|borderStyle=solid}\n0 hits\n1 hits\n  -> 0.30685281944005 - 0\n0 hits\n{code}\n\n{code:title=expected output:|borderStyle=solid}\n1 hits\n  -> 1 - 0\n1 hits\n  -> 1 - 0\n0 hits\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7518\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12324",
                    "filename": "mylyn-context.zip",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=royganor",
                        "name": "royganor",
                        "displayName": "Roy Ganor",
                        "active": true
                    },
                    "created": "2009-10-20T18:19:14.000+0000",
                    "size": 1764,
                    "mimeType": "application\/octet-stream; charset=ISO-8859-1",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12324\/mylyn-context.zip"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10320",
                    "id": 10320,
                    "description": "Minor Release",
                    "name": "1.9.0",
                    "userReleaseDate": "31\/Jul\/09",
                    "archived": false,
                    "releaseDate": "2009-07-31",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10021",
                    "id": 10021,
                    "name": "Zend_Search_Lucene",
                    "description": "pure PHP robust, general purpose text search engine",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34157",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=corvuscorax",
                        "name": "corvuscorax",
                        "displayName": "Corvus Corax",
                        "active": true
                    },
                    "body": "Out of interest:\nYour String is numeric.\n\nDid you try setting the default analyzer to a one supporting numbers? Does that change anything?\n(For example: Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num )\n\nI haven't looked into the code of Range Query yet, but some other querys run a tokenizer over the search term under some circumstances\nA numeric term tokenized with the default analyzer (which is text only) could result in an empty string, henceforth the empty result.\n\nOnly a guess.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=corvuscorax",
                        "name": "corvuscorax",
                        "displayName": "Corvus Corax",
                        "active": true
                    },
                    "created": "2009-09-02T03:30:06.000+0000",
                    "updated": "2009-09-02T03:30:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34160",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielmitd",
                        "name": "danielmitd",
                        "displayName": "Daniel Hartmann",
                        "active": true
                    },
                    "body": "{quote}Did you try setting the default analyzer to a one supporting numbers? Does that change anything?\n(For example: Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num ){quote}\n\nThe result is the same, even if I use the utf8num analyzer.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielmitd",
                        "name": "danielmitd",
                        "displayName": "Daniel Hartmann",
                        "active": true
                    },
                    "created": "2009-09-02T03:56:07.000+0000",
                    "updated": "2009-09-02T03:56:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34161",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=corvuscorax",
                        "name": "corvuscorax",
                        "displayName": "Corvus Corax",
                        "active": true
                    },
                    "body": "Confirmed: The problem seems to lay much deeper.\nIt is indeed necessary to set a numeric tokenizer for this range query to work, HOWEVER it still leads to an empty result.\nEven more interesting: If using an In-memory index as of patch ZF-7736 the query works! That means the numbers get somehow lost when the index is written to disk or retrieved. Which means there seems to be quite a fundamental flaw deep down there.\nHope that helps you guys pinpoint it faster...\n\nHere is the code I used:\n{code}\n\n$root=\"\/tmp\/\";\n\n\/\/ use a numeric tokenizer\nZend_Search_Lucene_Analysis_Analyzer::setDefault(new Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num_Caseinsensitive());\n\nunlink($root.\"data\/indexes\/test\/*\");\n\n\/\/$index = Zend_Search_Lucene::create($root.\"data\/indexes\/test\");\n\/\/ use a in-memory index (needs patch ZF-7736 )\n$index = new Zend_Search_Lucene_TempIndex();\n\n$doc = new Zend_Search_Lucene_Document();\n$doc->addField(Zend_Search_Lucene_Field::Keyword('test', 9));\n$index->addDocument($doc);\n$index->commit();\n$index->optimize();\n\t\necho \"<pre>\";\n$querystring = 'test:[1 TO 10]';\n$query = Zend_Search_Lucene_Search_QueryParser::parse($querystring);\nprint_r($query);\n$hits = $index->find($query);\n\/\/$hits = $index->find('test:[1 TO 10]');\necho count($hits).\" hits\\n\"; \nforeach($hits as $hit){\n  echo \"  -> $hit->score - $hit->id\\n\";\n}\n\n$hits = $index->find('test:9');\necho count($hits).\" hits\\n\"; \nforeach($hits as $hit){\n  echo \"  -> $hit->score - $hit->id\\n\";\n}\n\n$hits = $index->find('test:11');\necho count($hits).\" hits\\n\"; \nforeach($hits as $hit){\n  echo \"  -> $hit->score - $hit->id\\n\";\n}\n\n\nexit(0);\n\n{code}\n\nresult:\n{noformat} \nZend_Search_Lucene_Search_Query_Boolean Object\n(\n    [_subqueries:private] => Array\n        (\n            [0] => Zend_Search_Lucene_Search_Query_Range Object\n                (\n                    [_lowerTerm:private] => Zend_Search_Lucene_Index_Term Object\n                        (\n                            [field] => test\n                            [text] => 1\n                        )\n\n                    [_upperTerm:private] => Zend_Search_Lucene_Index_Term Object\n                        (\n                            [field] => test\n                            [text] => 10\n                        )\n\n                    [_field:private] => test\n                    [_inclusive:private] => 1\n                    [_matches:private] => \n                    [_boost:private] => 1\n                    [_weight:protected] => \n                    [_currentColorIndex:private] => 0\n                )\n\n        )\n\n    [_signs:private] => Array\n        (\n            [0] => \n        )\n\n    [_resVector:private] => \n    [_coord:private] => \n    [_boost:private] => 1\n    [_weight:protected] => \n    [_currentColorIndex:private] => 0\n)\n1 hits\n  -> 0.30685281944 - 0\n1 hits\n  -> 0.30685281944 - 0\n0 hits\n\n{noformat} ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=corvuscorax",
                        "name": "corvuscorax",
                        "displayName": "Corvus Corax",
                        "active": true
                    },
                    "created": "2009-09-02T04:30:57.000+0000",
                    "updated": "2009-09-02T04:30:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34165",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=corvuscorax",
                        "name": "corvuscorax",
                        "displayName": "Corvus Corax",
                        "active": true
                    },
                    "body": "Another juicy little detail: Setting the Storage Type to \"Text\" instead of  \"Keyword\", the range query still doesn't work.\nBut as expected witha non numeric tokenizer used the search result gets\n\n{noformat}\nZend_Search_Lucene_Search_Query_MultiTerm Object\n(\n    [_terms:private] => Array\n        (\n            [0] => Zend_Search_Lucene_Index_Term Object\n                (\n                    [field] => \n                    [text] => test\n                )\n\n            [1] => Zend_Search_Lucene_Index_Term Object\n                (\n                    [field] => \n                    [text] => to\n                )\n\n        )\n\n    [_signs:private] => Array\n        (\n            [0] => \n            [1] => \n        )\n\n    [_resVector:private] => \n    [_termsFreqs:private] => Array\n        (\n        )\n\n    [_coord:private] => \n    [_weights:private] => Array\n        (\n        )\n\n    [_boost:private] => 1\n    [_weight:protected] => \n    [_currentColorIndex:private] => 0\n)\n0 hits\n0 hits\n0 hits\n{noformat}\n\nnote that with a non numeric tokenizer, the numbers went missing - but the rest of the range query gets interpreted as a Multiterm query - which is at least interesting undocumented fallback behaviour ;)\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=corvuscorax",
                        "name": "corvuscorax",
                        "displayName": "Corvus Corax",
                        "active": true
                    },
                    "created": "2009-09-02T04:41:06.000+0000",
                    "updated": "2009-09-02T04:41:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39526",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mausolos",
                        "name": "mausolos",
                        "displayName": "Charles Sheinin",
                        "active": true
                    },
                    "body": "I know at first that this doesn't seem related because I'm not using a range query, however, I was having similar luck with the range query.  I suspect the behavior has less to do with range and more to do with searching secondary text fields where the string perhaps either begins with an integer or contains only integers.  I began by working with essentially a date string.  To test my hypothesis, I programmatically prepended 'a', 'aa' and 'aaa' to the date string before submitting the Document to the indexer.  This gets a little weird, but I think these series of tests with crashes and successes is telling, and indicates this isn't just a problem with range:\r\n\r\nUSING THIS TO START WITH (.....)\r\nphp > include('Zend\/Search\/Lucene.php');\r\nphp > $indexPath = '\/data\/lucindex';\r\nphp > $index = Zend_Search_Lucene::open($indexPath);\r\n\r\nCHECK THIS OUT:\r\n.....\r\nphp > $hits = $index->find( 'dateposted:20090308' );\r\nphp > echo count($hits);\r\n0\r\nphp > $hits = $index->find( '20090308' );\r\nphp > echo count($hits);\r\n0\r\nphp > $hits = $index->find( 'dateposted:200*' );\r\n\r\nFatal error: Uncaught exception 'Zend_Search_Lucene_Exception' with message 'At least 3 non-wildcard characters are required at the beginning of pattern.' in \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Wildcard.php:145\r\nStack trace:\r\n#0 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Preprocessing\/Term.php(190): Zend_Search_Lucene_Search_Query_Wildcard->rewrite(Object(Zend_Search_Lucene))\r\n#1 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Boolean.php(143): Zend_Search_Lucene_Search_Query_Preprocessing_Term->rewrite(Object(Zend_Search_Lucene))\r\n#2 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene.php(922): Zend_Search_Lucene_Search_Query_Boolean->rewrite(Object(Zend_Search_Lucene))\r\n#3 [internal function]: Zend_Search_Lucene->find('dateposted:200*')\r\n#4 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Proxy.php(346): call_user_func_array(Array, Array)\r\n#5 p in \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Wildcard.php on line 145\r\n\r\n......\r\nphp > $hits = $index->find('aaa20090308');\r\nphp > echo count($hits);\r\n26\r\nphp > \r\n\r\n\r\nFURTHERMORE:\r\n.....\r\nphp > $hits = $index->find('*a200*');\r\n\r\nFatal error: Uncaught exception 'Zend_Search_Lucene_Exception' with message 'At least 3 non-wildcard characters are required at the beginning of pattern.' in \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Wildcard.php:145\r\nStack trace:\r\n#0 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Preprocessing\/Term.php(190): Zend_Search_Lucene_Search_Query_Wildcard->rewrite(Object(Zend_Search_Lucene))\r\n#1 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Preprocessing\/Term.php(104): Zend_Search_Lucene_Search_Query_Preprocessing_Term->rewrite(Object(Zend_Search_Lucene))\r\n#2 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Boolean.php(143): Zend_Search_Lucene_Search_Query_Preprocessing_Term->rewrite(Object(Zend_Search_Lucene))\r\n#3 \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene.php(922): Zend_Search_Lucene_Search_Query_Boolean->rewrite(Object(Zend_Search_Lu in \/usr\/local\/lib\/php\/ZendFramework-1.10.0-minimal\/library\/Zend\/Search\/Lucene\/Search\/Query\/Wildcard.php on line 145\r\n\r\nAND FINALLY:\r\n......\r\nphp > $hits = $index->find('dateposted:[aaa*20090201 TO aaa*20090401');\r\nphp > echo count($hits);\r\n56\r\n\r\nI hope this is found useful to someone who knows their way around the codebase.\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mausolos",
                        "name": "mausolos",
                        "displayName": "Charles Sheinin",
                        "active": true
                    },
                    "created": "2010-03-25T03:42:43.000+0000",
                    "updated": "2010-03-25T03:42:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42248",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shopoto",
                        "name": "shopoto",
                        "displayName": "shopoto",
                        "active": true
                    },
                    "body": "I'm facing the same pb...\r\nDoes some someone have resolved \/ fixed this one?\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shopoto",
                        "name": "shopoto",
                        "displayName": "shopoto",
                        "active": true
                    },
                    "created": "2010-09-14T08:03:19.000+0000",
                    "updated": "2010-09-14T08:03:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42324",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "body": "Fixed.\r\n\r\nBTW The following thing has to be noted. \r\nRange query uses lexicographical order instead of numeric order. In this order \"9\" is greater than \"10\". Pad numbers to the same length to provide correct range query work:\r\n'  1', '  7', '  9', ' 45', '346'\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "created": "2010-09-21T04:14:50.000+0000",
                    "updated": "2010-09-21T04:14:50.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7518\/transitions"
}