{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10938",
    "key": "ZF-10938",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Convert file size from string to integer"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10938\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-01-16T02:32:42.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mayhem",
                "name": "mayhem",
                "displayName": "mayhem",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-01-11T19:19:12.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-01-17T12:24:38.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Converting string representation of file size or memory into bytes and backwards (e.g. 3M <=> 3145728) often usefull when using ini config files.\r\n\r\nThis code already used in ZF in such classes:\r\n- Zend_Form_Element_File::_convertIniToInteger\r\n- Zend_Validate_File_fromByteString\r\n\r\nbut has different realisation and can't be used anywhere else.\r\n\r\nMaybe it will be useful to create some static method to use in all ZF?\r\n\r\nFor example Zend_Config_Ini::byteToInteger and Zend_Config_Ini::integerToByte\r\n\r\nI have my own method, which is more compact\r\n\r\n{code}\r\npublic static function str2byte($str)\r\n{\r\n    if(is_numeric($str))\r\n        return (int) $str;\r\n\r\n    if(!preg_match('\/^([0-9]+) ?([KMGTPEZY])?B?$\/i', trim($str), $match))\r\n        return 0;\r\n\r\n    if(!empty($match[2]))\r\n        return $match[1] * pow(1024, 1 + (int) stripos('KMGTPEZY', $match[2]));\r\n\r\n    return (int) $match[1];\r\n\r\n}\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10938\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10320",
                    "id": 10320,
                    "name": "Zend_File_Transfer",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10140",
                    "id": 10140,
                    "name": "Zend_Validate",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44037",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "There is already a class which handles this and takes care of other issues caused by convertion:\r\nZend_Measure_Binary\r\n\r\nProblem:\r\nComponents are said to work independend from other components. Therefor a solution like yours is actually not accepted into the framework.\r\n\r\nInformation:\r\nThe reason why those 2 methods are different is that they NEED to be different.\r\nPHP accepts only K,M and G as value. P or E are denied by PHP but needed for files where this value comes from the filesystem (64bit) and not from HTTP or an PHP configuration file.\r\n\r\nTherefor closing this issue as won't fix.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-01-16T02:32:43.000+0000",
                    "updated": "2011-01-16T02:32:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44040",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mayhem",
                        "name": "mayhem",
                        "displayName": "mayhem",
                        "active": true
                    },
                    "body": "Zend_Measure_Binary may be used only to convert from numbers to strings, not otherwice, and I want to convert from values like 3G (as in php.ini) to numbers, which may be used in calculations",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mayhem",
                        "name": "mayhem",
                        "displayName": "mayhem",
                        "active": true
                    },
                    "created": "2011-01-16T05:22:48.000+0000",
                    "updated": "2011-01-16T05:22:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44041",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mayhem",
                        "name": "mayhem",
                        "displayName": "mayhem",
                        "active": true
                    },
                    "body": "I found just this to methods to do this conversion. Is any way to do this by using standart ZF components?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mayhem",
                        "name": "mayhem",
                        "displayName": "mayhem",
                        "active": true
                    },
                    "created": "2011-01-16T05:30:23.000+0000",
                    "updated": "2011-01-16T05:30:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44050",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "This is not correct.\r\nAll Zend_Measure classes can convert in ANY direction.\r\n\r\nAnd all of the above mentioned classes ARE standard ZF components.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-01-17T12:24:35.000+0000",
                    "updated": "2011-01-17T12:24:35.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10938\/transitions"
}