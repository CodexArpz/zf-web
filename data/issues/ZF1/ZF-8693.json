{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8693",
    "key": "ZF-8693",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "BUG! Incorrect use switch(true)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8693\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10360",
                    "id": 10360,
                    "description": "Minor Release",
                    "name": "1.10.0",
                    "userReleaseDate": "27\/Jan\/10",
                    "archived": false,
                    "releaseDate": "2010-01-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-01-11T13:18:44.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                "name": "lifinsky",
                "displayName": "Sergey",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-01-03T03:12:07.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-01-13T13:44:33.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Bug in Zend\/File\/Transfer\/Adapter\/Abstract.php\r\n\r\nmethod addValidators;\r\n\r\n        $validators = array(\r\n            array('MimeType',  true, array('image\/jpeg', 'image\/gif', 'image\/png')),\r\n            array('FilesSize', true, array('max' => '1MB', 'messages' => '\u0444\u0430\u0439\u043b \u0431\u043e\u043b\u044c\u0448\u0435 1M\u0411')),\r\n        );\r\n\r\n        $this->_upload->addValidators($validators, 'img');\r\n\r\nset validators for all files, because error in block\r\n\r\n                        switch (true) {\r\n                            case (0 == $argc):\r\n                                break;\r\n                            case (1 <= $argc):\r\n                                $validator  = array_shift($validatorInfo);\r\n                            case (2 <= $argc):\r\n                                $breakChainOnFailure = array_shift($validatorInfo);\r\n                            case (3 <= $argc):\r\n                                $options = array_shift($validatorInfo);\r\n                            case (4 <= $argc):\r\n                                $files = array_shift($validatorInfo);\r\n                            default:\r\n                                $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n                                break;\r\n\r\nMust be changed to:\r\n\r\n                        if ($argc > 0) {\r\n                            $validator  = array_shift($validatorInfo);\r\n\r\n                            if (2 <= $argc)\r\n                                $breakChainOnFailure = array_shift($validatorInfo);\r\n                            if (3 <= $argc)\r\n                                $options = array_shift($validatorInfo);\r\n                            if (4 <= $argc)\r\n                                $files = array_shift($validatorInfo);\r\n\r\n                            $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n                        }\r\n\r\nInvalid use switch\r\nSee on oficial site php.net\r\n\r\n<?php\r\nswitch ($i) {\r\n    case 0:\r\n        echo \"i equals 0\";\r\n    case 1:\r\n        echo \"i equals 1\";\r\n    case 2:\r\n        echo \"i equals 2\";\r\n}\r\n?>\r\n\r\nHere, if $i is equal to 0, PHP would execute all of the echo statements! If $i is equal to 1, PHP would execute the last two echo statements. You would get the expected behavior ('i equals 2' would be displayed) only if $i is equal to 2. Thus, it is important not to forget break statements (even though you may want to avoid supplying them on purpose under certain circumstances). "
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8693\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10400",
                    "id": 10400,
                    "description": "Mini Release",
                    "name": "1.9.7",
                    "userReleaseDate": "11\/Jan\/10",
                    "archived": false,
                    "releaseDate": "2010-01-11",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10320",
                    "id": 10320,
                    "name": "Zend_File_Transfer",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37317",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "body": "Code is not correct. Test again, because this code always run case 3 and 4 - set files to null always.\r\n\r\n$validators = array(\r\narray('MimeType', true, array('image\/jpeg', 'image\/gif', 'image\/png')),\r\narray('FilesSize', true, array('max' => '1MB', 'messages' => '\u0444\u0430\u0439\u043b \u0431\u043e\u043b\u044c\u0448\u0435 1M\u0411')),\r\n);\r\n\r\n$this->_upload->addValidators($validators, 'img');\r\n\r\nTest this!!! Case 1 - true always, and not has break - run cases 2-4. This is error!!!\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "created": "2010-01-03T03:14:25.000+0000",
                    "updated": "2010-01-03T03:14:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37330",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "We don't need to remove the switch statement; we need to merely change the conditions. switch(true) is a perfectly valid use case.\r\n\r\nPlease provide a reproduce case and expected and actual results, please.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-01-03T12:20:25.000+0000",
                    "updated": "2010-01-03T12:20:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37338",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "body": "I think code below should work correctly\r\n{code}\r\nswitch ($argc) {\r\n    default:\r\n        $extraParams = array_slice($validatorInfo, 4, $argc - 4); \/\/ It's not clear for me what to do with extra parameters. But we have kept them just in case\r\n        $validatorInfo = array_slice($validatorInfo, 0, 4);\r\n    case 4:\r\n        $files = array_pop($validatorInfo);\r\n    case 3:\r\n        $options = array_pop($validatorInfo);\r\n    case 2:\r\n        $breakChainOnFailure = array_pop($validatorInfo);\r\n    case 1:\r\n        $validator = array_pop($validatorInfo);\r\n        $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n    case 0:\r\n    break;\r\n}\r\n{code}\r\n\r\nsame code as diff\r\n{code}\r\n@@ -400,19 +400,20 @@\r\n                         $options   = $validatorInfo;\r\n                         $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n                     } else {\r\n-                        switch (true) {\r\n-                            case (0 == $argc):\r\n-                                break;\r\n-                            case (1 <= $argc):\r\n-                                $validator  = array_shift($validatorInfo);\r\n-                            case (2 <= $argc):\r\n-                                $breakChainOnFailure = array_shift($validatorInfo);\r\n-                            case (3 <= $argc):\r\n-                                $options = array_shift($validatorInfo);\r\n-                            case (4 <= $argc):\r\n-                                $files = array_shift($validatorInfo);\r\n+                        switch ($argc) {\r\n                             default:\r\n+                                $extraParams = array_slice($validatorInfo, 4, $argc - 4); \/\/ It's not clear for me what to do with extra parameters. But we have kept them just in case\r\n+                                $validatorInfo = array_slice($validatorInfo, 0, 4);\r\n+                            case 4:\r\n+                                $files = array_pop($validatorInfo);\r\n+                            case 3:\r\n+                                $options = array_pop($validatorInfo);\r\n+                            case 2:\r\n+                                $breakChainOnFailure = array_pop($validatorInfo);\r\n+                            case 1:\r\n+                                $validator = array_pop($validatorInfo);\r\n                                 $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n+                            case 0:\r\n                                 break;\r\n                         }\r\n                    }\r\n\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "created": "2010-01-03T23:41:05.000+0000",
                    "updated": "2010-01-03T23:41:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37339",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Sergey:\r\nAgain... please provide a reproducable use.\r\n\r\nThe above code works in about 5 components. When it has to be changed it would mean that 5 components do not work properly.\r\nTherefor please add a usecase which shows where you have problems in your application.\r\n\r\nJust changing the core without knowing why is not a good practice.\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-01-04T01:47:44.000+0000",
                    "updated": "2010-01-04T01:47:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37341",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "body": "Thomas Weidner:\r\nSorry, but reporter of issue Sergey and I am (Sergey Boroday) are two different \"Sergey\". :) \r\n\r\nAuthor of issue http:\/\/framework.zend.com\/issues\/secure\/ViewProfile.jspa?name=lifinsky\r\n\r\nBut you right. Shame me.\r\nProposed code didn't fix anything and will not work correctly.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "created": "2010-01-04T02:31:59.000+0000",
                    "updated": "2010-01-04T02:31:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37345",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "body": "If I use validators in this format\r\n\r\n$validators = array(\r\narray('MimeType', true, array('image\/jpeg', 'image\/gif', 'image\/png')),\r\narray('FilesSize', true, array('max' => '1MB', 'messages' => '\u0444\u0430\u0439\u043b \u0431\u043e\u043b\u044c\u0448\u0435 1M\u0411')),\r\n);\r\n\r\nI set 3 parameters ($argc)\r\n\r\n4 parameter - null, I add validator to file key, for example 'img'\r\n\r\n$upload->addValidators($validators, 'img');\r\n\r\nBut bug in case set validators to all files!!!! What do you do not understand????\r\n\r\ncase (4 <= $argc):\r\n$files = array_shift($validatorInfo); ------ null!!!\r\n\r\n\r\nCase must be changed to if, or inverse case order from max $argc = 4 to 1\r\n\r\nI change code to \r\n\r\n\r\n                        if ($argc > 0) {\r\n                            $validator = array_shift($validatorInfo);\r\n\r\n                            if (2 <= $argc)\r\n                                $breakChainOnFailure = array_shift($validatorInfo);\r\n\r\n                            if (3 <= $argc)\r\n                                $options = array_shift($validatorInfo);\r\n\r\n                            if (4 <= $argc)\r\n                                $files = array_shift($validatorInfo);\r\n\r\n                            $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n                        }",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "created": "2010-01-04T04:47:07.000+0000",
                    "updated": "2010-01-04T04:47:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37352",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "body": "\u0443\u0441\u043f\u043e\u043a\u043e\u0439\u0441\u044f. \u0418\u043c \u043d\u0443\u0436\u0435\u043d \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u0435\u0439\u0441 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438. \u0410 \u0435\u0449\u0435 \u043b\u0443\u0447\u0448\u0435 \u0442\u0435\u0441\u0442.\r\n\r\nI tried to write test but here some questions\r\n\r\n{code}\r\n    public function testAdapterShouldAllowAddingMultipleValidatorsAtOnceUsingBothInstancesAndPluginLoaderForDifferentFiles()\r\n    {\r\n        $validators = array(\r\n            array('MimeType', true, array('image\/jpeg')), \/\/ no files\r\n            array('FilesSize', true, array('max' => '1MB', 'messages' => '\u0444\u0430\u0439\u043b \u0431\u043e\u043b\u044c\u0448\u0435 1M\u0411')), \/\/ no files\r\n            array('Count', true, array('min' => 1, 'max' => '1', 'messages' => '\u0444\u0430\u0439\u043b \u043d\u0435 1'), 'bar'), \/\/ 'bar' from config\r\n            array('MimeType', true, array('image\/jpeg'), 'bar'), \/\/ 'bar' from config\r\n        );\r\n\r\n        $this->adapter->addValidators($validators, 'foo'); \/\/ set validators to 'foo'\r\n\r\n        $test = $this->adapter->getValidators();\r\n        $this->assertEquals(4, count($test)); \r\n\r\n        \/\/test files specific validators\r\n        $test = $this->adapter->getValidators('foo');\r\n        $this->assertEquals(4, count($test)); \/\/ how many validators expect? 2 from 'no files' or 4 'no files' and overwrited 'bar'?\r\n        $mimeType = array_shift($test);\r\n        $this->assertTrue($mimeType instanceof Zend_Validate_File_MimeType);\r\n        $filesSize = array_shift($test);\r\n        $this->assertTrue($filesSize instanceof Zend_Validate_File_FilesSize);\r\n\r\n        $test = $this->adapter->getValidators('bar');\r\n        $this->assertEquals(0, count($test)); \/\/ how many validators expect? 2 from 'bar' or 0 because we overwrite 'bar' with 'foo'\r\n        $filesSize = array_shift($test);\r\n        $this->assertTrue($filesSize instanceof Zend_Validate_File_FilesSize);\r\n        $mimeType = array_shift($test);\r\n        $this->assertTrue($mimeType instanceof Zend_Validate_File_MimeType);\r\n\r\n        $test = $this->adapter->getValidators('baz');\r\n        $this->assertEquals(0, count($test)); \r\n\r\n    }\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "created": "2010-01-04T06:57:43.000+0000",
                    "updated": "2010-01-04T06:57:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37573",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Fixed with r20206.\r\n\r\nSome notes:\r\n* The provided code snippets where not used (they added other problems)\r\n* The provided unittests are partitially wrong\r\n* Actually it is not possible to set multiple instances of the same class... one MimeType instance overwrites the other... this is also mentioned within the manual (will be fixed by another issue)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-01-11T13:18:44.000+0000",
                    "updated": "2010-01-11T13:18:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37661",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "body": "                    if (is_string($name)) {\r\n                        $validator = $name;\r\n                        $options   = $validatorInfo;\r\n                        $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n                    } else {\r\n                        if ($argc > 0) {\r\n                            $validator = array_shift($validatorInfo);\r\n\r\n                            if (2 <= $argc)\r\n                                $breakChainOnFailure = array_shift($validatorInfo);\r\n                            if (3 <= $argc)\r\n                                $options = array_shift($validatorInfo);\r\n                            if (4 <= $argc)\r\n                                $files = array_shift($validatorInfo);\r\n\r\n                            $this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\n                        }\r\n                    }\r\n\r\n\r\n\r\nI want use format 2\r\n\r\n        $validators = array(\r\n            array('MimeType',  true, array('image\/jpeg', 'image\/gif', 'image\/png')),\r\n            array('FilesSize', true, array('max' => '1MB', 'messages' => '\u0444\u0430\u0439\u043b \u0431\u043e\u043b\u044c\u0448\u0435 1 M\u0411')),\r\n        );\r\n\r\nequivalent to format 1\r\n\r\n\r\n        $validators = array(\r\n            'MimeType'  => array('image\/jpeg', 'image\/gif', 'image\/png'),\r\n            'FilesSize' => array('max' => '1MB', 'messages' => '\u0444\u0430\u0439\u043b \u0431\u043e\u043b\u044c\u0448\u0435 1 M\u0411'),\r\n        );\r\n\r\nBecause format 1 has always $breakChainOnFailure = false!!!\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "created": "2010-01-13T06:06:01.000+0000",
                    "updated": "2010-01-13T06:06:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37664",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "It would be a pleasure if you also read what you get responded by people:\r\n\r\n{quote}\r\n\u2022Actually it is not possible to set multiple instances of the same class... one MimeType instance overwrites the other... this is also mentioned within the manual (will be fixed by another issue)\r\n{quote}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-01-13T06:53:54.000+0000",
                    "updated": "2010-01-13T06:53:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37670",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Additionally the syntax of your format2 works and is tested within our unittests.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-01-13T07:20:55.000+0000",
                    "updated": "2010-01-13T07:20:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37678",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "body": "HOW IT WORK?????\r\n\r\nYour code always set $files to null!!!!\r\n\r\n\r\nswitch (true) {\r\ncase (0 == $argc):\r\nbreak;\r\ncase (1 <= $argc):\r\n$validator = array_shift($validatorInfo);\r\ncase (2 <= $argc):\r\n$breakChainOnFailure = array_shift($validatorInfo);\r\ncase (3 <= $argc):\r\n$options = array_shift($validatorInfo);\r\ncase (4 <= $argc):\r\n$files = array_shift($validatorInfo);\r\ndefault:\r\n$this->addValidator($validator, $breakChainOnFailure, $options, $files);\r\nbreak;\r\n\r\n\r\nALWAYS case 4!\r\nalways $files = null in my example",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lifinsky",
                        "name": "lifinsky",
                        "displayName": "Sergey",
                        "active": true
                    },
                    "created": "2010-01-13T12:25:32.000+0000",
                    "updated": "2010-01-13T12:25:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37679",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "body": "Sergey.\r\nPlease read comments carefully. Issue fixed.\r\nGet the new version from trunk.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simpliest",
                        "name": "simpliest",
                        "displayName": "Sergey Boroday",
                        "active": true
                    },
                    "created": "2010-01-13T13:44:33.000+0000",
                    "updated": "2010-01-13T13:44:33.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8693\/transitions"
}