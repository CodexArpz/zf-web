{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7665",
    "key": "ZF-7665",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "MultiSearcher gives a document id out of range error"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7665\/votes",
                "votes": 5,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kanundrum",
                "name": "kanundrum",
                "displayName": "Akeem Philbert",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-08-23T07:56:39.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-07-04T11:42:41.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "using Zend_Search_Lucene_Interface_MultiSearcher gives an error when the find function is used. The reason for this is that the find function searches through each index and increments each result document id based on its position in the combined results. Commenting out that for loop resolved in Zend\/Search\/Lucene\/MultiSearcher.php from 467\/471 fixes. Though this feature was in the 1.8 reslease is this a production ready feature? (there isn't mention of it in the documentation and the namespacing doesn't follow codiing standards.)"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7665\/watchers",
                "isWatching": false,
                "watchCount": 5
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10320",
                    "id": 10320,
                    "description": "Minor Release",
                    "name": "1.9.0",
                    "userReleaseDate": "31\/Jul\/09",
                    "archived": false,
                    "releaseDate": "2009-07-31",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10021",
                    "id": 10021,
                    "name": "Zend_Search_Lucene",
                    "description": "pure PHP robust, general purpose text search engine",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37506",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dcvisagie",
                        "name": "dcvisagie",
                        "displayName": "Deon Visagie",
                        "active": true
                    },
                    "body": "Line 476 (ZF 1.9.6)\r\n$indexShift += $index->count();\r\n\r\nShould be changed to something like this:\r\n$indexShift += count($hits);\r\n\r\n\r\nThe index id location should be incremented by the number of hits, not the complete size of the index. The above worked for me. Removing the loop might create duplicate id's if using multiple indexes in different locations.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dcvisagie",
                        "name": "dcvisagie",
                        "displayName": "Deon Visagie",
                        "active": true
                    },
                    "created": "2010-01-08T01:06:21.000+0000",
                    "updated": "2010-01-08T01:06:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42190",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=seriousdron",
                        "name": "seriousdron",
                        "displayName": "Andrey Petrenko",
                        "active": true
                    },
                    "body": "\"$indexShift += count($hits);\" still wrong, but it will work if you have hits only in one of indexes. \r\nAs far as I can see id is internal id of document in index and cannot be changed in any way or you will get this error. Each hit have index link so you can retrive document from right index.\r\nYou can determine from which index this one is by comparing $hit->getIndex() withyour indexes or by adding unindexed field with type entity in all your documents. I have field \"entity\" to determine which kind of result is that hit.\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=seriousdron",
                        "name": "seriousdron",
                        "displayName": "Andrey Petrenko",
                        "active": true
                    },
                    "created": "2010-09-04T23:30:35.000+0000",
                    "updated": "2010-09-04T23:30:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42191",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=seriousdron",
                        "name": "seriousdron",
                        "displayName": "Andrey Petrenko",
                        "active": true
                    },
                    "body": "I dont  know how to add patch here (and I actually didn't patch but extend class) but there is my find function without that bug and with merging result to preserve sorting by score. It may be buggy as I just wrote it but seems working.\r\n\r\n   public function find($query)\r\n    {\r\n        if (count($this->_indices) == 0) {\r\n            return array();\r\n        }\r\n\r\n        $hitsList = array();\r\n\r\n        foreach ($this->_indices as $index) {\r\n            $hits = $index->find($query);\r\n            if (count($hits) > 0) { \/\/Adding only not empty results\r\n                $hitsList[] = $hits;\r\n            }\r\n        }\r\n\r\n        $partsCount = count($hitsList);\r\n        \/\/No results in all indexes\r\n        if ($partsCount == 0) {\r\n            return array();\r\n        } elseif ($partsCount == 1) { \/\/Only one index in results\r\n            return $hitsList[0];\r\n        }\r\n        \r\n        \/** Merging arrays with results to preserve sorting\r\n         *  (something like mergesort with any count of parts)\r\n         *\/\r\n        $result = array();\r\n        $values = array();\/\/Max values of score in all arrays\r\n        \r\n        foreach ($hitsList as $index => $hits) {\r\n            $values[$index] = $hits[0]->score;\r\n        }\r\n        \r\n        do {\r\n            $max = reset($values);\r\n            $maxkey = key($values);\r\n            foreach ($values as $index => $value) {\r\n                if ($value > $max) {\r\n                    $max = $value;\r\n                    $maxkey = $index;\r\n                }\r\n            }\r\n            \/\/Now we now where is a best score\r\n            $result[] = array_shift($hitsList[$maxkey]);\r\n            if (empty($hitsList[$maxkey])) {\r\n                unset($values[$maxkey]);\r\n            } else {\r\n                $values[$maxkey] = reset($hitsList[$maxkey])->score;\r\n            }\r\n        } while(!empty($values));\r\n        return $result;\r\n    }",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=seriousdron",
                        "name": "seriousdron",
                        "displayName": "Andrey Petrenko",
                        "active": true
                    },
                    "created": "2010-09-05T00:24:24.000+0000",
                    "updated": "2010-09-05T00:24:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46964",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=josephwynn",
                        "name": "josephwynn",
                        "displayName": "Joseph Wynn",
                        "active": true
                    },
                    "body": "This is still an issue in 1.11.7.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=josephwynn",
                        "name": "josephwynn",
                        "displayName": "Joseph Wynn",
                        "active": true
                    },
                    "created": "2011-06-03T15:18:39.000+0000",
                    "updated": "2011-06-03T15:18:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51254",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gawpertron",
                        "name": "gawpertron",
                        "displayName": "Adam Holdbrook",
                        "active": true
                    },
                    "body": "I extended Zend_Search_Lucene_Interface_MultiSearcher and overrode the find method with the below. This is a stripped down Merge Sort\r\n\r\n{code:java}\r\npublic function find($query)\r\n{\r\n    if (count($this->_indices) == 0) {\r\n        return array();\r\n    }\r\n\r\n    $hitsList = array();\r\n    foreach ($this->_indices as $index) {\r\n        $hits = $index->find($query);\r\n\r\n        $hitsList = $this->merge($hits, $hitsList);\r\n    }\r\n\r\n    return $hitsList;\r\n}\r\n{code}\r\n\r\n{code:java}\r\nprotected function merge(&$leftList, &$rightList)\r\n{\r\n    $results = array();\r\n    while(0 < count($leftList) && 0 < count($rightList)) {\r\n        if($leftList[0]->score < $rightList[0]->score) {\r\n            $results[] = array_shift($leftList);\r\n        } else {\r\n            $results[] = array_shift($rightList);\r\n        }\r\n    }\r\n\r\n    $results = count($leftList) > count($rightList) \r\n        ? array_merge($results, $leftList) : array_merge($results, $rightList);\r\n\r\n    return $results;\r\n}\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gawpertron",
                        "name": "gawpertron",
                        "displayName": "Adam Holdbrook",
                        "active": true
                    },
                    "created": "2012-07-04T11:42:41.000+0000",
                    "updated": "2012-07-04T11:42:41.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7665\/transitions"
}