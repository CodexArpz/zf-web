{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6995",
    "key": "ZF-6995",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_config : toArray conflict with iterator implements."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6995\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10340",
                    "id": 10340,
                    "description": "Mini Release",
                    "name": "1.8.4",
                    "userReleaseDate": "23\/Jun\/09",
                    "archived": false,
                    "releaseDate": "2009-06-23",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-06-16T12:20:59.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nicochot",
                "name": "nicochot",
                "displayName": "CHOTIN Nicolas",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-06-12T02:41:50.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-06-16T12:20:59.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "Zend_config",
                "toArray_iterator_conflict"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Function \"toArray()\" is created with a foreach on \"_data\".\nInterface \"iterator\" is implemented with :  \"next($this->_data)\" and others functions of iterator directly on \"_data\".\n\nMy problem is function \"toArray()\" which is in conflict with the iterator interface.\nFor fix that , we must create a clone of object and after we can use \"toArray()\".\n\n\nBut function \"toArray()\" should be NOT in conflict with iterator ?\n\nFor me, the problem is not \"toArray()\" but the implement of \"Iterator\".\nAnd is just when we want used \"toArray()\"  AND iterator in same time on same object.\n\nThis problem could be apply to all classes with iterator and \"toArray()\".\nBut I don't know if it's a usage problem or a bug.\n\nNicolas CHOTIN.\n\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6995\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                "name": "doctorrock83",
                "displayName": "julien PAULI",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10010",
                    "id": 10010,
                    "name": "Zend_Config",
                    "description": "property based interface to an array",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31799",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Would you mind providing the code you're using along with the results you're getting and the results you are expecting?\n\nThanks,\n\nRob...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-06-12T06:59:39.000+0000",
                    "updated": "2009-06-12T06:59:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31807",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Foreach() uses the array directly and thus, the *internal* array iterator and not Zend_Config's iterator.\n\nCould you provide a use case ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-06-12T11:07:49.000+0000",
                    "updated": "2009-06-12T11:07:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31816",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "body": "Hi\nI was put in a similar situation.\ntoArray breaks iteration.\nAt between before and after toArray, a behavior of valid and current is amusing.\n\nHere is repro-code\n{code}\n<?php\n$config = new Zend_Config(array(1,2,3));\n\n$config->rewind();\nvar_dump($config->valid());  \/\/ true\nvar_dump($config->current()); \/\/ int(1)\n\n$config->rewind();\n$dummy = $config->toArray();\nvar_dump($config->valid()); \/\/ true\nvar_dump($config->current()); \/\/ false\n\n{code}\n2nd sample should be \" not valid \" or \"valid? int(1)\"\n\nOne Solution is clone $this->_data before \"foreach($this->_data\" In Zend_Config::toArray() .\n\n\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "created": "2009-06-13T01:08:54.000+0000",
                    "updated": "2009-06-13T01:08:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31854",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nicochot",
                        "name": "nicochot",
                        "displayName": "CHOTIN Nicolas",
                        "active": true
                    },
                    "body": "In my case it's a controller for testing.\nI have create a config file with a \"value\" for config and a \"value\" for testing :\n\ntest.c1.regexp = ^\/index\/test\ntest.c1.test      = \/index\/test\ntest.c2.regexp = ^\/index\/test1\ntest.c2.test      = \/index\/test1\n\nThe initialization of object is in loop of tests, because \nthis object is initialized only when used.\nBut in real context we don't have a loop on same object \"Zend_Config\".\n\nSo for me it's a usage problem but it's interesting to add a warning \nin documentation mostly if Zend_Config it's not alone class in this case.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nicochot",
                        "name": "nicochot",
                        "displayName": "CHOTIN Nicolas",
                        "active": true
                    },
                    "created": "2009-06-15T07:38:48.000+0000",
                    "updated": "2009-06-15T07:38:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31857",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Ok I see.\n\ntoArray() works directly on the _data array, and so does the iterator.\nWhen calling toArray(), a foreach loop is used to iterate throught _data, that foreach loop first calls rewind() internaly , and then iterates. The problem is that the foreach loop leaves the array iterator at an undefinied position (that's why rewind() is called by foreach before the iteration).\nThen when you call current() on your object, it just says it doesn't have a current value.\n\n{code}\n$config = new Zend_Config(array(1,2,3));\n$config->rewind(); \/\/ rewound\n$config->toArray(); \/\/ the internal iterator is somewhere after the last position due to foreach loop\nassert($config->current() == false); \/\/ OK\n{code}\n\nTo see that, create a getIndex() method in Zend_Config, which return $_index; and try this :\n\n{code}\n$config = new Zend_Config(array(1,2,3));\n$config->rewind(); \/\/ rewound\n$config->toArray(); \/\/ the internal iterator is somewhere after the last position due to foreach loop\nassert($config->key() == $config->getIndex()); \/\/ WRONG , $config->key() returns NULL while getIndex() has the right value\n{code}\n\n\nThe patch is easy, trigger the internal PHP copy-on-write system to make foreach loop over a copy of the _data array, and not the real _data.\nJust add :\n{code}\npublic function toArray()\n    {\n        $array = array();\n+      $data = $this->_data;\n        foreach ($this->_data as $key => $value) {\n            if ($value instanceof Zend_Config) {\n                $array[$key] = $value->toArray();\n            } else {\n                $array[$key] = $value;\n            }\n        }\n        return $array;\n    }\n{code}\n\nEven not using the new $data variable created, it increments the internal refcount on the _data structure, making foreach use a copy of it ;-)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-06-15T09:25:43.000+0000",
                    "updated": "2009-06-15T09:25:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31871",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "julien,\n\nFancy writing a unit test and then patching?\n\nRegards,\n\nRob...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-06-16T02:10:12.000+0000",
                    "updated": "2009-06-16T02:10:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31877",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "I'm on it",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-06-16T04:07:50.000+0000",
                    "updated": "2009-06-16T04:07:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31891",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Fixed in SVN r16090",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-06-16T12:20:57.000+0000",
                    "updated": "2009-06-16T12:20:57.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6995\/transitions"
}