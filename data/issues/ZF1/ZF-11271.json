{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11271",
    "key": "ZF-11271",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Wrong calculation of OAuth signature when using arrays as parameter values"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11271\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dblunk",
                "name": "dblunk",
                "displayName": "Dominik Blunk",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-04-07T19:45:19.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-05-02T22:38:22.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When using arrays as parameter values (POST or GET, I guess PUT too) the calculated OAuth signature is wrong. This is due to the fact that the method Zend_Oauth_Signature_SignatureAbstract::_getBaseSignatureString() does not handle array values in a correct way - it simply executes\r\n$encodedParams[Zend_Oauth_Http_Utility::urlEncode($key)] = Zend_Oauth_Http_Utility::urlEncode($value) and this will throw the following warning: PHP Warning:  rawurlencode() expects parameter 1 to be string, array given in \/var\/www\/easycuc\/library\/Zend\/Oauth\/Http\/Utility.php on line 213.\r\n\r\nWhen passing a parameter \"data\" = array('main' => array('A', 'B', 'C')), the base uri looks like this:\r\nGET&http%3A%2F%2Fdev.local.ch%2Fapi%2Frest%2FapiVersion%2F1.0%2FclientId%2F6%2Fressource%2Fcustomer%2F&arg1%3DcreateCustomer%26data%3D%26method%3DcreateCustomer%26oauth_consumer_key%3DTest%26oauth_nonce%3D8667d4d243e96fa402137b801643026a%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1302201787%26oauth_version%3D1.0%26rest%3D1\r\n(decoded: http:\/\/dev.local.ch\/api\/rest\/apiVersion\/1.0\/clientId\/6\/ressource\/customer\/?method=createCustomer&arg1=createCustomer&data=&rest=1)\r\n\r\nbut should be:\r\nGET&http%3A%2F%2Fdev.local.ch%2Fapi%2Frest%2FapiVersion%2F1.0%2FclientId%2F6%2Fressource%2Fcustomer%2F&arg1%3DcreateCustomer%26data%255Bmain%255D%255B0%255D%3DA%26data%255Bmain%255D%255B1%255D%3DB%26data%255Bmain%255D%255B2%255D%3DC%26method%3DcreateCustomer%26oauth_consumer_key%3DTest%26oauth_nonce%3D8667d4d243e96fa402137b801643026a%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1302201787%26oauth_version%3D1.0%26rest%3D1\r\n(decoded: http:\/\/dev.local.ch\/api\/rest\/apiVersion\/1.0\/clientId\/6\/ressource\/customer\/?method=createCustomer&arg1=createCustomer&data[main][0]=A&data[main][1]=B&data[main][2]=C&rest=1)\r\n\r\nI fixed this by changing the function Zend_Oauth_Signature_SignatureAbstract::_getBaseSignatureString() in the following way:\r\n\r\nprotected function _getBaseSignatureString(array $params, $method = null, $url = null)\r\n    {\r\n        $encodedParams = array();\r\n        foreach ($params as $key => $value) {\r\n        \tif (is_array($value)) {\r\n        \t\t$arr = Zend_Oauth_Http_Utility::flattenParametersArray($value, $key);\r\n        \t\tforeach ($arr as $arrParam) {\r\n        \t\t\t$encodedParams[Zend_Oauth_Http_Utility::urlEncode($arrParam[0])] = \r\n                \t\tZend_Oauth_Http_Utility::urlEncode($arrParam[1]);\r\n        \t\t}\r\n        \t}\r\n            else {\r\n            \t$encodedParams[Zend_Oauth_Http_Utility::urlEncode($key)] = \r\n                \tZend_Oauth_Http_Utility::urlEncode($value);\r\n            }\r\n        }\r\n        $baseStrings = array();\r\n        if (isset($method)) {\r\n            $baseStrings[] = strtoupper($method);\r\n        }\r\n        if (isset($url)) {\r\n            \/\/ should normalise later\r\n            $baseStrings[] = Zend_Oauth_Http_Utility::urlEncode(\r\n                $this->normaliseBaseSignatureUrl($url)\r\n            );\r\n        }\r\n        if (isset($encodedParams['oauth_signature'])) {\r\n            unset($encodedParams['oauth_signature']);\r\n        }\r\n        $baseStrings[] = Zend_Oauth_Http_Utility::urlEncode(\r\n            $this->_toByteValueOrderedQueryString($encodedParams)\r\n        );\r\n        return implode('&', $baseStrings);\r\n    }\r\n\r\n\r\nAdditionally I added the function flattenParametersArray to Zend_Oauth_Http_Utility (which is almost a 1:1 copy of Zend_Http_Client::_flattenParametersArray()):\r\n\r\n   \/**\r\n     * Convert an array of parameters into a flat array of (key, value) pairs\r\n     *\r\n     * Will flatten a potentially multi-dimentional array of parameters (such\r\n     * as POST parameters) into a flat array of (key, value) paris. In case\r\n     * of multi-dimentional arrays, square brackets ([]) will be added to the\r\n     * key to indicate an array.\r\n     *\r\n     * @since  1.9\r\n     *\r\n     * @param  array  $parray\r\n     * @param  string $prefix\r\n     * @return array\r\n     *\/\r\n    public static function flattenParametersArray($parray, $prefix = null) {\r\n    \tif (! is_array($parray)) {\r\n            return $parray;\r\n        }\r\n\r\n        $parameters = array();\r\n\r\n        foreach($parray as $name => $value) {\r\n\r\n            \/\/ Calculate array key\r\n            if ($prefix) {\r\n                $key = $prefix . \"[$name]\";\r\n            } else {\r\n                $key = $name;\r\n            }\r\n\r\n            if (is_array($value)) {\r\n                $parameters = array_merge($parameters, self::flattenParametersArray($value, $key));\r\n\r\n            } else {\r\n                $parameters[] = array($key, $value);\r\n            }\r\n        }\r\n        return $parameters;\r\n    }\r\n\r\n\r\nI look forward to your feedback :-)"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11271\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                "name": "padraic",
                "displayName": "P\u00e1draic Brady",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10540",
                    "id": 10540,
                    "description": "Mini Release",
                    "name": "1.11.4",
                    "userReleaseDate": "03\/Mar\/11",
                    "archived": false,
                    "releaseDate": "2011-03-03",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10473",
                    "id": 10473,
                    "name": "Zend_Oauth",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [

            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11271\/transitions"
}