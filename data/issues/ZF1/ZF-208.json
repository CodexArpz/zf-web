{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-208",
    "key": "ZF-208",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Ability to take cache identifier as any string "
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-208\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-09-03T05:54:10.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bojan",
                "name": "bojan",
                "displayName": "Bojan Tesanovic",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-07-07T23:57:35.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:13.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "As requested from Mislav to open this ticket.\nAbility to set identifier as any kind of string\nand not just \"'Invalid id or tag : must use only [a-zA-A0-9_]'\"\n\ne.g. \n{code:javascript|title=Example}\n$urlToSomeData = \"http:\/\/api.example.com\/give\/me\/cars\/from\/new_york\/?sort=year\";\n\nif($data  = $cache->get($urlToSomeData)){\n\t\/\/......\n}else{\n\t$data = file_get_contents($urlToSomeData);\n\/\/.......\n\t$cache->save($data);\n}\n\n{code}\n\nI would recommend some fast hashing function on the identifier string, which will produce file name, if this will not corrupt current Cache system.\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-208\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                "name": "fab",
                "displayName": "Fabien MARTY",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10352",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                        "name": "fab",
                        "displayName": "Fabien MARTY",
                        "active": true
                    },
                    "body": "We have to take some time to think about that.\n\nBecause from my point of view, the md5() should be done by the user in such cases and not by Zend_Cache.\n\nLet's take some time to consider this issue.\n\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                        "name": "fab",
                        "displayName": "Fabien MARTY",
                        "active": true
                    },
                    "created": "2006-07-08T16:00:02.000+0000",
                    "updated": "2006-07-08T16:00:02.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10389",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mislav",
                        "name": "mislav",
                        "displayName": "Mislav Marohni?",
                        "active": true
                    },
                    "body": "The issue here is to decide how much would we allow to be a cache identifier. I think it's not right for a backend to limit us (like filesystem did). On the other hand, allowing everything would be expensive and maybe we'd have too much trouble with our backends",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mislav",
                        "name": "mislav",
                        "displayName": "Mislav Marohni?",
                        "active": true
                    },
                    "created": "2006-07-09T08:07:36.000+0000",
                    "updated": "2006-07-09T08:07:36.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10602",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=richard",
                        "name": "richard",
                        "displayName": "Richard Ingham",
                        "active": true
                    },
                    "body": "I was thinking about implementing it for myself in a plugin with something along the lines of:\n\n{code:none}\n$identifier = preg_replace('#[^a-zA-Z0-9_]#', '_', $identifier) . '_' . abs(crc32($identifier));\n{code}\n\nI was under the impression that crc32 was a fast hashing algorithm, but I don't know how expensive this operation would be.\nOr how useful the crc32 is...\n\nWhatever the solution, perhaps the ability to have all characters in an identifier should be a configurable option, per Zend_Cache object?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=richard",
                        "name": "richard",
                        "displayName": "Richard Ingham",
                        "active": true
                    },
                    "created": "2006-07-25T12:00:14.000+0000",
                    "updated": "2006-07-25T12:00:14.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10766",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                        "name": "fab",
                        "displayName": "Fabien MARTY",
                        "active": true
                    },
                    "body": "After taking some time, I think that the cache identifier must be a string.\n\nIf someone want to use a \"not string\" identifier, it's not difficult to call md5(serialize($yourId)) before calling Zend_Cache.\n\nLet's keep \"hacks\" out of Zend_Cache. \n\nSo I close this task",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                        "name": "fab",
                        "displayName": "Fabien MARTY",
                        "active": true
                    },
                    "created": "2006-09-03T05:53:54.000+0000",
                    "updated": "2006-09-03T05:53:54.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-208\/transitions"
}