{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2071",
    "key": "ZF-2071",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Date Constructor should respect timezone offsets in ISO 8601 date strings"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeestimate": 0,
                "timespent": 1440
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2071\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10172",
                    "id": 10172,
                    "description": "Minor Release",
                    "name": "1.5.0",
                    "userReleaseDate": "17\/Mar\/08",
                    "archived": true,
                    "releaseDate": "2008-03-17",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-02-03T05:03:09.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jazzslider",
                "name": "jazzslider",
                "displayName": "Adam Jensen",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-10-15T10:45:49.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-03-21T16:25:31.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Currently the Zend_Date constructor ignores timezone offsets specified in ISO 8601 date strings.  For example:\n\n{code}\ndate_default_timezone_set('America\/Chicago');\n\n$stringInDefaultTimezone = '2007-10-15T10:32:00-05:00';\n$stringInCustomTimezone  = '2007-10-15T10:32:00+09:00';\n\n$dateInDefaultTimezone = new Zend_Date($stringInDefaultTimezone, Zend_Date::ISO_8601);\n$dateInCustomTimezone  = new Zend_Date($stringInCustomTimezone, Zend_Date::ISO_8601);\n\necho $dateInDefaultTimezone->get(Zend_Date::TIMESTAMP) . PHP_EOL;\necho $dateInCustomTimezone->get(Zend_Date::TIMESTAMP) . PHP_EOL;\n{code}\n\nThe above code, given Zend_Date 1.0.2, produces identical timestamps for both date objects, even though the original strings referred to two different moments in time.  The only way to produce the correct timestamps given the current functionality of Zend_Date is to set the timezone offset prior to setting the rest of the date, like so:\n\n{code}\n$dateInCustomTimezone = new Zend_Date();\n$dateInCustomTimezone->set('+09:00', Zend_Date::GMT_DIFF_SEP);\n$dateInCustomTimezone->set($stringInCustomTimezone, Zend_Date::ISO_8601);\n{code}\n\nThis is much less convenient to the developer than simply specifying the date string in the constructor, and becomes particularly difficult when the developer is trying to process a dynamic collection of ISO 8601 dates in a variety of valid formats from a variety of timezones.  Without knowing the timezone offset in advance, the developer will have to extract it from the string using regular expressions, which is an extra complexity many developers could do without.\n\nIt would be much more convenient to the developer if the constructor simply respected the timezone offset provided in the date string itself.  Beyond that, it would be much more intuitive, as developers specifying timezone offsets in their date strings are probably expecting it to \"just work\"; I know that was my experience :)\n\nThanks for reading!"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2071\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/worklog\/18802",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2071",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "comment": "Integrated new feature and adoped testbed to reflect changes.",
                    "created": "2008-02-03T05:04:32.000+0000",
                    "updated": "2008-02-03T05:04:32.000+0000",
                    "started": "2008-02-03T05:04:32.000+0000",
                    "minutesSpent": 1440
                }
            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10130",
                    "id": 10130,
                    "description": "Mini Release",
                    "name": "1.0.2",
                    "userReleaseDate": "25\/Sep\/07",
                    "archived": true,
                    "releaseDate": "2007-09-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10072",
                    "id": 10072,
                    "name": "Zend_Date",
                    "description": "Zend_Date is the basic library for the handling of all date, time and calendar-related issues.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17201",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jazzslider",
                        "name": "jazzslider",
                        "displayName": "Adam Jensen",
                        "active": true
                    },
                    "body": "Aligned equal signs in code example for better readability.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jazzslider",
                        "name": "jazzslider",
                        "displayName": "Adam Jensen",
                        "active": true
                    },
                    "created": "2007-10-15T11:21:25.000+0000",
                    "updated": "2007-10-15T11:21:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18801",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Integrated with SVN-7768\n\nTimezone settings are now used and set as internal timezone if given.\nAlso an additional method getTimezoneFromString() has been added.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-02-03T05:03:09.000+0000",
                    "updated": "2008-02-03T05:03:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18974",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lode",
                        "name": "lode",
                        "displayName": "Lode Blomme",
                        "active": true
                    },
                    "body": "I ran into this problem today using Zend Framework 1.0.3. So I tried it with the code from SVN trunk, but I'm not satisfied with the behavior. I'm using a PostgreSQL database with timestamps with timezone in it. Those have to be displayed on a website to people in different timezones (they choose their timezone in a config panel).\n\n{code}\ndate_default_timezone_set('Europe\/Brussels');\n$date = new Zend_Date('2008-02-10 10:00:00+00', Zend_Date::ISO_8601);\necho $date;\n{code}\n\nThe result is :\n10 feb 2008 10:00:00\n\nWhile I expected it to be :\n10 feb 2008 11:00:00\nSince Brussels is GMT+1.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lode",
                        "name": "lode",
                        "displayName": "Lode Blomme",
                        "active": true
                    },
                    "created": "2008-02-10T16:56:05.000+0000",
                    "updated": "2008-02-10T16:56:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18975",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Why should the timezone be +01 ?\nYou set the timezone within your ISO String to +00 which is equal to GMT.\n\nIf you do not set any timezone than the timezone from default will be used... as the command says... \"date_DEFAULT_timezone\"... default if no timezone can be detected.\n\nThis is the same behaviour as if you would have done\n{code}\ndate_default_timezone_set('Europe\/Brussels');\n$date = new Zend_Date('2008-02-10 10:00:00', Zend_Date::ISO_8601);\necho $date; \/\/ note the set timezone Brussels here\n$date->setTimezone('+00:00');\necho $date; \/\/ oops... timezone changed !!\n{code}\n\nYou can't really say that this is unexpected behaviour... if you set a timezone within your inputstring then it will be used... if you suppress the timezone then the timezone will be detected.\n\nSo you have 2 ways:\nYou can eigther suppress the timezone before creating the date object... or if you are not able to change your input then you have to do some date-maths.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-02-11T01:35:38.000+0000",
                    "updated": "2008-02-11T01:35:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18976",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lode",
                        "name": "lode",
                        "displayName": "Lode Blomme",
                        "active": true
                    },
                    "body": "Sorry, my mistake.\n\nSo if I want to display a certain date in a different timezone than it was created in, I do :\n{code}\n$date = new Zend_Date('2008-02-10 10:00:00+00', Zend_Date::ISO_8601);\n\/\/ $date->setTimezone('+01:00'); is rejected with message 'timezone_open() [<a href='function.timezone-open'>function.timezone-open<\/a>]: Unknown or bad timezone (+01:00)' in ...\\Zend\\Date\\DateObject.php:1016\n$date->setTimezone('Europe\/Brussels');\necho $date;\n{code}\nThat is indeed the behavior to expect.\n\nBut then I think I noticed a bug :\n{code}\ndate_default_timezone_set('Europe\/Brussels');\n$date = new Zend_Date('2008-02-10 10:00:00+00', Zend_Date::ISO_8601);\n$date->setTimezone('Europe\/Brussels');\necho $date->get(Zend_Date::ISO_8601);\n{code}\nOutputs :\n2008-02-10T10:00:00+01:00\nInstead of :\n2008-02-10T11:00:00+01:00\n\nI think this is because in Zend_Date_DateObject on line 1009 the old timezone is fetched with :\n{code}\n$oldzone = @date_default_timezone_get();\n{code}\nWhere it gets 'Europe\/Brussels' as old timezone, so it doesn't make any changes.\n\nIt does work when I do :\n{code}\ndate_default_timezone_set('Europe\/London');\n$date = new Zend_Date('2008-02-10 10:00:00+00', Zend_Date::ISO_8601);\n$date->setTimezone('Europe\/Brussels');\necho $date->get(Zend_Date::ISO_8601);\n{code}\nBut that would mean I have to detect the timezone from the input string myself, and set the date_default_timezone accordingly.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lode",
                        "name": "lode",
                        "displayName": "Lode Blomme",
                        "active": true
                    },
                    "created": "2008-02-11T04:01:34.000+0000",
                    "updated": "2008-02-11T04:01:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18977",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "You should use the latest trunk version...\nAlso to mention +00 is not a timezone.\n\nWhen you are having problems with the latest version from trunk please give\n* PHP Version\n* OS\n* ZF SVN Version\n* Reproducable code\n\nOtherwise we are not able to reproduce the behaviour.\nWithin SVN7910 I found no problems with the code you gave for reproduction.\n\nBtw: The codelines you are referring to have nothing to do with the recognition of the timezone.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-02-11T05:58:17.000+0000",
                    "updated": "2008-02-11T05:58:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18989",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lode",
                        "name": "lode",
                        "displayName": "Lode Blomme",
                        "active": true
                    },
                    "body": "PHP Version 5.2.0 in Zend Studio 5.5.0\nWindows XP SP2\nZF SVN 7919\n\nCode :\n{code}\ndate_default_timezone_set('Europe\/Brussels');\n$date = new Zend_Date('2008-02-10 10:00:00+00', Zend_Date::ISO_8601);\n$date->setTimezone('Europe\/Brussels');\necho $date->get(Zend_Date::ISO_8601);\n{code}\n\nDoesn't work correct here. But I was indeed wrong about the reason. I can make it work by using :\n{code}2008-02-10 10:00:00+00:00{code}\nas input instead of :\n{code}2008-02-10 10:00:00+00{code}\nPostgreSQL doesn't give the minutes in the offset. If I may believe Wikipedia (http:\/\/en.wikipedia.org\/wiki\/ISO_8601) it doesn't have to.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lode",
                        "name": "lode",
                        "displayName": "Lode Blomme",
                        "active": true
                    },
                    "created": "2008-02-11T13:42:05.000+0000",
                    "updated": "2008-02-11T13:42:05.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2071\/transitions"
}