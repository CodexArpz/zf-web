{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-958",
    "key": "ZF-958",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "ZF directory structure is incompatible with use of svn:externals"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-958\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10022",
                    "id": 10022,
                    "description": "Beta Release; all components feature complete for 1.0",
                    "name": "0.9.0",
                    "userReleaseDate": "17\/Mar\/07",
                    "archived": true,
                    "releaseDate": "2007-03-17",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-03-13T13:39:31.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                "name": "darby",
                "displayName": "Darby Felton",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-02-23T11:13:18.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:51.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "[The recommended directory structure|http:\/\/framework.zend.com\/manual\/en\/zend.controller.getting-started.html#zend.controller.getting-started.directory-structure] and the recommended use of svn:externals for maintaining user copies of the framework are incompatible. That is, the following structure:\n\n{code}\n\/application\n  \/models\n  \/views\n  \/controllers\n\/document_root\n  \/images\n  \/styles\n  .htaccess\n  index.php\n\/library\n  \/Zend\n  Zend.php\n  \/PEAR\n  \/SuperLib\n{code}\n\ncannot be maintained by svn:externals because {{Zend.php}} is sibling to the {{Zend\/}} directory. The svn:externals property only works upon directories, not files.\n\nAn alternative approach:\n\n{code}\n\/application\n  \/models\n  \/views\n  \/controllers\n\/document_root\n  \/images\n  \/styles\n  .htaccess\n  index.php\n\/library\n  \/ZendFramework\n    \/Zend\n    Zend.php\n  \/PEAR\n  \/SuperLib\n{code}\n\nsuffers from the problem of requiring each of the children directories of {{\/library}} to be in the include path, resulting in suboptimal performance when working with multiple libraries.\n\nThanks to [~andries] for [the report|http:\/\/www.nabble.com\/svn%3Aexternals---zend-framework-tf3278142s16154.html]!"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-958\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10001",
                    "id": 10001,
                    "name": "Zend_Loader",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12907",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "One solution I have heard suggested is to move Zend.php under the Zend directory.  This would be a single exception to our policy that class hierarchy should match directory hierarchy, but it would solve this issue.  For example:\n\n{code}\n\/application\n  \/models\n  \/views\n  \/controllers\n\/document_root\n  \/images\n  \/styles\n  .htaccess\n  index.php\n\/library\n    \/Zend\n        Zend.php\n        Db.php, etc.\n  \/PEAR\n  \/SuperLib\n{code}\n\nThen users could use svn externals to grab the \"library\/Zend\/\" directory and they would get everything they need.\n\nThe breakage to backward compatibility impact would be that any usage of this:\n{code}\nrequire_once \"Zend.php\";\n{code}\n\nWould necessarily be rewritten as follows:\n{code}\nrequire_once \"Zend\/Zend.php\";\n{code}\n\nBut all code invoking the class itself, including static methods and constants, would be unchanged.  \n\nAlso, the change above could be worked around by adding \"library\/Zend\" to the application's include_path.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-23T12:38:45.000+0000",
                    "updated": "2007-02-23T12:38:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12908",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "body": "Hey Bill,\n\nYes, this is a possible solution. PEAR does the same thing, and also stores the PEAR.php file within the PEAR root folder itself. Another solution, would be to rename the Zend.php file to Zend_Util, Zend_Base or something similar, although I am not sure if that would be a good idea?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "created": "2007-02-23T12:45:38.000+0000",
                    "updated": "2007-02-23T12:45:38.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12909",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "+1 on this idea.  I tried to push for something similar with the rework of Zend.php and the registry pre 0.7, but the team voted to push it to the backburner, because the idea included more than just moving Zend.php.\n\nBasically, Zend.php is inflexible and doesn't provide a mechanism for extension.  Some good ideas have been proposed as \"plugins\" or optional \"extras\", but we don't have the structure in place for hanging these add-ons to Zend.php as bootstrap-level \"plugins\".  Personally, I prefer Andries suggestion as this gets us closer to this mechanism\/structure to support loading optional \"plugins\" like ZF-151.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-23T13:10:27.000+0000",
                    "updated": "2007-02-23T13:10:27.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12910",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "If we move Zend.php to library\/Zend\/Bootstrap\/Zend.php (or wherever), we could just leave \"require_once 'Zend\/Bootstrap\/Zend.php' as the sole line of code in the original location (\/library\/Zend.php) for BC without requiring changes to include paths.  On the other hand, we could leave something in the original file to emit an error or warning encouraging everyone to update their code to the new location of Zend.php.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-23T13:39:45.000+0000",
                    "updated": "2007-02-23T13:39:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12929",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "body": "Gavin, Bill's also making a good point here. By moving Zend.php to Zend\/  all code invoking the class would be unchanged, just for the sake of backwards compatibility.... this is not the case if we rename Zend.php to something different.\n\nEither way, if such change is taking place, I rather see this happen pre 1.0 release.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "created": "2007-02-24T06:25:04.000+0000",
                    "updated": "2007-02-24T06:25:04.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12989",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Code would need to change either way.  Here is why:\n\n{code}trunk\/library\/Zend.php {code}\nrequire 'Zend.php'; \/\/ current approach in 0.8 (i.e. works ok now)\n\n{code}trunk\/library\/Zend\/Zend.php{code}\n\nIf include_path is 'trunk\/library\/Zend':\n{code}\nrequire 'Zend.php'; \/\/ works\nrequire 'Zend\/Session.php'; \/\/ does not work\n{code}\n\nIf include_path is 'trunk\/library\/Zend:trunk\/library', then code above works, but we have an extra component in our include path (not a clean solution - i.e. a hack).  The hack is not needed, if developers change their code to {{require_once 'Zend\/Zend.php'}}.  IMHO, changing the include paths is more error prone, risky, and complex \"code\" to change than changing the code of a ZF app.  Also, some situations result in different groups of people responsible for the production environment than the developers who write the code deployed, leading to further complications and headaches when changing external include paths.  Thus, some developers might need to add more code to their applications to change the include path on every request :(\n\nIf include_path is 'trunk\/library' (i.e. what we use now for 0.8), then we don't need a hack in the include path, but we do need the \"hack\" of having one line of code in 'library\/Zend.php' ({{require_once 'Bootstrap\/Zend.php'}}), OR developers need to change their code (to ({{require_once 'Bootstrap\/Zend.php'}}). The approach I suggested works even if developers make no changes.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-26T13:13:42.000+0000",
                    "updated": "2007-02-26T13:13:42.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12992",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "I would be in favor of moving {{library\/Zend.php}} to below {{library\/Zend\/}}. This seems to be the only way to support svn:externals using the recommended directory structure without requiring an include_path entry specifically for the Zend Framework. I think there are other reasons to move the functionality of the {{Zend}} class, however, since, as others have pointed out, it fails to meet specific goals, lacks cohesion, and jumbles together completely unrelated functionality - \"schizophrenic,\" I believe, was the term of choice. :)\n\nNo matter where the chosen location, it should be noted that either the class must be renamed or the result violates class and file naming conventions. For example, the class in {{library\/Zend\/Zend.php}} should be renamed {{Zend_Zend}}, or we break the class name for the file:\n\n{code}\nZend\/Acl.php  --> class Zend_Acl\nZend\/Zend.php --> class Zend?\n{code}\n\nAs a side note, PEAR breaks the same conventions:\n{code}\nPEAR\/PEAR.php --> class PEAR\nPEAR\/Log.php  --> class PEAR_Log\n{code}\n\nOf course, we could mark the original {{library\/Zend.php}} as {{@deprecated}}, having class {{Zend}} temporarily proxy to whatever classes we decide for delegation (e.g., {{Zend_Util}}, {{Zend_Loader}}, {{Zend_Registry}}, {{Zend_Debug}}). I believe that this would be similar to, if not the same as, Gavin's suggestion.\n\nI would like to have addressed this before 0.9.0, since we will be more concerned about backward compatibility thereafter, since we are striving for this to be a \"beta\" (API stable) release.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-02-26T13:54:32.000+0000",
                    "updated": "2007-02-26T13:54:32.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12996",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "body": "ok, so a roundup:\n\n{code}\nstatic public function loadClass($class, $dirs = null\nstatic public function loadFile($filename, $dirs = null, $once = false)\nstatic public function isReadable($filename)\n{code}\n\nWill move to Zend\/Loader.php\n\n{code}\nstatic public function loadInterface($class, $dirs = null)\nstatic public function exception($class, $message = '', $code = 0)\n{code}\n\nWill be deprecated (removed)\n\n{code}\nstatic public function register($index, $newval)\nstatic public function registry($index = null)\nstatic public function isRegistered($index)\nstatic public function initRegistry($registry = 'Zend_Registry')\nstatic public function __unsetRegistry()\n{code}\n\nWill move to Zend\/Registry.php\n\n{code}\nstatic public function dump($var, $label=null, $echo=true)\n{code}\n\nWill move to Zend\/Debug.php\n\nAnd last but not least:\n\n{code}\nstatic public function compareVersion($version)\n{code}\n\nWill be supported by  Zend_Environment as follows (Simon Mundy):\n\n{code}\n$environment = new Zend_Environment(new Zend_Environment_Core('framework'));\nif ($environment->framework->isVersion('0.9')) {\n    \/\/ ...\n}\n{code}\n\nIn the 0.9 release Zend.php should temporarily proxy these methods, and mark the file as deprecated. A note should be added to encourage developers to update their code according to these changes.\n\nQuestion is if we all agree on this? :)\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "created": "2007-02-26T14:20:44.000+0000",
                    "updated": "2007-02-26T14:20:44.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12997",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "body": "Not to forget. All unit tests should be updated, according to these changes.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=andries",
                        "name": "andries",
                        "displayName": "Andries Seutens",
                        "active": true
                    },
                    "created": "2007-02-26T14:25:42.000+0000",
                    "updated": "2007-02-26T14:25:42.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12998",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Zend_Environment is not intended for use during ordinary execution on production applications with every request.  Zend_Environment's goals focus on robustness and functionality, not performance.  Thus, Zend_Environment will not be (and should not be) loaded with every request, and {{compareVersion}} must remain in a \"light\" loader for the ZF.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-02-26T14:37:51.000+0000",
                    "updated": "2007-02-26T14:37:51.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13000",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "The outline that Andries gives above sounds pretty good, but after seeing the level of diverse discussion on the email thread, it seems clear that we should write a proposal for this change, and discuss more use cases.\n\nI would add to Andries' outline that we need a class Zend_Version.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-26T14:59:32.000+0000",
                    "updated": "2007-02-26T14:59:32.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13284",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Rewrite summary.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-03-13T13:38:36.000+0000",
                    "updated": "2007-03-13T13:38:36.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13285",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Resolved.  Zend.php file is deprecated, and no longer used by any class in Zend Framework.  Therefore checking it out from svn is optional.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-03-13T13:39:31.000+0000",
                    "updated": "2007-03-13T13:39:31.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-958\/transitions"
}