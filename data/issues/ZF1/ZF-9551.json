{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9551",
    "key": "ZF-9551",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Form isValidPartial Errors when validating a SubForm with an equal named Element"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/5",
                "name": "Sub-task",
                "subtask": true
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9551\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-03-31T09:23:34.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-03-26T15:49:37.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-03-31T09:23:34.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When adding a SubForm to Form and adding An Element to that SubForm\r\nwhich has the same name as the SubForm, isValidPartial will error with \r\n1) Zend_Form_FormTest::testIsValidPartialEqualSubFormAndElementName\r\nInvalid argument supplied for foreach()\r\n\r\n\/var\/www\/FRAMEWORKS\/PHP\/ZF\/trunk\/library\/Zend\/Form.php:2080\r\n\/var\/www\/FRAMEWORKS\/PHP\/ZF\/trunk\/library\/Zend\/Form.php:2090\r\n\/var\/www\/FRAMEWORKS\/PHP\/ZF\/trunk\/tests\/Zend\/Form\/FormTest.php:1487\r\n\r\nBased on what i have learned from patching the related issue in isValid\r\ni updatet the patch below, for the description why the Error occures\r\nsee [ZF-9348]\r\n\r\nTo make the method isValidPartial() more readable and to be able\r\nto apply a solution the same way as above i changed the iteration from\r\n{code}\r\nforeach($data as $key => $val) {\r\n    if (null !== $this->getElement($key)) {\r\n        \/\/ validate Element\r\n    }\r\n    if (null !== $this->getSubForm($key)) {\r\n        $form->isValidPartial($data[$key]);\r\n    }\r\n}\r\nforeach($nonValidatedSubForms as $form) {\r\n    $form->isValidPartial($data);\r\n}\r\n{code}\r\ninto\r\n{code}\r\nforeach ($this->getElements() as $key => $element) {\r\n     if (isset($data[$key])) {\r\n         \/\/ validate Element\r\n     }\r\n}\r\nforeach ($this->getSubForms() as $key => $form) {\r\n     if (isset($data[$key]) && !$form->isArray()) { \/\/ Why !$form->isArray() see @[ZF-9348]\r\n         $form->isValidPartial($data[$key]);\r\n     } else {\r\n         $form->isValidPartial($data);\r\n     }\r\n}\r\n{code}\r\n\r\nWhich in my Opinion is basically the same.\r\n\r\nIn Full Notation Before Patch\r\n{code}\r\n\r\n        foreach ($data as $key => $value) {\r\n            if (null !== ($element = $this->getElement($key))) {\r\n                if (null !== $translator && !$element->hasTranslator()) {\r\n                    $element->setTranslator($translator);\r\n                }\r\n                $valid = $element->isValid($value, $data) && $valid;\r\n            } elseif (null !== ($subForm = $this->getSubForm($key))) {\r\n                if (null !== $translator && !$subForm->hasTranslator()) {\r\n                    $subForm->setTranslator($translator);\r\n                }\r\n                $valid = $subForm->isValidPartial($data[$key]) && $valid;\r\n                $validatedSubForms[] = $key;\r\n            }\r\n        }\r\n        foreach ($this->getSubForms() as $key => $subForm) {\r\n            if (!in_array($key, $validatedSubForms)) {\r\n                if (null !== $translator && !$subForm->hasTranslator()) {\r\n                    $subForm->setTranslator($translator);\r\n                }\r\n\r\n                $valid = $subForm->isValidPartial($data) && $valid;\r\n            }\r\n        }\r\n{code}\r\nAnd After Patch\r\n{code}\r\n        foreach ($this->getElements() as $key => $element) {\r\n            if (isset($data[$key])) {\r\n                if (null !== $translator && !$element->hasTranslator()) {\r\n                    $element->setTranslator($translator);\r\n                }\r\n                $valid = $element->isValid($data[$key], $data) && $valid;\r\n            }\r\n        }\r\n        foreach ($this->getSubForms() as $key => $form) {\r\n            if (null !== $translator && !$form->hasTranslator()) {\r\n                $form->setTranslator($translator);\r\n            }\r\n            if (isset($data[$key]) && !$form->isArray()) {\r\n                $valid = $form->isValidPartial($data[$key]) && $valid;\r\n            } else {\r\n                $valid = $form->isValidPartial($data) && $valid;\r\n            }\r\n        }\r\n{code}\r\n\r\nThis tested patch fixes the issue, Unit Test included\r\n\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php        (Revision 21667)\r\n+++ tests\/Zend\/Form\/FormTest.php        (Arbeitskopie)\r\n@@ -1473,7 +1473,25 @@\r\n         $this->assertTrue($this->form->isValid($data));\r\n     }\r\n \r\n+    public function testIsValidPartialEqualSubFormAndElementName()\r\n+    {\r\n+        $this->form->addSubForm(new Zend_Form_SubForm(), 'foo')\r\n+                   ->foo->addElement('text', 'foo')\r\n+                        ->foo->setRequired(true)\r\n+                             ->addValidator('Identical',\r\n+                                            false,\r\n+                                            array('Foo Value'));\r\n+        $foo = array('foo' =>\r\n+                     array('foo' => 'Foo Value'));\r\n \r\n+        $this->assertTrue($this->form->isValidPartial($foo));\r\n+\r\n+        $this->form->foo->setIsArray(false);\r\n+\r\n+        $this->assertTrue($this->form->isValidPartial($foo));\r\n+    } \r\n+\r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21667)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -2077,30 +2077,24 @@\r\n \r\n         $translator        = $this->getTranslator();\r\n         $valid             = true;\r\n-        $validatedSubForms = array();\r\n \r\n-        foreach ($data as $key => $value) {\r\n-            if (null !== ($element = $this->getElement($key))) {\r\n+        foreach ($this->getElements() as $key => $element) {\r\n+            if (isset($data[$key])) {\r\n                 if (null !== $translator && !$element->hasTranslator()) {\r\n                     $element->setTranslator($translator);\r\n                 }\r\n-                $valid = $element->isValid($value, $data) && $valid;\r\n-            } elseif (null !== ($subForm = $this->getSubForm($key))) {\r\n-                if (null !== $translator && !$subForm->hasTranslator()) {\r\n-                    $subForm->setTranslator($translator);\r\n-                }\r\n-                $valid = $subForm->isValidPartial($data[$key]) && $valid;\r\n-                $validatedSubForms[] = $key;\r\n+                $valid = $element->isValid($data[$key], $data) && $valid;\r\n             }\r\n         }\r\n-        foreach ($this->getSubForms() as $key => $subForm) {\r\n-            if (!in_array($key, $validatedSubForms)) {\r\n-                if (null !== $translator && !$subForm->hasTranslator()) {\r\n-                    $subForm->setTranslator($translator);\r\n-                }\r\n-\r\n-                $valid = $subForm->isValidPartial($data) && $valid;\r\n+        foreach ($this->getSubForms() as $key => $form) {\r\n+            if (null !== $translator && !$form->hasTranslator()) {\r\n+                $form->setTranslator($translator);\r\n             }\r\n+            if (isset($data[$key]) && !$form->isArray()) {\r\n+                $valid = $form->isValidPartial($data[$key]) && $valid;\r\n+            } else {\r\n+                $valid = $form->isValidPartial($data) && $valid;\r\n+            }\r\n         }\r\n \r\n         $this->_errorsExist = !$valid;\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9551\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "parent": {
            "name": "parent",
            "type": "issuelinks",
            "value": {
                "issueKey": "ZF-9350",
                "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9350",
                "type": {
                    "name": "Parent",
                    "direction": "INBOUND"
                }
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39632",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Updatet the Test, it checks now against $form->setIsArray(false) as well.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-03-29T05:54:22.000+0000",
                    "updated": "2010-03-29T05:54:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39676",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Patch applied in trunk and 1.10 release branch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-03-31T09:23:34.000+0000",
                    "updated": "2010-03-31T09:23:34.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9551\/transitions"
}