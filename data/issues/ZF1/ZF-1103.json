{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1103",
    "key": "ZF-1103",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Cascading delete functionality is not recursive"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 7200,
                "timeestimate": 7200
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1103\/votes",
                "votes": 27,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/11080",
                    "id": 11080,
                    "description": "Mini Release",
                    "name": "1.11.12",
                    "userReleaseDate": "22\/Jun\/12",
                    "archived": false,
                    "releaseDate": "2012-06-22",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-30T12:52:40.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexvn",
                "name": "alexvn",
                "displayName": "Alex Netkachov",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-03-21T16:56:51.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-06-05T01:35:47.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Cascade delete now deletes only one level of data. For example:\r\n\r\ntable object:\r\n  id\r\n  parent\r\n  name\r\n\r\ndata:\r\n||id||parent||name||\r\n|1|null|domain1|\r\n|2|1|section1|\r\n|3|2|item1|\r\n\r\n$objects->find(1)\\->current()\\->delete() it deletes domain1 and section1 and not item1.\r\nProbably issue is in _cascadeDelete method that deletes rows in dependent table using table->delete($where), not by selecting a rowset and calling ->delete for each row.\r\n\r\nIn DBMS cascade operations affect all depended tables and their subtables.\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1103\/watchers",
                "isWatching": false,
                "watchCount": 23
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "FixForZF1.12",
                "state:need-feedback",
                "zf-caretaker-adamlundrigan",
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                "name": "adamlundrigan",
                "displayName": "Adam Lundrigan",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-12265",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-12265",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-11810",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11810",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12554",
                    "filename": "Zend_Db-cascade-delete.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-12-30T20:56:49.000+0000",
                    "size": 6973,
                    "mimeType": "text\/x-diff",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12554\/Zend_Db-cascade-delete.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/15116",
                    "filename": "ZF-1103_complete.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-30T11:43:08.000+0000",
                    "size": 15568,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/15116\/ZF-1103_complete.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/15077",
                    "filename": "ZF-1103_test.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-09T23:35:41.000+0000",
                    "size": 6101,
                    "mimeType": "text\/x-diff",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/15077\/ZF-1103_test.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10022",
                    "id": 10022,
                    "description": "Beta Release; all components feature complete for 1.0",
                    "name": "0.9.0",
                    "userReleaseDate": "17\/Mar\/07",
                    "archived": true,
                    "releaseDate": "2007-03-17",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/13632",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assign to Bill Karwin.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-03-22T12:22:26.000+0000",
                    "updated": "2007-03-22T12:22:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16940",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=voxpelli",
                        "name": "voxpelli",
                        "displayName": "Pelle Wessman",
                        "active": true
                    },
                    "body": "Came across this bug also when I removed a parent of another table which in turn was the parent of a third table from which the affected rows wasn't removed.\n\nOn row 887 of the Zend_Table_Abstract in version 1.0.1 within the function _cascadeDelete a row is constructed like this:\n{code}$rowsAffected += $this->delete($where);{code}\n\nIt should instead be constructed as something like this:\n{code}\n$toDelete = $this->fetchAll($where);\nforeach($toDelete as $row) {\n    $rowsAffected += $row->delete();\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=voxpelli",
                        "name": "voxpelli",
                        "displayName": "Pelle Wessman",
                        "active": true
                    },
                    "created": "2007-09-24T15:15:04.000+0000",
                    "updated": "2007-09-24T15:15:04.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16942",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=voxpelli",
                        "name": "voxpelli",
                        "displayName": "Pelle Wessman",
                        "active": true
                    },
                    "body": "By the way - shouldn't this be flagged as a bug rather than an improvement?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=voxpelli",
                        "name": "voxpelli",
                        "displayName": "Pelle Wessman",
                        "active": true
                    },
                    "created": "2007-09-24T15:17:48.000+0000",
                    "updated": "2007-09-24T15:17:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16971",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=voxpelli",
                        "name": "voxpelli",
                        "displayName": "Pelle Wessman",
                        "active": true
                    },
                    "body": "Another effect of the current way of deleting rows in depending tables is that it bypasses eventual pre- and post-operations that may have been added to those tables row-classes. Is that an issue perhaps?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=voxpelli",
                        "name": "voxpelli",
                        "displayName": "Pelle Wessman",
                        "active": true
                    },
                    "created": "2007-09-26T04:03:22.000+0000",
                    "updated": "2007-09-26T04:03:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20357",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please categorize\/fix as needed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-25T20:43:59.000+0000",
                    "updated": "2008-03-25T20:43:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20935",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:11:49.000+0000",
                    "updated": "2008-04-18T13:11:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22994",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhoward",
                        "name": "rhoward",
                        "displayName": "Rob Howard",
                        "active": true
                    },
                    "body": "Seconding Pelle Wessman's comment regarding the status of this issue; this issue should be marked as a Bug, as the current method of cascading results in unexpected behaviour (ie. it behaves in a manner contrary to every other \"cascade\" operation I can think of, RDBMS or otherwise).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rhoward",
                        "name": "rhoward",
                        "displayName": "Rob Howard",
                        "active": true
                    },
                    "created": "2008-07-22T17:34:51.000+0000",
                    "updated": "2008-07-22T17:34:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26540",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "This indeed is a bug. I was 100% sure that it works like normal cascades in RDBMSs do, until reading it.\n\nCascades on the PHP level are also useful if you're using triggers in MySQL, because native MySQL cascades don't trigger them on cascaded changes.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-21T01:53:58.000+0000",
                    "updated": "2008-11-21T01:53:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26987",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Reassigning to Ralph since he's the new maintainer of Zend_Db",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-12-04T13:17:30.000+0000",
                    "updated": "2008-12-04T13:17:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27933",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Ill attempt to confirm this with unit tests within 2 weeks.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-01-09T13:34:06.000+0000",
                    "updated": "2009-01-09T13:34:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30237",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frenkel",
                        "name": "frenkel",
                        "displayName": "Frank Groeneveld",
                        "active": true
                    },
                    "body": "Ralph Schindler, did you confirm this?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frenkel",
                        "name": "frenkel",
                        "displayName": "Frank Groeneveld",
                        "active": true
                    },
                    "created": "2009-04-17T23:54:30.000+0000",
                    "updated": "2009-04-17T23:54:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32679",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Not confirmed yet.  But just a thought: what is to prevent circular references from being an issue?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-07-17T15:32:48.000+0000",
                    "updated": "2009-07-17T15:32:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34193",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=konrness",
                        "name": "konrness",
                        "displayName": "Konr Ness",
                        "active": true
                    },
                    "body": "Do you need more information to resolve this issue?\n\nI'd be happy to provide some test cases or anything else you may need. I believe this to be a rather serious issue with Zend_Db_Table.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=konrness",
                        "name": "konrness",
                        "displayName": "Konr Ness",
                        "active": true
                    },
                    "created": "2009-09-02T11:52:53.000+0000",
                    "updated": "2009-09-02T11:52:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34580",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Yes, can you provide a simple test case that demonstrates the problem? Do you know if it can be demonstrated with the existing database in the unit tests?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-09-17T16:41:39.000+0000",
                    "updated": "2009-09-17T16:41:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35211",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jcokos",
                        "name": "jcokos",
                        "displayName": "John Cokos",
                        "active": true
                    },
                    "body": "I have the same issue.  Below is an example of  how you can replicate it ...\r\n\r\n\r\n============================================================================\r\nThe SQL Tables and some sample data:\r\n============================================================================\r\n{code}\r\nCREATE TABLE IF NOT EXISTS `testtable` (\r\n  `rowid` int(11) NOT NULL AUTO_INCREMENT,\r\n  `name` varchar(255) DEFAULT NULL,\r\n  PRIMARY KEY (`rowid`)\r\n);\r\n\r\nCREATE TABLE IF NOT EXISTS testtable_sub (\r\n  rowid int(11) NOT NULL AUTO_INCREMENT,\r\n  testtable_id int(11),\r\n  name varchar(255) DEFAULT NULL,\r\n  PRIMARY KEY (`rowid`),\r\n  KEY tts (testtable_id)\r\n);\r\n\r\n\r\nCREATE TABLE IF NOT EXISTS testtable_sub_sub (\r\n  rowid int(11) NOT NULL AUTO_INCREMENT,\r\n  testtable_sub_id int(11),\r\n  name varchar(255) DEFAULT NULL,\r\n  PRIMARY KEY (`rowid`),\r\n  KEY ttss (testtable_sub_id)\r\n);\r\n\r\n\r\nCREATE TABLE IF NOT EXISTS testtable_sibling (\r\n  rowid int(11) NOT NULL AUTO_INCREMENT,\r\n  testtable_id int(11),\r\n  name varchar(255) DEFAULT NULL,\r\n  PRIMARY KEY (`rowid`),\r\n  KEY ttsb (testtable_id)\r\n);\r\n\r\n\r\nINSERT INTO testtable VALUES( 1, \"Person 1\" );\r\nINSERT INTO testtable VALUES( 2, \"Person 2\" );\r\n\r\nINSERT INTO testtable_sibling VALUES( 3, 1, \"Person 1 (sibling)\" );\r\nINSERT INTO testtable_sibling VALUES( 5, 2, \"Person 2 (sibling)\" );\r\n\r\nINSERT INTO testtable_sub VALUES( 5, 1, \"Person 1 (sub)\" );\r\nINSERT INTO testtable_sub VALUES( 7, 2, \"Person 2 (sub)\" );\r\n\r\nINSERT INTO testtable_sub_sub VALUES( 1, 5, \"Person 1 (sub sub 1)\" );\r\nINSERT INTO testtable_sub_sub VALUES( 2, 5, \"Person 1 (sub sub 2)\" );\r\nINSERT INTO testtable_sub_sub VALUES( 3, 7, \"Person 2 (sub sub 2)\" );\r\n{code}\r\n============================================================================\r\nThe Models\/Classes (I have them in separate files, but am just copying\/pasting here for speed)\r\n============================================================================\r\n{code}\r\n<?php\r\nclass Testtable extends Table\r\n{\r\n\t# This table\r\n\tprotected $_name = 'testtable';\r\n\tprotected $_primary = array( 'rowid' );\r\n\tprotected $_sequence = true;\r\n\r\n\t# Dependents\r\n\tprotected $_dependentTables = array( 'TesttableSibling','TesttableSub' );\r\n\r\n\t# References\r\n\tprotected $_referenceMap = array(\r\n\r\n\t);\r\n}\r\n\r\n?>\r\n\r\n<?php\r\nclass TesttableSibling extends DB_Table_Abstract\r\n{\r\n\t# This table\r\n\tprotected $_name = 'testtable_sibling';\r\n\tprotected $_primary = array( 'rowid' );\r\n\tprotected $_sequence = true;\r\n\r\n\t# Dependents\r\n\tprotected $_dependentTables = array();\r\n\r\n\t# References\r\n\tprotected $_referenceMap = array(\r\n\t\t'TT'\t\t=> array(\r\n\t\t\t'columns'\t\t=> 'testtable_id',\r\n\t\t\t'refTableClass'\t=> 'Testtable',\r\n\t\t\t'refColumns'\t=> 'rowid',\r\n\t\t\t'onDelete'\t\t=> self::CASCADE,\r\n\t\t\t'onUpdate'\t\t=> self::CASCADE,\r\n\t\t),\r\n\t);\r\n\r\n\r\n}\r\n\r\n?>\r\n\r\n<?php\r\nclass TesttableSub extends DB_Table_Abstract\r\n{\r\n\t# This table\r\n\tprotected $_name = 'testtable_sub';\r\n\tprotected $_primary = array( 'rowid' );\r\n\tprotected $_sequence = true;\r\n\r\n\t# Dependents\r\n\tprotected $_dependentTables = array( 'TesttableSubSub' );\r\n\r\n\t# References\r\n\tprotected $_referenceMap = array(\r\n\t\t'TT'\t\t=> array(\r\n\t\t\t'columns'\t\t=> 'testtable_id',\r\n\t\t\t'refTableClass'\t=> 'Testtable',\r\n\t\t\t'refColumns'\t=> 'rowid',\r\n\t\t\t'onDelete'\t\t=> self::CASCADE,\r\n\t\t\t'onUpdate'\t\t=> self::CASCADE,\r\n\t\t),\r\n\t);\r\n\r\n}\r\n\r\n?>\r\n\r\n<?php\r\nclass TesttableSubSub extends DB_Table_Abstract\r\n{\r\n\t# This table\r\n\tprotected $_name = 'testtable_sub_sub';\r\n\tprotected $_primary = array( 'rowid' );\r\n\tprotected $_sequence = true;\r\n\r\n\t# Dependents\r\n\tprotected $_dependentTables = array();\r\n\r\n\t# References\r\n\tprotected $_referenceMap = array(\r\n\t\t'TT'\t\t=> array(\r\n\t\t\t'columns'\t\t=> 'testtable_sub_id',\r\n\t\t\t'refTableClass'\t=> 'TesttableSub',\r\n\t\t\t'refColumns'\t=> 'rowid',\r\n\t\t\t'onDelete'\t\t=> self::CASCADE,\r\n\t\t\t'onUpdate'\t\t=> self::CASCADE,\r\n\t\t),\r\n\t);\r\n\r\n\r\n}\r\n\r\n?>\r\n{code}\r\n============================================================================\r\nTest Case\r\n============================================================================\r\n{code}\r\n\t$TestTable = new Testtable();\r\n\r\n\t$record = $TestTable->getRecord( array (\r\n\t\t\"rowid\" => $this->view->params['oldid']\r\n\t) );\r\n\r\n\t$record->delete();\r\n\r\n{code}\r\nCreate an object of TestTable, grab one row (find by rowid) and then call $row->delete()\r\n\r\nIt will delete the record from testtable, testtable_sub and testtable_sibling (both are immediate children of testttable), but any records in testtable_sub_sub, which is a child of testtable_sub are not deleted as you would expect them to be, following the deletion of their parent rows from testtable_sub by the cascade operation.\r\n\r\nIf you set these same tables up in mySQL as INNODB, using Foreign Keys and cascading deletes, everything happens as it should when you delete the parent record ... would be nice to have reliable functionality at the Zend Level as well for those cases where you cannot rely on the DB to think for you.\r\n\r\nHTH, John",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-10-14T09:13:30.000+0000",
                    "updated": "2009-12-30T10:49:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37250",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Attachment is against trunk.\r\n\r\nTo use this feature, set the 'onDelete' key of any reference map element to self::CASCADE_RECURSE instead of self::CASCADE.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-12-30T20:56:51.000+0000",
                    "updated": "2009-12-30T21:03:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37293",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=konrness",
                        "name": "konrness",
                        "displayName": "Konr Ness",
                        "active": true
                    },
                    "body": "Changing the _getPrimaryKey() function in Zend_Db_Table_Row_Abstract to have public scope instead of protected is problematic because the Zend coding standard's naming convention does not allow an underscore to preceed a public method's name.\r\n\r\nPerhaps you change the _getPrimaryKey() back to protected and add a public getPrimaryKey() that calls the protected function?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=konrness",
                        "name": "konrness",
                        "displayName": "Konr Ness",
                        "active": true
                    },
                    "created": "2010-01-01T19:27:54.000+0000",
                    "updated": "2010-01-01T19:27:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37305",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "I can do that, yes. We do have some places in ZF that have public underscored methods, they are mainly there as a way to \"enforce\" or demonstrate that they are to be used internally only.  Imagine if PHP had class level (or namespace visibility).\r\n\r\nBut I agree with you, and I can change this.  I guess it's not a big deal if getPrimaryKey() is visibly available to consumers of the class.\r\n\r\nHow does it work for you though? :)\r\n\r\n-ralph",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2010-01-02T12:05:26.000+0000",
                    "updated": "2010-01-02T12:05:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37315",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=konrness",
                        "name": "konrness",
                        "displayName": "Konr Ness",
                        "active": true
                    },
                    "body": "In my initial tests, the recursive deletes are working on my test data.\r\n\r\nTwo Minor Changes:\r\n1) There are three typos in the comments, both with the spelling of CASCADE. You have spelled it CASECADE.\r\n2) The method comment for _cascadeDelete says \"Called by parent table's class during delete() method.\", but it should actually be something along the lines of:\r\n  Called by table row during delete() method, and the parent table's class during _cascadeDelete() method for recursive cascading deletes.\r\n\r\n--- \r\n\r\nI did have one possibly unrelated question\/issue. I tried creating a table relationship where the refColumn defined in the child table's referenceMap is not one of the parent table's primary keys. A cascading and\/or cascadingRecursive delete does not work because when the table's _cascadeDelete() method is called, only the primary keys are passed as the second parameter. I'm wondering why only the primary keys were sent and not all of the data. This would allow the following scenario:\r\n\r\n{code:sql}\r\nDROP TABLE IF EXISTS `profiles`;\r\nCREATE TABLE `profiles` (\r\n  `id` int(11) NOT NULL auto_increment,\r\n  `name` varchar(30) NOT NULL,\r\n  `photoId` int(11) NOT NULL,\r\n  PRIMARY KEY  (`id`),\r\n  KEY `photo` (`photoId`)\r\n);\r\n\r\nINSERT INTO `profiles` (`id`, `name`, `photoId`) VALUES\r\n(101, 'Profile #1', 201),\r\n(102, 'Profile #2', 202);\r\n\r\nDROP TABLE IF EXISTS `photos`;\r\nCREATE TABLE `photos` (\r\n  `id` int(11) NOT NULL auto_increment,\r\n  `title` varchar(50) NOT NULL,\r\n  `path` varchar(255) NOT NULL,\r\n  PRIMARY KEY  (`id`)\r\n);\r\n\r\nINSERT INTO `photos` (`id`, `title`, `path`) VALUES\r\n(201, 'Profile #1 Photo', '\/images\/one.jpg'),\r\n(202, 'Profile #2 Photo', '\/images\/two.jpg');\r\n{code}\r\n\r\nWhen a profile is deleted, I want the corresponding profile photo (stored in photos table) deleted as well.\r\n\r\nHere's my models:\r\n\r\n{code}\r\n<?php\r\nclass Application_Model_Profiles extends Zend_Db_Table_Abstract\r\n{\r\n    protected $_name    = 'profiles';\r\n\r\n    protected $_dependentTables = array(\r\n        'Application_Model_Photos',\r\n    );\r\n\r\n}\r\n\r\n<?php\r\nclass Application_Model_Photos extends Zend_Db_Table_Abstract\r\n{\r\n    \/** Table name *\/\r\n    protected $_name    = 'photos';\r\n\r\n    protected $_referenceMap    = array(\r\n        'Profile' => array(\r\n            'columns'           => 'id',\r\n            'refTableClass'     => 'Application_Model_Profiles',\r\n            'refColumns'        => 'photoId',\r\n            'onDelete'          => self::CASCADE_RECURSE,\r\n        ),\r\n    );\r\n}\r\n{code}\r\n\r\nThe reason I organized the data like this is to allow several different entities (profiles, albums, users, groups, etc.) to store their photo in one table. The cascading deletes, however, do not work because the photoId column from the Photos table doesn't exist in the _cascadeDelete method because only the profile's ID column is passed.\r\n\r\nI know this is off-topic for the recursive cascading deletes, but perhaps this new capability could be added simultaneously.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=konrness",
                        "name": "konrness",
                        "displayName": "Konr Ness",
                        "active": true
                    },
                    "created": "2010-01-02T22:48:17.000+0000",
                    "updated": "2010-01-02T22:48:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41139",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sonnysavage",
                        "name": "sonnysavage",
                        "displayName": "Edward \"Sonny\" Savage",
                        "active": true
                    },
                    "body": "I ran into this issue. My solution is a bit simpler than the proposed one. It's posted on [Stack Overflow|http:\/\/stackoverflow.com\/questions\/3023809\/zend-framework-problem-with-database-table-recursive-cascading-deletes]. My solution only touches the {{_cascadeDelete}} function.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sonnysavage",
                        "name": "sonnysavage",
                        "displayName": "Edward \"Sonny\" Savage",
                        "active": true
                    },
                    "created": "2010-06-21T14:34:43.000+0000",
                    "updated": "2010-06-21T14:34:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41163",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sonnysavage",
                        "name": "sonnysavage",
                        "displayName": "Edward \"Sonny\" Savage",
                        "active": true
                    },
                    "body": "I see a steady trend of this getting put off.  What is needed to get this included in a release?  It's a bug.  True, recursive, cascading deletes are not performed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sonnysavage",
                        "name": "sonnysavage",
                        "displayName": "Edward \"Sonny\" Savage",
                        "active": true
                    },
                    "created": "2010-06-23T08:14:05.000+0000",
                    "updated": "2010-06-23T08:14:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48882",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Is there any reason this never made it into the framework?  ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-31T19:09:43.000+0000",
                    "updated": "2011-10-31T19:09:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49565",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adriani",
                        "name": "adriani",
                        "displayName": "Adrian Imfeld",
                        "active": true
                    },
                    "body": "I tested the patch suggested by Pelle Wessmann and it worked for me. +1 for integrating into the framework.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adriani",
                        "name": "adriani",
                        "displayName": "Adrian Imfeld",
                        "active": true
                    },
                    "created": "2012-01-25T10:07:39.000+0000",
                    "updated": "2012-01-25T10:07:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50570",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Attached reproducing test case which uses the single-table schema proposed by the original ticket creator:\r\n\r\n{code}\r\nCREATE TABLE `zfalt_cascade_recursive` (\r\n  `item_id` int(11) NOT NULL,\r\n  `item_parent` int(11) DEFAULT NULL,\r\n  `item_data` varchar(100) NOT NULL,\r\n  PRIMARY KEY (`item_id`)\r\n);\r\n\r\nINSERT INTO `zfalt_cascade_recursive` (`item_id`, `item_parent`, `item_data`) VALUES\r\n(1, NULL, '1'),\r\n(2, 1, '1.2'),\r\n(3, 1, '1.3'),\r\n(4, 3, '1.3.4'),\r\n(5, 3, '1.3.5'),\r\n(6, NULL, '6');\r\n{code}\r\n\r\nPHPUnit Result:\r\n{code}\r\nPHPUnit 3.4.15 by Sebastian Bergmann.\r\n\r\nZend Framework\r\n Zend Framework - Zend\r\n   Zend Framework - Zend_Db\r\n     Zend_Db_Table_MysqliTest\r\n   F\r\n  \r\n   Zend_Db_Table_Pdo_MysqlTest\r\n   F\r\n  \r\n   Zend_Db_Table_Pdo_SqliteTest\r\n   F\r\n  \r\nTime: 10 seconds, Memory: 418.00Mb\r\n\r\nThere were 3 failures:\r\n\r\n1) Zend_Db_Table_MysqliTest::testTableCascadeRecurseDelete\r\nFailed asserting that \r\nZend_Db_Table_Row Object ( item_id = 4 )\r\n is null.\r\n\r\n\/var\/www\/ZFv1\/trunk\/tests\/Zend\/Db\/Table\/TestCommon.php:1643\r\n\r\n2) Zend_Db_Table_Pdo_MysqlTest::testTableCascadeRecurseDelete\r\nFailed asserting that \r\nZend_Db_Table_Row Object ( item_id = 4 )\r\n is null.\r\n\r\n\/var\/www\/ZFv1\/trunk\/tests\/Zend\/Db\/Table\/TestCommon.php:1643\r\n\r\n3) Zend_Db_Table_Pdo_SqliteTest::testTableCascadeRecurseDelete\r\nFailed asserting that \r\nZend_Db_Table_Row Object ( item_id = 4 )\r\n is null.\r\n\r\n\/var\/www\/ZFv1\/trunk\/tests\/Zend\/Db\/Table\/TestCommon.php:1643\r\n\r\nFAILURES!\r\nTests: 3, Assertions: 39, Failures: 3.\r\n{code}\r\n\r\nAs you can see, it only deletes the parent row and the first level dependent rowset.  ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-09T23:53:53.000+0000",
                    "updated": "2012-05-09T23:56:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50789",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Updated title and description",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-28T21:26:14.000+0000",
                    "updated": "2012-05-28T21:26:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50793",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Attached fix appears to work as expected.  After applying the patch, change the onDelete parameter value in the file {{tests\/Zend\/Db\/Table\/_files\/My\/ZendDbTable\/TableCascadeRecursive.php}} from {{self::CASCADE}} to {{self::CASCADE_RECURSE}} and the tests will pass.\r\n\r\nA similar fix and unit test suite will need to be implemented for {{onUpdate}} as well. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-29T02:08:40.000+0000",
                    "updated": "2012-05-29T02:08:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50864",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Attached completed patch for onDelete recursive cascade (fix + unit test + manual page update).  Will open a separate ticket to implement similar fix for onUpdate",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-30T11:43:08.000+0000",
                    "updated": "2012-05-30T11:43:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50870",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Fixed in SVN r24831.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-05-30T12:52:40.000+0000",
                    "updated": "2012-05-30T12:52:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1103\/transitions"
}