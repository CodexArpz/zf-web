{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2103",
    "key": "ZF-2103",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Session_Namespace - Optional argument to create namespace in deeper nodes"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 5760,
                "timeestimate": 5760
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2103\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10241",
                    "id": 10241,
                    "description": "Minor Release",
                    "name": "1.8.0",
                    "userReleaseDate": "30\/Apr\/09",
                    "archived": false,
                    "releaseDate": "2009-04-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-01-10T10:20:40.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                "name": "zendfw",
                "displayName": "Shekar Reddy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-10-26T10:57:55.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-01-10T10:20:40.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Currently, the namespace component creates namespaces only at the root of the session:\n\n{code}\n$user = new Zend_Session_Namespace( 'user' );\n\n=> $_SESSION['user'] = array()\n{code}\n\n\nWhat if I want to store data deeper in the auth node to just group it and reduce clutter (aka modules) and to be able to count the number of items\/namespaces in a node:\n\n{code}\n$_SESSION['auth']['user']['id'] = 1;\n([node][namespace][key] = value)\n{code}\n\n\nIn the above case, it would be much more powerful to be able to create the namespace under the 'auth' node so we could configure the keys in the 'user' namespace. We could introduce an optional 'node' argument to the Zend_Session_Namespace::__construct(), like so:\n\n{code}\n$user = new Zend_Session_Namespace( 'user', 'auth' );\n[create the user namespace under auth node - auth node created automatically if it does not exist in session]\n{code}\n\nWe can even go as deeper as we could by specifying an intelligent node-path:\n\n{code}\n$user = new Zend_Session_Namespace( 'user', 'auth:node2:node3' );\n(create the user namespace under $_SESSION[auth][node2][node3] - all created automatically if they do not exist in session)\n{code}\n\n\nI guess the above feature adds more muscle to the namespace component and enables us to use it more powerfully.\n\nThoughts...?\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10040",
                "value": " Nice to Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2103\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10130",
                    "id": 10130,
                    "description": "Mini Release",
                    "name": "1.0.2",
                    "userReleaseDate": "25\/Sep\/07",
                    "archived": true,
                    "releaseDate": "2007-09-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10096",
                    "id": 10096,
                    "name": "Zend_Session",
                    "description": "A standardized interface to common functionality found in or indigenous to site session implementations. ",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20951",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:11:51.000+0000",
                    "updated": "2008-04-18T13:11:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22968",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "How does this benefit over using a smarter naming convention for the namespaces?  For example like \n\n{code}\n$user = new Zend_Session_Namespace(\"user-auth\"); \n{code}\n\nOR over\n\n{code}\n$user = new Zend_Session_Namespace(\"user-auth\"); \n$user->auth->node2 = 'value';\n{code}\n\n?\n\nThe bigger problem with adding more\/deeper nodes is that the serialized version will take up more space in the file\/database whatever.\n\nIll categorize as nice to have \/ next minor, but at currently I am not completely convinced yet.  Perhaps talk it over in #zftalk.dev with some other people.\n\n-ralph\n\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2008-07-21T14:08:35.000+0000",
                    "updated": "2008-07-21T14:08:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/23465",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "That's what I've been doing these days but it involves a lot of consistent code and work to maintain data in appropriate nodes. If we have the namespace created in a deeper node, keys added to the namespace automatically appear in the child node of the namespaced node and so it becomes much easier to maintain data and focus on business logic. Furthermore, the items under the namespace node can now be counted, can be disabled from adding more keys than a specified threshold, configured to expire, etc. and so we can create categorized namespaces with typical behaviors for the data inside the namespaces.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2008-08-12T18:29:45.000+0000",
                    "updated": "2008-08-12T18:29:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27964",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Interesing feature, but I am not sure we'll have time to implement this within the 1.0 branch.\n\nWe concede that this component needs a rewrite, so ideas are being logged here:\n\nhttp:\/\/framework.zend.com\/wiki\/display\/ZFDEV\/Zend_Session+2.0",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-01-10T10:20:39.000+0000",
                    "updated": "2009-01-10T10:20:39.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2103\/transitions"
}