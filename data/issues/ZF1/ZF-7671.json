{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7671",
    "key": "ZF-7671",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add 'background posting' functionallity to Zend_Dojo_Form"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/11",
                "name": "Patch",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7671\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:22.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dirkdokter",
                "name": "dirkdokter",
                "displayName": "Dirk Dokter",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-08-24T05:17:16.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:22.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "background",
                "dojo",
                "dojo_form",
                "form",
                "post",
                "xhr",
                "xhrpost"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "This is a simple patch to allow background posting from dojo forms.\nUsage like this:\n\n{{$this->postOnBackground = true;\n$this->postOnBackgroundOptions['successHandler'] = \"console.log(data);\"; }}\n\nThe patch can be found on http:\/\/dirkdokter.nl\/ZF_Dojo_Form_patch1.txt"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7671\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10311",
                    "id": 10311,
                    "name": "Zend_Dojo",
                    "description": "Dojo integration with Zend Framework",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33841",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "This would be better to do as a decorator, actually (and this is the approach I've taken in the past).\n\nSuch a decorator looks like this:\n\n{code}\nclass My_Dojo_Decorator_FormCallback extends Zend_Form_Decorator_Abstract\n{\n    public function render($content)\n    {\n        $form = $this->getElement();\n        if (!$form instanceof Zend_Dojo_Form) {\n            return $content;\n        }\n\n        $successHandler = $this->getOption('successHandler');\n        $errorHandler   = $this->getOption('errorHandler');\n\n        if (empty($successHandler)) {\n            return $content;\n        }\n\n        $script = $this->_renderHandler($successHandler, $errorHandler);\n\n        $separator = $this->getSeparator();\n        switch ($this->getPlacement()) {\n            case 'PREPEND':\n                return $script . $separator . $content;\n            case 'APPEND':\n            default:\n                return $content . $separator . $script;\n        }\n    }\n\n    protected function _renderHandler($successHandler, $errorHandler)\n    {\n        $args = array(\n            'form'     => 'this.domNode',\n            'handleAs' => 'text',\n            'load'     => $successHandler,\n        );\n        if (!empty($errorHandler)) {\n            $args['error'] = $errorHandler;\n        }\n        $xhrArgs = Zend_Json::encode($args);\n\n        $content =<<<EOQ\n<script type=\"dojo\/method\" event=\"onSubmit\">\nif (this.validate()) {\n    dojo.xhrPost($xhrArgs);\n}\nreturn false;\n<\/script>\nEOQ;\n        return $content;\n    }\n}\n{code}\n\nOnce in place, you would attach it to your form as follows:\n{code}\n$form->addPrefixPath('My_Dojo_Decorator', 'My\/Dojo\/Decorator', 'decorator');\n$form->setDecorators(array(\n    'FormElements',\n    array('HtmlTag', array('tag' => 'dl', 'class' => 'zend_form_dojo')),\n    array('FormCallback', array(\n        'successHandler' => 'formSuccess',\n        'errorHandler'   => 'my.formErrors',\n    ),\n    'DijitForm',\n));\n{code}\n\nThis has the benefit of being use-at-will, as well as allowing developers to override it.\n\nI'd be happy to add a decorator like this to the standard library; any additional functionality you can think of that it might need?\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-08-24T06:56:30.000+0000",
                    "updated": "2009-08-24T06:56:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33846",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dirkdokter",
                        "name": "dirkdokter",
                        "displayName": "Dirk Dokter",
                        "active": true
                    },
                    "body": "Thanks for your comments, your approach looks much better.\nI had a few more suggestions for the decorator:\n\n{code:php}\nclass Zend_Dojo_AjaxForm extends Zend_Form_Decorator_Abstract\n{\n\tprivate $possibleXhrArgs = array ('load','error','handle','headers','timeout','sync');\n    public function render($content)\n    {\n        $form = $this->getElement();\n        if (!$form instanceof Zend_Dojo_Form) {\n            return $content;\n        }\n\n        if (!$this->getOption('load')) {   \/\/\/ why is this here? Just to make sure that one always specifies a 'successHandler'?\n            return $content;\n        }\n        \n        \/\/xhrPost will fail if no action is set, so we set it to . if it is not specified\n        if (!$form->getAction()) {\n        \t$form->setAction('.');\n        } \n\n\t\t$xhrPostArgs = array ( );\n        \/\/ only keep valid xhrPost options\n    \tforeach($this->getOptions() as $key => $value) {\n\t\t\tif (in_array($key,$this->possibleXhrArgs)) {\n\t\t\t\t$xhrPostArgs[$key] = $value;\n\t\t\t}\n    \t}\n        \n        $script = $this->_renderHandler($xhrPostArgs);\n\n        $separator = $this->getSeparator();\n        switch ($this->getPlacement()) {\n            case 'PREPEND':\n                return $script . $separator . $content;\n            case 'APPEND':\n            default:\n                return $content . $separator . $script;\n        }\n    }\n\n    protected function _renderHandler($userArgs)\n    {\n    \t$standardArgs = array(\n            'form'     => new Zend_Json_Expr('this.domNode'),\n            'handleAs' => 'text',\n        );\n    \t\n    \tif (is_array($userArgs))  {\n    \t    $args = array_merge($standardArgs,$userArgs);\n    \t}\n    \telse {\n    \t\t$args = $standardArgs;\n    \t}\n\t\t$xhrArgs = Zend_Json::encode($args,false,array('enableJsonExprFinder' => true));\n\n        $content =<<<EOQ\n<script type=\"dojo\/method\" event=\"onSubmit\">\nif (this.validate()) {\n    dojo.xhrPost($xhrArgs);\n}\nreturn false;\n<\/script>\nEOQ;\n        return $content;\n    }\n}\n{code}\n\nWhen users specify a function (e.g. for 'load' or for 'error'), they have to use ??Zend_Json_Expr?? to prevent the quotes around the JS functions. So setting the ??load?? function would go like this:\n{code:php}\n$form->setDecorators(array(\n    'FormElements',\n    array('HtmlTag', array('tag' => 'dl', 'class' => 'zend_form_dojo')),\n    array('AjaxForm', array(\n        'load' => new Zend_Json_Expr('alert(\"form submitted!\")')\n    )),\n    'DijitForm'\n));\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dirkdokter",
                        "name": "dirkdokter",
                        "displayName": "Dirk Dokter",
                        "active": true
                    },
                    "created": "2009-08-24T10:04:27.000+0000",
                    "updated": "2009-08-24T10:04:27.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52741",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:53:22.000+0000",
                    "updated": "2012-11-20T20:53:22.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7671\/transitions"
}