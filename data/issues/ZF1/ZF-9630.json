{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9630",
    "key": "ZF-9630",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "add fetchBodyStructure to Zend_Mail_Protocol"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9630\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dominikgehl",
                "name": "dominikgehl",
                "displayName": "Dominik Gehl",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-04-07T06:09:03.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-08-31T00:12:32.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "It would be nice to have an official access to FETCH BODYSTRUCTURE, including output parsing in Zend_Mail_Protocol. This would make it so much more efficient to retrieve message overviews.\r\n\r\nCurrently, this can be achieved using requestAndResponse, but the output handling has then to be done 'by hand' ..."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9630\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nico",
                "name": "nico",
                "displayName": "Nico Edtinger",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10018",
                    "id": 10018,
                    "name": "Zend_Mail",
                    "description": "high-level utility to build MIME-compliant messages and send using a mail transport adapter",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39867",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dominikgehl",
                        "name": "dominikgehl",
                        "displayName": "Dominik Gehl",
                        "active": true
                    },
                    "body": "The following function allows to parse the output and to return an object similar to imap_fetchstructure\r\n{noformat}\r\n\tstatic function parseStructure($structureArray) {\r\n\r\n\t\t$types = array('text','multipart','message','application','audio','image','video');\r\n\t\t$encodings = array('7BIT','8BIT','BINARY','BASE64','QUOTED-PRINTABLE');\r\n\t\t\t\r\n\t\tif (! is_array($structureArray[0])) {\r\n\t\t\t$structureObj = new StdClass;\r\n\t\t\t$structureObj->type = ((($pos = array_search(strtolower($structureArray[0]), $types)) === false) ? count($types) : $pos);\r\n\t\t\tif ($structureArray[1] == 'NIL') {\r\n\t\t\t\t$structureObj->ifsubtype = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifsubtype = 1;\r\n\t\t\t\t$structureObj->subtype = $structureArray[1];\r\n\t\t\t}\r\n\t\t\tif (! is_array($structureArray[2])) {\r\n\t\t\t\t$structureObj->ifparameters = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifparameters = 1;\r\n\t\t\t\t$structureObj->parameters = array();\r\n\t\t\t\t$i=0;\r\n\t\t\t\twhile ($i < count($structureArray[2])) {\r\n\t\t\t\t\t$parameterObj = new StdClass;\r\n\t\t\t\t\t$parameterObj->attribute = $structureArray[2][$i];\r\n\t\t\t\t\t$i++;\r\n\t\t\t\t\t$parameterObj->value = $structureArray[2][$i];\r\n\t\t\t\t\t$i++;\r\n\t\t\t\t\t$structureObj->parameters[] = $parameterObj;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($structureArray[3] == 'NIL') {\r\n\t\t\t\t$structureObj->ifid = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifId = 1;\r\n\t\t\t\t$structureObj->id = $structureArray[3];\r\n\t\t\t}\r\n\t\t\tif ($structureArray[4] == 'NIL') {\r\n\t\t\t\t$structureObj->ifdescription = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifdescription = 1;\r\n\t\t\t\t$structureObj->description = $structureArray[4];\r\n\t\t\t}\r\n\t\t\t$structureObj->encoding = ((($pos = array_search(strtoupper($structureArray[5]), $encodings)) === false) ? count($encodings) : $pos);\r\n\t\t\t$structureObj->bytes = $structureArray[6];\r\n\t\t\tif (($structureObj->type == 0) && isset($structureArray[7]) && ($structureArray[7] != 'NIL')) {\r\n\t\t\t\t$structureObj->lines = $structureArray[7];\r\n\t\t\t}\r\n\t\t\tif (!isset($structureArray[8]) || ($structureArray[8] == 'NIL')) {\r\n\t\t\t\t$structureObj->ifdisposition = 0;\r\n\t\t\t\t$structureObj->ifdparameters = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifdisposition=1;\r\n\t\t\t\t$structureObj->disposition = $structureArray[8][0];\r\n\t\t\t\tif (!isset($structureArray[8][1]) || !is_array($structureArray[8][1])) {\r\n\t\t\t\t\t$structureObj->ifdparameters = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$structureObj->ifdparameters = 1;\r\n\t\t\t\t\t$structureObj->dparameters = array();\r\n\t\t\t\t\t$i=0;\r\n\t\t\t\t\twhile ($i < count($structureArray[8][1])) {\r\n\t\t\t\t\t\t$parameterObj = new StdClass;\r\n\t\t\t\t\t\t$parameterObj->attribute = $structureArray[8][1][$i];\r\n\t\t\t\t\t\t$i++;\r\n\t\t\t\t\t\t$parameterObj->value = $structureArray[8][1][$i];\r\n\t\t\t\t\t\t$i++;\r\n\t\t\t\t\t\t$structureObj->dparameters[] = $parameterObj;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $structureObj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$partsNb = 0;\r\n\t\t\t$structureObj = new StdClass;\r\n\t\t\t$structureObj->type = 1;\r\n\t\t\t$structureObj->parts = array();\r\n\t\t\twhile (($partsNb<count($structureArray)) && (is_array($structureArray[$partsNb]))) {\r\n\t\t\t\t$structureObj->parts[] = self::parseStructure($structureArray[$partsNb]);\r\n\t\t\t\t$partsNb++;\r\n\t\t\t}\r\n\t\t\tif ($structureArray[$partsNb] == 'NIL') {\r\n\t\t\t\t$structureObj->ifsubtype = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifsubtype = 1;\r\n\t\t\t\t$structureObj->subtype = $structureArray[$partsNb];\r\n\t\t\t}\r\n\t\t\tif (!isset($structureArray[$partsNb+1]) || ($structureArray[$partsNb+1] == 'NIL')) {\r\n\t\t\t\t$structureObj->ifparameters = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifparameters = 1;\r\n\t\t\t\t$structureObj->parameters = array();\r\n\t\t\t\t$i=0;\r\n\t\t\t\twhile ($i < count($structureArray[$partsNb+1])) {\r\n\t\t\t\t\t$parameterObj = new StdClass;\r\n\t\t\t\t\t$parameterObj->attribute = $structureArray[$partsNb+1][$i];\r\n\t\t\t\t\t$i++;\r\n\t\t\t\t\t$parameterObj->value = $structureArray[$partsNb+1][$i];\r\n\t\t\t\t\t$i++;\r\n\t\t\t\t\t$structureObj->parameters[] = $parameterObj;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!isset($structureArray[$partsNb+2]) || ($structureArray[$partsNb+2] == 'NIL')) {\r\n\t\t\t\t$structureObj->ifdisposition = 0;\r\n\t\t\t\t$structureObj->ifdparameters = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$structureObj->ifdisposition = 1;\r\n\t\t\t\t$structureObj->disposition = $structureArray[$partsNb+2][0];\r\n\t\t\t\tif (!isset($structureArray[$partsNb+2][1]) || !is_array($structureArray[$partsNb+2][1])) {\r\n\t\t\t\t\t$structureObj->ifdparameters = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$structureObj->ifdparameters = 1;\r\n\t\t\t\t\t$structureObj->dparameters = array();\r\n\t\t\t\t\t$i=0;\r\n\t\t\t\t\twhile ($i < count($structureArray[$partsNb+2][1])) {\r\n\t\t\t\t\t\t$parameterObj = new StdClass;\r\n\t\t\t\t\t\t$parameterObj->attribute = $structureArray[$partsNb+2][1][$i];\r\n\t\t\t\t\t\t$i++;\r\n\t\t\t\t\t\t$parameterObj->value = $structureArray[$partsNb+2][1][$i];\r\n\t\t\t\t\t\t$i++;\r\n\t\t\t\t\t\t$structureObj->dparameters[] = $parameterObj;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $structureObj;\r\n\r\n\t\t}\r\n\t}\r\n{noformat}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dominikgehl",
                        "name": "dominikgehl",
                        "displayName": "Dominik Gehl",
                        "active": true
                    },
                    "created": "2010-04-07T09:04:36.000+0000",
                    "updated": "2010-04-07T09:04:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39909",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nico",
                        "name": "nico",
                        "displayName": "Nico Edtinger",
                        "active": true
                    },
                    "body": "Actually Zend_Mail_Part has a recursive iterator that can be, among other things, used to retrieve the structure of a message. That doesn't mean FETCH BODYSTRUCTURE doesn't make sense, but I think it might be a good idea to create Zend_Mail_Part_Imap and have it prefetch the structure when a Zend_Mail_Message_Imap is returned in getMessage(). The benefit is having the same interface as in all other storage classes and an object that's ready to use if you find a part in the structure that you want to do something with (like fetching it's content\/body).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nico",
                        "name": "nico",
                        "displayName": "Nico Edtinger",
                        "active": true
                    },
                    "created": "2010-04-09T09:07:10.000+0000",
                    "updated": "2010-04-09T09:07:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48061",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hewo",
                        "name": "hewo",
                        "displayName": "HeWo",
                        "active": true
                    },
                    "body": "Dominik, thank you for your promising function.\r\n\r\nI am relativly new to the zend framework and am trying to establish an alternative to the built-in php_imap.. functions in my scripts because of its restrictations on public webservers with apache and more than 1024 opened files (http:\/\/bugs.debian.org\/cgi-bin\/bugreport.cgi?bug=478193).\r\n\r\nI really would like to use your function to replace imap_fetchstructure, which i rely on, but I do not understand how to use your function. Where is the $structureArray to be found?\r\n\r\nRight now I am using Zend_Mail_Storage_Pop3, but I can go to Imap if needed. I am using ZF 1.11.10_minimal.\r\n\r\nThank you and best Regards\r\n\r\nHeWo\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hewo",
                        "name": "hewo",
                        "displayName": "HeWo",
                        "active": true
                    },
                    "created": "2011-08-25T15:07:03.000+0000",
                    "updated": "2011-08-25T15:07:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48300",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dominikgehl",
                        "name": "dominikgehl",
                        "displayName": "Dominik Gehl",
                        "active": true
                    },
                    "body": "Hi HeWo,\r\n\r\nyou could use some code like this:\r\n\r\n$bodyStructure = $zend_mail_protocol_obj->requestAndResponse('FETCH', array($id, 'BODYSTRUCTURE'));\r\n$bodyStructureObj = parseStructure($bodyStructure[0][2][1]);\r\n\r\nLet me know if you need more details,\r\nDominik",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dominikgehl",
                        "name": "dominikgehl",
                        "displayName": "Dominik Gehl",
                        "active": true
                    },
                    "created": "2011-08-31T00:12:32.000+0000",
                    "updated": "2011-08-31T00:12:32.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9630\/transitions"
}