{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5558",
    "key": "ZF-5558",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "CLONE -Zend_Controller_Router_Route_Regex won't assemble when used with xml config"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5558\/votes",
                "votes": 7,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-09-18T15:44:50.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                "name": "r-o-b-e-r-t",
                "displayName": "Robert H\u00e4nsel",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-01-15T09:18:46.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-09-18T15:48:52.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When setting a reverse route through an xml config file, the assemble method of the regex route fails. The _getMappedValues method expects it's map to be in index => key form:\n\n{code}\n$index = (!is_int($key)) ? array_search($key, $this->_map, true) : $key;\n{code}\n\nthis will fail when used with xml, which doesn't support this, a sample config could contain:\n{code}\n<map>\n    <id>\n        1\n    <\/id>\n    <title>\n        2\n    <\/title>\n<\/map>\n{code}\n\nBy limitation of xml this is different from the ini config and manual setup. When parsing the url this isn't a problem, but the assemble method fails to get any parts from the  _getMappedValues method to parse into the query string and throws an exception. It can easily solved by modifying the method a little:\n\n{code}\n$index = (!is_int($key)) ? array_search($key, $this->_map, true) : $key;\nif (false !== $index) {\n\t$return[$index] = $values[$key];\n} elseif (isset($this->_map[$key])) {\n\t\/\/non-numerical setup\n\t$return[$key] = $this->_map[$key];\n}\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5558\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                "name": "jpieper",
                "displayName": "Jan Pieper",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-7658",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7658",
                    "type": {
                        "name": "Duplicate",
                        "direction": "OUTBOUND",
                        "description": "duplicates"
                    }
                },
                {
                    "issueKey": "ZF-3474",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3474",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-2312",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2312",
                    "type": {
                        "name": "Dependency",
                        "direction": "INBOUND",
                        "description": "is dependecy of"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10271",
                    "id": 10271,
                    "description": "Mini Release",
                    "name": "1.7.2",
                    "userReleaseDate": "23\/Dec\/08",
                    "archived": false,
                    "releaseDate": "2008-12-23",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28242",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "body": "As Maurice described in Bug #3474 there is a problem, when you try tu use Zend_Controller_Route_Regex with $router->addConfig($config, 'routes');\n\nThe Zend_Config object is initialized with a XML-file.\n\nDue to the limitation of the xml-config object that only strings are returned.\n\nAll the mappings <id>1<\/id> ... are not recognized.\n\nRobert",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "created": "2009-01-15T09:26:02.000+0000",
                    "updated": "2009-01-15T09:26:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28243",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "body": "My fix for this problem:\n\nin File Zend\/Controller\/Router\/Route\/Regex.php:131\n{code}\n       } elseif ($reversed) {\n\n\n                $index = (!is_int ($key)) ? array_search ($key, $this->_map, true) : $key;\n                if (false !== $index) {\n                    $return[$index] = $values[$key];\n                } elseif (array_key_exists($key, $this->_map)) {\n                    \/\/non-numerical setup\n                    $return[(int)$this->_map[$key]] = $key;\n                }\n\n\n      } elseif ($preserve) {\n                $return[$key] = $value;\n      }\n{code}\n\nso long",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "created": "2009-01-15T09:39:59.000+0000",
                    "updated": "2009-01-15T09:39:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28244",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "body": "In my last comment was a little Error ... \n\nnow it works correct\n\nin File Zend\/Controller\/Router\/Route\/Regex.php:131\n{code}\n\n} elseif ($reversed) {\n\n\n                $index = (!is_int ($key)) ? array_search ($key, $this->_map, true) : $key;\n                if (false !== $index) {\n                    $return[$index] = $values[$key];\n                } elseif (array_key_exists($key, $this->_map)) {\n                    \/\/non-numerical setup\n                    $return[(int)$this->_map[$key]] = $values[$key];\n                }\n\n\n      } elseif ($preserve) {\n                $return[$key] = $value;\n      }\n\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "created": "2009-01-15T09:55:13.000+0000",
                    "updated": "2009-01-15T09:55:13.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33145",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bowlingx",
                        "name": "bowlingx",
                        "displayName": "David Heidrich",
                        "active": true
                    },
                    "body": "Why still not fixed in ZF 1.9.0?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bowlingx",
                        "name": "bowlingx",
                        "displayName": "David Heidrich",
                        "active": true
                    },
                    "created": "2009-08-03T01:55:36.000+0000",
                    "updated": "2009-08-03T01:55:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33570",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "body": "My Solution for this:\n\n\nReplace Zend\/Config\/Xml.php (L252-282) with this one:\n{noformat}\n\/\/ Search for children\n        if (count($xmlObject->children()) > 0) {\n            foreach ($xmlObject->children() as $key => $value) {\n                if (count($value->children()) > 0 || count($value->children(self::XML_NAMESPACE)) > 0) {\n                    $value = $this->_toArray($value);\n                } else if (count($value->attributes()) > 0 || count($value->attributes(self::XML_NAMESPACE)) > 0) {\n                    $attributes = $value->attributes();\n                    $attributesNS = $value->attributes(self::XML_NAMESPACE);\n\n                    \/\/ Old Zend_Config Style\n                    if (!isset($attributes['value']) && isset($attributes['type'])) {\n                        $value = $this->typeConvert($value, $attributes);\n                    } elseif (isset($attributes['value'])&& isset($attributes['type'])) {\n                        $value = $this->typeConvert($attributes['value'], $attributes);\n                    \/\/ New Zend_Config Style (1.9+)\n                    } elseif (!isset($attributesNS['value']) && isset($attributesNS['type'])) {\n                        $value = $this->typeConvert($value, $attributesNS);\n                    } elseif (isset($attributesNS['value']) && isset($attributesNS['type'])) {\n                        $value = $this->typeConvert($attributesNS['value'], $attributesNS);\n                    } elseif (isset($attributes['value'])) {\n                        $value = (string) $attributes['value'];\n                    } else {\n                        $value = $this->_toArray($value);\n                    }\n                } else {\n                     $value = $this->typeConvert($value, $value->attributes());\n                }\n\n                if (array_key_exists($key, $config)) {\n                    if (!is_array($config[$key]) || !array_key_exists(0, $config[$key])) {\n                        $config[$key] = array($config[$key]);\n                    }\n\n                    $config[$key][] = $value;\n                } else {\n                    $config[$key] = $value;\n                }\n            }\n        } else if (!isset($xmlObject['extends']) && !isset($nsAttributes['extends']) && (count($config) === 0)) {\n            \/\/ Object has no children nor attributes and doesn't use the extends\n            \/\/ attribute: it's a string\n            $config = (string) $xmlObject;\n        }\n{noformat}\n\nAnd add the following new protected function:\n{noformat}\n\/**\n     * Cast the type in the given Format\n     *\n     * @param mixed $value\n     * @param mixed $attributes\n     * @return mixed - The converted Type\n     *\/\n    protected function typeConvert($value, $attributes = array()) {\n        $value = trim((string) $value);\n        if (count($attributes) && isset($attributes['type'])) {\n            switch (strtolower($attributes['type'])) {\n            \tcase 'int':\n            \tcase 'integer':\n            \t    return (int) $value;\n            \tcase 'bool':\n            \tcase 'boolean':\n            \t    return ($value == 'true')?true:false;\n            \tcase 'float':\n            \t    return (float)$value;\n            \tdefault:\n            \t\treturn (string) $value;\n            }\n        }\n        return $value;\n    }\n{noformat}\n\nNow you can set the Type in the Config-XML File.\n\n{noformat}\n[...]\n<config xmlns:zf=\"http:\/\/framework.zend.com\/xml\/zend-config-xml\/1.0\/\">\n  <!-- ZF 1.9.+ -->\n  <normal_text>foo bar<\/normal_text>\n  <!-- would be casted to integer -->\n  <port zf:type=\"int\">3306<\/port>\n  <!-- would be casted to boolean -->\n  <profiler zf:type=\"bool\">true<\/profiler>\n  <!-- would be casted to float -->\n  <eur_usd zf:type=\"float\" zf:value=\"123.45\" \/>\n\n  <!-- Without Namespace -->\n  <text>foo bar<\/text>\n  <port type=\"int\">123<\/port>\n  [....]\n<\/config>\n[...]\n{noformat}\n\nNow you can just simply add the type that you want ...\n\nIt's possible to write the value as attribute e.g. <port type=\"int\" value=\"123\" \/> or to use <port type=\"int\">123<\/port> .. is both the same\n\nIf you use the ZF Namespace use <port zf:type=\"int\" zf:value=\"123\" \/> or <port zf:type=\"int\">123<\/port>\n\nBut dont mix it up <port type=\"int\" zf:value=\"123\" \/> wont work \n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=r-o-b-e-r-t",
                        "name": "r-o-b-e-r-t",
                        "displayName": "Robert H\u00e4nsel",
                        "active": true
                    },
                    "created": "2009-08-18T00:41:01.000+0000",
                    "updated": "2009-08-18T00:41:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33711",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=codemaker",
                        "name": "codemaker",
                        "displayName": "Eugene",
                        "active": true
                    },
                    "body": "I'm use default method getVariables in a __construct:\n\n{quote}\npublic function __construct($route, $defaults = array(), $map = array(), $reverse = null)\n {\n...\n\t\t$this->_map = $this->getVariables($this->_map);\n}\n{quote}\n\nand all works fine",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=codemaker",
                        "name": "codemaker",
                        "displayName": "Eugene",
                        "active": true
                    },
                    "created": "2009-08-21T02:46:50.000+0000",
                    "updated": "2009-08-21T02:46:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34694",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "Fixed in r18294, see [ZF-7658].",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2009-09-18T15:44:50.000+0000",
                    "updated": "2009-09-18T15:44:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34695",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "Assigning issue to ~jpieper as he fixed it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-09-18T15:48:52.000+0000",
                    "updated": "2009-09-18T15:48:52.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5558\/transitions"
}