{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10962",
    "key": "ZF-10962",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Translate_Adapter_* classes have useless private variable"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10962\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10160",
                    "id": 10160,
                    "description": "Major Release",
                    "name": "Next Major Release",
                    "archived": false,
                    "released": false
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-07-28T19:44:12.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                "name": "strictcoding",
                "displayName": "Strict Coding",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-01-18T09:47:53.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-07-28T19:44:12.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "All these adapters share a private variable:\r\nprivate $_data = array();\r\n\r\nIf you look at the code, it is not used anywhere else than in the _loadTranslationData() method, which initializes it each time it is called:\r\n$this->_data = array();\r\n\r\nSo it could be just a simple variable inside the method.\r\nAnd we can also see weird code like this one in Zend_Translate_Adapter_Ini:\r\n\r\n        $this->_data = array();\r\n        if (!file_exists($data)) {\r\n            require_once 'Zend\/Translate\/Exception.php';\r\n            throw new Zend_Translate_Exception(\"Ini file '\".$data.\"' not found\");\r\n        }\r\n\r\n        $inidata = parse_ini_file($data, false);\r\n        if (!isset($this->_data[$locale])) {\r\n            $this->_data[$locale] = array();\r\n        }\r\n\r\nwhy this last isset() test?\r\n$this->_data has just been initialized, so the condition will always be false, and the code inside will *always* be executed.\r\n\r\nThe code for all the adapters could be simplified.\r\nIs there a specific reason for this?"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10962\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10520",
                    "id": 10520,
                    "description": "Mini Release",
                    "name": "1.11.2",
                    "userReleaseDate": "30\/Dec\/10",
                    "archived": false,
                    "releaseDate": "2010-12-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10099",
                    "id": 10099,
                    "name": "Zend_Translate",
                    "description": "Provides translation functionality, based on standards such as TMX and Gettext.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44394",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "And how should the xml parser return read informations when there is no variable within the object?\r\nWouldn't it be useless when the adapter can not store the information anywhere?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-02-16T14:22:25.000+0000",
                    "updated": "2011-02-16T14:22:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44398",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "I agree, so why reinitialize it at the beginning of each _loadTranslationData() call?\r\n\r\n{code:none}\r\n    protected function _loadTranslationData($filename, $locale, array $options = array())\r\n    {\r\n        $this->_data = array();\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-02-17T01:22:37.000+0000",
                    "updated": "2011-02-17T01:22:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44416",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Because otherwise it would add new data to existing probably broken data.\r\nWhen someone extends the class it can not be assumed that he calls this method only once at construction.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-02-17T13:12:02.000+0000",
                    "updated": "2011-02-17T13:12:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44456",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "I understand your point, but it still doesn't explain the need for populating a private $_data variable, which is not used anywhere else in the class, and cannot be used anywhere else in the application.\r\n\r\nTake for example this function in Zend_Translate_Adapter_Ini:\r\n\r\n{code:none}\r\n    private $_data = array();\r\n\r\n    protected function _loadTranslationData($data, $locale, array $options = array())\r\n    {\r\n        $this->_data = array();\r\n        if (!file_exists($data)) {\r\n            require_once 'Zend\/Translate\/Exception.php';\r\n            throw new Zend_Translate_Exception(\"Ini file '\".$data.\"' not found\");\r\n        }\r\n\r\n        $inidata = parse_ini_file($data, false);\r\n        if (!isset($this->_data[$locale])) {\r\n            $this->_data[$locale] = array();\r\n        }\r\n\r\n        $this->_data[$locale] = array_merge($this->_data[$locale], $inidata);\r\n        return $this->_data;\r\n    }\r\n{code}\r\n\r\nIt could be simplified to:\r\n\r\n{code:none}\r\n    protected function _loadTranslationData($data, $locale, array $options = array())\r\n    {\r\n        if (!file_exists($data)) {\r\n            require_once 'Zend\/Translate\/Exception.php';\r\n            throw new Zend_Translate_Exception(\"Ini file '\".$data.\"' not found\");\r\n        }\r\n\r\n        $inidata = parse_ini_file($data, false);\r\n        return array($locale => $inidata);\r\n    }\r\n{code}\r\n\r\nWhich behaviour would be affected?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-02-18T01:22:03.000+0000",
                    "updated": "2011-02-18T01:22:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44469",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "You said \"All adapters should be simplified\"... and then \"The code for all the adapters could be simplified\"... which implies according to what you've wrote \"delete the private var $_data\".\r\nAs I said before $_data is used by all adapters which are calling a XML reader.\r\n\r\nIntegrating your change would mean that half of the adapters are no longer working.\r\n\r\nThe actual code allows to use the new adapters even in old ZF releases.\r\nWe will break BC with ZF2 where such things are allowed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-02-18T06:27:58.000+0000",
                    "updated": "2011-02-18T06:27:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44483",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "I'm sorry Thomas, I must be lost somewhere.\r\nYes, the XmlTm adapter for example uses the private $_data in other methods, this justifies the need for it.\r\nBut could you please point me out what behavior not using, or even removing this variable in the adapters that don't use it, would break?\r\n\r\nThis variable, for most (not *all*, as you pointed out...) of the adapters is not required in the class, and is not required anywhere else.\r\nIt seems more like a copy and paste from one adapter to the other than a choice made on purpose!\r\n\r\nAnd leads to extra, useless code:\r\n\r\n{code:none}\r\n$this->_data = array();\r\nif (!isset($this->_data[$locale])) {\r\n...\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-02-18T08:22:50.000+0000",
                    "updated": "2011-02-18T08:22:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47743",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Fixed with GH-131",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-07-28T19:44:12.000+0000",
                    "updated": "2011-07-28T19:44:12.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10962\/transitions"
}