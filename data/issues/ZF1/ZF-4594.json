{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4594",
    "key": "ZF-4594",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Subselect in as column does not work"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4594\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:31.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denis.baklikov",
                "name": "denis.baklikov",
                "displayName": "Denis Baklikov",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-10-14T02:05:50.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:31.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Subselect queries as columns does not supported in current implementation of Zend_Db_Select\n\nFor example:\n{code}\n$imprSubSelect = $this->getAdapter()->select();\n$imprSubSelect->from(array('I' => 'IMPRESSIONS'), array('IMPR_CNT' => 'COUNT(*)'))\n\t\t\t\t\t  ->where('I.CAR_ID = \"C\".CAR_ID');\n\t\t\t\n$select = $this->getAdapter()->select();\n$select->from(array('C' => $this->_name), \n\t      array('CAR_ID',\n\t\t    'MANUFACTURER', \n\t\t    'IMPR_CNT' => $imprSubSelect))\t\t  \n\t->where('DEALER_ID = ?', $dealer->getId());\n{code}\nThis select object generate incorrect sql code.\n\nTo improve this column object type checking need to be added to _renderColumns method.\n\nOld version:\n{code}\nif ($column instanceof Zend_Db_Expr) {\n  $columns[] = $this->_adapter->quoteColumnAs($column, $alias, true);\n}\n{code}\n\nNew version:\n{code}\nif ($column instanceof Zend_Db_Expr || $column instanceof Zend_Db_Select) {\n  $columns[] = $this->_adapter->quoteColumnAs($column, $alias, true);\n}\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4594\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10201",
                    "id": 10201,
                    "description": "Mini Release",
                    "name": "1.6.1",
                    "userReleaseDate": "15\/Sep\/08",
                    "archived": false,
                    "releaseDate": "2008-09-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33530",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Shouldnt the select object be wrapped inside a Zend_Db_Expr object to work as a subselect?\n\nIe:\n\n{code}\n$imprSubSelect = $this->getAdapter()->select();\n$imprSubSelect->from(array('I' => 'IMPRESSIONS'), array('IMPR_CNT' => 'COUNT(*)'))\n\t\t\t\t\t  ->where('I.CAR_ID = \"C\".CAR_ID');\n\t\t\t\n$select = $this->getAdapter()->select();\n$select->from(array('C' => $this->_name), \n\t      array('CAR_ID',\n\t\t    'MANUFACTURER', \n\t\t    'IMPR_CNT' => new Zend_Db_Expr($imprSubSelect)))\n\t->where('DEALER_ID = ?', $dealer->getId());\n\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-08-17T09:35:38.000+0000",
                    "updated": "2009-08-17T09:35:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33535",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denis.baklikov",
                        "name": "denis.baklikov",
                        "displayName": "Denis Baklikov",
                        "active": true
                    },
                    "body": "Yes, it can we wrapped, but I think that pass Zend_Db_Select object as a parameter is easier to use. \nI spent about an hour to identify this issue, because I thought this functionality is already built in ZF. \n\nThere are only 2 classes, which can produce SQL code - Zend_Db_Expr and Zend_Db_Select itself.\nI think that adding the second condition to the \"if\" statement is acceptable solution.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denis.baklikov",
                        "name": "denis.baklikov",
                        "displayName": "Denis Baklikov",
                        "active": true
                    },
                    "created": "2009-08-17T10:58:51.000+0000",
                    "updated": "2009-08-17T10:58:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33540",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Ok, I can see the use case.  One question: should it ensure that the select object being passed in is not a reference to the object in question itself?  \n\nIe: should we prevent this:\n{code}\n$select->from(array(..., 'C' => $select));\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-08-17T12:00:39.000+0000",
                    "updated": "2009-08-17T12:00:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33564",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denis.baklikov",
                        "name": "denis.baklikov",
                        "displayName": "Denis Baklikov",
                        "active": true
                    },
                    "body": "Its a good point. I have just tested it and got recursive call of the _renderColumns_ method.\n\nHere is sample code, which produces the error \n{code}\n$select = $db->select()\n                         ->from('dual');\n\t\t\t \n$select->columns(array('c1' => new Zend_db_Expr('2'), 'c2' => $select));\t\n{code}\n\nAlso, I have found out the same issue, in the __join_  method (773 line).  In this case _assemble_ method called recursively and PHP interpreter fails. \n{code}\n$select = $db->select()\n\t\t\t ->from('dual');\n\t\t\t \n$select->join($select, '1=1');\n{code}\n\nI think, this issue will also appears when several select objects references to each other. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denis.baklikov",
                        "name": "denis.baklikov",
                        "displayName": "Denis Baklikov",
                        "active": true
                    },
                    "created": "2009-08-17T21:36:39.000+0000",
                    "updated": "2009-08-17T21:36:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52309",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:52:31.000+0000",
                    "updated": "2012-11-20T20:52:31.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4594\/transitions"
}