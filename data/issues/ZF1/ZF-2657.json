{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2657",
    "key": "ZF-2657",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Make Zend_Log_Writer_Db Easier For Subclassing"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 5,
                "timeestimate": 5
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2657\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-01-26T11:16:52.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang",
                "name": "arthurkang",
                "displayName": "Arthur Kang",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-02-14T14:34:07.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-10-11T12:47:31.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Since the _write function is protected, it can't be overloaded, so it should remain as lean as possible for easier subclassing.\n\nIn my opinion, the _write function should be trimmed down to:\n\n{code}\nprotected function _write($event)\n{\n    if ($this->_db === null) {\n        throw new Zend_Log_Exception('Database adapter instance has been removed by shutdown');\n    }\n\n    $this->_db->insert($this->_table, $dataToInsert);\n}\n{code}\n\nAll of the mapping functions should be done in write():\n\n{code}\n\/**\n * Log a message to this writer.\n *\n * @param  array     $event  log data event\n * @return void\n *\/\npublic function write($event)\n{\n    foreach ($this->_filters as $filter) {\n        if (! $filter->accept($event)) {\n            return;\n        }\n    }\n    \n   \/\/ Move Mapping Here\n    if ($this->_columnMap === null) {\n        $dataToInsert = $event;\n    } else {\n        $dataToInsert = array();\n        foreach ($this->_columnMap as $columnName => $fieldKey) {\n            $dataToInsert[$columnName] = $event[$fieldKey];\n        }\n    }\n    \n    \/\/ exception occurs on error\n    $this->_write($dataToInsert);\n}\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2657\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                "name": "wil",
                "displayName": "Wil Sinclair",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10017",
                    "id": 10017,
                    "name": "Zend_Log",
                    "description": "classic logging utility functions",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28375",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Working with the _columnMap is a fundamental part of what this class does. If you override write() to change its behavior WRT the column map, maybe this class isn't an appropriate generalization of the class your extending it with.\nWhat exactly do you need to do that the writer can't do already?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2009-01-21T14:35:12.000+0000",
                    "updated": "2009-01-21T14:35:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28404",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang2",
                        "name": "arthurkang2",
                        "displayName": "Arthur Kang",
                        "active": true
                    },
                    "body": "The request is to simply \"move\" the mapping function from function _write to function write.  If an end user has to do some mapping that is different than standard, they could just overload the write function since it is public.  Currently, since the _write function is protected, the whole class has to be overloaded.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang2",
                        "name": "arthurkang2",
                        "displayName": "Arthur Kang",
                        "active": true
                    },
                    "created": "2009-01-22T08:31:30.000+0000",
                    "updated": "2009-01-22T08:31:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28407",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang2",
                        "name": "arthurkang2",
                        "displayName": "Arthur Kang",
                        "active": true
                    },
                    "body": "In response to your question \"What exactly do you need to do that the writer can't do already? \"\n\nI have a log table that has many fields that get populated during the course of a user interaction, depending upon what the user is doing.  With the column map's currently implementation, all fields are \"inserted\".  If a certain event does not exist, it will try to insert '', which breaks things for me...Thus, I needed to override the mapping function to check for isset and add it to dataToInsert if it is.\n\nIf you have a log table with a date field called \"logindate\".  Then, in the code, you have something that sets the event if a user logs in.  For guests, the logging function will fail as it will try and insert ''.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang2",
                        "name": "arthurkang2",
                        "displayName": "Arthur Kang",
                        "active": true
                    },
                    "created": "2009-01-22T08:49:21.000+0000",
                    "updated": "2009-01-22T08:49:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28486",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "I'd like to get Matthew's opinion on this. I'm postponing for now since major Zend_Log work won't start in the next few weeks.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2009-01-26T10:45:33.000+0000",
                    "updated": "2009-01-26T10:45:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28489",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Arthur, you *can* override protected methods in PHP, so long as you keep the same visibility or make it more visible.\n\n{code}\nclass My_Log_Writer_Db extends Zend_Log_Writer_Db\n{\n    protected function _write($event)\n    {\n        \/\/ do your own custom stuff here...\n    }\n}\n{code}\n\nCurrently, the write() method is actually in Zend_Log_Writer_Abstract, and contains the general implementation; it then calls _write(), which is what the individual concrete loggers define.\n\nThe only improvement I can see to be made here is to create a new method in Zend_Log_Writer_Db called \"_prepareDataToInsert\" that would do the formatting and data preparation. However, considering how short the implementation is, I'm not sure it's worth it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-01-26T11:12:18.000+0000",
                    "updated": "2009-01-26T11:12:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28490",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Doh! I didn't notice that _write is a protected method. As such, it is overridable and this issue seems to be moot. Please reopen if you still have concerns.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2009-01-26T11:16:51.000+0000",
                    "updated": "2009-01-26T11:16:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28496",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang3",
                        "name": "arthurkang3",
                        "displayName": "Arthur Kang",
                        "active": true
                    },
                    "body": "It was a while back when I filed this, so I had to go back and find out what was going wrong and why I filed this...\n\nMathew was correct.  The _write method *can* be overloaded.  But, I'm still having an issue.  Its not major, but I thought I'd bring it up.  I don't really know what is going on.\n\nWhen subclassing Zend_Log_Writer_Db, I have to copy and include the constructor method in my new class.  It is a straight copy and paste, but if I don't, it breaks.  A new constructor with a call to the parent constructor does not work\n\nThe below example is a simple test that can be run from the command line.  No constructor in the extended class doesn't work.  Calling the parent constructor from the extended class doesn't work.  Only copying and pasting the constructor method from the parent to the extended class works (at least for me).  Uncomment appropriately to run the different tests.  If I'm doing something wrong and you can let me know, that would be great.  I was under the impression that the parent constructor method would be called if omitted.\n\n{code}\n<?php\n$APP_PATH = '.';\nset_include_path(\"$APP_PATH\/library\/\" . PATH_SEPARATOR . get_include_path());\n\n\/\/ Load and register the Loader\nrequire_once \"Zend\/Loader.php\";\nZend_Loader::registerAutoload();\n\nclass MyTest_Log_Writer_Db extends Zend_Log_Writer_Db {\n    \/*\n    public function __construct($db, $table, $columnMap = null)\n    {\n        parent::__construct($db, $table, $columnMap = null);\n        #$this->_db    = $db;\n        #$this->_table = $table;\n        #$this->_columnMap = $columnMap;\n    }\n    *\/\n\n    protected function _write($event) {\n        if ($this->_db === null) {\n            throw new Zend_Log_Exception('Database adapter instance has been removed by shutdown');\n        }\n        \n        Zend_Debug::Dump($event);\n    }\n}\n$log = new Zend_Log(new MyTest_Log_Writer_Db('db', 'table', 'map'));\n$log->INFO('Testing');\n?>\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=arthurkang3",
                        "name": "arthurkang3",
                        "displayName": "Arthur Kang",
                        "active": true
                    },
                    "created": "2009-01-27T12:09:49.000+0000",
                    "updated": "2009-01-27T12:09:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42495",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ryan.lange",
                        "name": "ryan.lange",
                        "displayName": "Ryan Lange",
                        "active": true
                    },
                    "body": "@Arthur: I believe the issue you're having is a result of Zend_Log_Writer_Db's class properties being private.\r\n\r\nI'd guess that including a constructor in your child class causes those properties to be private to that child class instead of Zend_Log_Writer_Db.[1] Calling the parent constructor tries to set those properties, which are now private to MyTest_Log_Writer_Db, and therefore fails.\r\n\r\nOf course, including a constructor in your child class will likely cause methods of the parent class, like shutdown() to silently fail (since, in shutdown()'s case, it's no longer allowed to modify $_db).\r\n\r\n-----\r\n1. This doesn't seem correct to me (I had always thought \"private\" meant private to the class in which they were declared), but it does explain the issues you're having.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ryan.lange",
                        "name": "ryan.lange",
                        "displayName": "Ryan Lange",
                        "active": true
                    },
                    "created": "2010-10-11T12:47:30.000+0000",
                    "updated": "2010-10-11T12:47:30.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2657\/transitions"
}