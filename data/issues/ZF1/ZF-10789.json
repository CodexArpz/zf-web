{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10789",
    "key": "ZF-10789",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add a values validator layer based on schema declaration"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/5",
                "name": "Sub-task",
                "subtask": true
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10789\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jboffel",
                "name": "jboffel",
                "displayName": "Jeannie BOFFEL",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-12-07T04:25:20.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T21:37:35.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I'd like to introduce to Zend Framework a new layer to check\/validates values returned in a SOAP response against what user declared in the schema through auto discovery system.\r\n\r\nThe idea is simple, try to make sure, as much as possible, than data you send to client are matching what you declared in the XSD. It dos NOT mean check if data are meaningful! But keep in mind that it is NOT a validation of your SOAP response against your schema. It does not look at if generated XML is well formated or things like that.\r\n\r\nMany times, at webservice programming or usage, it happens to me to get invalid value when looking at what XSD announced. So it takes time and task to warn the one who did the webservice. If I take place of webservice maker, I'd prefer to not send SOAP response at all if I can know before that a value I'll send it totally not matching XSD declaration. So I'd prefer make possible to send SOAP Fault for example instead of invalid value and log the problem for easy detection of the problem at very first tests.\r\n\r\nThis system comes with restriction as auto discovery has them because of PHP variable type limitation. It could be think about add support for more type at runtime check for more base XSD type. But for first release, I limited support to the PHP limited set of variable type.\r\n\r\nHere come the design idea:\r\n{code}\r\n\/**\r\n * @xsd sequence\r\n *\/ \r\nclass wsGetUserInfosResult extends Zend_Soap_ComplexTypeValuesValidator\r\n{ \r\n    \/**\r\n     * @xsd sequence    start\r\n     * @var string\r\n     *\/ \r\n    public $firstName; \r\n    \/**\r\n     * @var string\r\n     *\/ \r\n    public $familyName; \r\n    \/**\r\n     * @var AgeType\r\n     *\/ \r\n    public $age; \r\n    \/**\r\n     * @var detailsBrotherList\r\n     * @xsd sequence    end\r\n     *\/ \r\n    public $detailsBrotherList; \r\n     \r\n    \/**\r\n     * @param   string  $firstName\r\n     * @param   string  $familyName\r\n     * @param   integer $age\r\n     * @param   detailsBrotherList  $detailsBrotherList\r\n     * @return  wsGetUserInfosResult\r\n     *\/ \r\n    public function __construct($firstName, $familyName, $age, $detailsBrotherList) { \r\n        $this->Check_firstName = $firstName; \r\n        $this->Check_familyName = $familyName; \r\n        $this->Check_age = $age; \r\n        $this->Check_detailsBrotherList = $detailsBrotherList; \r\n         \r\n        return $this; \r\n    } \r\n} \r\n{code}\r\n\r\nBy extending Zend_Soap_ComplexTypeValuesValidator you can use the magic __set method of this class to call the engine of validation of values directly at assign moment.\r\nJust add Check_ before real variable name of the class or CheckO_ for CheckOnly if you just want to check value, and manage assignement of the value later by yourself.\r\nAlso __set method has some limitation, for example $this->Check_Thing[]='test'; will not call the __set method, so you to check the value all you can do is: $this->CheckO_Thing='test'; and later, $this->Thing[]='test'; if check does not throw exception.\r\n\r\nHere come design for the simple type declaration (that could be use at variable type in complex type schema declaration part):\r\n{code}\r\n\/**\r\n * @xsd simpleType  array('id' => 1)\r\n * @xsd restriction array('base' => 'xsd:string')\r\n *\/ \r\nclass AgeType extends Zend_Soap_SimpleTypeValuesValidator\r\n{ \r\n    \/**\r\n     * @xsd pattern array('value' => '[0-9][0-9][0-9]')\r\n     *\/ \r\n    public $pattern; \r\n} \r\n{code}\r\n\r\nThat's all, you just have to extend with parent class Zend_Soap_ComplexTypeValuesValidator then automatically you have access to the test method of children class through a static call: AgeType::getInstance()->test($value);\r\n\r\nYou could use directly by yourself, or rely on complex type validator values.\r\n\r\nOf course, it could be said that making directly a real schema validation of the SOAP answer would do this job and more. However with current SOAP support and AutoDiscovery system, it's not so easy. AutoDiscovery does not separate XSD from WSDL, it is all in one when validator most of the time want just a schema. Also we do not have the generated XML\/SOAP response at this level of code, it is generated and handled by the soap extension written in C. So it is meaning, validation support should be add directly in soap extension.\r\n\r\nLink to implementation:\r\n\r\n[Zend_Soap_ComplexTypeValuesValidator|http:\/\/framework.zend.com\/wiki\/display\/ZFPROP\/Zend_Soap_ComplexTypeValuesValidator+-+Jeannie+Boffel]\r\n[Zend_Soap_SimpleTypeValuesValidator|http:\/\/framework.zend.com\/wiki\/display\/ZFPROP\/Zend_Soap_SimpleTypeValuesValidator+-+Jeannie+Boffel]"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10789\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/3",
                "name": "In Progress"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "parent": {
            "name": "parent",
            "type": "issuelinks",
            "value": {
                "issueKey": "ZF-9180",
                "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9180",
                "type": {
                    "name": "Parent",
                    "direction": "INBOUND"
                }
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10501",
                    "id": 10501,
                    "description": "Mini Release",
                    "name": "1.11.1",
                    "userReleaseDate": "30\/Nov\/10",
                    "archived": false,
                    "releaseDate": "2010-11-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10098",
                    "id": 10098,
                    "name": "Zend_Soap_Wsdl",
                    "description": "Class for accessing SOAP WSDL documents.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [

            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10789\/transitions"
}