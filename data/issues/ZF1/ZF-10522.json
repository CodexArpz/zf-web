{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10522",
    "key": "ZF-10522",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Cache_Backend_TwoLevels should fallback to slowBackend if fastBackend is unavailable"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10522\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=glens",
                "name": "glens",
                "displayName": "Glen Solsberry",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-10-06T11:49:54.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-10-26T04:40:49.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When using Zend_Cache like\r\n\r\n{code}\r\n\/\/ set up caching for query results (could be used for other things as well)\r\n$fO = array('lifetime' => 86400, 'automatic_serialization' => true); \/\/ cache of 1 day\r\n$bO = array(\r\n    'slow_backend' => 'File',\r\n    'fast_backend' => 'Memcached',\r\n    'slow_backend_options' => array('cache_dir' => '\/tmp\/ads'),\r\n    'fast_backend_options' => array('servers' =>\r\n        array(\r\n            array('host' => 'hostname', 'port' => 11211, 'persistent' => true, 'failure_callback' => 'memcache_server_failure_callback')\r\n        ),\r\n    ),\r\n    'stats_update_factor' => 0,\r\n);\r\n$cache = Zend_cache::factory('Core', 'Two Levels', $fO, $bO);\r\n{code}\r\n\r\nIf my memcached server becomes unavailable (I stop the service, etc), then the call to $cache->load() fails, stating that it can't stat <hostname>:<port>.\r\n\r\nI believe this should be reworked so that if the connection cannot be made, then it falls back to slowBackend.  I've attached code that should do just this.\r\n\r\n\r\n{code:title=TwoLevels.php.patch|borderStyle=solid}\r\n--- Zend\/Cache\/Backend\/TwoLevels.php\t2010-10-06 14:38:46.000000000 -0400\r\n+++ \/home\/glens\/TwoLevels.php\t2010-10-06 14:38:33.000000000 -0400\r\n@@ -196,7 +197,7 @@\r\n \t\ttry {\r\n \t\t\t$res = $this->_fastBackend->load($id, $doNotTestCacheValidity);\r\n \t\t} catch (Exception $e) {\r\n+\t\t\t$res = false;\r\n \t\t}\r\n         if ($res === false) {\r\n             $res = $this->_slowBackend->load($id, $doNotTestCacheValidity);\r\n\r\n@@ -489,19 +491,31 @@\r\n         if ($mode == 'saving') {\r\n             \/\/ mode saving\r\n             if ($this->_fastBackendFillingPercentage === null) {\r\n-                $this->_fastBackendFillingPercentage = $this->_fastBackend->getFillingPercentage();\r\n+                try {\r\n+                    $this->_fastBackendFillingPercentage = $this->_fastBackend->getFillingPercentage();\r\n+                } catch (Exception $e) {\r\n+                    $this->_fastBackendFillingPercentage = false;\r\n+                }\r\n             } else {\r\n                 $rand = rand(1, $this->_options['stats_update_factor']);\r\n                 if ($rand == 1) {\r\n                     \/\/ we force a refresh\r\n-                    $this->_fastBackendFillingPercentage = $this->_fastBackend->getFillingPercentage();\r\n+                    try {\r\n+                        $this->_fastBackendFillingPercentage = $this->_fastBackend->getFillingPercentage();\r\n+                    } catch (Exception $e) {\r\n+                        $this->_fastBackendFillingPercentage = false;\r\n+                    }\r\n                 }\r\n             }\r\n         } else {\r\n             \/\/ mode loading\r\n             \/\/ we compute the percentage only if it's not available in cache\r\n             if ($this->_fastBackendFillingPercentage === null) {\r\n-                $this->_fastBackendFillingPercentage = $this->_fastBackend->getFillingPercentage();\r\n+                try {\r\n+                    $this->_fastBackendFillingPercentage = $this->_fastBackend->getFillingPercentage();\r\n+                } catch (Exception $e) {\r\n+                    $this->_fastBackendFillingPercentage = false;\r\n+                }\r\n             }\r\n         }\r\n         return $this->_fastBackendFillingPercentage;\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10522\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10380",
                    "id": 10380,
                    "description": "Mini Release",
                    "name": "1.9.5",
                    "userReleaseDate": "27\/Oct\/09",
                    "archived": false,
                    "releaseDate": "2009-10-27",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48796",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=robwalch",
                        "name": "robwalch",
                        "displayName": "Rob Walch",
                        "active": true
                    },
                    "body": "Here's my solution. Test the connection to memcached if cache is configured to use it. If the connection fails, set the cache manager's template options to use File backend. I'm setting up my database cache in the app config and using those settings here.\r\n\r\n{code:none}\r\n\/\/ test memecache connection\r\n$config = Zend_Registry::get('config');\r\n$backend = $config->resources->cachemanager->database->backend;\r\n$memcacheConnected = false;\r\nif ($backend->name === 'Memcached') {\r\n\t$mcHost = 'localhost';\r\n\t$mcPort = 11211;\r\n\tif (isset($backend->options->servers->one) && $server = $backend->options->servers->one) {\r\n\t\t$server->host && $mcHost = $server->host;\r\n\t\t$server->port && $mcPort = $server->port;\r\n\t}\r\n\t$err = error_reporting(E_ERROR);\r\n\t$memcache = new Memcache;  \r\n\tif (!$memcacheConnected = $memcache->connect($mcHost, $mcPort)) {\r\n\t\terror_log(\"Memcache: Failed to connect to memcached at $mcHost:$mcPort\");\r\n\t\t\/\/use File cache if Memcache connection fails\r\n\t\t$cachemanager->setTemplateOptions('database', array('backend' => array('name' => 'File')));\r\n\t}\r\n\t\t\t\r\n\terror_reporting($err);\r\n}\r\n$cache = $cachemanager->getCache('database');\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=robwalch",
                        "name": "robwalch",
                        "displayName": "Rob Walch",
                        "active": true
                    },
                    "created": "2011-10-26T04:40:49.000+0000",
                    "updated": "2011-10-26T04:40:49.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10522\/transitions"
}