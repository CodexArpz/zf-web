{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2128",
    "key": "ZF-2128",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Input_Filter::getEscaped() does not return fields that are not part of the validation rules. "
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 2880,
                "timeestimate": 2880
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2128\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10362",
                    "id": 10362,
                    "description": "Mini Release",
                    "name": "1.9.3",
                    "userReleaseDate": "22\/Sep\/09",
                    "archived": false,
                    "releaseDate": "2009-09-22",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-08-28T13:26:08.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                "name": "laurent melmoux",
                "displayName": "Laurent Melmoux",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-11-01T03:56:43.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-08-28T13:26:04.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend_Input_Filter::getEscaped() does not return fields that are not part of the validation rules even if they are declared in the filters array (see exemple below). \n\nI was expecting to get back both the validated and filtered fields. \n\nTo have it to work a validator has to exist for all form elements so we need to add '*' => array() to the validators.\n\nIs it the normal behaviour and way to do it? If so this should be add to the documentation.\n\n\n{code}\nrequire_once('Zend\/Filter\/Input.php'); \n\n$data = array('test1'=>'test1', 'test2'=>'<script>hahaha<\/script>', 'test3'=>'test3'); \n\n$validators = array( \n   'test1' => array('presence' => 'required'), \n   'test3' => array('Alpha', 'presence' => 'required') \n); \n\n$filters = array( \n   '*'     => 'StripTags' \n); \n\n$input = new Zend_Filter_Input($filters, $validators, $data); \n  if ($input->isValid()) { \n       print_r($input->getEscaped()); \n} \n\n\nOUTPUT : \n\nArray ( [test1] => test1 [test3] => test )\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10040",
                "value": " Nice to Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2128\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10130",
                    "id": 10130,
                    "description": "Mini Release",
                    "name": "1.0.2",
                    "userReleaseDate": "25\/Sep\/07",
                    "archived": true,
                    "releaseDate": "2007-09-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10180",
                    "id": 10180,
                    "name": "Zend_Filter_Input",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20589",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=erangalp",
                        "name": "erangalp",
                        "displayName": "Eran Galperin",
                        "active": true
                    },
                    "body": "I agree, this is not expected behavior. I could understand if a non-selective filter ('*') is not considered to validate a field, but when I add field-specific filters I expect the returned value to be considered valid. For now I am forced to set a matching validator for each filter in the chain so it will be returned with the getEscaped() method. Is there a plan to fix this?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=erangalp",
                        "name": "erangalp",
                        "displayName": "Eran Galperin",
                        "active": true
                    },
                    "created": "2008-03-31T19:52:58.000+0000",
                    "updated": "2008-03-31T19:52:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21018",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:12:00.000+0000",
                    "updated": "2008-04-18T13:12:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21163",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please evaluate and categorize\/assign as necessary.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T16:58:30.000+0000",
                    "updated": "2008-04-18T16:58:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28487",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Ralph, please evaluate and find a way to close out this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2009-01-26T10:48:08.000+0000",
                    "updated": "2009-01-26T10:48:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30406",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "body": "It's not solved yet. I'm using 1.7.6 and i can't get a field that has no validator rules. The only way is:\n$unknownData = $input->getUnknown();\n$data = $unknownData['fieldName'];\n\nor subclassing Zend_Input_Filter and it's __get method.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "created": "2009-04-24T17:03:27.000+0000",
                    "updated": "2009-04-24T17:03:27.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30667",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denix",
                        "name": "denix",
                        "displayName": "Denis Portnov",
                        "active": true
                    },
                    "body": "another workaround is subclassing and creating an extra array\n\n    \/**\n    * @var array After processing this contains initial data filtered\n    *\n    *\/     \n    protected $_filteredFields = array();\n\n    \/\/ next is you patch _process() method\n\n    protected function _process()\n    {\n        if ($this->_processed === false) {\n            $this->_filter();\n            $this->_filteredFields = $this->_data;\n\n            $this->_validate();\n            $this->_processed = true;\n        }\n    }\n\n   \/\/and extra getter\n\n    public function getFiltered()\n    {\n        $this->_process();\n        return $this->_filteredFields;\n    }\n    ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denix",
                        "name": "denix",
                        "displayName": "Denis Portnov",
                        "active": true
                    },
                    "created": "2009-05-04T18:33:25.000+0000",
                    "updated": "2009-05-04T18:33:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30812",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "body": "Yeah, of course we can subclassing everything in order to make workarounds, but we need to help the framework team to make the best framework.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leandrorc",
                        "name": "leandrorc",
                        "displayName": "Leandro Rodrigues Chaves",
                        "active": true
                    },
                    "created": "2009-05-09T15:19:31.000+0000",
                    "updated": "2009-05-09T15:19:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34056",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "getEscaped() returns \"secured\" values... they are all validated.\nTo change this behaviour and return also unsecured\/unvalidated data means to introduce a security problem.\n\nThis means that the actual behaviour is correct.\nOnly because a field is filtered, it does not automatically mean that it is secure\/valid.\n\nWhen you want to get all unvalidated values you can use \"getUnescaped()\".\nWhen you want to allow ALL values to be returned, even if they are not valid you need to add '*' => array() to the validators.\n\nWe will add a description to the manual to make this behaviour more clear.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-08-28T12:39:10.000+0000",
                    "updated": "2009-08-28T12:39:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34058",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Described behaviour within the manual.\nTherefor closing as Non Issue",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-08-28T13:26:02.000+0000",
                    "updated": "2009-08-28T13:26:02.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2128\/transitions"
}