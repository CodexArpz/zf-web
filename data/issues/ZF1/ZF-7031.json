{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7031",
    "key": "ZF-7031",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Loader_Autoloader_ServiceLoader"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7031\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-06-16T17:15:42.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=syncer",
                "name": "syncer",
                "displayName": "Mina R Waheeb",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-06-16T15:06:00.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-06-16T18:31:05.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "Autoloader"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Hi, After version 1.8 and the new Autoloader system, I think we need Zend_Loader_Autoloader_ServiceLoader or PluginLoader, It will be more easy to plug and play service between modules for example the below workflow:\n\n# Module \"admin\" create Interface \"Admin_Api_Registration\"\n# Module \"news\" create class \"News_Service_Administration\" implements interface  \"Admin_Api_Registration\"\n# Module \"admin\" creates new Zend_Loader_Autoloader_ServiceLoader(\"service\",\"Administration\");\n# Now Module admin can use foreach loader->getPlugins() \n\nThanks"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7031\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10001",
                    "id": 10001,
                    "name": "Zend_Loader",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31906",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I fail to see how this differs from the current Zend_Loader_Autoloader_Resource and related Zend_Application_Module_Autoloader, which provide autoloading capabilities for precisely this sort of thing. Plugins may be autoloaded the same way as classes using this paradigm already.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-06-16T17:15:18.000+0000",
                    "updated": "2009-06-16T17:15:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31909",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=syncer",
                        "name": "syncer",
                        "displayName": "Mina R Waheeb",
                        "active": true
                    },
                    "body": "The functionality already exist in the new Autoloader system, I'm talking about encapsulate it for loading across modules, maybe the below code explain more than me :)\n{code}\n$modules = Zend_Controller_Front::getInstance()->getControllerDirectory();\nforeach (array_keys($modules) as $module) {\n       $class = $this->_formatModuleName($module) . '_' . $this->_namespace . '_' . $this->_type;\n        foreach(Zend_Loader_Autoloader::getInstance()->getClassAutoloaders($class) as $loader) {\n                $types = $loader->getResourceTypes();\n                 if(isset($types[$this->_namespace])) {\n                      $path = $types[$this->_namespace]['path'] . '\/' . str_replace('_', '\/', $this->_type) . '.php';\n                      if(is_file($path)) {\n                          require_once $path;\n                          if(!class_exists($class)) {\n                              require_once 'Zend\/Loader\/Exception.php';\n                              throw new Zend_Loader_Exception(\"Unable to find class: \" . $class);\n                          }\n                          $this->_plugins[$module] = new $class();\n                     }\n              }\n         }\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=syncer",
                        "name": "syncer",
                        "displayName": "Mina R Waheeb",
                        "active": true
                    },
                    "created": "2009-06-16T17:56:44.000+0000",
                    "updated": "2009-06-16T17:56:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31910",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Zend_Application_Module_Autoloader already fulfills this purpose. \n\nIf you use Zend_Application_Module_Bootstrap, it will create an instance of the above class that sets up a resource autoloader for that module; alternately, you can instantiate it yourself. Regardless, if used, you can then autoload that module's resources from anwywhere. As an example, if you have modules\/foo\/models\/Bar.php with class 'Foo_Model_Bar', you can then simply instantiate the class: $bar = new Foo_Model_Bar(). This is easier and more intuitive than any other approach, and works cross-modules.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-06-16T18:31:05.000+0000",
                    "updated": "2009-06-16T18:31:05.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7031\/transitions"
}