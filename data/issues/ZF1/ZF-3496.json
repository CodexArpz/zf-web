{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3496",
    "key": "ZF-3496",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Form::addDisplayGroup does something nothing else can do: it removes elements from the form display list without removing them from the form"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3496\/votes",
                "votes": 6,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=snover",
                "name": "snover",
                "displayName": "C Snover",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-06-23T05:35:41.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-08-13T20:53:37.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When calling Zend_Form::addDisplayGroup(), the elements named in the first parameter are unset from $_order, but they are not unset from $_elements. There is *no way* to do this normally as far as I can tell without modifying $_order directly.\n\nIf Zend_Form_DisplayGroup::addElement() is used to add an Element to a DisplayGroup, then neither Zend_Form::getElement() nor Zend_Form::__get() find the new Element, and Zend_Form::setDefaults() fails to set the new Element's value. If an element is added to the Form using Zend_Form::addElement(), and then also to the DisplayGroup using Zend_Form_DisplayGroup::addElement(), it ends up being displayed twice.\n\nBut, if Zend_Form::addDisplayGroup() is used to take elements that are in the Form and put them into a DisplayGroup, everything functions as expected.\n\nTestcase:\n{code}\nrequire_once 'Zend\/Form.php';\nrequire_once 'Zend\/Form\/DisplayGroup.php';\nrequire_once 'Zend\/Form\/Element\/Text.php';\nrequire_once 'Zend\/View.php';\n\n$form = new Zend_Form();\n$form->setView(new Zend_View());\n$form->addElement(new Zend_Form_Element_Text('test'));\n$form->addDisplayGroup(array('test'), 'inputs'); \/\/ test goes in the display group this way...\n$form->setDefaults(array('test' => '1234'));     \/\/ and this works fine\nvar_dump($form->getElement('test')->getValue()); \/\/ '1234'\n\n$form->getDisplayGroup('inputs')->addElement(new Zend_Form_Element_Text('test2')); \/\/ but test2 goes in this way...\n\n$form->setDefaults(array('test' => '1234', 'test2' => '5678'));              \/\/ test2 does not get set\n\nvar_dump($form->getDisplayGroup('inputs')->getElement('test2')->getValue()); \/\/ null, should be '5678'\n\nvar_dump($form->getElement('test2'));                                        \/\/ null, should be returning\n                                                                             \/\/ a Zend_Form_Element_Text\n                                                                             \/\/ object\n\n\/\/ $form->getDisplayGroup('inputs')->setDefaults();                          \/\/ this function does not exist,\n                                                                             \/\/ even though the one on the\n                                                                             \/\/ parent form doesn't work!!\n                                                                             \/\/ Arrrgh!\n\n$form->addElement($form->getDisplayGroup('inputs')->getElement('test2'));\n$form->setDefaults(array('test' => '1234', 'test2' => '5678')); \/\/ test2 is set now, but...\n\nvar_dump($form->getElement('test2')->getValue());               \/\/ '5678'\n\necho $form;                                                     \/\/ ...now test2 is written out twice because\n                                                                \/\/ it's both in the form AND the form's\n                                                                \/\/ display group (but notice the how the\n                                                                \/\/ correct default value appears in both\n                                                                \/\/ places now :))\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3496\/watchers",
                "isWatching": false,
                "watchCount": 8
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/10000",
                "name": "Postponed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "View_Helper",
                "zf-crteam-padraic",
                "zf-crteam-priority"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10181",
                    "id": 10181,
                    "description": "Mini Release",
                    "name": " 1.5.2",
                    "userReleaseDate": "15\/May\/08",
                    "archived": true,
                    "releaseDate": "2008-05-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22611",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "The bug in here is that you should not be able to add concrete element instances to a display group, and the solution is to make addElement(s) protected instead of public. Any other solution would require a huge overhaul of Zend_Form.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-06-23T05:59:20.000+0000",
                    "updated": "2008-06-23T05:59:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22612",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Scheduling for next minor release.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-06-23T05:59:46.000+0000",
                    "updated": "2008-06-23T05:59:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/23278",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Actually, I was wrong in my previous assessment. We need to limit to only concrete element instances so that the form can add the elements to the display group. However, it was _never_ intended that developers should add elements to the display group manually; only the elements passed to addDisplayGroup() should ever be attached to the display group.\n\nWhile theoretically we could support this, it would require substantial changes to Zend_Form_DisplayGroup and\/or Zend_Form, and for this reason, I'm postponing this issue's resolution.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-08-04T10:05:06.000+0000",
                    "updated": "2008-08-04T10:05:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25160",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leason",
                        "name": "leason",
                        "displayName": "Lee Eason",
                        "active": true
                    },
                    "body": "Matthew, I just ran into this problem as well.  Here is the situation I'm in so that maybe you can see a practical use case:\nAn object Foo has a settings form.  Foo has an abstract class and can be extended to implement several different types of Foo that use basically the same settings form but the extended versions need to add a couple of fields each.  The developer could opt to place the extended fields that customize Foo into their own display groups, but lets say that is not practical and the developer needs the custom fields to be in the same display group as Foo's original fields.  So the abstract Foo class sets up a Zend_Form and a display group called \"General.\"  Our issue at hand here prevents extended version of Foo from adding fields to \"General\" very easily.\n\nThe work around I think I'm going to use is that rather than having Foo setup the display group directly it will create a hash to organize the fields and loop through them once all the extended fields have been added.  That way extended Foo's can add custom fields and simply add them to the same stacks that Foo started.  However, I think it would be far less work and less complex if we could simply call $displayGroup->addElement(\"elementName\"); and have it handle all the necessary leg work.\n\nHope this helps!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=leason",
                        "name": "leason",
                        "displayName": "Lee Eason",
                        "active": true
                    },
                    "created": "2008-10-15T11:31:08.000+0000",
                    "updated": "2008-10-15T11:31:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28445",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "body": "I tried to make a patch to Zend_Form like this.\nMaybe,This relations to ZF-3205..\n{code:title=Zend_Form}\n    public function addElementsToGroup($groupIndex, $elements)\n    {\n        if (! is_string($groupIndex)) {\n            throw new Zend_Form_Exception(__CLASS__ . '::' . __METHOD__ . ' expects a valid DisplayGroup\\'s index');\n        }\n        $group = $this->getDisplayGroup($groupIndex);\n        if (! $group) {\n            throw new Zend_Form_Exception(' DisplayGroup not found : ' . $groupIndex);\n        }\n        if (is_string($elements)) {\n            $elements = array($elements);\n        } elseif (!is_array($elements)) {\n            throw new Zend_Form_Exception(__CLASS__ . '::' . __METHOD__ . ' 2nd arg expects string or array');\n        }\n        foreach ($elements as $element) {\n            if (isset($this->_elements[$element])) {\n                $add = $this->getElement($element);\n                if (null !== $add) {\n                    if (array_key_exists($element, $this->_order)) {\n                        unset($this->_order[$element]);\n                    }\n                    $group->addElement($add);\n                }\n            }\n        }\n        $this->_orderUpdated = true;\n        return $this;\n    }\n{code}\nand test it\n{code:title=test}\nrequire_once 'Zend\/Form.php';\nrequire_once 'Zend\/Form\/DisplayGroup.php';\nrequire_once 'Zend\/Form\/Element\/Text.php';\nrequire_once 'Zend\/View.php';\n\n$form = new Zend_Form();\n$form->setView(new Zend_View());\n$form->addElement(new Zend_Form_Element_Text('test'));\n$form->addDisplayGroup(array('test'), 'inputs'); \/\/ test goes in the display group this way...\n$form->setDefaults(array('test' => '1234'));     \/\/ and this works fine\nvar_dump($form->getElement('test')->getValue()); \/\/ '1234'\n\n\/**\n * How to use this method\n * 1. addElement to form\n * 2. element to group\n *\/\n$form->addElement(new Zend_Form_Element_Text('test2'));\n$form->addElementsToGroup('inputs', array('test2'));\n$form->setDefaults(array('test' => '1234', 'test2' => '5678')); \/\/ test2 is set now, but...\n\nvar_dump($form->getElement('test2')->getValue());               \/\/ '5678'\n\necho $form;    \/\/ good form.\n{code}\nThis code enables to attach elements to displaygroup anytime.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "created": "2009-01-23T07:42:48.000+0000",
                    "updated": "2009-01-23T07:42:48.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3496\/transitions"
}