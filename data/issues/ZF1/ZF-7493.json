{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7493",
    "key": "ZF-7493",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "ZendAMF serialization slow?"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/21",
                "name": "Performance Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7493\/votes",
                "votes": 9,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10451",
                    "id": 10451,
                    "description": "Mini Release",
                    "name": "1.10.4",
                    "userReleaseDate": "28\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-28",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-04-28T07:58:44.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cayennecode",
                "name": "cayennecode",
                "displayName": "Prabu Singh",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-08-05T13:51:19.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-09-22T14:12:06.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "ZendAMF",
                "serialization",
                "slow"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I've compared ZendAMF to AMFPHP, by returning a dataset with 5000+ rows from a table, using the exact same code (both in PHP, and AS3).  ZendAMF averages a 16 second return time, whereas AMFPHP returns in 3 seconds.  I'm guessing the added time is coming from the process of serializing data to send back to Flash."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7493\/watchers",
                "isWatching": false,
                "watchCount": 13
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=calevans",
                "name": "calevans",
                "displayName": "Cal Evans",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-10487",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10487",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-8186",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8186",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12585",
                    "filename": "Amf.Combined-NoObjectsByRef.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-06T17:00:49.000+0000",
                    "size": 20004,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12585\/Amf.Combined-NoObjectsByRef.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12553",
                    "filename": "Amf.data-as-refs.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2009-12-30T08:47:57.000+0000",
                    "size": 17239,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12553\/Amf.data-as-refs.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12552",
                    "filename": "Amf.noref-writeString.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2009-12-30T08:47:56.000+0000",
                    "size": 537,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12552\/Amf.noref-writeString.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/13120",
                    "filename": "Amf.perform.ref-writeString-1.10.5.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-06-03T07:43:55.000+0000",
                    "size": 1223,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/13120\/Amf.perform.ref-writeString-1.10.5.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12641",
                    "filename": "Amf.perform.ref-writeString.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-18T08:50:17.000+0000",
                    "size": 730,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12641\/Amf.perform.ref-writeString.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12642",
                    "filename": "Amf.ResponseTest.php.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-18T08:50:17.000+0000",
                    "size": 1268,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12642\/Amf.ResponseTest.php.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12574",
                    "filename": "Amf.Response_Body_By_Value.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-04T22:57:28.000+0000",
                    "size": 852,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12574\/Amf.Response_Body_By_Value.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12643",
                    "filename": "largeArrayData.bin",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-18T08:50:17.000+0000",
                    "size": 632254,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12643\/largeArrayData.bin"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10320",
                    "id": 10320,
                    "description": "Minor Release",
                    "name": "1.9.0",
                    "userReleaseDate": "31\/Jul\/09",
                    "archived": false,
                    "releaseDate": "2009-07-31",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10350",
                    "id": 10350,
                    "name": "Zend_Amf",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35584",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mgrippo",
                        "name": "mgrippo",
                        "displayName": "Matthew Grippo",
                        "active": true
                    },
                    "body": "I'd like to confirm this issue. Spent the day trying to chase down why the performance difference was so drastic. \r\nWith 20000 rows\/3 columns:\r\nAMFPHP - approx 5 seconds\r\nZendAMF - approx 70 seconds\r\n\r\nI was able to narrow it down to the Serializer (serialization of objects) class (AMF3 object \/ array writing). probably related to the Stream class. \r\nWas also able to confirm this was not a \"output\" issue at the apache\/php level to the browser. \r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mgrippo",
                        "name": "mgrippo",
                        "displayName": "Matthew Grippo",
                        "active": true
                    },
                    "created": "2009-10-27T18:42:09.000+0000",
                    "updated": "2009-10-27T18:42:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37160",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=acadam71",
                        "name": "acadam71",
                        "displayName": "Andreas Adam",
                        "active": true
                    },
                    "body": "I'd like to confirm this issue too: we don't send thousands of rows but we create complex objects with 10 or more arrays, e.g.:\r\nclass person\r\n  var vehicles: Array;\r\n  var groups: Array;\r\n  var a1: Array;\r\n  var a2: Array;\r\n  ...\r\nIn each array there are also some complex objects, but not many.\r\nIt takes more than 3 seconds to get an object person from PHP to Flex.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=acadam71",
                        "name": "acadam71",
                        "displayName": "Andreas Adam",
                        "active": true
                    },
                    "created": "2009-12-23T03:34:29.000+0000",
                    "updated": "2009-12-23T03:34:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37243",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "I just got finished working on a project which showed a drastic performance hit when switching from AMFphp to Zend_Amf.  Our serialization performance exploded from 2.3 seconds to 25.5 seconds.\r\n\r\nI'm going to attach two patches to this issue which brought the serialization time down to roughly the same speed as AMFphp.\r\n\r\nAny comments on whether these patches help others would be appreciated.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2009-12-30T08:34:25.000+0000",
                    "updated": "2009-12-30T08:34:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37244",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "These two patches were tested on php 5.3 and are against Zend AMF 1.9.6.  After applying both the serialization times for our project containing many multi-dimensional arrays decreased from 25.5 seconds to 2.3 seconds which matches the speed of using the older AMFphp serialization.  Comments on whether these patches help others would be appreciated.\r\n\r\n\r\nAmf.noref-writeString.diff:\r\n\r\nThis patch changes Zend_Amf to always write strings without doing an array_search to see if a string has already been written.  This is how AMFphp handled strings and did result in the download size increasing from around 179kb to 287kb for our project, but that's acceptable to us for the increased serialization speed.  Perhaps a better approach would be to use some sort of hash for string lookups to decrease the number of array elements array_search must search through.\r\n\r\n\r\nAmf.data-as-refs.diff:\r\n\r\nThis patch passes data by reference rather than by value in the serialization routines.  This prevents making copies of large data while doing serialization.\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2009-12-30T08:47:57.000+0000",
                    "updated": "2009-12-30T08:47:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37369",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "I will run this throught the unit tests tonight. If all passes I will submit a patch for the next mini release. Mark thanks for your patch!! ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2010-01-04T11:38:21.000+0000",
                    "updated": "2010-01-04T11:38:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37378",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "After running through the AllTests.php unit tests from http:\/\/framework.zend.com\/svn\/framework\/standard\/trunk\/tests\/Zend\/Amf, the attached patch provides the same results as testing against Zend_Amf 1.9.6 with the data-as-refs patch applied.\r\n\r\nThe noref-writeString patch causes 3 errors, but I believe this is due to not using references to some strings (larger payload, much reduced response time).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-04T22:57:29.000+0000",
                    "updated": "2010-01-04T22:57:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37444",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "Zend Framework requires that we php strict mode standards. If we apply this patch I get all kinds of \"Only variables should be passed by reference\" so I guess we need to jump into this and figure out were we don't need to explicitly pass by reference because php is already passing it that way. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2010-01-06T12:34:00.000+0000",
                    "updated": "2010-01-06T12:34:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37456",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "Wade, did you apply patch #3 [Amf.Response_Body_By_Value.diff] when you ran your tests?  I'm not seeing any of the \"Only variables should be passed by reference\" errors when I run the tests with all three patches applied.\r\n\r\nWithout patch #3 I get many of the passed by reference errors and a summary of \"Tests: 160, Assertions: 289, Failures: 2, Errors: 72.\"\r\n\r\nWith all three patches I get a summary of \"OK (160 tests, 416 assertions)\" which matches what I get when run against 1.9.6.\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-06T15:00:22.000+0000",
                    "updated": "2010-01-06T15:00:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37458",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "Wade, if you're still getting the \"Only variables should be passed by reference\" errors with the previous 3 patches, here's an initial try at passing non-objects by reference as the first parameter and php objects (objects, dates, xml, etc) as a new third parameter of the writeTypeMarker serialization methods.\r\n\r\nI haven't gotten to do much testing with this latest patch, but it does pass the unit tests and initial testing of our project.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-06T17:00:49.000+0000",
                    "updated": "2010-01-06T17:00:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37773",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "So your suggesting apply both Amf.Response_Body_By_Value.diff and Amf.Combined-NoObjectsByRef.diff patches? ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2010-01-17T12:11:43.000+0000",
                    "updated": "2010-01-17T12:11:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37774",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "Nope just Amf.Combined-NoObjectsByRef.diff it looks like ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2010-01-17T12:14:43.000+0000",
                    "updated": "2010-01-17T12:14:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37802",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "Wade, I had some time to do more testing on this over the weekend.\r\n\r\nI created a unit test for serializing a large array and after using this test, I believe the only patch that is needed is the one to not reference strings.\r\n\r\nMy previous patch [Amf.noref-writeString.diff] causes some test failures due to not referencing any strings which some of the tests expect, so here's a new patch based on a recommendation that in_array can be very slow as more elements are added to an array while checking if an array key exists is roughly constant.  \r\n\r\nHopefully this much simpler patch will fix this performance issue and it passes the unit tests.\r\n\r\nPatches:\r\nAmf.perform.ref-writeString.diff : Use the string as the array key and store the reference number as the value for much quicker lookup performance.\r\n\r\nAmf.ResponseTest.php.diff : Unit test to make sure the large array serialization time hasn't ballooned by a factor of 10.  (Is there a better way of testing the speed other than comparing against a \"high enough\" number that works on today's hardware?)\r\n\r\nlargeArrayData.bin : This is simply my test dataset compressed with gzcompress that consists of several large arrays containing almost .  It is 624kB in size though, so maybe this isn't acceptable to include for unit testing.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-01-18T08:50:17.000+0000",
                    "updated": "2010-01-18T08:50:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37812",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rocksocke",
                        "name": "rocksocke",
                        "displayName": "Matthias Steinb\u00f6ck",
                        "active": true
                    },
                    "body": "Using the latest zendfw beta and the patch provided on your side, i get the following error using zamfbrowser\r\n\r\n{code}\r\n\r\nThere was an error loading the server's info.  Error: (mx.rpc.events::FaultEvent)#0\r\n  bubbles = false\r\n  cancelable = true\r\n  currentTarget = (mx.rpc.remoting.mxml::RemoteObject)#1\r\n    channelSet = (mx.messaging::ChannelSet)#2\r\n      authenticated = false\r\n      channelIds = (Array)#3\r\n        [0] (null)\r\n      channels = (Array)#4\r\n        [0] (mx.messaging.channels::AMFChannel)#5\r\n          authenticated = false\r\n          channelSets = (Array)#6\r\n            [0] (mx.messaging::ChannelSet)#2\r\n          connected = true\r\n          connectTimeout = -1\r\n          enableSmallMessages = true\r\n          endpoint = \"http:\/\/..............\/gateway.php\"\r\n          failoverURIs = (Array)#7\r\n          id = (null)\r\n          mpiEnabled = false\r\n          netConnection = (flash.net::NetConnection)#8\r\n            client = (mx.messaging.channels::AMFChannel)#5\r\n            connected = false\r\n            maxPeerConnections = 8\r\n            objectEncoding = 3\r\n            proxyType = \"none\"\r\n            uri = \"http:\/\/..............\/gateway.php\"\r\n          piggybackingEnabled = false\r\n          polling = false\r\n          pollingEnabled = true\r\n          pollingInterval = 3000\r\n          protocol = \"http\"\r\n          reconnecting = false\r\n          recordMessageSizes = false\r\n          recordMessageTimes = false\r\n          requestTimeout = -1\r\n          uri = \"http:\/\/..............\/gateway.php\"\r\n          url = \"http:\/\/..............\/gateway.php\"\r\n          useSmallMessages = false\r\n      clustered = false\r\n      connected = true\r\n      currentChannel = (mx.messaging.channels::AMFChannel)#5\r\n      initialDestinationId = (null)\r\n      messageAgents = (Array)#9\r\n        [0] (mx.rpc::AsyncRequest)#10\r\n          authenticated = false\r\n          autoConnect = true\r\n          channelSet = (mx.messaging::ChannelSet)#2\r\n          clientId = (null)\r\n          connected = true\r\n          defaultHeaders = (null)\r\n          destination = \"AMF\"\r\n          id = \"2D1CCD62-E448-16FD-79B8-4465C9CE0DDB\"\r\n          reconnectAttempts = 0\r\n          reconnectInterval = 0\r\n          requestTimeout = -1\r\n          subtopic = \"\"\r\n    concurrency = \"multiple\"\r\n    destination = \"AMF\"\r\n    endpoint = \"http:\/\/..............\/gateway.php\"\r\n    getServices = (mx.rpc.remoting.mxml::Operation)#11\r\n      argumentNames = (Array)#12\r\n      arguments = (Object)#13\r\n      concurrency = \"multiple\"\r\n      lastResult = (null)\r\n      makeObjectsBindable = true\r\n      name = \"getServices\"\r\n      service = (mx.rpc.remoting.mxml::RemoteObject)#1\r\n      showBusyCursor = true\r\n    makeObjectsBindable = true\r\n    operations = (Object)#14\r\n      getServices = (mx.rpc.remoting.mxml::Operation)#11\r\n    requestTimeout = -1\r\n    showBusyCursor = true\r\n    source = \"ZendAmfServiceBrowser\"\r\n  eventPhase = 2\r\n  fault = (mx.rpc::Fault)#15\r\n    content = (Object)#16\r\n    errorID = 0\r\n    faultCode = \"Server.Acknowledge.Failed\"\r\n    faultDetail = \"Was expecting mx.messaging.messages.AcknowledgeMessage, but received null\"\r\n    faultString = \"Didn't receive an acknowledge message\"\r\n    message = \"faultCode:Server.Acknowledge.Failed faultString:'Didn't receive an acknowledge message' faultDetail:'Was expecting mx.messaging.messages.AcknowledgeMessage, but received null'\"\r\n    name = \"Error\"\r\n    rootCause = (null)\r\n  headers = (null)\r\n  message = (mx.messaging.messages::ErrorMessage)#17\r\n    body = (Object)#16\r\n    clientId = (null)\r\n    correlationId = \"06927F94-0A5F-A7AC-EAA6-4465C9CFB388\"\r\n    destination = \"\"\r\n    extendedData = (null)\r\n    faultCode = \"Server.Acknowledge.Failed\"\r\n    faultDetail = \"Was expecting mx.messaging.messages.AcknowledgeMessage, but received null\"\r\n    faultString = \"Didn't receive an acknowledge message\"\r\n    headers = (Object)#18\r\n    messageId = \"A2AAC85B-DA13-57AE-45A9-4465D0C4D16C\"\r\n    rootCause = (null)\r\n    timestamp = 0\r\n    timeToLive = 0\r\n  messageId = \"A2AAC85B-DA13-57AE-45A9-4465D0C4D16C\"\r\n  statusCode = 0\r\n  target = (mx.rpc.remoting.mxml::RemoteObject)#1\r\n  token = (mx.rpc::AsyncToken)#19\r\n    message = (mx.messaging.messages::RemotingMessage)#20\r\n      body = (Array)#21\r\n      clientId = (null)\r\n      destination = \"AMF\"\r\n      headers = (Object)#22\r\n        DSEndpoint = (null)\r\n        DSId = \"nil\"\r\n      messageId = \"06927F94-0A5F-A7AC-EAA6-4465C9CFB388\"\r\n      operation = \"getServices\"\r\n      source = \"ZendAmfServiceBrowser\"\r\n      timestamp = 0\r\n      timeToLive = 0\r\n    responders = (null)\r\n    result = (null)\r\n  type = \"fault\"\r\n{code}\r\n\r\n\r\nprint_r-ing the result from ->handle() i get this:\r\n\r\n{code}\r\nZend_Amf_Response_Http Object\r\n(\r\n    [_objectEncoding:protected] => 3\r\n    [_bodies:protected] => Array\r\n        (\r\n            [0] => Zend_Amf_Value_MessageBody Object\r\n                (\r\n                    [_targetUri:protected] => \/2\/onResult\r\n                    [_responseUri:protected] => \r\n                    [_data:protected] => Zend_Amf_Value_Messaging_AcknowledgeMessage Object\r\n                        (\r\n                            [correlationId] => 06927F94-0A5F-A7AC-EAA6-4465C9CFB388\r\n                            [clientId] => 5A02856A-1B19-BEA9-AB02-000012DDD1D1\r\n                            [destination] => \r\n                            [messageId] => 5CBFBDB2-E06E-A688-7232-0000064516F9\r\n                            [timestamp] => 126386792600\r\n                            [timeToLive] => 0\r\n                            [headers] => stdClass Object\r\n                                (\r\n                                )\r\n\r\n                            [body] => <methods>....correctxml....<\/methods>\r\n                        )\r\n\r\n                )\r\n\r\n        )\r\n\r\n    [_headers:protected] => Array\r\n        (\r\n        )\r\n\r\n    [_outputStream:protected] => Zend_Amf_Parse_OutputStream Object\r\n        (\r\n            [_stream:protected] => ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rocksocke",
                        "name": "rocksocke",
                        "displayName": "Matthias Steinb\u00f6ck",
                        "active": true
                    },
                    "created": "2010-01-18T18:43:47.000+0000",
                    "updated": "2010-01-18T18:43:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37826",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rocksocke",
                        "name": "rocksocke",
                        "displayName": "Matthias Steinb\u00f6ck",
                        "active": true
                    },
                    "body": "please ignore my previous post. the problems i encountered can be traced back to errors i did myself and with the usage of zamfbrowser.\r\n\r\nallthough, i found another issue - i'm not sure if this is a bug or a behaviour:  http:\/\/framework.zend.com\/issues\/browse\/ZF-8870\r\n\r\nthanks for your brilliant work!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rocksocke",
                        "name": "rocksocke",
                        "displayName": "Matthias Steinb\u00f6ck",
                        "active": true
                    },
                    "created": "2010-01-19T06:55:48.000+0000",
                    "updated": "2010-01-19T06:55:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38979",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "This issue still affects ZendFramework 1.10.2.\r\n\r\nThe only change needed to greatly increase performance is to use an associative array and array_key_exists instead of array_search when writing referenced strings in the AMF3 serializer.\r\n\r\nThe strict type checking used in array_search is unnecessary since only string data is ever passed to the writeString method and checking if an array key exists is much faster than searching an array as the array becomes increasingly large.\r\n\r\nPatch is below:\r\n----------------------------------------------------------\r\n--- Parse\/Amf3\/Serializer.orig.php\t2010-01-18 12:34:23.000000000 -0600\r\n+++ Parse\/Amf3\/Serializer.php\t2010-03-04 13:56:36.000000000 -0600\r\n@@ -212,31 +212,31 @@\r\n     \/**\r\n      * Send string to output stream\r\n      *\r\n      * @param  string $string\r\n      * @return Zend_Amf_Parse_Amf3_Serializer\r\n      *\/\r\n     public function writeString($string)\r\n     {\r\n         $len = strlen($string);\r\n         if(!$len){\r\n             $this->writeInteger(0x01);\r\n             return $this;\r\n         }\r\n \r\n-        $ref = array_search($string, $this->_referenceStrings, true);\r\n+        $ref = array_key_exists($string, $this->_referenceStrings) ? $this->_referenceStrings[$string] : false;\r\n         if($ref === false){\r\n-            $this->_referenceStrings[] = $string;\r\n+            $this->_referenceStrings[$string] = count($this->_referenceStrings);\r\n             $this->writeBinaryString($string);\r\n         } else {\r\n             $ref <<= 1;\r\n             $this->writeInteger($ref);\r\n         }\r\n \r\n         return $this;\r\n     }\r\n \r\n     \/**\r\n      * Send ByteArray to output stream\r\n      *\r\n      * @param  string|Zend_Amf_Value_ByteArray  $data\r\n      * @return Zend_Amf_Parse_Amf3_Serializer\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-03-04T12:09:45.000+0000",
                    "updated": "2010-03-04T12:09:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39104",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "What about moving out the serialization to Zend_Serializer_Adapter_Amf[0|1] ?\r\n-> This could minimize include files for Zend_Amf and speed up AMF* serializer of Zend_Serializer ?\r\n\r\nFor now Zend_Serializer_Adapter_Amf needs instantiate 3 classes for serializing:\r\n* Zend_Serializer_Adapter_Amf*\r\n* Zend_Amf_Parse_OutputStream\r\n* Zend_Amf_Parse_Amf*_Serializer\r\n{code}\r\n$stream     = new Zend_Amf_Parse_OutputStream();\r\n$serializer = new Zend_Amf_Parse_Amf*_Serializer($stream);\r\n$serializer->writeTypeMarker($value);\r\nreturn $stream->getStream();\r\n{code}\r\n\r\nand on unserializing, too:\r\n* Zend_Serializer_Adapter_Amf*\r\n* Zend_Amf_Parse_InputStream\r\n* Zend_Amf_Parse_Amf*_Deserializer\r\n{code}\r\n$stream       = new Zend_Amf_Parse_InputStream($value);\r\n$deserializer = new Zend_Amf_Parse_Amf*_Deserializer($stream);\r\nreturn $deserializer->readTypeMarker();\r\n{code}\r\n\r\n-> This could be handled similar to the PythonPickle serializer.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2010-03-08T15:13:51.000+0000",
                    "updated": "2010-03-08T15:13:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40261",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Patches reviewed and applied to trunk and 1.10 release branch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-04-28T07:58:45.000+0000",
                    "updated": "2010-04-28T07:58:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40601",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pbettler",
                        "name": "pbettler",
                        "displayName": "Philippe Bettler",
                        "active": true
                    },
                    "body": "Matthew,\r\nI just downloaded 1.10.4 and it seems that the patch from Mark Reidenbach hasn't been applied.\r\nI am looking at Serializer.php line 231, function writeString.\r\nThe string is not stored as a key but as a value. \r\nCan you please check it out?\r\nThanks",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pbettler",
                        "name": "pbettler",
                        "displayName": "Philippe Bettler",
                        "active": true
                    },
                    "created": "2010-05-21T11:56:07.000+0000",
                    "updated": "2010-05-21T11:56:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40655",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=funkjames",
                        "name": "funkjames",
                        "displayName": "James Spurin",
                        "active": true
                    },
                    "body": "I also downloaded 1.10.4 today.\r\n\r\nAs Philippe mentioned, the patch from Mark Reidenbach mentioned at 04\/Mar\/10 12:09 PM does not seem to have been applied.  I manually made the changes to 1.10.4 using the details provided by Mark and noticed substantial performance improvements.\r\n\r\nOn a 70,000 row table the query took 13 seconds as opposed to 60+ seconds prior to the patch being applied.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=funkjames",
                        "name": "funkjames",
                        "displayName": "James Spurin",
                        "active": true
                    },
                    "created": "2010-05-23T08:28:19.000+0000",
                    "updated": "2010-05-23T08:28:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40844",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wedge",
                        "name": "wedge",
                        "displayName": "Otto",
                        "active": true
                    },
                    "body": "I also tried Mark's patch from 04\/Mar\/10. It's only slightly faster here though. Getting 400 objects I go from 2300ms -> 2000ms.\r\nIs the count part of his patch really necessary? I've modified it, and it appears to work and also appears to be slightly faster.\r\n\r\n{noformat}\r\n-        $ref = array_search($string, $this->_referenceStrings, true);\r\n+        $ref = array_key_exists($string, $this->_referenceStrings) ? $this->_referenceStrings[$string] : false;\r\n         if($ref === false){\r\n-            $this->_referenceStrings[] = $string;\r\n+            $this->_referenceStrings[$string] = 1;\r\n{noformat} ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wedge",
                        "name": "wedge",
                        "displayName": "Otto",
                        "active": true
                    },
                    "created": "2010-06-03T01:10:10.000+0000",
                    "updated": "2010-06-03T01:10:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40847",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wedge",
                        "name": "wedge",
                        "displayName": "Otto",
                        "active": true
                    },
                    "body": "Upon further testing it looks like the count part of Mark's patch is indeed needed so please disregard my addition.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wedge",
                        "name": "wedge",
                        "displayName": "Otto",
                        "active": true
                    },
                    "created": "2010-06-03T03:04:42.000+0000",
                    "updated": "2010-06-03T03:04:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40854",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "body": "Patch from March 4, 2010 updated against 1.10.5 as an attachment.\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mreiden",
                        "name": "mreiden",
                        "displayName": "Mark Reidenbach",
                        "active": true
                    },
                    "created": "2010-06-03T07:44:01.000+0000",
                    "updated": "2010-06-03T07:44:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41735",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=newbs",
                        "name": "newbs",
                        "displayName": "Henry Tran",
                        "active": true
                    },
                    "body": "Is the patch applied in 1.10.6?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=newbs",
                        "name": "newbs",
                        "displayName": "Henry Tran",
                        "active": true
                    },
                    "created": "2010-07-26T06:59:34.000+0000",
                    "updated": "2010-07-26T06:59:34.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7493\/transitions"
}