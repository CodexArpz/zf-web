{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5199",
    "key": "ZF-5199",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Select should make use of Zend_Db_Table instances in from() and join() clauses"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5199\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                "name": "doctorrock83",
                "displayName": "julien PAULI",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-12-10T07:01:34.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T21:38:16.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Look at Zend_Db_Table_Select from() method :\n{code}\npublic function from($name, $cols = self::SQL_WILDCARD, $schema = null)\n{\nif ($name instanceof Zend_Db_Table_Abstract) {\n            $info = $name->info();\n            $name = $info[Zend_Db_Table_Abstract::NAME];\n            if (isset($info[Zend_Db_Table_Abstract::SCHEMA])) {\n                $schema = $info[Zend_Db_Table_Abstract::SCHEMA];\n            }\n        }\n\/\/ ...\n{code}\n\nThat is nice, and I wonder why that has'nt been implemented in Zend_Db_Select class.\nSame for join() : Why cant we use a Zend_Db_Table instance in it ?\n\nUse case asked :\n{code}\n$db->select()->from($aTable)->join($anotherTable) ...\n\/\/ $db is a Zend_Db_Adapter_Abstract\n\/\/ $aTable and $anotherTable are both Zend_Db_Table_Abstract objects\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5199\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28084",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Why should Zend_Db_Select be aware of anything Zend_Db_Table?  Wouldnt this introduce a level of unwanted coupling?  Isnt this what Z_D_T_Select is for?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-01-11T22:00:15.000+0000",
                    "updated": "2009-01-11T22:00:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42840",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ianfp",
                        "name": "ianfp",
                        "displayName": "Ian F Phillips",
                        "active": true
                    },
                    "body": "@Ralph Schindler:\r\n\r\nHere's why I vote for this issue.  I have a table \"Foo\" for which I have created a subclass of Zend_Db_Table_Abstract called FooTable.  I want to select a single value from a single column of \"Foo\", but Zend_Db_Table does not have a fetchOne() method, whereas Zend_Db_Adapter does.  So I use Zend_Db_Adapter for the query.  However, I want my FooTable class to completely encapsulate the database table, so that if I decide to change the name of the table from \"Foo\" to \"BetterFoo\", I only have to make a change in one place.\r\n\r\nInstead of doing this:\r\n\r\n$select = $db_adapter->select()->from(\"Foo\", ...);\r\n$scalar_val = $db_adapter->fetchOne($select);\r\n\r\nI want to do this:\r\n\r\n$foo_table = new FooTable();\r\n$select = $db_adapter->select()->from($foo_table, ...);\r\n$scalar_val = $db_adapter->fetchOne($select);\r\n\r\nComments welcome!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ianfp",
                        "name": "ianfp",
                        "displayName": "Ian F Phillips",
                        "active": true
                    },
                    "created": "2010-11-05T10:47:08.000+0000",
                    "updated": "2010-11-05T10:47:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42845",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mjh_ca",
                        "name": "mjh_ca",
                        "displayName": "Marc Hodgins",
                        "active": true
                    },
                    "body": "@Ian:\r\n\r\nNot a valid reason for Zend_Db_Select to need extra code to need be aware of Zend_Db_Table.\r\n\r\ntake a look at the docs here\r\nhttp:\/\/framework.zend.com\/manual\/en\/zend.db.table.html#zend.db.table.advanced.usage\r\n\r\nYou can already retrieve specific columns with Zend_Db_Table_Select:\r\n\r\n{code}\r\n$table = new MyTable();\r\n$table->select()->from($table, array('my_column'))->fetchRow();\r\n{code}\r\n\r\nIf you really want the same behavior as Zend_Db_Select#fetchOne() (that is, return a single value as a result) then you can do:\r\n\r\n{code}\r\n$table = new MyTable();\r\n$select = $table->select()->from($table, array('my_column'));\r\n$result = $table->getAdapter()->fetchOne($select);\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mjh_ca",
                        "name": "mjh_ca",
                        "displayName": "Marc Hodgins",
                        "active": true
                    },
                    "created": "2010-11-05T15:09:19.000+0000",
                    "updated": "2010-11-05T15:09:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42846",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ianfp",
                        "name": "ianfp",
                        "displayName": "Ian F Phillips",
                        "active": true
                    },
                    "body": "@Marc Hodgins:\r\n\r\nYour second code snippet addresses my concern quite well.  I didn't realize you could pass a Zend_Db_Table_Select to Zend_Db_Adapter->fetchOne().  (Of course, now that I look more closely at the API docs, I see that Zend_Db_Table_Select inherits from Zend_Db_Select, so I guess I could have figured this out on my own.)\r\n\r\nThanks for the feedback\/lesson.  Your (and Ralph's) point about keeping Zend_Db_Select unaware of Zend_Db_Table is a good one, so I'll \"unvote\" this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ianfp",
                        "name": "ianfp",
                        "displayName": "Ian F Phillips",
                        "active": true
                    },
                    "created": "2010-11-05T15:26:33.000+0000",
                    "updated": "2010-11-05T15:26:33.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5199\/transitions"
}