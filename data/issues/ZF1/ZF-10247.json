{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10247",
    "key": "ZF-10247",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Http_Client URL encoding of spaces (which RFC are we applying?)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10247\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                "name": "padraic",
                "displayName": "P\u00e1draic Brady",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-07-29T15:51:34.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-06T19:17:45.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In attempting to resolve a Zend_Oauth issue (uses a subclass of Zend_Http_Client), the original reporter noted that Zend_Http_Client uses http_build_query() to URL encode GET\/POST parameters. This encodes all spaces as +, and not the percent encoding %20. The + encoding is not acceptable for OAuth or any other digitally signed protocol under RFC 3986. I'm currently investigating how live services and my own testing are not impacted by this but other implementations are - OAuth is a minefield for interoperability issues.\r\n\r\nI am not a HTTP expert, but it seems a relatively simple task to switch from + to %20 (BC can be considered - not sure of any impact), and it will certainly prevent a number of dependent components suffering from unnoticed bugs. Consistency of URIs may not seem to matter from the perspective of general querying where + and %20 can be interpreted similarly, but the same is not true of protocols where URI parameters are digitially signed and interpreted strictly as-is in accordance with the latest RFC. This means that + and %20 alter the base signature of a URI depending on the encoding selected which feeds back to generated HMACs.\r\n\r\nIt would be great to get some feedback\/opinions on the above since, not being an HTTP expert, I could be misunderstanding something. The only thing I am sure of is that PHP is fairly bad at applying RFCs consistently across all functions and Zend_Http_Client may be an unwitting victim of http_build_query() whose documentation does not clarify the RFC it applies. This should, without doubt, be fixed in ZF2 where these is no hesitation needed in making BC breaking changes given the continuing growth of digital signing in HTTP based protocols.\r\n\r\nOnce I figure out the compensatory measures employed by implementations like Twitter (unaffected by this), I can assess if a fix is absolutely necessary. If it is, the dependency on Zend_Http_Client will require copy-paste editing of the request() method if the above fix cannot be added. It would be great for ZF 2.0 if subclassing Zend_Http_Client was considered going forward and we could introduce more bit-size splits of concerns in the class - subclassing it is not all that easy to do without duplicating a lot of its code."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10247\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf-crteam-padraic",
                "zf-crteam-priority"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shahar",
                "name": "shahar",
                "displayName": "Shahar Evron",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10480",
                    "id": 10480,
                    "description": "Mini Release",
                    "name": "1.10.7",
                    "userReleaseDate": "28\/Jul\/10",
                    "archived": false,
                    "releaseDate": "2010-07-28",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10160",
                    "id": 10160,
                    "description": "Major Release",
                    "name": "Next Major Release",
                    "archived": false,
                    "released": false
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10015",
                    "id": 10015,
                    "name": "Zend_Http_Client",
                    "description": "performs HTTP requests",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41787",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "Writers write, that has just been proved.\r\n\r\nYou've been selected for writing the longest issue report not containing any code. Congratulations.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2010-07-29T15:54:36.000+0000",
                    "updated": "2010-07-29T15:54:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41788",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Ahh, but wait for the blog post! :P",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2010-07-29T16:06:24.000+0000",
                    "updated": "2010-07-29T16:06:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41820",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shahar",
                        "name": "shahar",
                        "displayName": "Shahar Evron",
                        "active": true
                    },
                    "body": "I'll try to give a short as possible answer :)\r\n\r\n1. I completely agree about ZF2.0. In fact, I'm writing a new proposal (and experimenting with an implementation) of Zend\\Uri for 2.0, which will be completely RFC-3986 compliant, and already (in my implementation) contains methods which replace http_build_query() and similar internal ambiguous functions with consistent RFC compliant encoding methods. The main diff between them and the internal functions is encoding of space as %20 and not '+'. This is clearly the 100% consistent method of encoding. \r\n\r\nI didn't start working on Zend\\Http\\Client for 2.0 yet, but when I will I will try to re-use the Zend\\Uri code for this purpose. I will also keep your note on subclassing, which I completely agree with, in mind. \r\n\r\n2. That said, I am not sure what the impact on BC will be. I am 80% sure it won't break BC because %20 is understood globally as space, and that includes all places where '+' is understood as space as well. However, I can't say I'm 100% sure. More advice on this will be most welcome. \r\n\r\nShahar.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shahar",
                        "name": "shahar",
                        "displayName": "Shahar Evron",
                        "active": true
                    },
                    "created": "2010-08-01T09:04:00.000+0000",
                    "updated": "2010-08-01T09:04:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41824",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Only place it might break BC is in situations where stuff expects + explicitly. I can't think of any examples though. Could be one for Matthew\/#zftalk.dev to talk about and make a call on.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2010-08-01T12:29:37.000+0000",
                    "updated": "2010-08-01T12:29:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41832",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "Shahar, would it be possible to add an option to switch the default encoding from + to %20? It might be simpler to add a quick fix as an option for client which really really need it, and let the full fix wait for ZF2. It may also be possible to extract the encoding to a separate protected method where it's easier to override in a subclass. This would avoid any BC issues altogether for the ZF1 version.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2010-08-02T04:18:53.000+0000",
                    "updated": "2010-08-02T04:18:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45849",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dblunk",
                        "name": "dblunk",
                        "displayName": "Dominik Blunk",
                        "active": true
                    },
                    "body": "I think this is fixed in the latest ZF (1.11.5). When using Zend_Oauth_Client the config option \"rfc3986_strict\" is set to true by default which will encode all spaces to \"%20\" instead of \"+\".\r\n\r\nHowever this is only done for all GET params not the HTTP body (POST and PUT params). I think the method Zend_Http_Client::_prepareBody() should also be aware of the \"rfc3986_strict\" option. I guess something like the snippet above should do the trick:\r\n\r\n#### snipp ####\r\ncase self::ENC_URLENCODED:\r\n                    \/\/ Encode body as application\/x-www-form-urlencoded\r\n                    $this->setHeaders(self::CONTENT_TYPE, self::ENC_URLENCODED);\r\n                    $body = http_build_query($this->paramsPost, '', '&');\r\n                    if ($this->config['rfc3986_strict']) {\r\n                        $body = str_replace('+', '%20', $body);\r\n                    }\r\n                    break;\r\n#### snipp ####",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dblunk",
                        "name": "dblunk",
                        "displayName": "Dominik Blunk",
                        "active": true
                    },
                    "created": "2011-04-11T08:48:02.000+0000",
                    "updated": "2011-04-11T08:48:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50675",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "@[~padraic] if you identify the areas where the strict flag needs to be implemented I can whip up a patch",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-17T18:43:44.000+0000",
                    "updated": "2012-05-17T18:43:44.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10247\/transitions"
}