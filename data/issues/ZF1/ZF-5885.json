{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5885",
    "key": "ZF-5885",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "$_explicitType Mapping not sending objects from Flex to PHP"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5885\/votes",
                "votes": 3,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yemixnuga",
                "name": "yemixnuga",
                "displayName": "Adeyemi Opanuga",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-02-25T18:42:41.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-01-22T06:16:52.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Wade hi, I know this may sound impossible, but I have been working on a project using Zend_AMF and found out that when I use the $_explicitType method of class mapping in my project  things become difficult. When using the $_explicitType method I get objects from PHP into Flex but when I try to send 1 object from Flex  to PHP I get the channel diconnected error.  I then switched to using the $server->setClassMap method and everything works fine. I have visited several blogs on this issue and no one has figured it out. I even found about 3 posts with similar problems in different blogs but no solution. I have continued building my application using the setClassMap method and each time I download an update (last tested 1.7.5) of the Zend_AMF I check to see if it would work but it's still not working. So please check this out. May be I am not doing something right. Thanks. \n\nN.B - you can use Mihai's sample for a quick test : http:\/\/corlan.org\/downloads\/flex_php.zip.\n       - just comment out the  \/\/$server->setClassMap(\"VOAuthor\", \"VOAuthor\");\n         and add the public $_explicitType ='VOAuthor' and you would not be able to update data in the datagrid."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5885\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/10000",
                "name": "Postponed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                "name": "wadearnold",
                "displayName": "Wade Arnold",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10272",
                    "id": 10272,
                    "description": "Mini Release",
                    "name": "1.7.5",
                    "userReleaseDate": "16\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10350",
                    "id": 10350,
                    "name": "Zend_Amf",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29664",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=iongion",
                        "name": "iongion",
                        "displayName": "ionut stoica",
                        "active": true
                    },
                    "body": "After reading a whole lot about this \"issue\" i have discovered it is not such a trivial task.\n\nWade, you should check out SabreAMF and offer those features in Zend_AMF also.\n\nThey have a way of settings your own class mapping callback functions.\n\nThe issue with classmapping in php will and always be the loading\/autoloading of classes, it is just the way php works.\nOne sollutions will be to create a certain convention on class mapping, but this is limiting, the best way is leave it as it is and add support for overriding class maping through custom callback functions, just as SabreAMF does, please take a look, it will get you rid of a lot of problems and questions.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=iongion",
                        "name": "iongion",
                        "displayName": "ionut stoica",
                        "active": true
                    },
                    "created": "2009-03-22T05:33:16.000+0000",
                    "updated": "2009-03-22T05:33:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29702",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "As you pointed out it is very difficult to de-serialize, instantiate the classmap class if it exists, and then populate it with data. I will check out what you spoke of and see what I can do to get something added for round trip with AS3 specifying the mapping. Really appreciate the suggestions, links, and general feedback. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2009-03-24T12:40:58.000+0000",
                    "updated": "2009-03-24T12:40:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29708",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=iongion",
                        "name": "iongion",
                        "displayName": "ionut stoica",
                        "active": true
                    },
                    "body": "Sure, here they are:\n\nSabreAMF wiki http:\/\/code.google.com\/p\/sabreamf\/w\/list\n\nThe place that does all the magic:\n\n  SabreAMF_ClassMapper::$onGetLocalClass = 'flashToPHPClass';\n  SabreAMF_ClassMapper::$onGetRemoteClass = 'PHPToFlashClass';\n\nwhere flashToPHPClass and PHPToFlashClass are simple custom php functions.\n\nor :\n\n  SabreAMF_ClassMapper::$onGetLocalClass = array($classOrInstance, 'flashToPHPClass');\n  SabreAMF_ClassMapper::$onGetRemoteClass =array($classOrInstance, 'PHPToFlashClass');\n\nas callbacks.\n\nExample:\n\n\/\/ actionscript\n[RemoteClass(alias=\"package.Stuf.Smuf.Zbuf\")] \nclass MyClass {\n}\n\n\/\/ php\nclass Stuf_Smuf_ZbufVO {\n}\n\nif one wants a class mapping between those, the callback functions could look like: \n\/\/ (i did not include security):\n\/\/ neither i did not test it, but you get the idea\n\nfunction flashToPHPClass($alias) {\n  $parts = explode('.', $alias);\n  unset($parts[0]);\n  $phpClass = implode('_', $parts).VO;\n  \/\/ now the $phpClass becomes: Stuf_Smuf_ZbufVO\n  \/\/ that will either be loaded here (included,required)\n  \/\/ or that will be autoloaded by the Zend_Autoloader\n  return $phpClass;\n}\n\n\/\/ so that it returns a class with \"package\" prefix and without the VO termination\nfunction PHPToFlashClass($class) { \n  return 'package.'.substr($class, 0, -2);\n}\n\nthis can allow any naming convetion\/class mapping system imagined.\n\nlook further on that wiki page and talk with \"evertpot\", he answers mails and cares about amf\/php world on a different level, just like you.\nYou should join forces :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=iongion",
                        "name": "iongion",
                        "displayName": "ionut stoica",
                        "active": true
                    },
                    "created": "2009-03-24T14:12:40.000+0000",
                    "updated": "2009-03-24T14:12:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30323",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "This is something be worked on for better mapping from Flex. Zend Amf is definitely PHP centric in regards to class mapping. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2009-04-22T12:01:43.000+0000",
                    "updated": "2009-04-22T12:01:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37938",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=acadam71",
                        "name": "acadam71",
                        "displayName": "Andreas Adam",
                        "active": true
                    },
                    "body": "Our Zend_Amf_Server has over 250 object types (classes). If we need to set the mappings via \"$server->setClassMap\" then we also have to import all php files with classes. The result is 250 \"require_once\"! And every new \"require_once\" in the server script makes the AMF server slower and slower...\r\nBetter: the \"$_explicitType\" worked fine (in both directions) - then we can delete the 250 \"require_once\" and the 250 \"$server->setClassMap\" and the server will be faster!\r\n\r\nExample: \r\nAccess WITH \"require_once\" and \"$server->setClassMap\": 250 ms\r\nAccess WITHOUT \"require_once\" and \"$server->setClassMap\": 25 ms\r\n\r\nResult: the speed will be increased over 10 times!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=acadam71",
                        "name": "acadam71",
                        "displayName": "Andreas Adam",
                        "active": true
                    },
                    "created": "2010-01-22T06:16:52.000+0000",
                    "updated": "2010-01-22T06:16:52.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5885\/transitions"
}