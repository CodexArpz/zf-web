{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-735",
    "key": "ZF-735",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Resolve issues with automatic defaulting of session name, and session collisions between ZF apps"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-735\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10020",
                    "id": 10020,
                    "description": "Preview Release; I18N, Acl, Auth, Session",
                    "name": "0.7.0",
                    "userReleaseDate": "18\/Jan\/07",
                    "archived": true,
                    "releaseDate": "2007-01-18",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-01-14T10:40:29.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-01-10T12:57:16.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:39.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I have not seen any feedback on my compromise solution suggested below.  We should come to a resolution on this issue, before the approaching release of 0.7.  http:\/\/framework.zend.com\/issues\/browse\/ZF-735\n\nI am not in favor of automatically using default values for the session names, since various issues have been identified with that approach.  I would like to push for a solution *requiring* the developer to explicitly specify either a value or explicitly choose to use the default from php.ini, as follows:\n\nZend_Session_Core::setOptions(\n    array(\n        'id' => $uniqueZfId,\n        'name' => Zend_Session_Core::PHP_INI_SESSION_NAME\n       \/\/ or\n       \/\/ 'name' => $uniqueZfId\n    ));\n\nIf these two options are not set before the session is started, an exception would be thrown.\n\nIs everyone comfortable with requiring these two options?  Does anyone have an alternative that helps detect\/prevent collisions of sessions between ZF apps on the same domain, allows Zend_Session_Core to use php.ini's session name, and does not automatically default to a potentially unexpected value?\n\nAt the same time, I see great value in requiring the developer to assign a unique id to each ZF application that uses Zend_Session, so that Zend_Session_Core can automatically detect collisions between ZF apps using Zend_Session.  This might be somewhat controversial, and I'm hoping for feedback.  Thoughts?\n\nCheers,\nGavin\n\nGavin Vess wrote:\n> My initial responses in this topic thread focused on the importance and value of making session naming explicit and required.  The \"normal\" situation with ext\/session leads to all sorts of problems for some.  The alternatives discussed in this thread mostly relate to ways to minimize the risks of defaults that can easily lead to non-obvious problems in practice.  I still believe requiring ZF developers to explicitly set the session.name (and save_path, if they are using the default save handler) offers the best alternative.\n>\n> To reconcile this alternative with those who operate in an environment correctly configured to provide \"safe\" session.name's to their ZF apps via built-in mechanisms (php_value or php.ini), I suggest requiring ZF developers to explicitly specify either:\n>\n> Zend_Session_Core::start($session_name, $uniqueZfId);\n>\n> or\n>\n> Zend_Session_Core::start(Zend_Session_Core::PHP_INI_SESSION_NAME, $uniqueZfId);\n>\n> Then we can document the risks of using this constant, as discussed in many posts in this thread.\n> The string $uniqueZfId should be unique per ZF application, so that Zend_Session_Core can\n> detect and report situations where multiple ZF applications are sharing the same session.\n>\n> Cheers,\n> Gavin\n>\n> Ralph Schindler wrote:\n>> You bring up an excellent point.\n>>\n>> One of the things I would like to say is that upon first writing of Zend_Session, an important step for me was to remember to NOT look towards ext\/session for inspiration.  While has suited the needs of the procedural programmer in the past quite nicely, I feel like it on its own falls short when it comes to OOP applications, and modules that wish to consume it.  To get a broader understanding of where sessions fit in the web-application world, I looked towards other projects like rails and django to see how they attacked the problem.\n>>\n>> That being said, and reading through this discussion, one thing has made itself extremely clear to me: Sessions (specifically when speaking about a web based application) are ultimately defined by the TOKEN (name) they persist and the immutability of their data due to outside forces.  In context of Zend_Session (and most session implementations), we are specifically talking about the session name, or cookie name and the data location.\n>>\n>> While session name persists though all implementations of storage, save_path makes less sense, consider when a database save handler is used.  If ext\/session was not used, start would look like this: Zend_Session_Core::start($sessionName, Zend_Session_StorageAdapter_Interface $adapter);\n>>\n>> I like your suggestion of providing a name, the following code makes a ton of sense to me considering Zend_Session roots in ext\/session:\n>>\n>> Zend_Session_Core::start($session_name);\n>>\n>> In english: I am starting a session by the name $session_name.\n>>\n>> Perhaps $session_name is optional, and the prototype looks like this:\n>>\n>> Zend_Session_Core::start($sessionName = 'ZFSESSION');\n>>\n>> This, on some level, by bringing session-naming to the forefront, would encourage the developer to choose at the initial moment of deciding to use session within an application.\n>>\n>> While, save_path is an element that belongs to the storage adapter being used (typically default files but not always), it makes less sense to include that as a startup variable.\n>>\n>> That brings my total to 4 cents ;)\n>> Thoughts?\n>>\n>> -ralph\n>>\n>> Christopher Thompson wrote:\n>>> I think it makes sense have it default to the ext\/session values (just like any PHP applications), but perhaps add an explicit function to make an application \"unique\" -- in the session sense. Something like:\n>>>\n>>> Zend_Session_Core::uniqueApp($session_name, $session_save_path);\n>>>\n>>> That way it follows the installation settings if someone does not know or care, but there is an explicit setting that makes it clear that you want your app to play well with others. It would have all the required options in one place to make it easy (is it just these two?). And there is always setOptions() for very specific needs. \n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-735\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10040",
                    "id": 10040,
                    "description": "Preview Release; MVC maturation, HTTP client, Gdata",
                    "name": "0.6.0",
                    "userReleaseDate": "16\/Dec\/06",
                    "archived": true,
                    "releaseDate": "2006-12-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10096",
                    "id": 10096,
                    "name": "Zend_Session",
                    "description": "A standardized interface to common functionality found in or indigenous to site session implementations. ",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12225",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Over the last couple weeks, nobody has voiced a preference on this, other than \"status quo\".\n\nSo, even though I believe a strong case can be made that best practice calls for the developer specifically choose a correct, unique session name (session.name php.ini setting) for each ZF app, at this time we are not going to force the developer to set this.  Instead, we will default to using the value from php.ini, replete with the problems that all PHP apps have when they do so, including security issues when two or more PHP web applications share the same session name and the same domain name.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-01-14T10:40:29.000+0000",
                    "updated": "2007-01-14T10:40:29.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-735\/transitions"
}