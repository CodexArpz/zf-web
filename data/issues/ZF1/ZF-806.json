{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-806",
    "key": "ZF-806",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Auth - Credentials Revisited and Arbitrary Authentication Conditions"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-806\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-02-14T16:32:38.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                "name": "darby",
                "displayName": "Darby Felton",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-01-26T08:51:01.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:42.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In general, users may require the ability to authenticate under arbitrary conditions. For example, assume that a user is only allowed to authenticate between the hours of 8:00am and 5:00pm. An authentication attempt must be denied if it were to occur at 1:23am. As another example, it is known that a particular user is only allowed to login from a particular workstation having a static IP address. An authentication attempt must be denied if it occurs from a different IP address. Zend_Auth does not currently support such arbitrary conditions to be plugged into its authentication mechanism. By providing a proper API for credentials, users should be able to supply such common business rules to the authenticator in a simple and concise manner.\n\nThus, instead of:\n{code}\n$options = array(\n    'filename' => 'someFile',\n    'realm'    => 'Some Realm',\n    'username' => 'someUser',\n    'password' => 'somePassword'\n    );\n$token = Zend_Auth_Digest_Adapter::staticAuthenticate($options);\n{code}\n\nWe might have something like:\n{code}\n$adapter = new Zend_Auth_Adapter_Digest();\n$adapter->setUsername('someUser')\n        ->setPassword('somePassword')\n        ->setFilename('someFile')\n        ->setRealm('someRealm');\n\/\/ ...\n{code}\n\nIn general, the credentials design should be built in such a way that adding arbitrary credentials is easy for the user. Whether that means a simple extension of an adapter class or registering a credential with the adapter, we should consider alternative approaches to handling credentials. [~ralph]'s design includes a formal credential class, for example."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-806\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                "name": "darby",
                "displayName": "Darby Felton",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10020",
                    "id": 10020,
                    "description": "Preview Release; I18N, Acl, Auth, Session",
                    "name": "0.7.0",
                    "userReleaseDate": "18\/Jan\/07",
                    "archived": true,
                    "releaseDate": "2007-01-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10084",
                    "id": 10084,
                    "name": "Zend_Auth",
                    "description": "A abstraction for various concrete web application authentication implementations.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12401",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "body": "If we're going to take Ralph's suggestions, let's go ahead and create a Credential class.\n\n{code}\n$auth = new Zend_Auth_Adapter_Digest();\n$auth->setIdentity($username);\n$auth->setCredential('password', $password); \n$auth->setCredential('captcha', $captcha); \n{code}\n\nThis makes perfect sense on its own, but even moreso in light of {{hasIdentity()}} and {{getIdentity()}}.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "created": "2007-01-26T11:59:46.000+0000",
                    "updated": "2007-01-26T11:59:46.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12490",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "I've recently updated my proof of concept to show that concrete classes are not needed specifically for Identities and Credentials.. Instead, handling the concept of them proves to be much more powerful and allows for greater flexibility on many fronts.. Credentials, when identified as a name\/value pair at the adapter level, allow the value to be of mixed type.  The adapter can then do what is needed with the given 'credential'... \n\nBy the same token, Identity, when identified can be of mixed type as well, ranging from a string to a User Object.. Well organized Model Driven systems can benefit here since they can retrieve exactly the object they put into the setIdentity() at auth time.\n\nSpecial care would need to be taken in these objects to make sure they sleep and wakeup, for example perhaps to retrieve a database connection.. but that is a topic for a different group i think ;)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2007-02-02T13:48:14.000+0000",
                    "updated": "2007-02-02T13:48:14.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12731",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Resolved with SVN [r3412|http:\/\/framework.zend.com\/fisheye\/changelog\/Zend_Framework\/?cs=3412].\n\nArbitrary authentication credentials may easily be achieved by extending Zend_Auth or an adapter class.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-02-14T16:32:38.000+0000",
                    "updated": "2007-02-14T16:32:38.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-806\/transitions"
}