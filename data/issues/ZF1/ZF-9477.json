{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9477",
    "key": "ZF-9477",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Validate_CreditCard validation error"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9477\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10440",
                    "id": 10440,
                    "description": "Mini Release",
                    "name": "1.10.3",
                    "userReleaseDate": "01\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-01",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-03-19T12:29:33.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                "name": "inxilpro",
                "displayName": "Chris Morrell",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-03-18T21:52:20.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-03-19T12:40:58.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In some circumstances, Zend_Validate_CreditCard can return the wrong error message when validation fails.  Even if validation is unable to determine a credit card type, it still uses the $type variable to determine what error to return.  This is partially a side effect of the fact that Zend_Validate_CreditCard only validates against CCIs that have been set by addType() or setType().  This means that if a credit card is of a known type, but that type is not accepted, validation may behave in an less-than-ideal way.\r\n\r\nFor example, with the following code example:\r\n\r\n{code}\r\n$cardValidator = new Zend_Validate_CreditCard(array(\r\n    'type' => array(\r\n        Zend_Validate_CreditCard::VISA,\r\n        Zend_Validate_CreditCard::AMERICAN_EXPRESS,\r\n    ),\r\n));\r\n$cardValidator->isValid('6011956908810978');\r\n{code}\r\n\r\nEven though the card number '6011956908810978' is technically in a valid Discover card format, the error message produced by this code is \"'6011956908810978' contains an invalid amount of digits\".\r\n\r\nThis is because isValid() loops through the accepted types (in this case Visa and American_Express) and when it doesn't find a match, the $type variable is still set to \"American_Express\", which was the last type to loop.  Then, when the following code runs:\r\n\r\n{code}\r\nif ($found == false) {\r\n    if (!in_array($length, $this->_cardLength[$type])) {\r\n        $this->_error(self::LENGTH, $value);\r\n        return false;\r\n    } else {\r\n        $this->_error(self::PREFIX, $value);\r\n        return false;\r\n    }\r\n}\r\n{code}\r\n\r\nIt checks $this->_cardLength['American_Express'] which does not allow 16 digit card types.\r\n\r\nIf, instead the validation was performed in the following order:\r\n\r\n - Determine card type and error if invalid type\r\n - Determine if type is allowed and error if not allowed\r\n - Determine if length is correct for type and error if incorrect length\r\n\r\nThe validator would produce more useful errors and it would solve the above bug.\r\n\r\nI'll try to attach a patch shortly with a proposed solution."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9477\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12938",
                    "filename": "Validate.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "created": "2010-03-19T09:33:44.000+0000",
                    "size": 2575,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12938\/Validate.diff"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10430",
                    "id": 10430,
                    "description": "Mini Release",
                    "name": "1.10.2",
                    "userReleaseDate": "24\/Feb\/10",
                    "archived": false,
                    "releaseDate": "2010-02-24",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10140",
                    "id": 10140,
                    "name": "Zend_Validate",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39375",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "body": "Here's a proposed solution.  Essentially it does exactly what I described in the bug report:\r\n\r\n - It adds a new message constant \"NOTACCEPTED\"\r\n - It modifies the \"PREFIX\" message from \"'%value%' is not from an allowed institute\" to \"'%value%' is not a valid credit card number\"\r\n - It adds a message for the \"NOTACCEPTED\" constant \"'%value%' is not an accepted credit card type\"\r\n - It modifies the initial loop in isValid() so that it loops through ALL known types, not just those that have been marked as accepted\r\n - It performs 3 checks:\r\n   1. Was the type found?  If not, error with the \"PREFIX\" error.\r\n   2. Is the found type an accepted type?  If not, error with the \"NOTACCEPTED\" error.\r\n   3. Is the length correct for the found type?  If not, error with the \"LENGTH\" error.\r\n\r\nThe rest of the isValid() method is the same.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "created": "2010-03-18T22:37:25.000+0000",
                    "updated": "2010-03-18T22:37:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39386",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I agree that it would be better to return first if the institute is OK and then if the length is OK.\r\n\r\nBut your code is bogus. It adds some errorous behaviour.\r\n\r\nAdditionally NOTACCEPTED duplicates PREFIX in it's meaning.\r\nThere is no difference between:\r\n\"'%value%' is not from an allowed institute\"\r\nand\r\n\"'%value%' is not an accepted credit card type\"\r\n\r\nSo:\r\nAgreed for the issue\r\nNot agreed for the patch",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-03-19T07:30:23.000+0000",
                    "updated": "2010-03-19T07:30:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39389",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "body": "Fair enough, although I _do_ think that there's a difference between:\r\n\r\n - The card has an unknown prefix\r\n - The card is not from an allowed institute\r\n\r\nYou're right, PREFIX should be left as-is, but it seems like like it should be provided when the card is from a _known_ prefix but that prefix is not _allowed_, and a new error should be created for when the card is from an _unknown_ prefix.\r\n\r\nAside from changing the meaning of one of the error constants, how does the code add erroneous behavior?  I'm new at submitting code to ZF, so I want to make sure I do it properly.\r\n\r\nChris",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "created": "2010-03-19T07:50:40.000+0000",
                    "updated": "2010-03-19T07:51:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39390",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "body": "Here's another potential solution.  This time I just added a \"NOPREFIX\" message type with the message \"'%value%' is not from a known institute\".  Then I made similar modifications to isValid().  I'm not sure what you're talking about erroneous behavior\u2014it passed the unit tests.\r\n\r\nChris",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "created": "2010-03-19T09:33:46.000+0000",
                    "updated": "2010-03-19T09:33:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39395",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Changed from bug to improvement",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-03-19T12:10:28.000+0000",
                    "updated": "2010-03-19T12:10:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39397",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "body": "Great, thanks!  I guess I should have submitted a bug report and an improvement request.  Looks like we're all set, though.\r\n\r\nChris",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "created": "2010-03-19T12:25:31.000+0000",
                    "updated": "2010-03-19T12:25:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39398",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Implemented with r21570\r\n\r\n2 things to note on your not added patch:\r\nNoprefix was not added: \"Not from an allowed institute\" has the same meaning as \"Unknown institute\" for the customer. Its possible that some institues are just not known to Zend_Validate_CreditCard but still exist.\r\n\r\nRegarding errorous behaviour: Your fix breaks the check itself. It makes it possible to have multiple types set (which can be done) but returns false when length and prefix are given for different types which are accepted but do not match.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-03-19T12:27:11.000+0000",
                    "updated": "2010-03-19T12:27:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39399",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "body": "I think that there is a slightly different meaning to the customer:\r\n\r\n - \"Not allowed\" means that they entered their card correctly but we do not accept the card type.\r\n - \"Unknown\" means that we don't recognize the type; it may be that it's valid and we do not accept it or it may be that it's invalid (due to a typo).\r\n\r\nI also don't see how you'd get this erroneous behavior.  It sounds like you're saying that my implementation would allow someone to pass in a card with a prefix & length that do not match as long as both are valid?  I don't see how this is possible, as it:\r\n\r\n - First determines the type, and errors if the type is unknown\r\n - Next determine if the type is allowed, and errors if it is not allowed\r\n - Finally checks the length against the length definition *for the determined type*, and errors if it does not match\r\n\r\nHow could this produce the result you described?  Or, it could be that I'm not understanding your description of the behavior.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=inxilpro",
                        "name": "inxilpro",
                        "displayName": "Chris Morrell",
                        "active": true
                    },
                    "created": "2010-03-19T12:40:58.000+0000",
                    "updated": "2010-03-19T12:40:58.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9477\/transitions"
}