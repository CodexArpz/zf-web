{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1929",
    "key": "ZF-1929",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "\"fix_dst\" problem"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1929\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10140",
                    "id": 10140,
                    "description": "Mini Release",
                    "name": "1.0.3",
                    "userReleaseDate": "30\/Nov\/07",
                    "archived": true,
                    "releaseDate": "2007-11-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-09-12T00:11:10.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                "name": "nikizh",
                "displayName": "NiKi Zh",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-09-10T14:33:33.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-11-15T14:03:26.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "This problem seems to occure only when the timezone is \"UTC\" ...\nThe code that I think is problematic is in Zend\/Date.php, about the 1290th row ...\n{code}\n        \/\/ dst-correction if 'fix_dst' = true and dst !== false\n        if ((self::$_Options['fix_dst'] === true) and ($dst !== false)) {\n            $hour = $this->get(Zend_Date::HOUR);\n            if ($hour != $dst) {\n                if (($dst == ($hour + 1)) or ($dst == ($hour - 23))) {\n                    $value += 3600;\n                } else if (($dst == ($hour - 1)) or ($dst == ($hour + 23))) {\n                    $value -= 3600;\n                }\n                $this->setUnixTimestamp($value);\n            }\n        }\n{code}\n\nThe problem occured when I tried this method of creating a date\n{code}\n\/\/ Set a default timezone... this has to be done within the bootstrap file or php.ini\n\/\/ We do this here just for having a complete example\ndate_default_timezone_set('UTC'); \n$Y = 2007; $m = 1; $d = 1; $H = 20; $i = 45; $s = 37;\n\n$arr = array('year' => $Y, 'month' => $m, 'day' => $d, 'hour' => $H, 'minute' => $i, 'second' => $s);\n\n$date = new Zend_Date($arr);\necho $date->toString('r');\n{code}\nThe out put is \"Mon, 01 Jan 2007 20:45:37 +0000\" and it's OK\n\nbut if the $H variable is:\n$H = 1; \/\/ the output is \"Mon, 01 Jan 2007 00:45:37 +0000\"\n$H = 23; \/\/ the output is \"Tue, 02 Jan 2007 00:45:37 +0000\"\n\nThis does not happen if the timezone is different from \"UTC\" ... and as far as I know DST doesn'y apply to UTC\/GMT \n\nThis thing fix the above problem\n{code}\n        \/\/ dst-correction if 'fix_dst' = true and dst !== false\n         $zone = @date_default_timezone_get();\n        if ((self::$_Options['fix_dst'] === true) and ($dst !== false) and ($zone != 'UTC')) {\n{code}\nbut I'm not sure how this interact with the rest of the ZF code and i'm not sure that this is the most elegant way to fix the problem ... if it's a real problem anyway :) ... I hope this is not my mistake or misunderstanding of the way the fix_dst works\n\nEDIT:\nAs I get deep into the code I found something that may be the problem ... The fix above probably in not the right way to fix it ...\n\nSo I followed the path of the arrat throw the functions in Zend_Date:\n1. Line 160 the constructor\n2. Line 201 $this->set()\n3. Line 1154 function set(....)\n4. Line 1156 return $result = $this->_calculate('set', $date, $part, $locale);\n5. Line 1315 function _calculate ....\n\nthis is almost the end of the journey ...\n\nLine 1338: $hour   = $this->get(Zend_Date::HOUR_SHORT); \/\/as I tested ... it's alway 0 ... because the $_unixTimestamp in the Date_Object is 0 ...\n\nLine 1466: return $this->_assign($calc, $this->mktime($hours, $minutes, $seconds, $months, $days, $years, true),\n                                             $this->mktime($hour,  $minute,  $second,  $month,  $day,  $year,  true), $hour);\n$hour is used as last argument in _assign ...\n\nprivate function _assign($calc, $date, $comp = 0, $dst = false)\n\nso $hour is $dst in _assign function ... and $dst is used in \"dst_fix\" ... \n\n$dst is 0 ... and when $hour is 23 or 1 ...  an hour is added or substracted ...."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1929\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10110",
                    "id": 10110,
                    "description": "Mini Release",
                    "name": "1.0.1",
                    "userReleaseDate": "30\/Jul\/07",
                    "archived": true,
                    "releaseDate": "2007-07-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10072",
                    "id": 10072,
                    "name": "Zend_Date",
                    "description": "Zend_Date is the basic library for the handling of all date, time and calendar-related issues.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16582",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "If you do not want to take DST in account you have to use\n\n{code}Zend_Date::setOptions(array('fix_dst' => false));{code}\n\nSee http:\/\/framework.zend.com\/manual\/en\/zend.date.overview.html - DST and Date Math\nfor detailed information.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-10T16:00:24.000+0000",
                    "updated": "2007-09-10T16:00:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16583",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "body": "Well I want to take DST in account :)... but not in this particular situation",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "created": "2007-09-10T16:03:58.000+0000",
                    "updated": "2007-09-10T16:03:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16584",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Then turn off DST for this particular situation.\n\nYou can't say \"I want DST\" and then say \"but I dont want DST\"... either with or without but not both the same time. :-)\n\nActually DST must be switched off \/on per hand. This is not done automatically because DST handling is per definition a static attribute. \n\nThis may change in the future...\nBut for now this is not a bug but a feature request.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-10T16:20:59.000+0000",
                    "updated": "2007-09-10T16:20:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16585",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "body": "Well, anyway there is something that is not working ... :)\n{code}\n        date_default_timezone_set('America\/New_York'); \n        $Y = 2007; $m = 1; $d = 1; $H = 20; $i = 45; $s = 37;\n        $arr = array('year' => $Y, 'month' => $m, 'day' => $d, 'hour' => $H, 'minute' => $i, 'second' => $s);\n        $date = new Zend_Date($arr);\n        echo $date->toString('r');\n{code}\n        \/\/OUTPUT: Mon, 01 Jan 2007 19:45:37 -0500\n        \n        Why?\n        \n        On line 1334 to 1340 the date is initiated\n        We set the time zone to GMT-5\n        1970-01-01 00:00:00 - 5 hours = 1969-12-31 19:00:00\n        \n        So the initiated $hour is = 19\n        \n        The lines 1446-1447 are:\n{code}\n        return $this->_assign($calc, $this->mktime($hours, $minutes, $seconds, $months, $days, $years, true),\n                                     $this->mktime($hour,  $minute,  $second,  $month,  $day,  $year,  true), $hour);\n{code}\n\n{code}\n        \/\/ private function _assign($calc, $date, $comp = 0, $dst = false)\n{code}\n        So $dst = $hour ... So $dst = 19\n        \n{code}\n        \/\/ dst-correction if 'fix_dst' = true and dst !== false\n        if ((self::$_Options['fix_dst'] === true) and ($dst !== false)) {\n            $hour = $this->get(Zend_Date::HOUR);\n            if ($hour != $dst) {\n                if (($dst == ($hour + 1)) or ($dst == ($hour - 23))) { \/\/ @_if_1\n                    $value += 3600;\n                } else if (($dst == ($hour - 1)) or ($dst == ($hour + 23))) { \/\/ @_if_2\n                    $value -= 3600;\n                }\n                $this->setUnixTimestamp($value);\n            }\n        }\n{code}\n\n{code}\n        } else if (($dst == ($hour - 1)) or ($dst == ($hour + 23))) {\n{code}\n        the magic is on this line ... for this example only :) ... \n        \n        OUTPUT: Mon, 01 Jan 2007 19:45:37 -0500 \/\/ but we wanted ... $H = 20; $i = 45; $s = 37; ... \n        \n        if the time zone is GMT+0 (UTC) and $H = 23 the magic will happen in @_if_1\n            OUTPUT: Tue, 02 Jan 2007 00:45:37 +0000 \/\/ but we wanted ... $H = 20; $i = 45; $s = 37; ...\n            \n        if the time zone is GMT+1 (CET) and $H = 2 the magic will happen in @_if_2\n            OUTPUT: Mon, 01 Jan 2007 01:45:37 +0100 \/\/ but we wanted ... $H = 2; $i = 45; $s = 37; ... \n            \n        if the time zone is GMT+2 (Europe\/Sofia) and $H = 3 the magic will happen in @_if_2\n            OUTPUT: Mon, 01 Jan 2007 02:45:37 +0200 \/\/ but we wanted ... $H = 3; $i = 45; $s = 37; ... \n\n            and so on ...\n        \n        But in the other cases ... where there is no magic :) ... everything is OK ...\n        \n        if the time zone is GMT+2 (Europe\/Sofia) and $H = 4 the magic will happen in @_if_2\n            OUTPUT: Mon, 01 Jan 2007 04:45:37 +0200 \/\/ but we wanted ... $H = 4; $i = 45; $s = 37; ... \n\n        And what is the conclusion ...\n        \n        Every call to _assign with hour defined by the user (if the particlur function allows it) and with last argument ($dst) $hour (the initiated value between line 1334 to 1340) are buggy\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "created": "2007-09-10T18:18:58.000+0000",
                    "updated": "2007-09-10T18:18:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16586",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "body": "Ups ...\nI was copy-pasting the final rows ... and made mistake ...\nAnd could not find an option to edit the last comment ... so i'm writing a new one\n\nSo ...\nEDIT:\nBut in the other cases ... where there is no magic  ... everything is OK ...\n\nif the time zone is GMT+2 (Europe\/Sofia) and $H = 4 the magic will !!!NOT!!! happen\nOUTPUT: Mon, 01 Jan 2007 04:45:37 +0200 \/\/ but we wanted ... $H = 4; $i = 45; $s = 37; !!! AND WE GET IT :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "created": "2007-09-10T18:24:45.000+0000",
                    "updated": "2007-09-10T18:24:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16590",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "For me your code works...\n\nI dont know which revision you are using but I recommend that you update to the latest SVN release.\nIf your example does not work with the latest SVN release please provide the following data:\n\nSVN release version\nPHP version\nBCMath avaiable ?\nstandard locale\nstandard timezone\n\nWe will then try to reproduce your problem",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-11T11:43:23.000+0000",
                    "updated": "2007-09-11T11:43:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16592",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I integrated the requested feature.\n\nNow, if the timezone is set to UTC or GMT, the DST will no longer be used and switched off.\nPlease check SVN 6292.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-11T12:48:28.000+0000",
                    "updated": "2007-09-11T12:48:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16599",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "body": "Now with the latest changes ... \nSVN 6294\nPHP 5.2.3\nBCMath enabled\n\nThis is my index.php for testing ...\n{code}\n<?php \nerror_reporting(E_ALL|E_STRICT); \ndate_default_timezone_set('CET'); \n\ninclude \"Zend\/Loader.php\"; \n \nZend_Loader::loadClass('Zend_Date');\n\n$Y = 2007; $m = 1; $d = 1; $H = 1; $i = 45; $s = 37;\n$arr = array('year' => $Y, 'month' => $m, 'day' => $d, 'hour' => $H, 'minute' => $i, 'second' => $s);\n$date = new Zend_Date($arr);\n        \necho $date->toString('r');\n{code}\nOUTPUT: Mon, 01 Jan 2007 00:45:37 +0100\n\nSo with the latest changes ... from lines 1364 to 1370 the date is initiated ...\nEven the default timezone is set to CET the initial date is 1970-01-01 00:00:00\n\nSo on line 1496 the used $hour is 0 when passed to _assign .... and by default fix_dst is True ...\n\n{code}\n        if ((self::$_Options['fix_dst'] === true) and ($dst !== false) and ($this->_dst === true)) {\n            $hour = $this->get(Zend_Date::HOUR);\n            if ($hour != $dst) {\n                if (($dst == ($hour + 1)) or ($dst == ($hour - 23))) { \n                    $value += 3600;\n                } else if (($dst == ($hour - 1)) or ($dst == ($hour + 23))) { \/\/@_if_2\n                    $value -= 3600;\n                }\n                $this->setUnixTimestamp($value);\n            }\n        }\n{code}\nSo when the passed $hour ... the $dst = 0 .... and we want to set the date hour to 1 ... In @_if_2     $dst == ($hour -1)  \/\/ 0 == (1 - 1) ... then $value -=3600\n\nThat's why the produced output is -1 hour ...\n\nWell ... :) This is what happens on my test ... on my system ....\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "created": "2007-09-11T13:53:50.000+0000",
                    "updated": "2007-09-11T13:53:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16600",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "body": "and ... the bug occures ... on my system ... on my test  :)... on every set timezone ... without UTC of course\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "created": "2007-09-11T14:01:10.000+0000",
                    "updated": "2007-09-11T14:01:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16602",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "The example in your second reply differs from your first one you gave us...\n\nRelated to your problem:\nIt seems for me that gmmktime differs if it is called from commandline or from browser.\n\nI integrated both of your examples within our testbed and they passed.\nBut within the browser it differed for one hour.\nI love such behaviour *grrr*\n\nAnyway... with SVN 6300 also the array initialion behaviour is fixed.\nGive it a try and us a response.  :-)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-11T14:49:07.000+0000",
                    "updated": "2007-09-11T14:49:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16603",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "body": "SVN 6300 is working fine :) ...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nikizh",
                        "name": "nikizh",
                        "displayName": "NiKi Zh",
                        "active": true
                    },
                    "created": "2007-09-11T15:13:37.000+0000",
                    "updated": "2007-09-11T15:13:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16630",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Fixed as with SVN 6300",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-12T00:11:08.000+0000",
                    "updated": "2007-09-12T00:11:08.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1929\/transitions"
}