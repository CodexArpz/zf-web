{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3401",
    "key": "ZF-3401",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Cache_Backend_File cannot store arrays efficiently, should create a new backend"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3401\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-06-06T12:15:38.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=heygrady2",
                "name": "heygrady2",
                "displayName": "Grady Kuhnline",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-06-05T16:45:03.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-06-06T12:15:38.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "http:\/\/ezcomponents.org\/docs\/api\/latest\/Cache\/ezcCacheStorageFileArray.html\nhttp:\/\/svn.ez.no\/svn\/ezcomponents\/trunk\/Cache\/src\/storage\/file\/array.php\n\nezComponents offers a caching mechanism similar to the one offered by Zend Framework. While many parys of the design philosophy are very different, there are some useful features that would be very useful in Zend Framework.\n\nA new class called Zend_Cache_Backend_FileExport could be easily created. The only major difference is that instead of storing the value in the file as a string, it would take advantage of the [var_export()|http:\/\/us.php.net\/manual\/en\/function.var-export.php] function in PHP. Essentially, this backend could store anything that can be correctly exported with var_export. In addition, much less time is spend retrieving the data because it is already ready to be executed as PHP code so there is no unserialization process required."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3401\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                "name": "fab",
                "displayName": "Fabien MARTY",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10181",
                    "id": 10181,
                    "description": "Mini Release",
                    "name": " 1.5.2",
                    "userReleaseDate": "15\/May\/08",
                    "archived": true,
                    "releaseDate": "2008-05-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22154",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "body": "Hi, have you done any benchmarks about speed of include() and unserialize()? 'Cause I experienced unserialization to be generally faster than inclusion, so there woudln't be any advantage of FileExport backend.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "created": "2008-06-06T00:04:58.000+0000",
                    "updated": "2008-06-06T00:04:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22162",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=heygrady2",
                        "name": "heygrady2",
                        "displayName": "Grady Kuhnline",
                        "active": true
                    },
                    "body": "I ran some tests. Inexplicably you are correct. It looks like unserialize is about 3 times faster. I stand corrected. Are there any other benefits from using var_export over serialize? or vice versa?\n\n{code:php}\n\/**\n * Generate Deep Array\n * @param int $nodes\n * @param int $levels\n * @return array\n *\/\nfunction generatDeepArray($nodes = 9, $levels = 3) {\n\t$array = array();\n\tfor ($i = 0; $i < $nodes; $i++) {\n\t\tif ($levels == 1)\n\t\t\t$array['node-'.$i] = 'terminal';\n\t\telse\n\t\t\t$array['node-'.$i] = generatDeepArray($nodes, $levels - 1);\n\t}\n\treturn $array;\n}\n\n\/\/ get a deep array\n$array = generatDeepArray();\n\n\/\/ save it as a serialized cache\nfile_put_contents('cache-serialize.txt', serialize($array));\n\n\/\/ save it as an export cache\nfile_put_contents('cache-export.php', '<?'.\"php \\nreturn \".var_export($array, true).\";\\n?>\");\n\n\/\/ save it as an export-eval cache\nfile_put_contents('cache-export-eval.php', 'return '.var_export($array, true).\";\\n?>\");\n\n$count = '100';\n\n\/\/ Unserialize\n$time = microtime(true) * 1000;\nfor ($i = 0; $i < $count; $i++) {\n\t$var = unserialize(file_get_contents('cache-serialize.txt'));\n\tif ($i == 0)\n\t\tvar_dump($var);\n}\n$unserialize = (microtime(true) * 1000) - $time.'<br \/>';\n\n\/\/ Include\n$time = microtime(true) * 1000;\nfor ($i = 0; $i < $count; $i++) {\n\t$var = include 'cache-export.php';\n\tif ($i == 0)\n\t\tvar_dump($var);\n}\n$include = (microtime(true) * 1000) - $time.'<br \/>';\n\n\/\/ eval\n$time = microtime(true) * 1000;\nfor ($i = 0; $i < $count; $i++) {\n\t$var = eval(file_get_contents('cache-export-eval.php'));\n\tif ($i == 0)\n\t\tvar_dump($var);\n}\n$eval = (microtime(true) * 1000) - $time.'<br \/>';\necho 'unserialize: '.$unserialize.'ms';\necho 'include: '.$include.'ms';\necho 'eval: '.$eval.'ms';\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=heygrady2",
                        "name": "heygrady2",
                        "displayName": "Grady Kuhnline",
                        "active": true
                    },
                    "created": "2008-06-06T11:44:52.000+0000",
                    "updated": "2008-06-06T11:44:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22165",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                        "name": "fab",
                        "displayName": "Fabien MARTY",
                        "active": true
                    },
                    "body": "same (bad) test for me\n\nit seems to be a false good idea\n\nthanks anyway",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=fab",
                        "name": "fab",
                        "displayName": "Fabien MARTY",
                        "active": true
                    },
                    "created": "2008-06-06T12:15:20.000+0000",
                    "updated": "2008-06-06T12:15:20.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3401\/transitions"
}