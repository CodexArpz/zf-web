{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3454",
    "key": "ZF-3454",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "problem with zend_db_table_row save() when having multiple column primary key where one column gets populated by trigger"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 0,
                "timeestimate": 0
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3454\/votes",
                "votes": 3,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-07-31T13:16:45.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ergo14",
                "name": "ergo14",
                "displayName": "Marcin Lulek",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-06-13T04:15:42.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-07-31T20:33:32.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I stumbled upon a strange problem today,\n\ni was using zend_db_table_row object to insert new row to database, the problem is , that primary key for that table consists of 2 columns, and one of the columns is populated by a trigger so when i insert,  protected function _doInsert() in the end runs _refresh();\n\nThe problem is refresh is using a \"where\" clause builder function that expects me to pass all the fields that create primary key,  since one of those fields was populated by trigger  i end up with something like that launched against DB:\n\nSELECT \"document_pages\".* FROM \"document_pages\" WHERE (\"object\" = 71) AND (\"sort\" = '') LIMIT 1\n\nsince, sort was populated with trigger , i cant supply it to the save(), and we end up with that little monster talking to postgres, and an exception thrown in result.\n\nWe should not assume that user will supply everything  to the save().\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/1",
                "name": "Blocker"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10039",
                "value": "  Should Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3454\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10181",
                    "id": 10181,
                    "description": "Mini Release",
                    "name": " 1.5.2",
                    "userReleaseDate": "15\/May\/08",
                    "archived": true,
                    "releaseDate": "2008-05-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22321",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ergo14",
                        "name": "ergo14",
                        "displayName": "Marcin Lulek",
                        "active": true
                    },
                    "body": "i should also note that i fixed my problem by using plain ol insert() method from zend_db_table to solve my problem, but i dont really see why i could not be able to use zend_db_table_row object to insert my data into db, as as we have the code now - it prevents me from it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ergo14",
                        "name": "ergo14",
                        "displayName": "Marcin Lulek",
                        "active": true
                    },
                    "created": "2008-06-13T04:28:34.000+0000",
                    "updated": "2008-06-13T04:28:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31221",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Its seems to me that this is not a bug per-se with the Row Gateway object.  The row gateway object makes the assumption that the primary keys of an object are either part of a sequence or provided.  This means that any case where the primary key would be generated by the database unbeknown to the row object (trigger for example), that specific business logic needs to be handled by the user. \n\nI am not sure what you are proposing ultimately as the row object simply cannot know that the developer has offloaded business logic into the database.  Since it can never create a row that is fully connected to the database *by design*, you should probably avoid using the Row Gateway to create rows.\n\nAlternatively, if you can find a way to be able to determine the value of your last tirggered insert, you should prob. move that logic into the _refresh() method that you might overwrite in your extending row class objects.\n\nI am inclined to mark as not an issue, unless you can provide a suggestion that might describe a generic way of handling this type of issue.\n\nThanks,\nRalph",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-05-21T07:25:18.000+0000",
                    "updated": "2009-05-21T07:25:18.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3454\/transitions"
}