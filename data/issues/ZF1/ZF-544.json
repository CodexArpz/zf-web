{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-544",
    "key": "ZF-544",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Allow the method on the class set in Zend_Rest_Server::setClass() accept variable number of params"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-544\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-11-13T15:18:10.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                "name": "padraic",
                "displayName": "P\u00e1draic Brady",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-11-11T18:07:46.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:28.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Copy of a related email:\n\nHi all,\n\nI've been trying to setup a simple web service using the REST server. The basic premise is that I have a single table holding a collection of notes. Each note row has id, user, tag and text fields. The idea of the webservice was to allow an API for the client to retrieve notes using a combination of field values (on the server class Zend_Rest_Server handles from the parameters would be used to build a WHERE string).\n\nBecause its so simple, and can be easily done with a single class method, I created the following allowed routes (using parameters rather than a query string).\n\n   1. http:\/\/www.example.com\/service\/note\/user\/XXX (Get notes by user id)\n   2. http:\/\/www.example.com\/service\/note\/tag\/XXX (Get notes by tag)\n   3. http:\/\/www.example.com\/service\/note\/user\/XXX\/tag\/XXX (get notes by tag, restricted to user id)\n   4. http:\/\/www.example.com\/service\/note\/id\/XXX (Get a single note by id)\n\nNo consideration given to limiting access. Params set when calling Zend_Rest_Server::handle().\n\nI then implemented a simple handler method on the class passed to Zend_Rest_Server::setClass() which would accept a variable number of parameters. This is prevented however by;\n\n[line 113, Zend\/Rest\/Server.php]\nif (sizeof($calling_args) < sizeof($func_args)) {\n\tthrow new Zend_Rest_Server_Exception('Invalid Method Call to ' .$method. '. Requires ' .sizeof($func_args). ', ' .sizeof($calling_args). ' given.', 400);\n}\n\nAny plans to allow variable parameter counts in the future? Without that facility, it means adding a chunk of logic in the ServiceController::noteAction() method to determine the correct parameter count and order, and then adding multiple public methods on the handler class. Additionally, parameters on the handler class method *must* be very specific with the parameter variable name being the key string on any request parameter prefixed with $, i.e. if the array passed to Zend_Rest_Server::handle() contains the param array('tag'=>'ajax'), the handler method must call it's parameter $tag (anything else fails).\n\nAll this seems fairly confusing unless you dig into the code to figure out the quirks. Otherwise I really like this component, I look forward to using it regardless :).\n\nRegards,\nP\u00e1draic"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-544\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=davey",
                "name": "davey",
                "displayName": "Davey Shafik",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10095",
                    "id": 10095,
                    "name": "Zend_Rest_Server",
                    "description": "Server for responding to Rest requests.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11325",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assigning to Davey.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2006-11-13T15:04:33.000+0000",
                    "updated": "2006-11-13T15:04:33.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11394",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=davey",
                        "name": "davey",
                        "displayName": "Davey Shafik",
                        "active": true
                    },
                    "body": "This isn't really feasible. However, I may look into it further just for fun, but for now, I don't think the restriction is too hard.\n\nYou can of course, write a simple wrapper class, where each method accepts specific args, or make the function accept the max number of args coming in, and pass in a $request array to the handle() method which defines the empty ones as null or false or some such :)\n\n- Davey",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=davey",
                        "name": "davey",
                        "displayName": "Davey Shafik",
                        "active": true
                    },
                    "created": "2006-11-13T15:18:10.000+0000",
                    "updated": "2006-11-13T15:18:10.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11580",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Another possiblity is to override the rest server to allow variable numbers of arguments.\n\nAlso, if there are a finite number of possible arguments, consider declaring and documenting your method differently:\n\n{code}\n\/**\n * Note handler\n *\n * @param string|int $user\n * @param string|int $tag\n * @param int $id\n * @return array|string\npublic function note($user = null, $tag = null, $id = null)\n{\n}\n{code}\n\nNotice the use of the | operator in the docblock. By setting default values for each argument, you make them optional, effectively allowing between 0 and 3 arguments; by setting multiple types for each argument in the docblock, you allow different types of arguments. With some creative docblock\/optional argument pairing, you can probably achieve what you need to accomplish.\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-11-17T12:40:06.000+0000",
                    "updated": "2006-11-17T12:40:06.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11581",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "The way I did it was simply to have a few public methods for each set of args proxy to the same private method which handled the querying. It wasn't difficult to set up, so once I got over the paramater restrictions it was plain sailing from there.\n\nI'll keep the other suggestions on tap for the future. Thanks!",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2006-11-17T13:19:39.000+0000",
                    "updated": "2006-11-17T13:19:39.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-544\/transitions"
}