{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5699",
    "key": "ZF-5699",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Table_Abstract::findDependentRowset throws an error when called on unsaved Zend_Db_Table_Row (with PDO_MYSQL)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5699\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:44.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                "name": "sylvain",
                "displayName": "Sylvain Filteau",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-02-05T12:37:32.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:52:44.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "db",
                "findDependentRowset",
                "pdo_mysql"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When I create a new row from a table object and I use findDependentRowset to get stuff linked with the row, I obtain this output :\n\n{noformat}\nPHP Fatal error:  Uncaught exception 'Zend_Db_Statement_Exception' with message 'SQLSTATE[HY093]: Invalid parameter number: no parameters were bound' in \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Statement\/Pdo.php:238\nStack trace:\n#0 \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Statement.php(283): Zend_Db_Statement_Pdo->_execute(Array)\n#1 \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Adapter\/Abstract.php(433): Zend_Db_Statement->execute(Array)\n#2 \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Adapter\/Pdo\/Abstract.php(230): Zend_Db_Adapter_Abstract->query(Object(Zend_Db_Table_Select), Array)\n#3 \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Table\/Abstract.php(1330): Zend_Db_Adapter_Pdo_Abstract->query(Object(Zend_Db_Table_Select))\n#4 \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Table\/Abstract.php(1158): Zend_Db_Table_Abstract->_fetch(Object(Zend_Db_Table_Select))\n#5 \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Table\/Row\/Abstrac in \/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library\/Zend\/Db\/Statement\/Pdo.php on line 238\n{noformat}\n\nInstead, I should have an empty Zend_Db_Table_Rowset.\n\nYou should note that with the pdo_sqlite adapter and 'dbname' => ':memory:', it works as expected.\n\nHere is the code to reproduce the problem :\n\n{code}\n<?php\n\nset_include_path('\/home\/sylvain\/Documents\/ZendFramework-1.7.4\/library');\n\nrequire_once('Zend\/Loader.php');\n\nZend_Loader::registerAutoload();\n\nclass Application {\n\n        public static function setUp() {\n                $db = Zend_Db::factory('pdo_mysql', array(\n                        'dbname' => 'test',\n                        'host' => 'localhost',\n                        'username' => 'root',\n                        'password' => ''\n                ));\n                Zend_Db_Table_Abstract::setDefaultAdapter($db);\n\n                $db->query('DROP TABLE IF EXISTS projects');\n                $db->query('DROP TABLE IF EXISTS components');\n\n                $db->query('CREATE TABLE projects (id INTEGER AUTO_INCREMENT, name VARCHAR(15), PRIMARY KEY (id));');\n                $db->query('CREATE TABLE components (id INTEGER AUTO_INCREMENT, name VARCHAR(15), fk_parent INTEGER, PRIMARY KEY (id));');\n        }\n\n}\n\nclass Projects extends Zend_Db_Table_Abstract {\n\n        protected $_name = 'projects';\n\n        protected $_dependentTables = array('Components');\n\n}\n\nclass Components extends Zend_Db_Table_Abstract {\n\n        protected $_name = 'components';\n\n        protected $_referenceMap = array(\n                'Parent' => array(\n                        'columns' => 'fk_parent',\n                        'refTableClass' => 'Projects',\n                        'refColumns' => 'id'\n                )\n        );\n\n}\n\nApplication::setUp();\n\n$tbl_projects = new Projects();\n$new_project = $tbl_projects->createRow();\n\n$components = $new_project->findDependentRowset('Components');\necho count($components) . \"\\n\";\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5699\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-3379",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3379",
                    "type": {
                        "name": "Duplicate",
                        "direction": "OUTBOUND",
                        "description": "duplicates"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10271",
                    "id": 10271,
                    "description": "Mini Release",
                    "name": "1.7.2",
                    "userReleaseDate": "23\/Dec\/08",
                    "archived": false,
                    "releaseDate": "2008-12-23",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10280",
                    "id": 10280,
                    "description": "Mini Release",
                    "name": "1.7.4",
                    "userReleaseDate": "02\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-02",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28644",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "Add format to the description",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-05T12:43:49.000+0000",
                    "updated": "2009-02-05T12:43:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28705",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "I think the problem happen in the function Zend_Db_Select::_where. When you have a null value, the function doesn't ask the adapter to quote the value :\n\n{code:title=Zend_Db_Select::_where line 894}\nif ($value !== null) {\n    $condition = $this->_adapter->quoteInto($condition, $value, $type);\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-09T07:51:31.000+0000",
                    "updated": "2009-02-09T07:51:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28708",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "I think it's a duplicate.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-09T10:47:48.000+0000",
                    "updated": "2009-02-09T10:47:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28709",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "I think it's a duplicate.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-09T10:47:53.000+0000",
                    "updated": "2009-02-09T10:47:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29098",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "I am not quite following the use case above.\n\nYou are attempting to call findDependentRowset() on a row that is not yet saved into the database.  This poses a major problem.  Your $new_project variable doesn't represent an actual row in the database, it represents a *potential* row in the database.  Also, since you are using surrogate keys (primary key id autoincrement), this means that this row wont have a primary key until it is actually saved.  \n\nIn short, you cannot query the database for relationships that do not exist yet... which is what you are attempting to do here.  To make this work (and it will always return 0 when you take the count), you could do this:\n\n{code}\n$tbl_projects = new Projects();\n$new_project = $tbl_projects->createRow();\n$new_project->save(); \/\/ this will ensure the row is saved to the database, and a primary key is assigned to it to do relationship queryies later\n\n$components = $new_project->findDependentRowset('Components');\necho count($components) . \"\\n\";\n{code}\n\nThis too i am inclined to close as \"Not an Issue\"\n\n-ralph",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-02-25T14:55:24.000+0000",
                    "updated": "2009-02-25T14:55:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29100",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "In my opinion, it should work as is, or at least have the same behavior across the database adapters.\n\nActually, if I run my code with an sqlite adapter, it just works and return 0. Also, the same code work on ZF 1.0.x. I know this version is an old story but...\n\nMaybe the method should just return an empty Rowset when the row was never saved ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-25T17:10:36.000+0000",
                    "updated": "2009-02-25T17:10:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29113",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "You make a good point, and for that i'll have to turn to the community to see what people think.  It should either return an exception, or an empty result set inside findDependentRowset and\/or the magic find<By><Rule> query\n\nAnother point: I am guessing that (the effective dependent rowset query)\n\n{code}\nselect * from mytable where something = ?\n{code}\n\nis working on SQLite (as you mentioned, but i have yet to test), but that query still is nonsensical, and technically *most* RDMBS will throw an error on such a query.  In this case, the ? should probably be quoted for the query to pass, but like i said, i'd have to check SQLite on this one.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-02-26T07:47:50.000+0000",
                    "updated": "2009-02-26T07:47:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29114",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "body": "It should throw an exception across all adapters.  Returning an empty rowset is confusing in this scenario.  It's not hard to do a try\/catch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "created": "2009-02-26T08:32:18.000+0000",
                    "updated": "2009-02-26T08:32:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29120",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "I think that when you use methods like findDependentRowset, findParentRow and find<By><Rule>, you don't really want to know the what is the query under the hood.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-26T10:21:25.000+0000",
                    "updated": "2009-02-26T10:21:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29122",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "{quote}\nI think that when you use methods like findDependentRowset, findParentRow and find<By><Rule>, you don't really want to know the what is the query under the hood.\n{quote}\n\nI agree with that point Sylvain, but trying to find dependents of a row that doesn't exist in the database is misuse and\/or unintended use case IMO.  In which case should throw an exception since it actually is Exceptional behavior.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-02-26T10:29:22.000+0000",
                    "updated": "2009-02-26T10:29:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29123",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "I agree with Matthew, it should throw an exception.\n\nThe rationale is simple:\nUntil a row object is saved, there _IS NO_ row and therefore there _CAN'T_ be any dependent rows (at least if referential integrity is maintained).\n\nIndeed, there _AREN'T_ any rows, so one could argue that an empty rowset is the correct response, but that would be the same as if reading from a non-existent file returned 0 bytes instead of an error. Sure, there aren't any bytes, but there can't be any either.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2009-02-26T10:34:49.000+0000",
                    "updated": "2009-02-26T10:34:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29124",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "Throwing an exception is not something that will help me with my existing code base. But I must agree that this is the correct solution.\n\nI'm curious to see what propel or doctrine do with this use case.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-26T10:35:42.000+0000",
                    "updated": "2009-02-26T10:35:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29128",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "body": "For the method findParentRow, it should return null because it's completly valid to have a row with a foreignkey NULL.\n\nImagine that in my use case of the projects and components, a components can have no project linked with fk_parent (the field is nullable) :\n\n{code}\n$tbl_components = new Components();\n$comp = $tbl_components->createRow();\n$comp->name = \"Something\";\n$comp->save();\n\n$project = $comp->findParentRow();\n{code}\n\nActually, this throws an exception but it should return null, like older version of ZF.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sylvain",
                        "name": "sylvain",
                        "displayName": "Sylvain Filteau",
                        "active": true
                    },
                    "created": "2009-02-26T11:43:16.000+0000",
                    "updated": "2009-02-26T11:43:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29130",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "Makes sense to me.\n\nA parent may exist before a row does, but children can't. So findParentRow() should return null and findDependentRowset() should throw.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2009-02-26T12:02:44.000+0000",
                    "updated": "2009-02-26T12:02:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29193",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "I agree with the community here.  I will add the exceptional behavior (throwing) to both find dependentRowset as well as the magic findByRule method.\n\n-ralph",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-02-27T09:53:18.000+0000",
                    "updated": "2009-02-27T09:53:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35401",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alsimon",
                        "name": "alsimon",
                        "displayName": "Simon Gilliot",
                        "active": true
                    },
                    "body": "Any news on this issue?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alsimon",
                        "name": "alsimon",
                        "displayName": "Simon Gilliot",
                        "active": true
                    },
                    "created": "2009-10-19T08:27:04.000+0000",
                    "updated": "2009-10-19T08:27:04.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52430",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:52:44.000+0000",
                    "updated": "2012-11-20T20:52:44.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5699\/transitions"
}