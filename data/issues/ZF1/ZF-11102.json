{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11102",
    "key": "ZF-11102",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Form_Element  issue in _loadFilter  method when you use Zend_Filter with  an \"options\" array  "
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11102\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wrobel",
                "name": "wrobel",
                "displayName": "Przemys?aw Wr\u00f3bel",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-02-22T02:08:59.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-03T15:29:24.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "considering this Zend_Form class:\r\n{code}\r\nclass MyForm extends Zend_Form\r\n\r\npublic function __construct () { \r\n\r\n...\r\n\r\n\/* country is a Zend_Form_Element_Text object *\/\r\n$this->country\r\n     ->addFilter('AutocompleteHelper', array('minlength' => 2, 'url' => '\/json\/coutries'));\r\n\r\n}\r\n\r\n...\r\n\r\n}\r\n{code}\r\nAs you can see I add a filter to  text field with  options associative array. \r\nZend_Form_Element class doesn't instance well the Zend_Filter object and during the initializing phase it loose \"options\" parameters.\r\n\r\nTo solve this  I've change the way how  Zend_Filter is initialized on line 1920 (_loadFilter method) of Zend_Form_Element class \r\n{code}\r\n            if ($r->hasMethod('__construct')) {\r\n            \t$instance = new $name($filter['options']);\r\n            \t\/\/$instance = $r->newInstanceArgs($filter['options']);\r\n            } else {\r\n            \t$instance = new $name();\r\n            \t\/\/$instance = $r->newInstance();\r\n            }\r\n{code}\r\n\r\nRegards\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11102\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10201",
                    "id": 10201,
                    "description": "Mini Release",
                    "name": "1.6.1",
                    "userReleaseDate": "15\/Sep\/08",
                    "archived": false,
                    "releaseDate": "2008-09-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44534",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wrobel",
                        "name": "wrobel",
                        "displayName": "Przemys?aw Wr\u00f3bel",
                        "active": true
                    },
                    "body": "I decided to reopen this issue since it seems to me to be an inconsistent behaviour when compared to the addValidator() method which does not require an extra wrapping of options array.\r\nI have spent some time to make things work and I believe more users will have the same problem - since there is even no such an example in ZF Guide.\r\n\r\nthis->grade->addValidator('Float', false, array('locale' => 'en')); \/\/english locale since value is already normalized\r\nthis->grade->addFilter('LocalizedToNormalized', array(array('precision' => 2)));\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wrobel",
                        "name": "wrobel",
                        "displayName": "Przemys?aw Wr\u00f3bel",
                        "active": true
                    },
                    "created": "2011-02-22T02:14:45.000+0000",
                    "updated": "2011-02-22T02:14:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44535",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wrobel",
                        "name": "wrobel",
                        "displayName": "Przemys?aw Wr\u00f3bel",
                        "active": true
                    },
                    "body": "Sorry for cloning the issue - is there a better way to reopening it?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wrobel",
                        "name": "wrobel",
                        "displayName": "Przemys?aw Wr\u00f3bel",
                        "active": true
                    },
                    "created": "2011-02-22T02:16:39.000+0000",
                    "updated": "2011-02-22T02:16:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49930",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Is this still an issue against current SVN trunk?  This test passes against trunk for me:\r\n{code}\r\nIndex: Zend\/Form\/ElementTest.php\r\n===================================================================\r\n--- Zend\/Form\/ElementTest.php\t(revision 24672)\r\n+++ Zend\/Form\/ElementTest.php\t(working copy)\r\n@@ -2189,6 +2189,22 @@\r\n         $validator = $username->getValidator('regex');\r\n         $this->assertTrue($validator->zfBreakChainOnFailure);\r\n     }\r\n+\r\n+    \/**\r\n+     * @group ZF-11102\r\n+     *\/\r\n+    public function testAddFilterPassesOptionsOnToFilterObject()\r\n+    {\r\n+        $field = new Zend_Form_Element('foo');\r\n+        $field->addFilter('Alpha', array(\r\n+            'allowwhitespace' => true,\r\n+        ));\r\n+        $filters = $field->getFilters();\r\n+        $this->assertArrayHasKey('Zend_Filter_Alpha', $filters);\r\n+        $filter = $filters['Zend_Filter_Alpha'];\r\n+        $this->assertType('Zend_Filter_Alpha', $filter);\r\n+        $this->assertTrue($filter->getAllowWhitespace());\r\n+    }\r\n }\r\n \r\n class Zend_Form_ElementTest_Decorator extends Zend_Form_Decorator_Abstract\r\n{code}\r\n\r\nCould you let me know if i've missed the point with the above test, or if the issue really is fixed in SVN trunk?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-03-06T01:33:24.000+0000",
                    "updated": "2012-03-06T01:33:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49931",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Apparently I did.  This test fails against trunk:\r\n{code}\r\nIndex: tests\/Zend\/Form\/ElementTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/ElementTest.php\t(revision 24672)\r\n+++ tests\/Zend\/Form\/ElementTest.php\t(working copy)\r\n@@ -2189,6 +2189,22 @@\r\n         $validator = $username->getValidator('regex');\r\n         $this->assertTrue($validator->zfBreakChainOnFailure);\r\n     }\r\n+\r\n+    \/**\r\n+     * @group ZF-11102\r\n+     *\/\r\n+    public function testAddFilterPassesOptionsOnToFilterObjectLocalizedToNormalized()\r\n+    {\r\n+        $field = new Zend_Form_Element('foo');\r\n+        $field->addFilter('LocalizedToNormalized', array(\r\n+            'precision' => 2,\r\n+        ));\r\n+        $filters = $field->getFilters();\r\n+        $this->assertArrayHasKey('Zend_Filter_LocalizedToNormalized', $filters);\r\n+        $filter = $filters['Zend_Filter_LocalizedToNormalized'];\r\n+        $this->assertType('Zend_Filter_LocalizedToNormalized', $filter);\r\n+        $this->assertEquals(2, $filter->getPrecision());\r\n+    }\r\n }\r\n \r\n class Zend_Form_ElementTest_Decorator extends Zend_Form_Decorator_Abstract\r\n{code}\r\nWith this error:\r\n{code}\r\n1) Zend_Form_ElementTest::testAddFilterPassesOptionsOnToFilterObjectLocalizedToNormalized\r\nArgument 1 passed to Zend_Filter_LocalizedToNormalized::setOptions() must be an array, integer given, called in Zend\/Filter\/LocalizedToNormalized.php on line 64 and defined\r\n\r\nZend\/Filter\/LocalizedToNormalized.php:84\r\nZend\/Filter\/LocalizedToNormalized.php:64\r\n{code}\r\n\r\nCould be a problem with how that particular filter implements it's option handling?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-03-06T01:39:01.000+0000",
                    "updated": "2012-03-06T01:39:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49978",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "The problem is exactly as you point out.  {{newInstanceArgs}} takes it's argument to be an array of constructor arguments to pass on the new instance, which mesh with the intended functionality: the array being passed as first argument.  This change (which you also pointed out above) will fix the issue:\r\n{code}\r\n\r\nIndex: library\/Zend\/Form\/Element.php\r\n===================================================================\r\n--- library\/Zend\/Form\/Element.php\t(revision 24672)\r\n+++ library\/Zend\/Form\/Element.php\t(working copy)\r\n@@ -2083,7 +2083,7 @@\r\n         } else {\r\n             $r = new ReflectionClass($name);\r\n             if ($r->hasMethod('__construct')) {\r\n-                $instance = $r->newInstanceArgs((array) $filter['options']);\r\n+                $instance = $r->newInstanceArgs(array((array) $filter['options']));\r\n             } else {\r\n                 $instance = $r->newInstance();\r\n             }\r\n{code}\r\n\r\nHere's another example, this time of {{Zend_Filter_PregReplace}}:\r\n{code}\r\nIndex: tests\/Zend\/Form\/ElementTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/ElementTest.php\t(revision 24672)\r\n+++ tests\/Zend\/Form\/ElementTest.php\t(working copy)\r\n@@ -2189,6 +2189,23 @@\r\n         $validator = $username->getValidator('regex');\r\n         $this->assertTrue($validator->zfBreakChainOnFailure);\r\n     }\r\n+\r\n+    \/**\r\n+     * @group ZF-11102\r\n+     *\/\r\n+    public function testAddFilterPassesOptionsOnToFilterObjectPregReplace()\r\n+    {\r\n+        $field = new Zend_Form_Element('foo');\r\n+        $field->addFilter('PregReplace', array(\r\n+            'replace' => 'z',\r\n+            'match' => '\/[a-z]\/i',\r\n+        ));\r\n+        $filters = $field->getFilters();\r\n+        $this->assertArrayHasKey('Zend_Filter_PregReplace', $filters);\r\n+        $filter = $filters['Zend_Filter_PregReplace'];\r\n+        $this->assertType('Zend_Filter_PregReplace', $filter);\r\n+        $this->assertEquals('z', $filter->getReplacement());\r\n+    }\r\n }\r\n \r\n class Zend_Form_ElementTest_Decorator extends Zend_Form_Decorator_Abstract\r\n{code}\r\nAnd the result:\r\n{code}\r\n1) Zend_Form_ElementTest::testAddFilterPassesOptionsOnToFilterObjectPregReplace\r\nFailed asserting that two strings are equal.\r\n--- Expected\r\n+++ Actual\r\n@@ @@\r\n-z\r\n+\/[a-z]\/i\r\n{code}\r\n\r\nInstead of calling constructor with single array argument, the array contents are used as N arguments to the constructor.  Which works fine for some filters (like {{Zend_Filter_Alpha}}) which have only a single constructor argument anyway.  In the second example above, I purposefully changed the order of the array (putting 'replace' first) and the resulting values get switched inside the filter (pattern comes out through {{getReplacement()}}).\r\n\r\nSo, what's the game plan?  Zend_Form_Element->_loadFilter is obviously broken, almost to the point of unusability.  But this change smells like a BC break to me.  ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-03-10T02:16:18.000+0000",
                    "updated": "2012-03-10T02:16:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50432",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frederic@dwebconsulting.be",
                        "name": "frederic@dwebconsulting.be",
                        "displayName": "Fr\u00e9d\u00e9ric Dewinne",
                        "active": true
                    },
                    "body": "This fix will result in another bug. I mean when $filter['options'] is a string, it will be cast to an unindexed array.\r\n\r\nI explain what I mean :\r\n{code}\r\n->addFilter('null', 'integer');\r\n{code}\r\n\r\nThis code will work with the current bug. But won't with that fix.\r\n\r\nBy changing your fix into :\r\n{code}\r\n-                $instance = $r->newInstanceArgs((array) $filter['options']);\r\n+                $instance = $r->newInstanceArgs(array($filter['options']));\r\n{code}\r\nIt will be backward compatible and the second argument of the Zend_Form_Element::addFilter() method will really be the same as the first argument of the filter's constructor",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=frederic@dwebconsulting.be",
                        "name": "frederic@dwebconsulting.be",
                        "displayName": "Fr\u00e9d\u00e9ric Dewinne",
                        "active": true
                    },
                    "created": "2012-05-03T15:29:24.000+0000",
                    "updated": "2012-05-03T15:29:24.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11102\/transitions"
}