{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-839",
    "key": "ZF-839",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Notices in Zend_Db_Adapter_Pdo_Mysql::describeTable()"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-839\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-02-02T12:59:31.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=arikon",
                "name": "arikon",
                "displayName": "Sergey Belov",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-02-01T01:58:39.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:43.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I think, this patch will help\n{code}\nIndex: library\/Zend\/Db\/Adapter\/Pdo\/Mysql.php\n===================================================================\n--- library\/Zend\/Db\/Adapter\/Pdo\/Mysql.php\t(revision 3131)\n+++ library\/Zend\/Db\/Adapter\/Pdo\/Mysql.php\t(working copy)\n@@ -87,17 +87,31 @@\n      *\/\n     public function describeTable($tableName, $schemaName = null)\n     {\n-        $sql = \"DESCRIBE $tableName\";\n+      \t\/\/ row defaults\n+       \t$row_defaults = array(\n+       \t\t'length'    => null,\n+       \t\t'precision' => null,\n+       \t\t'scale'     => null,\n+       \t);\n+\n+       \t$sql = \"DESCRIBE $tableName\";\n         $result = $this->fetchAll($sql);\n         $desc = array();\n         foreach ($result as $key => $row) {\n-            if (preg_match('\/^((?:var)?char)\\((\\d+)\\)\/', $row['type'], $matches)) {\n+        \n+        \t\/\/ set defaults to row\n+        \t$row = array_merge($row_defaults, $row);\n+        \t    \n+        \tif (preg_match('\/^((?:var)?char)\\((\\d+)\\)\/', $row['type'], $matches)) {\n                 $row['type'] = $matches[1];\n                 $row['length'] = $matches[2];\n             } else if (preg_match('\/^decimal\\((\\d+),(\\d+)\\)\/', $row['type'], $matches)) {\n                 $row['type'] = 'decimal';\n                 $row['precision'] = $matches[1];\n                 $row['scale'] = $matches[2];\n+            } else if (preg_match('\/^((?:big|medium|small)?int)\\((\\d+)\\)\/', $row['type'], $matches)) {\n+                $row['type'] = $matches[1];\n+                $row['precision'] = $matches[2];\n             }\n             $desc[$row['field']] = array(\n                 'SCHEMA_NAME' => null,\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-839\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12484",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=arikon",
                        "name": "arikon",
                        "displayName": "Sergey Belov",
                        "active": true
                    },
                    "body": "Sorry, I forgot. There must be additional 'UNSIGNED ' flag in\n{code}$desc[$row['field']] = array(...);{code}\nIt is actual for some data type, like INT (SMALLINT, MEDUIMINT, BIGINT, INT) and DOUBLE types. May be for more types.\n\nI think it can be done like this:\n{code}\nIndex: library\/Zend\/Db\/Adapter\/Pdo\/Mysql.php\n===================================================================\n--- library\/Zend\/Db\/Adapter\/Pdo\/Mysql.php\t(revision 3131)\n+++ library\/Zend\/Db\/Adapter\/Pdo\/Mysql.php\t(working copy)\n@@ -87,10 +87,26 @@\n      *\/\n     public function describeTable($tableName, $schemaName = null)\n     {\n-        $sql = \"DESCRIBE $tableName\";\n+      \t\/\/ row defaults\n+       \t$row_defaults = array(\n+       \t\t'length'    => null,\n+       \t\t'precision' => null,\n+       \t\t'scale'     => null,\n+       \t\t'unsigned'  => null,\n+       \t);\n+\n+       \t$sql = \"DESCRIBE $tableName\";\n         $result = $this->fetchAll($sql);\n         $desc = array();\n         foreach ($result as $key => $row) {\n+        \n+        \t\/\/ set defaults to row\n+        \t$row = array_merge($row_defaults, $row);\n+\n+            if (preg_match('\/((?:unsigned))\/', $row['type'], $matches)) {\n+                $row['unsigned'] = (bool) (strtoupper($matches[1]) == 'UNSIGNED');\n+            }\n+\n             if (preg_match('\/^((?:var)?char)\\((\\d+)\\)\/', $row['type'], $matches)) {\n                 $row['type'] = $matches[1];\n                 $row['length'] = $matches[2];\n@@ -98,7 +114,11 @@\n                 $row['type'] = 'decimal';\n                 $row['precision'] = $matches[1];\n                 $row['scale'] = $matches[2];\n+            } else if (preg_match('\/^((?:big|medium|small)?int)\\((\\d+)\\)\/', $row['type'], $matches)) {\n+            \t$row['type'] = $matches[1];\n+                $row['precision'] = $matches[2];\n             }\n+\n             $desc[$row['field']] = array(\n                 'SCHEMA_NAME' => null,\n                 'TABLE_NAME'  => $tableName,\n@@ -109,6 +129,7 @@\n                 'LENGTH'      => $row['length'],\n                 'PRECISION'   => $row['precision'],\n                 'SCALE'       => $row['scale'],\n+                'UNSIGNED'    => $row['unsigned'],\n                 'PRIMARY'     => (bool) (strtoupper($row['key']) == 'PRI')\n             );\n         }\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=arikon",
                        "name": "arikon",
                        "displayName": "Sergey Belov",
                        "active": true
                    },
                    "created": "2007-02-01T02:12:45.000+0000",
                    "updated": "2007-02-01T02:12:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12487",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Fixed in revision 3152. ",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-02T12:59:30.000+0000",
                    "updated": "2007-02-02T12:59:30.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12493",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=arikon",
                        "name": "arikon",
                        "displayName": "Sergey Belov",
                        "active": true
                    },
                    "body": "Thanks a lot!\nI understand your comment about \"size\" of INT types. Useful information, I dint't know about that.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=arikon",
                        "name": "arikon",
                        "displayName": "Sergey Belov",
                        "active": true
                    },
                    "created": "2007-02-02T14:59:09.000+0000",
                    "updated": "2007-02-02T14:59:09.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-839\/transitions"
}