{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6065",
    "key": "ZF-6065",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Controller_Router_Route_Regexp does not honor $reset parameter"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6065\/votes",
                "votes": 7,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                "name": "coling",
                "displayName": "Colin Guthrie",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-03-19T08:53:35.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-03-16T03:14:13.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Hi,\n\nI posted this message to the mailing list but got no feedback so I am going to proceed under the assumption that this is infact a real bone-fide bug!\nhttp:\/\/thread.gmane.org\/gmane.comp.php.zend.framework.general\/26198\n\nIn Zend_View_Helper_Url the reset parameter is documented as:\n\"Whether or not to reset the route defaults with those provided\".\n\nI've always taken this to mean that if the route being assembled is the same as the one matched on the current request, do not use the values extracted from the current request when assembling if this argument is true.\n\n\nAssuming I am correct, when I look at the assemble() method of Zend_Controller_Router_Route_Regex it's clearly evident that the $reset parameter is completely ignored and $this->_values is always used.\n\nSo under this logic, it is impossible to e.g. link to the same route as currently matched but with different values for some params, but leaving others to be filled in by their default values when said missing params were actually supplied in the currently matched route!\n\nPhew, that last sentence was a hard one to follow, so I'll do an example.\n\n\nSay I have a route:\n\nnew Zend_Route_Regex(\n'foo(?:\/([\\w-]+)(?:\/([0-9]+))?)?',\narray('module' => 'blah', 'controller' => 'blah', 'action' => 'blah', 'arg1' => bar, 'arg2' => 1),\narray(1 => 'arg1', 2 => 'arg2')\n);\n\n\nIf the following URL is matched\n\/foo\/bar\/42\n\nAnd I use a view helper to create a new link on that page via:\n$this->url(array('arg1' => 'oink'), null, true);\n\nThen I'd expect a route of:\n\/foo\/oink\nto be produced (because null will match the current route, and true says the current values should be ignored.\n\nHowever this actually produces a route:\n\/foo\/oink\/42\n\nAs the value matched in the current route is not reset as you would expect.\n\nThis is the same regardless of the $reset parameter so:\n$this->url(array('arg1' => 'oink'), null, false);\nwill also produce the same result:\n\/foo\/oink\/42\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6065\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                "name": "dasprid",
                "displayName": "Ben Scholzen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/11814",
                    "filename": "regex.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "created": "2009-03-19T08:56:25.000+0000",
                    "size": 1050,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/11814\/regex.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10291",
                    "id": 10291,
                    "description": "Mini Release",
                    "name": "1.7.7",
                    "userReleaseDate": "16\/Mar\/09",
                    "archived": false,
                    "releaseDate": "2009-03-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29590",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "body": "Here is a patch that causes the route to honour the $reset argument.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "created": "2009-03-19T08:56:30.000+0000",
                    "updated": "2009-03-19T08:56:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29594",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "Is the regexp route the only one with this problem, or does it apply to other route types as well?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-03-19T12:58:52.000+0000",
                    "updated": "2009-03-19T12:58:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29596",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "body": "A quick look at the code seems to suggest that only Regex.php is affected.\n\nHostname and Module both use it and Chain passes it on, Static doesn't but that's expected.\n\nI've not tested the above, just a quick glance at the code. I only personally use Regex in my app as we have fairly locked down routes and use forward() quite a lot and the forwarded locations often assume that the ACL checks have been done etc. so things like module routing (the default) are unsafe for me :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "created": "2009-03-19T13:10:18.000+0000",
                    "updated": "2009-03-19T13:10:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38227",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thymus",
                        "name": "thymus",
                        "displayName": "Raphael Dehousse",
                        "active": true
                    },
                    "body": "I use this patch and it works for me.\r\nIt's used in company-level projects.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thymus",
                        "name": "thymus",
                        "displayName": "Raphael Dehousse",
                        "active": true
                    },
                    "created": "2010-02-03T04:33:16.000+0000",
                    "updated": "2010-02-03T04:33:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44228",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denisnovikov",
                        "name": "denisnovikov",
                        "displayName": "Denis Novikov",
                        "active": true
                    },
                    "body": "Don't want to be noisy, but is it really should take 2 year to change from:\r\n{code}\r\n        $matchedValuesMapped  = $this->_getMappedValues($this->_values, true, false);\r\n{code}\r\nto:\r\n{code}\r\n        $matchedValuesMapped  = $reset ? array() : $this->_getMappedValues($this->_values, true, false);\r\n{code}\r\n?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=denisnovikov",
                        "name": "denisnovikov",
                        "displayName": "Denis Novikov",
                        "active": true
                    },
                    "created": "2011-02-01T10:09:41.000+0000",
                    "updated": "2011-02-01T10:09:41.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44237",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "body": "Yeah, I've been carrying this patch in my local copy since I reported it. Getting it committed would be one less hassle. Are you still around Ben, or should we try and reassign this bug?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coling",
                        "name": "coling",
                        "displayName": "Colin Guthrie",
                        "active": true
                    },
                    "created": "2011-02-02T02:51:11.000+0000",
                    "updated": "2011-02-02T02:51:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44331",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ryan.lange",
                        "name": "ryan.lange",
                        "displayName": "Ryan Lange",
                        "active": true
                    },
                    "body": "This fix is especially necessary for any regular expressions that contain subpatterns that don't get used during assembly.\r\n\r\nConsider this route...\r\n\r\n{code}\r\n$router->addRoute( 'admin_client', new Zend_Controller_Router_Route_Regex(\r\n\r\n    \/\/ route\r\n    'admin\/client\/(\\d+)(\/(view|edit|delete))?',\r\n\r\n    \/\/ defaults\r\n    array(\r\n        'module'     => 'admin',\r\n        'controller' => 'clients',\r\n        'action'     => 'view'\r\n    ),\r\n\r\n    \/\/ subpattern map\r\n    array(\r\n        1 => 'id',\r\n        3 => 'action'\r\n    ),\r\n\r\n    \/\/ reverse\r\n    'admin\/client\/%d\/%s'\r\n) );\r\n{code}\r\n\r\nIf the user has navigated to {{\/admin\/client\/123\/edit}}, the matched values are as follows:\r\n\r\n{code}\r\n\"id\"     => \"123\"\r\n2        => \"\/edit\"\r\n\"action\" => \"edit\"\r\n{code}\r\n\r\nNow, if we try to assemble a URL based on this route...\r\n\r\n{code}\r\n$this->_helper->getHelper( 'Url' )->url( array( 'id' => 123, 'action' => 'view' ), 'admin_client', true );\r\n$this->_helper->getHelper( 'Url' )->url( array( 'id' => 123, 'action' => 'delete' ), 'admin_client', true );\r\n{code}\r\n\r\n...these both result in {{\/admin\/client\/123\/%2Fedit}}.\r\n\r\nIn this situation, without this fix, the {{action}} key is essentially ignored and the second matched subpattern (\"\/edit\") is encoded and inserted, resulting in an incorrect URL.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ryan.lange",
                        "name": "ryan.lange",
                        "displayName": "Ryan Lange",
                        "active": true
                    },
                    "created": "2011-02-09T07:31:58.000+0000",
                    "updated": "2011-02-09T07:31:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45520",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=g.schuster",
                        "name": "g.schuster",
                        "displayName": "Gabriel Schuster",
                        "active": true
                    },
                    "body": "*upvote*\r\nThis needs to be fixed as it makes regex-assembly completely useless.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=g.schuster",
                        "name": "g.schuster",
                        "displayName": "Gabriel Schuster",
                        "active": true
                    },
                    "created": "2011-03-16T03:14:12.000+0000",
                    "updated": "2011-03-16T03:14:12.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6065\/transitions"
}