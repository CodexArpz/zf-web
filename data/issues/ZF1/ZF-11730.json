{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11730",
    "key": "ZF-11730",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Incorrect method name in title - Using the static staticFilter() method"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/8",
                "name": "Docs:  Problem",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11730\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10160",
                    "id": 10160,
                    "description": "Major Release",
                    "name": "Next Major Release",
                    "archived": false,
                    "released": false
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-09-15T08:24:50.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=uberteck",
                "name": "uberteck",
                "displayName": "Nick",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-09-09T13:58:12.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-09-15T08:24:50.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "documentation"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The title of the section \"Using the static staticFilter() method\" is incorrect as the actual method discussed is filterStatic().  I'd argue minor rather than trivial as some people may skim through the documentation for the name of a method they cannot remember and not read the entire paragraph.\r\n\r\nAlso, and this may be a different issue, why does it need a different name from the non-static method?  Can the method not be written to work out if it is being called from an instantiated class or not - ala singleton pattern and either behave as static or not as needed?  I can't see any reason for the 'static' naming convention in the ZF coding standards."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11730\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "customfield_10000": {
            "name": "Language",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10000",
                "value": "English"
            }
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10013",
                    "id": 10013,
                    "name": "Zend_Filter",
                    "description": "methods for filtering data",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48380",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Commenting only on your second paragraph.\r\n\r\nIn PHP4, it was possible to call a method both statically and as an instance method, and test for $this. In PHP5, the only way for a method to be static is to declare it as such from the outset. Additionally, when calling a static method from an object instance, $this remains unset. As an example, try the following:\r\n{code}\r\nclass Foo                                                                       \r\n{                                                                               \r\n    protected $seed;                                                            \r\n                                                                                \r\n    public function __construct($seed)                                          \r\n    {                                                                           \r\n        $this->seed = $seed;                                                    \r\n    }                                                                           \r\n                                                                                \r\n    public static function filter($value)                                       \r\n    {                                                                           \r\n        if (!isset($this)) {                                                    \r\n            return strtoupper($value);                                          \r\n        }                                                                       \r\n                                                                                \r\n        return strtoupper($this->seed . ' ' . $value);                          \r\n    }                                                                           \r\n}                                                                               \r\n$f = new Foo('I say');                                                          \r\necho $f->filter('boo');\r\n{code}\r\n\r\nThe result will still be \"BOO\". As such, you lose access to any state you might have set in the object.\r\n\r\nBecause many filters may depend on state (e.g. locale settings, configuration that alters behavior, etc.), Zend_Filter_Interface thus defines filter() as a public, non-static method. Even for filters that do not need state, in order to adhere to the interface, they need to declare the method non-static.\r\n\r\nFinally, the Zend_Filter class itself serves two purposes. One is to provide filter chain capabilities -- and that is what the filter() method of that class is for (it iterates through all attached filters, passing the return value of one to the next until done). \r\n\r\nThe second purposes is where filterStatic() comes in; its purpose is for doing one-off filtering on a single line:\r\n\r\n{code}\r\n$filtered = Zend_Filter::filterStatic('boo', 'StringToUpper', array('encoding' => 'utf-8'));\r\necho $filtered; \/\/ 'BOO'\r\n{code}\r\n\r\nAs such, the difference in naming is by design.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-09-09T14:16:09.000+0000",
                    "updated": "2011-09-09T14:16:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48402",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=uberteck",
                        "name": "uberteck",
                        "displayName": "Nick",
                        "active": true
                    },
                    "body": "Thanks for the detail - makes total sense.  I was thinking in PHP4 terms where you declare filter() as a non-static method then the following works as expected and is perfectly valid (according to PHP4 docs on paamayim-nekudotayim, but not PHP5 docs):\r\n\r\n{code}\r\necho Foo::filter('boo');\r\n?><br \/><?php\r\n$f = new Foo('I say');\r\necho $f->filter('boo');\r\n{code}\r\n\r\nFYI for anyone that tries this in PHP5 - calling a non-static method statically still works (according to various php bug reports this behaviour will be kept in for backward compatibility purposes) but certainly isn't good practice - sure enough it throws up a 'php Non-static method _method()_ should not be called statically on line _#_' E_STRICT warning.  Thinking about it - it seems odd this was possible with PHP4 in the first place as it isn't in any other OOP language I am familiar with.  The fact that you can access a $this (from parent) within a static method in PHP5 if the class is inherited only adds to the confusion.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=uberteck",
                        "name": "uberteck",
                        "displayName": "Nick",
                        "active": true
                    },
                    "created": "2011-09-10T09:57:17.000+0000",
                    "updated": "2011-09-10T09:57:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48438",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Fixed in ZF2 with [GH-414|https:\/\/github.com\/zendframework\/zf2\/pull\/414]",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-09-15T08:24:50.000+0000",
                    "updated": "2011-09-15T08:24:50.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11730\/transitions"
}