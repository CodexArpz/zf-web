{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7838",
    "key": "ZF-7838",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Null privilege tests incorrectly when explicit privileges are defined"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7838\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-09-15T06:54:32.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mirage",
                "name": "mirage",
                "displayName": "Juergen Schreck",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-09-12T14:41:03.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-09-15T08:51:24.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "acl",
                "default",
                "null",
                "privilege"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Assuming the following ACL\n\n{{$acl=new Zend_Acl();}}\n{{$acl->add(new Zend_Acl_Resource('files'));}}\n{{$acl->addRole(new Zend_Acl_Role('user'));}}\n\n{{$acl->allow('user', 'files');}}\n{{$acl->deny('user', 'files', 'create');}}\n    \nThen\n\n{{isAllowed('user','files'); \/\/ returns false but should true because access was given to the entire resource and only revoked for the 'create' privilege.}}\n\nCould not find a suitable workaround other than never checking the default access but explicitly checking each privilege. The trouble with that is that undefined default privileges will correctly reflect the explicit definition of the null privilege for the resource. However the as reported here the null privilege reports wrong if a specific privilege is denied.\n\nHope this makes sense."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7838\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10361",
                    "id": 10361,
                    "description": "Mini Release",
                    "name": "1.9.2",
                    "userReleaseDate": "25\/Aug\/09",
                    "archived": false,
                    "releaseDate": "2009-08-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10070",
                    "id": 10070,
                    "name": "Zend_Acl",
                    "description": "Access control list authorization component",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34465",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Interesting, I'll have to dig around, I am not sure if this is a bug or not.  Either way, the bigger question is if fixing this would cause a backwards-incompatibility for people consuming Zend_Acl.\n\nPut another way:\n\n{code}\n$acl = new Zend_Acl();\n$acl->addRole('some-role');\n$acl->addResource('some-resource');\n$acl->allow('some-role', 'some-resource');\n\necho ($acl->isAllowed('some-role','some-resource') ? 'true' : 'false') . PHP_EOL; \/\/ returns true\n\n$acl->deny('some-role', 'some-resource', 'some-privilege');\n\necho ($acl->isAllowed('some-role','some-resource') ? 'true' : 'false') . PHP_EOL; \/\/ returns false\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-09-15T06:35:32.000+0000",
                    "updated": "2009-09-15T06:35:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34466",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Consider this code in addendum to the above:\n\n{code}\n\/\/ give carte blanche access\n$acl->allow('some-role', 'some-resource');\n\necho ($acl->isAllowed('some-role','some-resource') ? 'true' : 'false') . PHP_EOL; \/\/ returns true\n\n\/\/ deny for a very specific priv, thus breaking carte blanche access\n$acl->deny('some-role', 'some-resource', 'some-privilege');\n\necho ($acl->isAllowed('some-role','some-resource') ? 'true' : 'false') . PHP_EOL; \/\/ returns false\necho ($acl->isAllowed('some-role','some-resource', 'some-privildge') ? 'true' : 'false') . PHP_EOL; \/\/ returns false\n{code}\n\nBy giving carte blanche access (no privilege), a user has full power over all privileges possible, thus it returns true.  When you add a denied privilege to the tree, the user by definition can no longer have carte blanche access, thus when you ask if they have such access, it returns false, which is the correct behavior.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-09-15T06:54:30.000+0000",
                    "updated": "2009-09-15T06:54:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34469",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mirage",
                        "name": "mirage",
                        "displayName": "Juergen Schreck",
                        "active": true
                    },
                    "body": "Ralph,\n\nThanks for looking into and explaining it. I don't agree with the logic as it works different than card blanche overrides for resources and roles alongside their support for inheritance. I.E. setting specific [card blanche] access lower in the inheritance tree doesn't alter the upstream [card blanche] definitions the same way.\n\nSo, following my logic would be more consistent across the board. Frankly, I have to assume backward compatibility would not be a problem, because apparently no-one has come across this yet. :-)\n\nIf it needs to stay as it is now, it would definitely be most useful for that to be explained in the reference guide.\n\nAside from that, I also want to point out that card-blanche privilege access does not work consistently when checking for non-existent privileges. My gut instinct tells me that non-existent privileges should be denied as they don't exist from the ACL's point of view and thus, can't be tested. Another case could be made for it to reflect the current state of the card blanche access. Currently it doesn't operate like either of the above:\n\n{noformat}\n\/\/ give card-blanche access\n$acl->allow('some-role', 'some-resource');\n\/\/ deny for a very specific priv, thus breaking carte blanche access\n$acl->deny('some-role', 'some-resource', 'some-privilege');\n\n\/\/ check card blanche access\necho ($acl->isAllowed('some-role','some-resource') ? 'true' : 'false') . PHP_EOL; \/\/ returns false\n\n\/\/ check against a non-existing privilege\necho ($acl->isAllowed('some-role','some-resource', 'non-existent-privilige') ? 'true' : 'false') . PHP_EOL; \/\/ returns true even though card blanche is false - NOT GOOD\n{noformat}\n\nCompared to reversing the acl\n{noformat}\n\/\/ deny card-blanche access\n$acl->deny('some-role', 'some-resource');\n\/\/ allow for a very specific priv, thus breaking carte blanche access (not really, because it's already negative)\n$acl->allow('some-role', 'some-resource', 'some-privilege');\n\n\/\/ check card blanche access\necho ($acl->isAllowed('some-role','some-resource') ? 'true' : 'false') . PHP_EOL; \/\/ returns false reflecting card blanche on resource\n\n\/\/ check specific privilege\necho ($acl->isAllowed('some-role','some-resource', 'some-privilege') ? 'true' : 'false') . PHP_EOL; \/\/ returns true, ok - expected\n\n\/\/ check against a non-existing privilege\necho ($acl->isAllowed('some-role','some-resource', 'non-existent-privilige') ? 'true' : 'false') . PHP_EOL; \/\/ returns false reflecting card blanche on resource\n{noformat}\n\nI guess there's multiple ways to address it (if at all)\n- let acl be configured for assertions to respond as pessimistic vs. optimistic\n- let assertions return a mixed state rather than just true or false",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mirage",
                        "name": "mirage",
                        "displayName": "Juergen Schreck",
                        "active": true
                    },
                    "created": "2009-09-15T08:51:20.000+0000",
                    "updated": "2009-09-15T08:51:20.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7838\/transitions"
}