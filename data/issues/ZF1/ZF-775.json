{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-775",
    "key": "ZF-775",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Controller_Dispatcher::isDispatchable() always returns true"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-775\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-01-29T09:05:25.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                "name": "rob",
                "displayName": "Rob Allen",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-01-20T14:20:43.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:40.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In changeset 2840,  Zend_Controller_Dispatcher::_getController() was rewritten to always return the name of a controller without worrying about if there was an associated file\/class.\n\nZend_Controller_Dispatcher::isDispatchable() looks for a boolean false to be returned from _getController() which is now not happenin, so it always returns true.\n\nLooking at the changeset, I think it's intentional to move the directory check out of _getController(), so I suspect that isDispatchable() needs changing to something like:\n\n{code}\npublic function isDispatchable(Zend_Controller_Request_Abstract $request)\n{\n    $className = $this->_getController($request);\n    if (!$className) {\n        return false;\n    }\n\n    try {\n        Zend::loadClass($className, $this->getControllerDirectory());\n    } catch (Zend_Exception $e) {\n        return false;\n    }\n\n    return true;\n}\n{code}\n\nI suspect that there's a better way than relying on Zend::loadClass's exception though :)"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-775\/watchers",
                "isWatching": false,
                "watchCount": 5
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10020",
                    "id": 10020,
                    "description": "Preview Release; I18N, Acl, Auth, Session",
                    "name": "0.7.0",
                    "userReleaseDate": "18\/Jan\/07",
                    "archived": true,
                    "releaseDate": "2007-01-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12310",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Fix wrapping in code",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-20T14:21:30.000+0000",
                    "updated": "2007-01-20T14:21:30.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12381",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Please check out revision 3004 -- this should resolve the issue.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-25T16:20:56.000+0000",
                    "updated": "2007-01-25T16:20:56.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12387",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Nearly :)\n\nisDispatchable() returns false for an classname wherease dispatch() succeeds:\n\nsuggested patch:\n{code}\nIndex: Dispatcher.php\n===================================================================\n--- Dispatcher.php      (revision 3010)\n+++ Dispatcher.php      (working copy)\n@@ -68,7 +68,7 @@\n     {\n         $className = $this->_getController($request);\n         if (!$className) {\n-            return false;\n+            $className = $this->_getDefaultControllerName($request);\n         }\n\n         $fileSpec = $this->classToFilename($className);\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T08:30:21.000+0000",
                    "updated": "2007-01-26T08:30:21.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12388",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "This is by design, however, and documented in the isDispatchable() docblock:\n{code}\n    \/**\n     * Returns TRUE if the Zend_Controller_Request_Abstract object can be\n     * dispatched to a controller.\n     *\n     * Use this method wisely. By default, the dispatcher will fall back to the\n     * default controller (either in the module specified or the global default)\n     * if a given controller does not exist. This method returning false does\n     * not necessarily indicate the dispatcher will not still dispatch the call\n     * to the default controller.\n     *\n     * @param Zend_Controller_Request_Abstract $action\n     * @return boolean\n     *\/\n{code}\nThe idea is that if the requested controller is not found, or no controller was found, it will fall back to the default controller when dispatching. This allows URLs with no path to work ('\/').\n\nThe alternate route is to modify _getController() to call _getDefaultController() only if no controller was found. Is this a better solution?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-26T08:40:27.000+0000",
                    "updated": "2007-01-26T08:40:27.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12389",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Previous comment should read:\n\nisDispatchable() returns false for an empty classname wherease dispatch() succeeds.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T08:42:14.000+0000",
                    "updated": "2007-01-26T08:42:14.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12390",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Right -- and I've commented on why that is the case currently. Would calling _getDefaultController() from _getController() make more sense to you -- so that isDispatchable() and dispatch() act more alike?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-26T08:50:27.000+0000",
                    "updated": "2007-01-26T08:50:27.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12391",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "I completely missed the docblock comment! As a general point of view, I expected that isDispatchable() would succeed \/ fail in exactly the same way as dispatch(). \n\nCertainly, from a plugin (or anywhere else outside the dispatcher), there is no way to detect at the moment that dispatch() will succeed or fail other than calling isDispatchable(). \n\nI think that moving the _getDefaultController() call to _getController() would make sense as then both isDispatchable() and dispatch()'s call to _getController() will end up with the same result.\n\n\nIn this particular case, I am using a front controller plug in that looks like this:\n{code}\n    public function preDispatch(Zend_Controller_Request_Abstract $request)\n    {\n        $dispatcher = Zend_Controller_Front::getInstance()->getDispatcher();\n        if (!$dispatcher->isDispatchable($request))\n        {\n            $request->setControllerName('index');\n            $request->setActionName('noroute');\n        }\n    }\n{code}\n\nThough, I assume that this is not the only use of isDispatchable() !",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T09:05:31.000+0000",
                    "updated": "2007-01-26T09:05:31.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12392",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "\"The idea is that if the requested controller is not found, or no controller was found, it will fall back to the default controller when dispatching. This allows URLs with no path to work ('\/').\"\n\nThis doesn't work then :)\n\nhttp:\/\/example.com\/invalid\/test throws an exception:\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T09:08:32.000+0000",
                    "updated": "2007-01-26T09:08:32.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12393",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "continuing comment - accidentally submitted.\n\nhttp:\/\/example.com\/invalid\/test throws an exception:\n\nFatal error: Uncaught exception 'Zend_Exception' with message 'File \"..\/application\/controllers\\InvalidController.php\" was not found.' in\nC:\\code\\zftest\\lib\\zf\\library\\Zend.php:175 Stack trace: #0 C:\\code\\zftest\\lib\\zf\\library\\Zend.php(103): Zend::loadFile('InvalidControll...', Array, true) #1 C:\\code\\zftest\\lib\\zf\\library\\Zend\\Controller\\Dispatcher.php(208): Zend::loadClass('InvalidControll...', Array) #2 C:\\code\\zftest\\lib\\zf\\library\\Zend\\Controller\\Dispatcher.php(157): Zend_Controller_Dispatcher->loadClass('InvalidControll...') #3 C:\\code\\zftest\\lib\\zf\\library\\Zend\\Controller\\Front.php(726): Zend_Controller_Dispatcher->dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http)) #4 C:\\code\\zftest\\app2\\helloworld\\web_root\\index.php(23): Zend_Controller_Front->dispatch() #5 {main} thrown in C:\\code\\zftest\\lib\\zf\\library\\Zend.php on line 175\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T09:11:03.000+0000",
                    "updated": "2007-01-26T09:11:03.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12394",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Okay -- good catch.\n\nMy thought, then, is that we need to accommodate the following use cases:\n\n* No controller present in request: use default controller and consider the request dispatchable\n* Invalid controller present in request: isDispatchable() should report false\n\nI think that dispatch(), on finding that a controller is not dispatchable, should either:\n\n* dispatch to the default controller and action, OR\n* throw a Zend_Controller_Dispatcher_Exception, which the developer could then test for in the response object and redirect to a generic error page.\n\nPerhaps this should be configurable behaviour?\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-26T09:27:40.000+0000",
                    "updated": "2007-01-26T09:27:40.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12395",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Use cases:\n    *  No controller present in request: use default controller and consider the request dispatchable\n\nI agree as this covers the common case of no path at all ('\/'). So, for this case, dispatch() should use the default controller and isDispatchable() should return true.\n\n    * Invalid controller present in request: isDispatchable() should report false\n\nAgreed.\n\nChoices for dispatch() for the second use case:\n\n    * dispatch to the default controller and action, OR\n    * throw a Zend_Controller_Dispatcher_Exception, which the developer could then test for in the response object and redirect to a generic error page.\n\n I actually think that the current system of dispatch() throwing an exception in this case is perfectly reasonable. Automatically dispatching to the default controller and action would make it that much harder to find typos! \n\nPersonally, I don't see the need for making this configurable option as it's trivial to write a plugin to prevent the exception or as you say, checking the response object.  If you did go the configurable route, then redirect to the noRoute action in the default controller though, as most people would want to put up an error page, not the home page.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T09:43:29.000+0000",
                    "updated": "2007-01-26T09:43:29.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12396",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Okay, with that in mind, I'll default to throw an exception if the controller is invalid, but have a configuration option to use the default controller instead. Also, _getDefaultController() already resets the action to the default action when called, so this will not need to change.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-26T09:48:08.000+0000",
                    "updated": "2007-01-26T09:48:08.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12397",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Also, I'll document how to handle such routes, with an example of subclassing the response object.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-26T09:48:42.000+0000",
                    "updated": "2007-01-26T09:48:42.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12398",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Sounds good to me!",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-26T10:01:25.000+0000",
                    "updated": "2007-01-26T10:01:25.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12415",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Issue resolved during week of 22 January 2007",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-01-29T09:05:25.000+0000",
                    "updated": "2007-01-29T09:05:25.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-775\/transitions"
}