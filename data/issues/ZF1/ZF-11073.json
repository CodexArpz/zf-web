{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11073",
    "key": "ZF-11073",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Cache_Backend_Dba"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11073\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                "name": "gjerokrsteski",
                "displayName": "Gjero Krsteski",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-02-14T08:06:17.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-07T07:15:34.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Based on php-dba-cache a have writen a \"Zend_Cache_Backend_Dba\" class. The php-dba-cache uses the database (dbm-style) abstraction layer to cache your objects, strings, integers or arrays. Even instances of SimpleXMLElement can be puted to the cache. I just wrote the Class \"Zend_Cache_Backend_Dba\" for my company, and it works fine. More information about php-dba-cache you can find at https:\/\/github.com\/gjerokrsteski\/php-dba-cache\r\n\r\nI allso can see the \"Zend_Cache_Backend_Dba\" class at https:\/\/github.com\/gjerokrsteski\/Zend_Cache_Backend_Dba for inspection.\r\n\r\nBest regards,\r\nGjero Krsteski\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10039",
                "value": "  Should Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11073\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                "name": "gjerokrsteski",
                "displayName": "Gjero Krsteski",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF2-139",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-139",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44618",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "Hi Giero,\r\n\r\nThat's an very interesting idea !\r\n\r\nBut please note the following:\r\n\r\n- You need to sign and return a CLA: http:\/\/framework.zend.com\/cla\r\n- You simply created a wrapper for your caching implementation of dba this could be better done\r\n  to implement the zend dba backend directly\r\n- development of zf2 already started -> please take a look into my proposal : http:\/\/framework.zend.com\/wiki\/display\/ZFPROP\/Zend+Cache+2.0+-+Marc+Bennewitz\r\n\r\nGreetings",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-03-02T12:30:11.000+0000",
                    "updated": "2011-03-02T12:30:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44623",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "body": "Hi Marc,\r\n\r\nthanks for the answer. I already sent the CLA by fax and e-mail. See here, i just wrote an dba-backend-cache https:\/\/github.com\/gjerokrsteski\/Zend_Cache_Backend_Dba",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "created": "2011-03-03T01:52:53.000+0000",
                    "updated": "2011-03-03T01:52:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45601",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "HI Gjero,\r\n\r\nI impemented a dba adapter for ZF2 to see how it works an find issues:\r\nhttps:\/\/github.com\/marc-mabe\/zf2\/blob\/cache\/library\/Zend\/Cache\/Storage\/Adapter\/Dba.php\r\n\r\nOne think i have found is described @ http:\/\/bugs.php.net\/bug.php?id=54242\r\nBut I can't test all available handlers :(\r\nIt would be nice if you can could take a look into it and run some more tests with different handlers.\r\n\r\nFeel free to backport this version back to ZF1 (without the Cache*-Classes).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-03-25T17:39:45.000+0000",
                    "updated": "2011-03-25T17:39:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45775",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "body": "Hi Marc,\r\n\r\nthanks for the report. In the next two weeks i will backport your fix of the Bug #54242. There is something you have to know about the DBA-style databases, like not all of the databases can replace key-value pairs, like the CDB. The CDB database can handle onlly with fixed key-vaue pairs. The best and fastest handlers for DBA-style caching are: QDBM, Berkeley DB (DB4), NDBM and least the Flatfile. Why you are trying to re-insert instead of replace the value?\r\n\r\np.s. can you send me the url tho the ZF1 SVN-branch for the backport?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "created": "2011-04-01T09:10:00.000+0000",
                    "updated": "2011-04-01T09:10:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45785",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "??Why you are trying to re-insert instead of replace the value???\r\n\r\ndba_insert:  If this key already exist in the database, this function will fail.\r\ndba_replace: replaces or inserts the entry\r\n\r\nTherefor the adapter works as follows:\r\nsetItem:     -> dba_replace\r\naddItem:     -> dba_insert + workaround for Bug #54242\r\nreplaceItem: -> dba_exists + dba_replace\r\n\r\nI don't have a backport for ZF1, yet. For now I don't have enough time to implement new features to ZF1 :(\r\nIf you have SVN-Access you can create a branch @ http:\/\/framework.zend.com\/svn\/framework\/standard\/branches\/user\/<Your Username>\r\nor create a clean backport on github that can be simply added as one backend file to ZF1.\r\n\r\nI read your implementation for ZF1 on github but this requires 3 more classes which are not needed for ZF.\r\nAdditionally serialization is done on frontend and the backend have to handle strings only. You could store the time within that string using the pack function ;)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-04-02T15:51:04.000+0000",
                    "updated": "2011-04-02T15:52:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45786",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "Changed assignee to Gjero",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-04-02T15:54:15.000+0000",
                    "updated": "2011-04-02T15:54:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45949",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "body": "You can find the backport on github. I just keep the additional serialization, because i have some additional data, which is important for the caching. Please give me an review.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "created": "2011-04-21T04:23:25.000+0000",
                    "updated": "2011-04-21T04:24:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46369",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "Some small Notices\/Questions:\r\n\r\n1. Using constants for mode doesn't help to note which modes are available and how they should use.\r\n   -> You can set the default mode directly option directly and take a link to php documentation\r\n2. Using constants for handlers doesn't show all available handlers.\r\n   -> I would prefer same as on modes\r\n3. If DB-Faile doesn't exist you create it on __construct and _retrieveDbaConnection (fopen)\r\n   -> Why is this needed? This should be solved by mode.\r\n4. On _put you test if the key exists and calls replace or update but dba_replace replaces or inserts the already with one call:\r\n   -> php.net: dba_replace() replaces or inserts the entry described with key and value into the database specified by handle. \r\n5. Your \"test\"-Implementation doesn't return mtime if item exist\r\n6. Why a simple serialize\/unserialize isn't enough ?\r\n7. Missing UnitTests",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-05-03T21:19:00.000+0000",
                    "updated": "2011-05-03T21:19:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48374",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "body": "Hi Marc,\r\n\r\nThank you for your comment. I've implemented all your improvements. Check it out on github, and please give me a new recognition.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "created": "2011-09-08T19:10:40.000+0000",
                    "updated": "2011-09-08T19:10:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48385",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "Hi Gjero,\r\n\r\nThank you for your work. I have looked into it and the most looks great but two points from above I'm missing:\r\n\r\n5. Your \"test\"-Implementation doesn't return mtime if item exist\r\n{code}\r\n    public function test($id)\r\n    {\r\n        return ((NULL === $this->_dba) ? false : true);\r\n    }\r\n{code}\r\n{code}\r\n    protected function _has($identifier)\r\n    {\r\n        return dba_exists($identifier, $this->_dba);\r\n    }\r\n{code}\r\n... but you have to return a boolean false if the item doesn't exist and the last modification time of the item else.\r\n\r\n\r\n6. Why a simple serialize\/unserialize isn't enough ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-09-09T17:29:28.000+0000",
                    "updated": "2011-09-09T17:29:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48403",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "body": "Hi Marc,\r\n\r\nthank you for the recognition.\r\n\r\nto 5.) I implemented it as you wrote. see it on github.\r\nto 6.) A simple serialize\/unserialize isn't enough, because I made the experience that a lot of people use ZF1 only as library and put any type of data into the cache. By this implementation you can use it in your ZF1-application and handle with strings, and on the other hand you can use it as library and put any types of data into the cache.\r\n\r\np.s. which is the official ZF1 repository on github? ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gjerokrsteski",
                        "name": "gjerokrsteski",
                        "displayName": "Gjero Krsteski",
                        "active": true
                    },
                    "created": "2011-09-10T14:59:08.000+0000",
                    "updated": "2011-09-10T14:59:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49469",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "Cloned for ZF2 see ZF2-139",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2012-01-09T20:30:27.000+0000",
                    "updated": "2012-01-09T20:30:27.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11073\/transitions"
}