{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5792",
    "key": "ZF-5792",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Refactor row instantiation in Zend_Db_Table_Abstract and Zend_Db_Table_Rowset"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5792\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:18.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cortex",
                "name": "cortex",
                "displayName": "sebastien crocquesel",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-02-15T13:04:30.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:18.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Row instantion from database is done in the rowset AND in the table class. We have two classes having the responsability to create a row depending on the context (single fetch or multiple fetch).\nI think that the rowset should delegate this task to its table class.\n\nWe can add a function to the Table class, say\n{code}\npublic function createDbRow(array $data)\n    {\n        @Zend_Loader::loadClass($this->_rowClass);\n        return new $this->_rowClass($data);\n    }\n{code}\n\nThen, modify the fetchRow function in the table class to use this new function\n{code}\n public function fetchRow($where = null, $order = null)\n    {\n       \/\/ code not shown....\n \n        $data = array(\n            'table'   => $this,\n            'data'     => $rows[0],\n            'readOnly' => $select->isReadOnly(),\n            'stored'  => true\n        );\n        \n        return $this->createDbRow($data);\n    }\n{code}\n\nAnd the same for the rowset, in the current() function\n{code}\npublic function current()\n    {\n        if ($this->valid() === false) {\n            return null;\n        }\n\n        \/\/ do we already have a row object for this position?\n        if (empty($this->_rows[$this->_pointer])) {\n            $this->_rows[$this->_pointer] = $this->_table->createDbRow(\n                array(\n                    'table'    => $this->_table,\n                    'data'     => $this->_data[$this->_pointer],\n                    'stored'   => $this->_stored,\n                    'readOnly' => $this->_readOnly\n                )\n            );\n        }\n\n        \/\/ return the row object\n        return $this->_rows[$this->_pointer];\n    }\n{code}\n\n\nThat way we can override the new function in derived table class without having to derive rowset and override current.\n\nA scenario like this could then be imagined:\n\n{code}\n\/\/ in a derived table class\npublic function createDbRow(array $data)\n{\n    \/\/ row class comes from the row itself\n    $this->_rowClass = $data['data']['classname'];\n    return parent::createDbRow(array $data);\n}\n{code}\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5792\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10280",
                    "id": 10280,
                    "description": "Mini Release",
                    "name": "1.7.4",
                    "userReleaseDate": "02\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-02",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28853",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "body": "There's already method createRow() in Zend_Db_Table_Abstract.\n\nThe reason why row isn't instantiated in rowset using table's method is that the rowset can be in disconnected state (after serialization and deserialization) and don't have access to the instance of table. See http:\/\/framework.zend.com\/manual\/en\/zend.db.table.rowset.html#zend.db.table.rowset.serialize for more information.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "created": "2009-02-16T08:23:31.000+0000",
                    "updated": "2009-02-16T08:23:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28856",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cortex",
                        "name": "cortex",
                        "displayName": "sebastien crocquesel",
                        "active": true
                    },
                    "body": "createRow do a lot more than just instantiating the row class, maybe a name like instantiateRowClass would be more appropriated than createDbRow.\n\nI agree for disconnected state, maybe using the current code when the $_table is not available and relying on it when it is, could be a solution ?\n\n{code}\nprotected function instantiateRowClass(array $data)\n{\n    if(null !== $this->_table)\n        return $this->_table->instantiateRowClass($data);\n    else\n        return new $this->_rowClass($data);\n}\n\n\/**\n     * Return the current element.\n     * Similar to the current() function for arrays in PHP\n     * Required by interface Iterator.\n     *\n     * @return Zend_Db_Table_Row_Abstract current element from the collection\n     *\/\n    public function current()\n    {\n        if ($this->valid() === false) {\n            return null;\n        }\n\n        \/\/ do we already have a row object for this position?\n        if (empty($this->_rows[$this->_pointer])) {\n            $this->_rows[$this->_pointer] = $this->instantiateRowClass(\n                array(\n                    'table'    => $this->_table,\n                    'data'     => $this->_data[$this->_pointer],\n                    'stored'   => $this->_stored,\n                    'readOnly' => $this->_readOnly\n                )\n            );\n        }\n\n        \/\/ return the row object\n        return $this->_rows[$this->_pointer];\n    }\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cortex",
                        "name": "cortex",
                        "displayName": "sebastien crocquesel",
                        "active": true
                    },
                    "created": "2009-02-16T12:35:36.000+0000",
                    "updated": "2009-02-16T12:35:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52707",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:53:18.000+0000",
                    "updated": "2012-11-20T20:53:18.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5792\/transitions"
}