{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4728",
    "key": "ZF-4728",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "setReadOnly not recursive"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4728\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10241",
                    "id": 10241,
                    "description": "Minor Release",
                    "name": "1.8.0",
                    "userReleaseDate": "30\/Apr\/09",
                    "archived": false,
                    "releaseDate": "2009-04-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-03-21T08:38:44.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kingcrunch",
                "name": "kingcrunch",
                "displayName": "Sebastian Krebs",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-10-28T06:24:29.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-03-21T08:38:43.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I have to say, that i dont know, if this behaviour is mentioned as issue before. ;)\n\nI thought, that the method _setReadOnly()_ acts like the constructor-parameter _allowModifications_, so Im able to build up a configuration from different sources and merge it into one, but the method only locks the object itself, not the containing objects, as it will be done when setting the constructor-parameter to _false_.\n\n{code}$array = array ('key1'=>1,'key2'=>array('a'=>1,'b'=>2));\n$c = new Zend_Config($array,false);\n$c->key2->a = 3;{code}Will throw an Exception as expected.\n{code}$array = array ('key1'=>1,'key2'=>array('a'=>1,'b'=>2));\n$c = new Zend_Config($array,true);\n$c->setReadOnly();\n$c->key2->a = 3;{code}Will not throw an Exception (as not expected).\n\n\nChanging _setReadOnly()_\n{code}    public function setReadOnly()\n    {\n        $this->_allowModifications = false;\n    }{code}\nto\n{code}    public function setReadOnly()\n    {\n        $this->_allowModifications = false;\n        foreach (this->_data as $value) {\n          if ($value instanceof Zend_Config) {\n            $value->setReadOnly();\n          }\n        }\n    }{code}\nwill also lock nested objects and will make the behaviour equal to that of the constructor-parameter.\nAnd makes the method more useful ;) I dont see, why i should be able to lock a config, but are able to change deeper config settings."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4728\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                "name": "rob",
                "displayName": "Rob Allen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10252",
                    "id": 10252,
                    "description": "Minor Preview Release",
                    "name": "1.7 Preview Release",
                    "userReleaseDate": "13\/Oct\/08",
                    "archived": true,
                    "releaseDate": "2008-10-13",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10010",
                    "id": 10010,
                    "name": "Zend_Config",
                    "description": "property based interface to an array",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29452",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "body": "I usually use this method to apply readOnly to the current iteration's elements.Because i separate readonly segment and allowModificatable segment . \nI prefer to add a method setReadOnlyRecursively() as follows for more flexibilty and backward compatibility.\n{code}\n    public function setReadOnlyRecursively()\n    {\n        $this->setReadOnly();\n        foreach ($this as $value) {\n            if ($value instanceof Zend_Config) {\n                $value->setReadOnlyRecursively();\n            }\n        }\n    }\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "created": "2009-03-13T04:43:21.000+0000",
                    "updated": "2009-03-13T04:43:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29512",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kingcrunch",
                        "name": "kingcrunch",
                        "displayName": "Sebastian Krebs",
                        "active": true
                    },
                    "body": "BC is an argument, i see. But as segment i understand that as the current element including its childs. In my eyes its seems confusing, that I can set an element as read only, but its childs are not.\nI dont mind to use another method instead, but it should be possible to do so. An optional parameter will also not break BC.\n{code}public function setReadOnly($recursive = false)\n    {\n        $this->_allowModifications = false;\n        if ($recursive) {\n          foreach (this->_data as $value) {\n            if ($value instanceof Zend_Config) {\n              $value->setReadOnly();\n            }\n          }\n        }\n    }{code}\nBut keep the BC will not solve the different behaviours beetween constructor-parameter and method.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kingcrunch",
                        "name": "kingcrunch",
                        "displayName": "Sebastian Krebs",
                        "active": true
                    },
                    "created": "2009-03-16T15:34:45.000+0000",
                    "updated": "2009-03-16T15:37:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29515",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "body": "Yes , I think that it would be advisable to accord the natual code priority over BC.So, I'm fine with that an optional parameter set to true.\nSo,like this. I corrected some point.\n{code}\npublic function setReadOnly($recursive = true)\n    {\n        $this->_allowModifications = false;\n        if ($recursive) {\n          foreach ($this->_data as $value) {\n            if ($value instanceof Zend_Config) {\n              $value->setReadOnly($recursive);\n            }\n          }\n        }\n    }\n{code}\n\nBy the way ,actually setting readonly partially seems confusing .By ordinary a segment is mentioned as the element including its children.\n\nBut we don't have any options to separately set readonly to the value element in the config.Therefore, in this case,  this->setReadOnly's targets are that this->_data excluding objects instanceof Zend_Config. There is a difference between iterator and recursive iterator.\n\nFor instance;\n{code:title=base.ini}\nadmin = foo\ncontrollers.front = index\ncontrollers.some = bar\n{code}\n{code:title=extra.ini}\ncontrollers.some = special\n{code}\nIn this case,\"$config->setReadOnly(false);\" allows me to set readOnly to admin, and  allowModification to controllers. \n{code}\n$config = Zend_Config_Ini(\"base.ini\", null, true);\n$extraConf = Zend_Config_Ini(\"extra.ini\", null, false);\n$config->setReadOnly(false);\n$config->controllers->merge($extraConf->controllers);\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "created": "2009-03-16T18:07:45.000+0000",
                    "updated": "2009-03-16T18:07:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29516",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "I see this as a bug that should be fixed rather than B\/C behaviour that should be maintained. Clearly if you call setReadOnly() you expect that the entire config object is now read only and cannot be modified.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-03-17T02:02:50.000+0000",
                    "updated": "2009-03-17T02:02:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29517",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "body": "Fair enough. I'll leave it up to you. \nThanks",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=noopable",
                        "name": "noopable",
                        "displayName": "Tomoaki Kosugi",
                        "active": true
                    },
                    "created": "2009-03-17T02:55:00.000+0000",
                    "updated": "2009-03-17T02:55:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29635",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Fixed in svn [r14408|http:\/\/framework.zend.com\/code\/changelog\/Standard_Library\/?cs=14408].",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-03-21T08:38:43.000+0000",
                    "updated": "2009-03-21T08:38:43.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4728\/transitions"
}