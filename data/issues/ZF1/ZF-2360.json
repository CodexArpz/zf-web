{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2360",
    "key": "ZF-2360",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Additions to Row class"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 1440,
                "timeestimate": 1440
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2360\/votes",
                "votes": 3,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/11380",
                    "id": 11380,
                    "description": "Mini Release",
                    "name": "Next Mini Release",
                    "archived": false,
                    "released": false
                }
            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bparise",
                "name": "bparise",
                "displayName": "Brandon Parise",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-12-28T13:46:45.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2013-03-13T20:55:26.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "h3. Test for whether or not a Row object isNew\nI have run into a few situations where I needed to know whether or now the Row object passed already existed in the database.  I think the following \"isNew\" method would be helpful in determining if a Row object is new or a reference to an existing row in the database:\n\n{code}\npublic function setTimestamp(Zend_Db_Table_Row_Abstract $row)\n{\n    if ($row->isNew()) {\n        $row->created = date('Y-m-d H:i:s');\n    }\n    $row->updated = date('Y-m-d H:i:s');    \n}\n{code}\n\n\\\\\n\nh3. Getting a Row Object's Modified Data\nThis also comes out of a use-case scenario where I required an email to be sent when the status of a row `table`.`status` was modified.  This check was OUTSIDE of the row object so I didn't have direct access to whether or not $Row->status has changed:\n\n{code}\n$modifiedData = $Row->getModifiedData();\nif (in_array('status', $modifiedData)) {\n    \/\/ Send email with the new status\n}\n{code}\n\n\\\\\n\nh3. Code for the examples above\n\n{code:title=Zend_Db_Table_Row_Abstract|borderStyle=solid}\nabstract class Zend_Db_Table_Row_Abstract\n{\n    \/**\n     * Returns true if the row is new (no clean\/db data)\n     *\n     * @return bool\n     *\/\n    public function isNew()\n    {\n        return empty($this->_cleanData);\n    }\n\n    \/**\n     * Returns the diff of the data from the cleanData.\n     *\n     * @return array\n     *\/\n    public function getModifiedData()\n    {\n        return array_diff_assoc($this->_data, $this->_cleanData);\n    }\n}\n{code} "
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2360\/watchers",
                "isWatching": false,
                "watchCount": 5
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10140",
                    "id": 10140,
                    "description": "Mini Release",
                    "name": "1.0.3",
                    "userReleaseDate": "30\/Nov\/07",
                    "archived": true,
                    "releaseDate": "2007-11-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20331",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please categorize\/fix as needed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-25T20:43:56.000+0000",
                    "updated": "2008-03-25T20:43:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20618",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cred",
                        "name": "cred",
                        "displayName": "Teemu V\u00e4lim\u00e4ki",
                        "active": true
                    },
                    "body": "1st case could be dealt with current code\n\nhttp:\/\/framework.zend.com\/manual\/en\/zend.db.table.html#zend.db.table.extending.insert-update\n\n2nd case seems to be asking for a trigger and if I'm not too deep in the fantasy land I think there's plugins coming for tapping into triggers or something.\n\nIn general I don't think it would be a good idea to implement asked features as proposed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cred",
                        "name": "cred",
                        "displayName": "Teemu V\u00e4lim\u00e4ki",
                        "active": true
                    },
                    "created": "2008-04-01T14:21:12.000+0000",
                    "updated": "2008-04-01T14:21:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21016",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:12:00.000+0000",
                    "updated": "2008-04-18T13:12:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22898",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coenhyde",
                        "name": "coenhyde",
                        "displayName": "Coen Hyde",
                        "active": true
                    },
                    "body": "Yes this would be good. I have a common parent in all my row classes that implements the function isNewRow( ). I feel 'isNewRow' would be a better name than just i'isNew'.\n\nRe: Teemu\nYes but not all custom logic can be done when the row is saved. What happens if you want to apply custom logic when the row is created? The 'isNewRow' comes in handy eg.\n\n{code}\npublic function init()\n{\n    if ($this->isNewRow()) {\n        \/\/ do stuff\n    } else{\n        \/\/ Do stuff\n    }\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coenhyde",
                        "name": "coenhyde",
                        "displayName": "Coen Hyde",
                        "active": true
                    },
                    "created": "2008-07-15T21:54:24.000+0000",
                    "updated": "2008-07-15T21:54:24.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2360\/transitions"
}