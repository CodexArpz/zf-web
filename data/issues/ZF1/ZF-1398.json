{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1398",
    "key": "ZF-1398",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Solution for running non-prepared SQL statements"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 14400,
                "timeestimate": 14400
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1398\/votes",
                "votes": 43,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-06T13:02:40.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-05-16T14:42:14.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-06T13:02:40.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "broken",
                "cache",
                "mysql",
                "prepared",
                "sql"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The default implementation of the query() method in Zend_Db_Adapter_Abstract performs a prepare() on every SQL statement.\r\n\r\nSome SQL statements are incompatible with prepare().  This varies by RDBMS brand and client API design, but there are usually some such statements.\r\n\r\nFor example, MySQL does not support preparing DDL or SHOW statements.\r\n\r\nThis is a feature request to add some method to Zend_Db_Adapter_Abstract to execute a SQL statement without performing a prepare().  In the case of PDO adapters, this is the exec() method of the underlying PDO object.  But other database extensions have different methods to achieve this goal."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1398\/watchers",
                "isWatching": false,
                "watchCount": 21
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "state:need-feedback",
                "zf-caretaker-adamlundrigan"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                "name": "adamlundrigan",
                "displayName": "Adam Lundrigan",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-1590",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1590",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-4767",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4767",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-5793",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5793",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-2119",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2119",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12761",
                    "filename": "db.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kokx",
                        "name": "kokx",
                        "displayName": "Pieter Kokx",
                        "active": true
                    },
                    "created": "2010-02-18T11:21:39.000+0000",
                    "size": 3323,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12761\/db.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10080",
                    "id": 10080,
                    "description": "Beta Release; bug fixes",
                    "name": "0.9.3",
                    "userReleaseDate": "05\/May\/07",
                    "archived": true,
                    "releaseDate": "2007-05-05",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14674",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Non-prepared statements are also important for MySQL because the MySQL Query Cache feature cannot cache prepared statements.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-05-18T15:26:59.000+0000",
                    "updated": "2007-05-18T15:26:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14857",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Yeah, just read that please : http:\/\/netevil.org\/node.php?uuid=444a6017-0548-2459-2943-44a601714d58\n\nI don't know if that bug has already been reported, but i met it on RC1.0 under a linux server.\nThe query was \n{code}$this->db->query(\"ALTER TABLE `......` ADD( '..............')\");{code}\n\nusing PDO under Mysql(4.1) and Linux throws an exception 'SQLSTATE[HY000]: General error: 2030 This command is not supported in\nthe prepared statement protocol yet' in {file}\n\nThe only way to fix it was to modify the Zend\/Db\/Adapter\/PdoAbstract.php by adding {code}$this->_connection->setAttribute(PDO::ATTR_EMULATE_PREPARES, true);{code}\n\nThere is no way to change that behavior other than modify it manually in the framework source. And as said here : there is no was to prevent adapter from using prepared statements...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2007-05-30T06:13:14.000+0000",
                    "updated": "2007-05-30T06:13:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17851",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Related to Bill's comment: http:\/\/fr3.php.net\/manual\/en\/function.PDO-prepare.php#79178",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-12-10T10:24:26.000+0000",
                    "updated": "2007-12-10T10:24:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20370",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please categorize\/fix as needed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-25T20:44:00.000+0000",
                    "updated": "2008-03-25T20:44:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25563",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=till",
                        "name": "till",
                        "displayName": "Till Klampaeckel",
                        "active": true
                    },
                    "body": "Of course I only found this issue after opening another one. Can someone mark ZF-4767 as duplicate. Apologies for the extra work.\n\nAlso, what's the status of this issue? I'd like to see it fixed soon. :-)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=till",
                        "name": "till",
                        "displayName": "Till Klampaeckel",
                        "active": true
                    },
                    "created": "2008-11-01T07:12:08.000+0000",
                    "updated": "2008-11-01T07:12:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/25566",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=till",
                        "name": "till",
                        "displayName": "Till Klampaeckel",
                        "active": true
                    },
                    "body": "Adding the link, to stress the importance of the issue:\nhttp:\/\/www.nabble.com\/Zend_DB-performance-issue-td14233508.html",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=till",
                        "name": "till",
                        "displayName": "Till Klampaeckel",
                        "active": true
                    },
                    "created": "2008-11-01T10:28:16.000+0000",
                    "updated": "2008-11-01T10:28:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27937",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "I will evaluate this with the next 2 weeks.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-01-09T13:47:53.000+0000",
                    "updated": "2009-01-09T13:47:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29127",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=till",
                        "name": "till",
                        "displayName": "Till Klampaeckel",
                        "active": true
                    },
                    "body": "This is still a blocker for me.\n\nBelow is some code which I started using in some of my projects to use unprepared queries and to utilize the query cache to a certain extend. The {{__call()}} is a way to debug this and to find methods I didn't cover yet.\n\nThis is not final but a work in progress and an idea. I could extend it, etc. if I get some feedback here.\n\n{code:title=Zend_Db_Statement_Mysqli_Unprepared}\n<?php\n\/**\n * @see Zend_Db_Statement\n *\/\nrequire_once 'Zend\/Db\/Statement.php';\n\nclass Zend_Db_Statement_Mysqli_Unprepared extends Zend_Db_Statement\n{\n    protected $_fetchMode, $_result;\n\n    public function __construct($result, $fetchMode)\n    {\n        $this->_result    = $result;\n        $this->_fetchMode = $fetchMode;\n    }\n\n    public function fetchAll($fetchMode = null)\n    {\n        $data = array();\n        while ($row = $this->fetch($fetchMode)) {\n            array_push($data, $row);\n        }\n        return $data;\n    }\n\n    public function fetchColumn($col = 0)\n    {\n        $row = $this->fetch(Zend_Db::FETCH_NUM);\n        if (isset($row[$col])) {\n            return $row[$col];\n        }\n        return false; \/\/ FIXME\n    }\n\n    public function fetch($fetchMode = null)\n    {\n        if ($fetchMode === null) {\n            $fetchMode = $this->_fetchMode;\n        }\n\n        switch ($fetchMode) {\n            default:\n            case Zend_Db::FETCH_BOTH:\n                $fetchMode = MYSQLI_BOTH;\n                break;\n\n            case Zend_Db::FETCH_ASSOC:\n                $fetchMode = MYSQLI_ASSOC;\n                break;\n\n            case Zend_Db::FETCH_NUM:\n                $fetchMode = MYSQLI_NUM;\n                break;\n        }\n\n        return $this->_result->fetch_array($fetchMode);\n    }\n\n    public function __call($method, $args)\n    {\n        die(\"$method\");\n    }\n}\n{code}\n\nHere is a patch to Zend_Db_Adapter_Abstract:\n\n{code:title=Zend_Db_Adapter_Abstract.diff}\nIndex: library\/Zend\/Db\/Adapter\/Abstract.php\n===================================================================\n--- library\/Zend\/Db\/Adapter\/Abstract.php\t(revision 12330)\n+++ library\/Zend\/Db\/Adapter\/Abstract.php\t(working copy)\n@@ -132,6 +132,12 @@\n     );\n \n     \/**\n+     * @var boolean Defines whether the adapter uses prepared statemtents.\n+     *              The default is 'true' to avoid a BC-break.\n+     *\/\n+    protected $_usePreparedStatements = true;\n+\n+    \/**\n      * Constructor.\n      *\n      * $config is an array of key\/value pairs or an instance of Zend_Config\n@@ -406,7 +412,7 @@\n      * @param  mixed  $sql  The SQL statement with placeholders.\n      *                      May be a string or Zend_Db_Select.\n      * @param  mixed  $bind An array of data to bind to the placeholders.\n-     * @return Zend_Db_Statement_Interface\n+     * @return mixed  Zend_Db_Statement_Interface or query result.\n      *\/\n     public function query($sql, $bind = array())\n     {\n@@ -425,13 +431,26 @@\n             $bind = array($bind);\n         }\n \n-        \/\/ prepare and execute the statement with profiling\n-        $stmt = $this->prepare($sql);\n-        $stmt->execute($bind);\n+        if ($this->_usePreparedStatements === true) {\n+            \/\/ prepare and execute the statement with profiling\n+            $stmt = $this->prepare($sql);\n+            $stmt->execute($bind);\n \n-        \/\/ return the results embedded in the prepared statement object\n-        $stmt->setFetchMode($this->_fetchMode);\n-        return $stmt;\n+            \/\/ return the results embedded in the prepared statement object\n+            $stmt->setFetchMode($this->_fetchMode);\n+            return $stmt;\n+        }\n+\n+        if (!empty($bind)) {\n+            throw new Zend_Db_Exception('You can\\'t disable prepared statements, yet supply parameters to bind.');\n+        }\n+\n+        $fetchClass = get_class($this) . '_Fetch';\n+        Zend_Loader::loadClass($fetchClass);\n+        return new $fetchClass(\n+            $this->getConnection()->query($sql),\n+            $this->_fetchMode\n+        );\n     }\n \n     \/**\n@@ -1022,6 +1041,24 @@\n     }\n \n     \/**\n+     * Enable or disable prepared statements here.\n+     *\n+     * @param bool $use 'true' or 'false'.\n+     *\n+     * @return self\n+     * @uses   self::$_usePreparedStatements\n+     *\/\n+    public function usePrepared($use)\n+    {\n+        if ($use === true) {\n+            $this->_usePreparedStatements = $use;\n+            return $this;\n+        }\n+        $this->_usePreparedStatements = false;\n+        return $this;\n+    }\n+\n+    \/**\n      * Abstract Methods\n      *\/\n{code}\n\nAnd here is some code demonstrating usage:\n\n{code:title=example}\n<?php\nset_include_path('.:' . dirname(__FILE__) . '\/trunk\/library');\n\nrequire_once 'Zend\/Loader.php';\nrequire_once 'Zend\/Db.php';\nrequire_once 'Zend\/Db\/Select.php';\n\ntry {\n    $db = Zend_Db::factory(\n        'Mysqli',\n        array(\n            'username' => 'root',\n            'password' => '',\n            'host'     => 'localhost',\n            'dbname'   => 'mysql'\n        )\n    );\n    $db->usePrepared(true);\n\n    $select = $db->select();\n    $select->from('user', array('Host', 'User'));\n\n    var_dump($db->fetchAssoc($select));\n\n\n    $db->usePrepared(false);\n\n    $select->reset();\n    $select = $db->select();\n    $select->from('user', array('Host', 'User'));\n\n    var_dump($db->fetchAssoc($select));\n\n} catch (Exception $e) {\n    die($e->getMessage());\n}\n{code}\n\nI briefly ran tests and it didn't break anything, but no guarantees. ;-) I also cloned the tests for the Mysqli driver and ran them with {{usePrepared()}} and it worked. This is just an idea.\n\nThe {{usePrepared()}} call is more or less an idea to change the behaviour on run time. I also envision a config option which you can pass in with a {{Zend_Config}} object or an array.\n\nI think by default this should be disabled but that would break BC so I guess I could live with it the other way around too. Haven't made up my mind up though, I just needed to get rid off prepared queries.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=till",
                        "name": "till",
                        "displayName": "Till Klampaeckel",
                        "active": true
                    },
                    "created": "2009-02-26T11:19:40.000+0000",
                    "updated": "2009-02-28T09:01:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29139",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=beberlei",
                        "name": "beberlei",
                        "displayName": "Benjamin Eberlei",
                        "active": true
                    },
                    "body": "The fix looks good, by default i would enable the preparing of statements and allow to pass a config value to disable it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=beberlei",
                        "name": "beberlei",
                        "displayName": "Benjamin Eberlei",
                        "active": true
                    },
                    "created": "2009-02-26T14:26:08.000+0000",
                    "updated": "2009-02-26T14:26:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32638",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Why is there the requirement that non-preparable queries must go through query?\n\nWhy not add a method called execute() ?\nOR- why not simply use the Statement? or the getConnection()?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-07-17T08:48:06.000+0000",
                    "updated": "2009-07-17T08:48:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33536",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jimbojsb",
                        "name": "jimbojsb",
                        "displayName": "Josh Butts",
                        "active": true
                    },
                    "body": "I agree that this should be possible to do, but don't necessary agree with the API implementation outlined in the patch above",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jimbojsb",
                        "name": "jimbojsb",
                        "displayName": "Josh Butts",
                        "active": true
                    },
                    "created": "2009-08-17T11:16:20.000+0000",
                    "updated": "2009-08-17T11:16:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38544",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kokx",
                        "name": "kokx",
                        "displayName": "Pieter Kokx",
                        "active": true
                    },
                    "body": "I attached a patch for this issue. It does only contain a fix for PDO adapters yet, other adapters will fail because there is an abstract function missing.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kokx",
                        "name": "kokx",
                        "displayName": "Pieter Kokx",
                        "active": true
                    },
                    "created": "2010-02-18T11:21:39.000+0000",
                    "updated": "2010-02-18T11:21:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49116",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "This issue is specifically mentioned in the Zend\\Db RFC for ZFv2.  However, is this something which should be fixed in ZFv1 as well?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-11-17T02:08:06.000+0000",
                    "updated": "2011-11-17T02:08:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50496",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "This won't be fixed in ZFv1",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-06T13:02:40.000+0000",
                    "updated": "2012-05-06T13:02:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1398\/transitions"
}