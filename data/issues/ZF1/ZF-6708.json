{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6708",
    "key": "ZF-6708",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Filter_Input skips ALLOW_EMPTY metacommand processing if any validator is applied to the field"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6708\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10330",
                    "id": 10330,
                    "description": "Mini Release",
                    "name": "1.8.2",
                    "userReleaseDate": "27\/May\/09",
                    "archived": false,
                    "releaseDate": "2009-05-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-05-22T08:03:24.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-05-18T05:48:41.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-10-25T10:31:56.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend_Filter_Input skips ALLOW_EMPTY metacommand processing if any validator is applied to the field:\n\n{code}\n\/**\n * @param array $validatorRule\n * @return void\n *\/\nprotected function _validateRule(array $validatorRule)\n{\n    ....\n    \/**\n     * Evaluate the inputs against the validator chain.\n     *\/\n    if (count((array) $validatorRule[self::FIELDS]) > 1) {\n        if (!$validatorRule[self::VALIDATOR_CHAIN]->isValid($data)) {\n            $this->_invalidMessages[$validatorRule[self::RULE]] = $validatorRule[self::VALIDATOR_CHAIN]->getMessages();\n            $this->_invalidErrors[$validatorRule[self::RULE]] = $validatorRule[self::VALIDATOR_CHAIN]->getErrors();\n            return;\n        }\n    ....\n{code}\n\n{code}\nforeach ($field as $value) {\n    if (empty($value)) {\n        if ($validatorRule[self::ALLOW_EMPTY] == true) {\n            continue;\n        }\n        if ($validatorRule[self::VALIDATOR_CHAIN_COUNT] == 0) {\n            $notEmptyValidator = $this->_getValidator('NotEmpty');\n            $notEmptyValidator->setMessage($this->_getNotEmptyMessage($validatorRule[self::RULE], $fieldKey));\n            $validatorRule[self::VALIDATOR_CHAIN]->addValidator($notEmptyValidator);\n        }\n    }\n{code}\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6708\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10180",
                    "id": 10180,
                    "name": "Zend_Filter_Input",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31101",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "body": "That was probably done to avoid 'empty value' messages duplication since these messages may come from Validators as well as from Zend_Filter_Input::ALLOW_EMPTY metacommand.\n\nThere are two options:\n* Zend_Filter_Input should interact with Validators in terms of messages semantics and skip their 'empty string' messages.\n* Throw all messages. So user will be responsibile to turn on Zend_Filter_Input::ALLOW_EMPTY (which is off by default) for specified field.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "created": "2009-05-18T06:09:29.000+0000",
                    "updated": "2009-05-18T06:09:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31109",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "body": "Right behavior is to skip any validation and throw NOT_EMPTY_MESSAGE if empty value is not allowed, but present.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "created": "2009-05-18T07:59:38.000+0000",
                    "updated": "2009-05-18T07:59:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31260",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "body": "Fixed",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "created": "2009-05-22T08:03:23.000+0000",
                    "updated": "2009-05-22T08:03:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34501",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "body": "I think this may have introduced a backwards compatibility break. Scenario:\n\n{code} \n$validation = array(\n  'offset' => array (\n     'digits',\n     'presence' => 'required'\n  )\n)\n\n$params = new Zend_Filter_Input(null, $validation, $this->_getAllParams());\n{code} \n\nPrior to this change, integer values of zero would correctly pass. After this change a zero value results in an empty field error.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kevin",
                        "name": "kevin",
                        "displayName": "Kevin McArthur",
                        "active": true
                    },
                    "created": "2009-09-16T14:34:07.000+0000",
                    "updated": "2009-09-16T14:34:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34545",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Behavior now fixed in trunk and 1.9 release branch; integer 0 is now considered non-empty by the NotEmpty validator.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-09-17T11:59:09.000+0000",
                    "updated": "2009-09-17T11:59:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35530",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sico",
                        "name": "sico",
                        "displayName": "Simon Corless",
                        "active": true
                    },
                    "body": "This fix with the NotEmpty validator has caused me nothing but trouble as it has broken a number of my forms. I used the fact that 0 in PHP is considered empty to validate lists where element 0 is a title thus not required.\r\n\r\nI feel that the NotEmpty validator should behave in exactly the same way as the php function empty() with regards to integer 0. For the time being I have extended the notEmpty validator to disallow integer 0.\r\n\r\nShould we fix this or implement another validator to cover such situations?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sico",
                        "name": "sico",
                        "displayName": "Simon Corless",
                        "active": true
                    },
                    "created": "2009-10-25T10:31:52.000+0000",
                    "updated": "2009-10-25T10:31:52.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6708\/transitions"
}