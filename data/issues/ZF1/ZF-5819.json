{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5819",
    "key": "ZF-5819",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Table_Row_Abstract::setFromArray removes data key\/value pair if key is not a DB column"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5819\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=aldo",
                "name": "aldo",
                "displayName": "Aldo Armiento",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-02-17T14:07:17.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T21:37:52.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Data provided to row by 'setFromArray' method are deleted if the key is not a DB column (key is not present in self::_data array) without call '_transformColumn'.\n\n\\\\\n\n{code:title=Current setFromArray (r13552)|borderStyle=solid}\npublic function setFromArray(array $data)\n{\n\t$data = array_intersect_key($data, $this->_data);\n\n\tforeach ($data as $columnName => $value) {\n\t\t$this->__set($columnName, $value);\n\t}\n\n\treturn $this;\n}\n{code}\n\n{code:title=Proposed change|borderStyle=solid}\npublic function setFromArray(array $data)\n{\n\tforeach ($data as $columnName => $value) {\n\t\t$this->__set($columnName, $value);\n\t}\n\n\treturn $this;\n}\n{code}\n\nThe magic method '__set' (invoked in setFromArray for each key\/value pair):\n\n- call the self::_transformColumn method (used for inflection, for example);\n- check the existence of 'column' in self::_data array (raising an exception if not found).\n\n{code:title=Current __set (r13552)|borderStyle=solid}\npublic function __set($columnName, $value)\n{\n\t$columnName = $this->_transformColumn($columnName);\n\tif (!array_key_exists($columnName, $this->_data)) {\n\t\trequire_once 'Zend\/Db\/Table\/Row\/Exception.php';\n\t\tthrow new Zend_Db_Table_Row_Exception(\"Specified column \\\"$columnName\\\" is not in the row\");\n\t}\n\t$this->_data[$columnName] = $value;\n\t$this->_modifiedFields[$columnName] = true;\n}\n{code}\n\nSo {code}$data = array_intersect_key($data, $this->_data);{code} may be safely removed.\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5819\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10280",
                    "id": 10280,
                    "description": "Mini Release",
                    "name": "1.7.4",
                    "userReleaseDate": "02\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-02",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30358",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=harabanar",
                        "name": "harabanar",
                        "displayName": "Helgi Hrafn Halld\u00f3rsson",
                        "active": true
                    },
                    "body": "When using Oracle the database column names are usually in uppercase, while the names of the input fields are in lower. For that we use the _transformColumn function. When using the setFromArray, when posting data from a form, the array_intersect_key function will return an empty array, and no data will be set.\n\nSo, I vote for this issue to be resolved. \n\nIf the array_intersect_key function must be, I suggest that the _transformColumn function is used before, so the array keys have been transformed before removal. \n\nHope this will be fixed. For now I have overwritten the setFromArray function and removed the following line\n\n{code}$data = array_intersect_key($data, $this->_data);{code} \n\nps. I am using 1.7.8",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=harabanar",
                        "name": "harabanar",
                        "displayName": "Helgi Hrafn Halld\u00f3rsson",
                        "active": true
                    },
                    "created": "2009-04-24T04:30:21.000+0000",
                    "updated": "2009-04-24T04:30:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37081",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=talentedmrjones",
                        "name": "talentedmrjones",
                        "displayName": "Richard Jones",
                        "active": true
                    },
                    "body": "I wholeheartedly concur. In my applications I prefer to hide the column names from the user in forms and rely on _transformColumn for column name mapping. So in some cases where setFromArray is used I have to override that function in my concrete row class rather than modifying core.\r\n\r\nI dont see an issue with removing the array_intersect_key function, as the current implementation of __set() will catch column names that do not exist in the row.\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=talentedmrjones",
                        "name": "talentedmrjones",
                        "displayName": "Richard Jones",
                        "active": true
                    },
                    "created": "2009-12-19T12:21:50.000+0000",
                    "updated": "2009-12-19T12:21:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43638",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=starflash",
                        "name": "starflash",
                        "displayName": "starflash",
                        "active": true
                    },
                    "body": "I agree.\r\n\r\nFor example:\r\n\r\nThe db table has tow columns: test_1, test_2 .\r\n\r\nmy _transformColumn function is:\r\n\r\n'test_one' => 'test_1',\r\n'test_two' => 'test_2',\r\n\r\nwhen I invoke setFromArray(array('test_one' => 'abc', 'test_two' => 'abc)), and no data will be set.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=starflash",
                        "name": "starflash",
                        "displayName": "starflash",
                        "active": true
                    },
                    "created": "2010-12-17T01:29:10.000+0000",
                    "updated": "2010-12-17T01:29:10.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5819\/transitions"
}