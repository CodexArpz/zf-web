{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2112",
    "key": "ZF-2112",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Adapter_Interface::fetchCol() does not properly retrieve a column on single column SQL statements."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 1440,
                "timeestimate": 1440
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2112\/votes",
                "votes": 5,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10331",
                    "id": 10331,
                    "description": "Mini Release",
                    "name": "1.8.3",
                    "userReleaseDate": "09\/Jun\/09",
                    "archived": false,
                    "releaseDate": "2009-06-09",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-05-29T07:59:06.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kekoav",
                "name": "kekoav",
                "displayName": "Kekoa Vincent",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-10-29T20:18:45.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-03-28T02:12:07.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When using a Mysqli adapter(not sure if this occurs with others) the following produces an error:\r\n\r\n{code}$column = $db->fetchCol(\"SELECT areaID FROM userPermissions WHERE userID='$userID'\");{code}\r\n\r\nWarning: mysqli_stmt::bind_param() [function.mysqli-stmt-bind-param]: Number of variables doesn't match number of parameters in prepared statement in \/usr\/home\/sciworld\/application\/library\/Zend\/Db\/Statement\/Mysqli.php on line 241\r\n\r\nThis occurs independent of if a column index is provided.\r\n\r\nInterestingly, the following code does work correctly:\r\n\r\n{code}$stmnt = $db->query(\"SELECT areaID FROM userPermissions WHERE userID='$userID'\");\r\n$column = $stmnt->fetchColumn();{code}\r\n\r\nIt seems perhaps the parsing of the statement in the first case is not functioning properly, although admittedly I don't have much experience with Zend_Db.  I do know the documentation does indicate that the first case should work identically to the second, which is not the case(unless I am missing something here)."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date",
            "value": "2009-01-23"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/customFieldOption\/10039",
                "value": "  Should Have"
            }
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2112\/watchers",
                "isWatching": false,
                "watchCount": 5
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=satoruyoshida",
                "name": "satoruyoshida",
                "displayName": "Satoru Yoshida",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-6788",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6788",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-5204",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5204",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-6603",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6603",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10130",
                    "id": 10130,
                    "description": "Mini Release",
                    "name": "1.0.2",
                    "userReleaseDate": "25\/Sep\/07",
                    "archived": true,
                    "releaseDate": "2007-09-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20125",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This issue should have been fixed for the 1.5 release.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-21T17:05:34.000+0000",
                    "updated": "2008-03-21T17:05:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20358",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please categorize\/fix as needed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-25T20:43:59.000+0000",
                    "updated": "2008-03-25T20:43:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20976",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:11:54.000+0000",
                    "updated": "2008-04-18T13:11:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21949",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                        "name": "peptolab",
                        "displayName": "Simon Mundy",
                        "active": true
                    },
                    "body": "What's the final SQL query? What does $userID resolve to? I can't reproduce this here but if you can supply any additional information it will help immensely.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                        "name": "peptolab",
                        "displayName": "Simon Mundy",
                        "active": true
                    },
                    "created": "2008-05-26T18:50:48.000+0000",
                    "updated": "2008-05-26T18:50:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22633",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cole.snodgrass",
                        "name": "cole.snodgrass",
                        "displayName": "Cole Snodgrass",
                        "active": true
                    },
                    "body": "It appears that this is still happening (verified in 1.5.2) if the where statement is searching for a column with an id of 0 and the column being returned has a 0 in it.\n\n*Repro:*\n{code}\nmysql> CREATE TABLE cds_delete ( id SMALLINT NOT NULL DEFAULT 0, name VARCHAR(10) NOT NULL DEFAULT '') ENGINE=innodb;\nQuery OK, 0 rows affected (0.07 sec)\n\nmysql> INSERT INTO cds_delete VALUES (0, 'zero'), (1, 'one'), (2, 'two');\nQuery OK, 3 rows affected (0.01 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> select * from cds_delete;\n+----+------+\n| id | name |\n+----+------+\n|  0 | zero | \n|  1 | one  | \n|  2 | two  | \n+----+------+\n3 rows in set (0.00 sec)\n\n<?php\nrequire_once 'Zend\/Db.php';\n$db = Zend_Db::factory('Mysqli', array(...));\n\nvar_dump(\n    $db->fetchCol(\"SELECT id FROM cds_delete WHERE id IN (0, 1, 2)\"),\n    $db->fetchCol(\"SELECT id FROM cds_delete WHERE id IN (1, 2)\"),\n    $db->fetchCol(\"SELECT name FROM cds_delete WHERE id IN (0, 1, 2)\"),\n    $db->fetchCol(\"SELECT name FROM cds_delete WHERE id IN (1, 2)\")\n);\n?>\n{code}\n*Expected Result:*\n{code}\narray(3) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n}\narray(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\narray(3) {\n  [0]=>\n  string(4) \"zero\"\n  [1]=>\n  string(3) \"one\"\n  [2]=>\n  string(3) \"two\"\n}\narray(2) {\n  [0]=>\n  string(3) \"one\"\n  [1]=>\n  string(3) \"two\"\n}\n{code}\n\n*Actual Result:*\n{code}\narray(0) {\n}\narray(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\narray(3) {\n  [0]=>\n  string(4) \"zero\"\n  [1]=>\n  string(3) \"one\"\n  [2]=>\n  string(3) \"two\"\n}\narray(2) {\n  [0]=>\n  string(3) \"one\"\n  [1]=>\n  string(3) \"two\"\n}\n{code}\n\nNotice that the first fetchCol is returning an empty arrays instead of the expected results.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cole.snodgrass",
                        "name": "cole.snodgrass",
                        "displayName": "Cole Snodgrass",
                        "active": true
                    },
                    "created": "2008-06-25T12:44:12.000+0000",
                    "updated": "2008-06-25T12:44:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/22634",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cole.snodgrass",
                        "name": "cole.snodgrass",
                        "displayName": "Cole Snodgrass",
                        "active": true
                    },
                    "body": "I traced this issue down to the *Zend_Db_Statement::fetchAll* function and determined this is due to improper type checking.\n{code:title=Zend_Db_Statement::fetchAll}\n    public function fetchAll($style = null, $col = null)\n    {\n        $data = array();\n        if ($style === Zend_Db::FETCH_COLUMN && $col === null) {\n            $col = 0;\n        }\n        if ($col === null) {\n            while ($row = $this->fetch($style)) {\n                $data[] = $row;\n            }\n        } else {\n            while ($val = $this->fetchColumn($col)) {\n                $data[] = $val;\n            }\n        }\n        return $data;\n    }\n\n{code}\nNotice that both {{while}} loops are not checking the types returned from {{fetchColumn}} and {{fetch}}, therefore anything that could evaluate to a false will cause the {{while}} loop to terminate.  This is why when the integer 0 is being returned by the {{fetchColumn}} method, nothing is being returned.\n\nUpdating the code to verify that a boolean false was returned appears to fix this issue (I can only vouch that this fixes the fetchCol issue, I didn't bother to look into what {{fetch}} should\/could return so that should still be verified).\n{code:title=Zend_Db_Statement::fetchAll updated}\n    public function fetchAll($style = null, $col = null)\n    {\n        $data = array();\n        if ($style === Zend_Db::FETCH_COLUMN && $col === null) {\n            $col = 0;\n        }\n        if ($col === null) {\n            while (($row = $this->fetch($style)) !== false) {\n                $data[] = $row;\n            }\n        } else {\n            while (($val = $this->fetchColumn($col)) !== false) {\n                $data[] = $val;\n            }\n        }\n        return $data;\n    }\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cole.snodgrass",
                        "name": "cole.snodgrass",
                        "displayName": "Cole Snodgrass",
                        "active": true
                    },
                    "created": "2008-06-25T13:10:29.000+0000",
                    "updated": "2008-06-25T13:10:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27825",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This issue has gone unaddressed for too long. I'm re-assigning to Ralph for re-evaluation and categorization.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2009-01-06T14:33:40.000+0000",
                    "updated": "2009-01-06T14:33:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27965",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Will evaluate within 2 weeks",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-01-10T10:22:48.000+0000",
                    "updated": "2009-01-10T10:22:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28386",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tommygun",
                        "name": "tommygun",
                        "displayName": "Tomasz Gunerski",
                        "active": true
                    },
                    "body": "Cole Snodgrass solution is incorrect for Mysqli adapter. False is returned only when error will occurre, when stmt cursor reaches the end of data NULL will be returned.\nMore about this here:\nhttp:\/\/php.net\/manual\/en\/mysqli-stmt.fetch.php\n\nProper solution:\n{code:title=Zend\/Db\/Statement.php|borderStyle=solid}\npublic function fetchAll($style = null, $col = null)\n{\n\t$data = array();\n\tif ($style === Zend_Db::FETCH_COLUMN && $col === null) {\n\t\t$col = 0;\n\t}\n\tif ($col === null) {\n\t\twhile ($row = $this->fetch($style)) {\n\t\t\t$data[] = $row;\n\t\t}\n\t} else {\n\t\twhile (false !== $val = $this->fetchColumn($col)) {\n\t\t\tif ($val === null)\n\t\t\t\tbreak;\n\t\t\t$data[] = $val;\n\t\t}\n\t}\n\treturn $data;\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tommygun",
                        "name": "tommygun",
                        "displayName": "Tomasz Gunerski",
                        "active": true
                    },
                    "created": "2009-01-21T20:05:16.000+0000",
                    "updated": "2009-01-21T20:05:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31081",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "body": "can not reproduce",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "created": "2009-05-16T18:02:42.000+0000",
                    "updated": "2009-05-16T18:02:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31469",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "body": "Reopen for ZF-6788",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "created": "2009-05-29T07:25:01.000+0000",
                    "updated": "2009-05-29T07:25:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31472",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "body": "add \"false !== \" condition  to \"$val = $this->fetchColumn($col)\".\n\nBut I think the problem with mysql  should be issue on fetch() method.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yoshida@zend.co.jp",
                        "name": "yoshida@zend.co.jp",
                        "displayName": "old of Satoru Yoshida",
                        "active": true
                    },
                    "created": "2009-05-29T07:59:06.000+0000",
                    "updated": "2009-05-29T07:59:06.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2112\/transitions"
}