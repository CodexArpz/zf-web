{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10971",
    "key": "ZF-10971",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "unable to setup a REST route for a specific module in configuration file (.ini)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10971\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=goriol",
                "name": "goriol",
                "displayName": "Guillaume ORIOL",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-01-20T09:46:08.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-03-22T23:17:49.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The Zend_Application_Resource_Router resource plugin calls the addConfig($config) method of the front controller router (ie Zend_Controller_Router_Rewrite) passing to it the subset of the configuration file starting by \"resources.router.routes.*\"\r\n\r\nIn my use case:\r\nresources.router.routes.rest.type = \"Zend_Rest_Route\"\r\nresources.router.routes.rest.modules = \"rest\"\r\n\r\nThe router will then call the getInstance() method of the specified route (here Zend_Rest_Route) with the same $config argument.\r\n\r\nHere is the problem: that method (getInstance) will only produce arrays as the item values of $restfulConfigArray (responders).\r\n(Furthermore, the test will fail with numeric keys as an equality operator \"==\" is used instead of an identity \"===\" operator to check if the key is \"type\".)\r\n\r\nAt last, getInstance() will instantiate the route with its class constructor that calls _parseResponders($responders). Unfortunately, this method determines which modules or controolers are RESTful by checking the type of the responders: if they are arrays or not.\r\n\r\nI would suggest to change the getInstance method this way:\r\n{code}\r\n    public static function getInstance(Zend_Config $config)\r\n    {\r\n        $frontController = Zend_Controller_Front::getInstance();\r\n        $defaultsArray = array();\r\n        $restfulConfigArray = array();\r\n        foreach ($config as $key => $values) {\r\n            if ($key === 'type') {\r\n                \/\/ do nothing\r\n        \t} elseif ($key === 'defaults') {\r\n        \t    $defaultsArray = $values->toArray();\r\n        \t} else {\r\n        \t    if (false === strpos($values, ',')) {\r\n        \t        $restfulConfigArray[] = $key;\r\n        \t    } else {\r\n        \t        $restfulConfigArray[$key] = explode(',', $values);\r\n        \t    }\r\n        \t}\r\n        }\r\n\r\n        $instance = new self($frontController, $defaultsArray, $restfulConfigArray);\r\n        return $instance;\r\n    }\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10971\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lcrouch",
                "name": "lcrouch",
                "displayName": "Luke Crouch",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-9778",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9778",
                    "type": {
                        "name": "Duplicate",
                        "direction": "OUTBOUND",
                        "description": "duplicates"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10520",
                    "id": 10520,
                    "description": "Mini Release",
                    "name": "1.11.2",
                    "userReleaseDate": "30\/Dec\/10",
                    "archived": false,
                    "releaseDate": "2010-12-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10422",
                    "id": 10422,
                    "name": "Zend_Rest_Route",
                    "description": "Includes both Zend_Rest_Route and Zend_Rest_Controller",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44148",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nicklevett",
                        "name": "nicklevett",
                        "displayName": "Nick Levett",
                        "active": true
                    },
                    "body": "I'm hitting this as well trying to add two modules as RESTful. I'm not sure what the correct syntax is as well...\r\n\r\n{code:none}\r\nroutes.rest.type = Zend_Rest_Route\r\nroutes.rest.modules = site,cms\r\n{code}\r\n\r\nWill hit $restfulConfigArray[$key] = explode(',', $values); and then fail in _parseResponders function.\r\n\r\nI've modified the patch slightly:\r\n\r\n{code:none}\r\n    \/**\r\n     * Instantiates route based on passed Zend_Config structure\r\n     *\/\r\n    public static function getInstance(Zend_Config $config)\r\n    {\r\n        $frontController = Zend_Controller_Front::getInstance();\r\n        $defaultsArray = array();\r\n        $restfulConfigArray = array();\r\n        foreach ($config as $key => $values) {\r\n            if ($key === 'type') {\r\n                \/\/ do nothing\r\n            } elseif ($key === 'defaults') {\r\n                $defaultsArray = $values->toArray();\r\n            } else {\r\n                if (false === strpos($values, ',')) {\r\n                    $restfulConfigArray[$key] = $values;\r\n                } else {\r\n                    $restfulConfigArray[$key] = explode(',', $values);\r\n                }\r\n            }\r\n        }\r\n        $instance = new self($frontController, $defaultsArray, $restfulConfigArray);\r\n        return $instance;\r\n    }\r\n{code}\r\n\r\nWhich allows:\r\n\r\n{code:none}\r\nroutes.siterest.type = Zend_Rest_Route\r\nroutes.siterest.module = site\r\n\r\nroutes.cmsrest.type = Zend_Rest_Route\r\nroutes.cmsrest.module = cms\r\n{code}\r\n\r\nI do however believe my original syntax of routes.rest.modules = site,cms should work but would require the _parseResponders function to be rewritten.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nicklevett",
                        "name": "nicklevett",
                        "displayName": "Nick Levett",
                        "active": true
                    },
                    "created": "2011-01-24T04:44:54.000+0000",
                    "updated": "2011-01-24T04:44:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44157",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=goriol",
                        "name": "goriol",
                        "displayName": "Guillaume ORIOL",
                        "active": true
                    },
                    "body": "As you said, we are not sure what syntax is expected in configuration file.\r\n\r\nWhen I wrote that patch, I was expecting something like this:\r\n{code}\r\nroutes.siterest.type = Zend_Rest_Route\r\nroutes.siterest.site =\r\n{code}\r\n\r\nLet me explain why. The documentation specifies this syntax (1) for a whole module:\r\n{code}\r\n$front = Zend_Controller_Front::getInstance();\r\n$restRoute = new Zend_Rest_Route($front, array(), array('product'));\r\n$front->getRouter()->addRoute('rest', $restRoute);\r\n{code}\r\nand this one (2) for specific controllers in a module:\r\n{code}\r\n$front = Zend_Controller_Front::getInstance();\r\n$restRoute = new Zend_Rest_Route($front, array(),\r\n    array('product' => array('ratings')\r\n));\r\n$front->getRouter()->addRoute('rest', $restRoute);\r\n{code}\r\n\r\nIn use case (1), the module name is the value; but in use case (2) the module name is the key. That is what I tried to mimic with this patch.\r\n\r\nWe obviously need some clarifications on this syntax.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=goriol",
                        "name": "goriol",
                        "displayName": "Guillaume ORIOL",
                        "active": true
                    },
                    "created": "2011-01-24T05:36:28.000+0000",
                    "updated": "2011-01-24T05:36:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45574",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rafeca",
                        "name": "rafeca",
                        "displayName": "Rafael Oleza Alomar",
                        "active": true
                    },
                    "body": "This issue is a duplicate of ZF-9778",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rafeca",
                        "name": "rafeca",
                        "displayName": "Rafael Oleza Alomar",
                        "active": true
                    },
                    "created": "2011-03-22T23:17:49.000+0000",
                    "updated": "2011-03-22T23:17:49.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10971\/transitions"
}