{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1194",
    "key": "ZF-1194",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "findDependentRowset() - unnecessary query to database."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1194\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10080",
                    "id": 10080,
                    "description": "Beta Release; bug fixes",
                    "name": "0.9.3",
                    "userReleaseDate": "05\/May\/07",
                    "archived": true,
                    "releaseDate": "2007-05-05",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-04-17T18:24:28.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alan.bem",
                "name": "alan.bem",
                "displayName": "Alan Gabriel Bem",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-04-03T19:57:29.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:44:02.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In current implementation of Zend_Db_Table_Row_Abstract::findDependentRowset() every call to this method (except when object is passed as a parameter) creates new instance of dependent table. It can cause unnecessary query to database (metadata).\n\nI think this can fix the problem:\n\n{code}    public function findDependentRowset($dependentTable, $ruleKey = null) \n    { \n        $db = $this->_getTable()->getAdapter();\n\n        if (is_string($dependentTable)) {\n        \tif (isset(self::$_runtimeDependentTables[$dependentTable])) {\n        \t    $dependentTable = self::$_runtimeDependentTables[$dependentTable];\n        \t} else {\n        \t    try {\n                        Zend_Loader::loadClass($dependentTable);\n                    } catch (Zend_Exception $e) {\n                        require_once 'Zend\/Db\/Table\/Row\/Exception.php';\n                        throw new Zend_Db_Table_Row_Exception($e->getMessage());\n                    };\n                    $dependentTable = new $dependentTable(array('db' => $db));\n                    self::$_runtimeDependentTables[get_class($dependentTable)] = $dependentTable;\n        \t};\n        };\n        \n        if (! $dependentTable instanceof Zend_Db_Table_Abstract) {\n            $type = gettype($dependentTable);\n            if ($type == 'object') {\n                $type = get_class($dependentTable);\n            }\n            require_once 'Zend\/Db\/Table\/Row\/Exception.php';\n            throw new Zend_Db_Table_Row_Exception(\"Dependent table must be a Zend_Db_Table_Abstract, but it is $type\");\n        }\n        $dependentTableClass = get_class($dependentTable);\n\n        $map = $this->_prepareReference($dependentTable, $this->_tableClass, $ruleKey);\n\n        for ($i = 0; $i < count($map[Zend_Db_Table_Abstract::COLUMNS]); ++$i) {\n            $cond = $db->quoteIdentifier($map[Zend_Db_Table_Abstract::COLUMNS][$i]) . ' = ?';\n            $where[$cond] = $this->_data[$map[Zend_Db_Table_Abstract::REF_COLUMNS][$i]];\n        }\n        return $dependentTable->fetchAll($where);\n    }{code}\n\nOf course self::$_runtimeDependentTables must to be declared first.\n\n{code}    \/**\n     * Stores instances of dependent tables as values, using their\n     * classnames as keys.\n     *\n     * @var array\n     *\/\n    protected static $_runtimeDependentTables = array();{code}\n\nP.S. This is quick fix - the real problem exists in Zend_Db_Table_Abstract."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1194\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10060",
                    "id": 10060,
                    "description": "Beta Release; bug fixes",
                    "name": "0.9.1",
                    "userReleaseDate": "23\/Mar\/07",
                    "archived": true,
                    "releaseDate": "2007-03-23",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/13942",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Thanks for the suggestion Alan.\n\nAn alternative solution would be to cache metadata using Zend_Cache, so that creating an instance of the dependent table's class does not incur the expense of querying the database for metadata.  The advantage of that kind of solution is that the cache lasts longer than a single PHP application request.\n\nSee notes about a metadata caching solution in ZF-858.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-04-03T20:24:00.000+0000",
                    "updated": "2007-04-03T20:24:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14257",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Resolving as Won't Fix.  We have decided to implement the metadata caching solution in ZF-858.  This will solve the issue mentioned above, in a more general way.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-04-17T18:24:28.000+0000",
                    "updated": "2007-04-17T18:24:28.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1194\/transitions"
}