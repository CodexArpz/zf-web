{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-739",
    "key": "ZF-739",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Ability to configure LevelKey character or string"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-739\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10022",
                    "id": 10022,
                    "description": "Beta Release; all components feature complete for 1.0",
                    "name": "0.9.0",
                    "userReleaseDate": "17\/Mar\/07",
                    "archived": true,
                    "releaseDate": "2007-03-17",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-03-14T15:54:58.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-01-11T12:02:28.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:39.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I currently have a project that defines valid 'primitives' (which become xml nodes) in the form of something.something2\n\nFor example, i would like to do the following:\n\n[primitives]\nbyte.ascii:valid_operators = \"eq,ne\"\nbyte.string:valid_operators = \"eq,ne\"\n\n\nyou get the drift.\n\nI would love to see an api similar to \n\nZend_Config_Ini::load($filename, $section, array('level_key_character' => ':'));\n\nAny chance? Is this asking too much?\n\n-ralph\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-739\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                "name": "rob",
                "displayName": "Rob Allen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10040",
                    "id": 10040,
                    "description": "Preview Release; MVC maturation, HTTP client, Gdata",
                    "name": "0.6.0",
                    "userReleaseDate": "16\/Dec\/06",
                    "archived": true,
                    "releaseDate": "2006-12-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10010",
                    "id": 10010,
                    "name": "Zend_Config",
                    "description": "property based interface to an array",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12239",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Hi Ralph,\n\nDo you mean that you just want Zend_Config_Ini to provide the choice of which character to use as the \"nesting\" separator?\n\nI suspect that it would be rarely used, so cluttering up the constructor's parameter list is less desirable to me. How about a static function such as setNestSeparator()?\n\nYou would then do \n{code}\nZend_Config_Ini::setNestSeparator(':');\n$config = new Zend_Config_Ini($filename, $section);\n{code}\n\nWhilst writing this, it's dawned on me that the alternative is to change the last parameter on the constructor as you suggest so that instead of being a boolean, it is an array called $options. That might be more flexible long term?\n\nRegards,\n\nRob...",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-15T08:34:55.000+0000",
                    "updated": "2007-01-15T08:34:55.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12244",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "The only problem with setting the Nest Separator statically is that it will then affect all INI instances, not just the one that I want it to operate on.. wouldn't be a biggie, but it means is that to be safe, you'd have to do something like:\n\n{code}\nZend_Config_Ini::setNestSeparator(':');\n$config = new Zend_Config_Ini($filename, $section);\nZend_Config_Ini::setNestSeparator(Zend_Config_Ini::NEST_DEFAULT);\n{code}\n\nI think that yes, the ability to specify options to otherwise static features is a good thing in general, plus, (and while this is considered an edge case).. allows for the most flexibility long term.  I've reviewed the code in INI and currently, this seems like the only place that is candidate for optional configurations.. \n\nThat being said, i think yes, a 3rd optional parameter would be nice.  You could potentially accept a mixed type parameter named options allowing for the following:\n\n$ini = new Zend_Config_Ini($filename, $section, Zend_Config_Ini::READONLY);\nor $ini = new Zend_Config_Ini($filename, $section, array('nest_separator' => ':', 'read_only' => true));\nor $ini = new Zend_Config_Ini($filename, $section, array('nest_separator' => ':'));\n\nSince the last parameter is optional, i see no drawbacks in making it a mixed parameter that can be clearly defined in the manual.\n\nmy 3cents ;)\n\n-ralph",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2007-01-15T12:48:18.000+0000",
                    "updated": "2007-01-15T12:48:18.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12286",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Proposed patch v1:\n\n{code}\nIndex: Ini.php\n===================================================================\n--- Ini.php\t(revision 2898)\n+++ Ini.php\t(working copy)\n@@ -34,6 +34,8 @@\n  *\/\n class Zend_Config_Ini extends Zend_Config\n {\n+    protected $_nestSeparator= '.';\n+\n     \/**\n      * Loads the section $section from the config file $filename for\n      * access facilitated by nested object properties.\n@@ -64,12 +66,24 @@\n      * @param boolean $allowModifications\n      * @throws Zend_Config_Exception\n      *\/\n-    public function __construct($filename, $section, $allowModifications = false)\n+    public function __construct($filename, $section, $config = false)\n     {\n         if (empty($filename)) {\n             throw new Zend_Config_Exception('Filename is not set');\n         }\n+        $allowModifications = false;\n \n+        if (is_bool($config)) {\n+            $allowModifications = $config;\n+        } elseif (is_array($config)) {\n+            if (isset($config['allowModifications'])) {\n+                $allowModifications = (bool)$config['allowModifications'];\n+            }\n+            if (isset($config['nestSeparator'])) {\n+                $this->_nestSeparator = $config['nestSeparator'];\n+            }\n+        }\n+\n         $iniArray = parse_ini_file($filename, true);\n         $preProcessedArray = array();\n         foreach ($iniArray as $key => $data)\n@@ -161,8 +175,8 @@\n      *\/\n     protected function _processKey($config, $key, $value)\n     {\n-        if (strpos($key, '.') !== false) {\n-            $pieces = explode('.', $key, 2);\n+        if (strpos($key, $this->_nestSeparator) !== false) {\n+            $pieces = explode($this->_nestSeparator, $key, 2);\n             if (strlen($pieces[0]) && strlen($pieces[1])) {\n                 if (!isset($config[$pieces[0]])) {\n                     $config[$pieces[0]] = array();\n\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-18T15:21:23.000+0000",
                    "updated": "2007-01-18T15:21:23.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12287",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "test:\n{code}\nIndex: IniTest.php\n===================================================================\n--- IniTest.php\t(revision 2898)\n+++ IniTest.php\t(working copy)\n@@ -35,6 +35,7 @@\n         $this->_iniFileAllSectionsConfig = dirname(__FILE__) . '\/_files\/allsections.ini';\n         $this->_iniFileCircularConfig = dirname(__FILE__) . '\/_files\/circular.ini';\n         $this->_iniFileMultipleInheritanceConfig = dirname(__FILE__) . '\/_files\/multipleinheritance.ini';\n+        $this->_iniFileSeparatorConfig = dirname(__FILE__) . '\/_files\/separator.ini';\n     }\n \n     public function testLoadSingleSection()\n@@ -205,4 +206,14 @@\n         }\n \n     }\n+\n+    public function testZF739()\n+    {\n+        $config = new Zend_Config_Ini($this->_iniFileSeparatorConfig, 'all', array('nestSeparator'=>':'));\n+\n+        $this->assertEquals('all', $config->hostname);\n+        $this->assertEquals('live', $config->db->name);\n+        $this->assertEquals('multi', $config->one->two->three);\n+        $this->assertNull(@$config->nonexistent); \/\/ property doesn't exist\n+    }\n }\n{code}\n\nseparator.ini:\n{code}\n[all]\nhostname = all\nname = thisname\ndb:host = 127.0.0.1\ndb:user = username\ndb:pass = password\ndb:name = live\none:two:three = multi\n\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-01-18T15:26:19.000+0000",
                    "updated": "2007-01-18T15:26:19.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12354",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "This seems to work great within Zend_Config_Ini.  It bails when you are attempting to traverse with Zend_Config.  I think the offending line is the call to _isValidKey(...)\n\nFor example:\n\nassuming this config:\n{code}\n[production]\n\ndevelopment_mode                            = false\n\ndatabase\/driver                             = \"PDO_MYSQL\"\ndatabase\/parameters\/username                = \"test\"\ndatabase\/parameters\/password                = \"test\"\ndatabase\/parameters\/dbname                  = \"test\"\ndatabase\/parameters\/profiler                = false\n\ncontroller\/controller_directory.1             = \"..\/application\/user\/controllers\"\ncontroller\/controller_directory.2             = \"..\/application\/user\/controllers2\"\ncontroller\/controller_directory.3             = \"..\/application\/user\/controllers3\"\n\n{code}\n\nAnd this in bootstrap:\n\n{code}\n$config = new Zend_Config_Ini('..\/application\/config\/config.ini', $config_type, array('nestSeparator' => '\/'));\n{code}\n\ni get this error:\n\nInvalid key: 'controller_directory.1'",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2007-01-24T12:43:00.000+0000",
                    "updated": "2007-01-24T12:43:00.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13066",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "I am not entirely convinced that the ZF should encourage and support a multitude of different syntax for the ini files.  There is some value in having a standardized format with standardized separators (e.g. reduces learning curve, encourages portability and readability).  However, I can understand that some individuals will want to use a character other than the period for the separator.  Clearly, there are trade-offs.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-03-01T13:45:20.000+0000",
                    "updated": "2007-03-01T13:45:20.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13084",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "It's that tricky compromise between being predictable verses flexible. \n\nI'm generally thinking this is a good idea as without it you can't load any legacy INI file that doesn't expect a \".\" to be a hierarchical separator.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-03-02T00:17:10.000+0000",
                    "updated": "2007-03-02T00:17:10.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13211",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Changed fix version to 0.9.0",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-03-08T14:06:04.000+0000",
                    "updated": "2007-03-08T14:06:04.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13337",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Fixed in svn revision 3938 .",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2007-03-14T15:54:58.000+0000",
                    "updated": "2007-03-14T15:54:58.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-739\/transitions"
}