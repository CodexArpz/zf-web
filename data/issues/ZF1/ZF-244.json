{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-244",
    "key": "ZF-244",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Controller_RewriteRouter: addRoutes() for one hit route loading"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-244\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-07-14T07:45:05.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                "name": "nicklo",
                "displayName": "Nick Lo",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-07-13T00:52:55.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:14.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "To allow adding routes from eg a config file in one hit how about having something along the lines of...\n\n{code} \npublic function addRoutes($routes=array())\n{\n    foreach($routes as $route)\n    {\n        $this->_routes[ $route['name'] ] = new Zend_Controller_Router_Route($route['map'], $route['params'], $route['reqs'] );\n    }\n}\n{code}\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-244\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                "name": "martel",
                "displayName": "Michal Minicki",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10001",
                    "id": 10001,
                    "description": "Preview Release",
                    "name": "0.1.5",
                    "userReleaseDate": "11\/Jul\/06",
                    "archived": true,
                    "releaseDate": "2006-07-11",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10489",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "I don't think this should be in the RewriteRouter itself.  It is trivial to implement outside of the router just by doing a foreach loop which does a $route->addRoute()",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-13T02:13:55.000+0000",
                    "updated": "2006-07-13T02:13:55.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10491",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "body": "I don't disagree with you however, there just seems to be something a little laboured about having to loop over addRoute repeatedly in say a bootstrap file when I'd suspect in most cases you'd be wanting to add a list of routes anyway.\n\nAnyway, thanks for the comment Michael, I was mainly putting the idea up for feedback.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "created": "2006-07-13T03:17:18.000+0000",
                    "updated": "2006-07-13T03:17:18.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10493",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Maybe some integration with Zend_Config? Like a totaly optional loadRoutes method which will take a Zend_Config interfaced object as a parameter? It will cartainly require some standarisation in names though.\n\nAnd I honestly don't know if such coupling is acceptable by Zend.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-07-13T07:40:26.000+0000",
                    "updated": "2006-07-13T07:40:26.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10498",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "body": "Nick, I thought about it and how does this sound?\n\nFirst make a file called something like {{config.routes.php}} that contains something like:\n{noformat}\n<?php\n$config['router']->addRoute('books', 'book\/:author\/:name', array(), array());\n$config['router']->addRoute('films', 'film\/:director\/:title', array(), array());\n$config['router']->addRoute('music', 'music\/:composer\/:title', array(), array());\n{noformat}\n\nThen in your bootstrap (most likely index.php):\n{noformat}\n$router = new Zend_Controller_RewriteRouter();\n$config['router'] = &$router; \/\/ this will reference the $router object you just created\ninclude 'config.routes.php'; \/\/ all your routes will now load into $router\n{noformat}\n\nThis way no looping is needed and is probably the fastest way to do it.  Of course you could just use $router->addRoute directly in your config file but I did it this way to sort of put the config stuff in its own \"namespace\".",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=michael",
                        "name": "michael",
                        "displayName": "Michael Sheakoski",
                        "active": true
                    },
                    "created": "2006-07-13T14:30:47.000+0000",
                    "updated": "2006-07-13T14:30:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10499",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "body": "Thanks Michael S for looking into it some more. Are you thinking about it because you see a need for some means to load in one hit or just for the challenge of the solution?\n\nMichael M\/Martel ...if I'm right you are the original\/main author? If so thanks to you and any other contributors, I have been getting to grips with setting up routes and it's working out nicely, improving urls and cutting down on files as I retro fit a currently running website.\n\nI'm picturing the following vague, untested and speculative use case:\n\nVia an admin form a user can add new routes, eg:\n\nName: privacy\nController: business_article\n\n...which along the way would be interpreted as something like...\n\n{code}\n$router->addRoute('privacy', 'privacy', array('article_name' => 'privacy', 'controller' => 'business_article', 'action' => 'index' ) );\n{code}\n\nThis would allow them to create pseudo static articles. What it would need is a storage area and therefore a means to load from that storage area so yes in some ways a route config of sorts. From my browsing of Django they seem to have this idea in their [URL dispatcher|http:\/\/www.djangoproject.com\/documentation\/url_dispatch\/] and [PythonScriptForParsingUrlConf|http:\/\/code.djangoproject.com\/wiki\/PythonScriptForParsingUrlConf].\n\nAnother *wildly speculative idea* that could spin off from a storage file containing routes is a means to autogenerate stub files for an application based on those configurations. I'm thinking of the [fusebox wireframing tool idea|http:\/\/www.bjork.net\/index.cfm?fuseaction=content.display&page=wireframetool] and how in theory that route configuration would have enough information to kick start the file generation for a project.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "created": "2006-07-13T20:33:30.000+0000",
                    "updated": "2006-07-13T20:33:30.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10503",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Yes, you're right Nick - I'm the original author.\n\nI think your pseudo static articles approach may be a bit inneficient, I would advise to change the route to:\n\n{code}\n$router->addRoute('articles', 'articles\/:article_name', array('article_name' => 'main', 'controller' => 'business_article', 'action' => 'index' ) );\n{code}\n\nThis way every url which resembles 'http:\/\/host.com\/articles\/privacy' will route you to BusinessArticle controller and indexAction of it. There you will have a param named 'article_name' filled with the article name from the URL. But that's a bit off topic ;)\n\nI have given a read to the Django manual you have pointed me to and I think it's a very nice idea to map URLs this way. There is a problem though - you have to be a regexp guru to make a full use of it and we're aiming at every John Doe programmer out there. But I like this approach and can make a custom route or even a new router once I'm finished with this one.\n\nThe URLConf, as I gather, is used primarily to store 'local' url maps which will map routes under the common root. I don't see how it is related to storing a config. I guess you have to elaborate some more because I'm not familiar with Django... yet :)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-07-14T02:17:26.000+0000",
                    "updated": "2006-07-14T02:17:26.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10508",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "body": "To just hang on this off-topic for a bit, I agree that article\/privacy would be a simpler approach but in that example I was taking it from an existing site that has the url as site.com\/privacy.php and the aim\/need was to keep the short url. Wordpress, for example, works in much the same way; having ultra short url's for it's \"Pages\" (which are in fact \"static\" posts) so I would foresee others wanting to retro-fit existing sites using a \"static\" article approach.\n\nBack on topic and I have to admit to not knowing Django well either, I was merely referring to what you picked up on with URLConf. It does appear to be a means to store url maps which is kind of what I was referring to. Storage of url maps in some format that could be recovered and loaded quickly into the router.\n\nI'm not suggesting ZF does it the Django way though, at this point I'm really only asking whether anyone else sees the ability to load in routes in one batch (that would likely come from some type of configuration file)  as something that would be useful. Michael S has already pointed out that a simple loop over addRoute would do the job and if that is as much as people need then I can certainly work with that.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "created": "2006-07-14T04:09:01.000+0000",
                    "updated": "2006-07-14T04:09:01.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10509",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Ok, the most important thing first. I see the point of loading all routes in a batch, all in all you have to do it here or there. The problem is if we are going to include this ability, it has to be easier than looping with a single foreach because it is what you have to do right know. It does makes sense to include some loading mechanism and that's why I have proposed using Zend_Config for that task. But I'm also sure SAVING routes is way out of scope for the router. And that's what they do in Django.\n\nAnd now to the static pages. I have only proposed a better solution. The static mapping of \"pages\" as a one static string is of course possible with the current router. It's just with a lot of pages you will be forced to define a lot of routes instead of one. It will slow down every single request whether it's related to those pages or not. But still, you can define one route of ':article_name' which will match any url with only single level \"directory\" depth.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-07-14T04:26:31.000+0000",
                    "updated": "2006-07-14T04:26:31.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10512",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "body": "I agree saving routes is unnecessary.\n\nPerhaps it would be an idea to get some feedback from the mailing list as to other's needs. Personally I'd be satisfied with something like the addRoutes method I sketched out originally that takes an array. The problem I see with using Zend config is that the url maps are fairly complex and almost require their own format rules.\n\nAnyway, I don't think I'm sufficiently up to speed on either RewriteRouter or Config as I'm only just implementing\/playing with them so I don't want to come across as pushing an idea.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nicklo",
                        "name": "nicklo",
                        "displayName": "Nick Lo",
                        "active": true
                    },
                    "created": "2006-07-14T05:19:16.000+0000",
                    "updated": "2006-07-14T05:19:16.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10516",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "addRoutes has been implemented in the latest svn revision (914).",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-07-14T07:45:05.000+0000",
                    "updated": "2006-07-14T07:45:05.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-244\/transitions"
}