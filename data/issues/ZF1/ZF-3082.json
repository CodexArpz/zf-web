{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3082",
    "key": "ZF-3082",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Allow validation of a complete Zend_Form (which is different from the single fields validations)."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3082\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2013-02-13T16:49:36.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shamar",
                "name": "shamar",
                "displayName": "Giacomo Tesio",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-04-09T10:55:22.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2013-02-13T16:49:36.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Beside the single Zend_Form_Element validation, a Form could need a global validation.\nSuppose for example a form with two password element called Password and Confirm Password: the single element validity doesn't mean the form is valid (since they have to match).\n\nI suggest a new Zend_Form::addValidator() method working on the filled data's array.\nAfter validating the single fields, Zend_Form::isValid() and Zend_Form::getMessages() should call the forms validators for retriving the global errors.\n\nThe Form Validators should also be able to change the style of different form elements for make it easier for the filler to locate the wrong elements (in the example Password and Confirm Password could be 2 of 40 fields...), since the message could not be enougth. <- this seem to me the the most complex challenge, while I could write patch for the others I don't yet imagine how to do this.\n\nFinally when the use of the data provided by a Zend_Form raise an error (suppose you got an error when saving a row on the db) such an error should be presented as a Zend_Form \"global\" error for interface consistency.\nFor this last point I could suppose two way:\n- a new Zend_Form::addGlobalError(string $error)  method, which would be simple to understand\n- a Zend_Form_Error which extend Zend_Validate_Abstract to be added with the Zend_Form::addValidator() I talked in the first point.\n\nThis a stub of such a class\nclass Zend_Form_Error extends Zend_Validate_Abstract\n{\n    protected $_message = array();\n\n    public function __construct($error, $message)\n    {\n        $this->_message[$error] = $message;\n    }\n\n    public function isValid($value)\n    {\n        return false;\n    }\n}\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3082\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20769",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "This sort of validation is actually already addressed in the component with the concept of validation context. Please see the [Zend_Form_Element validation documentation|http:\/\/framework.zend.com\/manual\/en\/zend.form.elements.html#zend.form.elements.validators] page for more details; look for the note entitled \"Validation Context\".\n\nThe basic idea of Validation Context is that the full dataset provided to the form is passed as a second parameter to isValid(); your custom validator can then use this information as part of its validation process. If the form as a whole needs to be validated, you could also provide a hidden element with no decorators and a single validator that uses the context to look for overall validity of the form. This is the recommended way to achieve what you propose.\n\nPlease re-open the issue if the above does not work for you; however, please be prepared to show the workflow you desire, and how Validation Context does *not* fulfill it.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-04-09T11:07:41.000+0000",
                    "updated": "2008-04-09T11:07:41.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36855",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "body": "I recently ran into such issue with a form (a SubForm actually) that could have a variable number of text-fields.\r\nMy validation rule was to mark as that Subform as invalid (i.d. \"having error\") if there were more than 5 filled text-field.\r\n\r\nIn that scenario I think a Zend_Form-based validator is usefull because such error is not the fault of any text-field, it is a form-level rule.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "created": "2009-12-10T09:10:55.000+0000",
                    "updated": "2009-12-10T09:10:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41392",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=georgy",
                        "name": "georgy",
                        "displayName": "Georgy Turevich",
                        "active": true
                    },
                    "body": "I agree with Claude, and have similar validation rule (...were more than 5 filled text-field) in some my forms.\r\n\r\nSolution with hidden element looks like a dirty workaround.\r\n\r\nMay be it should be in ZF 2.0?\r\n\r\nPS:\r\nSymfony has similar validators - Global Validators\r\nhttp:\/\/www.symfony-project.org\/forms\/1_4\/en\/02-Form-Validation#chapter_02_global_validators",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=georgy",
                        "name": "georgy",
                        "displayName": "Georgy Turevich",
                        "active": true
                    },
                    "created": "2010-07-08T04:17:36.000+0000",
                    "updated": "2010-07-08T04:18:31.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3082\/transitions"
}