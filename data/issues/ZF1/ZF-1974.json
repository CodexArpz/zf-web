{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1974",
    "key": "ZF-1974",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "library\/Zend\/Locale\/Math\/PhpMath.php contains globally-scoped functions and executed code"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1974\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10140",
                    "id": 10140,
                    "description": "Mini Release",
                    "name": "1.0.3",
                    "userReleaseDate": "30\/Nov\/07",
                    "archived": true,
                    "releaseDate": "2007-11-30",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-11-07T15:39:48.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                "name": "darby",
                "displayName": "Darby Felton",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-09-20T12:22:55.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-11-15T14:13:28.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "library\/Zend\/Locale\/Math\/PhpMath.php contains globally-scoped functions and a line of executed code, instead of having such things encapsulated in a class, which appears to break the object-oriented spirit of the Zend Framework to a degree:\n\n{code}\nclass Zend_Locale_Math_PhpMath\n{\n...\n}\nfunction Zend_Locale_Math_Add($op1, $op2, $op3 = null)...\nfunction Zend_Locale_Math_Sub($op1, $op2, $op3 = null)...\n...\nfunction Zend_Locale_Math_Scale($op1)...\nZend_Locale_Math_PhpMath::disable();\n{code}\n\nAre there compelling reasons that these cannot be refactored into object-oriented code? If so, what are they?"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1974\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10031",
                    "id": 10031,
                    "description": "Major Release",
                    "name": "1.0.0",
                    "userReleaseDate": "30\/Jun\/07",
                    "archived": true,
                    "releaseDate": "2007-06-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10073",
                    "id": 10073,
                    "name": "Zend_Locale",
                    "description": "Zend_Locale is a basic wrapper for all I18N and L10N issues for the Zend Framework. It provides the userbasically with access to translation functionality. It can handle different source file types for translation.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16843",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "The reason is that the code looks like this:\n\n{code}\n        $prec   = call_user_func(Zend_Locale_Math::$sub, $value, $number, $options['precision']);\n{code}\n\n$sub is declared as \n\n{code}\n    public static $sub   = 'bcsub';\n{code}\n\nWhen bcmath is not loaded within Zend_Locale_Math the Zend_Locale_Math_PhpMath file is loaded.\nIt redefines the following \n\n{code}\n        self::$sub   = 'Zend_Locale_Math_Sub';\n{code}\n\nMyself is not happy about the \"call_user_func\" syntax  but this was done by gavin and as I have no experience with this on different environments until then I did not change the relevant code.\n\nIf you can give me a hint on how refactoring would be \"coding standard\" ok, it would be nice.\nProblems are related to\n* calling eighter bcmath or class function\n* calling from testbed without integrating extra testbed code into the class\n* Probably not working on lower 5.2 ?\n\nI do not know why gavin used this approach...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-09-20T13:14:26.000+0000",
                    "updated": "2007-09-20T13:14:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16844",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Thanks for the background information, Thomas. :) I'll forward this issue to the Zend team to get their feedback, too, and then we can see if we need to make changes, and if so, how we can do this nicely.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-09-20T13:51:44.000+0000",
                    "updated": "2007-09-20T13:51:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17320",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "I found a way to rework it.\n\nPlease review SVN 6658 and give feedback.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-10-19T08:14:41.000+0000",
                    "updated": "2007-10-19T08:14:41.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17348",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Closing ticket because of lacking response.\nIssue already fixed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-10-25T15:33:57.000+0000",
                    "updated": "2007-10-25T15:33:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17443",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Is there no good way to avoid line 201?\n\n{code}\nZend_Locale_Math_PhpMath::disable(); \/\/ disable use of bcmath functions\n{code}\n\nProbably I'm missing something, but currently, it appears that by merely including the class, this line disables the bcmath functions? This seems like a bad side-effect.\n\nIt also looks like this class should {{require_once 'Zend\/Locale\/Math.php';}}, since {{Zend_Locale_Math_PhpMath}} extends {{Zend_Locale_Math}}, but again, I could be missing something.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-11-07T13:09:07.000+0000",
                    "updated": "2007-11-07T13:09:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17454",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Actually there is no way because of two reasons:\n\nFirst:\nThe methods are called statically because otherwise we would not be able to overload the original bcmath functios. We are not creating an instance and therefor we are not able to add this line to the constructor.\n\nSecond:\nWhen the class is tested or called it would not work because the bcmath would not be disabled because the original constants are set through math.php. If we add this line to math.php the testbed would not work any longer.\n\nAlso the include path for phpmath is in math.php because within there is the selection if bcmath is avaiable or not. PhpMath is not allowed to be used alone nor will it be documented because it's really a internal class. Therefor there is no require within phpmath included.\n\nIf you think this can be avoided somehow I would listen to any idea... I have thought some time but got not an idea how to change this so it works on any environment like it does now.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-11-07T15:27:23.000+0000",
                    "updated": "2007-11-07T15:27:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17455",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Btw: PhpMath was build to disable the bcmath useage... this is no side-effect !!! \nTHIS IS WHAT THE CLASS WAS BUILT FOR !!!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-11-07T15:28:33.000+0000",
                    "updated": "2007-11-07T15:28:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17456",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "bq. The methods are called statically because otherwise we would not be able to overload the original bcmath functios. We are not creating an instance and therefor we are not able to add this line to the constructor.\n\nRight, but the methods are being called from somewhere, and this calling code may be able to know which functions are to be called. If using these static methods, simply call {{Zend_Locale_Math_PhpMath::disable()}} before using the functions. Why would this not work? I'm not trying to be difficult, I'm just trying to understand. :)\n\nSince I'm not so familiar with this component, I'll simply defer to whatever you and [~alexander] decide. Resolving as fixed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-11-07T15:39:48.000+0000",
                    "updated": "2007-11-07T15:39:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17459",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Arg... I already wrote an answer and all is now away... it would be great if comments could be redone if you press the back button on error... :-(\n\nSo let's recollect what I've written before:\n\nThe user calls\n{code}\nrequire_once 'Zend\/Locale\/Math.php';\ncall_user_func(Zend_Locale_Math::$add, 10, 10);\n{code}\n\nAt loading the math class recognises if bcmath is avaiable or not.\nIf not the PhpMath.php class is loaded.\n\nAt Loading Time the constants from math.php which refers to bcmath are overloaded to refer to the class functions.\n\nSo we could add this line to the math.php class but there is already class-less code at math.php. So it would be useless.\n\nAs the phpmath class is really only internal and must not be used standalone the require of math.php is not included as it is already loaded when using the right way... by automatically let detect math.php is bcmath or not is used.\n\nAnyway... if Alex has an idea on how to simplify this and fit your needs I would have two open ears.\n\nFor details look into\nMeasure\/Abstract.php for zf bcmath useage.\nLocale\/Math.php for autodetecting bcmath and redirecting\nLocale\/Math\/PhpMath.php for disabling bcmath and class usage.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-11-07T17:10:50.000+0000",
                    "updated": "2007-11-07T17:10:50.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1974\/transitions"
}