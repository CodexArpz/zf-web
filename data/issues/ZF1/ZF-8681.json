{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8681",
    "key": "ZF-8681",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Session_SaveHandler_DbTable race condition in write() method"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8681\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                "name": "hermanradtke",
                "displayName": "Herman Radtke",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-12-31T10:30:20.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T21:38:08.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The write method is trying to determine if it needs to insert or update the sessions table by executing a select statement looking for the session id.  This is a classic race condition, as something may write to the sessions table in between the current processes select and insert.\r\n\r\nThis typically shows up in error logs as: \"PHP Fatal error:  Exception thrown without a stack frame in Unknown on line 0\"\r\n\r\nPatch:\r\n{noformat}\r\n--- DbTable.php 2009-07-21 13:24:35.000000000 -0700\r\n+++ DbTable.fix.php     2009-12-31 10:12:43.000000000 -0800\r\n@@ -342,20 +342,26 @@\r\n         $data = array($this->_modifiedColumn => time(),\r\n                       $this->_dataColumn     => (string) $data);\r\n\r\n-        $rows = call_user_func_array(array(&$this, 'find'), $this->_getPrimary($id));\r\n-\r\n-        if (count($rows)) {\r\n-            $data[$this->_lifetimeColumn] = $this->_getLifetime($rows->current());\r\n-\r\n-            if ($this->update($data, $this->_getPrimary($id, self::PRIMARY_TYPE_WHERECLAUSE))) {\r\n-                $return = true;\r\n-            }\r\n-        } else {\r\n+        try {\r\n             $data[$this->_lifetimeColumn] = $this->_lifetime;\r\n\r\n             if ($this->insert(array_merge($this->_getPrimary($id, self::PRIMARY_TYPE_ASSOC), $data))) {\r\n                 $return = true;\r\n             }\r\n+        } catch (Zend_Db_Statement_Exception $e) {\r\n+            if (strpos($e->getMessage(), '1062') === false) { \/\/ duplicate key\r\n+                throw new Exception($e);\r\n+            }\r\n+\r\n+            $rows = call_user_func_array(array(&$this, 'find'), $this->_getPrimary($id));\r\n+\r\n+            if (count($rows)) {\r\n+                $data[$this->_lifetimeColumn] = $this->_getLifetime($rows->current());\r\n+\r\n+                if ($this->update($data, $this->_getPrimary($id, self::PRIMARY_TYPE_WHERECLAUSE))) {\r\n+                    $return = true;\r\n+                }\r\n+            }\r\n         }\r\n\r\n         return $return;\r\n{noformat}\r\n\r\nMy method of checking for a duplicate key exception may not be ideal, but I do not know of another way using Zend_Db."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8681\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10390",
                    "id": 10390,
                    "description": "Mini Release",
                    "name": "1.9.6",
                    "userReleaseDate": "24\/Nov\/09",
                    "archived": false,
                    "releaseDate": "2009-11-24",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10096",
                    "id": 10096,
                    "name": "Zend_Session",
                    "description": "A standardized interface to common functionality found in or indigenous to site session implementations. ",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40949",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sri2talk",
                        "name": "sri2talk",
                        "displayName": "Sri",
                        "active": true
                    },
                    "body": "This has issues related to the application.ini entries: (please ignore the ;;)\r\n;;resources.session.saveHandler.options.primary.session_id = \"id\"\r\n;;resources.session.saveHandler.options.primary.save_path = \"save_path\"\r\n;;resources.session.saveHandler.options.primary.name = \"name\"\r\n;;resources.session.saveHandler.options.primaryAssignment.sessionId = \"sessionId\"\r\n;;resources.session.saveHandler.options.primaryAssignment.sessionSavePath = \"sessionSavePath\"\r\n;;resources.session.saveHandler.options.primaryAssignment.sessionName = \"sessionName\"\r\n\r\nThey are required to be :\r\n;;resources.session.saveHandler.options.primary.0 = \"session_id\"\r\n;;resources.session.saveHandler.options.primary.1 = \"save_path\"\r\n;;resources.session.saveHandler.options.primary.2 = \"name\"\r\n;;resources.session.saveHandler.options.primaryAssignment.0 = \"sessionId\"\r\n;;resources.session.saveHandler.options.primaryAssignment.1 = \"sessionSavePath\"\r\n;;resources.session.saveHandler.options.primaryAssignment.2 = \"sessionName\"\r\n\r\nThe _getPrimary() will have problems. It won't find the right rows and we try to INSERT when we ought to be UPDATEing the table. Hence the exception from mysql.\r\n\r\nThe first time, it works because we INSERT succesfully.\r\nNext time, it throws the exception because we are trying to INSERT with an already existing key.\r\n\r\nThis problem does not exist if we change the session table structure to the simpler one although the primary.0 for session_id is needed. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sri2talk",
                        "name": "sri2talk",
                        "displayName": "Sri",
                        "active": true
                    },
                    "created": "2010-06-11T07:16:36.000+0000",
                    "updated": "2010-06-11T07:16:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40950",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                        "name": "hermanradtke",
                        "displayName": "Herman Radtke",
                        "active": true
                    },
                    "body": "@Sri Is your comment referring the existing code or the patch I posted above?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                        "name": "hermanradtke",
                        "displayName": "Herman Radtke",
                        "active": true
                    },
                    "created": "2010-06-11T08:23:23.000+0000",
                    "updated": "2010-06-11T08:23:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40955",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                        "name": "hermanradtke",
                        "displayName": "Herman Radtke",
                        "active": true
                    },
                    "body": "My CLA was processed, so please look at the above patch again ;)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                        "name": "hermanradtke",
                        "displayName": "Herman Radtke",
                        "active": true
                    },
                    "created": "2010-06-11T10:03:19.000+0000",
                    "updated": "2010-06-11T10:03:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40956",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sri2talk",
                        "name": "sri2talk",
                        "displayName": "Sri",
                        "active": true
                    },
                    "body": "@Herman,\r\nI am indicating that your patch does not address the root cause. It is only a remedy. \r\nSince you indicated that the method of checking \"duplicate record\" exception is kludgy, I wanted to give you a heads up. \r\n\r\nThe RCA is that we try to INSERT when we should be updating because _getPrimary is not functioning as it is expected to for the extended table schema. Please note that it works with the simple table schema even without the patch. \r\n\r\nHTH.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sri2talk",
                        "name": "sri2talk",
                        "displayName": "Sri",
                        "active": true
                    },
                    "created": "2010-06-11T13:07:28.000+0000",
                    "updated": "2010-06-11T13:07:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40975",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                        "name": "hermanradtke",
                        "displayName": "Herman Radtke",
                        "active": true
                    },
                    "body": "It does address the root cause: the write operations is not currently atomic.  My method of checking the exception is kludgy only because Zend_Db has horrible exception support.\r\n\r\nThe _getPrimary function has no bearing on this issue.  The problem is that we have two processes running at nearly the same time (think AJAX).  Process A calls find() and finds no existing session record and moves to do a simple insert.  Before that insert takes place, process B calls find() and finds no existing session record and moves to do a simple insert.  Process A completes the insert and exists normally.  Process B tries to insert, has a duplicate key exception and the session handling code in C throws \"PHP Fatal error: Exception thrown without a stack frame in Unknown on line 0\".",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=hermanradtke",
                        "name": "hermanradtke",
                        "displayName": "Herman Radtke",
                        "active": true
                    },
                    "created": "2010-06-12T07:58:36.000+0000",
                    "updated": "2010-06-12T07:58:36.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8681\/transitions"
}