{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4451",
    "key": "ZF-4451",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Config with a strict mode"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4451\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-12-11T12:23:34.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coco54",
                "name": "coco54",
                "displayName": "coco",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-10-02T04:47:05.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-12-12T00:48:36.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "\nA strict mode in Zend_Config to throw an exception when an item was not found in a configuration file.\nPerhaps, it is already proposed or already implemented but I see it like that :\n\nclass Zend_Config[Ini|Xml]{\n public function __construct($filename, $section = null, $allowModifications = false, $strict = false){}\n}\n\nclass Zend_Config{\n\nprivate $_strict;\n\npublic function __construct(array $array, $allowModifications = false, $strict = false){\n       $this->_strict = $strict;\n}\n\npublic function get($name, $default = null){\n        $result = $default;\n        if (array_key_exists($name, $this->_data)) {\n            $result = $this->_data[$name];\n        }else{\n             if($this->_strict === true){\n                  throw new Zend_Config_Exception(\"....\");\n             }\n        return $result;\n    }\n\n}\n\nBest regards"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4451\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                "name": "rob",
                "displayName": "Rob Allen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10201",
                    "id": 10201,
                    "description": "Mini Release",
                    "name": "1.6.1",
                    "userReleaseDate": "15\/Sep\/08",
                    "archived": false,
                    "releaseDate": "2008-09-15",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10010",
                    "id": 10010,
                    "name": "Zend_Config",
                    "description": "property based interface to an array",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27066",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Hi,\n\nCan you provide a use-case for this idea please?  I'm not sure what the benefit is.\n\nRegards,\n\nRob...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2008-12-05T02:15:04.000+0000",
                    "updated": "2008-12-05T02:15:04.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27149",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=whisperstream",
                        "name": "whisperstream",
                        "displayName": "axel dahl",
                        "active": true
                    },
                    "body": "I'm also trying to do this in a project.  My method was to override the Zend_Config class and create a getRequired($key) method.\n\nIf the key exists the value is returned if the key is not found then an exception is thrown.  I think that I will have to find some other way as Zend_Config doesn't allow it self to be sub classes very easily, since the constructor uses \"new self()\" when to add a subsection. So that means if I override the class, then any sub sections will still be Zend_Config instances and not my subclass instance :(\n\nMy use case is that, in the payment system code, I want to require that certain elements like the following exist:\n* payment system id\n* payment system password\n* default currency\n* supported currencies\n\nI could at an if statement before each value and then throw an exception, but I feel it's neater to just write\n\n$config->getRequired('site_name');\n$config->payment->getRequired('supported_currencies');\n$config->payment->get('some_optional_value', 'default value');\n\nAnyway those are my reasons, is there a better way to do this?\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=whisperstream",
                        "name": "whisperstream",
                        "displayName": "axel dahl",
                        "active": true
                    },
                    "created": "2008-12-08T21:13:59.000+0000",
                    "updated": "2008-12-08T21:13:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27230",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coco54",
                        "name": "coco54",
                        "displayName": "coco",
                        "active": true
                    },
                    "body": "Hello,\n\nWhat's happening if the item \"payment\" was not defined in your configuration file ?\nYou will get an php error. We can convert a php error to an exception but this is not the subject.\n\nI want to use required values in my models, my controllers, my views.\nI want to be sure what the administrator has defined this values in the configuration file.\n\nFor example, my ini config looks like :\n\nview.doctype                = XHTML1_STRICT\nview.escape                 = htmlentities\nview.encoding               = utf-8\n\nMy config file is loaded in the Zend_Registry.\n\nIf somewhere in my application I call Zend_Registry::get('config')->view->escape. Zend_Config must to throw an exception if the item was not found. The request will be forwarded to the ErrorController because an \"internal error\" was not catched.\n\nBest Regards,\n\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coco54",
                        "name": "coco54",
                        "displayName": "coco",
                        "active": true
                    },
                    "created": "2008-12-11T09:42:38.000+0000",
                    "updated": "2008-12-11T09:42:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27237",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "This is not needed in Zend_Config as you can trivially do:\n{code}\n$siteName = $config->site_name;\nif(!$siteName) {\n\tthrown new Exception ('please set your config');\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2008-12-11T12:23:33.000+0000",
                    "updated": "2008-12-11T12:23:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27251",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coco54",
                        "name": "coco54",
                        "displayName": "coco",
                        "active": true
                    },
                    "body": "Hello,\n\nI can't understand why it is not the Zend_Config's job to throw this exception. If I have defined many parameters in a configuration, sure it's required by my application.\nIt is not my job to check each time if the parameter is defined.\n\nBest Regards,\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=coco54",
                        "name": "coco54",
                        "displayName": "coco",
                        "active": true
                    },
                    "created": "2008-12-12T00:48:32.000+0000",
                    "updated": "2008-12-12T00:48:32.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4451\/transitions"
}