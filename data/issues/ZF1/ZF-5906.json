{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5906",
    "key": "ZF-5906",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Multi rowclass support in Zend_Db_Table_Abstract and Zend_Db_Table_Rowset_Abstract"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5906\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                "name": "lup0",
                "displayName": "Tommy Mattila",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-02-27T03:29:02.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T21:37:32.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Rows from a database table should have the possibility to be instantiated as different types of objects depending on the values in the database row.\nCurrently Zend_Db_Table_Abstract and Zend_Db_Table_Rowset_Abstract do not enable it.\n\nI suggest that a protected method called _getRowClass(array $data = array()) is added to both the _Table_ and _Rowset_ abstract classes.\n\nThe methods to be modified are the following (changes made against ZF 1.7.2):\n-Zend_Db_Table_Abstract\n-- public function createRow(array $data = array(), $defaultSource = null)\nReplace lines\n{code}\n@Zend_Loader::loadClass($this->_rowClass);\n$row = new $this->_rowClass($config);\n{code}\nWith\n{code}\n$className = $this->_getRowClass($data);\n$row = new $className($config);\n{code}\n-- public function fetchRow($where = null, $order = null)\nReplace lines\n{code}\n@Zend_Loader::loadClass($this->_rowClass);\nreturn new $this->_rowClass($data);\n{code}\nWith\n{code}\n$className = $this->_getRowClass($rows[0]);\nreturn new $className($data);\n{code}\n-Zend_Db_Table_Rowset_Abstract\n-- public function current()\nReplace lines\n{code}\n$this->_rows[$this->_pointer] = new $this->_rowClass(\n  array(\n    'table'    => $this->_table,\n    'data'     => $this->_data[$this->_pointer],\n    'stored'   => $this->_stored,\n    'readOnly' => $this->_readOnly\n  )\n);\n{code}\nWith\n{code}\n$className = $this->_getRowClass($this->_data[$this->_pointer]); \/\/ Find the correct class name\n$this->_rows[$this->_pointer] = new $className(\n  array(\n    'table'    => $this->_table,\n    'data'     => $this->_data[$this->_pointer],\n    'stored'   => $this->_stored,\n    'readOnly' => $this->_readOnly\n  )\n);\n{code}\nBoth Zend_Db_Table_Abstract and Zend_Db_Table_Rowset_Abstract should contain the following method, which then can be overridden in inheriting classes.\n{code}\n\/**\n * Returns a string matching the class name for this data. Default implementation returns the classname\n * given in ROW_CLASS configuration option.\n * @param array $data\n * @return string Name of the class matching the given data.\n*\/\nprotected function _getRowClass(array $data = array())\n{\n  @Zend_Loader::loadClass($this->_rowClass);\n  return $this->_rowClass;\n}\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5906\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10272",
                    "id": 10272,
                    "description": "Mini Release",
                    "name": "1.7.5",
                    "userReleaseDate": "16\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29187",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                        "name": "lup0",
                        "displayName": "Tommy Mattila",
                        "active": true
                    },
                    "body": "Example usage:\n{code}\nclass My_Entity_Rowset extends Zend_Db_Table_Rowset_Abstract\n{\n  protected $_myClassMap = array(\"default\" => \"My_Entity_Default\", \"nice\" => \"My_Entity_Nice\");\n\n  protected function _getRowClass(array $data = array())\n  {\n    $ret = $_this->_rowClass;\n    if(isset($data[\"type\"]) {\n      $type = $data[\"type\"];\n      if(isset($this->_myClassMap[$type]) {\n        $ret = $this->_myClassMap[$type];\n      }\n  }\n  return $ret;\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                        "name": "lup0",
                        "displayName": "Tommy Mattila",
                        "active": true
                    },
                    "created": "2009-02-27T04:12:21.000+0000",
                    "updated": "2009-02-27T04:23:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29299",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "body": "Imho this feature should be left for userland code only where it's easy to implement. This is useful just for a few special cases.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "created": "2009-03-05T13:34:33.000+0000",
                    "updated": "2009-03-05T13:34:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29303",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                        "name": "lup0",
                        "displayName": "Tommy Mattila",
                        "active": true
                    },
                    "body": "The trouble with implementing this feature in userland code is that we lose compatibility with Zend Framework. Because PHP doesn't allow casting of objects we cannot call for example the fetchRow or createRow methods of the Zend_Db_Table_Abstract. We need to directly instantiate the correct implementing class. Between ZF 1.5 and 1.7 the implementation of Zend_Db_Table_Abstract::createRow() and its dependencies were modified so much that it broke the compatibility between my createRow() implementation and the rest of Zend_Db_Table_Abstract.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                        "name": "lup0",
                        "displayName": "Tommy Mattila",
                        "active": true
                    },
                    "created": "2009-03-05T22:19:20.000+0000",
                    "updated": "2009-03-05T22:19:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29309",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "body": "I still think it easy to do in user code and keep \"compatibility\" with ZF, simply by overriding Zend_Db_Table_Abstract::createRow() like this:\n\n{code}\npublic function createRow(array $data = array(), $defaultSource = null)\n{\n    $oldRowClass = $this->_rowClass;\n    if ($data['attr'] == 'foo') {\n        $this->_rowClass = 'My_New_Row_Class';\n    }\n    $row = parent::createRow($data, $defaultSource);\n    $this->_rowClass = $oldRowClass;\n    return $row;\n}\n{code}\n\nThough the implementation of Zend_Db_Table_Abstract::createRow() changed, it still works.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin.mayer",
                        "name": "martin.mayer",
                        "displayName": "Martin Mayer",
                        "active": true
                    },
                    "created": "2009-03-06T02:43:33.000+0000",
                    "updated": "2009-03-06T02:43:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29355",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                        "name": "lup0",
                        "displayName": "Tommy Mattila",
                        "active": true
                    },
                    "body": "You are right Martin that the code you showed enables us to keep Zend_Db_Table_Abstract's createRow() intact. But it doesn't work for fetchRow() because the data is retrieved inside the method the object is instantiated. Similar problems occur with the Zend_Db_Table_Rowset_Abstract::current() method.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lup0",
                        "name": "lup0",
                        "displayName": "Tommy Mattila",
                        "active": true
                    },
                    "created": "2009-03-10T01:48:49.000+0000",
                    "updated": "2009-03-10T01:48:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40158",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gerard.brouwer1",
                        "name": "gerard.brouwer1",
                        "displayName": "Gerard Brouwer",
                        "active": true
                    },
                    "body": "I've the exact same need for this feature. It would be nice if it could be implement as suggested by Tommy!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gerard.brouwer1",
                        "name": "gerard.brouwer1",
                        "displayName": "Gerard Brouwer",
                        "active": true
                    },
                    "created": "2010-04-20T12:28:00.000+0000",
                    "updated": "2010-04-20T12:28:00.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5906\/transitions"
}