{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-34",
    "key": "ZF-34",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Table: Add join() method"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/11",
                "name": "Patch",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-34\/votes",
                "votes": 4,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/3",
                "name": "Duplicate"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10022",
                    "id": 10022,
                    "description": "Beta Release; all components feature complete for 1.0",
                    "name": "0.9.0",
                    "userReleaseDate": "17\/Mar\/07",
                    "archived": true,
                    "releaseDate": "2007-03-17",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-03-16T00:59:47.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zend_framework",
                "name": "zend_framework",
                "displayName": "Zend Framework",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-06-19T23:00:32.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:07.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "http:\/\/framework.zend.com\/developer\/ticket\/17\n\n\n\nHi,\n\nfirst my compliments on Zend_Db_Table, I really like it.\n\nWhat do you think about adding a join() function to Zend_Db_Table. This would made it easier to use the join() functions of Zend_Db_Select.\n\nOk an example:\n{code}\nCREATE TABLE `news` (\n  `id` int(11) NOT NULL auto_increment,\n  `subject` varchar(100) NOT NULL default '',\n  `text` text NOT NULL,\n  `categoryid` int(50) default '0',\n  `author` text,\n  `date` datetime NOT NULL default '0000-00-00 00:00:00',\n  `image` varchar(50) NOT NULL default '',\n  PRIMARY KEY  (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=537 ;\n\nCREATE TABLE `categories` (\n  `id` smallint(6) NOT NULL auto_increment,\n  `name` varchar(50) NOT NULL default '',\n  PRIMARY KEY  (`id`)\n) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n\nnews.categoryid is related to categories.id.\n\nclass News extends Zend_Db_Table {\n...\n}\n\nclass Categories extends Zend_Db_Table {\n...\n}\n\n$news = new News(...);\n\n$news->join(new Categories(...), 'categoryid', 'news.categoryid = \ncategories.id, '*');\n\/\/?? ->innerjoin(),->leftjoin()...\n{code}\nIt would be very nice if the join() function would handle all nameclashes of column names (news.id, categories.id).\n\nWhat do you think?\n\nRegards, Johannes\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-34\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-1063",
                    "issue": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1063",
                    "type": {
                        "name": "Duplicate",
                        "direction": "OUTBOUND",
                        "description": "duplicates"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10010",
                    "id": 10010,
                    "description": "Preview Release",
                    "name": "0.1.3",
                    "userReleaseDate": "18\/Apr\/06",
                    "archived": true,
                    "releaseDate": "2006-04-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10834",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nils",
                        "name": "nils",
                        "displayName": "Nils W",
                        "active": true
                    },
                    "body": "Hi,\n\nI had the same idea. So I think about it and I find a solution, which maybe is a little bit dirty but it works. Perhaps you have ideas to make it better.\n\nI build a class which extends the Zend_Db_Table.\n\nFirst of all I add this\n\n{code:title=Getting started...|borderStyle=solid}\nclass Custom_Zend_Db_Table extends Zend_Db_Table {\n    protected $_select;\n{code} \n\nthen I had to chanced the _setup() function:\n{code:title=_setup()|borderStyle=solid}\nprotected function _setup() {\n            parent::_setup();\n    \/\/This is code from the original _fetch() function.\n            $this->_select = $this->_db->select();\n\n            $this->_select->from($this->_name, array_keys($this->_cols));\n        }\n{code} \nI initialise 'select' already in the _setup() function. Like this I have the possibility to add a function, which adds joins:\n{code:title=join()|borderStyle=solid}\npublic function join($join) {\n      $this->_select->join($join['name'], $join['name'].'.'.$join['primary'].' = '.$this->_name.'.'.$join['fid'], $join['cols']);\n}\n{code} \nYou can see that you need an array, with all the things the join() function from Zend_Db_Select needs. Maybe you have better ideas on this part...\n\nAnd last but not least you have to change the _fetch() function. I overwrite it like this:\n\n{code:title=_fetch()|borderStyle=solid}\nprotected function _fetch($type, $where = null, $order = null, $count = null, $offset = null) {\n            \/\/ the WHERE clause\n            $where = (array) $where;\n            foreach ($where as $key => $val) {\n                \/\/ is $key an int?\n                if (is_int($key)) {\n                    \/\/ $val is the full condition\n                    $this->_select->where($val);\n                } else {\n                    \/\/ $key is the condition with placeholder,\n                    \/\/ and $val is quoted into the condition\n                    $this->_select->where($key, $val);\n                }\n            }\n\n            \/\/ the ORDER clause\n            $order = (array) $order;\n            foreach ($order as $val) {\n                $this->_select->order($val);\n            }\n\n            \/\/ the LIMIT clause\n            $this->_select->limit($count, $offset);\n\n            \/\/ return the results\n            $method = \"fetch$type\";\n            return $this->_db->$method($this->_select);\n        }\n    }\n{code} \n\nI only delete the first lines and change $select to $this->_select\n\nThis is my first change at any Zend class so properly it isn't really good. But I hope you can use this idea and make it better ;o)\n\nHave fun!\n\nNils",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nils",
                        "name": "nils",
                        "displayName": "Nils W",
                        "active": true
                    },
                    "created": "2006-09-14T09:59:38.000+0000",
                    "updated": "2006-09-14T09:59:38.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10840",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nils",
                        "name": "nils",
                        "displayName": "Nils W",
                        "active": true
                    },
                    "body": "I forgot an example, so here it is\n\nI have a news table and a user table. Every news a written by a user. First I have the news and user class\n{code:title=news.php|borderStyle=solid}\n<?php\n    class news extends Custom_Zend_Db_Table {\n\n    }\n{code} \n{code:title=user.php|borderStyle=solid}\n<?php\n    class user extends Custom_Zend_Db_Table {\n\n    }\n{code} \nAnd this how I use the join function in the controller:\n{code:title=indexController.php|borderStyle=solid}\n<?php\n...\n \/\/ ********** news from database ********************************\n                $news = new news();\n                  \/\/join\n                  $users = new user();\n                  $join = $users->info();  \/\/ with this I get the name of the user table and the primary key\n                  $join['fid'] = 'user_id';     \/\/ add the id from the news table for the join condition\n                  $join['cols'] = 'firstname, surname';   \/\/ add the cols you want to have from the join-table\n\t$news->join($join);  \/\/ here I use the join function\n                  \/\/where clause\n                  $where = 'exp_date >= '.time();   \/\/ and I add a where clause\n                  \/\/fetchAll\n                  $vars['news'] = $news->fetchAll($where)->toArray();\n        \/\/ ********** news from database ********************************\n\n{code} \n\nthat's it....",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=nils",
                        "name": "nils",
                        "displayName": "Nils W",
                        "active": true
                    },
                    "created": "2006-09-15T02:37:37.000+0000",
                    "updated": "2006-09-15T02:37:37.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11374",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Changing fix version to 0.8.0.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2006-11-13T15:15:30.000+0000",
                    "updated": "2006-11-13T15:15:30.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12131",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Recategorize as Zend_Db_Table component.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-01-05T17:06:23.000+0000",
                    "updated": "2007-01-05T17:06:23.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12480",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=flipkick",
                        "name": "flipkick",
                        "displayName": "Philipp F\u00fchrer",
                        "active": true
                    },
                    "body": "i did it this way:\n\n{code:title=Table.php added code}\nprotected $_join = array();\n\npublic function join($table2, $onCol, $onCol2)\n{\n $tmp = array_keys($this->_db->describeTable($table2));\n foreach ($tmp as $native) {\n  $this->_cols[$native] = self::$_inflector->camelize($native);\n }\n $this->_join = array($table2, $onCol, $onCol2);    \t\n}   \n{code}\n\n{code:title=Table.php added code to _fetch-function after FROM clause}\n\/\/ the JOIN clause\nif (!empty($this->_join)) {\n  $select->join($this->_join[0], \n  \"{$this->_name}.{$this->_join[1]} = {$this->_join[0]}.{$this->_join[2]}\");\n}\n{code}\n\nproblems:\n* no multiple joins in one query possible\n* table1 and table2 must have different column names (to fetch all data properly)\n* no updates\/inserts\/deletes in linked table",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=flipkick",
                        "name": "flipkick",
                        "displayName": "Philipp F\u00fchrer",
                        "active": true
                    },
                    "created": "2007-01-31T20:59:06.000+0000",
                    "updated": "2007-01-31T20:59:06.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13413",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Resolved by solution for table relationships, see ZF-1063.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-03-16T00:59:47.000+0000",
                    "updated": "2007-03-16T00:59:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13414",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Linking as duplicate of ZF-1063.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-03-16T01:00:09.000+0000",
                    "updated": "2007-03-16T01:00:09.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-34\/transitions"
}