{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9246",
    "key": "ZF-9246",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Problem with counting of files which are uploading to server"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9246\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10440",
                    "id": 10440,
                    "description": "Mini Release",
                    "name": "1.10.3",
                    "userReleaseDate": "01\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-01",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-02-26T15:22:37.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=deallas",
                "name": "deallas",
                "displayName": "Michal Korus",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-02-23T15:34:00.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-02-26T15:22:38.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I found a bug related to counting of files (maximum and minimum) which we can send to the server. For example, this code:\r\n{code}\r\n        $upload = new Zend_Form_Element_File('img');\r\n        $upload->addValidator('Count', false, array('min' => 2, 'max' => 3))\r\n               ->setMultiFile(3);\r\n{code}\r\n...or this...\r\n{code}\r\n        $upload = new Zend_Form_Element_File('img');\r\n        $upload->addValidator('Count', false, array('min' => 0, 'max' => 1));\r\n{code}\r\n...won't\u00a0function properly (doesn't show an error) if you send a empty form. I prepared the appropriate FIX, which eliminates the above error. In the file Zend\/File\/Transfer\/Adapter\/Abstract.php (lines 615-629) instead of:\r\n{code}\r\n        foreach($check as $key => $content) {\r\n            if (array_key_exists('validators', $content) &&\r\n                in_array('Zend_Validate_File_Count', $content['validators'])) {\r\n                $validator = $this->_validators['Zend_Validate_File_Count'];\r\n                if (array_key_exists('destination', $content)) {\r\n                    $checkit = $content['destination'];\r\n                } else {\r\n                    $checkit = dirname($content['tmp_name']);\r\n                }\r\n\r\n                $checkit .= DIRECTORY_SEPARATOR . $content['name'];\r\n                $validator->addFile($checkit);\r\n                $count = $content;\r\n            }\r\n        }\r\n{code}\r\nshould be:\r\n{code}\r\n        foreach($check as $key => $content) {\r\n            if (array_key_exists('validators', $content) &&\r\n                in_array('Zend_Validate_File_Count', $content['validators'])) {\r\n        $validator = $this->_validators['Zend_Validate_File_Count'];\r\n        $count = $content;\r\n        if (empty($content['name'])) continue; \/* FIX *\/\r\n                if (array_key_exists('destination', $content)) {\r\n                    $checkit = $content['destination'];\r\n                } else {\r\n                    $checkit = dirname($content['tmp_name']);\r\n                }\r\n\r\n                $checkit .= DIRECTORY_SEPARATOR . $content['name'];\r\n                $validator->addFile($checkit);\r\n            }\r\n        }\r\n{code}\r\nAnd in the file Zend\/Validate\/File\/Count.php (lines 242-263) instead of:\r\n{code}\r\n    public function isValid($value, $file = null)\r\n    {\r\n        if (($file !== null) && !array_key_exists('destination', $file)) {\r\n            $file['destination'] = dirname($value);\r\n        }\r\n\r\n        if (($file !== null) && array_key_exists('tmp_name', $file)) {\r\n            $value = $file['destination'] . DIRECTORY_SEPARATOR . $file['name'];\r\n        }\r\n\r\n        $this->addFile($value);\r\n        $this->_count = count($this->_files);\r\n        if (($this->_max !== null) && ($this->_count > $this->_max)) {\r\n            return $this->_throw($file, self::TOO_MANY);\r\n        }\r\n\r\n        if (($this->_min !== null) && ($this->_count < $this->_min)) {\r\n            return $this->_throw($file, self::TOO_FEW);\r\n        }\r\n\r\n        return true;\r\n    }\r\n{code}\r\nshould be:\r\n{code}\r\n    public function isValid($value, $file = null)\r\n    {\r\n        if (($file !== null) && !array_key_exists('destination', $file)) {\r\n            $file['destination'] = dirname($value);\r\n        }\r\n\r\n        if (($file !== null) && array_key_exists('tmp_name', $file)) {\r\n            $value = $file['destination'] . DIRECTORY_SEPARATOR . $file['name'];\r\n        }\r\n\r\n    if (!empty($file['name'])) { \/* FIX *\/\r\n            $this->addFile($value);\r\n    }\r\n        $this->_count = count($this->_files);\r\n        if (($this->_max !== null) && ($this->_count > $this->_max)) {\r\n            return $this->_throw($file, self::TOO_MANY);\r\n        }\r\n\r\n        if (($this->_min !== null) && ($this->_count < $this->_min)) {\r\n            return $this->_throw($file, self::TOO_FEW);\r\n        }\r\n\r\n        return true;\r\n    }\r\n{code}\r\nI hope that bug will be fixed soon"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9246\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10320",
                    "id": 10320,
                    "name": "Zend_File_Transfer",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38727",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Your fix breaks the component. It adds failures which did not exist before.\r\n\r\nSetting \"min\" to \"0\" I would not know why there should be a failure when sending an empty form. \"0\" is identical to no file available, and if the form shows a failure depends on how you build your form.\r\n\r\nHow does your form \/ elements look like?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-02-24T14:49:33.000+0000",
                    "updated": "2010-02-24T14:49:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38764",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=deallas",
                        "name": "deallas",
                        "displayName": "Michal Korus",
                        "active": true
                    },
                    "body": "For example:\r\n\r\n1.\r\n{code}\r\n$upload = new Zend_Form_Element_File('img');\r\n$upload->addValidator('Count', false, array('min' => 1, 'max' => 1))\r\n{code}\r\na) empty form (without uploaded file)\r\n\r\nZF 1.10.2 - doesn't show error, but should return\r\nZF + FIX - return an error \"Too few files, minimum '1' are expected but '0' are given\"\r\n\r\n\r\n2.\r\n{code}\r\n$upload = new Zend_Form_Element_File('img');\r\n$upload->addValidator('Count', false, array('min' => 2, 'max' => 3))\r\n\t->setMultiFile(3);\r\n{code}\r\na) empty form\r\n\r\nZF 1.10.2 - return an error \"Too few files, minimum '2' are expected but '1' are given\" - but it's wrong because I don't send any files\r\nZF + FIX - return an error \"Too few files, minimum '2' are expected but '0' are given\" - OK\r\n\r\nb) 1 uploaded file\r\n\r\nZF 1.10.2 - doesn't show error, but should return\r\nZF + FIX - return an error \"Too few files, minimum '2' are expected but '1' are given\" - OK",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=deallas",
                        "name": "deallas",
                        "displayName": "Michal Korus",
                        "active": true
                    },
                    "created": "2010-02-25T14:01:31.000+0000",
                    "updated": "2010-02-25T14:01:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38780",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Fixed with r21208",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-02-26T15:22:37.000+0000",
                    "updated": "2010-02-26T15:22:37.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9246\/transitions"
}