{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5071",
    "key": "ZF-5071",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Deep clone support please."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/5",
                "name": "Sub-task",
                "subtask": true
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5071\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shannonlee",
                "name": "shannonlee",
                "displayName": "wanlei",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-11-26T02:25:00.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T21:20:13.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Hi Matthew:\n    {color:red} First of all , my id kalon has no permission to create new issue, I had the permission several day ago..what's the reason?{color}\n    You know that Zend_Form has implemented __clone() magic method to support a \"senseful\" clone \noperation.Zend_Form knows the fact that clone operation will not copy properties with type of Object , and this \nfact cause the result clone operation is not do what we expect sometimes.\n    Although __clone in Zend_Form also clone all elements in this form and it's subform and displayGroup , but \nelements object are just parts of object properties(including decorator,translator,view and so on) in Zend_Form.If \nwe set any object properties or array properties with object values before we clone this form,the result form will \nnot absolutely independent with the previous form.They will hold the same object references with each other.Look \nover this code:\n{code}\n$form = new Zend_Form();\n$form->addDecorator(new Zend_Form_Decorator_Label());\n$newForm = clone $form; \necho $form->getDecorator('Label');\necho $newForm->getDecorator('Label');\n{code}\nThis will output:\nObject id #14\nObject id #14\n\nform and newForm share one Decorator Label, I think this is not the effection we want.Although this is just a \nsimple example, it shows to us we cant use clone in Zend_From safely.\nThe way to solve this problem is to use \"deep clone\"  which can copy properties with type of object ,while the PHP \nclone operation not.See more about deep clone in PHP5, go ahead my article --  http:\/\/www.phpthink.com\/show-3-1.html  \n(If you dont know Chinese , just put attention to the PHP code)\n\nNow that we know that PHP function serialize() and unserialize() can help us to do deep clone , we can implement  \ndeepClone() method like this:\n{code}\npublic function deepClone()\n{\n    return unserialize(serialize($this)); \n}\n{code}\n\nTry  the previous code with this deepClone() method:\n{code}\n$form = new Zend_Form();\n $form->addDecorator(new Zend_Form_Decorator_Label());\n$newForm = $form->deepClone(); \necho ($form->getDecorator('Label'));\necho '<br>';\necho ( $newForm->getDecorator('Label'));\n{code}\nThen output:\nObject id #14\nObject id #30\n\nThis is the effection we want.\n\nSince __clone() method is published in use , you cant disable it.I've been try my best to find a way by write some \nunrealistic code in __clone() to make the clone operation has the same effection with deep clone , but failed.\n\nHope this issue useful.If I've made mistakes in this post,please point out to me .thanks.\n\n(I found a related issue  http:\/\/framework.zend.com\/issues\/browse\/ZF-4720 , the way to slove this problem is use \ndeep clone)\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5071\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "NeedsPatch"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "parent": {
            "name": "parent",
            "type": "issuelinks",
            "value": {
                "issueKey": "ZF-3304",
                "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3304",
                "type": {
                    "name": "Parent",
                    "direction": "INBOUND"
                }
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31838",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "What would be the advantage over cloning each element manually (in e.g. a clone() or deepClone() method)?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-06-13T14:29:20.000+0000",
                    "updated": "2009-06-13T14:29:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39245",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "body": "Just ran into the exact same problem.\r\n\r\nAfter cloning a Zend_form_SubForm, the elements of the original SubForm where still using the same instance of Zend_Form_Decorator_Label (for instance).\r\n\r\nI had to deep-clone (using : unserialize(serialize($this))) to have a proper clone of my SubForm.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=cduv",
                        "name": "cduv",
                        "displayName": "Claude Duvergier",
                        "active": true
                    },
                    "created": "2010-03-15T11:13:10.000+0000",
                    "updated": "2010-03-15T11:13:10.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5071\/transitions"
}