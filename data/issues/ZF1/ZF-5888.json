{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5888",
    "key": "ZF-5888",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Config_Writer_* not properly handling unsectioned data"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5888\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10290",
                    "id": 10290,
                    "description": "Mini Release",
                    "name": "1.7.6",
                    "userReleaseDate": "02\/Mar\/09",
                    "archived": false,
                    "releaseDate": "2009-03-02",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-02-26T14:21:34.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gordonoh",
                "name": "gordonoh",
                "displayName": "Gordon Oheim",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-02-26T01:50:22.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-02-26T14:21:34.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "behavior",
                "unexpected"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When trying to write a Zend_Config that contains unsectioned elements, Zend_Config_Writer_Xml will omit these elements in the resulting XML file.\nThis issue related to http:\/\/framework.zend.com\/issues\/browse\/ZF-5544. Unlike Zend_Config_Writer_Ini Zend_Config_Writer_Xml will not throw an Exception though.\n\nSince a Zend_Config can contain unsectioned elements, the behavior of both writers is unexpected. Both writers should be able to write Zend_Configs without a global section defined for them. \nZend_Config_Writer_Xml already wraps all data inside a {{<zend_config>}} root element, so any unsectioned elements can reside below this element without breaking validity of the XML file.\nIf global sections are required by ZF, the writers should at least both throw an Exception.\n\nExample\n{code}\n        \/\/ Code from Example 7.2. Using Zend_Config with a PHP Configuration File\n        $myValues = array(\n            'webhost'  => 'www.example.com',\n            'database' => array(\n                'adapter' => 'pdo_mysql',\n                'params'  => array(\n                    'host'     => 'db.example.com',\n                    'username' => 'dbuser',\n                    'password' => 'secret',\n                    'dbname'   => 'mydatabase'\n                )\n            )\n        );\n        $config = new Zend_Config($myValues);\n        \/\/ will output the array as defined above\n        Zend_Debug::dump($config->toArray());\n\n\n        \/\/ write config to an XML file\n        $writer = new Zend_Config_Writer_Xml(array('config'   => $config,\n                                                   'filename' => 'test.xml'));\n        \/\/ yields no error, but loses data\n        $writer->write();\n        \/\/ Read in XML file        \n        $xml = new Zend_Config_Xml('test.xml');\n        \/\/ Webhost is missing\n        Zend_Debug::dump($xml->toArray());\n\n\n        \/\/ Try to write an Ini file from the example config\n        $writer = new Zend_Config_Writer_Ini(array('config'   => $config,\n                                                   'filename' => 'test.ini'));\n        \/\/ will throw an Exception as stated in ZF-5544\n        $writer->write();\n{code} \n\nThe resulting XML file\n{code:xml}\n<?xml version=\"1.0\"?>\n<zend-config>\n  <database>\n    <adapter>pdo_mysql<\/adapter>\n    <params>\n      <host>db.example.com<\/host>\n      <username>dbuser<\/username>\n      <password>secret<\/password>\n      <dbname>mydatabase<\/dbname>\n    <\/params>\n  <\/database>\n<\/zend-config>\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5888\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                "name": "dasprid",
                "displayName": "Ben Scholzen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10280",
                    "id": 10280,
                    "description": "Mini Release",
                    "name": "1.7.4",
                    "userReleaseDate": "02\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-02",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10371",
                    "id": 10371,
                    "name": "Zend_Config_Writer",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29104",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "In fact, Zend_Config_Writers (except _Array) always expects the highest elements in Zend_Config to be the sections. What you are doing in your example is converting from an array config (which can never contain sections, thus Zend_Config_Writer_Array works fine with no sections) to a configuration format which requires sections when loaded with Zend_Config_Xml \/ Zend_Config_Ini. Thus this simply cannot work properly.\n\nZend_Config_Writer_Xml is natually omitting the webhost-key, as it is seen as an invalid section. That Zend_Config_Writer_Ini is throwing a catchable fatal error is surely wrong, it should have the same behaviour as Zend_Config_Writer_Xml at this point.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-02-26T02:53:59.000+0000",
                    "updated": "2009-02-26T02:53:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29112",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gordonoh",
                        "name": "gordonoh",
                        "displayName": "Gordon Oheim",
                        "active": true
                    },
                    "body": "I'd rather have Zend_Config_Writer_Xml throw an Exception than simply ignoring my Config data then. Since any Zend_Config allows me to add unsectioned data at runtime when the Config was loaded with allowModification set to true, I'd expect a corresponding writer to be able to handle this data or give notice when it cannot. Especially when one Writer is able to handle that data and the other is not. Being able to set unsectioned elements at all is misleading in that case. If I cannot persist a Zend_Config without sections, then the interface should reflect that. Besides, neither Ini files, nor Xml files naturally require their data to be in sections and the Zend_Config readers work fine with unsectioned data. The data is accessible through the regular object notation. So either way, something is wrong.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gordonoh",
                        "name": "gordonoh",
                        "displayName": "Gordon Oheim",
                        "active": true
                    },
                    "created": "2009-02-26T07:43:12.000+0000",
                    "updated": "2009-02-26T07:43:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29119",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "Well, the difference is, that a runtime Zend_Config object itself does not have sections. Sections are just a construct of the _Xml and _Ini implementation. Thus Zend_Config_Writer has to guess that the highest level is the section definition. What actually could be done, would be an extra option for both the _Xml and _Ini writer to not treat the highest level as sections but as usual nodes. Tho still, this should not be the default.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-02-26T09:25:54.000+0000",
                    "updated": "2009-02-26T09:25:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29137",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "Fixed with r14175 and merged into 1.7 release branch with r14176.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-02-26T14:21:33.000+0000",
                    "updated": "2009-02-26T14:21:33.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5888\/transitions"
}