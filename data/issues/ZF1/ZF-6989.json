{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6989",
    "key": "ZF-6989",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Paginator DbSelect should not use Select object in serialization"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6989\/votes",
                "votes": 9,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10510",
                    "id": 10510,
                    "description": "Minor Release",
                    "name": "1.12.0",
                    "userReleaseDate": "27\/Aug\/12",
                    "archived": false,
                    "releaseDate": "2012-08-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-05T02:31:47.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                "name": "doctorrock83",
                "displayName": "julien PAULI",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-06-11T14:19:05.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-05T02:33:54.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When using Zend_Db_Profiler_Firebug there are a few properties that store microtime values which when serializing the DbSelect adapter cause it to produce a different hash value each time. Because this hash value is used to identify what cached data to load, Zend_Cache is unable to find any cache associated to this identifier.\r\n\r\nThe solution is to use __sleep() or Serializable interface"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6989\/watchers",
                "isWatching": false,
                "watchCount": 15
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "state:need-feedback",
                "state:patch-ready-for-review",
                "zf-caretaker-adamlundrigan",
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                "name": "mmoussa",
                "displayName": "Michael Moussa",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-11318",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11318",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-9947",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9947",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-10447",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10447",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-7379",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7379",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-7366",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7366",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-11668",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11668",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-8019",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8019",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                },
                {
                    "issueKey": "ZF-8731",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8731",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/13111",
                    "filename": "CacheBug.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "created": "2010-05-27T14:50:52.000+0000",
                    "size": 4158,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/13111\/CacheBug.diff"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/14685",
                    "filename": "ZF-6989-4.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2011-10-09T08:23:24.000+0000",
                    "size": 9513,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/14685\/ZF-6989-4.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/14706",
                    "filename": "ZF-6989-5.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2011-10-30T04:41:22.000+0000",
                    "size": 9271,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/14706\/ZF-6989-5.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12969",
                    "filename": "ZF-6989.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "created": "2010-04-01T13:36:49.000+0000",
                    "size": 1045,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12969\/ZF-6989.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12062",
                    "filename": "ZF-6989_1.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-07-07T11:11:37.000+0000",
                    "size": 824,
                    "mimeType": "text\/x-diff",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12062\/ZF-6989_1.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12098",
                    "filename": "ZF-6989_2-1.8.4.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-23T11:54:44.000+0000",
                    "size": 7517,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12098\/ZF-6989_2-1.8.4.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12097",
                    "filename": "ZF-6989_2-trunk.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-23T11:54:37.000+0000",
                    "size": 7527,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12097\/ZF-6989_2-trunk.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/12111",
                    "filename": "ZF-6989_3-trunk.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-28T12:14:49.000+0000",
                    "size": 9357,
                    "mimeType": "text\/plain",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/12111\/ZF-6989_3-trunk.patch"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/14694",
                    "filename": "ZF-6989_runtests.log",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-17T02:50:44.000+0000",
                    "size": 19632,
                    "mimeType": "text\/x-log",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/14694\/ZF-6989_runtests.log"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10330",
                    "id": 10330,
                    "description": "Mini Release",
                    "name": "1.8.2",
                    "userReleaseDate": "27\/May\/09",
                    "archived": false,
                    "releaseDate": "2009-05-27",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10315",
                    "id": 10315,
                    "name": "Zend_Paginator",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32462",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "right. We can use __sleep at any object join point. In PaginatorDbSelectAdapter, or in Zend_Db_Select, or again in Zend_Db_Adapter_Abstract , or last in Zend_Db_Profiler.\n\nI suggest using the Serializable interface on the Zend_Paginator_Adapter_DBSelect.\nPatch attached",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-07-07T11:11:21.000+0000",
                    "updated": "2009-07-07T11:11:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32464",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "body": "Makes sense.  My vote is for the Serializable interface.\n\nBut I don't think the submitted patch actually addresses all use cases for Serializable.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mratzloff",
                        "name": "mratzloff",
                        "displayName": "Matthew Ratzloff",
                        "active": true
                    },
                    "created": "2009-07-07T12:16:26.000+0000",
                    "updated": "2009-07-07T12:32:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32465",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Could you give more information, or complete the patch please ?\nThx",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-07-07T12:37:26.000+0000",
                    "updated": "2009-07-07T12:37:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32867",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "I'm sorry, but the patch did not make any difference.\n\nTrue, by serializing the *Zend_Db_Select* object, we are taking the *Zend_Paginator_Adapter_DbSelect* out of the equation, but *Zend_Db_Select*'s state still changes between the time that *Zend_Paginator* tries to load the cached entry (with an incorrect cacheId as a result) and the time that it actually saves the cacheId.\n\n{code:title=Zend_Paginator_Adapter_DbSelect}\npublic function getItems($offset, $itemCountPerPage)\n{\n    $this->_select->limit($itemCountPerPage, $offset); \/\/ the problem is here\n\n    return $this->_select->query()->fetchAll();\n}\n{code}\n\nThe above function is called by *Zend_Paginator* if *Zend_Paginator* fails to find a cached entry for the page we're trying to load.  Once getItems(...) is called, it is making a change to the state of the *Zend_Db_Select* object.  The object's query changes from (basically) \"select * from table\" to \"select * from table limit <etc...>\", which is going to result in a different cacheId when it attempts to save it.\n\nThe solution would be to set the limit *before* trying to load the entry from the cache.\n\nI don't have time right now to code a proper solution to demonstrate the fix, but I will share the quick \"proof of concept\" hack on the *serialize()* method to show that a proper implementation of what I've described above would solve this problem.\n\n{code:title=Zend_Paginator_Adapter_DbSelect }\npublic function serialize()\n{\n    $this->_select->limit(10, 0); \/\/ hacky proof-of-concept. works only for page 1, 10 items\n\n    return (string)$this->_select;\n}\n{code}\n\nNow, when *Zend_Paginator* tries to serialize the object, it will be serializing the object in the same state it will be in *after* the data is retrieved, meaning we'll get the same cacheId at load time and at save time.\n\nFor a permanent fix, I would suggest a *setItems($offset, $itemCountPerPage)* method signature in *Zend_Paginator_Adapter_Interface*.  This method would need to be called prior to attempting to generate a cache key.  For the Array, Iterator, and Null adapters, the implementation can be empty (since retrieving the items does not change the state of any of the object's internals).  The DbSelect and DbTableSelect implementations could simply be a call to *$this->_select->limit($itemCountPerPage, $offset)*.  Once that's done, the serialization of the _select object should be the same before and after the items are retrieved.\n\nUnfortunately, even though that solves the problem (even with Zend_Db_Profiler turned on), Zend_Paginator doesn't cache the *zend_paginator_rowcount*, so it's still going to make an unnecessary connection to the database every time.  For smaller applications this might not be a problem, but for high traffic applications that are trying to avoid the overhead of making DB connections when it is not necessary will find this consequence unacceptable.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-23T09:00:41.000+0000",
                    "updated": "2009-07-23T09:00:41.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32869",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "I have developed a solution and would like to share it in hopes of it being incorporated in a future release.\n\n*Zend_Paginator_Adapter_Interface* contains a new function signature for *getCacheIdentifier()* which must be implemented by the adapter classes.  I've included an implementation of the method for all adapters.\n\nFor *Zend_Paginator_Adapter_DbSelect*, I've defined the cache identifier to be a hash of the fully assembled *initial* select statement.  The initial select statement will not change from request to request (unless of course the data is different, in which case you'd want a different cache identifier).  I use ->assemble() instead of serializing the whole select object because the solution would stop functioning when Zend_Db_Profiler is in use.  That, and assembling the query is undoubtedly faster than serializing the entire object.\n\nFor the other adapters, the implementation is similar, but trivial.  I just do a hash of a serialization of $this in the constructor since there's no database adapter or anything like that in use.  The setting of the cache identifier should, however, be the last thing that the constructor does.\n\nI've provided a patch for both the latest development trunk and for release 1.8.4, which is what I'm using for my current project.  All existing Paginator-related unit tests passed{color:red}*{color} in both the trunk and release 1.8.4.\n{color:red}\nI implemented getCacheIdentifier() in *\/tests\/Zend\/Paginator\/_files\/Zf4207.php*.  No other modifications were necessary.\n{color}\n\nI will leave it up to someone with commit rights to write any additional unit tests if it is deemed necessary.\n\nPlease let me know if this solution is acceptable.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-23T11:54:44.000+0000",
                    "updated": "2009-07-23T11:54:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32870",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Ok I exactly see the problem which then gets bigger than I thought.\n\nYour patch seems OK but have you talked to any Zend liaison before commiting it ? You introduce a BC break, as any user who inherited any of Paginator adapters will meet a break. Also any user who just made a custom adapter by implementing the interface would now meet the same BC break. That needs a Zend liaison approvement, and a documentation part must be written. Also, we cannot introduce exceptionnal BC break in minor releases but only in mini ones (as I know)\n\nAbout useless DB connection, I dont see the problem, rowcount is only calculated when count() is invoked on the DBSelectAdapter, which is not the case in a normal iteration use case over Zend_Paginator having cache enabled, is it ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-07-23T12:06:37.000+0000",
                    "updated": "2009-07-23T12:06:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32871",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "I did not commit anything (I don't have commit access).  I just supplied the patch as a possible fix for someone with commit access to pick up and run with (and of course inviting any valid critique).\n\nThis shouldn't cause a BC break for users who inherited any Paginator adapters.  My patch implements *getCacheIdentifier()* for all adapters, so their subclasses would inherit the implementation as well.\n\nHowever, you are correct that this will cause a BC break for users who implemented the interface themselves, as they'd now have one more method to implement.  Implementation, however, would be fairly trivial and easy to explain in documentation.\n\nRegarding your last comment, though, needless invocations of count() actually *is* the case because Zend_Paginator is not caching counts correctly either.  Even with my patch, the profiler is recording a query to the database during every iteration.  For a highly trafficked application, an unnecessary DB connection and query with every request could create problems.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-23T12:45:49.000+0000",
                    "updated": "2009-07-23T12:45:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32872",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Ok no problem, just a misunderstood ;-)\nWe need a Zend review.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2009-07-23T13:33:15.000+0000",
                    "updated": "2009-07-23T13:33:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32873",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "body": "Any patch that adds a method to the interface breaks BC. Any custom adapter would need to implement this new method (assuming that adapter is not subclassing an existing Paginator adapter). Have to catch a flight today, so need to continue packing, so can't read all and come up with a solution atm. Sorry :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "created": "2009-07-23T14:17:23.000+0000",
                    "updated": "2009-07-23T14:17:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33003",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "I mentioned in my previous patch post that, although my patch addresses the problem of the pages not being cached, there is still a problem with item counts not being cached.\n\nIn a highly trafficked application that is attempting to avoid unnecessary connections to a database, hitting the DB to get an item count when all possible items are cached already may not be desirable (and is definitely not desirable for the application I'm working on now, which was my inspiration to submit these fixes).\n\nI have further modified Zend_Paginator and attached ZF-6989_*3*-trunk.patch, which also addresses the item count not being cached.  It is built upon the previous patch, so this will still introduce a BC break and needs to be reviewed by Zend in order to be released safely.\n\nTo clear the item count from the cache, use the new clearItemCountCache() method.\n\nIf you cannot wait until ZF is patched to include this fix, you can do what I did and just extend Zend_Paginator and Zend_Paginator_Adapter_DbTableSelect and add the new functions yourself.\n\nIf there are any questions on the patch, please let me know.  I hope someone will put this to good use!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-07-28T12:14:59.000+0000",
                    "updated": "2009-07-28T12:14:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35732",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "This is still broken in 1.9.5.\r\n\r\nThe patch I posted (ZF-6989_3-trunk.patch) has been working fine for me in my project to fix the caching issue.\r\n\r\nCan someone please review it and indicate if there's any likelihood that it will be included in a future release?\r\n\r\nThanks.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2009-11-02T09:47:47.000+0000",
                    "updated": "2009-11-02T09:47:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39716",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "body": "This is still broken in 1.10.2 too. I don't think that any adapter should be modified. Zend_Paginator is who is relying in that adapters internal state doesn't change, so the the fix should go in there. I'm going to attach a patch that address this issue that way.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "created": "2010-04-01T13:35:38.000+0000",
                    "updated": "2010-04-01T13:35:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39717",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "body": "Fix the issue and plus fixes a little typo.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "created": "2010-04-01T13:36:50.000+0000",
                    "updated": "2010-04-01T13:36:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40698",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "applied the patch in a modified version to not break tests, please tests\r\nr22302  \r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-05-26T04:17:45.000+0000",
                    "updated": "2010-05-26T04:17:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40704",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "body": "I checked this url: http:\/\/framework.zend.com\/code\/browse\/Zend_Framework\/standard\/trunk\/library\/Zend\/Paginator.php?r1=22299&r2=22302\r\nI think this is wrong. Internal ID will depend on the class name of the adapter and the return value of getItemCountPerPage(). If I use more than one cached paginator with the same adapter and getItemCountPerPage() returns with same values, the result is that cached values will be mixed.\r\nMay I be wrong?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "created": "2010-05-26T14:33:07.000+0000",
                    "updated": "2010-05-26T14:33:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40705",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "body": "I agree with Szurovecz J\u00e1nos, the adapter class isn't a good idea for internal id.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zfran",
                        "name": "zfran",
                        "displayName": "Fran",
                        "active": true
                    },
                    "created": "2010-05-26T15:01:27.000+0000",
                    "updated": "2010-05-26T15:01:27.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40713",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "applied a different patch on r22307",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-05-26T22:15:52.000+0000",
                    "updated": "2010-05-26T22:15:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40714",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "changed fix version",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-05-26T22:18:58.000+0000",
                    "updated": "2010-05-26T22:18:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40742",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "body": "It is still buggy. I'm afraid you can't fix this bug by changing one line of code.\r\nThis bug returns with many adapters, not only with DBSelect (actually I'm not using DBSelect adapter).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "created": "2010-05-27T14:50:56.000+0000",
                    "updated": "2010-05-27T14:54:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40743",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "body": "I uploaded CacheBug.diff.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "created": "2010-05-27T14:51:52.000+0000",
                    "updated": "2010-05-27T14:51:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40797",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "I think you miss understood the problem here. The Paginator doesnt Cache GLOBALLY the calls to the adapter. he just cache the internal state to skip double internal calls. I tested your tests with the original code and my code the only different between my and the old code is, that i not just serialize the object (because with firephp setup, the internal ste can be changed during runtime, ie. logging) and i used the php spl api to get the correct object hash to for cache id generation.\r\n\r\nYou test says, run my pagination class and after that all new instances of my adapter and the specific call to execute should be cached. Thats not true. That wasnt in the past and this isn a good way also for the future. This is a core function class that the caching that you need should be in your code (Zend_Cache*Frontend or Function).\r\n\r\nSo this bug is fixed with just one line of code. :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-05-31T00:58:02.000+0000",
                    "updated": "2010-05-31T00:58:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40798",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "this issue is fixed, if something other happens please create a new bug and assign to me",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-05-31T00:58:55.000+0000",
                    "updated": "2010-05-31T00:58:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40801",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "body": "Marco,\r\n\r\nI appreciate you taking on the issues for Zend_Paginator, however, please do follow proper issue tracker procedure :)\r\nWhen closing an issue, please indicate in which revision number you patched the component in the branch, and in which revision number you merged the patch back to trunk.\r\n\r\nCheers,\r\n\r\nJurri\u00ebn",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "created": "2010-05-31T01:15:39.000+0000",
                    "updated": "2010-05-31T01:15:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40803",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "body": "Also, please add a unit test to cover the changes in the patch, and try committing a patch in one go, rather than splitting it up over several commits.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=norm2782",
                        "name": "norm2782",
                        "displayName": "Jurrien Stutterheim",
                        "active": true
                    },
                    "created": "2010-05-31T01:20:46.000+0000",
                    "updated": "2010-05-31T01:20:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40809",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "body": "Dear Marco Kaiser,\r\n\r\nIf you're using cache, Zend_Paginator::getItemsByPage() checks that the data is in cache or not. If it is (A), then returns with it and doesn't call the getItems() method of adapter object. If data isn't in cache, it calls getItems() and stores the result in cache (B).\r\n\r\nIf you want to speed-up your paginator with cache, you have to ensure that cache id is the same in (A) and in (B). I created two paginators and two adapters (with same datas!) because I wanted to simulate two requests. Result of first request is slow and after execution it will be cached, second result is fast beacause it is in cache, so getItems() method of the adapter won't be called. My unit test asserts that this method won't be called at second time.\r\n\r\nCan you explain me, how can I speed-up my paginator adapter with cache posted in my .diff file?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "created": "2010-05-31T12:26:40.000+0000",
                    "updated": "2010-05-31T12:26:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40810",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "public function getItemsByPage($pageNumber)\r\nthis means the function is not called statically so the paginator has on every instanciation a NEW own adapter instance and the cacheing creation should not depend on the internal state of the adapter itself because this can leads in side effects. i dont know the roadmap for this components but i think this can only be fixed if the interface will be extended more to ask the adapter for a unique cache id or the current state. This leads into a BC break and can only be made with ZF 2.0.\r\n\r\n{code}\r\n$x = new Foo();\r\n$y = new Foo();\r\n$x->bar();\r\n$y->bar();\r\n{code}\r\n\r\nthis should not be happen in a cached call internally on $y->bar() \r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-05-31T13:29:54.000+0000",
                    "updated": "2010-05-31T13:29:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40811",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "body": "The paginator cache is completely useless with this approach. The solution is in http:\/\/framework.zend.com\/issues\/secure\/attachment\/12111\/ZF-6989_3-trunk.patch. Paginator is useful with REST clients, database queries, etc. Caching is really important in this cases, and many of us want to caching page items in more than one request. I don't understand, why do we have to wait a whole year to integrate the fix and why did you mark this issue fixed if it is not.\r\n\r\nSorry, but I don't understand your sample code.\r\n\r\n(Sorry for my bad english.)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=szjani",
                        "name": "szjani",
                        "displayName": "Szurovecz J\u00e1nos",
                        "active": true
                    },
                    "created": "2010-05-31T14:22:49.000+0000",
                    "updated": "2010-05-31T14:22:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40813",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "body": "The patch breaks the BC. It implicied that the adapter interface should be changed. This is not yet possible.\r\nAlso i think adapter call should not be internally cached, write it in your servie layer (controller, etc).\r\n\r\nSorry but i fixed only the problem that was described in this ticket. zend_db adapter with enabled zend profiling creates wrong cache id.\r\n\r\nIf you wish this new cache features please open a new feature request and write it down in the wiki for the zf2",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bate",
                        "name": "bate",
                        "displayName": "Marco Kaiser",
                        "active": true
                    },
                    "created": "2010-06-01T01:07:11.000+0000",
                    "updated": "2010-06-01T01:07:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41946",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=meisii",
                        "name": "meisii",
                        "displayName": "Martin Mei\u00dfner",
                        "active": true
                    },
                    "body": "@Marco Kaiser: You are right, the ID is now generated correctly. However, for each request a different one. I could solve the problem as I have removed spl_object_hash() from your solution. Now the caching really works!\r\n\r\nFor the practical test is recommended the description from here:\r\nhttp:\/\/framework.zend.com\/issues\/browse\/ZF-8019 (see the output checking)\r\n\r\nHere the new code:\r\n{code}\r\nprotected function _getCacheInternalId()\r\n{\r\n    return md5(serialize(array(\r\n        $this->getAdapter(), $this->getItemCountPerPage())));\r\n}\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=meisii",
                        "name": "meisii",
                        "displayName": "Martin Mei\u00dfner",
                        "active": true
                    },
                    "created": "2010-08-11T05:37:26.000+0000",
                    "updated": "2010-08-11T05:37:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42217",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tunder",
                        "name": "tunder",
                        "displayName": "Ionut Dinu",
                        "active": true
                    },
                    "body": "This is still buggy in version 1.10.8\r\n\r\n1. the getItemsByPage($pageNumber) function calls $this->_getCacheId($pageNumber) in self::$_cache->load which generates and id. the cache is not found and the rest of code get executed. $this->_adapter->getItems is called which alters the adapter content. then $this->_getCacheId($pageNumber) is called again in self::$_cache->save which generates another cache id that is stored in the cache, and the cycle starts over.  \r\n\r\n2. if the adapter is DbSelect or DbTable and the profiler is on the cache id is changed with every request.\r\n\r\nThe solution, as i see it, without breaking the BC and based on Michael Moussa ideea would be to create and extend an abstract class that implements the interface and all adapters extend this new abstract class. Then getCacheIdentifier function can be implemented in all default, Zend Framework provided, adapters and for the people that implemented the interface themselves the code will still work.\r\n\r\nBest regards",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tunder",
                        "name": "tunder",
                        "displayName": "Ionut Dinu",
                        "active": true
                    },
                    "created": "2010-09-09T05:55:27.000+0000",
                    "updated": "2010-09-09T05:55:27.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47964",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=fr0z3nk0",
                        "name": "fr0z3nk0",
                        "displayName": "Peter Culak",
                        "active": true
                    },
                    "body": "Yep still buggy in release-1.11.7 (using version from svn tag).\r\n\r\nI think what's happening is:\r\nwhen saving result to cache _getCacheInternalId uses select object to generate id. This select object does have LIMIT and OFFSET set (Zend_Paginator line 788 adds that to select).\r\nLater when paginator tries to get results from cache _getCacheInternalId returns different id because it does not contain LIMIT and OFFSET.\r\n\r\nSo even if you get rid of profiler which was causing this select object to be different on every request due to adding microtimes to certain properties it still doesn't work because of above mentioned issue.\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=fr0z3nk0",
                        "name": "fr0z3nk0",
                        "displayName": "Peter Culak",
                        "active": true
                    },
                    "created": "2011-08-15T13:25:22.000+0000",
                    "updated": "2011-08-15T13:25:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48611",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Reopened due to comments",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-05T14:35:11.000+0000",
                    "updated": "2011-10-05T14:35:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48652",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "Please see [^ZF-6989-4.patch] for what should solve this issue without breaking BC.\r\n\r\nFor caching to work, the cache IDs must be consistent between requests for otherwise identical statements.  This bug is occurring because the internal state of the database adapter objects, upon which the cache IDs are based, changes on every page request due to the database connection within the DbSelect object.\r\n\r\n{{Zend_PaginatorTest::testPaginatorGeneratesSameCacheIdentifierForDbSelectAdaptersWithIdenticalSqlStatements()}} ensures that the above inconsistency doesn't happen.  If you run that new test without applying any of my other changes, it will fail because the mock classes force a subtle change in the dbAdapter class (that would not affect the resultset) to mimic what is happening in reality.\r\n\r\nThe fix, as in my previous patches, is to base the cache ID for the DbSelect adapter on the assembled SQL of the DbSelect  object.\r\n\r\nTo avoid breaking BC, the {{getCacheIdentifier()}} method from my previous patches is not present in the Interface - it is only in the DbSelect paginator adapter, and the Paginator class will make sure that the method exists before using it.  If it doesn't exist, it will use the existing cache ID generation implementation (which actually works fine for the other paginator adapter types).\r\n\r\nThat should take care of everything.  If anybody spots any issues or there's some other reason this can't be integrated, please let me know so I can address it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2011-10-09T08:23:24.000+0000",
                    "updated": "2011-10-09T08:24:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48712",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "@Michael\r\nI applied your patch to a clean checkout of SVN trunk, ran the unit tests, and got 11 failures and 22 errors (log attached (ZF-6989_runtests.log)).  Could you do the same and let me know if your result differs?  ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-17T02:50:44.000+0000",
                    "updated": "2011-10-17T02:51:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48717",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "Adam,\r\n\r\nOdd - the ScrollingStyle tests run fine separately (phpunit Zend\/Paginator\/ScrollingStyle\/ or phpunit --filter <testName>).\r\n\r\nI'll take a look and get back to you.  This may be difficult to debug since the tests do not fail in isolation.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2011-10-17T14:08:16.000+0000",
                    "updated": "2011-10-17T14:08:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48862",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "Adam,\r\n\r\n[^ZF-6989-5.patch] applies my fixes and does not cause any of the tests in the Zend_Paginator group to fail.  Please give that one a try.\r\n\r\nThanks!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2011-10-30T04:42:37.000+0000",
                    "updated": "2011-10-30T04:42:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49016",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Your fix looks good to me, and all unit tests now pass. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-11-08T12:29:18.000+0000",
                    "updated": "2011-11-08T12:29:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49138",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "body": "Thanks Adam.  Is there anything else I need to do for this to be incorporated?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mmoussa",
                        "name": "mmoussa",
                        "displayName": "Michael Moussa",
                        "active": true
                    },
                    "created": "2011-11-19T19:07:54.000+0000",
                    "updated": "2011-11-19T19:07:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50467",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Fixed in trunk (1.12.0): r24754",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-05T02:31:47.000+0000",
                    "updated": "2012-05-05T02:31:47.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6989\/transitions"
}