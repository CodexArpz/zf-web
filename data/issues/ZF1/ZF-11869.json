{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11869",
    "key": "ZF-11869",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_File_Transfer_Adapter_Abstract::_detectMimeType should not check existence of file by its name"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11869\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                "name": "zach_mullen",
                "displayName": "Zach Mullen",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-11-03T17:45:37.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-12-13T19:39:16.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I'm using Zend_File_Transfer to handle POSTed file uploads and ran into a nasty edge case.\r\n\r\nZend_File_Transfer_Adapter_Abstract line 1283 is checking the existence of the posted file by its name parameter before checking its existence by its tmp_name parameter.  The problem is that the name parameter is not a path, so it's checking for its existence in the current working directory, which is my application's root directory.  In my application's root dir, I have a CMakeLists.txt file.  When I tried to upload a file to my application that was also named CMakeLists.txt, I got the following warning:\r\n\r\nWarning: finfo_file() [<a href='function.finfo-file'>function.finfo-file<\/a>]: File or path not found 'CMakeLists.txt'\r\n\r\n on line 1302 in file C:\\xampp\\htdocs\\Midas3\\library\\Zend\\File\\Transfer\\Adapter\\Abstract.php\r\n\r\nfile_exists was returning true for the name parameter, which screwed up the rest of the method.  Why do you check if the file exists by its name?  The tmp_name param is the one that refers to the actual file, it seems to me that's the only one that should be used.\r\n\r\nThanks!"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11869\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10981",
                    "id": 10981,
                    "description": "Mini Release",
                    "name": "1.11.11",
                    "userReleaseDate": "29\/Sep\/11",
                    "archived": false,
                    "releaseDate": "2011-09-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10320",
                    "id": 10320,
                    "name": "Zend_File_Transfer",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48978",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Your assumption is not correct.\r\nFiles exist only as \"tmp_name\" as long as they have not been downloaded.\r\nAs soon as you download the file only the \"name\" param can be found.\r\n\r\nSo it depends on when you call this method... before downloading the file or afterwards. But the method itself does not know if you already downloaded the file or not.\r\nTherefor it checks if the given file exists or not to decide which action to use.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-11-03T19:10:23.000+0000",
                    "updated": "2011-11-03T19:10:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48979",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "body": "Then this is only a bug if we call this method before downloading the file (which is my use case).  Is there a precondition on calling receive() that the file must already have been downloaded, or is my use case supposed to be supported?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "created": "2011-11-03T19:19:46.000+0000",
                    "updated": "2011-11-03T19:19:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48980",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "body": "This is how I call the transfer:\r\n\r\n      $upload = new Zend_File_Transfer('HttpFixed');\r\n      $upload->receive();\r\n      $path = $upload->getFileName();\r\n      $filesize =  filesize($path);\r\n      $filename = $upload->getFilename(null, false);\r\n\r\nThen, I call a method that copies the posted file into a path corresponding to its md5sum, so no file exists by its original uploaded name.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "created": "2011-11-03T19:28:56.000+0000",
                    "updated": "2011-11-03T19:28:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48982",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "body": "Ignore the 'HttpFixed', that was my workaround subclass adapter.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "created": "2011-11-03T19:30:24.000+0000",
                    "updated": "2011-11-03T19:30:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48983",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "In my opinion this can not work.\r\n\r\nYou are creating a file transfer according to the given $_FILES variable from a form.\r\nThen you say \"download this files\" by calling receive()... but then you say that !afterwards! you copy the file into another path... and the class should know that changed path before you set it???\r\n\r\nYou eighter set the name and path before you receive the file (with the rename filter) or you set it manually.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-11-03T23:06:50.000+0000",
                    "updated": "2011-11-03T23:06:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48987",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "body": "The problem is happening in the very first line.\r\n\r\n$upload = new Zend_File_Transfer();\r\n\r\nIt's actually the very first line of my controller.\r\n\r\nEverything after that is actually working fine.  The only thing failing is the mime type check. The constructor calls _prepareFiles, which is calling _detectMimeType, which is failing because it's checking if the file exists by name (in the current working directory, which is my application root dir) before it checks the existence of the tmp_name file.  If we just switched the order of checking that existence, it would actually work for me.  To reproduce this bug, just create a minimal zend application, place a dummy.txt file in the root directory of it, create a controller that just calls that one line of code, and then attempt to upload a different file called dummy.txt.\r\n\r\nThis block of code is the culprit:\r\n\r\nprotected function _detectMimeType($value)\r\n    {\r\n        if (file_exists($value['name'])) {\r\n            $file = $value['name'];\r\n        } else if (file_exists($value['tmp_name'])) {\r\n            $file = $value['tmp_name'];\r\n        }\r\n\r\nI think that is meant to be equivalent to:\r\n\r\n    if(file_already_moved_from_tmp_name)\r\n          $file= $value['name'];\r\n    else if(file_exists($value['tmp_name']))\r\n          $file = $value['tmp_name'];\r\n\r\nBut they are not equivalent, because file_exists($value['name']) does not represent the condition that the file has already been downloaded; especially since this is happening in the constructor, so we know the file has not already been received.\r\n\r\n\r\n\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "created": "2011-11-04T00:15:16.000+0000",
                    "updated": "2011-11-04T00:15:16.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49137",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "body": "Any status update on this issue?\r\n\r\nThanks,\r\n\r\n-Zach",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "created": "2011-11-18T19:40:28.000+0000",
                    "updated": "2011-11-18T19:40:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49278",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "body": "Are there plans to fix this in the next release?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zach_mullen",
                        "name": "zach_mullen",
                        "displayName": "Zach Mullen",
                        "active": true
                    },
                    "created": "2011-12-13T19:39:16.000+0000",
                    "updated": "2011-12-13T19:39:16.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11869\/transitions"
}