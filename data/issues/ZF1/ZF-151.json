{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-151",
    "key": "ZF-151",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend::includePath(), excludePath(), correctPath()"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-151\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-01-30T15:39:32.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                "name": "ixti",
                "displayName": "Aleksey V. Zapparov",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-06-27T00:14:10.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-02-10T04:13:43.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "{code:none}\n\/**\n * Zend::includePath()\n *\n * Adds new path to PHP's environment 'include_path'.\n *\n * Valid examples of $includePath are:\n * $includePath = array('new\/path', 'another\/new\/path');\n * $includePath = 'new\/path' . PATH_SEPARATOR . 'another\/new\/path';\n * $includePath = 'new\/path';\n *\n * @param   string|array $includePath Path which must be added to\n *          'include_path' enveronment. Array, string or string separated\n *          with PATH_SEPARATOR.\n * @return  boolean TRUE if include_path was changed, else FALSE.\n *\/\nstatic public function includePath($includePath)\n{\n    \/\/ Exploding current 'include_path'\n    $curr_path  = explode(PATH_SEPARATOR, ini_get('include_path'));\n    \/\/ If $includePath is string, then trying to explode it\n    if (!is_array($includePath)) {\n        $includePath = explode(PATH_SEPARATOR, $includePath);\n    }\n    \/\/ Merging current 'include_path' and new include paths and leaving only\n    \/\/ unique paths.\n    $new_path = array_unique(array_merge($curr_path, (array)$includePath));\n    \/\/ If new and old include paths differs then setting new 'include_path'\n    \/\/ and return true\n    if (0 !== count(array_diff($new_path, $curr_path))) {\n        ini_set('include_path', implode(PATH_SEPARATOR, $new_path));\n        return true;\n    }\n    \/\/ Else return false\n    return false;\n}\n\n\n\/**\n * Zend::excludePath()\n *\n * This method is similar to (@link Zend::includePath()), except this\n * removes given in param path from PHP's environment 'include_path'.\n *\n * Valid examples of $excludePath are:\n * $excludePath = array('new\/path', 'another\/new\/path');\n * $excludePath = 'new\/path' . PATH_SEPARATOR . 'another\/new\/path';\n * $excludePath = 'new\/path';\n *\n * @param   string|array $excludePath Path which must be removed from\n *          'include_path' enveronment. Array, string or string separated\n *          with PATH_SEPARATOR.\n * @return  boolean TRUE if include_path was changed, else FALSE.\n *\/\nstatic public function excludePath($excludePath)\n{\n    \/\/ Exploding current 'include_path'\n    $curr_path  = explode(PATH_SEPARATOR, ini_get('include_path'));\n    \/\/ If $excludePath is string, then trying to explode it\n    if (!is_array($excludePath)) {\n        $excludePath = explode(PATH_SEPARATOR, $excludePath);\n    }\n    \/\/ Removing $excludePath paths from 'include_path' enveronment\n    $new_path = array_diff($curr_path, (array)$excludePath);\n    \/\/ If new and old include paths differs then setting new 'include_path'\n    \/\/ and return true\n    if (0 !== count(array_diff($new_path, $curr_path))) {\n        ini_set('include_path', implode(PATH_SEPARATOR, $new_path));\n        return true;\n    }\n    \/\/ Else return false\n    return false;\n}\n{code}\n\nAlso I've added :\n\n{code:none}Zend::includePath(realpath(dirname(__FILE__)));{code}\n\nin the begining of Zend.php, so now even if Zend is not in include path then it will be in it :)"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-151\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10010",
                    "id": 10010,
                    "description": "Preview Release",
                    "name": "0.1.3",
                    "userReleaseDate": "18\/Apr\/06",
                    "archived": true,
                    "releaseDate": "2006-04-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10001",
                    "id": 10001,
                    "name": "Zend_Loader",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10199",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "Also today I've added anothe method to Zend to araise usability :)\n{code}\n\/**\n * Zend::includeIncubator()\n *\n * Dummy method which allows you to cosily include Zend's incubator.\n *\n * @param   string  $pathToIncubator (optional) Path to Zend's incubator. By\n *          default is '..\/incubator'.\n * @param   boolean $pathIsRelative  (optional) Perform path as realtive to\n *          Zend's core dir if TRUE or absolute if FALSE.\n * @throws  Zend_Exception If given path is not available or incorect.\n * @return  string Performed path to Zend's incubator.\n *\/\nstatic public function includeIncubator($pathToIncubator = null, $pathIsRelative = true)\n{\n    \/\/ If param $pathToIncubator wasn't set, or was set to null then set\n    \/\/ $pathToIncubator equal to '..\/incubator' and $pathIsRelative to true.\n    if (null === $pathToIncubator) {\n       $pathToIncubator = '..' . DIRECTORY_SEPARATOR . 'incubator';\n    }\n    \/\/ Perform relative path\n    if ($pathIsRelative) {\n        $pathToIncubator = realpath(dirname(__FILE__)\n                         . DIRECTORY_SEPARATOR\n                         . ltrim($pathToIncubator, '\\\\\/'));\n    }\n    $pathToIncubator = rtrim($pathToIncubator, '\\\\\/');\n    \/\/ If path is not valid throws Zend_Exception.\n    if (!is_dir($pathToIncubator)) {\n        $error = sprintf(\"Cannot find '%s' path. Seems like this directory \"\n                         . \"is not available or path is incorrect.\", $pathToIncubator);\n        throw new Zend_Exception($error);\n    }\n    \/\/ Else append Zend's incubator path to 'include_path' environment of PHP\n    self::includePath($pathToIncubator);\n    \/\/ And finally return performed path (for debug purposes)\n    return $pathToIncubator;\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2006-06-29T05:21:27.000+0000",
                    "updated": "2006-06-29T05:21:27.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10200",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "So now I can use it like this:\n{code:none}\n<?php\nrequire_once 'library\/zend.php';\nZend::includeIncubator();\n?>\n{code}\n\nPS Sorry for chain-post, but I ddn't found how to edit my first comment.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2006-06-29T05:30:10.000+0000",
                    "updated": "2006-06-29T05:30:10.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10538",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=superbiji",
                        "name": "superbiji",
                        "displayName": "Superbiji",
                        "active": true
                    },
                    "body": "Nice addition IMHO\nso that we don't have to use .htaccess or ini_set\nbut just include \"\/somewhere\/in\/the\/filesytem\/lib\/Zend.php\"\nand makes deplyoment easier",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=superbiji",
                        "name": "superbiji",
                        "displayName": "Superbiji",
                        "active": true
                    },
                    "created": "2006-07-17T03:18:05.000+0000",
                    "updated": "2006-07-17T03:18:05.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10575",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "I've rewrote those methods (includePath and excludePath) and removed includeIncubator() because it's not necessary anyway...\nso now I have following lines in my Zend.php\n[code]\n<?php\n\/\/ ... skipped ...\n\/**\n * Include Zend's core dir to 'include_path' configuration option.\n *\/\nZend::includePath(realpath(dirname(__FILE__)));\n\/\/ ... skipped ...\nfinal class Zend\n{\n    \/\/ ... skipped ...\n    \/**\n     * Zend::includePath()\n     *\n     * Add new path to PHP's 'include_path' configuration option.\n     *\n     * Valid examples of $includePath are:\n     * $includePath = array('new\/path', 'another\/new\/path');\n     * $includePath = 'new\/path' . PATH_SEPARATOR . 'another\/new\/path';\n     * $includePath = 'new\/path';\n     *\n     * Note that second param $isRelative must be true only for paths that are\n     * relative to Zend core path (library).\n     *\n     * @see     Zend::correctPath()\n     * @param   string|array $includePath Array or a string with path that you\n     *          want to add to 'include_path' configuration option.\n     * @param   boolean $isRelative (optional) If TRUE, then given path will be\n     *          procesed as path relative to Zend's library path.\n     * @throws  Zend_Exception If given path(s) is not available or incorect.\n     * @return  boolean TRUE if 'include_path' was changed. FALSE if given\n     *          path(s) were already set in 'include_path'\n     *\/\n    static public function includePath($includePath, $isRelative = false)\n    {\n        \/\/ Getting current include_path configuration option\n        $curr_path  = explode(PATH_SEPARATOR, get_include_path());\n        if (!is_array($includePath)) {\n            $includePath = explode(PATH_SEPARATOR, $includePath);\n        }\n        \/\/ Correcting paths according to system's standarts (see Zend::correctPath())\n        self::correctPath($curr_path);\n        self::correctPath($includePath);\n        $error = false;\n        \/\/ Working with paths in array\n        foreach ($includePath as $id => $path) {\n            \/\/ Process relative path\n            if ($isRelative) {\n                $path = realpath(dirname(__FILE__)\n                      . DIRECTORY_SEPARATOR\n                      . ltrim($path, '\\\\\/'));\n            }\n            \/\/ Check if path exist\n            if (!is_dir($path)) {\n                $error = sprintf(\"Cannot find '%s' path. Seems like this path \"\n                                 . \"is not available or path is incorrect. \"\n                                 . \"Please note that path(s) cannot contain \"\n                                 . \"PATH_SEPARATOR char when \\$includePath is \"\n                                 . \"array.\", $includePath[$id]);\n            }\n            $includePath[$id] = $path;\n        }\n        \/**\n         * @todo throwing exceptions inside foreach could cause leaks, use a workaround\n         *       like this until a fix is available\n         *\n         * @link http:\/\/bugs.php.net\/bug.php?id=34065\n         *\/\n        if ($error) {\n            throw new Zend_Exception($error);\n        }\n        \/\/ Merging current 'include_path' and new include paths and leaving only\n        \/\/ unique paths.\n        $new_path = array_unique(array_merge($curr_path, $includePath));\n        \/\/ If new and old include paths differs then setting new 'include_path'\n        \/\/ and return true\n        if (0 !== count(array_diff($new_path, $curr_path))) {\n            set_include_path(implode(PATH_SEPARATOR, $new_path));\n            return true;\n        }\n        \/\/ Else return false\n        return false;\n    }\n    \n    \n    \/**\n     * Zend::excludePath()\n     *\n     * This method is pretty similar to (@link Zend::includePath()), except this\n     * removes given in param path from PHP's 'include_path' configuration option.\n     *\n     * Valid examples of $excludePath are:\n     * $excludePath = array('new\/path', 'another\/new\/path');\n     * $excludePath = 'new\/path' . PATH_SEPARATOR . 'another\/new\/path';\n     * $excludePath = 'new\/path';\n     *\n     * @see     Zend::correctPath()\n     * @param   string|array $includePath Array or a string with path that you\n     *          want to remove from 'include_path' configuration option.\n     * @return  boolean TRUE if 'include_path' was changed. FALSE if given\n     *          path(s) were not found in 'include_path'\n     *\/\n    static public function excludePath($excludePath)\n    {\n        \/\/ Getting current include_path configuration option\n        $curr_path  = explode(PATH_SEPARATOR, ini_get('include_path'));\n        if (!is_array($excludePath)) {\n            $excludePath = explode(PATH_SEPARATOR, $excludePath);\n        }\n        \/\/ Correcting paths according to system's standarts (see Zend::correctPath())\n        self::correctPath($curr_path);\n        self::correctPath($excludePath);\n        \/\/ Creating new path with all previous paths except those given in $excludePath\n        $new_path = array_diff($curr_path, $excludePath);\n        \/\/ If new and old include paths differs then setting new 'include_path'\n        \/\/ and return true\n        if (count($new_path) != count($curr_path)) {\n            ini_set('include_path', implode(PATH_SEPARATOR, $new_path));\n            return true;\n        }\n        \/\/ Else return false\n        return false;\n    }\n    \n    \n    \/**\n     * Zend::correctPath()\n     *\n     * Dummy method to correct given path according to system's specified\n     * directory separator. If given $pathToCorrect is an array, then all\n     * values in this array will be corrected, and array will be rturned.\n     *\n     * @uses    Zend::includePath()\n     * @param   string|array $pathToCorrect String or array with path(s) to correct\n     * @return  string|array Corrected path(s)\n     *\/\n    static public function correctPath(&$pathToCorrect)\n    {\n        foreach((array)$pathToCorrect as $key => $value) {\n            $pathToCorrect[$key] = str_replace(array('\\\\', '\/'), DIRECTORY_SEPARATOR, $value);\n        }\n        return $pathToCorrect;\n    }\n}\n[\/code]\n\nSo now in index.php of my project I have such lines:\n\n[code]\n\/**\n * Setting include_path configuration option\n *\/\nZend::includePath(array('..\/incubator\/', '..\/draft\/'), true);\n[\/code]",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2006-07-21T09:59:47.000+0000",
                    "updated": "2006-07-21T09:59:47.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10725",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Let us coordinate with Art Hundiak who is working on Zend_Registry in the incubator.\nThen we can rollout a tested version of Zend.php with various enhancements at the same time, instead of multiple times.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2006-08-21T18:51:46.000+0000",
                    "updated": "2006-08-21T18:51:46.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10747",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "I can't find how to edit comments so that's why I've decided to edit main post...",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2006-08-28T03:39:00.000+0000",
                    "updated": "2006-08-28T03:39:00.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10748",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "I found that it's easier to read the code here, not in the main post. Sorry for chain-posts:\n\nThe latest idea which I currently use in Zend.php is:\n\n{code:none}\n    \/**\n     * Zend::includePath()\n     *\n     * Add new path to PHP's 'include_path' configuration option.\n     *\n     * Valid examples of $includePath are:\n     * $includePath = array('new\/path', 'another\/new\/path');\n     * $includePath = 'new\/path' . PATH_SEPARATOR . 'another\/new\/path';\n     * $includePath = 'new\/path';\n     *\n     * Note that second param $isRelative must be true only for paths that are\n     * relative to Zend core path (library).\n     *\n     * @see     Zend::correctPath()\n     * @param   string|array $includePath Array or a string with path that you\n     *          want to add to 'include_path' configuration option.\n     * @param   boolean $isRelative (optional) If TRUE, then given path will be\n     *          procesed as path relative to Zend's library path.\n     * @throws  Zend_Exception If given path(s) is not available or incorect.\n     * @return  boolean TRUE if 'include_path' was changed. FALSE if given\n     *          path(s) were already set in 'include_path'\n     *\/\n    static public function includePath($includePath, $isRelative = false)\n    {\n        \/\/ Getting current include_path configuration option\n        $curr_path  = explode(PATH_SEPARATOR, get_include_path());\n        if (!is_array($includePath)) {\n            $includePath = explode(PATH_SEPARATOR, $includePath);\n        }\n        \/\/ Correcting paths according to system's standarts (see Zend::correctPath())\n        self::correctPath($curr_path);\n        self::correctPath($includePath);\n        $error = false;\n        \/\/ Working with paths in array\n        foreach ($includePath as $id => $path) {\n            \/\/ Process relative path\n            if ($isRelative) {\n                $path = realpath(dirname(__FILE__)\n                      . DIRECTORY_SEPARATOR\n                      . ltrim($path, '\\\\\/'));\n            }\n            \/\/ Check if path exist\n            if (!is_dir($path)) {\n                $error = sprintf(\"Cannot find '%s' path. Seems like this path \"\n                                 . \"is not available or path is incorrect. \"\n                                 . \"Please note that path(s) cannot contain \"\n                                 . \"PATH_SEPARATOR char when \\$includePath is \"\n                                 . \"array.\", $includePath[$id]);\n            }\n            $includePath[$id] = $path;\n        }\n        \/**\n         * @todo throwing exceptions inside foreach could cause leaks, use a workaround\n         *       like this until a fix is available\n         *\n         * @link http:\/\/bugs.php.net\/bug.php?id=34065\n         *\/\n        if ($error) {\n            throw new Zend_Exception($error);\n        }\n        \/\/ Merging current 'include_path' and new include paths and leaving only\n        \/\/ unique paths.\n        $new_path = array_unique(array_merge($curr_path, $includePath));\n        \/\/ If new and old include paths differs then setting new 'include_path'\n        \/\/ and return true\n        if (0 !== count(array_diff($new_path, $curr_path))) {\n            set_include_path(implode(PATH_SEPARATOR, $new_path));\n            return true;\n        }\n        \/\/ Else return false\n        return false;\n    }\n    \n    \n    \/**\n     * Zend::excludePath()\n     *\n     * This method is pretty similar to (@link Zend::includePath()), except this\n     * removes given in param path from PHP's 'include_path' configuration option.\n     *\n     * Valid examples of $excludePath are:\n     * $excludePath = array('new\/path', 'another\/new\/path');\n     * $excludePath = 'new\/path' . PATH_SEPARATOR . 'another\/new\/path';\n     * $excludePath = 'new\/path';\n     *\n     * @see     Zend::correctPath()\n     * @param   string|array $includePath Array or a string with path that you\n     *          want to remove from 'include_path' configuration option.\n     * @return  boolean TRUE if 'include_path' was changed. FALSE if given\n     *          path(s) were not found in 'include_path'\n     *\/\n    static public function excludePath($excludePath)\n    {\n        \/\/ Getting current include_path configuration option\n        $curr_path  = explode(PATH_SEPARATOR, ini_get('include_path'));\n        if (!is_array($excludePath)) {\n            $excludePath = explode(PATH_SEPARATOR, $excludePath);\n        }\n        \/\/ Correcting paths according to system's standarts (see Zend::correctPath())\n        self::correctPath($curr_path);\n        self::correctPath($excludePath);\n        \/\/ Creating new path with all previous paths except those given in $excludePath\n        $new_path = array_diff($curr_path, $excludePath);\n        \/\/ If new and old include paths differs then setting new 'include_path'\n        \/\/ and return true\n        if (count($new_path) != count($curr_path)) {\n            ini_set('include_path', implode(PATH_SEPARATOR, $new_path));\n            return true;\n        }\n        \/\/ Else return false\n        return false;\n    }\n    \n    \n    \/**\n     * Zend::correctPath()\n     *\n     * Dummy method to correct given path according to system's specified\n     * directory separator. If given $pathToCorrect is an array, then all\n     * values in this array will be corrected, and array will be rturned.\n     *\n     * @uses    Zend::includePath()\n     * @param   string|array $pathToCorrect String or array with path(s) to correct\n     * @return  string|array Corrected path(s)\n     *\/\n    static public function correctPath(&$pathToCorrect)\n    {\n        foreach((array)$pathToCorrect as $key => $value) {\n            $pathToCorrect[$key] = str_replace(array('\\\\', '\/'), DIRECTORY_SEPARATOR, $value);\n        }\n        return $pathToCorrect;\n    }\n{code}\n\nSo in my project's index.php I have such string, for example:\n\n{code:none}\n\/\/ include_path is\n\/\/ '.:\/home\/ixti\/includes'\nrequire_once 'lib\/Zend.php';\nZend::includePath(array('\/', '..\/incubator'), true);\n\/\/ now include_path is\n\/\/ '.:\/home\/ixti\/includes:\/home\/ixti\/includes\/lib:\/home\/ixti\/includes\/incubator'\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2006-08-28T03:42:53.000+0000",
                    "updated": "2006-08-28T03:42:53.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/10786",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "Gavin Vess, I don't clearly understood what you are going to do,\nbut if my help or assistance is needed then I'll be glad to assist :)\n\nAnyhow if my code is usefull and you'll include it into Zend,\nI'll be pleased. :)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2006-09-06T10:03:22.000+0000",
                    "updated": "2006-09-06T10:03:22.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11346",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Changing fix version to 0.6.0.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2006-11-13T15:13:45.000+0000",
                    "updated": "2006-11-13T15:13:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12464",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Various changes have been made to related functions in Zend.php over the last few months.  I continue to see value in your functions above, but some rework would be needed.  Based on current guidelines from the team, I believe the scope of changes above require a proposal.  Recently the ZF team has clearly stated that we need to avoid adding features to the ZF (before ZF 1.0) without properly following the process for proposing new features (i.e. proposals).\n\nIn order to proceed, I suggest you submit this as a proposal.  The greater visibility of a proposal may also help attract input and contributions from the community.  I believe the ideas and functions above have a greater chance of acceptance and adoption by the community, if they are contributed in the scope of a larger effort (a proposal addresses path manipulation utility functions for the ZF).\n\nIf you submit a proposal for these functions, please provide several use cases showing the community why and how these functions can be used with the current Zend.php related functions, autoloading, the ZF incubator, etc.  These use cases attract community support and suggestions for enhancements :)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-01-30T15:39:32.000+0000",
                    "updated": "2007-01-30T15:39:32.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12471",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "body": "Ok. I'll write a proposal as soon as possible.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ixti",
                        "name": "ixti",
                        "displayName": "Aleksey V. Zapparov",
                        "active": true
                    },
                    "created": "2007-01-31T01:36:49.000+0000",
                    "updated": "2007-01-31T01:36:49.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-151\/transitions"
}