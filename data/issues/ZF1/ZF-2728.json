{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2728",
    "key": "ZF-2728",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add a possibility to avoid that filters are recursively applied to each array value."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2728\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-11-26T08:38:06.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                "name": "laurent melmoux",
                "displayName": "Laurent Melmoux",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-02-25T11:18:20.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-11-26T09:00:07.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "If an element's value is an array, the filters are recursively applied to each array value. But sometime you may need to have a filter to work directly on an array (to remove elements on some conditions for example)\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2728\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/19602",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I need some code -- what exactly do you want to accomplish, and how does Zend_Form_Element prevent you from accomplishing it?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-03-05T10:15:35.000+0000",
                    "updated": "2008-03-05T10:15:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/19619",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "Fore example if you have a many to many table to describe which kind of bed and how many of them you have in a hotel bedroom. \nYou display in your form all the bed's type with a checkbox and a select with a array notation like this.\n\nbeds[2][id] \nbeds[2][num]\n\nbeds[3][id] \nbeds[3][num]\n\nbeds[4][id] \nbeds[4][num]\n\nWhen you submit the form you will get all the beds type in the $_POST['beds'] var. \nWhen the checkbox haven't been checked the key $beds[index][id] won't be set. So you may want a custom filter to remove the unchecked elements.\n\nBut as Zend_Filter_Element::getValue() is construct it will prevent to have the filter working because it will call the filter for each elements of the array \n{code}\n\/\/ Zend_Filter_Element::getValue()\narray_walk_recursive($valueFiltered, array($this, '_filterValue'));\n{code}\n\nwhile we would like the plain array to be passed to the filter.\n\nHope my English is not too obscure :)\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2008-03-05T11:49:08.000+0000",
                    "updated": "2008-03-05T11:49:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/20238",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please categorize\/fix as needed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-25T20:29:10.000+0000",
                    "updated": "2008-03-25T20:29:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/21308",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Use getRawValue() to pull the plain, infiltered array, which you can then pass to your own custom filter.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-04-22T11:15:34.000+0000",
                    "updated": "2008-04-22T11:15:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26521",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "Please consider this again, Matthew.\n\nIt really is an issue, especially because Zend_Form_Element is IMPOSSIBLE to modify without re-implementing all the Zend_Form_Element_* classes.\n\nThe problem is that some of us have defined elements that are arrays by themselves, and instead of filtering them as a whole, this filters their individual values.\n\nE.g. an element that represents a date and is an array with keys day\/month\/year. Instead of filtering the date as a whole, this would run the filters on the individual date components.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-20T12:07:57.000+0000",
                    "updated": "2008-11-20T12:07:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26524",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I need a concrete use case: what is the data being filtered, how the filter would be attached, and what the expected outcome will be. I understand what you're getting at, but I'm not going to take a stab in the dark at implementing it without these details.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-11-20T12:17:02.000+0000",
                    "updated": "2008-11-20T12:17:02.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26526",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "I'll try to provide you with a clear example, but before I do so, if you don't mind, can you tell me WHY is the recursion there at all? Which elements return recursive values that need recursive filtering?\n\nJust so I see both sides of the problem.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-20T12:39:15.000+0000",
                    "updated": "2008-11-20T12:39:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26527",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Look through the issue tracker; the feature was added by user request.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-11-20T12:40:46.000+0000",
                    "updated": "2008-11-20T12:40:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26532",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "Seems I can't find the ticket... doesn't matter.\n\nThe problem is difficult to demonstrate, because it's conceptual and you run into it only after you've extended Zend_Form_Element and the renderers quite a bit. Nevertheless, I'll try to give you an example (it seems to me that both me and the OP were doing a similar thing). Please bear with me, this is long :)\n\nAdded to Zend_Form is the functionality for two things:\n\n - *compound elements* (or \"objects\" if you will), which are represented in HTML using PHP array notation (object[property]). This is Zend_Form_Element_Person in this example.\n\n- *dynamic arrays of elements* (either scalar or objects). An array of scalars (e.g. text inputs) would be represented in HTML as text[0], text[1],... An array of objects would be represented as object[0][propA], object[0][propB], object[1][propA], object[1][propB]... Thanks to Zend_Form's architecture, you can add array support pretty easily.\n\nThe conceptual problem only shows itself when you use both in combination.\n\nThis all works *really* well, and with very little Javascript you can even let the user customize the number of items in the array without reloading a page.\n\n(If you contact me privately, I'd be glad to show you how cool this all works out in practice (unfortunately, I can't yet publicly publish it), so perhaps you can keep it in mind for Zend_Form 2.0 :).)\n\n\nHere's a VERY basic example (it assumes arrays have only one member). It shows a custom \"object element\", Person. The form then asks you for details about your father, your mother, and your siblings (for the purposes of the example, you can only specify one).\n\n{code}\n<?php\n\nset_include_path('library' . PATH_SEPARATOR . get_include_path());\nrequire_once 'Zend\/Loader.php';\nZend_Loader::registerAutoload();\n\nclass Zend_Form_Element_Person extends Zend_Form_Element_Xhtml {\n    public function render(Zend_View_Interface $view = null) {\n        $name = $this->getFullyQualifiedName();\n        $name = str_replace('[]', '[0]', $name); \/\/ in reality would have to draw multiple sets in a loop, each with a different index, if $this->isArray()\n        return $name .':<br\/>'                         \n             . ' - Name: <input type=\"text\" name=\"'.$name.'[name]\" value=\"\"><br\/>'\n             . ' - Age: <input type=\"text\" name=\"'.$name.'[age]\" value=\"\"><br\/>'\n             . ' - Favorite color: <input type=\"text\" name=\"'.$name.'[favoriteColor]\" value=\"\"><br\/><br\/>';\n    }\n}\n\nif ($_POST) {\n    echo '<pre>'.htmlspecialchars(print_r($_POST,true)).'<\/pre>';   \n}\n\n$form = new Zend_Form();\n$form->setView(new Zend_View());\n$form->addElement('person', 'father');\n$form->addElement('person', 'mother');\n$form->addElement('person', 'siblings', array('isArray'=>true));                            \n$form->addElement('submit', 'submit');\necho $form->render();\n\n{code}\n\nYou can see it in action here: http:\/\/jaka.kubje.org\/temp\/ZF-2728\/\n\nNow if you enter details about your family, the $_POST will look like this:\n\n{code}\nArray\n(\n    [father] => Array\n        (\n            [name] => John Doe\n            [age] => 50\n            [favoriteColor] => blue\n        )\n\n    [mother] => Array\n        (\n            [name] => Jane Doe\n            [age] => 48\n            [favoriteColor] => red\n        )\n\n    [siblings] => Array\n        (\n            [0] => Array\n                (\n                    [name] => Jackie Doe\n                    [age] => 18\n                    [favoriteColor] => pink\n                )\n\n        )\n\n    [submit] => submit\n)\n{code}\n\nNow you make My_Filter_Person, which works on a person as a whole.\n\nThe filtering code in Zend_Form_Element is the following:\n{code}\n         if ($this->isArray() && is_array($valueFiltered)) {\n             array_walk_recursive($valueFiltered, array($this, '_filterValue'));\n         } else {\n             $this->_filterValue($valueFiltered, $valueFiltered);\n         }\n{code}\n\nWhen filtering the father and mother elements, which are not arrays, the validator will receive an \"object\" like this:\n{code}\n    [father] => Array\n        (\n            [name] => John Doe\n            [age] => 50\n            [favoriteColor] => blue\n        )\n{code}\n\nThis works as expected.\n\nWith siblings, which is an array, you'd expect the filter to be run multiple times, once for each value. And indeed, this is how it works for arrays of scalars.\n\nHowever for arrays of objects, it's a different story. If array_walk were used, the filter would run multiple times, once for each object, just like for father and mother element, and all would be fine and dandy. Unfortunately array_walk_recursive is used, which causes filters to run not only on first-level values, but also descends into children, which effectively runs them on object properties.\n\nHope this demonstrates it well enough.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-20T14:01:54.000+0000",
                    "updated": "2008-11-20T14:01:54.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26542",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "Oh and btw, this is also how validators are run in isValid() - once per value. They do not recurse down the values.\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-21T02:51:13.000+0000",
                    "updated": "2008-11-21T02:51:13.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26549",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "Well there is some USE CASE where the recursive behaviour is nice to have and some where you like to avoid it. \n\nJust to add anthor USE CASE, one is when your filter needs to work on an array of values as a whole and not value per value. \n\n\nLest take for example an articles module where you can publish articles and with an article associate an unlimited number of reference url.\n\nIn your form you have the elements for the article and a link \"add url\" which let you dynamically add urls element form. When sumited the urls appear like this:\n\n$_POST[links] => array('url1', 'url2', 'url3');\n\nLest say now that you have 2 filters:\n\n\n\u2022\tMy_Filter_Url which format url and remove any 'http:\/\/' Here the recursive behaviour is pefect.\n\u2022\tMy_Filter_UrlBlackList which is removing url from the array if the are part of a blacklist. Then here we don't want the recursive behaviour but have the full array past to the filter.\n\nI'm wandering if it will be possible to pass a isRecursiveFilter option to the Zend_Form_Element::addFilter() to switch off the behaviour on demand ? I'm not sure about this request I haven't look at the Zend_Form code since several moths :)\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2008-11-21T04:31:23.000+0000",
                    "updated": "2008-11-21T04:31:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26630",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "Indeed it would be nice if Zend_Form could support *dynamic arrays of elements* :)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2008-11-24T08:52:12.000+0000",
                    "updated": "2008-11-24T08:52:12.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26759",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "body": "support dynamic arrays of elements could be usefull for multiple insert\/update forms too.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=laurent+melmoux",
                        "name": "laurent melmoux",
                        "displayName": "Laurent Melmoux",
                        "active": true
                    },
                    "created": "2008-11-26T08:23:22.000+0000",
                    "updated": "2008-11-26T08:23:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26761",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I'm closing this again. If you want such support, please create a proposal. It needs to specify the requirements succinctly, and layout a plan for how to keep backwards compatibility with how these elements currently work.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2008-11-26T08:37:57.000+0000",
                    "updated": "2008-11-26T08:37:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26762",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "Ehh...\n\nYou say you need a concrete use case. I give you one (as succinct as possible). Then you close it w\/o an explanation why and tell me I should now create a proposal.\n\nProposal for fixing what is basically a bug. A piece of code which no-one even knows why it is there. Something that causes filters to behave inconsistently between arrays and non-arrays. And makes them behave inconsistently with validators.\n\nDon't fix it as far as I'm concerned, I can keep patching ZF until you run into the same problem and fix it. But don't waste my time having me write stuff in vain.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-26T08:56:58.000+0000",
                    "updated": "2008-11-26T08:56:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/26763",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "body": "Oh, and to be clear, I \"do not want such support\". Laurent wants such support. I want to be able to implement it myself, using Zend_Form as a base. I would only like Zend_Form to work logically\/consistently, so I can do so.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jaka",
                        "name": "jaka",
                        "displayName": "Jaka Jancar",
                        "active": true
                    },
                    "created": "2008-11-26T09:00:07.000+0000",
                    "updated": "2008-11-26T09:00:07.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2728\/transitions"
}