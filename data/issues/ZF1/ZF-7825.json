{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7825",
    "key": "ZF-7825",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Rest_Controller postAction cannot access request data"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7825\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/7",
                "name": "Needs Proposal"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-09-10T20:14:06.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                "name": "ajcoon",
                "displayName": "AJ Coon",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-09-10T19:26:06.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-21T08:07:57.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I am extending Zend_Rest_Controller, and in my postAction method trying to access variables in the post request.  I am calling:\n\n$this->view->username = $this->getRequest()->getParam('username');\n\nThe username value returned from getParam() is null.\n\nI am making this exact same call in my getAction and it finds the value fine in the request.  Is getParam() not the correct call for a post request?\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7825\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10361",
                    "id": 10361,
                    "description": "Mini Release",
                    "name": "1.9.2",
                    "userReleaseDate": "25\/Aug\/09",
                    "archived": false,
                    "releaseDate": "2009-08-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10422",
                    "id": 10422,
                    "name": "Zend_Rest_Route",
                    "description": "Includes both Zend_Rest_Route and Zend_Rest_Controller",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34388",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Changed component and assignee.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-09-10T19:32:01.000+0000",
                    "updated": "2009-09-10T19:32:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34389",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "What is the value of $this->getRequest()->getRawBody()?\n\nWhat I'm getting at is: what kind of payload is being sent to the action?\n\nI've used getParam() in my own code with all actions with success, so my suspicion is that the parameter is either not present, or is part of the raw body -- which you'll then need to parse.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-09-10T19:48:18.000+0000",
                    "updated": "2009-09-10T19:48:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34390",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                        "name": "ajcoon",
                        "displayName": "AJ Coon",
                        "active": true
                    },
                    "body": "Here is my modified postAction\n{code}\npublic function postAction() {\n        error_log('this->getRequest()->getRawBody(): ' . print_r($this->getRequest()->getRawBody(),true));\n\n        $this->view->username = $this->getRequest()->getParam('username');\n        $this->view->requestid = $this->getRequest()->getParam('requestid');\n        \/\/$this->_forward('index');\n    }\n{code}\n\nHere is the Apache error log output:\n{noformat}\n==> \/var\/log\/apache2\/error.log <==\n[Thu Sep 10 22:04:27 2009] [error] [client 127.0.1.1] this->getRequest()->getRawBody(): {\"username\":\"ajcoon\",\"password\":\"foobar\",\"requestid\":\"4aa9be3b22fe98.65658205\"}\n{noformat}\n\nSo, the data *is* being passed in by the client....so then you're saying, I need to define parsing logic myself?  I guess that makes sense...\n\nPerhaps this could result in a feature request for a helper class to parse POST\/PUT data based on content type?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                        "name": "ajcoon",
                        "displayName": "AJ Coon",
                        "active": true
                    },
                    "created": "2009-09-10T19:56:29.000+0000",
                    "updated": "2009-09-10T19:56:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34391",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "So, yes, you've stumbled onto one of the pitfalls of the request object: it doesn't currently have a way to decode the raw request body based on the Content-Type passed in.\n\nI've built up an action helper for myself that checks the Content-Type request header for the string \"application\/json\" , and, if found, pulls the data from there, passes it to Zend_Json::decode(), and then passes that data back into the request object. It's trivial to write currently, but we do need a standard solution for this.\n\nI'm closing the issue for now (as it's marked as a bug); when I get a proposal written for the new functionality, I'll link here to it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-09-10T20:13:52.000+0000",
                    "updated": "2009-09-10T20:13:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34392",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                        "name": "ajcoon",
                        "displayName": "AJ Coon",
                        "active": true
                    },
                    "body": "Great, thanks!\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                        "name": "ajcoon",
                        "displayName": "AJ Coon",
                        "active": true
                    },
                    "created": "2009-09-10T20:16:33.000+0000",
                    "updated": "2009-09-10T20:16:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34404",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lcrouch",
                        "name": "lcrouch",
                        "displayName": "Luke Crouch",
                        "active": true
                    },
                    "body": "That's a good point. I think there's some RESTful Zend_Controller enhancements we should wrap up into a proposal as a consequence of people using Zend_Rest.\n\n1. Helper(s) to digest request bodies based on popular Content-Type values - xml, json, http-form-encoded\n2. Enhance ContextSwitch helper to be sensitive to Accept request headers for determining view modes so the format doesn't have to be in the URI\n\nOthers?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lcrouch",
                        "name": "lcrouch",
                        "displayName": "Luke Crouch",
                        "active": true
                    },
                    "created": "2009-09-11T12:14:06.000+0000",
                    "updated": "2009-09-11T12:14:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34405",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                        "name": "ajcoon",
                        "displayName": "AJ Coon",
                        "active": true
                    },
                    "body": "I would add:\n\n3. Extending views to support the concept of one response, many formats, again based on the Accept header.  What I've done in my REST controllers is this:\n\n{noformat}\nll application\/views\/scripts\/helloworld\/\ntotal 24\n-r--r--r-- 1 root root  82 2009-09-10 08:41 get.json.phtml\n-r--r--r-- 1 root root 279 2009-09-09 16:40 _get_response.php\n-r--r--r-- 1 root root  62 2009-09-10 08:41 get.xml.phtml\n-r--r--r-- 1 root root  83 2009-09-10 23:16 post.json.phtml\n-r--r--r-- 1 root root 279 2009-09-10 16:53 _post_response.php\n-r--r--r-- 1 root root  63 2009-09-10 23:16 post.xml.phtml\n{noformat}\n\nI've defined a response structure in the _$action_response.php file.  I then include this in my \"resolvable\" views, and just output different formats.  For example:\n\ncat application\/views\/scripts\/helloworld\/_get_response.php\n{code}\n<?php\n$doc = new DOMDocument();\n$doc->formatOutput = true;\n\n$root_element = $doc->appendChild($doc->createElement(\"response\"));\n$root_element->appendChild( new DOMElement(\"requestid\", $this->requestid));\n$root_element->appendChild( new DOMElement(\"hello\",$this->username) );\n\n?>\n{code}\n\ncat application\/views\/scripts\/helloworld\/get.json.phtml\n{code}\n<?php\nrequire('_get_response.php');\nprint Zend_Json::fromXML($doc->saveXML());\n?>\n{code}\n\ncat application\/views\/scripts\/helloworld\/get.xml.phtml\n{code}\n<?php\nrequire('_get_response.php');\nprint $doc->saveXML();\n?>\n{code}\n\nWhat I'm envisioning is that the developer only has to implement the _$action_response.php file.  Then, depending on the Accept format (assuming there is an encoder that supports it), we provide the encoding auto-magically.  In my case, this would mean that by enabling json and xml in my ContextSwitch:\n\n{code}\n        $contextSwitch = $this->_helper->getHelper('contextSwitch');\n        $contextSwitch->setAutoJsonSerialization(false);\n        $contextSwitch->addActionContext('get', array('xml','json'))->initContext();\\\n{code}\n\n...I've auto-magically made \"get.json.phtml\" and \"get.xml.phtml\" available as views.\n\nDoes this make sense?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ajcoon",
                        "name": "ajcoon",
                        "displayName": "AJ Coon",
                        "active": true
                    },
                    "created": "2009-09-11T12:35:47.000+0000",
                    "updated": "2009-09-11T12:35:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34406",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "In the projects I've been working on, I look for the Content-Type and Accept header in the request; based on that, I will then add all the various REST actions to the appropriate context (currently, only json). So, in the end, I'm doing similarly to what you describe.\n\nAs for the formatting -- I leave that entirely to my individual views. HTML, JSON, and XML all have very different needs, so I simply pass in the values, and then serialize them as necessary. One technique I'm using is to have my service layer always return Zend_Paginator objects for lists -- that way I know that I have the same general type of object, and there are particular serialization formats automatically available. (I've also built a view helper that will setup my \"Content-Range\" header based on the Paginator object, which is tremendously useful.)\n\nI think having either ContextSwitch or a new action helper setup the ContextSwitch mappings for REST controllers makes sense; developers may always selectively switch off actions they don't want responding in the given format. Additionally, as Luke suggests, some automated scaffolding for pulling in the POST\/PUT data based on the Content-Type of the request would be useful.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-09-11T12:54:09.000+0000",
                    "updated": "2009-09-11T12:54:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34407",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lcrouch",
                        "name": "lcrouch",
                        "displayName": "Luke Crouch",
                        "active": true
                    },
                    "body": "Matthew,\n\nDo you want to write up a Zend_Rest proposal that incorporates all these? Or should we just make task tickets for them and get started? Or I can write a proposal if we want.\n\n-L",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lcrouch",
                        "name": "lcrouch",
                        "displayName": "Luke Crouch",
                        "active": true
                    },
                    "created": "2009-09-11T14:13:12.000+0000",
                    "updated": "2009-09-11T14:14:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52907",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nike+shox",
                        "name": "nike shox",
                        "displayName": "nike shox",
                        "active": true
                    },
                    "body": " Kanten of vulkanisert Sal\u00e9 is betont http:\/\/www.nikeshoxsko.biz with a fargerik 90'erne stil geometriske M\u00f8nster, which tar the already existing vintage Appell of this http:\/\/www.nikeshoxsko.biz silhuetten l\u00f8bet top.Stop at the endClothing \u00e5 legge the recent http:\/\/www.nikeshoxsko.biz Hardland from adidas Originals to the sneaker lineup today. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nike+shox",
                        "name": "nike shox",
                        "displayName": "nike shox",
                        "active": true
                    },
                    "created": "2012-11-21T08:07:57.000+0000",
                    "updated": "2012-11-21T08:07:57.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7825\/transitions"
}