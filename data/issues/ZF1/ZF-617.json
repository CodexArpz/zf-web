{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-617",
    "key": "ZF-617",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Controllers in sub-directories (modules)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-617\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10040",
                    "id": 10040,
                    "description": "Preview Release; MVC maturation, HTTP client, Gdata",
                    "name": "0.6.0",
                    "userReleaseDate": "16\/Dec\/06",
                    "archived": true,
                    "releaseDate": "2006-12-16",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2006-12-07T12:57:27.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                "name": "zendfw",
                "displayName": "Shekar Reddy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-12-04T16:37:14.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:31.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "http:\/\/www.nabble.com\/Controllers-in-subdirectories-tf2746071s16154.html\nhttp:\/\/www.nabble.com\/Controllers-in-subdirectories-tf2746071s16154.html\n\nI've hacked the Front, Dispatcher and Router classes of the STANDARD dispatcher\/router to accomplish mapping subdomains to modules but it is too messy because I had to extend 3 classes. Please sync the old router along with the RewriteRouter when controllers-in-subdirectories changes are incorporated in order to be able to over-ride the part of the code that returns the module name in a clean way in the standard router. Here are some ideas that are GENERIC enough to not break backwards compatibility:\n\nIf the _subdirectories variable is set to true, the first parameter in the basic router would be 'module', followed by controller and action parameters. Or, if the set _domain variable is subtracted from the HTTP_HOST, the remainder would be the subdomain which - in turn - would be the module. Otherwise, the code would behave as it is now - controller first, action next:\n\n{code}\nif ( $request->isSubdirectories())\n{\n   $module = $path[0];\n   $controller = $path[1];\n   \/\/\n   if ( $module )\n      $controller = $module . '_' . $controller;\n   \/\/\n   $action = isset($path[2]) ? $path[2] : null;\n}\nelse\n{\n   $domain = $request->getDomain();\n   \/\/\n   if ( $domain )             \/\/ Subdomain matching to module - more options here\n   {\n      $module = remainder from subtracting $domain from strtolower(HTTP_HOST) and the '.' separator\n      $controller = $path[0];\n      \/\/\n      \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n      \/\/ THIS ARE VERY, VERY IMPORTANT!!\n      $moduleMap = $request->getModuleMap();                 \/\/ Default: 'www' => ''\n      \/\/\n      \/\/ Invokes a different controller - useful for eg: developing\/testing a new controller (copy), etc.\n      $controllerMap = $request->getControllerMap();\n      \/\/\n      \/\/ Exceptional controllers that 'modify' the $module\n      $controllerToModuleMap = $request->getControllerToModuleMap();\n      \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n      \/\/\n      if ( isset( $controllerMap[ $controller ] )\n         $controller = $controllerMap[ $controller ];        \/\/ A different controller\n      \/\/\n      if ( isset( $moduleMap[ $module ] )\n         $module = $moduleMap[ $module ];                    \/\/ Maybe the 'www', no subdomain specified, etc.\n      elseif ( isset( $controllerToModuleMap[ $controller ] )\n         $module = $controllerToModuleMap[ $controller ];    \/\/ A different module\n      \/\/\n      if ( $module )\n         $controller = $module . '_' . $controller;\n      \/\/\n      $action = isset($path[1]) ? $path[1] : null;\n   }\n   else           \/\/ Old fashioned - no subdirectories or subdomains\n   {\n      $controller = $path[0];\n      $action = isset($path[1]) ? $path[1] : null;\n   }\n}\n{code}\n\nThe formatControllerName method should be ehnanced to ignore directory-separators in the controller name:\n\n{code}\npublic function formatControllerName($unformatted)\n{\n   if ( $this->_subdirectories || $this->_domain )\n   {\n      $unformatted = str_replace(array('-', '_', '.'), ' ', strtolower($unformatted));\n      $unformatted = preg_replace('[^a-z0-9 ]', ' ', $unformatted);\n      $unformatted = str_replace(' ', DIRECTORY_SEPARATOR, ucwords($unformatted));\n      \/\/\n      return $unformatted . 'Controller';\n   }\n   \/\/\n   return ucfirst($this->_formatName($unformatted)) . 'Controller';\n}\n{code}\n\nFurther, the Zend::loadClass\/loadFile methods could be duplicated in the Zend_Controller_Dispatcher class that would ignore directory-separators in controller names:\n\n{code}\nif ( $this->_subdirectories || $this->_domain )\n{\n   self::loadClass($className, $this->_directory);\n   $className = str_replace( DIRECTORY_SEPARATOR, '_', $className );\n}\nelse\n   Zend::loadClass($className, $this->_directory);\n{code}\n\nHere is another enhancement to improve performance in Zend_Controller_Dispatcher::_dispatch() method that gets invoked twice (regex) - once with $performDispatch false and the next time with true:\n\n{code}\nif ( $this->_className )\n{\n    $className = $this->_className;        \/\/ Second pass - $performDispatch = true\n    $this->_className = '';\n}\nelse               \/\/ First pass - $performDispatch = false\n{\n    $className = $this->formatControllerName($action->getControllerName());\n    $this->_className = $className;        \/\/ Store it to improve performance by re-using this var next-time when $performDispatch is true!\n}\n\/\/\n...\n...\n{code}\n\nMaybe, there are better ways and ideas (refer to Rob's suggestion, too) in this regard.\n\nExcuse me if I referred to any obsolete classes.\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-617\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11781",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "I guess, we can add the setControllerMap() to all the 3 situations and setModuleMap()\/setControllerToModuleMap() to subdirectories\/subdomain situations to offer the maximum features to everyone.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2006-12-04T17:43:00.000+0000",
                    "updated": "2006-12-04T17:43:00.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11785",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Added code tags to make the issue more readable. And assigning to Matthew.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2006-12-05T06:11:13.000+0000",
                    "updated": "2006-12-05T06:11:13.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11804",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "Modules are subfolders\/subdomains, controllers are classes and actions are methods. Just eliminated some redundancy and re-orgnaized the code to offer maximum features to everyone:\n\n\n{code}\n...\n...\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ CUSTOM MAPPING - THESE ARE VERY IMPORTANT\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ Invokes a different controller - useful for eg: developing\/testing a new controller (copy), etc.\n$controllerMap = &$request->getControllerMap();\n\/\/\n$moduleMap = &$request->getModuleMap();                 \/\/ Default: 'www' => ''\n\/\/\n\/\/ Exceptional controllers that 'modify' the $module\n$controllerToModuleMap = &$request->getControllerToModuleMap();\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\n$module = '';\n\/\/\nif ( $request->isSubdirectories())      \/\/ Subdirectory matching to module\n{\n   $module = $path[0];\n   $controller = $path[1];\n   $action = isset($path[2]) ? $path[2] : null;\n}\nelse\n{\n   \/\/ Old fashioned - no subdirectories or subdomains\n   $controller = $path[0];\n   $action = isset($path[1]) ? $path[1] : null;\n   \/\/\n   \/\/ Are modules supported through sub-domains?\n   $domain = $request->getDomain();\n   \/\/\n   if ( $domain )                      \/\/ Subdomain matching to module\n   {\n      $module = remainder from subtracting $domain and the '.' separator from strtolower(HTTP_HOST)\n   }\n}\n\/\/\nif ( isset( $controllerMap[ $controller ] )\n   $controller = $controllerMap[ $controller ];           \/\/ A different controller\n\/\/\nif ( isset( $moduleMap[ $module ] )\n   $module = $moduleMap[ $module ];                       \/\/ Maybe the 'www', no subdomain specified, etc.\nelseif ( isset( $controllerToModuleMap[ $controller ] )\n   $module = $controllerToModuleMap[ $controller ];       \/\/ A different module\n\/\/\nif ( $module )\n   $controller = $module . '_' . $controller;\n\n...\n...\n\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2006-12-06T09:54:06.000+0000",
                    "updated": "2006-12-06T09:54:06.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11816",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "The changes to the dispatcher are now in subversion, so now we can deal with routing. My idea is to simply pass an argument to the front controller using addParam(), check for this in the router, and, if present, choose to use the module schema:\n{code}\n$front->addParam('useModules', true);\n{code}\nin the router:\n{code}\npublic function route (....)\n{\n    \/\/ ...\n\n    if ($this->getParam('useModules')) {\n        \/\/ first param is module; grab and set in request\n    }\n\n    \/\/ continue processing as normal, grabbing controller and then action\n}\n{code}\nIn the rewrite router, we can do the same thing in addDefaultRoutes().\n\nIf this makes sense, I'll proceed.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-12-06T15:26:15.000+0000",
                    "updated": "2006-12-06T15:26:15.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11817",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "body": "Perfect!\n\nThanks!",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=zendfw",
                        "name": "zendfw",
                        "displayName": "Shekar Reddy",
                        "active": true
                    },
                    "created": "2006-12-06T16:42:03.000+0000",
                    "updated": "2006-12-06T16:42:03.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11818",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Final documentation, tests, and routing changes done in revision 2182. The front controller\/router parameter 'useModules' will indicate that the module should be the first item in the path.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2006-12-07T12:57:27.000+0000",
                    "updated": "2006-12-07T12:57:27.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-617\/transitions"
}