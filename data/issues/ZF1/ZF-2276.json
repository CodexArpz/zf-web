{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2276",
    "key": "ZF-2276",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Controller_Router_Route_Regex::assemble() breaks with certain regex routes."
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2276\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2008-01-11T04:15:08.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=brownoxford",
                "name": "brownoxford",
                "displayName": "Chris Abernethy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-12-06T12:39:05.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2008-01-11T04:15:08.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Background\n==================\n\nA certain page on my site can be accessed using either a user name or user id, and I need to route requests for these urls to the foo controller bar action, for example user bob has ID 23:\n\n  \/view\/bob\n  \/view\/23\n\nI've set up a route using the following .ini config:\n\ntype                = \"Zend_Controller_Router_Route_Regex\"\nroute               = \"view\/(?:(\\d+)|([^\\W_]+))\"\ndefaults.controller = \"foo\"\ndefaults.action     = \"bar\"\nmap.1               = \"user_id\"\nmap.2               = \"user_name\"\nreverse             = \"view\/%s\"\n\nThe issue here is that the assemble() method of the route cannot correctly produce a result. When the first parenthesized subexpression of the route (the digit part) is  matched, the data array contains only one element, but when the second subexpression is matched the data array contains two elements; the empty string for the first element, and the user_name for the second element.\n\nSince the number of elements in the data array is unknown, it is not possible to correctly specify a reverse format for use in vsprintf. I've been able to fix this locally by removing all items from the data array that evaluate with === to the empty string, but I'm not sure whether that would break anything globally.\n\nI realize that I could work around this by splitting the route into two, but I have a lot of routes to manage and many of them use this construct, so splitting them would just about double the number of routes that I have."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2276\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                "name": "martel",
                "displayName": "Michal Minicki",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10140",
                    "id": 10140,
                    "description": "Mini Release",
                    "name": "1.0.3",
                    "userReleaseDate": "30\/Nov\/07",
                    "archived": true,
                    "releaseDate": "2007-11-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17810",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Assigning to Martel.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-12-06T12:51:49.000+0000",
                    "updated": "2007-12-06T12:51:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/18277",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "body": "Actually, you don't have to split that route in order to get it to work. Why won't you simply catch a parameter in other place? For example, like this:\n\n{code}\ntype = \"Zend_Controller_Router_Route_Regex\"\nroute = \"view\/((?:\\d+)|(?:[^\\W_]+))\"\ndefaults.controller = \"foo\"\ndefaults.action = \"bar\"\nmap.1 = \"user\"\nreverse = \"view\/%s\"\n{code}\n\nYou will have to check  \"user\" whether it contains a number or a username in your controller then. It is more work for you but resolves a problem with reverse url.\n\nAnd on a second thought, with that case you don't need to differentiate between the two, making a regex even simpler:\n\n{code}\ntype = \"Zend_Controller_Router_Route_Regex\"\nroute = \"view\/([^\/]+)\"\n{code}\n\nIf you (or anybody else) have some kind of an idea on how to resolve the original issue, please leave a comment. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martel",
                        "name": "martel",
                        "displayName": "Michal Minicki",
                        "active": true
                    },
                    "created": "2008-01-11T04:15:08.000+0000",
                    "updated": "2008-01-11T04:15:08.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-2276\/transitions"
}