{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3802",
    "key": "ZF-3802",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Code which tests for an exception throw should be modified in some cases"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/14",
                "name": "Unit Tests: Task",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3802\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-07-29T11:43:45.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-02-18T14:34:46.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "There are a lot of tests which use constructions similar to this:\n{code}\ntry {\n...\n    \/\/ Some code which must throw an exception\n\n    $this->fail('Some message');\n} catch (Exception $e) {\n    \/\/ Success\n    \/\/ Do nothing\n}\n{code}\n\nIt doesn't work.\nPHPUnit fail() tests flow management is also exception based. \nSo test failure (if it appears) is not registered since fail exception is caught.\n\n\nIn most cases only component specific exceptions (or Zend_Exception) should be caught.\nBut we should be accurate enough with just replacing Exception to Zend_Exception through whole ZF tests code.\n\n\nSearching for '(Exception' through ZF tests code returns 97 files\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3802\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/10000",
                "name": "Postponed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [

            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/23191",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "It's ok when an component-specific exception is catched... something like\n\n{code}\ntry {\n  $this->assertEquals(..., ...);\n  $this->fail('failed');\n} catch (Zend_Db_Exception $e) {\n  \/\/ failed, run through\n}\n{code}\n\nBut it's always better to test also for the exception text which is really easy... \n\n{code}\ntry {\n  $this->assertEquals(..., ...);\n  $this->fail('failed');\n} catch (Zend_Db_Exception $e) {\n  $this->assertContains('my exception text', $e->getMessage());\n}\n{code}\n\nThis is the proper way of testing exceptions and should be done in all ZF testbeds.\nBtw: Just searching for \"Exception\" is not enough, because Zend_Exception or Zend_Db_Exception will also return \"Exception\".\n\nTo clearify... just replacing Exception with Zend_Exception is not enough for proper testing.\n\nGreetings\nThomas, I18N Team Leader",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2008-07-29T12:00:20.000+0000",
                    "updated": "2008-07-29T12:00:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/23193",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "body": "Yeah.\n\nThere is also another way to test for expected exceptions mentioned by Matthew:\n{code}\n\/**\n * @expectedException Zend_Foo_Exception\n *\/\npublic function testSuchAndSuchShouldThrowExceptionWithInvalidInput()\n{\n    \/\/ ...\n}\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                        "name": "alexander",
                        "displayName": "Alexander Veremyev",
                        "active": true
                    },
                    "created": "2008-07-29T12:28:07.000+0000",
                    "updated": "2008-07-29T12:28:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/23198",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "body": "Yes Alex, it's the same as $this->setExpectedException().",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doctorrock83",
                        "name": "doctorrock83",
                        "displayName": "julien PAULI",
                        "active": true
                    },
                    "created": "2008-07-30T03:58:28.000+0000",
                    "updated": "2008-07-30T03:58:28.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3802\/transitions"
}