{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10975",
    "key": "ZF-10975",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Loader::loadFile() doesn't throw an exception as mentioned when file doesn't exist"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10975\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-01-24T05:02:26.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                "name": "strictcoding",
                "displayName": "Strict Coding",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-01-21T03:24:09.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-02-01T09:52:49.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The Zend_Loader::loadFile() is documented as :\r\n@throws Zend_Exception\r\n\r\nBut it doesn't throw any exception if the file doesn't exist.\r\nInstead, PHP just dies with a fatal error.\r\n\r\nThis is problematic because we can't catch an exception this way:\r\n\r\ntry {\r\n  Zend_Loader::loadClass('ExampleController');\r\n}\r\ncatch (Zend_Exception $e) {\r\n  ...\r\n}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10975\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10520",
                    "id": 10520,
                    "description": "Mini Release",
                    "name": "1.11.2",
                    "userReleaseDate": "30\/Dec\/10",
                    "archived": false,
                    "releaseDate": "2010-12-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10001",
                    "id": 10001,
                    "name": "Zend_Loader",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44128",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "body": "The exception throw is through of the called Zend_Loader::_securityCheck() that validates filename.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "created": "2011-01-22T12:11:42.000+0000",
                    "updated": "2011-01-22T12:11:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44130",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "Whilst it indeed validates the file name as being secure, it doesn't check that the file does exist and is readable prior to include it.\r\n\r\nInstead, when the class file cannot be found, include() just issues a PHP warning, and no exception is thrown, so we can't catch it to handle this error gracefully!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-01-22T16:15:52.000+0000",
                    "updated": "2011-01-22T16:15:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44150",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "In the use case shown in the description, however, you *will* get an exception, as loadClass() *does* raise an exception if the class is not found.\r\n\r\nWe _used_ to throw exceptions within loadFile(). However, it was problematic. In particular, while include will return a boolean false when unable to load the script, if a script is found, and also returns a boolean false, then you get a false negative. This means there is no tried-and-true way to ensure you know whether or not the operation was successful, unless you perform a test against functionality you know the file provides. (This latter is what loadClass() is doing -- it's checking if the class requested is present after a file has been include'd.)\r\n\r\nThe only meaningful exception we can throw at this time is the security exception for malformed filenames.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-01-24T05:01:44.000+0000",
                    "updated": "2011-01-24T05:01:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44164",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "My mistake, the exception is indeed thrown through the class_exists() test.\r\nHowever, we still get a PHP warning stating that the file doesn't exist, which breaks the layout in development mode, and fills the log in production mode.\r\n\r\nI understand the argument about the return value of include() (although I can't see why a class file would \"return false\"), so can't we just check if the file is readable prior to include it?\r\n\r\nSomething like:\r\n\r\nfunction isIncludable($file)\r\n{\r\n\t$paths = explode(PATH_SEPARATOR, get_include_path());\r\n\tforeach ($paths as $path) {\r\n\t\tif (is_readable(\"$path\/$file\")) return true;\t\r\n\t}\r\n\treturn false;\r\n}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-01-24T07:43:52.000+0000",
                    "updated": "2011-01-24T07:43:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44166",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Because that's really, really horrible from a performance perspective. You're guaranteed at least two I\/O stat calls for each file you try and load this way -- versus 1 (or 0, if the realpath cache is hit) by include().\r\n\r\nI understand your frustration, but with code such as this which executes dozens if not hundreds of times on each request, stat calls get to be an expensive part of the overall process, and negatively impact performance.\r\n\r\nFor what it's worth, this situation will be fixed for ZF2 -- in fact, it's already fixed in ZF2. However, we can't backport the solution to ZF1 as the solutions are backwards incompatible.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-01-24T11:49:03.000+0000",
                    "updated": "2011-01-24T11:49:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44222",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "Thanks for your answer, Matthew. I just supposed that we could have another function to test that manually, just in case we need it, not for every class.\r\n\r\nBut eventually I figured out how the PHP warnings can be ignored with a simple @ symbol, and everything's working fine!\r\n\r\ntry {\r\n    @ Zend_Loader::loadClass($controller, $this->getFrontController()->getControllerDirectory());\r\n}\r\ncatch (Zend_Exception $e) {\r\n    \/\/ ...\r\n}\r\n\r\nMaybe these @ could be included in front of the @include and @include_once in the Zend_Loader::loadFile() method?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-02-01T08:18:08.000+0000",
                    "updated": "2011-02-01T08:18:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44225",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "No. :)\r\n\r\nWe used to, but it makes it near-impossible to debug when a class has not been found. Instead, users get a \"white screen of death\" with no useful information about what caused it. By omitting the silence operators, that situation does not occur.\r\n\r\nAdditionally, error suppression is really, really expensive at the engine level, particularly with the large number of calls to these particular functions within the framework.\r\n\r\nCombined, these are excellent reasons *never* to use error suppression on these methods -- and they are why we don't today.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-02-01T09:07:55.000+0000",
                    "updated": "2011-02-01T09:07:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44227",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "body": "Then I'm looking forward to the ZF2 solution!\r\nBecause right now, it's difficult to find a graceful solution when writing our own routing code.\r\nKeep up the hard work! ;)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=strictcoding",
                        "name": "strictcoding",
                        "displayName": "Strict Coding",
                        "active": true
                    },
                    "created": "2011-02-01T09:52:49.000+0000",
                    "updated": "2011-02-01T09:52:49.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10975\/transitions"
}