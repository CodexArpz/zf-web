{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4880",
    "key": "ZF-4880",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Gdata_YouTube getVideoId broken"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4880\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:23.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bklang",
                "name": "bklang",
                "displayName": "Ben Klang",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-11-08T11:30:30.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:23.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "While parsing a playlist feed from YouTube using the Zend_Gdata_YouTube_VideoFeed class my webserver started throwing these errors attempting to fetch an entry's video ID:\n\nNov  8 13:01:36 www03 apache2: PHP Fatal error:  Uncaught exception 'Zend_Gdata_App_Exception' with message 'Slash not found in atom:id' in \/srv\/vhost\/users\/bklang\/sites\/test.seedandfeed.org\/lib\/Zend\/Gdata\/YouTube\/VideoEntry.php:471 Stack trace: #0 \/srv\/vhost\/users\/bklang\/sites\/test.seedandfeed.org\/lib\/Site.php(179): Zend_Gdata_YouTube_VideoEntry->getVideoId() #1 \/srv\/vhost\/users\/bklang\/sites\/test.seedandfeed.org\/media_videos.php(9): Site::getVideos('http:\/\/gdata.yo...') #2 {main}   thrown in \/srv\/vhost\/users\/bklang\/sites\/tes\n\nTracing through the feed XML as returned by YouTube indicates that the video ID is actually set as a child element within the media:group element:\n(XML snippet from YouTube playlist feed):\n    <media:group>\n      <yt:videoid>iskn7S0CLYM<\/yt:videoid>\n\nI have created and will attach a patch that modifies the library to read the video ID directly from the media:group rather than from the atom:id.\n\nI could not find a way to attach a file so here is the patch in unified diff form:\n\ndiff -urN Zend\/Gdata\/YouTube\/Extension\/MediaGroup.php Zend.fixed\/Gdata\/YouTube\/Extension\/MediaGroup.php\n--- Zend\/Gdata\/YouTube\/Extension\/MediaGroup.php\t2008-05-05 10:54:00.000000000 -0400\n+++ Zend.fixed\/Gdata\/YouTube\/Extension\/MediaGroup.php\t2008-11-08 14:21:04.000000000 -0500\n@@ -30,6 +30,11 @@\n require_once 'Zend\/Gdata\/YouTube\/Extension\/MediaContent.php';\n \n \/**\n+ * @see Zend_Gdata_YouTube_Extension_VideoId\n+ *\/\n+require_once 'Zend\/Gdata\/YouTube\/Extension\/VideoId.php';\n+\n+\/**\n  * @see Zend_Gdata_YouTube_Extension_Duration\n  *\/\n require_once 'Zend\/Gdata\/YouTube\/Extension\/Duration.php';\n@@ -57,6 +62,7 @@\n     protected $_rootNamespace = 'media';\n \n     protected $_duration = null;\n+    protected $_videoId = null;\n     protected $_private = null;\n \n     public function __construct($element = null)\n@@ -104,6 +110,11 @@\n                 $private->transferFromDOM($child);\n                 $this->_private = $private;\n                 break;\n+            case $this->lookupNamespace('yt') . ':' . 'videoid':\n+                $videoId = new Zend_Gdata_YouTube_Extension_VideoId();\n+                $videoId->transferFromDOM($child);\n+                $this->_videoId = $videoId;\n+                break;\n \n         default:\n             parent::takeChildFromDOM($child);\n@@ -112,6 +123,16 @@\n     }\n \n     \/**\n+     * Returns the video ID value of this element\n+     *\n+     * @return Zend_Gdata_YouTube_Extension_VideoId\n+     *\/\n+    public function getVideoId()\n+    {\n+        return $this->_videoId;\n+    }\n+\n+    \/**\n      * Returns the duration value of this element\n      *\n      * @return Zend_Gdata_YouTube_Extension_Duration\ndiff -urN Zend\/Gdata\/YouTube\/Extension\/VideoId.php Zend.fixed\/Gdata\/YouTube\/Extension\/VideoId.php\n--- Zend\/Gdata\/YouTube\/Extension\/VideoId.php\t1969-12-31 19:00:00.000000000 -0500\n+++ Zend.fixed\/Gdata\/YouTube\/Extension\/VideoId.php\t2008-11-08 14:21:31.000000000 -0500\n@@ -0,0 +1,107 @@\n+<?php\n+\n+\/**\n+ * Zend Framework\n+ *\n+ * LICENSE\n+ *\n+ * This source file is subject to the new BSD license that is bundled\n+ * with this package in the file LICENSE.txt.\n+ * It is also available through the world-wide-web at this URL:\n+ * http:\/\/framework.zend.com\/license\/new-bsd\n+ * If you did not receive a copy of the license and are unable to\n+ * obtain it through the world-wide-web, please send an email\n+ * to license@zend.com so we can send you a copy immediately.\n+ *\n+ * @category   Zend\n+ * @package    Zend_Gdata\n+ * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n+ * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n+ *\/\n+\n+\/**\n+ * Represents the yt:videoid element used by the YouTube data API\n+ *\n+ * @category   Zend\n+ * @package    Zend_Gdata\n+ * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (http:\/\/www.zend.com)\n+ * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n+ *\/\n+class Zend_Gdata_YouTube_Extension_VideoID extends Zend_Gdata_Extension\n+{\n+\n+    protected $_rootNamespace = 'yt';\n+    protected $_rootElement = 'videoid';\n+    protected $_videoId = null;\n+\n+    \/**\n+     * Constructs a new Zend_Gdata_YouTube_Extension_Statistics object.\n+     * @param string $viewCount(optional) The viewCount value\n+     * @param string $watchCount(optional) The watchCount value\n+     *\/\n+    public function __construct($videoId = null)\n+    {\n+        foreach (Zend_Gdata_YouTube::$namespaces as $nsPrefix => $nsUri) {\n+            $this->registerNamespace($nsPrefix, $nsUri);\n+        }\n+        parent::__construct();        \n+        $this->_videoId = $videoId; \n+    }\n+\n+    \/**\n+     * Retrieves a DOMElement which corresponds to this element and all \n+     * child properties.  This is used to build an entry back into a DOM\n+     * and eventually XML text for sending to the server upon updates, or\n+     * for application storage\/persistence.  \n+     *\n+     * @param DOMDocument $doc The DOMDocument used to construct DOMElements\n+     * @return DOMElement The DOMElement representing this element and all \n+     * child properties.\n+     *\/\n+    public function getDOM($doc = null)\n+    {\n+        $element = parent::getDOM($doc);\n+        if ($this->_videoId !== null) {\n+            $element->setAttribute('videoid', $this->_videoId);\n+        }\n+        return $element;\n+    }\n+\n+    \/**\n+     * Given a child DOMNode tries to map the data into\n+     * instance members.  If no mapping is defined the data is passed upward\n+     * to the parent class for handling.\n+     * TODO: Convert attributes to proper types\n+     *\n+     * @param DOMNode $child The DOMNode needed to be handled\n+     *\/\n+    protected function takeChildFromDOM($child)\n+    {\n+        if ($child->nodeType == XML_TEXT_NODE) {\n+            $this->_videoId = $child->nodeValue;\n+        }\n+        parent::takeChildFromDOM($child);\n+    }\n+\n+    \/**\n+     * Get the value for this element's viewCount attribute.\n+     *\n+     * @return int The value associated with this attribute.\n+     *\/\n+    public function getId()\n+    {\n+        return $this->_videoId;\n+    }\n+\n+    \/**\n+     * Magic toString method allows using this directly via echo\n+     * Works best in PHP >= 4.2.0\n+     *\n+     * @return string\n+     *\/\n+    public function __toString() \n+    {\n+        return 'Video ID=' . $this->_videoId;\n+    }\n+\n+}\ndiff -urN Zend\/Gdata\/YouTube\/VideoEntry.php Zend.fixed\/Gdata\/YouTube\/VideoEntry.php\n--- Zend\/Gdata\/YouTube\/VideoEntry.php\t2008-05-05 10:54:00.000000000 -0400\n+++ Zend.fixed\/Gdata\/YouTube\/VideoEntry.php\t2008-11-08 14:01:47.000000000 -0500\n@@ -147,6 +147,13 @@\n     protected $_where = null;\n \n     \/**\n+     * YouTube Video ID\n+     *\n+     * @var Zend_Gdata_YouTube_Extension_VideoId\n+     *\/\n+    protected $_videoId = null;\n+\n+    \/**\n      * Creates a Video entry, representing an individual video\n      *\n      * @param DOMElement $element (optional) DOMElement from which this\n@@ -458,19 +465,17 @@\n     }\n \n     \/**\n-     * Gets the YouTube video ID based upon the atom:id value\n+     * Gets the YouTube video ID\n      *\n      * @return string The video ID\n      *\/\n     public function getVideoId()\n     {\n-        $fullId = $this->getId()->getText();\n-        $position = strrpos($fullId, '\/');\n-        if ($position === false) {\n-            require_once 'Zend\/Gdata\/App\/Exception.php';\n-            throw new Zend_Gdata_App_Exception('Slash not found in atom:id');\n+        $this->ensureMediaGroupIsNotNull();\n+        if ($this->getMediaGroup()->getVideoId() != null) {\n+            return $this->getMediaGroup()->getVideoId()->getId();\n         } else {\n-            return substr($fullId, strrpos($fullId,'\/') + 1);\n+            return null;\n         }\n     }\n \n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4880\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10251",
                    "id": 10251,
                    "description": "Mini Release",
                    "name": "1.6.2",
                    "userReleaseDate": "13\/Oct\/08",
                    "archived": false,
                    "releaseDate": "2008-10-13",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10088",
                    "id": 10088,
                    "name": "Zend_Gdata",
                    "description": "Class interface to Google Data API's.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32488",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jeremy",
                        "name": "jeremy",
                        "displayName": "jeremy clerc",
                        "active": true
                    },
                    "body": "This problem isn't fix in 1.8.4 version of Zend_Gdata.\nI don't understand the way to apply your patch, how to add this in zend gdata librairy ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jeremy",
                        "name": "jeremy",
                        "displayName": "jeremy clerc",
                        "active": true
                    },
                    "created": "2009-07-09T04:04:13.000+0000",
                    "updated": "2009-07-09T04:04:13.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32766",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tjohns",
                        "name": "tjohns",
                        "displayName": "Trevor Johns",
                        "active": true
                    },
                    "body": "Ben,\nSorry for not getting back to you sooner on this, it looks like your patch slipped through the cracks.\n\nBefore I can even begin to look at this, I need two things:\n\n1. You need to sign the Zend Framework CLA: http:\/\/framework.zend.com\/wiki\/display\/ZFPROP\/Contributor+License+Agreement\n2. You need to send us your patch as an attachment. The formatting here messes up patches that are pasted into comment fields (like yours was).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tjohns",
                        "name": "tjohns",
                        "displayName": "Trevor Johns",
                        "active": true
                    },
                    "created": "2009-07-20T17:35:33.000+0000",
                    "updated": "2009-07-20T17:35:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52749",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:53:23.000+0000",
                    "updated": "2012-11-20T20:53:23.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-4880\/transitions"
}