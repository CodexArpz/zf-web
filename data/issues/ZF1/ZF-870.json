{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-870",
    "key": "ZF-870",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "test if a transaction in use"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 1440,
                "timeestimate": 1440
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-870\/votes",
                "votes": 14,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mben",
                "name": "mben",
                "displayName": "Marc Bennewitz (GIATA mbH)",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-02-07T17:41:44.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2013-02-10T16:16:41.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I think it can usefull to test if a transaction already started and not commited or rolled back.\r\n\r\n{code}\r\nfunction update() {\r\n    $db = WebD::Db::getInstance();\r\n    $db->beginTransaction();\r\n    try {\r\n        $db->update( ... );\r\n        \/\/ if this changed all linked data must change too\r\n        updateAnother();\r\n        $db->commit();\r\n    } catch (Exception $e) {\r\n        $db->rollBack();\r\n        throw $e;\r\n    }\r\n}\r\n\r\nfunction updateAnother() {\r\n    $db = WebD::Db::getInstance();\r\n    if ($db->transactionStarted()) {\r\n        $db->update( [1] );\r\n        $db->update( [2] );\r\n    } else {\r\n        $db->beginTransaction();\r\n        try {\r\n            $db->update( [1] );\r\n            $db->update( [2] );\r\n            $db->commit();\r\n        } catch (Exception $e) {\r\n            $db->rollBack();\r\n            throw $e;\r\n        }\r\n    }\r\n}\r\n\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-870\/watchers",
                "isWatching": false,
                "watchCount": 7
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-8063",
                    "issue": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8063",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/attachment\/10292",
                    "filename": "pdo_transcount.diff",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2007-03-04T03:11:07.000+0000",
                    "size": 1893,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/framework.zend.com\/issues\/secure\/attachment\/10292\/pdo_transcount.diff"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10020",
                    "id": 10020,
                    "description": "Preview Release; I18N, Acl, Auth, Session",
                    "name": "0.7.0",
                    "userReleaseDate": "18\/Jan\/07",
                    "archived": true,
                    "releaseDate": "2007-01-18",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13119",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "Added diff for small propsal for Zend_Db_Pdo_Abstract to get open transaction count.\n\nAdded Property:\n# $_openTransactions = 0\n\nChanged method(s):\n+ beginTransaction\n+ commit\n+ rollback\n\nAdded method(s):\n+ int getOpenTransactionCount(void)",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2007-03-04T03:11:07.000+0000",
                    "updated": "2007-03-04T03:11:07.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13120",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mben",
                        "name": "mben",
                        "displayName": "Marc Bennewitz (GIATA mbH)",
                        "active": true
                    },
                    "body": "The diferences must created in the abstract class Zend_Db_Adapter_Abstract. (In your diff file it is correct)\n\nCan a connection have more than 1 open transaction ? I think no",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mben",
                        "name": "mben",
                        "displayName": "Marc Bennewitz (GIATA mbH)",
                        "active": true
                    },
                    "created": "2007-03-04T05:49:55.000+0000",
                    "updated": "2007-03-04T05:49:55.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13121",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "Hmm I saw such a implementation in a class am I using for a few month so I thought it is possible to open more than 1 transaction. I really never tested it.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2007-03-04T06:20:03.000+0000",
                    "updated": "2007-03-04T06:20:03.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/13847",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "Now i had a situation i needed more than one open transaction and at the end of all i commit\/rollback them all. So it is possible and I think we should add this patch\/improvement.\n\n{code:none|title=example|borderStyle=solid}\ntry {\n    $oDb->startTransaction();\n    $oDb->query(QUERY_A);\n\n    foreach ($testArray as $key => $value)\n    {\n        [...]\n        try {\n            $oDb->startTransaction();\n            $oDb->query(QUERY_B);\n        }\n        catch (Exception $e) {\n            $oDb->rollback();\n        }\n        [...]\n    }\n\n    [...]\n\n    while ($oDb->getTransactionCount() > 0) {\n        $oDb->commit();\n    }\n}\ncatch (Exception $e) {\n    while ($oDb->getTransactionCount() > 0) {\n        $oDb->rollback();\n    }\n}\n{code}\n\nSo QUERY_A is required, QUERY_B not and all queries will be commited at the _same_ time.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2007-03-30T18:58:26.000+0000",
                    "updated": "2007-03-30T18:58:26.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/20352",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Please categorize\/fix as needed.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-03-25T20:43:58.000+0000",
                    "updated": "2008-03-25T20:43:58.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/21053",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-04-18T13:12:04.000+0000",
                    "updated": "2008-04-18T13:12:04.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/26971",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "body": "Reassigning as Ralph is the maintainer of Zend_Db",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=wil",
                        "name": "wil",
                        "displayName": "Wil Sinclair",
                        "active": true
                    },
                    "created": "2008-12-04T12:53:17.000+0000",
                    "updated": "2008-12-04T12:53:17.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/27847",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "body": "It would be great to implement getTransactionCount() method at Zend_Db_Adapter_Abstract level.\n\nMySQL does not allow nested transaction, there if we call $db->beginTransaction() when it has already been called, it results in a 'PDOException' (I'm using PDO adapter).\n\nFor now my quick fix is to use a function as follow:\n{code}\nfunction isDbTransactionRunning(Zend_Db_Adapter_Abstract $dba)\n{\n\ttry {\n\t\t$dba->beginTransaction();\n\t} catch (Exception $e) {\n\t\treturn true;\n\t}\n\t$dba->rollBack();\n\treturn false;\n}\n{code}\nIt would be so much better\/cleaner to have Zend_Db_Adapter_Abstract::getTransactionCount()",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "created": "2009-01-07T14:33:53.000+0000",
                    "updated": "2009-01-07T14:33:53.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/27885",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "body": "I ran into the following error when saving a row object while a transaction was active: \n*exception 'Zend_Db_Table_Row_Exception'* with message 'Cannot refresh row as parent is missing'\nin \/var\/www\/library\/ZendFramework-1.7.1-minimal\/library\/Zend\/Db\/Table\/Row\/Abstract.php:755\n\nThis is because when Zend_Db_Table_Row::save() (_doInsert()\/doUpdate()) automatically run ::_refresh(). Since the transaction is running, ::_refresh() query fails and raise above mentioned error.\n\nI extended Zend_Db_Adapter as well as Zend_Db_Table_Row so that they handle transactions more natively & transparently, below are those classes, I hope it will be usefull for next versions. Basically when a transaction is running, ::_refresh() call is simply delayed up to when transaction is commited.\n\n{code}\n\/**\n * Extends Zend db adapter to add extra functionalities to handle sql transactions\n *\/\nclass Library_Db_Adapter_Pdo_Mysql extends Zend_Db_Adapter_Pdo_Mysql\n{\n\t\/**\n\t * Array of instances waiting to be refreshed once sql transaction is commited\n \t * Mutli-dimensional array: 1 entry per nested running transaction\n\t * @var array [Zend_Db_Table_Row,]\n\t *\/\n\tprotected $_rows_waiting_refresh = array();\n\n\t\/**\n\t * Keep track of the number of currently running transactions\n\t * @var int\n\t *\/\n\tprotected $_transaction_count = 0;\n\n\t\/**\n\t * Add a row waiting for refresh once current transaction gets commited\n\t *\n\t * @param Zend_Db_Table_Row_Abstract $row\n\t *\/\n\tpublic function addRowWaitingRefresh(Zend_Db_Table_Row_Abstract $row)\n\t{\n\t\tif (!$this->isTransactionRunning()) {\n\t\t\tthrow new Library_FenvException_DevError('cannot add row to wait refresh once transaction is commited, no transaction currently running');\n\t\t}\n\t\t$this->_rows_waiting_refresh[$this->_transaction_count][] = $row;\n\t}\n\n\t\/**\n\t * Return true if a transaction is running, false otherwise\n\t *\n\t * @return bool\n\t *\/\n\tpublic function isTransactionRunning()\n\t{\n\t\treturn !!$this->_transaction_count;\n\t}\n\n\t\/**\n\t * Start a transaction\n\t *\n\t * @return parent::beginTransaction\n\t *\/\n\tpublic function beginTransaction()\n\t{\n\t\tif ($output = parent::beginTransaction()) {\n\t\t\t$this->_rows_waiting_refresh[$this->_transaction_count] = array();\n\t\t\t++$this->_transaction_count;\n\t\t}\n\t\treturn $ output;\n\t}\n\n\t\/**\n\t * Rollback a transaction\n\t *\n\t * @return parent::rollBack\n\t *\/\n\tpublic function rollBack()\n\t{\n\t\tif ($output = parent::rollBack()) {\n\t\t\t--$this->_transaction_count;\n\n\t\t\t\/\/ do not refresh waiting instances and remove them from waiting list\n\t\t\tunset($this->_rows_waiting_refresh[$this->_transaction_count]);\t\t}\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Commit a transaction\n\t *\n\t * @return parent::commit\n\t *\/\n\tpublic function commit()\n\t{\n\t\tif ($output = parent::commit()) {\n\t\t\t--$this->_transaction_count;\n\n\t\t\t\/\/update instances waiting to be refreshed\n\t\t\twhile ($row = array_shift($this->_rows_waiting_refresh[$this->_transaction_count])) {\n\t\t\t\t$row->refresh();\n\t\t\t}\n\t\t}\n\t\treturn $output;\n\t}\n}\n\nclass Library_Db_Row extends Zend_Db_Table_Row_Abstract\n{\n\n\t\/**\n\t * Upon insert\/update, self::_refresh() is automatically called, generating an error if refresh returns no data.\n\t *\n\t * Problem is that if you're using sql transaction, refresh will fail and generate an exception\n\t * Therefore we prevent automatic refresh if a transaction is running, and store instance in an array to be refreshed as soon as transaction is commited.\n\t *\n\t *\/\n\tprotected function _refresh()\n\t{\n\t\t$dba = $this->getTable()->getAdapter();\n\t\tif ($dba->isTransactionRunning()) {\n\t\t\t$dba->addRowWaitingRefresh($this);\n\t\t} else {\n\t\t\treturn parent::_refresh();\n\t\t}\n\t}\n}\n{code}\n\nYou can find additional information here: http:\/\/www.qc4blog.com\/?p=410",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "created": "2009-01-08T14:51:40.000+0000",
                    "updated": "2009-01-08T14:51:40.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/27905",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "body": "Just to correct a typo on class declared on my precedent comment. In method \"public function addRowWaitingRefresh($row)\" please read:{code}$this->_rows_waiting_refresh[$this->_transaction_count - 1][] = $row;{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "created": "2009-01-09T07:26:11.000+0000",
                    "updated": "2009-01-09T07:26:11.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/28896",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "body": "Please ignore my comment on _refresh failing due to running sql transaction.\n\nAs William pointed it here (http:\/\/www.qc4blog.com\/?p=410), ::_refresh error did not come from having a running sql transaction, but from a filtering mechanism I had on Zend_Db_Table::_fetch() that made my newly inserted row not be returned.\n\nToo bad, shame on me :-( \n\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=remy215",
                        "name": "remy215",
                        "displayName": "Remy Damour",
                        "active": true
                    },
                    "created": "2009-02-17T10:02:44.000+0000",
                    "updated": "2009-02-17T10:02:44.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/31990",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=shaddyz",
                        "name": "shaddyz",
                        "displayName": "Shaddy Zeineddine",
                        "active": true
                    },
                    "body": "I had a similar problem. I extended the Mysqli adapter to automatically handle \"nested\" transactions. I've been using it and it works as intended.\n\n{code}\n<?php\n\nrequire_once 'Zend\/Db\/Adapter\/Mysqli.php';\n\nclass Steam_Db_Adapter_Mysqli extends Zend_Db_Adapter_Mysqli\n{\n    private $_transactionCount = 0;\n    \n    \/**\n     * Begin a transaction.\n     *\n     * @return void\n     *\/\n    protected function _beginTransaction()\n    {\n        if ($this->_transactionCount === 0)\n        {\n            $this->_connect();\n            $this->_connection->autocommit(false);\n        }\n        \n        $this->_transactionCount++;\n    }\n\n    \/**\n     * Commit a transaction.\n     *\n     * @return void\n     *\/\n    protected function _commit()\n    {\n        $this->_transactionCount--;\n        \n        if ($this->_transactionCount === 0)\n        {\n            $this->_connect();\n            $this->_connection->commit();\n            $this->_connection->autocommit(true);\n        }\n    }\n}\n\n?>\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=shaddyz",
                        "name": "shaddyz",
                        "displayName": "Shaddy Zeineddine",
                        "active": true
                    },
                    "created": "2009-06-19T10:47:45.000+0000",
                    "updated": "2009-06-19T10:47:45.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/33099",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=shaddyz",
                        "name": "shaddyz",
                        "displayName": "Shaddy Zeineddine",
                        "active": true
                    },
                    "body": "hmm... i couldn't find the changes for this issue or any information related to how this was fixed.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=shaddyz",
                        "name": "shaddyz",
                        "displayName": "Shaddy Zeineddine",
                        "active": true
                    },
                    "created": "2009-07-31T09:44:04.000+0000",
                    "updated": "2009-07-31T09:44:04.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/33387",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "What's the status on this issue?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-08-11T19:07:58.000+0000",
                    "updated": "2009-08-11T19:07:58.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/42435",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "I found a PHP-Bug-Report that it's already implemented in PDO but not documented and tested\r\n-> http:\/\/bugs.php.net\/bug.php?id=52736",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2010-10-06T10:46:51.000+0000",
                    "updated": "2010-10-06T10:46:51.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/43322",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=shaddyz",
                        "name": "shaddyz",
                        "displayName": "Shaddy Zeineddine",
                        "active": true
                    },
                    "body": "I have a patch for this issue, which I consider pretty significant. I have been using my own modified class in order to get the desired functionality. Is there a reason why this has not yet been fixed? Is there any way I can submit my patch in some official way? If so, can everyone describe the IDEAL operation. Should nested transactions be handled automatically, should it be an option? should it be done manually using the transaction count?",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=shaddyz",
                        "name": "shaddyz",
                        "displayName": "Shaddy Zeineddine",
                        "active": true
                    },
                    "created": "2010-11-24T20:32:57.000+0000",
                    "updated": "2010-11-24T20:32:57.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-870\/transitions"
}