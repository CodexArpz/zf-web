{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10802",
    "key": "ZF-10802",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Select returns weird results when joining when adding columns or external code"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10802\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-12-11T12:49:50.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                "name": "tridem",
                "displayName": "Webdevilopers",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-12-09T04:18:48.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-12-15T03:34:45.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I have a strange behaviour of Zend_Db_Select inside one of my mappers. The dbTable model is working fine so far (see code below).\r\n\r\nEach one of the following examples has an unexpected behaviour.\r\n\r\nExample 1:\r\n{code}\r\n        $select = $this->getSelect()\r\n            ->setIntegrityCheck(false);\r\n            \r\n        #echo $select;\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            #,array()\r\n            );\r\n                \r\n        echo $select;\r\n{code}\r\n\r\n*returns*:\r\n{code}\r\nSELECT `typesToRecipe`.* FROM `typesToRecipe` WHERE (deleteDate IS NULL) AND (basic = 0)\r\n{code}\r\n\r\nExample 2:\r\n{code}\r\n        $select = $this->getSelect()\r\n            ->setIntegrityCheck(false);\r\n            \r\n        #echo $select;\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            ,array() \/\/ changed\r\n            );\r\n                \r\n        echo $select;\r\n{code}\r\n\r\n*returns*:\r\n{code}\r\nSELECT `recipes`.* FROM `typesToRecipe` INNER JOIN `recipes` WHERE (deleteDate IS NULL) AND (basic = 0)\r\n{code}\r\n\r\nExample 3:\r\n{code}\r\n        $select = $this->getSelect()\r\n            ->setIntegrityCheck(false);\r\n            \r\n        echo $select; \/\/ changed\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            #,array()\r\n            );\r\n                \r\n        echo $select;\r\n{code}\r\n\r\n*returns (desired clause!)*:\r\n{code}\r\nSELECT `recipes`.* FROM `recipes` WHERE (deleteDate IS NULL) AND (basic = 0)\r\nSELECT `recipes`.*, `typesToRecipe`.* FROM `recipes` INNER JOIN `typesToRecipe` ON recipes.id = typesToRecipe.recipeId WHERE (deleteDate IS NULL) AND (basic = 0)\r\n{code}\r\n\r\nExample 4:\r\n{code}\r\n        $select = $this->getSelect()\r\n            ->setIntegrityCheck(false);\r\n            \r\n        echo $select; \/\/ changed\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            ,array() \/\/ changed\r\n            );\r\n                \r\n        echo $select;\r\n{code}\r\n\r\n*returns*:\r\n{code}\r\nSELECT `recipes`.* FROM `recipes` WHERE (deleteDate IS NULL) AND (basic = 0)\r\nSELECT `recipes`.* FROM `recipes` INNER JOIN `typesToRecipe` ON recipes.id = typesToRecipe.recipeId WHERE (deleteDate IS NULL) AND (basic = 0)\r\n{code}\r\n\r\nI see absolutely no reason why removing or adding of an echo is able to change the select clause.\r\nWhat is happening here?\r\n\r\n*mapper model*\r\n{code}\r\n<?php\r\nclass Application_Model_Recipe extends My_Model_Abstract\r\n{\r\n    protected $_mapperClass = 'Application_Model_Mapper_Recipe';\r\n\r\n    public function fetchAll($where, $order = 'name', $count = null, $offset = null)\r\n    {\r\n        if (!$where instanceof Zend_Db_Table_Select) {\r\n            $where = $this->createQuery($where);\r\n        }\r\n\r\n        $result = $this->getDbTable()->fetchAll($where, $order, $count, $offset);\r\n\r\n        if (null === $result->current()) {\r\n            return;\r\n        }\r\n        $entries = array();\r\n        foreach ($result as $row) {\r\n            $entry = new $this->_modelClass();\r\n            $this->populate($row, $entry);\r\n            $entries[] = $entry;\r\n        }\r\n        return $entries;\r\n    }\r\n        \r\n    public function createQuery($where)\r\n    {\r\n\t\/\/ examples inside here\r\n\treturn $select;\r\n    }\r\n}\r\n{code}\r\n\r\n*dbTable model*\r\n{code}\r\n<?php\r\nclass Application_Model_DbTable_Recipe extends My_Model_DbTable_Abstract\r\n{\r\n    protected $_name = 'recipes';\r\n\r\n    public function select() {\r\n    \t$select = parent::select();\r\n    \t$select->where('deleteDate ?', new Zend_Db_Expr('IS NULL'));\r\n    \t$select->where('basic = 0');\r\n    \treturn $select;\r\n    }\r\n}\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10802\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                "name": "ramon",
                "displayName": "Ramon Henrique Ornelas",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10501",
                    "id": 10501,
                    "description": "Mini Release",
                    "name": "1.11.1",
                    "userReleaseDate": "30\/Nov\/10",
                    "archived": false,
                    "releaseDate": "2010-11-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43558",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "body": "Zend_Db_Table_Select::assemble() (line 200) makes a verification if exists columns assigned if not exists this method force called to Zend_Db_Table_Select::from().\r\n\r\nBut you can force the called of the Zend_Db_Table_Select::from() well before, in the moment of creation of Zend_Db_Table_Select.\r\n{code}\r\n$table = new Foo();\r\n$table->select(true); \/\/ per default this parameter is false\r\n{code}\r\n\r\nThis was fixed in issue ZF-2925. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "created": "2010-12-11T12:49:20.000+0000",
                    "updated": "2010-12-11T12:49:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43572",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                        "name": "tridem",
                        "displayName": "Webdevilopers",
                        "active": true
                    },
                    "body": "Thanks for the hint Ramon. I will integrate it!\r\n\r\nStill I am wondering about the behaviour of example 3\r\nwhere the query changes simply because I added (any) code\r\n\r\n{code}\r\necho $select;\r\n{code}\r\n\r\nwithout changing anything else. Any ideas?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                        "name": "tridem",
                        "displayName": "Webdevilopers",
                        "active": true
                    },
                    "created": "2010-12-12T23:46:23.000+0000",
                    "updated": "2010-12-12T23:46:23.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43573",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                        "name": "tridem",
                        "displayName": "Webdevilopers",
                        "active": true
                    },
                    "body": "I now tried this code:\r\n\r\n{code}\r\n        $select = $this->getDbTable()\r\n            #->select(Zend_Db_Table_Abstract::SELECT_WITH_FROM_PART)\r\n            ->select(true)\r\n            ->setIntegrityCheck(false);\r\n            \r\n        #echo $select;\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            ,array()\r\n            );\r\n\r\n        echo $select;exit;\r\n        return $select;\r\n{code}\r\n\r\nI still get the wrong query:\r\n\r\n{code}\r\nSELECT `recipes`.* FROM `typesToRecipe` INNER JOIN `recipes` WHERE (deleteDate IS NULL) AND (basic = 0)\r\n{code}\r\n\r\nAnd again when I add the *echo*\r\n\r\n{code}\r\n        $select = $this->getDbTable()\r\n            #->select(Zend_Db_Table_Abstract::SELECT_WITH_FROM_PART)\r\n            ->select(true)\r\n            ->setIntegrityCheck(false);\r\n            \r\n        echo $select;\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            ,array()\r\n            );\r\n\r\n        echo $select;exit;\r\n        return $select;\r\n{code}\r\n\r\nI get the correct query\r\n\r\n{code}\r\nSELECT `recipes`.* FROM `recipes` WHERE (deleteDate IS NULL) AND (basic = 0) \/\/ first echo\r\nSELECT `recipes`.* FROM `recipes` INNER JOIN `typesToRecipe` ON recipes.id = typesToRecipe.recipeId WHERE (deleteDate IS NULL) AND (basic = 0) \/\/ second echo\r\n{code}\r\n\r\nThis makes absolutely no sens to me, hmm...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                        "name": "tridem",
                        "displayName": "Webdevilopers",
                        "active": true
                    },
                    "created": "2010-12-13T00:13:53.000+0000",
                    "updated": "2010-12-13T00:13:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43580",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "body": "{quote}\r\nStill I am wondering about the behaviour of example 3\r\nwhere the query changes simply because I added (any) code\r\n{quote}\r\n\r\nQuery 3 is related by \r\n{quote}\r\nZend_Db_Table_Select::assemble() (line 200) makes a verification if exists columns assigned if not exists this method force called to Zend_Db_Table_Select::from().\r\n{quote}\r\n\r\nSee Zend_Db_Table_Select::assemble() (line 200).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "created": "2010-12-13T14:51:59.000+0000",
                    "updated": "2010-12-13T14:51:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43581",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "body": "Here code reproduced by me http:\/\/pastebin.com\/RTZFKjzH of according with information  given, and not see the problem. \r\nSee the your method Recipes::select().\r\n\r\nGreetings\r\nRamon",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ramon",
                        "name": "ramon",
                        "displayName": "Ramon Henrique Ornelas",
                        "active": true
                    },
                    "created": "2010-12-13T15:46:48.000+0000",
                    "updated": "2010-12-13T15:46:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/43599",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                        "name": "tridem",
                        "displayName": "Webdevilopers",
                        "active": true
                    },
                    "body": "You are right Ramon, I forgot to add Zend_Db_Table_Abstract::SELECT_WITH_FROM_PART in my dbTable!\r\n\r\nCould you just remove it from your code to test my example with and without the echo?\r\nSo my wring dbTable was looking like this:\r\n\r\n{code}\r\n    public function select() {\r\n    \t$select = parent::select(); \/\/ missing Zend_Db_Table_Abstract::SELECT_WITH_FROM_PART\r\n    \t$select->where('deleteDate ?', new Zend_Db_Expr('IS NULL'));\r\n    \t$select->where('basic = 0');\r\n    \treturn $select;\r\n    }\r\n{code}\r\n\r\n{code}\r\n$select = $this->getDbTable()\r\n            #->select(Zend_Db_Table_Abstract::SELECT_WITH_FROM_PART)\r\n            ->select(true)\r\n            ->setIntegrityCheck(false);\r\n            \r\n        echo $select; \/\/ different query result when adding?!\r\n            \r\n        $select->join('typesToRecipe',\r\n            'recipes.id = typesToRecipe.recipeId'\r\n            ,array()\r\n            );\r\n\r\n        echo $select;exit;\r\n        return $select;\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tridem",
                        "name": "tridem",
                        "displayName": "Webdevilopers",
                        "active": true
                    },
                    "created": "2010-12-15T03:34:40.000+0000",
                    "updated": "2010-12-15T03:34:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10802\/transitions"
}