{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1545",
    "key": "ZF-1545",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Allow setting of arbitrary Request\/Response objects on ViewRenderer"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1545\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-11-16T12:42:39.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                "name": "padraic",
                "displayName": "P\u00e1draic Brady",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-06-11T11:51:05.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-11-16T12:42:39.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "At present ViewRenderer maintains a singular relationship with a specific Zend_Controller_Action instance, which it relies upon for the initial capture of Request\/Response objects. It then uses the Request object for all subsequent ViewScriptSpec formatting. Likewise it always uses the same Response object for capturing output. The problem is that this makes dispatching additional Actions (e.g. nested) which require the ViewRenderer extremely difficult. It can be worked around to some extent within a Controller class action method - outside this it's not possible. This limits reuse of controllers since the extra View management logic needs to be tacked on later when\/if needed.\n\nAdding setRequest()\/setResponse() methods would help alleviate this problem, and allow programmers to temporarily override the initial objects with custom ones to enable more flexible rendering options.\n\nAs an aside, this problem is the same one afflicting the Widget View Helper example on the issue tracker. The Widget cloned Request object is never utilised by the ViewRenderer (once the request is set it's not updated from the controller) so it keeps trying to render the exact same template over and over."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1545\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10090",
                    "id": 10090,
                    "description": "Release Candidate 2",
                    "name": "1.0.0 RC2",
                    "userReleaseDate": "08\/Jun\/07",
                    "archived": true,
                    "releaseDate": "2007-06-08",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10011",
                    "id": 10011,
                    "name": "Zend_Controller",
                    "description": "front controller, including router and dispatcher",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/15134",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assign to Matthew.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-06-12T17:54:44.000+0000",
                    "updated": "2007-06-12T17:54:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/15150",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "While I see this as a fringe case, adding the accessors is fairly trivial. My understanding is this:\n\n* If no request\/response set, grab from action controller (always; don't cache)\n* If set, use the one set (always)\n\nIs this what you intend? The issue I see is that if you chain several actions, but set the request in the first, how can you be sure that it's updated properly? If you grab always from the action controller, you can be assured that it's been updated during each cycle of the dispatch loop. My main worry is that this will introduce a behaviour that's hard to detect and debug. Can you provide a concrete use case so I can better understand how you envision this working, as well as the rationale for needing the functionality?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-06-12T22:19:38.000+0000",
                    "updated": "2007-06-12T22:19:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/15161",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "body": "It is a fringe issue. The suggested setters were for one specific use case (will add below).\n\nThe root of the problem really is that HelperBroker keeps a static record of Helpers. So a nested Request never has an opportunity to use a fresh HelperBroker instance, and just ends up inheriting helpers instantiated for the parent request. Not suggesting this change.\n\nIn any case, my use case is the Widget View Helper. It's still the only available method of dispatching a controller from within an unrelated class (e.g. Zend_View) and receiving back output. With the ViewRenderer now entering circulation it needed some updating to temporarily reset during a Widget dispatch so it could render a View specific for that Request. A non-cached action controller system would also work, but it seems the more complex solution since you'd still need to reinstate the original objects for the parent action controller being nested into.\n\nLess vague mumbling from me; more code...\n\n{code}\n\/**\n * Helper for returning the output from dispatching a new Request to the\n * Controller using the provided Action name, and optional Controller\/Module\n * names and other parameters.\n * \n * @package    Zend_View\n * @subpackage Helpers\n * @license    http:\/\/framework.zend.com\/license\/new-bsd     New BSD License\n *\/\nclass Zend_View_Helper_Controller {\n\n    \/**\n     * Dispatch a request via the Controller and fetch the resulting rendered\n     * View to return\n     *\n     * @param string $action\n     * @param string $controller\n     * @param string $module\n     * @param array $params\n     * @returns string\n     *\/\n    public function controller($action, $controller = null, $module = null, array $params = null)\n    {\n        $front = Zend_Controller_Front::getInstance();\n        if (!$front->getParam('noViewRenderer') && Zend_Controller_Action_HelperBroker::hasHelper('viewRenderer')) {\n            $enableViewRendererReset = true;\n        }\n        $front = Zend_Controller_Front::getInstance();\n        $request = clone $front->getRequest();\n        $request->setActionName($action);\n        if (!is_null($controller)) {\n            $request->setControllerName($controller);\n        }\n        if (!is_null($module) && !is_null($controller)) {\n            $request->setModuleName($module);\n        }\n        if (!is_null($params)) {\n            $request->setParams($params);\n        }\n        $response = new Zend_Controller_Response_Http();\n        if (isset($enableViewRendererReset)) {\n            $viewRenderer = Zend_Controller_Action_HelperBroker::getExistingHelper('viewRenderer');\n            $__originalRequest = $viewRenderer->getRequest();\n            $__originalResponse = $viewRenderer->getResponse();\n            $viewRenderer->setRequest($request);\n            $viewRenderer->setResponse($response);\n        }\n        $front->getDispatcher()->dispatch($request, $response);\n        \/\/ reset original objects back on ViewRenderer\n        if (isset($enableViewRendererReset)) {\n            $viewRenderer->setRequest($__originalRequest);\n            $viewRenderer->setResponse($__originalResponse);\n        }\n        return $response->getBody();\n    }\n\n}\n{code}\n\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=padraic",
                        "name": "padraic",
                        "displayName": "P\u00e1draic Brady",
                        "active": true
                    },
                    "created": "2007-06-13T08:30:01.000+0000",
                    "updated": "2007-06-13T08:30:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16034",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "Fix version after 1.0.1.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-07-30T09:29:11.000+0000",
                    "updated": "2007-07-30T09:29:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16999",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "body": "First, please pardon me if I am misunderstanding some things; I don't mean to muddy the waters. :)\n\nIt appears that this issue will be resolved by approval of the {{Zend_View_Helper_Controller}} portion of the Zend_View Enhanced proposal; is this correct?\n\nSorry it is not clear to me, but to which class is it proposed that we add {{setRequest()}} and {{setResponse()}} methods, or would this be superseded by the above so as to avoid unnecessary complexity from potential pitfalls?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darby",
                        "name": "darby",
                        "displayName": "Darby Felton",
                        "active": true
                    },
                    "created": "2007-09-27T14:55:24.000+0000",
                    "updated": "2007-09-27T14:55:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/17582",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "This was fixed some time ago with another bug. Helpers now fetch the request and response objects directly from the currently registered action controller, or the front controller if no action controller is registered. Thus, you can pass in request\/response objects to an action controller, and these will be used directly by the ViewRenderer.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2007-11-16T12:42:39.000+0000",
                    "updated": "2007-11-16T12:42:39.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1545\/transitions"
}