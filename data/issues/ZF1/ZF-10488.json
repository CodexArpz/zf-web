{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10488",
    "key": "ZF-10488",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Unable to set additional backend options to Zend_Db_Table MetadataCache"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10488\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-09-25T23:42:50.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                "name": "afx114",
                "displayName": "jsnod",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-09-22T19:20:07.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-09-26T11:39:51.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "I am unable to set additional backend options to Zend_Db_Table MetadataCache.\r\n\r\nI tried passing in the cache_file_umask param like so:\r\n\r\n{noformat}\r\n$frontendOptions = array(\r\n   'automatic_serialization'  => true,\r\n   'lifetime'                 => 86400,  \r\n);\r\n$backendOptions  = array(\r\n   'cache_dir'         => APPLICATION_ROOT . '\/data\/cache',\r\n   'cache_file_umask'  => 0666\r\n);\r\n$cache = Zend_Cache::factory('Core', 'File', $frontendOptions, $backendOptions);\r\nZend_Db_Table_Abstract::setDefaultMetadataCache($cache);\r\n{noformat}\r\n\r\nBut then the metadatacache would not work.\r\n\r\nAn example of where this would be userful is when both a cron (run as a system user) and regular web requests from Apache have to read\/write to the same cache files.\r\n\r\nIf the cron creates the cachefiles, the Apache process is unable to read\/write to them.  The opposite is also true if Apache created the metadatacache files first -- the cron will be unable to read\/write the cache files."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10488\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10490",
                    "id": 10490,
                    "description": "Mini Release",
                    "name": "1.10.8",
                    "userReleaseDate": "25\/Aug\/10",
                    "archived": false,
                    "releaseDate": "2010-08-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10133",
                    "id": 10133,
                    "name": "Zend_Db_Table",
                    "description": "Lightweight OO interface to database tables and rowsets.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42341",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "From the report, I am not sure I understand how this is related to Zend_Db_Table.  Can you please elaborate on how this problem is manifested only in situations where Zend_Db_Table is in use?\r\n\r\n-ralph",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2010-09-23T06:36:45.000+0000",
                    "updated": "2010-09-23T06:36:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42350",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "body": "Sure, take a look at example #32 here: http:\/\/framework.zend.com\/manual\/en\/zend.db.table.html#zend.db.table.metadata.caching",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "created": "2010-09-23T09:03:51.000+0000",
                    "updated": "2010-09-23T09:03:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42351",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "body": "Ralph wants to say that there is no relation with Zend_Db_Table. This is due to a bug in the File backend or the configuration of your system.\r\n\r\nI think it's a conflict between two users of the permissions system. Your _safe_mode_ directive is on or off?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "created": "2010-09-23T10:37:33.000+0000",
                    "updated": "2010-09-23T10:43:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42352",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "body": "safe_mode is Off.  The regular cache works fine.  It is only the MetadataCache that does not accept any backend options other than cache_dir.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "created": "2010-09-23T10:42:52.000+0000",
                    "updated": "2010-09-23T10:42:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42353",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "body": "Can you show the permissions of the cache files created for metadata?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "created": "2010-09-23T10:45:26.000+0000",
                    "updated": "2010-09-23T10:45:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42354",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "body": "Here are a few files from the list:\r\n\r\n{noformat}\r\n-rw-------  1 apache  apache   669 Sep 22 18:16 zend_cache---eca1091f12f77c77858eef5a4684b979\r\n-rw-------  1 apache  apache   982 Sep 23 09:48 zend_cache---f6f0f4e4e1b86a6e35427bfd7ee128ce\r\n-rw-------  1 apache  apache    98 Sep 22 18:16 zend_cache---internal-metadatas---1683d48add005d58009f47911b42a3e0\r\n-rw-------  1 apache  apache    98 Sep 22 18:16 zend_cache---internal-metadatas---23a9806dc89c4147cbc66f2d331b1b87\r\n-rw-------  1 apache  apache    98 Sep 22 18:17 zend_cache---internal-metadatas---4391ff602d862cefa2695c3edde37dbd\r\n{noformat}\r\n\r\nAs you can see they are owned by the apache user, so if I try to execute a cron as a shell user, the scripts don't have access to read\/write.  That is why I would like to be able to pass in the *cache_file_umask* backend option so they can be created as 0666 files.\r\n\r\nAgain, I do not believe it is a problem with my system configuration because the regular cache works fine.  I am able to pass in a *cache_file_umask* option into the cache backend so that the files get the proper permissions:\r\n\r\n{noformat}\r\n-rw-rw-rw- 1 apache apache 710 Sep 23 09:46 zend_cache---MyKey_569713589\r\n-rw-rw-rw- 1 apache apache 132 Sep 23 09:46 zend_cache---internal-metadatas---MyKey_569713589\r\n{noformat}\r\n\r\nHowever, if I pass in *cache_file_umask* as a backend option to MetadataCache, the MetadataCache fails (does not get written).  This is the bug I am reporting.\r\n\r\nTo reproduce, simply use the code posted in the bug description.  If you pass in a *cache_file_umask* the MetadataCache will not be written.\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "created": "2010-09-23T11:51:17.000+0000",
                    "updated": "2010-09-23T11:51:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42358",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "body": "I reproduce your issue in a script :\r\n{code}\r\nrequire_once 'Zend\/Loader\/Autoloader.php';\r\nZend_Loader_Autoloader::getInstance();\r\n\r\n$frontendOptions = array(\r\n   'automatic_serialization'  => true,\r\n   'lifetime'                 => 86400,  \r\n);\r\n$backendOptions  = array(\r\n   'cache_dir'         => dirname(__FILE__),\r\n   'cache_file_umask'  => 0666\r\n);\r\n$cache = Zend_Cache::factory('Core', 'File', $frontendOptions, $backendOptions);\r\n$cache->save(array('test' => 'content'), 'sample');\r\n\r\n$db = Zend_Db::factory('PDO_SQLITE', array(\r\n\t'dbname' => ':memory:'\r\n));\r\n$db->query('CREATE TABLE `zf10488` (`id` INT NOT NULL, PRIMARY KEY(`id`));');\r\nZend_Db_Table::setDefaultAdapter($db);\r\nZend_Db_Table::setDefaultMetadataCache($cache);\r\n\r\n$dbTable = new Zend_Db_Table(array(Zend_Db_Table::NAME => 'zf10488'));\r\nvar_dump($dbTable->info(Zend_Db_Table::METADATA));\r\n{code}\r\n\r\n{code}\r\n$ php zf-10488.php\r\n$ ls -l \r\n-rw-r--r--     1 daemon  daemon  797 Sep 24 06:42 zf-10488.php\r\n-rw-rw-rw-     1 daemon  daemon  325 Sep 24 06:42 zend_cache---f17f4f9e7c8e73320cef3a028414ba84\r\n-rw-rw-rw-     1 daemon  daemon   98 Sep 24 06:42 zend_cache---internal-metadatas---f17f4f9e7c8e73320cef3a028414ba84\r\n-rw-rw-rw-     1 daemon  daemon   98 Sep 24 06:42 zend_cache---internal-metadatas---sample\r\n-rw-rw-rw-     1 daemon  daemon   31 Sep 24 06:42 zend_cache---sample\r\n{code}\r\n\r\nThe metadata use the same instance of Zend_Cache_Backend_File, and the same save method. It seems absurd to have this error that appears just for a table metadatas. Look at the code used:\r\n{code:title=Zend_Db_Table_Abstract::_setupMetadata()}\r\n825            if (null !== $this->_metadataCache && !$this->_metadataCache->save($metadata, $cacheId)) {\r\n{code}\r\n\r\n{code:title=Zend_Cache_Core::save()}\r\n390            $result = $this->_backend->save($data, $id, $tags, $specificLifetime);\r\n{code}\r\n\r\n{code:title=Zend_Cache_Backend_File::save()}\r\n249        $res = $this->_filePutContents($file, $data);\r\n{code}\r\n\r\n{code:title=Zend_Cache_Backend_File::_filePutContents()}\r\n990        @chmod($file, $this->_options['cache_file_umask']);\r\n{code}\r\n\r\nTry to find why _chmod_ does not work with the _umask 0666_ in your case. I do not see how we can help. You can edit *Zend\/Cache\/Backend\/File.php* in order to delete the character *@*.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "created": "2010-09-23T22:08:24.000+0000",
                    "updated": "2010-09-23T22:27:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42363",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "body": "My apologies, *cache_file_umask* as a backend option works.  But *hashed_directory_level* does not.  It works fine with regular cache, but not table metadata cache.  Can you re-try your testcase above, but with the following options?\r\n\r\n{code}\r\n$backendOptions  = array(\r\n   'cache_dir'             => dirname(__FILE__),\r\n   'cache_file_umask'      => 0666,\r\n   'hashed_directory_level => 2\r\n);\r\n{code}\r\n\r\nIt looks like all table metadatata cache files get put into the root of the specified cache_dir by default.  So perhaps hashed_directory_level is irrelevant here.  But if so, should it not throw an error, or at least be ignored?  Passing it in as a backend option breaks table metadata caching with no warning.  I wrapped everything around a try\/catch block but didn't catch any exceptions.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "created": "2010-09-24T12:22:37.000+0000",
                    "updated": "2010-09-24T12:22:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42372",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "body": "This is not an issue. Your configuration is wrong: look at the default value of the option *hashed_directory_umask* (0700).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "created": "2010-09-25T23:42:51.000+0000",
                    "updated": "2010-09-25T23:42:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/42373",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "body": "Ok, but I'm curious -- why does passing in the *hashed_directory_level* option break the table metadata cache?  Should I open another bug regarding the usage of *hashed_directory_level* on table metadata cache?  If it's not a valid option, ZF should throw an exception.  If an exception had been thrown I probably wouldn't have filed this bug and wasted everybody's time.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=afx114",
                        "name": "afx114",
                        "displayName": "jsnod",
                        "active": true
                    },
                    "created": "2010-09-26T11:39:48.000+0000",
                    "updated": "2010-09-26T11:39:48.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10488\/transitions"
}