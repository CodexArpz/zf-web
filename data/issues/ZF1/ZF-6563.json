{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6563",
    "key": "ZF-6563",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Rendering a Zend_Form in a dojo enabled view (with parseOnLoad set to true) parses widgets twice and throws js 'widget already registered' exception"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/11",
                "name": "Patch",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6563\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-11-20T11:57:02.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=waigani",
                "name": "waigani",
                "displayName": "Jesse Meek",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-05-06T15:24:13.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-11-20T11:57:02.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Problem:\n\nRendering a Zend_Form in a dojo enabled view adds the following javascript to addOnLoad:\n{code}\ndojo.forEach(zendDijits, function(info) {\n        var n = dojo.byId(info.id);\n        if (null != n) {\n            dojo.attr(n, dojo.mixin({ id: info.id }, info.params));\n        }\n    });\n    dojo.parser.parse();\n{code}\n\nIf dojo is set to parseOnLoad, then all dojo widgets get parsed twice, throwing exceptions like the following: \"Tried to register widget with id==widgetId but that id is already registered\";\n\nSolution:\n\nThe offending line is dojo.parser.parse(); which parses the entire DOM. Only the zendDijits in the foreach should be parsed.\n\nPatch:\n\nLines 778 - 797 in Zend_Dojo_View_Helper_Dojo_Container.\n{code}\n    public function registerDijitLoader()\n    {\n        if (!$this->_dijitLoaderRegistered) {\n            $js =<<<EOJ\nfunction() {\n    dojo.forEach(zendDijits, function(info) {\n        var n = dojo.byId(info.id);\n        if (null != n) {\n            dojo.attr(n, dojo.mixin({ id: info.id }, info.params));\n        }\n        dojo.parser.parse(info.id);\n    });\n    \n}\nEOJ;\n            $this->requireModule('dojo.parser');\n            $this->prependOnLoad($js);\n            $this->addJavascript('var zendDijits = ' . $this->dijitsToJson() . ';');\n            $this->_dijitLoaderRegistered = true;\n        }\n    }\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6563\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-5929",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5929",
                    "type": {
                        "name": "Duplicate",
                        "direction": "INBOUND",
                        "description": "is duplicated by"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10241",
                    "id": 10241,
                    "description": "Minor Release",
                    "name": "1.8.0",
                    "userReleaseDate": "30\/Apr\/09",
                    "archived": false,
                    "releaseDate": "2009-04-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10311",
                    "id": 10311,
                    "name": "Zend_Dojo",
                    "description": "Dojo integration with Zend Framework",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31171",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lightflowmark",
                        "name": "lightflowmark",
                        "displayName": "Mark",
                        "active": true
                    },
                    "body": "The proposed patch does not quite work.\n\nWhile it appears to solve the problem, for some reason it does not parse the actual form element as a dijit.  Thus, for a form like\n<FORM ID=someID>\nif you use the patch, then \ndijit.byId('someID'); is undefined (whereas dojo.byId('someID) returns the form object).\n\nThis prevents you doing many interesting things with the form object, such as validating it and passing it to the xhr* functions.\n\n\nHowever, a workaround seems to be using the declarative form of Dojo rather than the programmatic by calling Zend_Dojo_View_Helper_Dojo::setUseDeclarative();\n\nThis excludes the troublesome \ndojo.parser.parse();\nentirely, and therefore solves the problem.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=lightflowmark",
                        "name": "lightflowmark",
                        "displayName": "Mark",
                        "active": true
                    },
                    "created": "2009-05-20T06:02:44.000+0000",
                    "updated": "2009-05-20T06:02:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36342",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "dojo.parser.parse() should be provided the parent element of one or more elements that it should parse; you cannot point it to the element itself.\r\n\r\nThe easy solution to this is: don't set the parseOnLoad djConfig value to true manually when using ZF. When we do programmatic execution, dojo.parser.parse() will be called for you during an onLoad event; when we do declarative, the parseOnLoad djConfig option will be set for you.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2009-11-20T11:56:39.000+0000",
                    "updated": "2009-11-20T11:56:39.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6563\/transitions"
}