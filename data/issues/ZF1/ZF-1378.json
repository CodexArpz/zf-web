{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1378",
    "key": "ZF-1378",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Setting \"lazy\" objects in registry"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1378\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-08-09T21:20:19.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nico",
                "name": "nico",
                "displayName": "Nico Edtinger",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-05-14T10:13:18.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-05-08T08:28:40.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "One thing I  was missing in Zend_Registry is sharing a single instance between several application classes, without having to create the instance in a central place.  Zend_Registry helps with the sharing part, but we don't want to  create an instance if it isn't needed. My solution was to extend Zend_Registry with a new method setLazy(), but this could be useful  to others, so maybe it could be added to Zend_Registry.\n\nMy current solution works like this:\n\n{code}\n<?php\n\/\/ init\nrequire_once 'Zend\/Loader.php';\nZend_Loader::registerAutoload();\n\n\/\/ test class\nclass TestClass {\n    function __construct($x, $y) {\n        echo \"$x * $y = \", $x * $y, \"\\n\";\n    }\n}\n\n\/\/ a minimal extended class, stuff like checking if index is taken et  cetera missing\nclass My_Registry extends Zend_Registry {\n    private static $_lazyRegistry = array();\n\n    public static function get($index) {\n        if (!self::isRegistered($index) && isset(self::$_lazyRegistry[$index])) {\n            $object = call_user_func_array(\n                array(\n                    new ReflectionClass(self::$_lazyRegistry[$index][0]),\n                    'newInstance'\n                ),\n                self::$_lazyRegistry[$index][1]\n            );\n            self::set($index, $object);\n        }\n        return parent::get($index);\n    }\n\n    public static function setLazy($index, $class) {\n        self::$_lazyRegistry[$index] = array($class, array_slice(func_get_args(), 2));\n    }\n}\n\n\/\/ normal set, constructor is called here\nMy_Registry::set('test1', new TestClass(3, 14));\n\n\/\/ new, lazy set, everything after the second parameters are  parameters for the constructor\nMy_Registry::setLazy('test2', 'TestClass', 9, 6);\n\nvar_dump(My_Registry::get('test1'));\n\/\/ constructor for test2 is called here\nvar_dump(My_Registry::get('test2'));\nvar_dump(My_Registry::get('test2'));\n?>\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1378\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10080",
                    "id": 10080,
                    "description": "Beta Release; bug fixes",
                    "name": "0.9.3",
                    "userReleaseDate": "05\/May\/07",
                    "archived": true,
                    "releaseDate": "2007-05-05",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10076",
                    "id": 10076,
                    "name": "Zend_Registry",
                    "description": "Zend_Registry uses a dynamic object to provide a means of sharing other objects between different portions of an application.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14603",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Assigning to Bill Karwin.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-05-15T12:14:25.000+0000",
                    "updated": "2007-05-15T12:14:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/14688",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pencil",
                        "name": "pencil",
                        "displayName": "Nils Caspar",
                        "active": true
                    },
                    "body": "Very good idea! Thank you for the code snippets.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pencil",
                        "name": "pencil",
                        "displayName": "Nils Caspar",
                        "active": true
                    },
                    "created": "2007-05-20T14:50:08.000+0000",
                    "updated": "2007-05-20T14:50:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/15011",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "This is a really cool idea, but I think it qualifies as an advanced usage that most people do not need.  I would be reluctant to adding it to the standard Zend_Registry, because it may confuse some users.  \n\nIt's a great candidate for a subclass, to demonstrate the usefulness of extending the registry component.  I'm going to mark this issue as postponed for now, and we'll revisit it after ZF 1.0.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-06-07T13:04:55.000+0000",
                    "updated": "2007-06-07T13:04:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/15012",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Reformat description a bit.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-06-07T13:08:48.000+0000",
                    "updated": "2007-06-07T13:08:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16262",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "This is a really cool idea, but it's more exotic than what we want to include in the Framework.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-08-09T21:20:19.000+0000",
                    "updated": "2007-08-09T21:20:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33386",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=allanl",
                        "name": "allanl",
                        "displayName": "allan liu",
                        "active": true
                    },
                    "body": "I think this is a very useful feature. \n\n1. it makes apps scale better.\n2. it saves money on expensive resources like Oracle connection.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=allanl",
                        "name": "allanl",
                        "displayName": "allan liu",
                        "active": true
                    },
                    "created": "2009-08-11T10:59:06.000+0000",
                    "updated": "2009-08-11T10:59:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33537",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "@allan liu: Are you aware that Zend_Db adapters already make lazy connections?  \n\nYou can instantiate an adapter object inexpensively, because it doesn't connect to the RDBMS until you prepare the first query.  \n\nThis behavior is [documented|http:\/\/framework.zend.com\/manual\/en\/zend.db.html#zend.db.adapter.connecting.getconnection].",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2009-08-17T11:45:47.000+0000",
                    "updated": "2009-08-17T11:45:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33550",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=allanl",
                        "name": "allanl",
                        "displayName": "allan liu",
                        "active": true
                    },
                    "body": "Sorry I was not aware coz I am quite new in using ZF, and thanks for let me know.  So Item 2 does not make sense.\n\nBtw, Assuming I have 100 classes in Zend Registry, when ZF is setting up the registry, will ZF load all those php files?\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=allanl",
                        "name": "allanl",
                        "displayName": "allan liu",
                        "active": true
                    },
                    "created": "2009-08-17T14:01:13.000+0000",
                    "updated": "2009-08-17T14:01:13.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33552",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "\"will ZF load all those php files?\"\n\nShort answer is yes.  You store object instances into the registry, not classes.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2009-08-17T14:18:25.000+0000",
                    "updated": "2009-08-17T14:18:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33553",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=allanl",
                        "name": "allanl",
                        "displayName": "allan liu",
                        "active": true
                    },
                    "body": "Understand, thanks for let me know.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=allanl",
                        "name": "allanl",
                        "displayName": "allan liu",
                        "active": true
                    },
                    "created": "2009-08-17T14:39:09.000+0000",
                    "updated": "2009-08-17T14:39:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46502",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kblomqvist",
                        "name": "kblomqvist",
                        "displayName": "Kim Blomqvist",
                        "active": true
                    },
                    "body": "I'll give this idea a try as I have been thinking what to do with all my data mapper objects, which I'm instantiating here and there...",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kblomqvist",
                        "name": "kblomqvist",
                        "displayName": "Kim Blomqvist",
                        "active": true
                    },
                    "created": "2011-05-08T08:28:40.000+0000",
                    "updated": "2011-05-08T08:28:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1378\/transitions"
}