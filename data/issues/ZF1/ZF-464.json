{
    "expand": "html",
    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-464",
    "key": "ZF-464",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Db_Select incorrectly splits ORDER string that contain commas"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-464\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10021",
                    "id": 10021,
                    "description": "Preview release; DB, Filter, Log",
                    "name": "0.8.0",
                    "userReleaseDate": "21\/Feb\/07",
                    "archived": true,
                    "releaseDate": "2007-02-21",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-02-07T22:28:09.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=peptolab",
                "name": "peptolab",
                "displayName": "Simon Mundy",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2006-10-29T18:02:21.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:24.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The Zend_Db_Select() component will try to convert all order criteria into an array to allow multiple ORDER criteria. It will try to convert strings to an array of criteria by exploding the string using the comma as delimiter. Unfortunately an expression such as the following will be incorrectly handled:-\n\n{code}\n$select->order('IF (myfield IS NOT NULL, 1, 0) DESC');\n{code}\n\nwill be transformed into\n\n{code}\nIF (myfield IS NOT NULL DESC, 1 DESC, 0) DESC');\n{code}\n\nand throw an error.\n\nThe solution is to alter the logic for string transformation from:\n\n{code}\n        if (is_string($spec)) {\n            $spec = explode(',', $spec);\n        } else {\n            settype($spec, 'array');\n        }\n{code}\n\nto\n\n{code}\n        if (is_string($spec)) {\n            $spec = array($spec);\n        } else {\n            settype($spec, 'array');\n        }\n{code}\n\nIt may break some existing apps for developers but will yield far more consistent results and fewer unexpected DB exceptions."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-464\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10001",
                    "id": 10001,
                    "description": "Preview Release",
                    "name": "0.1.5",
                    "userReleaseDate": "11\/Jul\/06",
                    "archived": true,
                    "releaseDate": "2006-07-11",
                    "released": true
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/version\/10002",
                    "id": 10002,
                    "description": "Preview Release; MVC refactoring and other enhancements and fixes",
                    "name": "0.2.0",
                    "userReleaseDate": "29\/Oct\/06",
                    "archived": true,
                    "releaseDate": "2006-10-29",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11075",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "The code:\n{code}if (is_string($spec)) {\n            $spec = array($spec);\n} else {\n            settype($spec, 'array');\n}\n{code}\nis equivalent to:\n{code}settype($spec, 'array');{code}\n\nI think this problem demonstrates yet another effect of a deeper problem in the design of the DB components.  Both group() and order() have the same problem.  These methods assume the user will restrict input to very simple SQL.  They assume the user will not use whitespace other than standard ASCII 32.  They do not check for empty or malformed clauses.  These two methods are inconsistent with other methods in Select.php, as they do not automatically {{quoteInto()}}, disregarding the issue that the various DB driver's support for prepared queries place different limitations on where the placeholder {{?}} may occur.  Also, the quoteInto() method of the adapters also have issues (filed in JIRA).\n\nThe mechanism used for specifying ascending or descending order is inconsistent with the \"style\" of this class, where programmatic means are preferred over raw SQL.\n\nA solution should take into account all of these issues.  Perhaps a simpler approach would work:\n\n{code}public function order(Zend_Db_Sql $sql, $order){code}\n\nI have started a discussion on quoting issues:  http:\/\/framework.zend.com\/wiki\/x\/RB8\n\nBasically Zend_Db_Sql would facilitate preserving as much structural and semantic information about the parts of a SQL fragment as possible for as long as possible.  This approach allows for greater control and flexibility manipulating the parts later into the processes of creating genuine (not emulating) prepared queries for supporting Zend_Db_Adapter_*'s, and better control over emulation for other adapters.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2006-10-29T23:34:10.000+0000",
                    "updated": "2006-10-29T23:34:10.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11076",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Reducing priority, since the method was never intended to work with SQL expressions (only column names).\n\nAlso, a non-intuitive, but simple workaround exists:\n{code}\n$select->order(array('IF (myfield IS NOT NULL, 1, 0) DESC'));\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2006-10-29T23:56:32.000+0000",
                    "updated": "2006-10-29T23:56:32.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/11427",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Changing fix version to 0.8.0.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2006-11-13T15:22:35.000+0000",
                    "updated": "2006-11-13T15:22:35.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12119",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Recategorize in Zend_Db_Select component.",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-01-05T17:02:21.000+0000",
                    "updated": "2007-01-05T17:02:21.000+0000"
                },
                {
                    "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/comment\/12578",
                    "author": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Resolved ambiguous ORDER BY parsing in revision 3288.  \n\nNow, one should not pass multi-term order criteria in a single comma-separated string literal.  The following is deprecated usage:\n{code}\n$select->order( 'A, B DESC, C ASC' );\n{code}\n\nAny of the following two forms should be used instead:\n\n{code}\n$select->order( array('A', 'B DESC', 'C ASC') );\n{code}\n\n{code}\n$select->order( 'A' );\n$select->order( 'B DESC' );\n$select->order( 'C ASC' );\n{code}\n\n{code}\n$select->order( 'A' )\n       ->order( 'B DESC' )\n       ->order( 'C ASC' );\n{code}\n",
                    "updateAuthor": {
                        "self": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-02-07T22:28:09.000+0000",
                    "updated": "2007-02-07T22:28:09.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/framework.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-464\/transitions"
}