{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5661",
    "key": "ZF-5661",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Get comments in meta data"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5661\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:31.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=amnuts",
                "name": "amnuts",
                "displayName": "Andrew Collington",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-01-30T06:12:34.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-11-20T20:53:31.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "In Zend_Db_Adapter_Mysqli and Zend_Db_Adapter_Pdo_Mysql, the meta data brought back with 'DESCRIBE tablename' doesn't include any comments applied to the fields.  If this were changed to ' SHOW FULL COLUMNS FROM tablename', then it would bring back all the columns expected with describe as well as the comment data, collation and privileges."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5661\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User"
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10250",
                    "id": 10250,
                    "description": "Mini Release",
                    "name": "1.7.3",
                    "userReleaseDate": "19\/Jan\/09",
                    "archived": false,
                    "releaseDate": "2009-01-19",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10131",
                    "id": 10131,
                    "name": "Zend_Db_Adapter_Mysqli",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28905",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mimir",
                        "name": "mimir",
                        "displayName": "Romeo Adrian Cioaba",
                        "active": true
                    },
                    "body": "In case someone needs to read the comments from columns, here is a modified describeTable() from Zend_Db_Adapter_Pdo_Mysql\n\n<code>\n\tpublic function describeTable($tableName, $schemaName = null)\n\t{\n\t\t\/\/ @todo  use INFORMATION_SCHEMA someday when MySQL's\n\t\t\/\/ implementation has reasonably good performance and\n\t\t\/\/ the version with this improvement is in wide use.\n\n\t\tif ($schemaName) {\n\t\t\t$sql = 'SHOW FULL COLUMNS FROM ' . $this->quoteIdentifier(\"$schemaName.$tableName\", true);\n\t\t} else {\n\t\t\t$sql = 'SHOW FULL COLUMNS FROM ' . $this->quoteIdentifier($tableName, true);\n\t\t}\n\t\t$stmt = $this->query($sql);\n\n\t\t\/\/ Use FETCH_NUM so we are not dependent on the CASE attribute of the PDO connection\n\t\t$result = $stmt->fetchAll(Zend_Db::FETCH_NUM);\n\n\t\t$field   \t\t= 0;\n\t\t$type    \t\t= 1;\n\t\t$collation\t\t= 2;\n\t\t$null    \t\t= 3;\n\t\t$key     \t\t= 4;\n\t\t$default \t\t= 5;\n\t\t$extra   \t\t= 6;\n\t\t$privileges \t= 7;\n\t\t$comments \t\t= 8;\n\n\t\t$desc = array();\n\t\t$i = 1;\n\t\t$p = 1;\n\n\n\t\tforeach ($result as $row) {\n\t\t\tlist($length, $scale, $precision, $unsigned, $primary, $primaryPosition, $identity)\n\t\t\t= array(null, null, null, null, false, null, false);\n\t\t\tif (preg_match('\/unsigned\/', $row[$type])) {\n\t\t\t\t$unsigned = true;\n\t\t\t}\n\t\t\tif (preg_match('\/^((?:var)?char)\\((\\d+)\\)\/', $row[$type], $matches)) {\n\t\t\t\t$row[$type] = $matches[1];\n\t\t\t\t$length = $matches[2];\n\t\t\t} else if (preg_match('\/^decimal\\((\\d+),(\\d+)\\)\/', $row[$type], $matches)) {\n\t\t\t\t$row[$type] = 'decimal';\n\t\t\t\t$precision = $matches[1];\n\t\t\t\t$scale = $matches[2];\n\t\t\t} else if (preg_match('\/^float\\((\\d+),(\\d+)\\)\/', $row[$type], $matches)) {\n\t\t\t\t$row[$type] = 'float';\n\t\t\t\t$precision = $matches[1];\n\t\t\t\t$scale = $matches[2];\n\t\t\t} else if (preg_match('\/^((?:big|medium|small|tiny)?int)\\((\\d+)\\)\/', $row[$type], $matches)) {\n\t\t\t\t$row[$type] = $matches[1];\n\t\t\t\t\/\/ The optional argument of a MySQL int type is not precision\n\t\t\t\t\/\/ or length; it is only a hint for display width.\n\t\t\t}\n\t\t\tif (strtoupper($row[$key]) == 'PRI') {\n\t\t\t\t$primary = true;\n\t\t\t\t$primaryPosition = $p;\n\t\t\t\tif ($row[$extra] == 'auto_increment') {\n\t\t\t\t\t$identity = true;\n\t\t\t\t} else {\n\t\t\t\t\t$identity = false;\n\t\t\t\t}\n\t\t\t\t++$p;\n\t\t\t}\n\t\t\t$collation = $row[2];\n\t\t\t$privileges = $row[7];\n\t\t\t$comments = $row[8];\n\t\t\t$desc[$this->foldCase($row[$field])] = array(\n                'SCHEMA_NAME'      => null, \/\/ @todo\n                'TABLE_NAME'       => $this->foldCase($tableName),\n                'COLUMN_NAME'      => $this->foldCase($row[$field]),\n                'COLUMN_POSITION'  => $i,\n                'DATA_TYPE'        => $row[$type],\n                'DEFAULT'          => $row[$default],\n                'NULLABLE'         => (bool) ($row[$null] == 'YES'),\n                'LENGTH'           => $length,\n                'SCALE'            => $scale,\n                'PRECISION'        => $precision,\n                'UNSIGNED'         => $unsigned,\n                'PRIMARY'          => $primary,\n                'PRIMARY_POSITION' => $primaryPosition,\n                'IDENTITY'         => $identity,\n\t\t\t\t'COLLATION'\t\t   => $collation,\n            \t'COMMENTS'\t\t   => $comments\n\t\t\t);\n\t\t\t++$i;\n\t\t}\n\t\treturn $desc;\n\t}\n\n<\/code>",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mimir",
                        "name": "mimir",
                        "displayName": "Romeo Adrian Cioaba",
                        "active": true
                    },
                    "created": "2009-02-17T15:02:33.000+0000",
                    "updated": "2009-02-17T15:02:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32623",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=samwilson",
                        "name": "samwilson",
                        "displayName": "Sam Wilson",
                        "active": true
                    },
                    "body": "I have also had occasion to find Zend_Db_Adapter_Pdo_Mysql::describeTable lacking, and extend it with the addition of comments, and lengths for numeric types.\n\nHere's my version (in case it's any use):\n\n{code:title=Database::describeTable()|borderStyle=solid}\n\n    \/**\n     * Returns the column descriptions for a table.\n     *\n     * <p>The return value is an associative array keyed by the column name,\n     * as returned by the RDBMS.<\/p>\n     *\n     * <p>The value of each array element is an associative array\n     * with the following keys:<\/p>\n     *\n     * <pre>\n     * SCHEMA_NAME      => string;  name of database or schema\n     * TABLE_NAME       => string;  table name\n     * COLUMN_NAME      => string;  column name\n     * COLUMN_POSITION  => number;  ordinal position of column in table\n     * DATA_TYPE        => string;  SQL datatype name of column\n     * DEFAULT          => string;  default expression of column, null if none\n     * NULLABLE         => boolean; true if column can have nulls\n     * LENGTH           => number;  length of CHAR\/VARCHAR\n     * SCALE            => number;  scale of NUMERIC\/DECIMAL\n     * PRECISION        => number;  precision of NUMERIC\/DECIMAL\n     * UNSIGNED         => boolean; unsigned property of an integer type\n     * PRIMARY          => boolean; true if column is part of the primary key\n     * PRIMARY_POSITION => integer; position of column in primary key\n     * IDENTITY         => integer; true if column is auto-generated with unique values\n     * COMMENT          => string;  column comment\n     * <\/pre>\n     *\n     * <p><em>This is mostly a verbatim copy of\n     * <code>Zend_Db_Adapter_Pdo_Mysql::describeTable<\/code>, with the addition\n     * of lengths for numeric types and comments.<\/em><\/p>\n     *\n     * @see Zend_Db_Adapter_Pdo_Mysql::describeTable()\n     * @param string $tableName\n     * @param string $schemaName OPTIONAL\n     * @return array\n     *\/\n    public function describeTable($tableName, $schemaName = null)\n    {\n        \/\/ @todo  use INFORMATION_SCHEMA someday when MySQL's\n        \/\/ implementation has reasonably good performance and\n        \/\/ the version with this improvement is in wide use.\n\n        if ($schemaName) {\n            $sql = 'SHOW FULL COLUMNS FROM ' . $this->quoteIdentifier(\"$schemaName.$tableName\", true);\n        } else {\n            $sql = 'SHOW FULL COLUMNS FROM ' . $this->quoteIdentifier($tableName, true);\n        }\n        $stmt = $this->query($sql);\n\n        \/\/ Use FETCH_NUM so we are not dependent on the CASE attribute of the PDO connection\n        $result = $stmt->fetchAll(Zend_Db::FETCH_NUM);\n\n        $field       = 0;\n        $type        = 1;\n        $collation   = 2;\n        $null        = 3;\n        $key         = 4;\n        $default     = 5;\n        $extra       = 6;\n        $permissions = 7;\n        $comment     = 8;\n\n        $desc = array();\n        $i = 1;\n        $p = 1;\n        foreach ($result as $row) {\n            list($length, $scale, $precision, $unsigned, $primary, $primaryPosition, $identity)\n                = array(null, null, null, null, false, null, false);\n            if (preg_match('\/unsigned\/', $row[$type])) {\n                $unsigned = true;\n            }\n            if (preg_match('\/^((?:var)?char)\\((\\d+)\\)\/', $row[$type], $matches)) {\n                $row[$type] = $matches[1];\n                $length = $matches[2];\n            } else if (preg_match('\/^decimal\\((\\d+),(\\d+)\\)\/', $row[$type], $matches)) {\n                $row[$type] = 'decimal';\n                $precision = $matches[1];\n                $scale = $matches[2];\n            } else if (preg_match('\/^float\\((\\d+),(\\d+)\\)\/', $row[$type], $matches)) {\n                $row[$type] = 'float';\n                $precision = $matches[1];\n                $scale = $matches[2];\n            } else if (preg_match('\/^((?:big|medium|small|tiny)?int)\\((\\d+)\\)\/', $row[$type], $matches)) {\n                $row[$type] = $matches[1];\n                $length = $matches[2];\n                \/\/ The optional size argument of a MySQL int type is not\n                \/\/ precision or length; it is only a hint for display width.\n            }\n            if (strtoupper($row[$key]) == 'PRI') {\n                $primary = true;\n                $primaryPosition = $p;\n                if ($row[$extra] == 'auto_increment') {\n                    $identity = true;\n                } else {\n                    $identity = false;\n                }\n                ++$p;\n            }\n            $desc[$this->foldCase($row[$field])] = array(\n                'SCHEMA_NAME'      => null, \/\/ @todo\n                'TABLE_NAME'       => $this->foldCase($tableName),\n                'COLUMN_NAME'      => $this->foldCase($row[$field]),\n                'COLUMN_POSITION'  => $i,\n                'DATA_TYPE'        => $row[$type],\n                'DEFAULT'          => $row[$default],\n                'NULLABLE'         => (bool) ($row[$null] == 'YES'),\n                'LENGTH'           => $length,\n                'SCALE'            => $scale,\n                'PRECISION'        => $precision,\n                'UNSIGNED'         => $unsigned,\n                'PRIMARY'          => $primary,\n                'PRIMARY_POSITION' => $primaryPosition,\n                'IDENTITY'         => $identity,\n                'COMMENT'          => $row[$comment]\n            );\n            ++$i;\n        }\n        return $desc;\n    }\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=samwilson",
                        "name": "samwilson",
                        "displayName": "Sam Wilson",
                        "active": true
                    },
                    "created": "2009-07-16T17:43:32.000+0000",
                    "updated": "2009-07-16T17:43:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52821",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Bulk change of all issues last updated before 1st January 2010 as \"Won't Fix\".\r\n\r\nFeel free to re-open and provide a patch if you want to fix this issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-11-20T20:53:31.000+0000",
                    "updated": "2012-11-20T20:53:31.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5661\/transitions"
}