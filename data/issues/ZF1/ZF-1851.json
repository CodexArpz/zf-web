{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1851",
    "key": "ZF-1851",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Unique value validator for Zend_Db"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1851\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-08-22T21:37:42.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jacksleight",
                "name": "jacksleight",
                "displayName": "Jack Sleight",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-08-15T08:49:25.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-08-22T21:37:42.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "New validator for validating unique values in a DB table column. This is my current implementation, you might see a better way to do it:\n\n{code}\nclass Jack_Validate_Unique extends Zend_Validate_Abstract\n{\n    const NOT_UNIQUE = 'uniqueNotUnique';\n\n    protected $_messageTemplates = array(\n        self::NOT_UNIQUE => \"'%value%' already exists\"\n    );\n\t\n\tprotected $_table;\n\tprotected $_column;\n\tprotected $_current;\n\n    public function __construct(Zend_Db_Table $table, $column, $current = null)\n    {\n        $this->_table = $table;\n        $this->_column = $column;\n        \/\/ the primary key of the row being updated\n\t\t\/\/ without knowing this validating an unchanged value would fail\n\t\t$this->_current = $current;\n    }\n\n    public function isValid($value)\n    {\n        $this->_setValue($value);\n\t\t\n\t\t$db = $this->_table->getAdapter();\n\t\t$where = array($db->quoteInto($this->_column . ' = ?', $value));\n\t\tif (isset($this->_current)) {\n\t\t\t$current = (array) $this->_current;\n\t\t\t$info = $this->_table->info();\n\t\t\tforeach ($info['primary'] as $key => $column) {\n\t\t\t\t$where[] = $db->quoteInto($column . ' <> ?', $current[$key - 1]);\n\t\t\t}\n\t\t}\n\t\t$row = $this->_table->fetchAll($where);\n\t\tif ($row->count()) {\n            $this->_error();\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n    }\n}\n{code}\n\nMight make sense to call it Zend_Db_Validate_Unique rather than Zend_Validate_Unique?"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1851\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                "name": "bkarwin",
                "displayName": "Bill Karwin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10140",
                    "id": 10140,
                    "name": "Zend_Validate",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16310",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jacksleight",
                        "name": "jacksleight",
                        "displayName": "Jack Sleight",
                        "active": true
                    },
                    "body": "Also needs set\/get table\/column\/current methods.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jacksleight",
                        "name": "jacksleight",
                        "displayName": "Jack Sleight",
                        "active": true
                    },
                    "created": "2007-08-15T08:57:22.000+0000",
                    "updated": "2007-08-15T08:57:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16322",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Assigned to Bill",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2007-08-16T13:22:14.000+0000",
                    "updated": "2007-08-16T13:22:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16419",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "The use case for this validator is apparently the desire to avoid inserting duplicate values in a database table.\n\nValidating that a value doesn't exist in the database isn't a reliable test in application space.  A race condition exists:  some other database client can insert a duplicate value into the database _after_ your validation \"passes\".  In other words, the validator tells you that the value does not exist in the database, but this is a test only of that moment in time.  The assurance given by that validation is based on the state of data in the database, which can change at any time and without notifying the client.\n\nThe only transaction-safe way to avoid inserting duplicate values in a database is to create the database table with an appropriate {{UNIQUE}} constraint (or {{PRIMARY KEY}}, which implies uniqueness), and attempt to insert the row.  If the insert violates the unique constraint, then an exception is thrown by the database client interface.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-08-22T21:37:00.000+0000",
                    "updated": "2007-08-22T21:37:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/16420",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "body": "Enforcing database constraints in application space is not reliable.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=bkarwin",
                        "name": "bkarwin",
                        "displayName": "Bill Karwin",
                        "active": true
                    },
                    "created": "2007-08-22T21:37:42.000+0000",
                    "updated": "2007-08-22T21:37:42.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1851\/transitions"
}