{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11120",
    "key": "ZF-11120",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Translate crashes, when used with Zend_Cache and same page is called from different sessions within a timespan of only milliseconds"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11120\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=marcmittag",
                "name": "marcmittag",
                "displayName": "Marc Mittag",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-02-28T02:59:42.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-03-26T19:28:32.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Like the summary says. The affected version marked is the one I currently use. I did not test it with other versions so far.\r\n\r\nI use the following Plugin for my Locale-Setup, which calls $generalHelper->setZendTranslate(); at its end (you find $generalHelper->setZendTranslate(); also below).\r\n\r\nInside $generalHelper->setZendTranslate(); is the initializing of Zend_Translate, which crashes, if called within a gap of only milliseconds from different sessions.\r\n\r\nI discovered this case because I use a fork-mechanism to transport files (uploaded to a webserver) via soap to another server. If you upload i. e. 10 files and then press \"finish\", the webserver is told to do the upload via soap. For this it opens an own fork for every file to upload. The opening of the forks is done in a loop, therefore there are 10 uploads opened within a millisecond or so. This fork is a normal http-call to my zend_framework-site done by fsockopen (and with some security stuff wrapped around it).\r\n\r\nNow in 1-3 of these forks Zend_Translate crashes the call, if I use the cache to cache the translations. If not everything is fine. I guess, it must be something like 2 processes trying to get the same cache-file at the same time and one of them is not able to, because the other has still the hands on it.\r\n\r\nThe traceback is:\r\n\r\n{noformat}\r\n[28-Feb-2011 11:54:58] PHP Fatal error:  Uncaught exception 'Zend_Exception' with message 'No entry is registered for key 'Zend_Translate'' in C:\\server\\php\\zf\\library\\Zend\\Registry.php:147\r\nStack trace:\r\n#0 C:\\Marc\\testserver\\www\\portal\\library\\Portal\\Controllers\\Helper\\GeneralHelper.php(356): Zend_Registry::get('Zend_Translate')\r\n#1 C:\\Marc\\testserver\\www\\portal\\application\\controllers\\ErrorController.php(67): Portal_Controllers_Helper_GeneralHelper->mail('admin@all.de', 'Portal Admin', 'Fehler im Porta...', Array, false, false, Array)\r\n#2 C:\\server\\php\\zf\\library\\Zend\\Controller\\Action.php(513): ErrorController->errorAction()\r\n#3 C:\\server\\php\\zf\\library\\Zend\\Controller\\Dispatcher\\Standard.php(295): Zend_Controller_Action->dispatch('errorAction')\r\n#4 C:\\server\\php\\zf\\library\\Zend\\Controller\\Front.php(954): Zend_Controller_Dispatcher_Standard->dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http))\r\n#5 C:\\server\\php\\zf\\library\\Zend\\Application\\Bootstrap\\Bootstrap.php(97): Zend_Controller_Front->dispatch()\r\n#6 C:\\server\\php\\zf in C:\\server\\php\\zf\\library\\Zend\\Registry.php on line 147\r\n{noformat}\r\n\r\n\r\nThe Plugin class looks like\r\n{code}\r\nclass Portal_Controllers_Plugins_LocaleSetup extends Zend_Controller_Plugin_Abstract\r\n{\r\n    public function routeShutdown(Zend_Controller_Request_Abstract $request)\r\n    {\r\n        \/\/ Initialisiere Sprachschl\u00fcssel\r\n        $session = new Zend_Session_Namespace();\r\n        \/\/ Pr\u00fcfe auf Sprachschl\u00fcssel in URL\r\n        if ($request->getParam('locale')) {\r\n            \/\/ Hole locale\r\n            $session->locale = $request->getParam('locale');\r\n            \/\/fange Falscheingaben ab\r\n            if (!Zend_Locale::isLocale($session->locale)) {\r\n                throw new Zend_Exception('$request->getParam(\\'locale\\') war keine g\u00fcltige locale', 0 );\r\n            }\r\n            \/\/Speicher locale in Db, falls user eingeloggt\r\n            if(Zend_Auth::getInstance()->hasIdentity()){\r\n                $Models_Employee = new Models_Employee();\r\n                $Models_Employee->setLocale($session->locale);\r\n            }\r\n        }\r\n        elseif (!isset($session->locale)) {\r\n            $localeObj = new Zend_Locale();\r\n            $userPrefLangs = array_keys($localeObj->getBrowser());\r\n            if(count($userPrefLangs)>0){\r\n                \/\/Pr\u00fcfe, ob f\u00fcr jede locale, ob eine xliff-Datei vorhanden ist - wenn nicht fallback\r\n                foreach($userPrefLangs as $testLocale){\r\n                    $testLocaleObj = new Zend_Locale($testLocale);\r\n                    $testLang = $testLocaleObj->getLanguage();\r\n                    if(file_exists($session->runtimeOptions->dir->locales.'\/portal-'.$testLang.'.xliff')){\r\n                        $session->locale = $testLocale;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(!$session->locale){\r\n                $session->locale = $session->runtimeOptions->translation->targetDefaultLocale;\r\n            }\r\n        }\r\n        \/\/ Speicher locale und translation-object in Registry - so gilt sie f\u00fcr alle locale und\r\n        $localeRegObj = new Zend_Locale($session->locale);\r\n        \r\n        \/\/Pr\u00fcfe, ob f\u00fcr die locale eine xliff-Datei vorhanden ist - wenn nicht fallback\r\n        Zend_Registry::set('Zend_Locale', $localeRegObj);\r\n        $generalHelper = Zend_Controller_Action_HelperBroker::getStaticHelper(\r\n            'GeneralHelper'\r\n        );\r\n        $generalHelper->setZendTranslate();\r\n    }\r\n}\r\n{code}\r\n\r\n{code}\r\nclass Portal_Controllers_Plugins_LocaleSetup extends Zend_Controller_Plugin_Abstract\r\n{\r\n    \/**\r\n     * Wird nach dem Routing aufgerufen\r\n     * \r\n     * <ul><li>liest locale aus den get oder post parametern aus<li>\r\n     * <li>falls in locale in get oder post vorhanden\r\n     *   <ul>\r\n     *   <li>wird Zend_Locale anhand der locale initialisiert und in\r\n     *       $session->Zend_Locale gespeichert<\/li>\r\n     *   <li>wird locale in der Db beim employee hinterlegt, falls user eingeloggt<\/li>\r\n     *   <li>wird Zend_Translation im Cache f\u00fcr die locale initialisiert<\/li>\r\n     *   <\/ul>\r\n     * <\/li>\r\n     * <li>ansonsten: Falls Zend_Locale bereits in Session, passiert nichts weiter<\/li>\r\n     * <li>falls alles nicht der Fall:\r\n     *   <ul>\r\n     *   <li>Hole locale aus den Browserpr\u00e4ferenzen<\/li>\r\n     *   <li>falls Pr\u00e4ferenz nicht als xliff-Datei im Portal verf\u00fcgbar, gehe zur n\u00e4chsten Pr\u00e4ferenz, etc.<\/li>\r\n     *   <li>falls immer noch nicht beziehbar nehme die default-locale aus der application.ini<\/li>\r\n     *   <\/ul>\r\n     * <\/li>\r\n     * <li>Dar\u00fcber hinaus: Hinterlege Zend_Locale-Objekt in der Registry als\r\n     *     Default f\u00fcr alle Zend_Locale und Zend_Translation-Operationen<\/li>\r\n     * <\/ul>\r\n     *\r\n     * @param  Zend_Controller_Request_Abstract $request\r\n     * @return void\r\n     *\/\r\n    public function routeShutdown(Zend_Controller_Request_Abstract $request)\r\n    {\r\n        \/\/ Initialisiere Sprachschl\u00fcssel\r\n        $session = new Zend_Session_Namespace();\r\n        \/\/ Pr\u00fcfe auf Sprachschl\u00fcssel in URL\r\n        if ($request->getParam('locale')) {\r\n            \/\/ Hole locale\r\n            $session->locale = $request->getParam('locale');\r\n            \/\/fange Falscheingaben ab\r\n            if (!Zend_Locale::isLocale($session->locale)) {\r\n                throw new Zend_Exception('$request->getParam(\\'locale\\') war keine g\u00fcltige locale', 0 );\r\n            }\r\n            \/\/Speicher locale in Db, falls user eingeloggt\r\n            if(Zend_Auth::getInstance()->hasIdentity()){\r\n                $Models_Employee = new Models_Employee();\r\n                $Models_Employee->setLocale($session->locale);\r\n            }\r\n        }\r\n        elseif (!isset($session->locale)) {\r\n            $localeObj = new Zend_Locale();\r\n            $userPrefLangs = array_keys($localeObj->getBrowser());\r\n            if(count($userPrefLangs)>0){\r\n                \/\/Pr\u00fcfe, ob f\u00fcr jede locale, ob eine xliff-Datei vorhanden ist - wenn nicht fallback\r\n                foreach($userPrefLangs as $testLocale){\r\n                    $testLocaleObj = new Zend_Locale($testLocale);\r\n                    $testLang = $testLocaleObj->getLanguage();\r\n                    if(file_exists($session->runtimeOptions->dir->locales.'\/portal-'.$testLang.'.xliff')){\r\n                        $session->locale = $testLocale;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(!$session->locale){\r\n                $session->locale = $session->runtimeOptions->translation->targetDefaultLocale;\r\n            }\r\n        }\r\n        \/\/ Speicher locale und translation-object in Registry - so gilt sie f\u00fcr alle locale und\r\n        $localeRegObj = new Zend_Locale($session->locale);\r\n        \r\n        \/\/Pr\u00fcfe, ob f\u00fcr die locale eine xliff-Datei vorhanden ist - wenn nicht fallback\r\n        Zend_Registry::set('Zend_Locale', $localeRegObj);\r\n        $generalHelper = Zend_Controller_Action_HelperBroker::getStaticHelper(\r\n            'GeneralHelper'\r\n        );\r\n        $generalHelper->setZendTranslate();\r\n    }\r\n}\r\n{code}\r\n\r\nThe Method of the helper $generalHelper->setZendTranslate(); looks like:\r\n{code}\r\n public function setZendTranslate() {\r\n        $session = new Zend_Session_Namespace();\r\n        \/\/setzte die sourceLang in der Session\r\n        $sourceLocale = $session->runtimeOptions->translation->sourceLocale;\r\n        if (!Zend_Locale::isLocale($sourceLocale)) {\r\n            throw new Zend_Exception('$sourceLocale war keine g\u00fcltige locale - fehlerhafte Konfiguration in application.ini (runtimeOptions.translation.locale)', 0 );\r\n        }\r\n        $sourceLocaleObj = new Zend_Locale($sourceLocale);\r\n        $session->sourceLang = $sourceLocaleObj->getLanguage();\r\n        $targetLocaleObj = Zend_Registry::get('Zend_Locale');\r\n        $targetLang = $targetLocaleObj->getLanguage();\r\n        \/\/definiere logfile f\u00fcr nicht gefundene \u00dcbersetzungen\r\n        $logfile = $session->runtimeOptions->dir->logs.'\/notFoundPortalTranslation-'.\r\n            $session->sourceLang.'-'.$targetLang.'.log';\r\n        try {\r\n            $log = Zend_Registry::get('translationLog');\r\n        }\r\n        catch (Exception $exc) {\r\n            $writer = new Zend_Log_Writer_Stream($logfile);\r\n            $log    = new Zend_Log($writer);\r\n            Zend_Registry::set('translationLog', $log);\r\n        }\r\n\r\n        \/\/ Lade \u00dcbersetzungen und speichere Translate Objekt in der Session\r\n         $cache = Zend_Registry::get('cache'); \r\n         Zend_Translate::setCache($cache);\r\n        $Zend_Translate = new Zend_Translate(\r\n            array(\r\n                'adapter' => 'xliff',\r\n                'content' => $session->runtimeOptions->dir->locales.'\/portal-'.$session->sourceLang.'.xliff',\r\n                'locale'  => $session->sourceLang,\r\n                'disableNotices' => true,\r\n                'log'             => $log,\r\n                'logUntranslated' => true,\r\n                'logMessage' => '<trans-unit id=\\'%message%\\'>'.\r\n                    '<source>%message%<\/source>'.\r\n                    '<target>%message%<\/target>'.\r\n                    '<\/trans-unit>',\r\n                'useId' => false\r\n            )\r\n        );\r\n        $Zend_Translate->addTranslation(array(\r\n            'content' => $session->runtimeOptions->dir->locales.'\/portal-'.$targetLang.'.xliff',\r\n            'locale' => $targetLang)\r\n        );\r\n        Zend_Registry::set('Zend_Translate', $Zend_Translate);\r\n    }\r\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11120\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/1",
                "name": "Open"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alexander",
                "name": "alexander",
                "displayName": "Alexander Veremyev",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10520",
                    "id": 10520,
                    "description": "Mini Release",
                    "name": "1.11.2",
                    "userReleaseDate": "30\/Dec\/10",
                    "archived": false,
                    "releaseDate": "2010-12-30",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10028",
                    "id": 10028,
                    "name": "Zend_Cache",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44629",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Detaching Zend_Translate from affected components.\r\n\r\nWhen all works without caching I see no way how Zend_Translate should break the application by using the cache.\r\nFor me it looks like that cache-key is processed when it is not available.\r\n\r\nThis could be affected by the used cache.\r\nAs you did not gave informations about the used cache-params there is actually no further response possible.\r\n\r\nMaybe it would be good to know which cache type and parameters you are using.\r\nI think also Alex needs this information for reproduction.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2011-03-03T09:10:03.000+0000",
                    "updated": "2011-03-03T09:10:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/44635",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=marcmittag",
                        "name": "marcmittag",
                        "displayName": "Marc Mittag",
                        "active": true
                    },
                    "body": "Yes, I think to that it is not an issue of Zend_Translate. As I wrote I think, that two of the forks do try to access the cache-file at the same time and therefore for one of them it is locked and this leads to the error.\r\n\r\nMy Cache-Config in my application.ini looks like this:\r\n\r\nresources.cachemanager.portal.frontend.name = core\r\nresources.cachemanager.portal.frontend.options.lifetime = 86400\r\nresources.cachemanager.portal.frontend.options.automatic_serialization = 1\r\nresources.cachemanager.portal.frontend.options.caching = 1\r\nresources.cachemanager.portal.frontend.options.cache_id_prefix = \"Portal_\"\r\nresources.cachemanager.portal.backend.name = file\r\nresources.cachemanager.portal.backend.options.cache_dir = APPLICATION_PATH \"\/..\/data\/cache\"\r\n\r\nDon't be disturbed by the long lifetime, it is just for testing. Before the forktest I wrote about above, I emptied the complete cache-Dir.\r\n\r\nThanks!\r\n\r\nlove and light\r\n\r\nmarc",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=marcmittag",
                        "name": "marcmittag",
                        "displayName": "Marc Mittag",
                        "active": true
                    },
                    "created": "2011-03-04T08:15:38.000+0000",
                    "updated": "2011-03-04T08:15:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45565",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "formated description",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-03-21T19:11:59.000+0000",
                    "updated": "2011-03-21T19:11:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/45623",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "body": "Hi Marc,\r\n\r\nIf there is no registry entry of 'Zend_Translate' than 'Zend_Registry::set('Zend_Translate', $Zend_Translate);' was never called or you removed the entry on another place.\r\nThis means that either setZendTranslate was never called, too or there was an error within that method.\r\nIf there was an error we need the message\/code\/exception thrown within setZendTranslate to find out whats going on ;)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mabe",
                        "name": "mabe",
                        "displayName": "Marc Bennewitz (private)",
                        "active": true
                    },
                    "created": "2011-03-26T19:28:32.000+0000",
                    "updated": "2011-03-26T19:28:32.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-11120\/transitions"
}