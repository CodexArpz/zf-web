{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7778",
    "key": "ZF-7778",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "getCookie doesn't utilize _matchDomain (CookieJar)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7778\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-18T02:44:28.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=baxter",
                "name": "baxter",
                "displayName": "Jason Brumwell",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-09-05T09:58:32.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-18T02:44:28.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "When trying to retrieve a cookie using the cookieJars getCookie function it is impossible currently to match the .domain.com key associated to the cookies array. The solution I came up with was to utilize the _matchDomain , _flattenCookiesArray and _matchPath function of the cookiejar.\n\n{code:title=CookieJar::getCookie|borderStyle=solid}\npublic function getCookie($uri, $cookie_name, $ret_as = self::COOKIE_OBJECT)\n    {\n        if (is_string($uri)) {\n            $uri = Zend_Uri::factory($uri);\n        }\n        \n        if (! $uri instanceof Zend_Uri_Http) {\n            require_once 'Zend\/Http\/Exception.php';\n            throw new Zend_Http_Exception('Invalid URI specified');\n        }\n\n        \/\/ Get correct cookie path\n        $path = $uri->getPath();\n        $path = substr($path, 0, strrpos($path, '\/'));\n        if (! $path) $path = '\/';\n\n        $cookies = $this->_matchDomain($uri->getHost());\n        $cookies = $this->_matchPath($cookies, $path);\n        $cookies = $this->_flattenCookiesArray($cookies);\n\n        foreach ($cookies as $cookie)\n        {\n            if ($cookie->getName() == $cookie_name)\n            {\n                switch ($ret_as) {\n                    case self::COOKIE_OBJECT:\n                        return $cookie;\n                        break;\n\n                    case self::COOKIE_STRING_ARRAY:\n                    case self::COOKIE_STRING_CONCAT:\n                        return $cookie->__toString();\n                        break;\n\n                    default:\n                        require_once 'Zend\/Http\/Exception.php';\n                        throw new Zend_Http_Exception(\"Invalid value passed for \\$ret_as: {$ret_as}\");\n                        break;\n                }\n            }\n        }\n\n        return false;\n    }\n{code}\n\nCheers,\n\nJay\n\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7778\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "FixForZF1.12",
                "state:need-feedback",
                "zf-caretaker-adamlundrigan",
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                "name": "adamlundrigan",
                "displayName": "Adam Lundrigan",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10361",
                    "id": 10361,
                    "description": "Mini Release",
                    "name": "1.9.2",
                    "userReleaseDate": "25\/Aug\/09",
                    "archived": false,
                    "releaseDate": "2009-08-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10112",
                    "id": 10112,
                    "name": "Zend_Http_CookieJar",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37219",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=baxter",
                        "name": "baxter",
                        "displayName": "Jason Brumwell",
                        "active": true
                    },
                    "body": "Not fixed as of 1.9.6, makes using moneybookers session api unuseable as it doesn't recognize the cookie. Haven't checked 1.10 alpha yet.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=baxter",
                        "name": "baxter",
                        "displayName": "Jason Brumwell",
                        "active": true
                    },
                    "created": "2009-12-29T09:15:56.000+0000",
                    "updated": "2009-12-29T09:15:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49010",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Could you provide an example?\r\n\r\nThe appropriateness of what you have suggested depends on what the intended purpose of {{getCookie}} is.  I assumed it was for retrieving specific cookies (ie: you have to specify the exact name and domain string as set in the Set-Cookie header), while {{getMatchingCookies()}} was intended for what you are trying to accomplish above.  Am I wrong in that assumption?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-11-07T17:24:18.000+0000",
                    "updated": "2011-11-07T17:24:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49011",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=baxter",
                        "name": "baxter",
                        "displayName": "Jason Brumwell",
                        "active": true
                    },
                    "body": "Hey Adam,\r\n\r\nThe problem I ran into was when writing a class for processing Moneybookers.com payments, It was a couple of years ago now so I can't be absolutely positive, I believe the problem was that getHost returned moneybookers.com but the cookie was being stored as .moneybookers.com with a period at the begining.\r\n\r\nLooking at the getMatchingCookies(), it looks like it may work for this as well.\r\n\r\nHere is the resulting code that allows it to function properly:\r\n\r\n{code}\r\npublic function getSessionUrl(array $data)\r\n    {\r\n        $client = new Zend_Http_Client(\r\n             'https:\/\/www.moneybookers.com\/app\/payment.pl',\r\n             array(\r\n                 'maxredirects' => 0,\r\n                 'timeout'      => 30\r\n             )\r\n        );\r\n\r\n        $client->setParameterPost($data);\r\n\r\n        $client->setCookieJar(new Nexus_Http_CookieJar());\r\n\r\n        $response = $client->request(Zend_Http_Client::POST);\r\n\r\n        $cookie = $client->getCookieJar()->getCookie('https:\/\/moneybookers.com','SESSION_ID');\r\n\r\n        if (! $cookie instanceof Zend_Http_Cookie)\r\n        {\r\n            throw new Default_Exception_Application('Failed to get session ID from moneybookers');\r\n        }\r\n\r\n        $sessionId = $cookie->getValue();\r\n\r\n        return 'https:\/\/www.moneybookers.com\/app\/payment.pl?sid='.$sessionId;\r\n    }\r\n{\/code}\r\n\r\nThen the getCookie extension to the cookieJar:\r\n\r\n{code}\r\npublic function getCookie($uri, $cookie_name, $ret_as = self::COOKIE_OBJECT)\r\n    {\r\n        if (is_string($uri)) {\r\n            $uri = Zend_Uri::factory($uri);\r\n        }\r\n\r\n        if (! $uri instanceof Zend_Uri_Http) {\r\n            require_once 'Zend\/Http\/Exception.php';\r\n            throw new Zend_Http_Exception('Invalid URI specified');\r\n        }\r\n\r\n        \/\/ Get correct cookie path\r\n        $path = $uri->getPath();\r\n        $path = substr($path, 0, strrpos($path, '\/'));\r\n        if (! $path) $path = '\/';\r\n\r\n        $cookies = $this->_matchDomain($uri->getHost());\r\n        $cookies = $this->_matchPath($cookies, $path);\r\n        $cookies = $this->_flattenCookiesArray($cookies);\r\n\r\n        foreach ($cookies as $cookie)\r\n        {\r\n            if ($cookie->getName() == $cookie_name)\r\n            {\r\n                switch ($ret_as) {\r\n                    case self::COOKIE_OBJECT:\r\n                        return $cookie;\r\n                        break;\r\n\r\n                    case self::COOKIE_STRING_ARRAY:\r\n                    case self::COOKIE_STRING_CONCAT:\r\n                        return $cookie->__toString();\r\n                        break;\r\n\r\n                    default:\r\n                        require_once 'Zend\/Http\/Exception.php';\r\n                        throw new Zend_Http_Exception(\"Invalid value passed for \\$ret_as: {$ret_as}\");\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n{\/code}\r\n\r\n\r\nCheers,\r\n\r\nJay\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=baxter",
                        "name": "baxter",
                        "displayName": "Jason Brumwell",
                        "active": true
                    },
                    "created": "2011-11-07T17:50:09.000+0000",
                    "updated": "2011-11-07T17:50:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49012",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Jay,\r\n\r\nThanks for your response.  I've looked at the documentation ([here|http:\/\/framework.zend.com\/manual\/en\/zend.http.cookies.html#zend.http.cookies.cookiejar.getting_cookies]), but it doesn't really spell out the exact purpose of the {{getCookie}} method.  I'll see if I can find out if the intent is to have it match literal URIs or to have it do a \"fuzzy\" URI match like {{getMatchingCookies}} does.\r\n\r\nFrom your example, it looks to me like using {{getMatchingCookies}} would work for you.  The only difference would be that it returns an array of matches, and so you'd just have to pop off the first one and assign that to {{$cookie}}. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-11-07T20:17:58.000+0000",
                    "updated": "2011-11-07T20:17:58.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50691",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "Closing as Won't Fix.  It's unlikely this can be changed at this late stage in ZFv1's lifecycle, and a possible workaround (getMatchingCookies) exists.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-18T02:44:28.000+0000",
                    "updated": "2012-05-18T02:44:28.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7778\/transitions"
}