{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5372",
    "key": "ZF-5372",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Wrong SQL generation in Zend_Db_Select::joinUsing()"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5372\/votes",
                "votes": 5,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10160",
                    "id": 10160,
                    "description": "Major Release",
                    "name": "Next Major Release",
                    "archived": false,
                    "released": false
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-05T02:36:39.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielb",
                "name": "danielb",
                "displayName": "Daniel Berstein",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2008-12-29T05:34:27.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-05T02:36:40.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "The SQL generated by Zend_Db_Select::joinUsing() when joining by an array of columns is totally broken.\n\nSample code to reproduce:\n{code}\n$db = Zend_Db::factory('Pdo_Mysql', array('dbname' => 'test', 'username' => 'root', 'password' => ''));\n$select = new Zend_Db_Select($db);\n$select->from('table_A')->joinUsing('tableB', array('col_one', 'col_two'));\n\/\/ Outputs:\n\/\/  SELECT `table_A`.*, `tableB`.* FROM `table_A` INNER JOIN `tableB` ON `tableB`.Array = `table_A`.Array\necho (string) $select;\n{code}\nNotice the columns being used on the ON clause:  ON `tableB`.{color:red}Array{color} = `table_A`.{color:red} Array{color}\n\nThis is a quick patch that solves the issue:\n\n{code}\nIndex: Zend\/Db\/Select.php\n===================================================================\n--- Zend\/Db\/Select.php\t(revision 13462)\n+++ Zend\/Db\/Select.php\t(working copy)\n@@ -809,9 +809,17 @@\n         $join  = $this->_adapter->quoteIdentifier(key($this->_parts[self::FROM]), true);\n         $from  = $this->_adapter->quoteIdentifier($this->_uniqueCorrelation($name), true);\n \n-        $cond1 = $from . '.' . $cond;\n-        $cond2 = $join . '.' . $cond;\n-        $cond  = $cond1 . ' = ' . $cond2;\n+        if (is_scalar($cond)) {\n+            $cond1 = $from . '.' . $cond;\n+            $cond2 = $join . '.' . $cond;\n+            $cond  = $cond1 . ' = ' . $cond2;\n+        } else {\n+            $conds = array();\n+            foreach ($cond as $c) {\n+                $conds[] = $from . '.' . $c . ' = ' . $join . '.' . $c;\n+            }\n+            $cond = implode(' AND ', $conds);\n+        }\n \n         return $this->_join($type, $name, $cond, $cols, $schema);\n     }\n{code}\nSample code output *after* applying above patch::\n{code}\n\/\/ Outputs:\n\/\/  SELECT `table_A`.*, `tableB`.* FROM `table_A` INNER JOIN `tableB` ON `tableB`.col_one = `table_A`.col_one AND `tableB`.col_two = `table_A`.col_two\n{code}\n\nIt would be better if the generated SQL was using `USING` though."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/6",
                "name": "N\/A"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5372\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf-caretaker-adamlundrigan",
                "zf-crteam-needsexpert",
                "zf-crteam-priority",
                "zf-crteam-review"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                "name": "adamlundrigan",
                "displayName": "Adam Lundrigan",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-3792",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3792",
                    "type": {
                        "name": "Dependency",
                        "direction": "INBOUND",
                        "description": "is dependecy of"
                    }
                },
                {
                    "issueKey": "ZF-3309",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-3309",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10271",
                    "id": 10271,
                    "description": "Mini Release",
                    "name": "1.7.2",
                    "userReleaseDate": "23\/Dec\/08",
                    "archived": false,
                    "releaseDate": "2008-12-23",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10132",
                    "id": 10132,
                    "name": "Zend_Db_Select",
                    "description": "OO interface to building a SELECT SQL query.",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27659",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mikaelkael",
                        "name": "mikaelkael",
                        "displayName": "Mickael Perraud",
                        "active": true
                    },
                    "body": "It isn't a bug but an improvement because joinUsing wasn't designed to function with an array.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mikaelkael",
                        "name": "mikaelkael",
                        "displayName": "Mickael Perraud",
                        "active": true
                    },
                    "created": "2008-12-29T05:41:26.000+0000",
                    "updated": "2008-12-29T05:41:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27661",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielb",
                        "name": "danielb",
                        "displayName": "Daniel Berstein",
                        "active": true
                    },
                    "body": "So may I ask what's the purpose of the joinUsing family of methods? I fail to see their usefulness.\n\nWell then I would suggest to complete remove it, it serves no purpose:\na) It does not generate a USING clause (see [http:\/\/framework.zend.com\/issues\/browse\/ZF-3792]).\nb) It does not simplify code by mapping a column-list array into the proper AND'ed expressions (like what this issue is about).\n\nI would then label this bug as a *design bug*, but a bug nevertheless.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielb",
                        "name": "danielb",
                        "displayName": "Daniel Berstein",
                        "active": true
                    },
                    "created": "2008-12-29T06:43:43.000+0000",
                    "updated": "2008-12-29T06:43:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27662",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mikaelkael",
                        "name": "mikaelkael",
                        "displayName": "Mickael Perraud",
                        "active": true
                    },
                    "body": "I understand what you want, but this is the phpDoc associated to _joinUsing:\n{code}\n\/**\n * Handle JOIN... USING... syntax\n *\n * This is functionality identical to the existing JOIN methods, however\n * the join condition can be passed as a single column name. This method\n * then completes the ON condition by using the same field for the FROM\n * table and the JOIN table.\n *\n * <code>\n * $select = $db->select()->from('table1')\n *                        ->joinUsing('table2', 'column1');\n *\n * \/\/ SELECT * FROM table1 JOIN table2 ON table1.column1 = table2.column2\n * <\/code>\n *\n * These joins are called by the developer simply by adding 'Using' to the\n * method name. E.g.\n * * joinUsing\n * * joinInnerUsing\n * * joinFullUsing\n * * joinRightUsing\n * * joinLeftUsing\n *\n * @return Zend_Db_Select This Zend_Db_Select object.\n *\/\n{code}\nPerhaps, joinUsing isn't a good name for this function ;).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mikaelkael",
                        "name": "mikaelkael",
                        "displayName": "Mickael Perraud",
                        "active": true
                    },
                    "created": "2008-12-29T07:08:28.000+0000",
                    "updated": "2008-12-29T07:08:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/27666",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielb",
                        "name": "danielb",
                        "displayName": "Daniel Berstein",
                        "active": true
                    },
                    "body": "Thanks for showing me the \"fine print\" ;)\n\nHow can I help to fix it? The patch in the issue (massaging parameter $cond)  at least gives some utility to the method(s) IMO. Don't you agree?\n\nAfter further checking, the implementation of joinUsing() is broken in another way too: table aliases are not being respected!\n\n{code}\n$select->from(array('a' => 'table_a'))\n       ->joinUsing(array('b' => 'table_b'), 'col_X');\n{code}\nYou would assume the generated SQL to be:\n{code}\nSELECT `a`.*, `b`.* FROM `table_a` AS `a` INNER JOIN `table_b` AS `b` ON `b`.col_X = `a`.col_X\n{code}\nBut you would be wrong, the actual SQL generated is:\n{code}\nSELECT `a`.*, `b`.* FROM `table_a` AS `a` INNER JOIN `table_b` AS `b` ON `table_b`.col_X = `a`.col_X\n{code}\n\nHere is the less intrusive patch I could think of that solves this second problem:\n{code}\nIndex: Zend\/Db\/Select.php\n===================================================================\n--- Zend\/Db\/Select.php\t(revision 13471)\n+++ Zend\/Db\/Select.php\t(working copy)\n@@ -826,6 +826,10 @@\n     {\n         if (is_array($name)) {\n             $c = end($name);\n+            \/\/ Respect table name aliases if present\n+            if (!is_numeric(key($name))) {\n+                $c = key($name);\n+            }\n         } else {\n             \/\/ Extract just the last name of a qualified table name\n             $dot = strrpos($name,'.');\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=danielb",
                        "name": "danielb",
                        "displayName": "Daniel Berstein",
                        "active": true
                    },
                    "created": "2008-12-29T10:07:55.000+0000",
                    "updated": "2008-12-29T10:07:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29358",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nielslensink",
                        "name": "nielslensink",
                        "displayName": "Niels Lensink",
                        "active": true
                    },
                    "body": "The following join method in 1.7.5 still generates wrong SQL code\n\n->joinUsing(array('b' => 'table_b'), 'col_X');\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nielslensink",
                        "name": "nielslensink",
                        "displayName": "Niels Lensink",
                        "active": true
                    },
                    "created": "2009-03-10T02:23:20.000+0000",
                    "updated": "2009-03-10T02:23:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/41410",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sunday",
                        "name": "sunday",
                        "displayName": "Sonntag",
                        "active": true
                    },
                    "body": "Any news here?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=sunday",
                        "name": "sunday",
                        "displayName": "Sonntag",
                        "active": true
                    },
                    "created": "2010-07-09T08:09:25.000+0000",
                    "updated": "2010-07-09T08:09:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48021",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kblomqvist",
                        "name": "kblomqvist",
                        "displayName": "Kim Blomqvist",
                        "active": true
                    },
                    "body": "bq. Any news here?\r\n\r\nYes there are - fixed in trunk, see ZF-3309",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=kblomqvist",
                        "name": "kblomqvist",
                        "displayName": "Kim Blomqvist",
                        "active": true
                    },
                    "created": "2011-08-20T17:46:14.000+0000",
                    "updated": "2011-08-20T17:46:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48710",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "@[~danielb]\r\nThe table alias problem is being worked on in ZF-3309.  The currently-agreed-upon solution is very similar to what you have proposed. \r\n\r\nHowever, the original issue reported in this ticket has not been resolved. @[~ralph]: Is this something we want to add in ZFv1 at this stage? ie:\r\n{code}\r\n$select->from('table_A')->joinUsing('tableB', array('col_one', 'col_two'));\r\n\/\/ Outputs:\r\n\/\/  SELECT `table_A`.*, `tableB`.* FROM `table_A` INNER JOIN `tableB` ON `tableB`.col_one = `table_A`.col_one AND `tableB`.col_two = `table_A`.col_two\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2011-10-17T01:28:06.000+0000",
                    "updated": "2011-10-17T01:28:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50469",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "body": "This will be addressed in ZF2 Zend\\Db",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=adamlundrigan",
                        "name": "adamlundrigan",
                        "displayName": "Adam Lundrigan",
                        "active": true
                    },
                    "created": "2012-05-05T02:36:40.000+0000",
                    "updated": "2012-05-05T02:36:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5372\/transitions"
}