{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7424",
    "key": "ZF-7424",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Adapter helper functions into Zend_Db_Table"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField",
            "value": {
                "timeoriginalestimate": 0,
                "timeestimate": 0
            }
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7424\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-07-31T12:40:54.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                "name": "at465",
                "displayName": "Andy Thompson",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-07-30T14:08:54.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-07-31T13:54:22.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Could helper functions for ease of use of Zend_Db_Table be added?\n\nfunctions such as:\n\ngetTable($name)  - includes, instanciates and returns a table object based on the name\nselect(.+)() - creates a Zend_Db_Table_Select from the name trailing the select, e.g. $adapter->selectProjects()\nfind(.+)($arg1, $arg2 ...) - does a find on the table specified from the name trailing the find, e.g. $adapter->findProjects(1)\nfetchNew(.+)()  - runs the fetchNew function on the table specified from the name trailing the fetchNew\n\nI've implemented the functions myself already:\n\n{code}\n\n    public function getTable($table) {\n        $table = ucfirst($table);\n        Zend_Loader::loadClass($table);\n        $table = new $table(array('db' => $this));\n        return $table;\n    }\n    \n    public function __call($name, $args) {\n        if (preg_match('\/^select(.+)\/i', $name, $match)) {\n            $table = $this->getTable($match[1]);\n            return $table->select();\n        } else if (preg_match('\/^find(.+)\/i', $name, $match)) {\n            $table = $this->getTable($match[1]);\n            return call_user_func_array(array($table, 'find'), $args);\n        } else if (preg_match('\/^fetchNew(.+)\/i', $name, $match)) {\n            $table = $this->getTable($match[1]);\n            return $table->fetchNew();\n        }\n    }\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7424\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10012",
                    "id": 10012,
                    "name": "Zend_Db",
                    "description": "interfaces, APIs, and adapters for various third-party data stores",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33075",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "I don't we think we should. I think you should just extend Zend_Db_Table to make it suite your needs (as does the rest of the world).\n\nProposing to close as wont-fix or not an issue",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-07-30T14:46:48.000+0000",
                    "updated": "2009-07-30T14:46:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33077",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "body": "extending Zend_Db_Table doesn't make it any easier to instanciate. You still have to do new TableName(array('db' => $adapter)), somewhat cumbersome for what could be an effective ORM",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "created": "2009-07-30T14:54:21.000+0000",
                    "updated": "2009-07-30T14:54:21.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33078",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "body": "Zend_Db is not an ORM. And jfyi; before 1.9 Zend_Date was abstract, and \/had to\/ be extended on a per-table basis. This is not bad practice whatsoever.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=freak",
                        "name": "freak",
                        "displayName": "Dolf Schimmel (Freeaqingme)",
                        "active": true
                    },
                    "created": "2009-07-30T14:57:50.000+0000",
                    "updated": "2009-07-30T14:57:50.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33079",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "body": "And by that argument, we should be doing $select = new Zend_Db_Table_Select($table) rather than $table->select() ?\n\nI wasn't disputing the practice of instanciating classes, I was just suggesting useful magic helpers which help speed up frequently created table functions.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "created": "2009-07-30T15:07:17.000+0000",
                    "updated": "2009-07-30T15:07:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33080",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "body": "Ok, I accept there are some limitations to this idea, as this needs $table to be the exact class name, but the way the Table's referenceMap instanciates the dependent tables is exactly the same. I was just hoping for constructive criticism.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "created": "2009-07-30T15:30:19.000+0000",
                    "updated": "2009-07-30T15:30:19.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33110",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Zend_Db_Adapter should not be aware of Zend_Db_Table.  The only coupling designed in is that Zend_Db_Table is coupled with Zend_Db_Adatper, so just a one way requirement.\n\nAs for your features: you should have a look at the new instantiation feature of Zend_Db_Table.  There is a note at the top of the manual:\n\nhttp:\/\/framework.zend.com\/manual\/en\/zend.db.table.html\n\nand here:\n\nhttp:\/\/framework.zend.com\/manual\/en\/zend.db.table.definition.html\n\nThis allows for easy instantiation based off a definition file (if you need to maintain relationships), outside of that, you can simply create a table object that will utilize a table name provided in the constructor.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-07-31T12:40:53.000+0000",
                    "updated": "2009-07-31T12:40:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33112",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "body": "Ok, thanks, not exactly what I was looking for though, I do understand you not wanting to add a cyclic dependency.\n\nI am writing a framework which sits on top of ZF mvc, which makes it easy to get going, e.g. in a controller being able to do $this->getDb('connectionName')->selectTableName() and I thought it would be best to integrate the table\/row ability into the adapter.\n\nI'll instead create a loosly coupled class around the top that gives the same functions but with my own additions.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=at465",
                        "name": "at465",
                        "displayName": "Andy Thompson",
                        "active": true
                    },
                    "created": "2009-07-31T12:57:55.000+0000",
                    "updated": "2009-07-31T12:57:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/33114",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "Yeah, I think it would be more appropriate to add a service layer (concrete or abstract) that would proxy to the adapter and the tables.  This way you've created a composite api for the functionality you want without compromising the level of coupling that would\/might cause confusion.\n\nFor example, $this->getDataModel('connectionName')->...  , where a DataModel (via a controller action helper) would combine the Adapter and Table\/Row apis to do what you want to do.\n\n-ralph ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2009-07-31T13:54:21.000+0000",
                    "updated": "2009-07-31T13:54:21.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7424\/transitions"
}