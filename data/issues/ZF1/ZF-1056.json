{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1056",
    "key": "ZF-1056",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "simulating session data using Zend_Session_Namespace support for expiring data"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/4",
                "name": "Improvement",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1056\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2007-03-22T18:47:29.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2007-03-15T10:43:03.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2007-07-05T14:43:56.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Feedback wanted.\n\nPerhaps very few developers have need of this feature that provides\na form of \"logical\" vs. \"physical\" session data?\n\n{quote}\n-------- Original Message --------\nSubject: \t[fw-auth] Zend_Session_Namespace - small patch\nDate: \tTue, 13 Mar 2007 18:37:04 -0700\nFrom: \tGavin Vess <gavin@zend.com>\nTo: \tZend Auth List <fw-auth@lists.zend.com>\n\nWe currently have *transparent* read access to data expiring at the end \nof a session that works just like accessing any other key in a session \nnamespace.  However, there is no write access to this set of data.  \nWrite access would support the concept of logical session data.  For \nexample, there is no method in Zend_Session_Namespace:\n\npublic function setTemp($name, $value)\n\nWith such a method, we can keep temporary, computed \"session\" data \ngrouped together with regular persistent session data, without making \nthe temporary data persistent.  Then, we can use all the other nice \nfeatures, like magic __get() with the computed session data.  For those \nwith complex situations where some computed data simply can not be \nstored along with regular session data, this patch provides a mechanism \nto \"splice in\" and simulate persistence of \"out of band\" session data, \n*without* breaking the session namespace concept.  The rest of the \napplication will not be burdened with unnecessary logic to determine \nwhere to find this computed session data.\n\nIt sets the variable in the _expiredData[] section of the private static \nvariable.\n\nThoughts?\n\nCheers,\nGavin\n{quote}\n\n{code}\n    \/**\n    * setTemp() - method to set a variable\/value in this object's \nnamespace, but place it in the\n    * expired section, so that the value will not persist to the next \nrequest.\n    *\n    * @param string $name - programmatic name of a key, in a \n<key,value> pair in the current namespace\n    * @param mixed $value - value in the <key,value> pair to assign to \nthe $name key\n    * @throws Zend_Session_Exception\n    * @return $this\n    *\/\n   protected function setTemp($name, $value)\n   {\n       if (isset(self::$_namespaceLocks[$this->_namespace])) {\n           throw new Zend_Session_Exception('This session\/namespace has \nbeen marked as read-only.');\n       }\n\n       if ($name === '') {\n           throw new Zend_Session_Exception(\"The '$name' key must be a \nnon-empty string\");\n       }\n\n       if (parent::$_writable === false) {\n           throw new \nZend_Session_Exception(parent::_THROW_NOT_WRITABLE_MSG);\n       }\n\n       $name = (string) $name;\n\n       self::$_expiringData[$this->_namespace][$name] = $value;\n\n       return $this;\n   }\n{code}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/5",
                "name": "Trivial"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1056\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                "name": "gavin",
                "displayName": "Gavin",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10096",
                    "id": 10096,
                    "name": "Zend_Session",
                    "description": "A standardized interface to common functionality found in or indigenous to site session implementations. ",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/13649",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "body": "Interest in this tiny feature is completely non-existent at this time.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gavin",
                        "name": "gavin",
                        "displayName": "Gavin",
                        "active": true
                    },
                    "created": "2007-03-22T18:47:29.000+0000",
                    "updated": "2007-03-22T18:47:29.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-1056\/transitions"
}