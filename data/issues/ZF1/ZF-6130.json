{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6130",
    "key": "ZF-6130",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Strongly typed objects when sent either from client side or server side do not work till we specify a classMapping"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6130\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/11080",
                    "id": 11080,
                    "description": "Mini Release",
                    "name": "1.11.12",
                    "userReleaseDate": "22\/Jun\/12",
                    "archived": false,
                    "releaseDate": "2012-06-22",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2011-10-28T21:29:16.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                "name": "gauravp",
                "displayName": "Gaurav Priyadarshi",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-03-26T03:25:40.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-10-28T21:29:16.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "We use gateway.php as endpoint for Remoting Calls from Flash player.\r\nIn order to expose a php file as a service we need to include it in the gateway.php file.\r\nStrongly typed objects(class objects) when sent either from client side or server side do not work till we specify a classMapping on gateway.php\r\nSomething similar to: \r\n$server->setClassMap('Entity', 'Entity');\r\n\r\nFlex already has a remoteClass alias tag as a metadata on the client side classes which specifies its type on the server side. \r\nExample:\r\npackage\r\n{    \r\n    [RemoteClass(alias=\"Entity\")] \/\/ this is server side type\r\n    public class Entity\r\n    {\r\n        public var id:int;\r\n    }\r\n}\r\n\r\nThis data is used while serializing and de-serializing the object.\r\nSo, Zend should not be requiring this mapping on the server, as it is assumed that the client will always send the data with the same typing as on the server.\r\nIf there is any other reason of keeping this mapping on gateway.php, at least the default behavior should be the one which is mentioned above for no mappings.\r\n\r\nAlso, otherwise, the $explicitType variable in php classes provide the information about the type on the server. This variable if not specified make the strong typed objects as generic objects when sent to the client. This should also default to the class name if it is not specified, and should work as strongly typed objects on either side.\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/2",
                "name": "Critical"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6130\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-9809",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9809",
                    "type": {
                        "name": "Dependency",
                        "direction": "OUTBOUND",
                        "description": "depends on"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/11999",
                    "filename": "Sample.zip",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "created": "2009-06-10T02:53:42.000+0000",
                    "size": 2712,
                    "mimeType": "application\/zip",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/11999\/Sample.zip"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10272",
                    "id": 10272,
                    "description": "Mini Release",
                    "name": "1.7.5",
                    "userReleaseDate": "16\/Feb\/09",
                    "archived": false,
                    "releaseDate": "2009-02-16",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10350",
                    "id": 10350,
                    "name": "Zend_Amf",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30307",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "I've changed the serializer methods so that they will return class name and not empty for unknown classes, unless the class is stdClass (which will be just Object). \nWade, if you could add test for that (I'm not sure how it's best to do it) that'd be great.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2009-04-21T13:45:44.000+0000",
                    "updated": "2009-04-21T13:45:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30308",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "Looks like a pretty test case for the new functionality. Thanks stas! I'll put it in after work and merge it into the next mini release. \n\nwade\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2009-04-21T14:01:08.000+0000",
                    "updated": "2009-04-21T14:01:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31666",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "body": "The fix provided is partial and works only if the function in php is not strongly typed like:\nfunction update($ item)\n{\n  return \"something\";\n}\n\nand we pass a class A say :\npackage\n{\n\t[RemoteClass(alias=\"A\")]\n\tpublic class A\n\t{\n\t\tpublic var i:int = 2;\n\t\tpublic function A()\n\t\t{\n\t\t\t\n\t\t}\n\t}\n}\n\nnow since the class mapping is not done on the server, the php function receives a stdClass and works.\nBut the issue is that when the php function is strongly types say:\nfunction update (A $item);\n\nPHP starts complaining the passed argument is of type stdClass instead of A.\n\nThe fix for this can be achieved if the Deserializer figures out the type (specified by the remote class alias on the Actionscript class) and then instantiates the correct type on the server side.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "created": "2009-06-08T06:51:45.000+0000",
                    "updated": "2009-06-08T06:51:45.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31714",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "The mapping works if the class in question (ARemote) exists or can be loaded. If it can not, then the mapping of course can not work. I tried your example and it worked for me just fine as soon as class ARemote is defined when server request is parsed. If you code does not work, please provide the full code.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2009-06-09T12:52:28.000+0000",
                    "updated": "2009-06-09T12:52:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31719",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "body": "Find the files in the attached zip file.\nThe error that I receive is :\n\n<br \/>\n<b>Catchable fatal error<\/b>:  Argument 1 passed to Srv::test() must be an instance of ARemoteClass, instance of stdClass given in <b>C:\\wamp\\www\\TestZend1-debug\\services\\Srv.php<\/b> on line <b>6<\/b><br \/>\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "created": "2009-06-10T02:53:44.000+0000",
                    "updated": "2009-06-10T02:53:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31855",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "In your example, ARemoteClass is loaded too late - since requests are parsed before they are executed, when parsing the incoming packet the definition of ARemote class is not available.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2009-06-15T09:12:26.000+0000",
                    "updated": "2009-06-15T09:12:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/31870",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "body": ">>In your example, ARemoteClass is loaded too late\nCan you elaborate on this, like what is the right time to do this.\n\nIf this is not supported can you provide a workaround for this scenario.\nAlso, just to mention, AMFPHP, Blazeds and several other amf libraries support this.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gauravp",
                        "name": "gauravp",
                        "displayName": "Gaurav Priyadarshi",
                        "active": true
                    },
                    "created": "2009-06-15T22:47:51.000+0000",
                    "updated": "2009-06-15T22:47:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/32388",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "Seems to be still questions about it, so reopening it to keep on my radar screen.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2009-07-04T15:08:30.000+0000",
                    "updated": "2009-07-04T15:08:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/38221",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=s3ct0r",
                        "name": "s3ct0r",
                        "displayName": "cg",
                        "active": true
                    },
                    "body": "It seems this is still an issue, i've exposed my objects via the autoloader and loading works fine, however the AMF server still casts them to stdClass when they are incomming.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=s3ct0r",
                        "name": "s3ct0r",
                        "displayName": "cg",
                        "active": true
                    },
                    "created": "2010-02-02T14:25:46.000+0000",
                    "updated": "2010-02-02T14:25:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40393",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "It looks like it is the transfer object that you are having issues with and not the service. ZF-9809 should make this a lot easier. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2010-05-05T13:11:47.000+0000",
                    "updated": "2010-05-05T13:11:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/48858",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "I believe this is now fixed in trunk as of r24543 and in the 1.11 release branch with r24544. \n\nOne note: for typehinted arguments to get cast correctly, they _must_ have an accompanying @param annotation in the docblock. As an example, this _won't_ work:\n{code}\nclass EmployeeService\n{\n    public function createEmployee(Employee $item)\n    { ... }\n}\n{code}\n\nHowever, this _will_:\n{code}\nclass EmployeeService\n{\n    \/**\n     * @param Employee $item\n     * @return int\n     *\/\n    public function createEmployee(Employee $item)\n    { ... }\n}\n{code}\n\nThis is due to a limitation in the PHP engine's Reflection API. The Reflection API for parameters can only return if the value expected is an array -- and not arbitrary object types. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-10-28T21:29:16.000+0000",
                    "updated": "2011-10-28T21:29:16.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6130\/transitions"
}