{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6053",
    "key": "ZF-6053",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Add new string pad filter"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6053\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/7",
                "name": "Needs Proposal"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10360",
                    "id": 10360,
                    "description": "Minor Release",
                    "name": "1.10.0",
                    "userReleaseDate": "27\/Jan\/10",
                    "archived": false,
                    "releaseDate": "2010-01-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2009-12-07T15:09:52.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dimmu",
                "name": "dimmu",
                "displayName": "V\u00e1clav Van\u00edk",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-03-18T02:15:11.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2009-12-07T15:09:52.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "filter"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Class could be something like:\n\n<?php\n\nrequire_once 'Zend\/Filter\/Interface.php';\n\nclass Zend_Filter_StringPad implements Zend_Filter_Interface\n{\n    const TYPE_BOTH  = 'both';\n    const TYPE_LEFT  = 'left';\n    const TYPE_RIGHT = 'right';\n\n    \/**\n     * Padding length\n     * @var string\n     *\/               \n    protected $_length;\n    \/**\n     * Padding characters\n     * @var string\n     *\/               \n    protected $_string;\n    \/**\n     * Padding type\n     * @var string\n     *\/               \n    protected $_type;\n\n    public function __construct($length, $string = ' ', $type = self::PADDING_RIGHT) {\n        $this->setLength($length);\n        $this->setString($string);\n        $this->setType($type);\n    }\n\n    \/**\n     * Retrieve padding length\n     *\n     * @return int\n     *\/\n    public function getLength() {\n        return $this->_length;\n    }\n\n    \/**\n     * Retrieve padding characters\n     *\n     * @return string\n     *\/\n    public function getString() {\n        return $this->_string;\n    }\n\n    \/**\n     * Retrieve padding type\n     *\n     * @return string\n     *\/\n    public function getType() {\n        return $this->_type;\n    }\n\n    \/**\n     * Set padding length\n     *\n     * @param  int $length\n     * @return Zend_Filter_StringPad\n     *\/\n    public function setLength($length) {\n        $this->_length = (int) $length;\n        return $this;\n    }\n\n    \/**\n     * Set padding characters\n     *\n     * @param  string $string\n     * @return Zend_Filter_StringPad\n     *\/\n    public function setString($string) {\n        $this->_string = (string) $string;\n        return $this;\n    }\n\n    \/**\n     * Set padding type\n     *\n     * @param  string $type\n     * @return Zend_Filter_StringPad\n     *\/\n    public function setType($type) {\n        switch ($type)\n        {\n            case self::TYPE_BOTH:\n            case self::TYPE_LEFT:\n            case self::TYPE_RIGHT:\n                $this->_type = $type;\n                break;\n            default:\n                throw new Zend_Filter_Exception('Padding type is invalid');\n        }\n\n        return $this;\n    }\n\n    \/**\n     * Converts our pad type consts to STR_PAD_* consts\n     *\n     * @return string\n     *\/\n    protected function _getType() {\n        switch ($this->_type)\n        {\n            case self::TYPE_LEFT:\n                return STR_PAD_LEFT;\n            case self::TYPE_RIGHT:\n                return STR_PAD_RIGHT;\n            default:\n                return STR_PAD_BOTH;\n        }\n    }\n\n    \/**\n     * Pad a string to a certain length with another string\n     *\n     * @param  string $value\n     * @return string\n     *\/\n    public function filter($value) {\n        $pad = '';\n\n        if (strlen($value) > 0) {\n            $pad = str_pad($value, $this->_length, $this->_string, $this->_getType());\n        }\n\n        return $pad;\n    }\n}\n\n?>"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6053\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                "name": "thomas",
                "displayName": "Thomas Weidner",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/11804",
                    "filename": "StringPad.php",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dimmu",
                        "name": "dimmu",
                        "displayName": "V\u00e1clav Van\u00edk",
                        "active": true
                    },
                    "created": "2009-03-18T02:55:46.000+0000",
                    "size": 4497,
                    "mimeType": "application\/x-php",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/11804\/StringPad.php"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10013",
                    "id": 10013,
                    "name": "Zend_Filter",
                    "description": "methods for filtering data",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29532",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "If so, it should use Zend_Text_MultiByte::strPad() to allow correct padding of non-ascii strings.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-03-18T02:21:35.000+0000",
                    "updated": "2009-03-18T02:21:35.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29535",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dimmu",
                        "name": "dimmu",
                        "displayName": "V\u00e1clav Van\u00edk",
                        "active": true
                    },
                    "body": "Multibyte-safe version of the Zend_Filter_StringPad",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dimmu",
                        "name": "dimmu",
                        "displayName": "V\u00e1clav Van\u00edk",
                        "active": true
                    },
                    "created": "2009-03-18T02:55:52.000+0000",
                    "updated": "2009-03-18T02:55:52.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29536",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dimmu",
                        "name": "dimmu",
                        "displayName": "V\u00e1clav Van\u00edk",
                        "active": true
                    },
                    "body": "Oh Ben, you are right. I added the multibyte-safe version. I think it is not necessary to use Zend_Text_MultiByte class because of dependency.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dimmu",
                        "name": "dimmu",
                        "displayName": "V\u00e1clav Van\u00edk",
                        "active": true
                    },
                    "created": "2009-03-18T02:57:47.000+0000",
                    "updated": "2009-03-18T02:57:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/30192",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "A proposal where this feature is part of has been added to Wiki.\nWaiting for Recommendation and Response from Zend since 15.April.2009",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-04-17T00:00:51.000+0000",
                    "updated": "2009-04-17T00:00:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/36791",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Closing as \"needs proposal\".\r\nThe proposal is already written and waiting for acceptance.\r\nSee here for details and vote for it: http:\/\/framework.zend.com\/wiki\/display\/ZFPROP\/Zend_Filter_StringPad+-++Thomas+Weidner",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2009-12-07T15:09:52.000+0000",
                    "updated": "2009-12-07T15:09:52.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-6053\/transitions"
}