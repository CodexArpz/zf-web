{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9607",
    "key": "ZF-9607",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Form_Element belongsTo Issues"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/11",
                "name": "Patch",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9607\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10451",
                    "id": 10451,
                    "description": "Mini Release",
                    "name": "1.10.4",
                    "userReleaseDate": "28\/Apr\/10",
                    "archived": false,
                    "releaseDate": "2010-04-28",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-04-16T13:36:04.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2010-04-03T17:25:00.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2011-01-20T13:34:11.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "This Task is for belongsTo related issues in several Zend_Form methods \r\nmainly isValid isValidPartial getValues getValidValues populate ...\r\n\r\nThis first patch is fixing isValid to work with belongsTo, and also\r\nmake sure that validated ElementValues are stripped from data to validate\r\nwhat the issue ZF-9679 was about.\r\n\r\nFor this i added a method _dissolveArrayUnsetKey which will unset the key\r\nin a given array after dissolving the given arrayPath.\r\n\r\n[#patch1] isValid fix for belongsTo\r\n[#patch2] testIsValidDiscardsValidatedValues\r\n[#patch3] isValidPartial fix for belongsTo\r\n[#patch4] populate setDefaults fix for belongsTo\r\n[#patch5] testSetDefaultsDiscardsPopulatedValues\r\n[#patch6] getValues fix for belongsTo\r\n[#patch7] getValidValues fix for belongsTo\r\n\r\nChanged parts in isValid, before Patch\r\n{code}\r\n$valid      = true;\r\n\r\n        if ($this->isArray()) {\r\n            $data = $this->_dissolveArrayValue($data, $this->getElementsBelongTo());\r\n        }\r\n \r\n        foreach ($this->getElements() as $key => $element) {\r\n            if (null !== $translator && !$element->hasTranslator()) {\r\n                $element->setTranslator($translator);\r\n            }\r\n            if (!isset($data[$key])) {\r\n                $valid = $element->isValid(null, $data) && $valid;\r\n            } else {\r\n                $valid = $element->isValid($data[$key], $data) && $valid;\r\n            }\r\n        }\r\n{code}\r\nAfter Patch\r\n{code}\r\n$valid      = true;\r\n        $eBelongTo  = null;\r\n\r\n        if ($this->isArray()) {\r\n            $eBelongTo = $this->getElementsBelongTo();\r\n            $data = $this->_dissolveArrayValue($data, $eBelongTo);\r\n        }\r\n \r\n        foreach ($this->getElements() as $key => $element) {\r\n            if (null !== $translator && !$element->hasTranslator()) {\r\n                $element->setTranslator($translator);\r\n            }\r\n            $check = $data;\r\n            if (($belongsTo = $element->getBelongsTo()) !== $eBelongTo) {\r\n                $check = $this->_dissolveArrayValue($data, $belongsTo);\r\n            }\r\n            if (!isset($check[$key])) {\r\n                $valid = $element->isValid(null, $check) && $valid;\r\n            } else {\r\n                $valid = $element->isValid($check[$key], $check) && $valid;\r\n                $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);\r\n            }\r\n        }\r\n{code}\r\n\r\n{anchor:patch1}\r\nh4.Patch 1 isValid fix for belongsTo\r\nThe first patch is for isValid, Unit Test included, this also obsoletes ZF-9679.\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php        (Revision 21863)\r\n+++ tests\/Zend\/Form\/FormTest.php        (Arbeitskopie)\r\n@@ -1579,7 +1579,27 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function _setup9607()\r\n+    {\r\n+        $this->form->addElement('text', 'foo')\r\n+                   ->foo->setBelongsTo('bar[quo]')\r\n+                        ->setRequired(true)\r\n+                        ->addValidator('Identical',\r\n+                                       false,\r\n+                                       'foo Value');\r\n \r\n+        $data = array('valid' => array('bar' =>\r\n+                                       array('quo' =>\r\n+                                             array('foo' => 'foo Value'))));\r\n+        return $data;\r\n+    }\r\n+\r\n+    public function testIsValidWithBelongsTo()\r\n+    {\r\n+        $data = $this->_setup9607();\r\n+        $this->assertTrue($this->form->isValid($data['valid']));\r\n+    }\r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21863)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -2005,6 +2005,34 @@\r\n     }\r\n \r\n     \/**\r\n+     * Given an array, an optional arrayPath and a key this method\r\n+     * dissolves the arrayPath and unsets the key within the array\r\n+     * if it exists.\r\n+     * \r\n+     * @param array $array \r\n+     * @param string|null $arrayPath\r\n+     * @param string $key\r\n+     * @return array\r\n+     *\/\r\n+    protected function _dissolveArrayUnsetKey($array, $arrayPath, $key)\r\n+    {\r\n+        $unset =& $array;\r\n+        $path  = trim(strtr((string)$arrayPath, array('[' => '\/', ']' => '')), '\/');\r\n+        $segs  = ('' !== $path) ? explode('\/', $path) : array();\r\n+        \r\n+        foreach ($segs as $seg) {\r\n+            if (!array_key_exists($seg, (array)$unset)) {\r\n+                return $array;\r\n+            }\r\n+            $unset =& $unset[$seg];\r\n+        }\r\n+        if (array_key_exists($key, (array)$unset)) {\r\n+            unset($unset[$key]);\r\n+        }\r\n+        return $array;\r\n+    }\r\n+\r\n+    \/**\r\n      * Converts given arrayPath to an array and attaches given value at the end of it.\r\n      *\r\n      * @param  mixed $value The value to attach\r\n@@ -2044,19 +2072,26 @@\r\n         }\r\n         $translator = $this->getTranslator();\r\n         $valid      = true;\r\n+        $eBelongTo  = null;\r\n \r\n         if ($this->isArray()) {\r\n-            $data = $this->_dissolveArrayValue($data, $this->getElementsBelongTo());\r\n+            $eBelongTo = $this->getElementsBelongTo();\r\n+            $data = $this->_dissolveArrayValue($data, $eBelongTo);\r\n         }\r\n \r\n         foreach ($this->getElements() as $key => $element) {\r\n             if (null !== $translator && !$element->hasTranslator()) {\r\n                 $element->setTranslator($translator);\r\n             }\r\n-            if (!isset($data[$key])) {\r\n-                $valid = $element->isValid(null, $data) && $valid;\r\n+            $check = $data;\r\n+            if (($belongsTo = $element->getBelongsTo()) !== $eBelongTo) {\r\n+                $check = $this->_dissolveArrayValue($data, $belongsTo);\r\n+            }\r\n+            if (!isset($check[$key])) {\r\n+                $valid = $element->isValid(null, $check) && $valid;\r\n             } else {\r\n-                $valid = $element->isValid($data[$key], $data) && $valid;\r\n+                $valid = $element->isValid($check[$key], $check) && $valid;\r\n+                $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);\r\n             }\r\n         }\r\n         foreach ($this->getSubForms() as $key => $form) {\r\n\r\n{code}\r\n\r\n{anchor:patch2}\r\nh4.Patch 2 testIsValidDiscardsValidatedValues\r\n\r\nThis second patch is an Unit Test only to ensure that isValid unsets already\r\nvalidated ElementValues and does not carry them to SubForms, like issued in ZF-9679\r\n\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php\t(Revision 21873)\r\n+++ tests\/Zend\/Form\/FormTest.php\t(Arbeitskopie)\r\n@@ -1528,6 +1528,20 @@\r\n         $this->assertRegexp('\/value=.foo Value.\/', $this->form->render());\r\n     }\r\n \r\n+    \/**\r\n+     * @group ZF-9679\r\n+     *\/\r\n+    public function testIsValidDiscardsValidatedValues()\r\n+    {\r\n+        $this->form->addElement('text', 'foo');\r\n+        $this->form->addSubForm(new Zend_Form_SubForm(), 'bar')\r\n+                   ->bar->addElement('text', 'foo')\r\n+                        ->foo->setAllowEmpty(true)\r\n+                             ->addValidator('Identical', true, '');\r\n+\r\n+        $this->assertTrue($this->form->isValid(array('foo' => 'foo Value')));\r\n+    }\r\n+\r\n     public function _setup9350()\r\n     {\r\n         $this->form->addSubForm(new Zend_Form_SubForm(), 'foo')\r\n{code}\r\n\r\n{anchor:patch3}\r\nh4.Patch 3 isValidPartial fix for belongsTo\r\nThis is the same patch as Patch 1 only for isValidPartial\r\n\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php        (Revision 21875)\r\n+++ tests\/Zend\/Form\/FormTest.php        (Arbeitskopie)\r\n@@ -1579,7 +1579,14 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function testIsValidPartialWithBelongsTo()\r\n+    {\r\n+        $data = $this->_setup9607();\r\n+        $this->assertTrue($this->form->isValidPartial($data['valid']));\r\n+        $this->assertSame('foo Value', $this->form->foo->getValue());\r\n+    }\r\n \r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21875)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -2090,19 +2090,27 @@\r\n      *\/\r\n     public function isValidPartial(array $data)\r\n     {\r\n+        $eBelongTo  = null;\r\n+\r\n         if ($this->isArray()) {\r\n-            $data = $this->_dissolveArrayValue($data, $this->getElementsBelongTo());\r\n+            $eBelongTo = $this->getElementsBelongTo();\r\n+            $data = $this->_dissolveArrayValue($data, $eBelongTo);\r\n         }\r\n \r\n         $translator        = $this->getTranslator();\r\n         $valid             = true;\r\n \r\n         foreach ($this->getElements() as $key => $element) {\r\n-            if (isset($data[$key])) {\r\n+            $check = $data;\r\n+            if (($belongsTo = $element->getBelongsTo()) !== $eBelongTo) {\r\n+                $check = $this->_dissolveArrayValue($data, $belongsTo);\r\n+            }\r\n+            if (isset($check[$key])) {\r\n                 if (null !== $translator && !$element->hasTranslator()) {\r\n                     $element->setTranslator($translator);\r\n                 }\r\n-                $valid = $element->isValid($data[$key], $data) && $valid;\r\n+                $valid = $element->isValid($check[$key], $check) && $valid;\r\n+                $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);\r\n             }\r\n         }\r\n         foreach ($this->getSubForms() as $key => $form) {\r\n\r\n{code}\r\n\r\n{anchor:patch4}\r\nh4.Patch 4 fix for setDefaults to work with belongsTo\r\n\r\nthis obsoletes ZF-9666\r\n\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php        (Revision 21877)\r\n+++ tests\/Zend\/Form\/FormTest.php        (Arbeitskopie)\r\n@@ -1579,7 +1579,14 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function testPopulateWithBelongsTo()\r\n+    {\r\n+        $data = $this->_setup9607();\r\n+        $this->form->populate($data['valid']);\r\n+        $this->assertSame('foo Value', $this->form->foo->getValue());\r\n+    }\r\n \r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21877)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -1226,13 +1226,21 @@\r\n      *\/\r\n     public function setDefaults(array $defaults)\r\n     {\r\n+        $eBelongTo = null;\r\n+\r\n         if ($this->isArray()) {\r\n-            $defaults = $this->_dissolveArrayValue($defaults, $this->getElementsBelongTo());\r\n+            $eBelongTo = $this->getElementsBelongTo();\r\n+            $defaults = $this->_dissolveArrayValue($defaults, $eBelongTo);\r\n         }\r\n         foreach ($this->getElements() as $name => $element) {\r\n-            if (array_key_exists($name, $defaults)) {\r\n-                $this->setDefault($name, $defaults[$name]);\r\n+            $check = $defaults;\r\n+            if (($belongsTo = $element->getBelongsTo()) !== $eBelongTo) {\r\n+                $check = $this->_dissolveArrayValue($defaults, $belongsTo);\r\n             }\r\n+            if (array_key_exists($name, $check)) {\r\n+                $this->setDefault($name, $check[$name]);\r\n+                $defaults = $this->_dissolveArrayUnsetKey($defaults, $belongsTo, $name);\r\n+            }\r\n         }\r\n         foreach ($this->getSubForms() as $name => $form) {\r\n             if (!$form->isArray() && array_key_exists($name, $defaults)) {\r\n\r\n{code}\r\n\r\n{anchor:patch5}\r\nh4.Patch 5 make sure populated Values are not carried to SubForms\r\n\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php\t(Revision 21879)\r\n+++ tests\/Zend\/Form\/FormTest.php\t(Arbeitskopie)\r\n@@ -1528,6 +1528,21 @@\r\n         $this->assertRegexp('\/value=.foo Value.\/', $this->form->render());\r\n     }\r\n \r\n+    \/**\r\n+     * @group ZF-9666\r\n+     *\/\r\n+    public function testSetDefaultsDiscardsPopulatedValues()\r\n+    {\r\n+        $this->form->addElement('text', 'foo');\r\n+        $this->form->addSubForm(new Zend_Form_SubForm(), 'bar')\r\n+                   ->bar->addElement('text', 'foo');\r\n+\r\n+        $this->form->populate(array('foo' => 'foo Value'));\r\n+        $html = $this->form->setView($this->getView())\r\n+                           ->render();\r\n+        $this->assertEquals(1, preg_match_all('\/foo Value\/', $html, $matches));\r\n+    }\r\n+\r\n     public function _setup9350()\r\n     {\r\n         $this->form->addSubForm(new Zend_Form_SubForm(), 'foo')\r\n\r\n{code}\r\n\r\n{anchor:patch6}\r\nh4.Patch 6 getValues fix for belongsTo\r\n\r\n{code}\r\nIndex: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php        (Revision 21883)\r\n+++ tests\/Zend\/Form\/FormTest.php        (Arbeitskopie)\r\n@@ -1579,7 +1579,14 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function testGetValuesWithBelongsTo()\r\n+    {\r\n+        $data = $this->_setup9607();\r\n+        $this->form->populate($data['valid']);\r\n+        $this->assertSame($data['valid'], $this->form->getValues());\r\n+    }\r\n \r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21883)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -1301,9 +1301,22 @@\r\n     public function getValues($suppressArrayNotation = false)\r\n     {\r\n         $values = array();\r\n+        $eBelongTo = null;\r\n+        \r\n+        if ($this->isArray()) {\r\n+            $eBelongTo = $this->getElementsBelongTo();\r\n+        }\r\n+        \r\n         foreach ($this->getElements() as $key => $element) {\r\n             if (!$element->getIgnore()) {\r\n-                $values[$key] = $element->getValue();\r\n+                $merge = array();\r\n+                if (($belongsTo = $element->getBelongsTo()) !== $eBelongTo) {\r\n+                    if ('' !== (string)$belongsTo) {\r\n+                        $key = $belongsTo . '[' . $key . ']';\r\n+                    }\r\n+                }\r\n+                $merge = $this->_attachToArray($element->getValue(), $key);\r\n+                $values = array_merge_recursive($values, $merge);\r\n             }\r\n         }\r\n         foreach ($this->getSubForms() as $key => $subForm) {\r\n{code}\r\n\r\n{anchor:patch7}\r\nh4.Patch 7 getValidValues with belongsTo\r\n\r\n{code}Index: tests\/Zend\/Form\/FormTest.php\r\n===================================================================\r\n--- tests\/Zend\/Form\/FormTest.php        (Revision 21885)\r\n+++ tests\/Zend\/Form\/FormTest.php        (Arbeitskopie)\r\n@@ -1579,7 +1579,13 @@\r\n         $this->assertSame($this->form->getValidValues($data['invalid']), $data['partial']);\r\n     }\r\n \r\n+    public function testGetValidValuesWithBelongsTo()\r\n+    {\r\n+        $data = $this->_setup9607();\r\n+        $this->assertSame($data['partial'], $this->form->getValidValues($data['invalid']));\r\n+    }\r\n \r\n+\r\n     \/\/ Display groups\r\n \r\n     public function testCanAddAndRetrieveSingleDisplayGroups()\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21885)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -1331,15 +1331,29 @@\r\n      *\/\r\n     public function getValidValues($data, $suppressArrayNotation = false)\r\n     {\r\n+        $values = array();\r\n+        $eBelongTo = null;\r\n+\r\n         if ($this->isArray()) {\r\n-            $data = $this->_dissolveArrayValue($data, $this->getElementsBelongTo());\r\n+            $eBelongTo = $this->getElementsBelongTo();\r\n+            $data = $this->_dissolveArrayValue($data, $eBelongTo);\r\n         }\r\n-        $values = array();\r\n+        \r\n         foreach ($this->getElements() as $key => $element) {\r\n-            if (isset($data[$key])) {\r\n-                if($element->isValid($data[$key], $data)) {\r\n-                    $values[$key] = $element->getValue();\r\n+            $check = $data;\r\n+            if (($belongsTo = $element->getBelongsTo()) !== $eBelongTo) {\r\n+                $check = $this->_dissolveArrayValue($data, $belongsTo);\r\n+            }\r\n+            if (isset($check[$key])) {\r\n+                if($element->isValid($check[$key], $check)) {\r\n+                    $merge = array();\r\n+                    if ($belongsTo !== $eBelongTo && '' !== (string)$belongsTo) {\r\n+                            $key = $belongsTo . '[' . $key . ']';\r\n+                    }\r\n+                    $merge = $this->_attachToArray($element->getValue(), $key);\r\n+                    $values = array_merge_recursive($values, $merge);\r\n                 }\r\n+                $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);\r\n             }\r\n         }\r\n         foreach ($this->getSubForms() as $key => $form) {\r\n\r\n{code}\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9607\/watchers",
                "isWatching": false,
                "watchCount": 2
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                "name": "alab",
                "displayName": "Christian Albrecht",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-10468",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-10468",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-8335",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8335",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-8203",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8203",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-8022",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8022",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-8204",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8204",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-9451",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9451",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-9471",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9471",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-9452",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9452",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-9456",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9456",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-5404",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-5404",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-9327",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9327",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-8054",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-8054",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                },
                {
                    "issueKey": "ZF-9694",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9694",
                    "type": {
                        "name": "Sub-Task",
                        "direction": "OUTBOUND"
                    }
                }
            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10029",
                    "id": 10029,
                    "name": "Zend_Form",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39996",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Added patch for isValid",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-15T19:29:25.000+0000",
                    "updated": "2010-04-15T19:29:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39998",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Change Type to Patch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-15T19:32:44.000+0000",
                    "updated": "2010-04-15T19:32:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39999",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Fixed whitespaces within patch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-15T19:55:20.000+0000",
                    "updated": "2010-04-15T19:55:20.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40010",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "added Unit Test to respect ZF-9679",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T04:00:31.000+0000",
                    "updated": "2010-04-16T04:00:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40014",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Added Patch and Unit Test for isValidPartial fix belongsTo",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T06:08:06.000+0000",
                    "updated": "2010-04-16T06:08:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40029",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Added Patch 4  including Unit Test as fix for belongsTo within setDefaults.\r\nThis obsoletes the patch from ZF-9666 ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T07:32:00.000+0000",
                    "updated": "2010-04-16T07:32:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40036",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Added patch 5, an Unit Test to make sure ZF-9666 is satisfied.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T07:51:11.000+0000",
                    "updated": "2010-04-16T07:51:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40042",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Added Patch 6 for getValues fix for belongsTo including Unit Test",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T08:37:07.000+0000",
                    "updated": "2010-04-16T08:37:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40047",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Added Patch and Unit Test for getValidValues with belongsTo",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T09:29:24.000+0000",
                    "updated": "2010-04-16T09:29:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40090",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "This is missing in Patch 7\r\n{code}\r\n    public function _setup9607()\r\n    {\r\n        $this->form->addElement('text', 'foo')\r\n                   ->foo->setBelongsTo('bar[quo]')\r\n                        ->setRequired(true)\r\n                        ->addValidator('Identical',\r\n                                       false,\r\n                                       'foo Value');\r\n\r\n        $this->form->addElement('text', 'quo')\r\n                   ->quo->setBelongsTo('bar[quo]')\r\n                        ->addValidator('Identical',\r\n                                       false,\r\n                                       'quo Value');\r\n\r\n        $data = array('valid' => array('bar' =>\r\n                                       array('quo' =>\r\n                                             array('foo' => 'foo Value',\r\n                                                   'quo' => 'quo Value'))),\r\n                      'invalid' => array('bar' =>\r\n                                         array('quo' =>\r\n                                               array('foo' => 'foo Invalid',\r\n                                                     'quo' => 'quo Value'))),\r\n                      'partial' => array('bar' =>\r\n                                         array('quo' =>\r\n                                               array('quo' => 'quo Value'))));\r\n        return $data;\r\n    }\r\n\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T13:34:24.000+0000",
                    "updated": "2010-04-16T13:34:24.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40091",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Patches applied in trunk and 1.10 release branch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2010-04-16T13:36:04.000+0000",
                    "updated": "2010-04-16T13:36:04.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40096",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Applied missing TestSetup in trunk and 1.10 release branch.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-16T16:16:14.000+0000",
                    "updated": "2010-04-16T16:16:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40097",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=axalix",
                        "name": "axalix",
                        "displayName": "Alexey Kruchinin",
                        "active": true
                    },
                    "body": "This update resulted in changes of $context variable in methods isValid() in all of the specified custom validators. When we call method isValid() method of Zend_Form class, every element of the form is being deleted from the context: one-by-one, in order. Thus, I can't use $context in isValid() method for those elements that are specified before the current element. For instance, if I have 2 fields: \"password\" and \"confirm_password\" - I can't use $context in my custom validator, in the method isValid() for the field \"password\" because $context['password'] is unset (!) - it is not longer in the context.\r\n\r\nThis happens due to these lines in Zend_Form class, since $key is always specified and $unset refers to $array which is our current context:\r\n\r\nif (array_key_exists($key, (array)$unset)) {\r\n    unset($unset[$key]);\r\n}\r\n\r\n\r\nSo, I had to overwrite _dissolveArrayUnsetKey() method this way in my Form Class:\r\n\r\nprotected function _dissolveArrayUnsetKey($array, $arrayPath, $key) {\r\n   return $array;\r\n}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=axalix",
                        "name": "axalix",
                        "displayName": "Alexey Kruchinin",
                        "active": true
                    },
                    "created": "2010-04-16T17:57:06.000+0000",
                    "updated": "2010-04-16T17:57:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40099",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Lex you are right that was not intended, could you check\r\nif this patch solves the problem\r\n{code}\r\nIndex: library\/Zend\/Form.php\r\n===================================================================\r\n--- library\/Zend\/Form.php       (Revision 21922)\r\n+++ library\/Zend\/Form.php       (Arbeitskopie)\r\n@@ -2120,7 +2120,7 @@\r\n             $eBelongTo = $this->getElementsBelongTo();\r\n             $data = $this->_dissolveArrayValue($data, $eBelongTo);\r\n         }\r\n-\r\n+        $context = $data;\r\n         foreach ($this->getElements() as $key => $element) {\r\n             if (null !== $translator && !$element->hasTranslator()) {\r\n                 $element->setTranslator($translator);\r\n@@ -2130,9 +2130,9 @@\r\n                 $check = $this->_dissolveArrayValue($data, $belongsTo);\r\n             }\r\n             if (!isset($check[$key])) {\r\n-                $valid = $element->isValid(null, $check) && $valid;\r\n+                $valid = $element->isValid(null, $context) && $valid;\r\n             } else {\r\n-                $valid = $element->isValid($check[$key], $check) && $valid;\r\n+                $valid = $element->isValid($check[$key], $context) && $valid;\r\n                 $data = $this->_dissolveArrayUnsetKey($data, $belongsTo, $key);\r\n             }\r\n         }\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-17T03:19:33.000+0000",
                    "updated": "2010-04-17T03:19:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40100",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=axalix",
                        "name": "axalix",
                        "displayName": "Alexey Kruchinin",
                        "active": true
                    },
                    "body": "(my name was Lex in the prev. post. Sorry, for this confusion)\r\n\r\nChristian, this patch works like a charm and solves the problem. I don't need to overwrite \"_dissolveArrayUnsetKey\" anymore.\r\n\r\nThank you.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=axalix",
                        "name": "axalix",
                        "displayName": "Alexey Kruchinin",
                        "active": true
                    },
                    "created": "2010-04-17T04:14:05.000+0000",
                    "updated": "2010-04-17T04:14:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/40102",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "body": "Additional patches applied to trunk and 1.10 release for\r\nisValid isValidPartial and getValidValues to make sure context\r\ndata is kept.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=alab",
                        "name": "alab",
                        "displayName": "Christian Albrecht",
                        "active": true
                    },
                    "created": "2010-04-17T05:15:40.000+0000",
                    "updated": "2010-04-17T05:15:40.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-9607\/transitions"
}