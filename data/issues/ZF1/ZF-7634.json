{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7634",
    "key": "ZF-7634",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "multiple empty arrays in response not working correctly anymore"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7634\/votes",
                "votes": 8,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10360",
                    "id": 10360,
                    "description": "Minor Release",
                    "name": "1.10.0",
                    "userReleaseDate": "27\/Jan\/10",
                    "archived": false,
                    "releaseDate": "2010-01-27",
                    "released": true
                }
            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2010-01-15T15:33:47.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ollim",
                "name": "ollim",
                "displayName": "Oliver Milanovic",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-08-19T06:02:21.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2010-01-19T01:21:56.000+0000"
        },
        "customfield_10041": {
            "name": "Tags",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:labels",
            "value": [
                "amf",
                "array"
            ]
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "UPDATE: the messy thing here is in Parse\\Amf3\\Serializer.php, line 323 ff. - do you really need those object references for arrays?\n\nIf I return e.g. an object with three empty arrays to Flex (3.0.2) using Zend_Amf, there is only one Array-Object allocated and all the three arrays point to the same Array object. This is of course a very unexpected behaviour.\n\n{code:title=Test.mxml|borderStyle=solid}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<mx:Application xmlns:mx=\"http:\/\/www.adobe.com\/2006\/mxml\" layout=\"absolute\">\n\n  <mx:Script>\n    <![CDATA[\n      import mx.utils.ObjectUtil;\n\n      import vo.ArrayHolder;\n\n      private function testClicked():void\n      {\n        testService.getData();\n      }\n\n      private function resultGetData(data:*):void\n      {\n        var arrayHolder:ArrayHolder = data.result;\n\n        \/\/ what happens now is, that - although we got THREE independent arrays - through Zend_Amf\n        \/\/ they are all pointing to the same memory\n\n        arrayHolder.array1.push(\"here I am!\");\n\n        txaDemo.text  = \"Array1: \" + ObjectUtil.toString(arrayHolder.array1) + \"\\n\";\n        txaDemo.text += \"Array2: \" + ObjectUtil.toString(arrayHolder.array2) + \"\\n\";\n        txaDemo.text += \"Array3: \" + ObjectUtil.toString(arrayHolder.array3) + \"\\n\";\n      }\n\n    ]]>\n  <\/mx:Script>\n\n  <mx:RemoteObject id=\"testService\"\n                   destination=\"zend\"\n                   source=\"Foo\"\n                   endpoint=\"http:\/\/wwwdev\/amf\/test.php\">\n       <mx:method name=\"getData\" result=\"resultGetData(event)\"\/>\n  <\/mx:RemoteObject>\n\n  <mx:Button label=\"CLICK\" click=\"testClicked()\" \/>\n\n  <mx:TextArea id=\"txaDemo\"\n               top=\"30\" left=\"10\"\n               width=\"400\" height=\"150\" \/>\n\n<\/mx:Application>\n{code}\n{code:title=vo\/ArrayHolder.as|borderStyle=solid}\npackage vo\n{\n  [RemoteClass(alias=\"vo.ArrayHolder\")]\n  public class ArrayHolder\n  {\n    public var _explicitType:String;\n\n    public var array1:Array = new Array();\n    public var array2:Array = new Array();\n    public var array3:Array = new Array();\n  }\n}\n{code}\n{code:title=test.php|borderStyle=solid}\n<?php\n\nif(set_include_path('c:\/dev\/server\/vhosts\/library\/Zend\/1_9_1\/') === false){\ndie('Include path failed');\n}\n\nrequire_once 'Zend\/Amf\/Server.php';\n\n\/\/ simple class to be used for amf server\nclass Foo\n{\n  public function getData()\n  {\n    return new ArrayHolder();\n  }\n}\n\n\/\/ simple vo object\nclass ArrayHolder\n{\n    public $_explicitType = 'vo.ArrayHolder';\n\n    public $array1 = array();\n    public $array2 = array();\n    public $array3 = array();  \n}\n\n\/\/ Instantiate server\n$server = new Zend_Amf_Server();\n$server->setClass('Foo');\n$server->setClassMap('vo.ArrayHolder', 'ArrayHolder');\n\necho $server->handle();\n?>\n{code}\n\nThis did NOT happen with Version 1.8.3 - it's broken since 1.8.4"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7634\/watchers",
                "isWatching": false,
                "watchCount": 6
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                "name": "stas",
                "displayName": "Stanislav Malyshev",
                "active": false
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10340",
                    "id": 10340,
                    "description": "Mini Release",
                    "name": "1.8.4",
                    "userReleaseDate": "23\/Jun\/09",
                    "archived": false,
                    "releaseDate": "2009-06-23",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10320",
                    "id": 10320,
                    "description": "Minor Release",
                    "name": "1.9.0",
                    "userReleaseDate": "31\/Jul\/09",
                    "archived": false,
                    "releaseDate": "2009-07-31",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10350",
                    "id": 10350,
                    "description": "Mini Release",
                    "name": "1.9.1",
                    "userReleaseDate": "11\/Aug\/09",
                    "archived": false,
                    "releaseDate": "2009-08-11",
                    "released": true
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/10361",
                    "id": 10361,
                    "description": "Mini Release",
                    "name": "1.9.2",
                    "userReleaseDate": "25\/Aug\/09",
                    "archived": false,
                    "releaseDate": "2009-08-25",
                    "released": true
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF",
                "key": "ZF",
                "name": "Zend Framework",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10350",
                    "id": 10350,
                    "name": "Zend_Amf",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34822",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stefanklug",
                        "name": "stefanklug",
                        "displayName": "Stefan Klug",
                        "active": true
                    },
                    "body": "Phew, that's a nasty problem. \nYou're right, that this case didn't happen in version 1.8.3, but only because there was no referencing at all. The problem is that even a === comparison of a array compares the values.\nSo array(\"foo\") === array(\"foo\") would return true even though the arrays should be seperate instances.\n\nCurrently I see the following possible solution:\nWe could disable referencing of arrays at all. This would solve this problem at the expense of no array referencing (lets hope nobody relies on that feature... ).\nAdditionally we should add support and promote the use of ArrayObjects. Using ArrayObjects would solve the referencing problems, as they can be correctly compared using ===.\n\nAny opinions?\n\nCheers\nStefan Klug",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stefanklug",
                        "name": "stefanklug",
                        "displayName": "Stefan Klug",
                        "active": true
                    },
                    "created": "2009-09-22T14:11:59.000+0000",
                    "updated": "2009-09-22T14:11:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34824",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "I would second the ArrayObject suggestion. There are similar changes that I need to re-base and commit so that doctrine 2.0 works with zend amf",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2009-09-22T14:38:14.000+0000",
                    "updated": "2009-09-22T14:38:14.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35570",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=smithxxl",
                        "name": "smithxxl",
                        "displayName": "Brad Smith",
                        "active": true
                    },
                    "body": "Would this be the reason why arrays that equal the same value in php are removed?\r\n\r\n{code:title=Food.php|borderStyle=solid}\r\n\r\nclass Foo\r\n{\r\n  public function getData()\r\n  {\r\n    return new array(\r\n      array('Test Key 1' => '', 'Test Key 2' = ''),\r\n      array('Test Key 1' => 'Hello', 'Test Key 2' = ''),\r\n      array('Test Key 1' => 'Hello', 'Test Key 2' = ''),\r\n      array('Test Key 1' => 'Hello', 'Test Key 2' = 'World') );\r\n  }\r\n}\r\n{code}\r\n\r\nThis returns a blank array for [2] because it matches perfectly with [1].",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=smithxxl",
                        "name": "smithxxl",
                        "displayName": "Brad Smith",
                        "active": true
                    },
                    "created": "2009-10-27T07:33:49.000+0000",
                    "updated": "2009-10-27T07:33:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/35953",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nigelf",
                        "name": "nigelf",
                        "displayName": "Nigel Forward",
                        "active": true
                    },
                    "body": "@Brad\r\nYes, I've hit the same problem with array values being identical.  \r\n\r\nMy object had a number of array properties, each array had upto 20 integer elements. \r\n\r\nWhen two (or more) arrays had the same elements in the same order, they would be deserialised in Flex with the same memory reference.  As the data changed, different arrays would reference each other, causing some *very* weird behaviour on the client!\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=nigelf",
                        "name": "nigelf",
                        "displayName": "Nigel Forward",
                        "active": true
                    },
                    "created": "2009-11-12T03:40:59.000+0000",
                    "updated": "2009-11-12T03:40:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37641",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ferf",
                        "name": "ferf",
                        "displayName": "Frank Erf",
                        "active": true
                    },
                    "body": "I can't believe this bug is still open without any indication of a work around.  The is a HUGE issue.  Has anyone found a way around this?  I am trying to get a product out the door and this one has me hamstrung.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ferf",
                        "name": "ferf",
                        "displayName": "Frank Erf",
                        "active": true
                    },
                    "created": "2010-01-12T15:51:31.000+0000",
                    "updated": "2010-01-12T15:51:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37737",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "body": "Unlike objects array's in PHP do not have identities. Talking with Stas if we were to cast the array into an arrayobject we would loose all reference anyway. We are just going to remove array references from the serialization process. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wadearnold",
                        "name": "wadearnold",
                        "displayName": "Wade Arnold",
                        "active": true
                    },
                    "created": "2010-01-15T14:51:46.000+0000",
                    "updated": "2010-01-15T14:51:46.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37738",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "Expanding on Wade's comment - basically there's no way in PHP to know one array from another (just as two strings saying \"a\" are the same, so are two arrays array(\"a\")). Since this is not going to change anytime soon, and such behavior apparently leads to confusion (as in AMF\/AS arrays are objects and in PHP they are primitive) I think removing array refs would be the best way to proceed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2010-01-15T14:59:25.000+0000",
                    "updated": "2010-01-15T14:59:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37742",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "fixed in trunk and 1.10 branch - no more refs for arrays",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2010-01-15T15:33:47.000+0000",
                    "updated": "2010-01-15T15:33:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37792",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ml_kiiwy",
                        "name": "ml_kiiwy",
                        "displayName": "Mika\u00ebl LABRUT",
                        "active": true
                    },
                    "body": "hi,\r\n\r\nI have a little problem with your solution for this bug.\r\nSince your modifications on 'Serializer' returned array in my project are strange and didn't works (deserialization error).\r\n\r\nI think their is a link with cyclic reference : when i have cyclic references and array there is a bug.\r\n\r\nMaybe another solution can be found ?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ml_kiiwy",
                        "name": "ml_kiiwy",
                        "displayName": "Mika\u00ebl LABRUT",
                        "active": true
                    },
                    "created": "2010-01-18T02:47:42.000+0000",
                    "updated": "2010-01-18T02:47:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37804",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "body": "Mikael, could you please have some reproducing code?\r\n\r\nP.S. looks like there was a bug in the fix, try the trunk now.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=stas",
                        "name": "stas",
                        "displayName": "Stanislav Malyshev",
                        "active": false
                    },
                    "created": "2010-01-18T10:30:15.000+0000",
                    "updated": "2010-01-18T10:34:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/37816",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ml_kiiwy",
                        "name": "ml_kiiwy",
                        "displayName": "Mika\u00ebl LABRUT",
                        "active": true
                    },
                    "body": "Yeah, thanks the fix works fine :)\r\n\r\nI haven't a \"simple\" reproducing code sorry ...\r\n\r\nBut the idea is to make a complex object with array\/date\/etc and manny array and cyclic reference and look at if it is correctly serialized\/deserialized.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ml_kiiwy",
                        "name": "ml_kiiwy",
                        "displayName": "Mika\u00ebl LABRUT",
                        "active": true
                    },
                    "created": "2010-01-19T01:21:55.000+0000",
                    "updated": "2010-01-19T01:21:55.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7634\/transitions"
}