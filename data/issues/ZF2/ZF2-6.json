{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-6",
    "key": "ZF2-6",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend_Config_Xml: allow extending for lower levels"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/2",
                "name": "New Feature",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-6\/votes",
                "votes": 1,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/2",
                "name": "Won't Fix"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-04-29T10:45:44.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                "name": "jpieper",
                "displayName": "Jan Pieper",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-01-30T05:54:32.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-04-29T10:45:44.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "It would be great if it is possible to define extends in lower xml structure levels. Take a look at this xml structure below.\r\n\r\n{code:xml}<zend-config>\r\n  <production>\r\n    <first-application>\r\n      <paginator-type>sliding<\/paginator-type>\r\n      <entries-per-page>7<\/entries-per-page>\r\n    <\/first-application>\r\n    <second-application extends=\"first-application\">\r\n      <entries-per-page>5<\/entries-per-page>\r\n    <\/second-application>\r\n  <\/production>\r\n  <staging extends=\"production\">\r\n    <first-application>\r\n      <entries-per-page>10<\/entries-per-page>\r\n    <\/first-application>\r\n  <\/staging>\r\n<\/zend-config>{code}\r\n\r\nI am not sure what to do with {{staging.second-application.entries-per-page}}. Should it use {{entries-per-page=5}} or {{entries-per-page=10}}?\r\n\r\nI think this improvement will need a complete refactoring of Zend_Config(_Xml)."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-6\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [

            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                "name": "dasprid",
                "displayName": "Ben Scholzen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/11726",
                    "filename": "zf-5660.diff",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2009-02-02T16:04:38.000+0000",
                    "size": 6070,
                    "mimeType": "application\/octet-stream",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/11726\/zf-5660.diff"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10530",
                    "id": 10530,
                    "name": "Zend\\Config",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28538",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "corrected xml example.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2009-01-30T09:52:57.000+0000",
                    "updated": "2009-01-30T09:52:57.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28573",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "This evening I tried to solve this issue and I think I\u00b4ve found a good way. I used this modified xml structure:\n\n{code:xml}<zend-config>\n  <production>\n    <first-application>\n      <paginator-type>sliding<\/paginator-type>\n      <entries-per-page>7<\/entries-per-page>\n    <\/first-application>\n    <second-application extends=\"first-application\">\n      <entries-per-page>5<\/entries-per-page>\n    <\/second-application>\n  <\/production>\n  <staging extends=\"production\">\n    <first-application>\n      <paginator-type>jumping<\/paginator-type>\n      <entries-per-page>10<\/entries-per-page>\n    <\/first-application>\n  <\/staging>\n  <testing extends=\"staging\" \/>\n<\/zend-config>{code}\n\nMy Zend_Config_Xml::__construct() is:\n\n{code:java}public function __construct($filename, $section = null, $allowModifications = false)\n{\n    if (empty($filename)) {\n        require_once 'Zend\/Config\/Exception.php';\n        throw new Zend_Config_Exception('Filename is not set');\n    }\n    \n    set_error_handler(array($this, '_loadFileErrorHandler'));\n    $config = simplexml_load_file($filename); \/\/ Warnings and errors are suppressed\n    restore_error_handler();\n    \n    \/\/ Check if there was a error while loading file\n    if ($this->_loadFileErrorStr !== null) {\n        require_once 'Zend\/Config\/Exception.php';\n        throw new Zend_Config_Exception($this->_loadFileErrorStr);\n    }\n    \n    $sections = array();\n    if (is_array($section)) {\n        $sections = $section;\n    } elseif ($section !== null) {\n        if (!isset($config->$section)) {\n            require_once 'Zend\/Config\/Exception.php';\n            throw new Zend_Config_Exception(\"Section '$section' cannot be found in $filename\");\n        }\n        $sections = array($section);\n    }\n    \n    parent::__construct(\n        $this->_processExtendsRecursive($config, $sections),\n        $allowModifications\n    );\n\n    $this->_loadedSection = $section;\n}{code}\n\nAnd I replaced Zend_Config_Xml::_processExtends() with new Zend_Config_Xml::_processExtendsRecursive():\n\n{code:java}protected function _processExtendsRecursive(SimpleXMLElement $element,\n                                            array $sections = array(),\n                                            $depth = 0)\n{\n    $config = array();\n    foreach ($element->children() as $children)\n    {\n        $childs = $children->children();\n        $config[$elementName = $children->getName()] = empty($childs)\n            ? $this->_toArray($children)\n            : $this->_processExtendsRecursive($children, array(), $depth+1);\n        \n        $attributes = $children->attributes();\n        foreach ($attributes as $attribute => $value)\n        {\n            if ($attribute !== 'extends') {\n                continue;\n            }\n            \n            $extendedSection = (string)$value;\n            if (!array_key_exists($extendedSection, $config)) {\n                require_once 'Zend\/Config\/Exception.php';\n                throw new Zend_Config_Exception(\"Section '$extendedSection' cannot be found\");\n            }\n            \n            $data = $config[$extendedSection];\n            if (is_array($data) && is_array($config[$elementName])) {\n                $config[$elementName] = $this->_arrayMergeRecursive(\n                    $data, $config[$elementName]\n                );\n            } elseif (is_array($data)) {\n                $config[$children->getName()] = $data;\n            }\n            \n            if ($depth == 0) {\n                $this->_assertValidExtend($elementName, $extendedSection);\n            }\n        }\n    }\n    \n    if (!empty($sections)) {\n        foreach ($config as $key => $value) {\n            if (!in_array($key, $sections)) {\n                unset($config[$key]);\n            }\n        }\n    }\n    \n    if (empty($config)) {\n        $config = (string)$element;\n    }\n    return $config;\n}{code}\n\nFollowing script...\n\n{code:java}<?php\n\nrequire_once 'Zend\/Config\/Xml.php';\n$config = new Zend_Config_Xml('zf-5660.xml');\n\nrequire_once 'Zend\/Debug.php';\nZend_Debug::dump($config->toArray());{code}\n\n...will output this:\n\n{code}array(3) {\n  [\"production\"] => array(2) {\n    [\"first-application\"] => array(2) {\n      [\"paginator-type\"] => string(7) \"sliding\"\n      [\"entries-per-page\"] => string(1) \"7\"\n    }\n    [\"second-application\"] => array(2) {\n      [\"paginator-type\"] => string(7) \"sliding\"\n      [\"entries-per-page\"] => string(1) \"5\"\n    }\n  }\n  [\"staging\"] => array(2) {\n    [\"first-application\"] => array(2) {\n      [\"paginator-type\"] => string(7) \"jumping\"\n      [\"entries-per-page\"] => string(2) \"10\"\n    }\n    [\"second-application\"] => array(2) {\n      [\"paginator-type\"] => string(7) \"sliding\"\n      [\"entries-per-page\"] => string(1) \"5\"\n    }\n  }\n  [\"testing\"] => array(2) {\n    [\"first-application\"] => array(2) {\n      [\"paginator-type\"] => string(7) \"jumping\"\n      [\"entries-per-page\"] => string(2) \"10\"\n    }\n    [\"second-application\"] => array(2) {\n      [\"paginator-type\"] => string(7) \"sliding\"\n      [\"entries-per-page\"] => string(1) \"5\"\n    }\n  }\n}{code}\n\nI also attached all these changes to Zend_Config_Xml to this issue: zf-5660.diff",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2009-02-02T16:04:44.000+0000",
                    "updated": "2009-02-02T16:04:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28592",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Currently there is feature parity between XML and INI formats.  How would this work with the INI file format?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-02-02T23:55:18.000+0000",
                    "updated": "2009-02-02T23:55:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28595",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "body": "Yeah I already thought about how to realize this improvement for INI files but I have no really good idea because INI files have only one real dimension. Using \".\" in INI files to allow multidimensional INI configurations is no standard I think. You can use it for all other applications without any problems but they do not know that you want to define a multidimensional configuration.\n\n{code:title=example.ini}[foo]\nfoo.bar = test{code}\n\n{code:java|title=example.php}<?php\n\nparse_ini_file('example.ini', true);{code}\n\nwill result in:\n\n{code}array(1) {\n  [\"foo\"] =>\n  array(1) {\n    [\"foo.bar\"]=>\n    string(4) \"test\"\n  }\n}{code}\n\nand not:\n\n{code}array(1) {\n  [\"foo\"] =>\n  array(1) {\n    [\"foo\"] =>\n    array(1) {\n      [\"bar\"]=>\n      string(4) \"test\"\n    }\n  }\n}{code}\n\nWithout complete redefinition of our INI format, I think it will be very tricky to allow the same functionality to INI files.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=jpieper",
                        "name": "jpieper",
                        "displayName": "Jan Pieper",
                        "active": true
                    },
                    "created": "2009-02-03T01:12:53.000+0000",
                    "updated": "2009-02-03T01:12:53.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28611",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "This feature cannot be implemented until 2.0 for the following reason: At the moment, the \"extend\" attribute is only reserved for the section-, but no deeper element. Thus, this feature would break BC, as users could still have used the \"extend\" attribute in they config files (short param syntax).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-02-04T06:17:44.000+0000",
                    "updated": "2009-02-04T06:17:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/28926",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "After talking with Matthew about it, we decided that this break (for XML is allowed). ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-02-18T08:48:29.000+0000",
                    "updated": "2009-02-18T08:48:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29643",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Personally, I'm not convinced this is a good idea as it introduces potential confusion and additional complexity when writing config files for relatively little gain.\n\ne.g. \n{code}\n<config>\n<base>\n    <app1>\n        <var>one<\/var>\n        <foo>bar<\/foo>\n    <\/app1>\n    <app2 extends=\"app1\">\n        <var>two<\/var>\n    <\/app2>\n    <app3 extends=\"app1\">\n        <var>three<\/var>\n    <\/app3>\n<\/base>\n<live extends=\"base\">\n    <app2 extends=\"app3\">\n        <foo>baz<\/foo>\n    <\/app2>\n<\/live>\n<\/config>\n{code}\n\n$config->app2->var  now equals \"three\" rather than two as probably expected due to a typo.\n\nHowever, having said that, if someone develops a patch with unit tests then if Matthew's happy for it to go in, then that's fine.\n\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-03-21T13:04:03.000+0000",
                    "updated": "2009-03-21T13:04:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/39434",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "body": "Reassigned to component maintainer",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=thomas",
                        "name": "thomas",
                        "displayName": "Thomas Weidner",
                        "active": true
                    },
                    "created": "2010-03-21T10:27:51.000+0000",
                    "updated": "2010-03-21T10:27:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46817",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "We'll look at this again when refactoring ZF2. I personally think that being able to load a file into another file will solve this one more cleanly with less user confusion.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2011-05-27T01:53:39.000+0000",
                    "updated": "2011-05-27T01:53:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50399",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Ben: Any thoughts for ZF2?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2012-04-28T16:14:38.000+0000",
                    "updated": "2012-04-28T16:14:38.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50410",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "As we are not supporting inheritance in ZF2 anymore, this issue will be closed.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2012-04-29T10:45:44.000+0000",
                    "updated": "2012-04-29T10:45:44.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-6\/transitions"
}