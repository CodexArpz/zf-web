{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-113",
    "key": "ZF2-113",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Uncaught ReflectionExcemption being thrown from within Zend\\Loader\\PluginBroker"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-113\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-02T15:21:13.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaunb",
                "name": "shaunb",
                "displayName": "Shaun Bramley",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-12-06T05:47:09.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-02T15:21:13.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Under the following conditions it is possible for \\Zend\\Filter\\FilterChain to cause an Uncaught ReflectionExeption to be thrown from within \\Zend\\Loader\\PluginBroker::load()\r\n\r\nGiven the following code snippets:\r\n{code}\r\nclass myFilter extends \\Zend\\Filter\\AbstractFilter {\r\n    public function filter($text) {\r\n        return 'test';\r\n    }\r\n}\r\n\r\n\r\n$f = new \\Zend\\Filter\\FilterChain(array(\r\n    'filters' => array(\r\n        'name' => 'myFilter'\r\n    ),\r\n));\r\n{code}\r\n\r\nThings seem to go awry within the \\Zend\\Filter\\FilterChain::attachByName method when the $options array is empty.  This results in:\r\n1) an array with an empty array within it to (eventually) be sent to \\Zend\\Loader\\Plugin::load() as the $options;\r\n2) the above results in the incorrect logic to be executed within the load() method.\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-113\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "Zend"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10541",
                    "id": 10541,
                    "name": "Zend\\Filter",
                    "isAssigneeTypeValid": false
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10549",
                    "id": 10549,
                    "name": "Zend\\Loader",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49234",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaunb",
                        "name": "shaunb",
                        "displayName": "Shaun Bramley",
                        "active": true
                    },
                    "body": "If no options (or an empty array) is passed to attachByName then the following conditional will evaluate true.\r\n\r\n{code}\r\nif(range(0, count($options) - 1) != array_keys($options))\r\n{code}\r\n\r\nI propose altering the function to the following:\r\n{code}\r\npublic function attachByName($name, $options = array(), $priority = self::DEFAULT_PRIORITY)\r\n{\r\n    if (!is_array($options)) {\r\n        $options = (array) $options);\r\n    } else {\r\n        if ((count($options) > 0) && (range(0, count($options) - 1) != array_keys($options))) {\r\n            $options = array($options);\r\n        }\r\n    }\r\n    $filter = $this->broker($name, $options);\r\n    return $this->attach($filter, $priority);\r\n}\r\n{code}\r\n\r\nI will draw up a couple of tests when I get home tonight.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaunb",
                        "name": "shaunb",
                        "displayName": "Shaun Bramley",
                        "active": true
                    },
                    "created": "2011-12-06T17:48:28.000+0000",
                    "updated": "2011-12-06T17:48:28.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49252",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Based on your reproduce case, you've got incorrect structure in the array you're passing to the constructor of FilterChain. Each filter needs to be listed as an associative array itself:\r\n{code}\r\n$f = new \\Zend\\Filter\\FilterChain(array(\r\n    'filters' => array(\r\n        array('name' => 'myFilter'),\r\n    ),\r\n));\r\n{code}\r\nWhen I do the above, I run into no issues whatsoever.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-12-08T22:30:37.000+0000",
                    "updated": "2011-12-08T22:30:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49253",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Cannot reproduce, and appears to be incorrect usage.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-12-08T22:31:47.000+0000",
                    "updated": "2011-12-08T22:31:47.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49254",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaunb",
                        "name": "shaunb",
                        "displayName": "Shaun Bramley",
                        "active": true
                    },
                    "body": "There's a typo within my original use case.  I feel like an idiot now.  :(\r\n\r\n{code}\r\nclass myFilter extends \\Zend\\Filter\\AbstractFilter {\r\n\tpublic function filter($text) {\r\n\t\treturn 'test';\r\n\t}\r\n}\r\nclass myFilterB extends \\Zend\\Filter\\AbstractFilter {\r\n\tpublic function __construct() {}\r\n\tpublic function filter($text) {\r\n\t\treturn 'filterB';\r\n\t}\r\n}\r\n\r\n$f = new \\Zend\\Filter\\FilterChain(array(\r\n\t\t'filters' => array(\r\n\t\t\tarray('name' => 'myFilterB'),\r\n\t\t\tarray('name' => 'myFilter'),\r\n\t\t),\r\n));\r\n{code}\r\n\r\nresults in the following stack trace:\r\n<b>Fatal error<\/b>:  Uncaught exception 'ReflectionException' with message 'Class myFilter does not have a constructor, so you cannot pass any constructor arguments' in \/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Loader\/PluginBroker.php:191\r\nStack trace:\r\n#0 \/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Loader\/PluginBroker.php(191): ReflectionClass-&gt;newInstanceArgs(Array)\r\n#1 \/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Loader\/PluginSpecBroker.php(179): Zend\\Loader\\PluginBroker-&gt;load('myFilter', Array)\r\n#2 \/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Filter\/FilterChain.php(143): Zend\\Loader\\PluginSpecBroker-&gt;load('myFilter', Array)\r\n#3 \/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Filter\/FilterChain.php(188): Zend\\Filter\\FilterChain-&gt;broker('myFilter', Array)\r\n#4 \/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Filter\/FilterChain.php(97): Zend\\Filter\\FilterChain-&gt;attachByName('myFilter', Array, 1000)\r\n#5 \/Users\/ in <b>\/Users\/shaunbramley\/Downloads\/ZendFramework-2.0.0dev3\/library\/Zend\/Loader\/PluginBroker.php<\/b> on line <b>191<\/b><br \/>\r\n\r\nIs my use case not adhering to the intended usage?\r\nI see no difference in the the files between master and beta3.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=shaunb",
                        "name": "shaunb",
                        "displayName": "Shaun Bramley",
                        "active": true
                    },
                    "created": "2011-12-08T23:34:11.000+0000",
                    "updated": "2011-12-08T23:34:11.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49517",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gadjo",
                        "name": "gadjo",
                        "displayName": "Jacek Karczmarczyk",
                        "active": true
                    },
                    "body": "Confirming this with the standard \"Int\" filter (master branch)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gadjo",
                        "name": "gadjo",
                        "displayName": "Jacek Karczmarczyk",
                        "active": true
                    },
                    "created": "2012-01-17T05:21:26.000+0000",
                    "updated": "2012-01-17T05:21:26.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50355",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darksmith",
                        "name": "darksmith",
                        "displayName": "John Smith",
                        "active": true
                    },
                    "body": "I'm able to reproduce this with the Int filter and the StripNewlines filter. The range function will generate an array with two empty value in it when the options variable is empty.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=darksmith",
                        "name": "darksmith",
                        "displayName": "John Smith",
                        "active": true
                    },
                    "created": "2012-04-24T00:05:36.000+0000",
                    "updated": "2012-04-24T00:05:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50423",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "Reproduced.\r\n\r\nI've got a PR in for this now: https:\/\/github.com\/zendframework\/zf2\/pull\/1128",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2012-05-02T15:08:33.000+0000",
                    "updated": "2012-05-02T15:08:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50424",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "PR #1128 merged to master, fixing the issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2012-05-02T15:21:13.000+0000",
                    "updated": "2012-05-02T15:21:13.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-113\/transitions"
}