{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-268",
    "key": "ZF2-268",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "AmazonS3 service broken"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-268\/votes",
                "votes": 2,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-07-19T11:50:59.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=special",
                "name": "special",
                "displayName": "Andrey",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-04-17T08:53:49.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-07-19T12:12:22.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "{code}\r\n$s = new \\Zend\\Service\\Amazon\\S3\\S3($amazonKey,$amazonSecret);\r\n$s->getBuckets();\r\n{code}\r\nresult:\r\nbq. Warning: Missing argument 2 for Zend\\Http\\Client::setAuth(), called in \/vendor\/ZendFramework\/library\/Zend\/Service\/Amazon\/S3\/S3.php on line 624 and defined in \/vendor\/ZendFramework\/library\/Zend\/Http\/Client.php on line 635\r\n\r\nAnd exception: \r\nbq. The username and the password cannot be empty\r\n\r\nBecause\r\n{code}\r\nZend\\Service\\Amazon\\S3\\S3\r\n624 $client->setAuth(false);\r\n\r\nZend\\Http\\Client\r\n635 public function setAuth($user, $password, $type = self::AUTH_BASIC)\r\n{code}\r\n\r\nPlease check this service."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/1",
                "name": "Blocker"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-268\/watchers",
                "isWatching": false,
                "watchCount": 4
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "amazon"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                "name": "dgasparri",
                "displayName": "Duccio Gasparri",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/attachment\/15024",
                    "filename": "http-client-set-auth.patch",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simonliu",
                        "name": "simonliu",
                        "displayName": "simon liu",
                        "active": true
                    },
                    "created": "2012-04-18T05:13:48.000+0000",
                    "size": 2510,
                    "mimeType": "text\/x-patch",
                    "content": "http:\/\/fw02.zend.com\/issues\/secure\/attachment\/15024\/http-client-set-auth.patch"
                }
            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10528",
                    "id": 10528,
                    "name": "Zend\\Cloud",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50318",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simonliu",
                        "name": "simonliu",
                        "displayName": "simon liu",
                        "active": true
                    },
                    "body": "$client->setAuth(false); means disable http auth, but Zend\\Http\\Client does not support it yet, I create a patch to support it.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simonliu",
                        "name": "simonliu",
                        "displayName": "simon liu",
                        "active": true
                    },
                    "created": "2012-04-18T05:12:39.000+0000",
                    "updated": "2012-04-18T05:12:39.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50319",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simonliu",
                        "name": "simonliu",
                        "displayName": "simon liu",
                        "active": true
                    },
                    "body": "support setAuth(false)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=simonliu",
                        "name": "simonliu",
                        "displayName": "simon liu",
                        "active": true
                    },
                    "created": "2012-04-18T05:13:49.000+0000",
                    "updated": "2012-04-18T05:13:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50320",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=special",
                        "name": "special",
                        "displayName": "Andrey",
                        "active": true
                    },
                    "body": "Thank you, Simon Liu!\r\nBut apparently, this class Zend\\Service\\Amazon\\S3 has not yet upgraded to ZF2.\r\n\r\nBecause the line 651\r\n{code}\r\n651 $response = $client->request($method);\r\n{code}\r\nBut new class Zend\\Http\\Client don't have method request(), although the old class Zend_Http_Client have request() method.\r\n\r\nCan you finish this S3 class? Or when it is planned to be done?\r\n\r\nThank you!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=special",
                        "name": "special",
                        "displayName": "Andrey",
                        "active": true
                    },
                    "created": "2012-04-18T06:32:37.000+0000",
                    "updated": "2012-04-18T06:32:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50321",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zimuel",
                        "name": "zimuel",
                        "displayName": "Enrico Zimuel",
                        "active": true
                    },
                    "body": "We have to refactor the Zend\\Service\\Amazon component with the new Zend\\Http\\Client. We will do that in the next beta (not beta4).",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=zimuel",
                        "name": "zimuel",
                        "displayName": "Enrico Zimuel",
                        "active": true
                    },
                    "created": "2012-04-18T06:47:56.000+0000",
                    "updated": "2012-04-18T06:47:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50322",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=special",
                        "name": "special",
                        "displayName": "Andrey",
                        "active": true
                    },
                    "body": "Enrico, thanks for the info!",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=special",
                        "name": "special",
                        "displayName": "Andrey",
                        "active": true
                    },
                    "created": "2012-04-18T06:56:05.000+0000",
                    "updated": "2012-04-18T06:56:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50415",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=outeredge",
                        "name": "outeredge",
                        "displayName": "David Windell",
                        "active": true
                    },
                    "body": "Can we have confirmation this will be fixed in beta4, this prevents usage of the S3 component and shouldn't be included if not working at all.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=outeredge",
                        "name": "outeredge",
                        "displayName": "David Windell",
                        "active": true
                    },
                    "created": "2012-05-01T10:38:33.000+0000",
                    "updated": "2012-05-01T10:38:33.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50539",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "body": "This line appears to be useless because two rows above in S3::_makeRequest() there is $client->resetParameters():\r\n\r\n622        $client->resetParameters();\r\n623        $client->setUri($endpoint);\r\n624        $client->setAuth(false);\r\n\r\nresetParameters already resets the Auth. ",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "created": "2012-05-09T10:21:34.000+0000",
                    "updated": "2012-05-09T10:21:34.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50540",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "body": "Closely related to this bug, on the next line there's\r\n\r\n\r\n        \/\/ Work around buglet in HTTP client - it doesn't clean headers\r\n        \/\/ Remove when ZHC is fixed\r\n        $client->setHeaders(array('Content-MD5'              => null,\r\n                                  'Expect'                   => null,\r\n                                  'Range'                    => null,\r\n                                  'x-amz-acl'                => null,\r\n                                  'x-amz-copy-source'        => null,\r\n                                  'x-amz-metadata-directive' => null));\r\n\r\n        $client->setHeaders($headers);\r\n\r\n\r\nThe first setHeaders raises an exception. setHeader now replaces the old headers, so it is safe to take away the first setHeader and just leave the $client->setHeaders($headers);",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "created": "2012-05-09T10:40:59.000+0000",
                    "updated": "2012-05-09T10:40:59.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50541",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "If you think that you can fix this submit a patch to Github (https:\/\/github.com\/zendframework\/zf2\/)\r\n\r\nAlso could be very interesting provide a unit test for this.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-05-09T10:47:40.000+0000",
                    "updated": "2012-05-09T10:47:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50542",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "body": "Sorry, but one small bug after another, I believe I fixed it. \r\n\r\nhttps:\/\/github.com\/zendframework\/zf2\/pull\/1173",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "created": "2012-05-09T10:49:06.000+0000",
                    "updated": "2012-05-09T10:49:06.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50544",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "body": "I've never written a unit test for a http-based service. To your knowledge, is there other examples that could be used as a starting point?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "created": "2012-05-09T10:58:56.000+0000",
                    "updated": "2012-05-09T10:58:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50545",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "Any of this https:\/\/github.com\/zendframework\/zf2\/tree\/master\/tests\/Zend\/Service\/Amazon can help you.\r\n\r\nFor example, if you want add the test to https:\/\/github.com\/zendframework\/zf2\/blob\/master\/tests\/Zend\/Service\/Amazon\/S3\/StreamTest.php\r\n\r\nthen create a function like this 'public function testXXXXX()' and put in the body something like this:\r\n\r\n$s3 = new S3();\r\n...\r\n\r\n$actual = s3->getXXX();\r\n$expects = 'Foo';\r\n\r\n$this->assertEqual($expects, $actual);\r\n\r\n\r\nAs you can see the first part is test the function, then you storage the result in a var and finally you test if the result is the same of you expects.\r\n\r\n\r\nThis can help you http:\/\/www.phpunit.de\/manual\/3.6\/en\/writing-tests-for-phpunit.html",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-05-09T11:07:08.000+0000",
                    "updated": "2012-05-09T11:07:36.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50576",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "body": "I tested it for a couple of days and put the relevant changes to pull #1194 https:\/\/github.com\/zendframework\/zf2\/pull\/1194\r\n\r\nThank you Maks for the info on unit test. I know more or less how to write a unit test, but I don't know what's the standard for writing a unit test based on an external service: unless you create a fake in-out stream (is it possible? isn't it crazy?), or anyway a test-repo on S3 or a public sandbox by the service owner, results will be always variable depending on the status of the external service.\r\n\r\nHowever, it appears that there's already a neatly written test for the S3 service https:\/\/github.com\/zendframework\/zf2\/blob\/master\/tests\/Zend\/Service\/Amazon\/S3\/OnlineTest.php . At a first glance it should work, but I haven't run it yet.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dgasparri",
                        "name": "dgasparri",
                        "displayName": "Duccio Gasparri",
                        "active": true
                    },
                    "created": "2012-05-10T16:31:44.000+0000",
                    "updated": "2012-05-10T16:31:44.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50577",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "To avoid unexpected responses from a external service you should create a Mockup (http:\/\/www.phpunit.de\/manual\/current\/en\/test-doubles.html)\r\nIs a little more complex to learn how to use but I tell you the idea behind this.\r\n\r\nI will guess the following scenario (I don't know the internals of S3)\r\nYou request an authorization and S3 transform your request in a Http response \r\n\r\nUser\/Pass <=> S3::auth($parameters) <=> Zend\\Http\\Client::send($request)\r\n\r\nThe goal here is that when Http\\Client receive $request you already know if S3::auth() do his works correctly.\r\n\r\nThen we want convert Http\\Client in a mockup object and then you setup something as following (pseudocode):\r\n\r\n$mock = createMockup(Zend\\Http\\Client)\r\n$mock -> method(send)\r\n$mock -> expects($request = http:\/\/amazon\/?u=User&p=Pass)\r\n$mock -> return(the expected Http result to use inside of S3)\r\n\r\nNow we need inject our mockup inside of S3 class. We need something like S3::setHttpClient($mock)\r\n\r\nThen when you execute the test you can be sure about the functionality.\r\n\r\nOf course we are talking about Unit Tests where the scope is limited to test the code of the function. Other tests are Functional Tests where we don't use mockups and we do direct connections to AWS servers (OnlineTests.php)\r\n\r\nYou can enter to the IRC if you need more help. #zftalk.2 in freenode.net",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-05-10T17:57:20.000+0000",
                    "updated": "2012-05-10T17:58:07.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50592",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "Fixed with https:\/\/github.com\/zendframework\/zf2\/pull\/1194",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-05-11T13:10:03.000+0000",
                    "updated": "2012-05-11T13:10:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50596",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "I wrote a small test to verify the responses for getBuckets() this test not verify the auth issue described above but could give you an example about how works the mockups.\r\n\r\nhttps:\/\/github.com\/zendframework\/zf2\/pull\/1203",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-05-11T14:47:30.000+0000",
                    "updated": "2012-05-11T14:47:30.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51366",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=boristm",
                        "name": "boristm",
                        "displayName": "Boris",
                        "active": true
                    },
                    "body": "After upgrading from beta4 to beta5 the S3 service stopped working: all the operations (for example, getBuckets) leads to an error in the response of the service: \u2018The request signature we calculated does not match the signature you provided. Check your key and signing method.\u2019\r\n\r\nIn beta4 it works.\r\n\r\nI\u2019ve checked the difference between beta4 and beta5 and found the calculating of signature was changed in addSignature method of S3 class.\r\n\r\nIn beta4 it was:\r\n{code}\r\n$signature = base64_encode(Hmac::compute($this->_getSecretKey(), 'sha1', utf8_encode($sig_str), Hmac::OUTPUT_BINARY));\r\n{code}\r\n\r\nIn beta5 it is:\r\n{code}\r\n$signature = base64_encode(Hmac::compute($this->_getSecretKey(), 'sha1', utf8_encode($sig_str), true));\r\n{code}\r\n\r\nCould you please explain why the last argument of Hmac::compute was changed in this way?\r\nOr if it was made by mistake could you roll back this?\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=boristm",
                        "name": "boristm",
                        "displayName": "Boris",
                        "active": true
                    },
                    "created": "2012-07-17T11:18:00.000+0000",
                    "updated": "2012-07-17T11:18:00.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51379",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "Hi [~boristm] could you open your issue in a new one?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-07-19T11:50:31.000+0000",
                    "updated": "2012-07-19T11:50:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51381",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=boristm",
                        "name": "boristm",
                        "displayName": "Boris",
                        "active": true
                    },
                    "body": "here is:\r\nhttp:\/\/framework.zend.com\/issues\/browse\/ZF2-409",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=boristm",
                        "name": "boristm",
                        "displayName": "Boris",
                        "active": true
                    },
                    "created": "2012-07-19T12:12:22.000+0000",
                    "updated": "2012-07-19T12:12:22.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-268\/transitions"
}