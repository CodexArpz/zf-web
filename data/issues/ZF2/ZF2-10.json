{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-10",
    "key": "ZF2-10",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "iterating over a Zend_Config"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-10\/votes",
                "votes": 6,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/8",
                "name": "Issue Moved"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-10-08T20:15:38.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=meugen",
                "name": "meugen",
                "displayName": "meugen",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2009-03-23T11:57:59.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-10-08T20:15:38.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "There are two xml-files.\n\n{code:xml|title=config1.xml}\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file id=\"index\" location=\"index.html\" \/>\n        <file id=\"main_css\" location=\"css\/main.css\" \/>\n        <file id=\"main_js\" location=\"js\/main.js\" \/>\n    <\/files>\n<\/root>\n{code}\n\nand\n\n{code:xml|title=config2.xml}\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file id=\"index\" location=\"index.html\" \/>\n    <\/files>\n<\/root>\n{code}\n\nand the sample code:\n\n{code:html|title=index.php}\n<?php\n    require_once 'Zend\/Config.php';\n    require_once 'Zend\/Config\/Xml.php';\n    \n    $config = new Zend_config_xml('\/path\/to\/config.xml');\n    foreach ($config->files->file as $value)\n        echo 'id: '.$value->id.'<br \/>location: '.\n            htmlspecialchars($value->location).'<hr \/>';\n?>\n{code}\n\n\t\nIf the {{\/path\/to\/config.xml}} to substitute {{config1.xml}}, then everything works correctly. But if you substitute {{config2.xml}} error\n\n{code}\nNotice: Trying to get property of non-object in D:\\www\\index.php on line 7\n{code}\n\nHow can I iterate all items {{file}}, if their number is not known in advance (one or more than one)?"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-10\/watchers",
                "isWatching": false,
                "watchCount": 8
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf-crteam-padraic",
                "zf-crteam-priority"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                "name": "dasprid",
                "displayName": "Ben Scholzen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [
                {
                    "issueKey": "ZF-7772",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7772",
                    "type": {
                        "name": "Related",
                        "direction": "INBOUND",
                        "description": "is related to"
                    }
                },
                {
                    "issueKey": "ZF-7010",
                    "issue": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF-7010",
                    "type": {
                        "name": "Dependency",
                        "direction": "INBOUND",
                        "description": "is dependecy of"
                    }
                }
            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10530",
                    "id": 10530,
                    "name": "Zend\\Config",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29977",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Can't fix at Zend_Config level. Workaround is to use UTF8 files without a BOM marker.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-04-05T12:04:41.000+0000",
                    "updated": "2009-04-05T12:04:41.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29979",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "(Closed wrong issue!)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-04-05T12:12:32.000+0000",
                    "updated": "2009-04-05T12:12:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/29980",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "I'm not sure there's any way to resolve this issue due to the other than creating a dummy key to force an array:\n{code}\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file id=\"index\" location=\"index.html\" \/>\n        <file \/>\n    <\/files>\n<\/root>\n{code}\n\nmight work, but don't forget to test for id being null.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-04-05T12:19:40.000+0000",
                    "updated": "2009-04-05T12:19:40.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34203",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tdm",
                        "name": "tdm",
                        "displayName": "Patrick van Dissel",
                        "active": true
                    },
                    "body": "This issue also exists when using the toArray() method of Zend_Config.\nThe problem is that you just want the array to ALWAYS have the same layout.\nConfig files tent to grow and be extended, just like XML files.\n\nIn my opinion the Zend_Config API should work the same as the of SimpleXml, here two extended examples and their output:\nh2. Using SimpleXML\n{code:title=Code}\n<?php\n\/\/ Files with single file element\n$xmlString1 = <<<XML\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file>\n            <id>index<\/id>\n            <location>index.html<\/location>\n        <\/file>\n    <\/files>\n<\/root>\nXML;\n\n\/\/ Files with multiple file elements\n$xmlString2 = <<<XML\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file>\n            <id>index<\/id>\n            <location>index.html<\/location>\n        <\/file>\n        <file>\n            <id>index2<\/id>\n            <location>index2.html<\/location>\n        <\/file>\n    <\/files>\n<\/root>\nXML;\n\necho \"Files with single file element, looping files->file:\\n\";\n$xml1 = new SimpleXMLElement($xmlString1);\nforeach ($xml1->files->file as $file) {\n    var_dump($file);\n    printf(\"%s: %s\\n\", 'id', $file->id);\n    printf(\"%s: %s\\n\", 'localtion', $file->location);\n}\necho \"Files with single file element, looping files->file->id:\\n\";\nforeach ($xml1->files->file->id as $id) {\n    var_dump($id);\n    printf(\"%s: %s\\n\", 'id', $id);\n}\n\necho \"Files with multiple file elements, looping files->file:\\n\";\n$xml2 = new SimpleXMLElement($xmlString2);\nforeach ($xml2->files->file as $file) {\n    var_dump($file);\n    printf(\"%s: %s\\n\", 'id', $file->id);\n    printf(\"%s: %s\\n\", 'localtion', $file->location);\n}\necho \"Files with multiple file elements, looping files->file->id:\\n\";\nforeach ($xml2->files->file->id as $id) {\n    var_dump($id);\n    printf(\"%s: %s\\n\", 'id', $id);\n}\n{code}\n{noformat:title=Output of code}\nFiles with single file element, looping files->file:\nobject(SimpleXMLElement)#3 (2) {\n  [\"id\"]=>\n  string(5) \"index\"\n  [\"location\"]=>\n  string(10) \"index.html\"\n}\nid: index\nlocaltion: index.html\nFiles with single file element, looping files->file->id:\nobject(SimpleXMLElement)#2 (1) {\n  [0]=>\n  string(5) \"index\"\n}\nid: index\nFiles with multiple file elements, looping files->file:\nobject(SimpleXMLElement)#6 (2) {\n  [\"id\"]=>\n  string(5) \"index\"\n  [\"location\"]=>\n  string(10) \"index.html\"\n}\nid: index\nlocaltion: index.html\nobject(SimpleXMLElement)#3 (2) {\n  [\"id\"]=>\n  string(6) \"index2\"\n  [\"location\"]=>\n  string(11) \"index2.html\"\n}\nid: index2\nlocaltion: index2.html\nFiles with multiple file elements, looping files->file->id:\nobject(SimpleXMLElement)#4 (1) {\n  [0]=>\n  string(5) \"index\"\n}\nid: index\n{noformat}\n\nh2. Using Zend_Config_Xml\n_possibly a global Zend_Config or other Zend_Config_* types issue, I have not tested that_\n{code:title=Code}\n<?php\nset_include_path(\n    get_include_path()\n    . PATH_SEPARATOR . 'library\/'\n);\n\nrequire_once 'Zend\/Loader\/Autoloader.php';\nZend_Loader_Autoloader::getInstance()->setFallbackAutoloader(true);\n\n\/\/ Files with single file element\n$xmlString1 = <<<XML\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file>\n            <id>index<\/id>\n            <location>index.html<\/location>\n        <\/file>\n    <\/files>\n<\/root>\nXML;\n\n\/\/ Files with multiple file elements\n$xmlString2 = <<<XML\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>\n    <files>\n        <file>\n            <id>index<\/id>\n            <location>index.html<\/location>\n        <\/file>\n        <file>\n            <id>index2<\/id>\n            <location>index2.html<\/location>\n        <\/file>\n    <\/files>\n<\/root>\nXML;\n\necho \"Files with single file element, looping files->file:\\n\";\n$xml1 = new Zend_Config_Xml($xmlString1);\nforeach ($xml1->files->file as $file) {\n    var_dump($file);\n    printf(\"%s: %s\\n\", 'id', $file->id);\n    printf(\"%s: %s\\n\", 'localtion', $file->location);\n}\necho \"Files with single file element, looping files->file->id:\\n\";\nforeach ($xml1->files->file->id as $id) {\n    var_dump($id);\n    printf(\"%s: %s\\n\", 'id', $id);\n}\n\necho \"Files with multiple file elements, looping files->file:\\n\";\n$xml2 = new Zend_Config_Xml($xmlString2);\nforeach ($xml2->files->file as $file) {\n    var_dump($file);\n    printf(\"%s: %s\\n\", 'id', $file->id);\n    printf(\"%s: %s\\n\", 'localtion', $file->location);\n}\necho \"Files with multiple file elements, looping files->file->id:\\n\";\nforeach ($xml2->files->file->id as $id) {\n    var_dump($id);\n    printf(\"%s: %s\\n\", 'id', $id);\n}\n{code}\n{noformat:title=Output of code}\nFiles with single file element, looping files->file:\nstring(5) \"index\"\n<br \/>\n<b>Notice<\/b>:  Trying to get property of non-object in <b>D:\\www\\htdocs\\dev\\config\\config.php<\/b> on line <b>44<\/b><br \/>\nid: \n<br \/>\n<b>Notice<\/b>:  Trying to get property of non-object in <b>D:\\www\\htdocs\\dev\\config\\config.php<\/b> on line <b>45<\/b><br \/>\n\nlocaltion: \nstring(10) \"index.html\"\n<br \/>\n<b>Notice<\/b>:  Trying to get property of non-object in <b>D:\\www\\htdocs\\dev\\config\\config.php<\/b> on line <b>44<\/b><br \/>\nid: \n<br \/>\n<b>Notice<\/b>:  Trying to get property of non-object in <b>D:\\www\\htdocs\\dev\\config\\config.php<\/b> on line <b>45<\/b><br \/>\n\nlocaltion: \nFiles with single file element, looping files->file->id:\n<br \/>\n<b>Warning<\/b>:  Invalid argument supplied for foreach() in <b>D:\\www\\htdocs\\dev\\config\\config.php<\/b> on line <b>48<\/b><br \/>\nFiles with multiple file elements, looping files->file:\nobject(Zend_Config)#9 (8) {\n  [\"_allowModifications:protected\"]=>\n  bool(false)\n  [\"_index:protected\"]=>\n  int(0)\n  [\"_count:protected\"]=>\n  int(2)\n  [\"_data:protected\"]=>\n  array(2) {\n    [\"id\"]=>\n    string(5) \"index\"\n    [\"location\"]=>\n    string(10) \"index.html\"\n  }\n  [\"_skipNextIteration:protected\"]=>\n  NULL\n  [\"_loadedSection:protected\"]=>\n  NULL\n  [\"_extends:protected\"]=>\n  array(0) {\n  }\n  [\"_loadFileErrorStr:protected\"]=>\n  NULL\n}\nid: index\nlocaltion: index.html\nobject(Zend_Config)#11 (8) {\n  [\"_allowModifications:protected\"]=>\n  bool(false)\n  [\"_index:protected\"]=>\n  int(0)\n  [\"_count:protected\"]=>\n  int(2)\n  [\"_data:protected\"]=>\n  array(2) {\n    [\"id\"]=>\n    string(6) \"index2\"\n    [\"location\"]=>\n    string(11) \"index2.html\"\n  }\n  [\"_skipNextIteration:protected\"]=>\n  NULL\n  [\"_loadedSection:protected\"]=>\n  NULL\n  [\"_extends:protected\"]=>\n  array(0) {\n  }\n  [\"_loadFileErrorStr:protected\"]=>\n  NULL\n}\nid: index2\nlocaltion: index2.html\nFiles with multiple file elements, looping files->file->id:\n<br \/>\n<b>Warning<\/b>:  Invalid argument supplied for foreach() in <b>D:\\www\\htdocs\\dev\\config\\config.php<\/b> on line <b>61<\/b><br \/>\n{noformat}\n\n{color:red}note:{color} Output rendered with PHP in error_reporting mode = E_ALL | E_STRICT",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=tdm",
                        "name": "tdm",
                        "displayName": "Patrick van Dissel",
                        "active": true
                    },
                    "created": "2009-09-03T00:56:22.000+0000",
                    "updated": "2009-09-03T00:56:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34247",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "I'm open to ideas on how to solve this without breaking backwards compatibility.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2009-09-04T09:31:17.000+0000",
                    "updated": "2009-09-04T09:31:17.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/34248",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "You could just do:\n\n{code}\n$files = (isset($files->file[0]) ? $files->file : array($files->file));\n{code}\n\nAnd then just work with the $files variable as array. That works pretty well.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2009-09-04T10:48:51.000+0000",
                    "updated": "2009-09-04T10:48:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46076",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wimg",
                        "name": "wimg",
                        "displayName": "Wim Godden",
                        "active": true
                    },
                    "body": "Although this is fixable, fixing it will always break backwards compatibility.\r\nWhen a developer knows there's only 1 item, code such as this will be broken :\r\n{code}\r\necho $config->files->file['id'];\r\n{\/code}\r\n\r\nBecause it will in fact have to become :\r\n{code}\r\n$file = $config->files->file->toArray();\r\necho $file[0]['id'];\r\n{\/code}\r\n\r\nI would advise against modifying this for ZF 1.x - not sure how this will be handled in ZF 2, but introducing this backwards incompatibility is not a good idea in any case...\r\n\r\nThe only other option is to modify just the magic\/fluent notation, but that will make things complicated and will cause inconsistency between fluent notation and array notation, which should be avoided.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=wimg",
                        "name": "wimg",
                        "displayName": "Wim Godden",
                        "active": true
                    },
                    "created": "2011-04-28T14:25:29.000+0000",
                    "updated": "2011-04-28T14:25:29.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46077",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "One idea I have had is to introduce a children() method that always returns an iterator\/array regardless of whether there is is one or many children:\r\n\r\n{code}\r\n$files = $config->files->children();\r\nforeach ($files as $file) {\r\n    echo $file->id;\r\n}\r\n{code}\r\n\r\n\r\nThoughts on this approach?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2011-04-28T14:47:51.000+0000",
                    "updated": "2011-04-28T14:47:51.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/46826",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "body": "Moved to ZF2 as likely to involve a BC break.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=rob",
                        "name": "rob",
                        "displayName": "Rob Allen",
                        "active": true
                    },
                    "created": "2011-05-27T02:30:37.000+0000",
                    "updated": "2011-05-27T02:30:37.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51399",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=evan.pro",
                        "name": "evan.pro",
                        "displayName": "Evan Coury",
                        "active": true
                    },
                    "body": "Approaching RC1, we need to decide if anything is going to be done about this.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=evan.pro",
                        "name": "evan.pro",
                        "displayName": "Evan Coury",
                        "active": true
                    },
                    "created": "2012-07-21T00:46:22.000+0000",
                    "updated": "2012-07-21T00:46:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/52108",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "This issue has been closed on Jira and moved to GitHub for issue tracking.  To continue following the resolution of this issues, please visit: https:\/\/github.com\/zendframework\/zf2\/issues\/2443",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2012-10-08T20:15:38.000+0000",
                    "updated": "2012-10-08T20:15:38.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-10\/transitions"
}