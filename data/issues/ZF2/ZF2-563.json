{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-563",
    "key": "ZF2-563",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend\\Log\\Write\\Db::mapEventIntoColumn creates non-existing database table column due to PHP type juggling"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-563\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/8",
                "name": "Issue Moved"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-10-08T20:12:25.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                "name": "martin_p",
                "displayName": "Martin_P",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-09-15T19:05:59.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-10-08T20:12:25.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Zend\\Log\\Writer\\Db::mapEventIntoColumn creates new non-existing database table column due to PHP type juggling:\r\n{code:title=Zend\\\\Log\\\\Writer\\\\Db::mapEventIntoColumn}\r\nprotected function mapEventIntoColumn(array $event, array $columnMap = null)\r\n{\r\n    if (empty($event)) {\r\n        return array();\r\n    }\r\n\r\n    $data = array();\r\n    foreach ($event as $name => $value) {\r\n        if (is_array($value)) {\r\n            foreach ($value as $key => $subvalue) {\r\n                if (isset($columnMap[$name][$key])) { \/\/ bad check!\r\n                    $data[$columnMap[$name][$key]] = $subvalue;\r\n                }\r\n            }\r\n        } elseif (isset($columnMap[$name])) {\r\n            $data[$columnMap[$name]] = $value;\r\n        }\r\n    }\r\n    return $data;\r\n}{code}\r\nThe isset($columnMap[$name][$key]) is not good, because a non-existing string value for $key enables PHP type juggling and thus making it 0. This occurs when $value is an array and $columnMap['extra'] contains a string.\r\n\r\nA small example to make it more clear what is happening here:\r\n{code}\r\n<?php\r\n$columnMap = array( 'extra' => 'extra' );\r\n\r\nvar_dump( isset( $columnMap['extra']['something'] ) ); \/\/ Output: boolean true\r\n\r\nvar_dump( $columnMap['extra']['something'] ); \/\/ Output: string 'e' (length=1){code}\r\nAlso it is impossible to store an array in a database table column without converting it to a string, so that *must* be done before the data can be used in a database query."
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-563\/watchers",
                "isWatching": false,
                "watchCount": 1
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/6",
                "name": "Closed"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zend\\log",
                "zend\\log\\writer\\db"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/version\/11184",
                    "id": 11184,
                    "description": "First stable release",
                    "name": "2.0.0",
                    "overdue": true,
                    "userReleaseDate": "06\/Sep\/12",
                    "archived": false,
                    "releaseDate": "2012-09-06",
                    "released": false
                }
            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10551",
                    "id": 10551,
                    "name": "Zend\\Log",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51895",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "body": "Typo",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "created": "2012-09-15T19:11:18.000+0000",
                    "updated": "2012-09-15T19:11:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51896",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "body": "Can you add your use case of extra as a string? The Logger can only send an array as extra.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=intiilapa",
                        "name": "intiilapa",
                        "displayName": "Beno\u00eet Durand",
                        "active": true
                    },
                    "created": "2012-09-15T20:05:25.000+0000",
                    "updated": "2012-09-15T20:05:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51897",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "body": "$extra is an array, that is right, but I am referring to $colomnMap['extra']. That is a string.\r\n\r\nWhen $extra is an array, let's say:\r\n{code}array( 'line' => 20, 'trace' => 'lots of text' ){code}\r\nThe script now checks if $columnMap['extra']['line'] exists with isset() and this always returns true. Because of type juggling the string 'line' is converted to 0 (see my example). This way you get the first letter of 'extra', the 'e' and thus a non-existing database table column.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "created": "2012-09-15T20:23:10.000+0000",
                    "updated": "2012-09-15T20:23:10.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51898",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "body": "When Zend\\Logger\\Logger is used as an exception handler, in Zend\\Logger\\Logger::registerExceptionHandler() the following happens:\r\n{code:title=Zend\\\\Logger\\\\Logger::registerExceptionHandler}\r\nset_exception_handler(function ($exception) use ($logger) {\r\n    $extra = array(\r\n        'file'  => $exception->getFile(),\r\n        'line'  => $exception->getLine(),\r\n        'trace' => $exception->getTrace()\r\n    );\r\n    if (isset($exception->xdebug_message)) {\r\n        $extra['xdebug'] = $exception->xdebug_message;\r\n    }\r\n    $logger->log(Logger::ERR, $exception->getMessage(), $extra);\r\n});{code}\r\nSo $extra is now an array with data from the exception. When I throw an exception the type juggling happens in the above mentioned methods.\r\n\r\nUse case:\r\n{code:title=modules\/Bug\/Module.php}\r\n<?php\r\nnamespace Bug;\r\n\r\nuse Zend\\Mvc\\MvcEvent as MvcEvent;\r\n\r\nclass Module\r\n{\r\n    \/**\r\n     * On bootstrap event\r\n     *\r\n     * @access public\r\n     * @param MvcEvent $event\r\n     * @return void\r\n     *\/\r\n    public function onBootstrap( MvcEvent $event )\r\n    {\r\n        $application = $event->getApplication();\r\n        $sm = $application->getServiceManager();\r\n\r\n        $dbAdapter = $sm->get( 'dbAdapter' );\r\n        $columnMapping = array(\r\n            'extra' => 'extra'\r\n        );\r\n        $writer = new \\Zend\\Log\\Writer\\Db( $dbAdapter, 'bug', $columnMapping );\r\n\r\n        $logger = new \\Zend\\Log\\Logger();\r\n        $logger->addWriter( $writer );\r\n        $logger->registerExceptionHandler( $logger );\r\n\r\n        throw new \\Exception( 'My message' );\r\n        return;\r\n    }\r\n}{code}\r\n\r\n*EDIT:*\r\nChanged database table name, namespace and added create table definition for easier reproducing:\r\n{code:title=Table: bug}\r\nCREATE TABLE `bug` (\r\n  `extra` text\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8{code}\r\n*EDIT 2:*\r\nSorry, offcourse the error might be useful too:\r\n{quote}Fatal error: Uncaught exception 'PDOException' with message 'SQLSTATE[42S22]: Column not found: 1054 Unknown column 'e' in 'field list'' in some\\folder\\vendor\\Zend\\library\\Zend\\Db\\Adapter\\Driver\\Pdo\\Statement.php on line 220{quote}\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "created": "2012-09-15T21:04:45.000+0000",
                    "updated": "2012-09-15T21:22:09.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51899",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "body": "Looking at Zend\\Log\\Writer\\Db::eventIntoColumn it seems the intended usage is this:\r\n{code:title=Zend\\\\Log\\\\Writer\\\\Db::mapEventIntoColumn (line 171)}\r\n-                        $data[$columnMap[$name][$key]] = $subvalue;\r\n+                        $data[$columnMap[$name] . $this->separator . $key] = $subvalue;{code}\r\nThis still does not make any sense, because this creates random database table columns depending on the array keys of the extra array (see issue [#ZF2-562|http:\/\/framework.zend.com\/issues\/browse\/ZF2-562]). \r\n\r\nWhen you add the needed columns for logging the exception:\r\n{code:title=Table: bug}\r\nCreate Table: CREATE TABLE `bug` (\r\n  `extra` text,\r\n  `extra_file` text,\r\n  `extra_line` text,\r\n  `extra_trace` text,\r\n  `extra_xdebug` text\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8{code}\r\nyou also still get a notice and an unintended array to string conversion and thus data loss:\r\n{quote}Notice: Array to string conversion in some\\folder\\vendor\\Zend\\library\\Zend\\Db\\Adapter\\Driver\\Pdo\\Statement.php on line 258{quote}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=martin_p",
                        "name": "martin_p",
                        "displayName": "Martin_P",
                        "active": true
                    },
                    "created": "2012-09-15T22:44:01.000+0000",
                    "updated": "2012-09-15T22:44:01.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51977",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "This issue has been closed on Jira and moved to GitHub for issue tracking.  To continue following the resolution of this issues, please visit: https:\/\/github.com\/zendframework\/zf2\/issues\/2589",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2012-10-08T20:12:25.000+0000",
                    "updated": "2012-10-08T20:12:25.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-563\/transitions"
}