{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-149",
    "key": "ZF2-149",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Route match does not provide matched parameters (e.g. in segment)"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-149\/votes",
                "votes": 3,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-03-20T15:29:20.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=yonman",
                "name": "yonman",
                "displayName": "Yonni Mendes",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-01-24T19:31:08.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-03-20T15:37:56.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Steps to reproduce\r\n* Create a new SkeletonApplication\r\n* Add a new route to Application module:\r\n{code}         'test' => array(\r\n            'type' => 'Zend\\Mvc\\Router\\Http\\Segment',\r\n            'options' => array(\r\n                'route'    => '\/test[\/:id]',\r\n                'defaults' => array(\r\n                    'controller' => 'index',\r\n                    'action'     => 'index',\r\n                \t'id'\t\t=> 0\r\n                ),\r\n            ),\r\n        ),{code}\r\n* Modify IndexController::indexAction to retrieve the parameter \"id\"\r\n{code}$id = $this->getRequest()->query()->get('id');{code}\r\n* echo $id and exit\r\n* Create a new request to http:\/\/<host>\/test\/1\r\n\r\nExpected result:\r\nThe number 1 should be displayed\r\n\r\nActual result:\r\nNothing is displayed\r\n\r\nAdditional information:\r\nIt looks like Zend\\Mvc\\Router\\SimpleRouteStack and inheritors ignore the accumulated request assembledParams in a matched Route\\Segment.\r\n\r\nProposed solution:\r\nAdd\r\n{code}$request->setQuery(new \\Zend\\Stdlib\\Parameters($match->getParams()));{code}\r\nto Zend\\Mvc\\Router\\SimpleRouteStack line 267 (in match() method, after the foreach loop ends)\r\nNote that this same solution may apply to Zend\\Mvc\\Router\\TreeRouteStack for applications with a baseUrl"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/3",
                "name": "Major"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-149\/watchers",
                "isWatching": false,
                "watchCount": 3
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "Request",
                "Routing",
                "parameters"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                "name": "dasprid",
                "displayName": "Ben Scholzen",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [

            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49657",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gatorv",
                        "name": "gatorv",
                        "displayName": "Christopher Valderrama",
                        "active": true
                    },
                    "body": "Althought it would be a simple way to extract them, you can extract them right now if your controller implements the InjectApplicationEvent, then you can retrieve the MVC Event, and extract the route matches:\r\n{code}\r\n$Match = $this->getEvent()->getRouteMatch();\r\n$Id = $Match->getParam('id', 0);\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=gatorv",
                        "name": "gatorv",
                        "displayName": "Christopher Valderrama",
                        "active": true
                    },
                    "created": "2012-02-16T19:38:54.000+0000",
                    "updated": "2012-02-16T19:39:15.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50082",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mberchtold",
                        "name": "mberchtold",
                        "displayName": "Mat Berchtold",
                        "active": true
                    },
                    "body": "The proposed solution breaks other functionality: existing params in the query are lost. The following change merges both params:\r\n$request->setQuery(new \\Zend\\Stdlib\\Parameters(array_merge($match->getParams(), $request->query()->toArray())));\r\n\r\nIt would be great if somebody from zf could comment on this.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mberchtold",
                        "name": "mberchtold",
                        "displayName": "Mat Berchtold",
                        "active": true
                    },
                    "created": "2012-03-20T15:19:08.000+0000",
                    "updated": "2012-03-20T15:19:08.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50083",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "body": "Route parameters are *not* query parameters, so this issue is basically invalid. What is correct is that we had Request::getParam() before, which combined all parameter sources (user params, get, post, cookie, etc.). This may return at a later point, but is not related to this issue. So right now you would do:\r\n\r\n{code}\r\n$this->getRequest()->getRouteMatch()->getParam('id');\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=dasprid",
                        "name": "dasprid",
                        "displayName": "Ben Scholzen",
                        "active": true
                    },
                    "created": "2012-03-20T15:29:20.000+0000",
                    "updated": "2012-03-20T15:33:18.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50084",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mberchtold",
                        "name": "mberchtold",
                        "displayName": "Mat Berchtold",
                        "active": true
                    },
                    "body": "What you probably meant is:\r\n{code}\r\n$this->getEvent()->getRouteMatch()->getParam('id');\r\n{code}",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=mberchtold",
                        "name": "mberchtold",
                        "displayName": "Mat Berchtold",
                        "active": true
                    },
                    "created": "2012-03-20T15:37:01.000+0000",
                    "updated": "2012-03-20T15:37:56.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-149\/transitions"
}