{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-265",
    "key": "ZF2-265",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend\\Db\\Sql\\Insert::prepareStatement() produces incorrect database quoting"
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-265\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-05-08T21:41:21.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doug@unlikelysource.com",
                "name": "doug@unlikelysource.com",
                "displayName": "Doug Bierer",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-04-12T22:48:06.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-05-08T21:41:22.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Counters::insertRow($array_of_values) from the following code block produces this SQL statement:\r\nINSERT INTO \"counters\" (\"id\", \"name\", \"type\", \"silhouette\", \"AF\", \"AAF\", \"RF\", \"FP\", \"T\", \"DF\", \"MF\", \"UMF\", \"plus\", \"misc\") VALUES ('999', 'Test', 'BB', 'test.jpg', '99', '99', '99', '99', '99', '99', '99', '99', 'test', 'test')\r\n\r\nThis statement is subsequently kicked back by MySQL as it should have identifiers quoted using backticks (``).\r\n\r\nHere is the code block:\r\n<?php\r\n\/**\r\n * Works with 'counters' table to insert, update and render ship and air counters\r\n *\/\r\n\r\nnamespace Application\\Model;\r\n\r\nuse Zend\\Db\\Adapter\\Adapter as Adapter,\r\n\tZend\\Db\\Sql as Sql;\r\n\r\nclass Counters {\r\n\t\r\n\tprotected static $_adapter;\r\n\tprotected static $_tableName = 'counters';\r\n\tprotected static $_dbName = 'slot';\r\n\tprotected static $_host = 'localhost';\r\n\tprotected static $_cols = \r\n\t\tarray(\r\n\t\t\t'id' \t\t\t=> 0, \t\/\/ int(11) NOT NULL,\r\n\t\t\t'name' \t\t\t=> '', \t\/\/ varchar(64) NOT NULL COMMENT 'actual name of the ship',\r\n\t\t\t'type' \t\t\t=> '', \t\/\/ char(3) NOT NULL COMMENT 'BB, CV, CA etc. VF, VT => plane',\r\n\t\t\t'silhouette' \t=> '', \t\/\/ varchar(64) NOT NULL COMMENT 'filename of unit silhouette',\r\n\t\t\t'AF' \t\t\t=> 0, \t\/\/ int(2) unsigned NOT NULL DEFAULT '0' COMMENT 'attack factor',\r\n\t\t\t'AAF' \t\t\t=> 0, \t\/\/ int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'anti-aircraft factor',\r\n\t\t\t'RF' \t\t\t=> 0, \t\/\/ int(2) unsigned NOT NULL DEFAULT '0' COMMENT 'range factor',\r\n\t\t\t'FP' \t\t\t=> 0, \t\/\/ int(2) unsigned NOT NULL DEFAULT '0' COMMENT 'float plane(s)',\r\n\t\t\t'T'\t\t\t\t=> 0, \t\/\/ int(2) unsigned NOT NULL DEFAULT '0' COMMENT 'torpedos',\r\n\t\t\t'DF' \t\t\t=> 0, \t\/\/ int(2) unsigned NOT NULL DEFAULT '1' COMMENT 'defense factor',\r\n\t\t\t'MF' \t\t\t=> 0, \t\/\/ int(3) unsigned NOT NULL DEFAULT '11' COMMENT 'movement factor (surface)',\r\n\t\t\t'UMF' \t\t\t=> 0, \t\/\/ int(2) unsigned DEFAULT '0' COMMENT 'undersea movement factor (subs only)',\r\n\t\t\t'plus' \t\t\t=> '', \t\/\/ char(8) DEFAULT NULL COMMENT 'plus: M => mines, DC => depth charges, C => carrier based, L => land based',\r\n\t\t\t'misc' \t\t\t=> '', \t\/\/ varchar(255) NOT NULL,\r\n\t);\r\n\t\t\r\n\t\/**\r\n\t * Creates instance of database adapter\r\n\t *\/\r\n\tpublic static function getAdapter()\r\n\t{\r\n\t\tif (!self::$_adapter) {\r\n\t    \tself::$_adapter = new Adapter(array(\r\n                                'host'          => self::$_host,\r\n\t    \t\t\t'driver'\t=> 'mysqli',\r\n\t    \t\t\t'username'\t=> 'test',\r\n\t    \t\t\t'password'\t=> 'password',\r\n\t    \t\t\t'dbname'\t=> self::$_dbName\r\n\t    \t\t\t));\r\n\t\t}\r\n\t\treturn self::$_adapter;\r\n\t}\r\n\r\n\tpublic static function getTableName()\r\n\t{\r\n\t\treturn self::$_tableName;\r\n\t}\r\n\r\n\tpublic static function getColumns()\r\n\t{\r\n\t\treturn self::$_cols;\r\n\t}\r\n\t\r\n\tpublic static function getColumnNames()\r\n\t{\r\n\t\treturn array_keys(self::$_cols);\r\n\t}\r\n\t\r\n\t\r\n\t\/**\r\n\t * Adds a row\r\n\t * @param array $values\r\n\t *\/\r\n\tpublic static function insertRow($values)\r\n\t{\r\n                \/\/ originally tried this using Zend\\Db\\TableGateway\r\n                \/\/ but ran into even worse problems\r\n                \/\/ ended up rewriting using the adapter and Zend\\Db\\Sql\\Insert\r\n\t\t$adapter = self::getAdapter();\r\n\t\t$select = new Sql\\Insert();\r\n\t\t$select->into(self::getTableName());\r\n\t\t$select->columns(self::getColumnNames());\r\n\t\t$select->values($values);\r\n\t\t$statement = $adapter->createStatement();\r\n\t\t$select->prepareStatement($adapter, $statement);\r\n\t\techo $select->getSqlString(); exit;\r\n\t\treturn $statement->execute();\r\n\t}\r\n\t\r\n}"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-265\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "database",
                "quoting"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                "name": "ralph",
                "displayName": "Ralph Schindler",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10520",
                    "id": 10520,
                    "name": "Zend\\Db",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50294",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doug@unlikelysource.com",
                        "name": "doug@unlikelysource.com",
                        "displayName": "Doug Bierer",
                        "active": true
                    },
                    "body": "NOTE: using $select->getSqlString(new Zend\\Db\\Adapter\\Platform\\Mysql) produced proper database quoting\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=doug@unlikelysource.com",
                        "name": "doug@unlikelysource.com",
                        "displayName": "Doug Bierer",
                        "active": true
                    },
                    "created": "2012-04-13T12:51:56.000+0000",
                    "updated": "2012-04-13T12:51:56.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/50530",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "body": "In your comment is the correct usage, otherwise you'll get Sql92 standard quoting.  Also might want to have a look at this setting in MySQL: http:\/\/dev.mysql.com\/doc\/refman\/5.1\/en\/server-sql-mode.html#sqlmode_ansi_quotes\r\n\r\nGoing to close as not an issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=ralph",
                        "name": "ralph",
                        "displayName": "Ralph Schindler",
                        "active": true
                    },
                    "created": "2012-05-08T21:41:09.000+0000",
                    "updated": "2012-05-08T21:41:09.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-265\/transitions"
}