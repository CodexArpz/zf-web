{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-365",
    "key": "ZF2-365",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "custom validator base on  Zend\\Validator\\NotEmpty "
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/1",
                "name": "Bug",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-365\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/6",
                "name": "Not an Issue"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-06-25T15:05:10.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                "name": "pcmad",
                "displayName": "dwalker",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2012-06-17T18:41:06.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-06-25T15:05:10.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "hi i want to make a custom validator base on  Zend\\Validator\\NotEmpty basically it does the opposite of Zend\\Validator\\NotEmpty it only isvaild if the value is empty\r\n\r\n\r\nwhy you may ask \r\n\r\nthis is to stop auto form bots submitting forms\r\n\r\ncode \r\nnamespace Contact\\Form;\r\n\r\nuse Zend\\Form\\Form;\r\nuse Zend\\InputFilter\\InputFilter;\r\nclass ContactForm extends Form\r\n{\r\n\r\n\tpublic function __construct ()\r\n\t{\r\n\t\tparent::__construct();\r\n\t\t$this->setAttribute('method', 'post');\r\n\t\t$this->add(array(\r\n\t\t\t'name' => 'other_source' , \r\n\t\t\t'attributes' => array(\r\n\t\t\t\t'type' => 'text' , \r\n\t\t\t)\r\n\t\t));\t\r\n}\r\n\r\nnamespace Contact\\Model;\r\n\r\nuse Zend\\InputFilter\\InputFilter;\r\nuse Neo\\Validator\\XYZ;\r\n\r\nclass Contact extends InputFilter\r\n{\r\n    public function __construct()\r\n    {\r\n\t\t$this->add(array(\r\n\t\t\t'name' => 'other_source' , \r\n       \t\t'validators' => array(\r\n\t\t\t\tarray(\r\n\t\t\t\t\t'name' => 'Neo\\Validator\\XYZ' , \r\n\t\t\t\t\t),\r\n\t\t\t),\r\n\t\t));\t\t\r\n    }\r\n}\r\n\r\n\r\n\r\n\\NeoValidator\\XYZ.php\r\n\r\nnamespace Neo\\Validator;\r\n\r\nuse Zend\\Validator\\AbstractValidator;\r\nuse Traversable;\r\nuse Zend\\Stdlib\\ArrayUtils;\r\nclass XYZ extends AbstractValidator\r\n{\r\n    const XYZ = 'XYZ';\r\n    protected $_messageTemplates = array(\r\n        self::XYZ => \"test\",\r\n    );\r\n    protected $options = array(\r\n    );\r\n    public function __construct($options = null)\r\n    {\r\n        parent::__construct($options);\r\n    }\r\n    \/**\r\n     * Returns true if and only if $value is an empty value.\r\n     *\r\n     * @param  string $value\r\n     * @return boolean\r\n     *\/\r\n    public function isValid($value)\r\n    {\r\n    \tvar_dump($value);\r\n    \techo 'UAU';\r\n    \tif(empty($value))\r\n    \t{\r\n    \t\treturn true;\r\n    \t}\r\n    \treturn false;\r\n    }\r\n}\r\n\r\nerror \r\n\"Value is required and can't be empty\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n "
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/1",
                "name": "Blocker"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-365\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "zf2"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                "name": "pcmad",
                "displayName": "dwalker",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10578",
                    "id": 10578,
                    "name": "Zend\\Validator",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51199",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "The only way to get that message is using NotEmpty. Check your configuration and make sure that you are using the correct validator.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-06-25T08:44:49.000+0000",
                    "updated": "2012-06-25T08:44:49.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51201",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "body": "hi lets leave custom validator and use regx for the same Serrano \r\n\r\n$this->add(array(\r\n\t'name' => 'other_source' , \r\n        'validators' => array(\r\nnew Regex('\/!.*\/') \/\/ implys field has to is empty to pass\r\n),\r\n\r\n",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "created": "2012-06-25T11:11:42.000+0000",
                    "updated": "2012-06-25T11:11:42.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51202",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "@dwalker Could you attach a file with the Validator class and the config array? or if you want you can paste the code to some web like gist or pastebin\r\n\r\nAlso IIRC exclamation mark don't have any special meaning in PCRE\r\nhttp:\/\/es.php.net\/manual\/en\/regexp.reference.meta.php",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-06-25T11:17:05.000+0000",
                    "updated": "2012-06-25T11:17:05.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51203",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "body": "http:\/\/pcmadness2.ath.cx\/ZF2Contact.zip\r\n\r\nnote ! means not in regular expressions",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "created": "2012-06-25T11:43:32.000+0000",
                    "updated": "2012-06-25T11:43:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51205",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "{code}\r\nvar_dump((bool) !preg_match('\/!.*\/', ''));\r\nvar_dump((bool) !preg_match('\/!.*\/', 'A'));\r\nvar_dump((bool) !preg_match('\/[^.]\/', ''));\r\nvar_dump((bool) !preg_match('\/[^.]\/', 'A'));\r\n{code}\r\n\r\nbool(true)\r\nbool(true)\r\nbool(true)\r\nbool(false)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-06-25T11:59:07.000+0000",
                    "updated": "2012-06-25T11:59:22.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51206",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "The code attached doesn't have the validator, but I hope that the regex clarification can solve your issue.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-06-25T12:04:03.000+0000",
                    "updated": "2012-06-25T12:04:03.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51207",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "body": "the code attached has the validation in the Neo folder  \r\n\r\nthank you for the regx code (i must of got a little confused to ! and ^ ) \r\n\r\ni also lead to be leave that ^ mean start of string \r\n\r\nbut if ref  http:\/\/es.php.net\/manual\/en\/regexp.reference.meta.php\r\n\r\n^ = assert start of subject (or line, in multi line mode)\r\nand also in the page it says \r\n^ = negate the class, but only if the first character\r\n\r\n\r\nthey seem to work self contained in your example how ever using them in zend2 form + validation still has the issue of \r\n\r\nwhen field is empty error message is \"Value is required and can't be empty\"",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "created": "2012-06-25T12:20:55.000+0000",
                    "updated": "2012-06-25T12:20:55.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51208",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "body": "Use \"allow_empty\" in the InputFilter definition",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=maks3w",
                        "name": "maks3w",
                        "displayName": "Maks 3w",
                        "active": true
                    },
                    "created": "2012-06-25T14:34:32.000+0000",
                    "updated": "2012-06-25T14:34:32.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/51210",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "body": "Thank you for your please for reference the code below work \r\n\r\nyou need both these set to work \r\n\t'allow_empty' => true,\r\n\t'required' => false,\r\n\r\n$this->add(array(\r\n\t'name' => 'other_source' , \r\n\t'allow_empty' => true,\r\n\t'required' => false,\r\n\t'validators' => array(\r\n\t    array(\r\n\t\t'name' => 'Neo\\Validator\\IsEmpty' , \r\n\t    ),\r\n        ),\r\n);\t",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=pcmad",
                        "name": "pcmad",
                        "displayName": "dwalker",
                        "active": true
                    },
                    "created": "2012-06-25T15:03:03.000+0000",
                    "updated": "2012-06-25T15:03:03.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-365\/transitions"
}