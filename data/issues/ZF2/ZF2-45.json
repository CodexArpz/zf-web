{
    "expand": "html",
    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-45",
    "key": "ZF2-45",
    "fields": {
        "summary": {
            "name": "summary",
            "type": "java.lang.String",
            "value": "Zend\/Rest\/RouteTest "
        },
        "timetracking": {
            "name": "timetracking",
            "type": "com.atlassian.jira.issue.fields.TimeTrackingSystemField"
        },
        "issuetype": {
            "name": "issuetype",
            "type": "com.atlassian.jira.issue.issuetype.IssueType",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issueType\/13",
                "name": "Unit Tests: Problem",
                "subtask": false
            }
        },
        "votes": {
            "name": "votes",
            "type": "com.atlassian.jira.issue.fields.VotesSystemField",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-45\/votes",
                "votes": 0,
                "hasVoted": false
            }
        },
        "security": {
            "name": "security",
            "type": "com.atlassian.jira.issue.security.IssueSecurityLevel"
        },
        "resolution": {
            "name": "resolution",
            "type": "com.atlassian.jira.issue.resolution.Resolution",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/resolution\/1",
                "name": "Fixed"
            }
        },
        "fixVersions": {
            "name": "fixVersions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "resolutiondate": {
            "name": "resolutiondate",
            "type": "java.util.Date",
            "value": "2012-03-10T16:54:23.000+0000"
        },
        "reporter": {
            "name": "reporter",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=timcrider",
                "name": "timcrider",
                "displayName": "Timothy Crider",
                "active": true
            }
        },
        "created": {
            "name": "created",
            "type": "java.util.Date",
            "value": "2011-08-04T02:17:39.000+0000"
        },
        "updated": {
            "name": "updated",
            "type": "java.util.Date",
            "value": "2012-03-10T16:54:23.000+0000"
        },
        "description": {
            "name": "description",
            "type": "java.lang.String",
            "value": "Using phpunit 3.5.14, assertType is throwing deprecation errors.\r\n\r\nThe following is the error message given by phpunit --verbose:\r\n\r\nDeprecated PHPUnit features are being usedzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 77 and 101) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 103 and 113) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 118 and 128) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 130 and 140) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 142 and 154) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 156 and 168) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 170 and 181) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 183 and 194) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 196 and 207) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 209 and 220) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 222 and 233) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 235 and 245) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 247 and 258) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 260 and 271) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 273 and 284) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 286 and 298) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 320 and 331) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 333 and 344) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 346 and 357) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 368 and 380) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 382 and 394) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 396 and 407) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 427 and 438) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 440 and 451) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 480 and 492) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\nzf2\/tests\/Zend\/Rest\/RouteTest.php:(between 494 and 506) - () will be removed in PHPUnit 3.6 and should no longer be used. assertInternalType() should be used for asserting internal types such as \"integer\" or \"string\" whereas assertInstanceOf() should be used for asserting that an object is an instance of a specified class or interface.\r\n\r\n\r\n"
        },
        "priority": {
            "name": "priority",
            "type": "com.atlassian.jira.issue.priority.Priority",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/priority\/4",
                "name": "Minor"
            }
        },
        "duedate": {
            "name": "duedate",
            "type": "java.util.Date"
        },
        "customfield_10022": {
            "name": "Fix Version Priority",
            "type": "com.atlassian.jira.plugin.system.customfieldtypes:select"
        },
        "watcher": {
            "name": "watcher",
            "type": "watcher",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-45\/watchers",
                "isWatching": false,
                "watchCount": 0
            }
        },
        "worklog": {
            "name": "worklog",
            "type": "worklog",
            "value": [

            ]
        },
        "status": {
            "name": "status",
            "type": "com.atlassian.jira.issue.status.Status",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/status\/5",
                "name": "Resolved"
            }
        },
        "labels": {
            "name": "labels",
            "type": "com.atlassian.jira.issue.label.Label",
            "value": [
                "Zend\\Rest",
                "deprecated",
                "test"
            ]
        },
        "assignee": {
            "name": "assignee",
            "type": "com.opensymphony.user.User",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                "name": "matthew",
                "displayName": "Matthew Weier O'Phinney",
                "active": true
            }
        },
        "links": {
            "name": "links",
            "type": "issuelinks",
            "value": [

            ]
        },
        "attachment": {
            "name": "attachment",
            "type": "attachment",
            "value": [

            ]
        },
        "sub-tasks": {
            "name": "sub-tasks",
            "type": "issuelinks",
            "value": [

            ]
        },
        "versions": {
            "name": "versions",
            "type": "com.atlassian.jira.project.version.Version",
            "value": [

            ]
        },
        "project": {
            "name": "project",
            "type": "com.atlassian.jira.project.Project",
            "value": {
                "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/project\/ZF2",
                "key": "ZF2",
                "name": "Zend Framework 2.0",
                "roles": {

                }
            }
        },
        "components": {
            "name": "components",
            "type": "com.atlassian.jira.bc.project.component.ProjectComponent",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/component\/10566",
                    "id": 10566,
                    "name": "Zend\\Rest",
                    "isAssigneeTypeValid": false
                }
            ]
        },
        "comment": {
            "name": "comment",
            "type": "com.atlassian.jira.issue.fields.CommentSystemField",
            "value": [
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47856",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "ZF1 standardizes on the PHPUnit 3.4 series; these deprecation notices were introduced during the PHPUnit 3.5 series. (ZF2 uses PHPUnit 3.5, and we're steadily updating these assertions.)",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-08-04T13:18:48.000+0000",
                    "updated": "2011-08-04T13:18:48.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47857",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=timcrider",
                        "name": "timcrider",
                        "displayName": "Timothy Crider",
                        "active": true
                    },
                    "body": "I thought I submitted this bug for ZF2. I also submitted a patch updating the assertions for ZF2. I created this bug in order to have a branch name to pull request for.\r\n\r\nhttps:\/\/github.com\/zendframework\/zf2\/pull\/313\/files\r\n\r\n Did I do this incorrectly?",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=timcrider",
                        "name": "timcrider",
                        "displayName": "Timothy Crider",
                        "active": true
                    },
                    "created": "2011-08-04T14:17:31.000+0000",
                    "updated": "2011-08-04T14:17:31.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47858",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "body": "My bad -- I missed the ZF2- prefix!\n\nBTW, this route may or may not exist once refactoring of the MVC is done. The reason is that it may be easier to handle the request-method-specific items within the controller itself rather than in the routing. This allows using literal route matching, which will be much faster, and also more flexible for cases of subresources, etc.\n\nThat said, I'll still honor the pull request.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=matthew",
                        "name": "matthew",
                        "displayName": "Matthew Weier O'Phinney",
                        "active": true
                    },
                    "created": "2011-08-04T14:23:43.000+0000",
                    "updated": "2011-08-04T14:23:43.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/47859",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=timcrider",
                        "name": "timcrider",
                        "displayName": "Timothy Crider",
                        "active": true
                    },
                    "body": "Awesome,\r\n\r\n I was worried I had done something wrong. This is the first time I've publicly contributed to a project, and was using this ticket as my first try and working with a setup like this. I picked the easiest thing I could quickly find, just to get familiar with the process.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=timcrider",
                        "name": "timcrider",
                        "displayName": "Timothy Crider",
                        "active": true
                    },
                    "created": "2011-08-04T14:26:25.000+0000",
                    "updated": "2011-08-04T14:26:25.000+0000"
                },
                {
                    "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/comment\/49988",
                    "author": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=robertbasic",
                        "name": "robertbasic",
                        "displayName": "Robert Basic",
                        "active": true
                    },
                    "body": "The pull request for this one https:\/\/github.com\/zendframework\/zf2\/pull\/313 was merged and closed, so I'm resolving this one as fixed. Also, the Zend\/Rest tests are all green.",
                    "updateAuthor": {
                        "self": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/user?username=robertbasic",
                        "name": "robertbasic",
                        "displayName": "Robert Basic",
                        "active": true
                    },
                    "created": "2012-03-10T16:54:23.000+0000",
                    "updated": "2012-03-10T16:54:23.000+0000"
                }
            ]
        }
    },
    "transitions": "http:\/\/fw02.zend.com\/issues\/rest\/api\/latest\/issue\/ZF2-45\/transitions"
}