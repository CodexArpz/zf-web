<h2>ZF2015-01: Session validation vulnerability</h2>

<p>
    <kbd>Zend\Session</kbd> session validators do not work as expected if set 
    prior to the start of a session.
</p>

<p>
    For instance, the following test case fails (where 
    <kbd>$this->manager</kbd> is an instance
    of <kbd>Zend\Session\SessionManager</kbd>):

<pre class="highlight"><code>
$this
    -&gt;manager
    -&gt;getValidatorChain()
    -&gt;attach('session.validate', array(new RemoteAddr(), 'isValid'));

$this-&gt;manager-&gt;start();

$this-&gt;assertSame(
    array(
        'Zend\Session\Validator\RemoteAddr' =3D&gt; '',
    ),
    $_SESSION['__ZF']['_VALID']
);
</code></pre>

<p>
    The implication is that subsequent calls to <kbd>Zend\Session\SessionManager#start()</kbd>
    (in later requests, assuming a session was created) will not have
    any validator metadata attached, which causes any validator metadata
    to be re-built from scratch, thus marking the session as valid.
</p>

<p>
    An attacker is thus able to simply ignore session validators
    such as <kbd>RemoteAddr</kbd> or <kbd>HttpUserAgent</kbd>, since the "signature" that
    these validators check against is not being stored in the session.
</p>

<h3>Action Taken</h3>

<p>
    We now store the signature of the validators in the session immediately following
    the call to <kbd>session_start</kbd>, preventing any data loss from session
    validators.
</p>

<p>
    The patch fixing the issue has been applied in the following versions:
</p>

<ul>
    <li>Zend Framework 2.2.9</kbd>
    <li>Zend Framework 2.3.4</kbd>
</ul>

<h3>Recommendations</h3>

<p>If you are using session validators, we recommend upgrading immediately.</p>

<h3>Acknowledgments</h3>

<p>
    The Zend Framework team thanks the following for identifying the issues and 
    working with us to help protect its users:
</p>

<ul>
    <li><a href="https://github.com/YDyachenko">Yuriy Dyachenko</a>, who reported the issue; and</li>
    <li><a href="https://github.com/ocramius">Marco Pivetta</a>, who provided the patch resolving the issue.</li>
</ul>

<?php echo $this->render('security/policy');
