<h2>ZF-9180: Zend Soap Autodiscovery doesn't generate enumerations and minOccurs or maxOccurs</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-02-15T04:17:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-10T14:57:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>In Progress</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Jeannie BOFFEL (jboffel)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Soap_Wsdl</li>
            <li>Zend_Soap</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10755">ZF-10755</a></li>
            <li><a href="/issues/browse/ZF-11298">ZF-11298</a></li>
            <li><a href="/issues/browse/ZF-11313">ZF-11313</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Original request :
{quote}
This lib utilizes the PHP docblocks provided by the developer to determine the parameter and return types.
We could also add enumerations or minOccurs and maxOccurs.
It could be like this :</p>

<pre class="highlight"><code>
/**
* @var string maxOccurs=1 minOccurs=1 enumerate={'toto','titi','tutu'}
*/
</code></pre>

<p>{quote}</p>

<p>New possible design:</p>

<pre class="highlight"><code>
/**
 * @xsd simpleType
 * @xsd restriction array('base' =&gt; 'xsd:string')
 */
class allowedWordsType
{
    /**
     * @xsd enumeration array('value' =&gt; 'toto')
     * @xsd enumeration array('value' =&gt; 'titi')
     * @xsd enumeration array('value' =&gt; 'tutu')
     */
    public $enumeration;
}

...

/**
* @var allowedWordsType array('maxOccurs'=&gt;1, 'minOccurs'=&gt;1)
*/
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2010-02-18T10:45:14.000+0000</p> 
        <div class="body">
            <p>For this we would need a real parser for docblocks, i don't think this is a good idea or a viable task anytime soon.</p>

<p>The generated WSDL files are not meant to be perfect, in many cases you can use them as a first template and then optimize it for your needs.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Levi Stanley (niterain) on 2010-03-11T11:32:55.000+0000</p> 
        <div class="body">
            <p>If the generated WSDL isn't meant to be perfect, why have it at all.  It becomes a half ass solution that doesn't help you when you need it; tools that don't help you aren't tools at all.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jeannie BOFFEL (jboffel) on 2010-11-17T05:23:44.000+0000</p> 
        <div class="body">
            <p>Hi, I agree that, with the given example, parsing with docblocks could be a pain with current support.
But I thought about another design with more simple docblocks and using model of support of complexType to adapt also to simpleType.</p>

<p>I sent my proposal here : <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Soap_Wsdl_Strategy_DefaultComplexType+-+Improvement+for+the+AutoDiscover+-+Jeannie+BOFFEL">Zend_Soap_Wsdl_Strategy_DefaultComplexType - Improvement for the AutoDiscover</a></p>

<p>It's not breaking existing code and use tag @xsd for any XSD details to generate them in style part of the WSDL document.</p>

<p>I think, this feature is really needed for any professional webservice, it is often requested to describe with details the return format and give a XSD to validate soap request and response.</p>

<p>It could replace the current component Zend_Soap_Wsdl_Strategy_DefaultComplexType.</p>

<p>For test it is also possible to use it with setComplexTypeStrategy of Zend_Soap_AutoDiscover.</p>

        </div>
    </div>
    </div>

