<h2>ZF-12157: Zend_Validate_EmailAddress returns INVALID_SEGMENT when the address is routable</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-04-16T19:50:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-16T19:50:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>ESPN.com has public routable MX servers that sit on a network segment beginning with 192, but not in a class C reserved range.  The _isReserved check has a couple of bugs that prevent proper validation.</p>

<p>A test case</p>

<pre class="highlight"><code>
$validator = new Zend_Validate_EmailAddress();
$validator-&gt;setOptions(array(
    'allow' =&gt; Zend_Validate_Hostname::ALLOW_DNS,
    'mx'    =&gt; true,
    'deep'  =&gt; true
));
Zend_Debug::dump($validator-&gt;isValid('test@espn.com'));
</code></pre>

<p>Some debug data:
{panel}
dig espn.com MX</p>

<p>; &lt;&lt;&gt;&gt; DiG 9.7.1-P2 &lt;&lt;&gt;&gt; espn.com MX
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 17090
;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 5</p>

<p>;; QUESTION SECTION:
;espn.com.          IN  MX</p>

<p>;; ANSWER SECTION:
espn.com.       374 IN  MX  10 mx005.espn.com.
espn.com.       374 IN  MX  10 mx006.espn.com.
espn.com.       374 IN  MX  10 mx002.espn.com.
espn.com.       374 IN  MX  10 mx003.espn.com.
espn.com.       374 IN  MX  10 mx004.espn.com.</p>

<p>;; ADDITIONAL SECTION:
mx005.espn.com.     227 IN  A   192.234.2.158
mx006.espn.com.     205 IN  A   192.234.2.159
mx002.espn.com.     228 IN  A   192.234.2.155
mx003.espn.com.     205 IN  A   192.234.2.156
mx004.espn.com.     169 IN  A   192.234.2.157
{panel}</p>

<p>Lines 365 and 366 of Zend_Validate_EmailAddress-&gt;_isReserved have typecasts to integer that make the subsequent checks as type array on lines 370 and 371 fail.  Removing the int casts makes the comparison work properly.</p>

<p>Moreover, the entire check is conceptually incorrect since a range outside of what is in _invalidIp is fundamentally valid.  Rather than checking if it is outside of the address range in each _invalidIp and returning false, it should probably check if it is inside the range and return true on line 372, and then return false by default on line 377.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

