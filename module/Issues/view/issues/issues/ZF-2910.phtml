<h2>ZF-2910: Get a module directory from the front controller</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-03-18T09:26:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Getting the module directory can be used for access to the :module/models
directory, or custom directories inside the module directory. E.g.
:module/forms , :module/config (for module specific configs)
This could be used in the proposed ModelLoader for example.</p>

<p>Of course it's easy to do dirname($controllerDirectory), but it would be
more convenient to have the module directory available from a method
inside the frontcontroller.</p>

<pre class="highlight"><code>
/**
 * Get the module directory.
 * If no module is specified it will return the module directory for the
 * active module.
 *
 * @throws Zend_Controller_Exception
 * @param string $module
 * @return string
 */
public function getModuleDirectory($module = null)
{
    if (null === $module) {
        $module = $this-&gt;getRequest()-&gt;getModuleName();
    }

    $controllerDir = $this-&gt;getControllerDirectory($module);

    if ((null === $controllerDir) || is_array($controllerDir)) {
        throw new Zend_Controller_Exception('Cannot locate the module directory');
    }

    return dirname($controllerDir);
}
</code></pre>

<p>It returns the module directory for the current module, unless $module is
specified. In that case it would return the module directory for the
specified $module.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:41:12.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T10:25:30.000+0000</p> 
        <div class="body">
            <p>Scheduling for next minor release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-04T14:27:33.000+0000</p> 
        <div class="body">
            <p>Added to trunk and merged to 1.6 release branch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:05.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

