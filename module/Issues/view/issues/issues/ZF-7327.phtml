<h2>ZF-7327: Zend_OpenId_Extension should be passed parameters as multi-level array</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-07-20T15:35:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chris (chris.bisnett)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_OpenId</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently Zend_OpenId_Extension is passed the OpenId parameters as a single level array in which the periods have been replaced with underscores.  This makes parsing the parameters much harder than it should be.  If rather than replacing the periods with underscores, the parameters were used to generate a multi-level array it would greatly enhance the parsing of parameters by extensions.  Here is some code that will do exactly what I have described.  There is probably a faster and better way to generate this array but...oh well.</p>

<p>function splitParams($params)
{
    $final = array();</p>

<pre><code>// Loop the parameters
foreach ($params as $identifier =&gt; $value)
{
    // Split the identifier at the boundries
    $levels = explode('.', $identifier);

    // Get the last value as the key
    $key = array_pop($levels);

    // Loop the levels, creating any that don't exist
    $currentlevel = &amp;$final;
    foreach ($levels as $level)
    {
        // Check if the level is defined
        if (!isset($currentlevel[$level]))
            // Create the level
            $currentlevel[$level] = array();
        else
        {
            // Change any found value to the first key of an array
            if (!is_array($currentlevel[$level]))
                $currentlevel[$level] = array($currentlevel[$level]);
        }

        // Move down to the next level
        $currentlevel = &amp;$currentlevel[$level];
    }

    // Set the value
    $currentlevel[$key] = $value;
}

return $final;
</code></pre>

<p>}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:03.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

