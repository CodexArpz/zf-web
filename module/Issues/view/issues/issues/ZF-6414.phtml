<h2>ZF-6414: Zend_File_Transfer_Adapter_Abstract doesnt allow multiple parameters for validators in addValidator()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-24T09:54:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-16T09:49:47.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_File_Transfer_Adapter_Abstract does not properly implement adding validators with multiple parameters in their constructors.</p>

<p>line 335 of 1.8 beta 1:</p>

<pre class="highlight"><code>
$name      = $this-&gt;getPluginLoader(self::VALIDATE)-&gt;load($validator);
$validator = new $name($options);
if (is_array($options) &amp;&amp; isset($options['messages'])) {
    if (is_array($options['messages'])) {
        $validator-&gt;setMessages($options['messages']);
    } elseif (is_string($options['messages'])) {
        $validator-&gt;setMessage($options['messages']);
    }

    unset($options['messages']);
}
</code></pre>

<p>this should be more similar to protected function _loadValidator(array $validator) in Zend_Form_Element:</p>

<pre class="highlight"><code>
if (empty($options)) {
    $validator = new $name;
} else {
    $messages = false;
    if (isset($options['messages'])) {
        $messages = $options['messages'];
        unset($options['messages']);
    }

    $r = new ReflectionClass($name);
    if ($r-&gt;hasMethod('__construct')) {
        $validator = $r-&gt;newInstanceArgs((array) $options);
    } else {
        $validator = $r-&gt;newInstance();
    }

    if ($messages) {
        if (is_array($messages)) {
            $validator-&gt;setMessages($messages);
        } elseif (is_string($messages)) {
            $validator-&gt;setMessage($messages);
        }
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-04-24T10:04:01.000+0000</p> 
        <div class="body">
            <p>Multiple parameters are per definition depreciated and will be erased within 2.0.
Existing validators allow also to give multiple parameters as array.</p>

<p>We should not implement a depreciated feature.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael (circlesquare) on 2009-04-24T10:19:26.000+0000</p> 
        <div class="body">
            <p>I understand your argument, but this means that current built in validators with multiple parameters such as InArray will not work until 2.0
Can the existing validators with multiple arguments be updated for 1.8?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-04-25T03:43:00.000+0000</p> 
        <div class="body">
            <p>What should a InArray validator check to a file ?
I see no usecase for this validator to be attached to a file.</p>

<p>When validators do not conform the usage with Zend_Config then these validators should be fixed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-16T09:49:46.000+0000</p> 
        <div class="body">
            <p>Closing as won't fix.</p>

        </div>
    </div>
    </div>

