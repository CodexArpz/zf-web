<h2>ZF-88: PHP allowed memory exhausted fatal error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-21T10:18:07.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-20T10:07:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.2.0 (29/Oct/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-87">ZF-87</a></li>
            <li><a href="/issues/browse/ZF-106">ZF-106</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11706/lucene-64bit.diff">lucene-64bit.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In playing around with the Lucene_Search tool, I ran into a PHP Fatal error when trying to load large amounts of data (actually, not all that much data, but around 200,000 varchar(100) text fields): PHP FATAL ERROR: Allowed memory size of 104857600 bytes exhausted (tried to allocated 119 bytes) in Zend/Search/Lucene/Analysis/Analyzer/Common/Text.php on line 65. and PHP FATAL ERROR: Allowed memory size of 104857600 bytes exhausted (tried to allocated 64 bytes) in Zend/Search/Lucene/Index/SegmentWriter.php on line 480.</p>

<p>I am curios if there are any known restrictions on the amount of data you can use when building the Lucene search documents?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-06-21T10:31:27.000+0000</p> 
        <div class="body">
            <p>It depends from segment merging functionality.</p>

<p>addDocument() accumulates documents in memory and writes down new segment only at commit() time.</p>

<p>Frequent commits make index segments small and non-optimal.
Take a look on a <a href="http://framework.zend.com/manual/en/zend.search.index-creation.html#zend.search.index-creation.updating">http://framework.zend.com/manual/en/â€¦</a></p>

<p>Segment merging functionality will allow make index optimization automatically.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-10-08T19:53:17.000+0000</p> 
        <div class="body">
            <p>Done. MergeFactor, MaxMergeDocs and MaxBufferedDocs index options define auto-optimization behaviour.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Gabryjeluk (gabrys) on 2009-01-20T10:05:19.000+0000</p> 
        <div class="body">
            <p>This is patch that hopefully fixes Zend_Search_Lucene for 64bit systems. It seems that it is a reverse patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Gabryjeluk (gabrys) on 2009-01-20T10:07:32.000+0000</p> 
        <div class="body">
            <p>I'm sorry about attaching a patch file in wrong place. The right place is here <a href="http://framework.zend.com/issues/browse/ZF-4071">http://framework.zend.com/issues/browse/ZF-4071</a></p>

        </div>
    </div>
    </div>

