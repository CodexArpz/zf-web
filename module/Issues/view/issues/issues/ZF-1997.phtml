<h2>ZF-1997: Language code should include Region code to recognize traditional or simplified Chinese correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-09-26T05:14:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-09-27T02:44:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
            <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently Zend_Locale, Zend_Translate use two codes to recognize language, but the traditional Chinese and simplified Chinese both are using 'zh' to be their language code.</p>

<p>If use only two codes to recognize, we can not recognize traditional or simplified Chinese successfully.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-26T06:17:10.000+0000</p> 
        <div class="body">
            <p>zh is the unicode definition for "chinese"...</p>

<p>The region code is added after the language.
You can refer to the ZF docu for how this works.</p>

<p>zh_TW for example means chinese language, region taiwan.</p>

<p>You can already use this sort of locales with Zend_Locale and also with Zend_Translate.
There is nothing which has to be changed for this.</p>

<p>But wether the language nor the region include which script the user wants.
This has nothing to do with language or region.</p>

<p>We will not change the CLDR library as this is legal property of unicode.</p>

<p>Actually the best way for you is, to make two translations, one for trad, one for simple and assign them to two different locales. f.e. zh_TW = trad, zh_MO = simp...</p>

<p>As long as scripts are not part of the locale there is no way to do this the way you proposed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Liber Chen (liber) on 2007-09-26T06:39:11.000+0000</p> 
        <div class="body">
            <p>But in ZF Zend_Translate docs it describes used only the language code for language selection.
In that case, can not recognize trad or simple language file to use.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-26T09:11:28.000+0000</p> 
        <div class="body">
            <p>You are able to define full locales for Zend_Translate.</p>

<p>"zh_TW" or "zh_CN" is also possible as the abbreviated "zh".
Mostly it's enough to define only the language...</p>

<p>For example in german it's enough to define "de" because "de_AT" and "de_DE" use the same script.</p>

<p>When you have a constallation as you described it, it would be best to use as the region as selection criteria.
This is already possible with Zend_Translate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-09-26T14:59:43.000+0000</p> 
        <div class="body">
            <p>Assigning to [~thomas]. Is this a non-issue, or what action should we take to remedy the problem, which remains a bit unclear to me?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-26T16:02:04.000+0000</p> 
        <div class="body">
            <p>Chen want to define something like this...</p>

<p>Zend_Locale(array('zh', 'Traditional'));</p>

<p>But this is not possible with cldr.</p>

<p>Actually the I18N core does not support to have one locale with multiple scripts defined.
The script is independend from the locale.</p>

<p>He has to define the region additionally to the language and make two translations, one for traditional and one for simplified as described in my post above.</p>

<p>For example... zh_CN (chinese-china) for traditional and zh_TW (chinese-taiwan) for simplified. He would have to make a selection for the user between simplified and traditional and redirect to the above specified locales.</p>

<p>Locales do not include scripts.
But the description of the header of this issue is already possible.</p>

<p>In my eyes this is no issue for Zend_Translate nor for Zend_Locale.
Scripts are no locales... these are 2 seperated types of informations.</p>

<p>I will wait a few days if the thing is clear for Chen... if no additional problems occur (the mentioned way from above should already work) I will close this issue as "no issue".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Liber Chen (liber) on 2007-09-26T18:13:37.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
$trans = new Zend_Translate("gettext", 'locale\messages.mo', "en");
$trans-&gt;addTranslation('locale\messages.cn', "zh");
$trans-&gt;addTranslation('locale\messages.tw', "zh");
</code></pre>

<p>If the language file use only language code 'zh' to define, then how does Zend_Translate know how to determine which language to use if remote user uses one of Chinese language ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-27T01:04:06.000+0000</p> 
        <div class="body">
            <p>As I said you have to use also the region...</p>

<pre class="highlight"><code>
$trans = new Zend_Translate("gettext", 'locale\messages.mo', "en");
$trans-&gt;addTranslation('locale\messages.cn', "zh");
$trans-&gt;addTranslation('locale\messages.tw', "zh_TW");
</code></pre>

<p>This way "zh_TW" would be traditional.
"zh" would be simplified.</p>

<p>If a messageid in traditional is not translated it would fall down to simplified.
If the messageid is also not translated in zh it would fall down to en and be displayed.</p>

<p>If you dont want to fall down from traditional to simplified just change "zh" to be "zh_CN"...</p>

<pre class="highlight"><code>
$trans = new Zend_Translate("gettext", 'locale\messages.mo', "en");
$trans-&gt;addTranslation('locale\messages.cn', "zh_CN");
$trans-&gt;addTranslation('locale\messages.tw', "zh_TW");
</code></pre>

<p>This way if a messageid is not translated it falls always down to "en".</p>

<p>How the fallback mechanism works is described in the docu for Zend_Translate.
How Locales work is described  in the docu for Zend_Locale.
And which locales exist is described in the last two chapters of Zend_Locale.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Liber Chen (liber) on 2007-09-27T02:06:50.000+0000</p> 
        <div class="body">
            <p>Thank you for your instruction.
Sorry for this mistake comment.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-27T02:43:09.000+0000</p> 
        <div class="body">
            <p>No problem... :-)</p>

<p>As things are cleared I will close this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-27T02:43:59.000+0000</p> 
        <div class="body">
            <p>Issue closed... things are cleared</p>

        </div>
    </div>
    </div>

