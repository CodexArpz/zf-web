<h2>ZF-5918: connect errors are supressed when dbname is provided</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-03-02T02:04:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-15T07:21:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Mickael Perraud (mikaelkael)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Oracle</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It seems a bit inconsistent that oci_connect() errors are suppressed in _connect() when dbname is provided in config.ini, but are not supressed when dbname isn't present.</p>

<p>It caused me a bit of head scratching during a recent connection issue.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2009-03-03T13:40:40.000+0000</p> 
        <div class="body">
            <p>In this case, Zend_Db_Adapter_Abstract will throw an exception with _checkRequiredOptions():</p>

<pre class="highlight"><code>
Zend_Db_Adapter_Exception("Configuration array must have a key for 'dbname' that names the database instance")
</code></pre>

<p>Since SVN5014, this part of code is unused.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steve Jordan (stevejordan) on 2009-03-04T06:18:27.000+0000</p> 
        <div class="body">
            <p>sorry, I wasn't very clear in the description.</p>

<p>inside the _connect() function there is the following code:</p>

<pre class="highlight"><code>
        if (isset($this-&gt;_config['dbname'])) {
            $this-&gt;_connection = @oci_connect(
                $this-&gt;_config['username'],
                $this-&gt;_config['password'],
                $this-&gt;_config['dbname']);
        } else {
            $this-&gt;_connection = oci_connect(
                $this-&gt;_config['username'],
                $this-&gt;_config['password']);
        }
</code></pre>

<p>at the moment a check is made to see if dbname has been declared somewhere, and if it has oci_connect has it's errors suppressed (@).
There is no error suppression when dbname has not been set.</p>

<p>This is an inconsistency, and caused me some issues while trying to diagnose a connection issue (The exception thrown contained no useful information)</p>

<p>I hope this is clearer.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2009-03-04T11:14:28.000+0000</p> 
        <div class="body">
            <p>You were clear, no problem ;).</p>

<p>Based on actual trunk, I think this code is unreachable. So we could replace:</p>

<pre class="highlight"><code>
if (isset($this-&gt;_config['dbname'])) {
    $this-&gt;_connection = @oci_connect(
        $this-&gt;_config['username'],
        $this-&gt;_config['password'],
        $this-&gt;_config['dbname']);
} else {
    $this-&gt;_connection = oci_connect(
        $this-&gt;_config['username'],
        $this-&gt;_config['password']);
}
</code></pre>

<p>by:</p>

<pre class="highlight"><code>
$this-&gt;_connection = @oci_connect(
    $this-&gt;_config['username'],
    $this-&gt;_config['password'],
    $this-&gt;_config['dbname']);
</code></pre>

<p>Because $this-&gt;_config['dbname'] is mandatory, if it misses, then you have an exception thrown by Zend_Db_Adapter_Abstract::_checkRequiredOptions() before entering in Zend_Db_Adapter_Oracle::_connect()</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steve Jordan (stevejordan) on 2009-03-05T08:44:18.000+0000</p> 
        <div class="body">
            <p>I see what your saying.
It sounds like a good idea to remove code which will never be run.</p>

<p>But the problem which I was having (with the empty Exception messages) will still occur in your replacement code, because you still have the @ suppressing error messages.</p>

<p>If you look at the next code block in the file:</p>

<pre class="highlight"><code>
// check the connection
if (!$this-&gt;_connection) {
            /**
             * @see Zend_Db_Adapter_Oracle_Exception
             */
            require_once 'Zend/Db/Adapter/Oracle/Exception.php';
            throw new Zend_Db_Adapter_Oracle_Exception(oci_error());
        }

</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steve Jordan (stevejordan) on 2009-03-05T08:45:57.000+0000</p> 
        <div class="body">
            <p>sorry, I hit "Add" too soon.</p>

<p>the call to oci_error() will never return anything while the oci_connect() errors are suppressed.</p>

<p>So my suggestion is to remove the @ before oci_connect.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2009-03-06T12:58:13.000+0000</p> 
        <div class="body">
            <p>{quote}
the call to oci_error() will never return anything while the oci_connect() errors are suppressed.
{quote}</p>

<p>For me, it's false, see these examples:</p>

<pre class="highlight"><code>
&lt;?php
oci_connect('user', 'good_password', 'database');
print_r(oci_error());
</code></pre>

<h2>=&gt; return nothing</h2>

<pre class="highlight"><code>
&lt;?php
oci_connect('user', 'bad_password', 'database');
print_r(oci_error());
</code></pre>

<p>=&gt;</p>

<pre class="highlight"><code>
<br /><b>Warning</b>:  oci_connect() [<a href="function.oci-connect">function.oci-connect</a>]: ORA-01017: invalid username/password; logon denied in <b>D:\web\www\test_oracle.php</b> on line <b>2</b><br />
Array
(
    [code] =&gt; 1017
    [message] =&gt; ORA-01017: invalid username/password; logon denied
    [offset] =&gt; 0
    [sqltext] =&gt; 
)
</code></pre>

<hr /><pre class="highlight"><code>
&lt;?php
@oci_connect('user', 'bad_password', 'database');
print_r(oci_error());
</code></pre>

<p>=&gt;</p>

<pre class="highlight"><code>
Array
(
    [code] =&gt; 1017
    [message] =&gt; ORA-01017: invalid username/password; logon denied
    [offset] =&gt; 0
    [sqltext] =&gt; 
)
</code></pre>

<hr /><p>The goal of @ is simply to suppress the warning but oci_error() is always populated.</p>

<p>No?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steve Jordan (stevejordan) on 2009-03-10T04:19:02.000+0000</p> 
        <div class="body">
            <p>It looks like I have misunderstood the purpose of @</p>

<p>In which case the exception thrown needs to contain at least the code and message, something like:</p>

<pre class="highlight"><code>
// check the connection
if (!$this-&gt;_connection) {
            /**
             * @see Zend_Db_Adapter_Oracle_Exception
             */
            require_once 'Zend/Db/Adapter/Oracle/Exception.php';
            $errorMessageArray = oci_error();
            throw new Zend_Db_Adapter_Oracle_Exception($errorMessageArray[code] . ': ' . $errorMessageArray[message]);
        }
</code></pre>

<p>?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2009-03-11T01:57:25.000+0000</p> 
        <div class="body">
            <p>Open Zend/Db/Adapter/Oracle/Exception.php, you will see how this is managed</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steve Jordan (stevejordan) on 2009-03-11T02:29:59.000+0000</p> 
        <div class="body">
            <p>I see. That makes sense now.</p>

<p>So in my case the lack of an error message is down to oci_error not returning one, rather than the framework's processing.</p>

<p>Thanks for pointing me in the right direction.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2009-03-15T07:21:45.000+0000</p> 
        <div class="body">
            <p>The unreachable code was removed with SVN 14324 to close this issue.</p>

        </div>
    </div>
    </div>

