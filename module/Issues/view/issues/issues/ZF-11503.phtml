<h2>ZF-11503: There is no option 'ignoreContants' in 'Zend_Config_Ini'.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2011-06-23T08:53:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-28T16:24:58.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
            <li>Zend_Config_Ini</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This option 'ignoreConstants' is working in Zend_Config_Yaml and Zend_Config_Json, but Zend_Config_Ini.
So here is a small patch for Zend_Config_Ini:</p>

<pre class="highlight"><code>
Index: Ini.php
===================================================================
--- Ini.php (revision 24148)
+++ Ini.php (working copy)
@@ -56,6 +56,13 @@
     protected $_skipExtends = false;
 
     /**
+     * Whether or not to ignore constants in parsed INI
+     *
+     * @var bool
+     */
+    protected $_ignoreConstants = false;
+
+    /**
      * Loads the section $section from the config file $filename for
      * access facilitated by nested object properties.
      *
@@ -121,6 +128,9 @@
             if (isset($options['skipExtends'])) {
                 $this-&gt;_skipExtends = (bool) $options['skipExtends'];
             }
+            if (isset($options['ignoreConstants'])) {
+                $this-&gt;_ignoreConstants = (bool) $options['ignoreConstants'];
+            }
         }
 
         $iniArray = $this-&gt;_loadIniFile($filename);
@@ -169,8 +179,9 @@
      */
     protected function _parseIniFile($filename)
     {
+        $scannerMode = $this-&gt;_ignoreConstants ? INI_SCANNER_RAW : INI_SCANNER_NORMAL;
         set_error_handler(array($this, '_loadFileErrorHandler'));
-        $iniArray = parse_ini_file($filename, true); // Warnings and errors are suppressed
+        $iniArray = parse_ini_file($filename, true, $scannerMode); // Warnings and errors are suppressed
         restore_error_handler();
 
         // Check if there was a error while loading file
</code></pre>

<p>Hope this helps.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-06-23T11:08:33.000+0000</p> 
        <div class="body">
            <p>Hi Jace,</p>

<p>Thanks for the patch to contribute to ZF, but I notice that you don't appear to have a CLA on file, if you do, you should get in touch with Ralph Schindler and ask him to assign you the correct groups so that you can attach patches as an attachment rather than inline, otherwise, you should sign the cla (<a href="http://framework.zend.com/wiki/display/ZFPROP/Contributor+License+Agreement">http://framework.zend.com/wiki/display/â€¦</a>) and return it before contributing code, otherwise your contributions may go unused!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-07-05T15:26:26.000+0000</p> 
        <div class="body">
            <p>Jace -- As Kim indicated, we don't have a CLA on file, so we cannot apply this patch. Additionally, there may be a good reason for not having the "ignoreConstants" flag in the INI config. It was introduced for JSON and YAML as we actually needed to do some special parsing in order to detect and replace constant values, and the flag would eliminate the need for that parsing in the interest of performance. INI, however, does the constant interpolation natively. In fact, the options you suggest in the patch are specific to PHP versions &gt;= 5.3.0, and passing the additional argument may cause breakage in versions prior to that. If we were to incorporate this functionality in ZF1, we should probably do a check for the PHP version first -- and determine whether we might want to try and natively support such functionality in PHP 5.2.X.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jace Ju (jaceju) on 2011-07-07T03:42:47.000+0000</p> 
        <div class="body">
            <p>@Kim, @Matthew:</p>

<p>Thank you for your attention and explanation. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2011-09-25T10:21:54.000+0000</p> 
        <div class="body">
            <p>Aslo, be aware that INI_SCANNER_RAW is also buggy. See <a href="http://symfony.com/blog/symfony-2-0-3-released">http://symfony.com/blog/symfony-2-0-3-released</a>.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-04-28T16:24:58.000+0000</p> 
        <div class="body">
            <p>Cannot fix as no CLA for patch author</p>

        </div>
    </div>
    </div>

