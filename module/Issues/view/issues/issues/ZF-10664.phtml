<h2>ZF-10664: cannot send file using Zend_Rest_Client </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2010-11-09T13:07:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-08T22:49:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sergiu Neamt (nnsese)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bart McLeod (mcleod@spaceweb.nl)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1853">ZF-1853</a></li>
            <li><a href="/issues/browse/ZF-11030">ZF-11030</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14686/Client.php.patch">Client.php.patch</a></li>
            <li><a href="/issues/secure/attachment/14687/ClientTest.php.patch">ClientTest.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Ex:</p>

<p>$client =  new Zend_Rest_Client($someDomain);</p>

<p>$httpClient = new Zend_Http_Client();
$httpClient-&gt;setFileUpload('/var/www/test/public/images/cat.jpg', 'picture');</p>

<p>$client-&gt;setHttpClient($httpClient);</p>

<p>$response = $client-&gt;restPost('/somecontroller/2');</p>

<p>/**
this code is not working because when you call restPost will call _prepareRest() in code below</p>

<pre><code>final public function restPost($path, $data = null)
{
    $this-&gt;_prepareRest($path);
    return $this-&gt;_performPost('POST', $data);
}
</code></pre>

<p>and _prepareRest() will call resetParameters()</p>

<p>in line</p>

<p>self::getHttpClient()-&gt;resetParameters()-&gt;setUri($this-&gt;_uri);</p>

<p>and this will erase all uploadedFile from variabile $files in method resetParameters($clearAll = false)</p>

<pre><code>    // Reset parameter data
    $this-&gt;paramsGet     = array();
    $this-&gt;paramsPost    = array();
    $this-&gt;files         = array();
    $this-&gt;raw_post_data = null;
</code></pre>

<p>So the files cannot be sent by restPost()</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Rothe (burnred) on 2011-03-11T08:43:06.000+0000</p> 
        <div class="body">
            <p>This Fix is the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-07-21T09:31:20.000+0000</p> 
        <div class="body">
            <p>I am currently fixing the problem that Zend_Rest_Client can't send PUT data. I think that after that fix is committed, you should be able to upload a file using restPut. I will link the issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-10-11T21:27:56.000+0000</p> 
        <div class="body">
            <p>I have created a solution wiht an extra function setNoReset($bool = true) that you can call prior to calling restPost(). No reset of the Zend_Http_Client will take place if you set the noReset flag. Would this solution be acceptable? I am working on the unit test (to simplify it). After I'm finished, I'll upload the patches. I would like to know if adding this extra call is acceptable.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-10-12T22:10:01.000+0000</p> 
        <div class="body">
            <p>Added patches for the Rest client and the test.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-10-12T22:10:38.000+0000</p> 
        <div class="body">
            <p>Changed to patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-10-17T20:03:21.000+0000</p> 
        <div class="body">
            <p>Now in svn.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-11-08T22:46:37.000+0000</p> 
        <div class="body">
            <p>Based on your [the reporter] (private) feedback, that I requested, I agree that this is only a workaround. However, if you are looking to post files with Zend_Rest_Client you are doing it wrong. Zend_Rest_Client is a high level client, that is intended for use with Zend_Rest_Server, as it is designed at present. Future implementations will likely be able to talk to different types of servers, but as it is now, Zend_Rest_Client is only a convenient way to call class methods on the server as rest methods. Therefore, if you want to post a file, you should create a method on the server that can take a filename and file contents as arguments. An example server would look like this:</p>

<pre class="highlight"><code>
&lt;?php
class TestClass {
    public function saveFile($contents, $filename)
    {
        $path = '/tmp/' . $filename;
        file_put_contents ($path, $contents);
        return file_get_contents($path);
    }
}

class RestController extends Zend_Controller_Action
{
    public function indexAction()
    {
        $server = new Zend_Rest_Server();
        $server-&gt;setClass('TestClass');
        $server-&gt;handle($_REQUEST);
        exit();
    }
}
</code></pre>

<p>A request to this method could look like this:
<a href="http://localhost/rest/?method=saveFile&amp;contents=bogus&amp;filename=harry_potter">http://localhost/rest/â€¦</a></p>

<p>And the response would be:</p>

<pre class="highlight"><code>
bogussuccess</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-11-08T22:48:21.000+0000</p> 
        <div class="body">
            <p>Recommend to not integrate in ZF 2</p>

        </div>
    </div>
    </div>

