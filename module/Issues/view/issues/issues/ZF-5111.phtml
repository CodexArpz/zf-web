<h2>ZF-5111: Zend_Controller_HelperBroker_PriorityStack  __get case sensitivity</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-30T13:59:56.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-31T12:02:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                mike edwards (mikeedw)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>FixForZF1.12</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7027">ZF-7027</a></li>
            <li><a href="/issues/browse/ZF-7027">ZF-7027</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There is a inconsistency in case-sensitivity between the autoloading of helpers and their retrieval from PriorityStack.</p>

<p>e.g. If a helper is called "Zend_Controller_Action_Helper_SideBar", but is defined in a file called "Sidebar.php" (upper case "B" vs. lower case "b"), Zend_Loader_PluginLoader will load the class o.k. because class_exists is case insensitive. However, Zend_Controller_Action_HelperBroker_PriorityStack's __get method will not find the helper as it uses array_key_exists (which is case sensitive) to query its internal array of helpers.</p>

<p>The above scenario results in a fatal error.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-05-29T20:16:48.000+0000</p> 
        <div class="body">
            <p>Not sure this is really an issue. It's documented that loading helpers are case sensitive with a lowercase first letter.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by mike edwards (mikeedw) on 2012-05-31T12:02:06.000+0000</p> 
        <div class="body">
            <p>It is (or was, in 1.7 at least) an issue because the framework is generating a fatal error rather than handling the problem gracefully. Either throw an error at the time the plugin is loaded or explicitly check for this situation in __get and raise an exception there.</p>

        </div>
    </div>
    </div>

