<h2>ZF-3493: MSSQL: Zend_Db truncates TEXT field</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2008-06-23T02:52:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-08T07:55:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.1 (10/Feb/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-905">ZF-905</a></li>
            <li><a href="/issues/browse/ZF-6739">ZF-6739</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11675/zf-3493-mssql-odbc-2.patch">zf-3493-mssql-odbc-2.patch</a></li>
            <li><a href="/issues/secure/attachment/11674/zf-3493-mssql.patch">zf-3493-mssql.patch</a></li>
            <li><a href="/issues/secure/attachment/11673/zf-3493.patch">zf-3493.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,</p>

<p>Zend-Db does not return the correct data when querying a TEXT-field from a MSSQL database. It returns only the first 4096 bytes.</p>

<p>I think the pdo-functions are buggy, because other (older) Framworks like PEAR (mssql_-functions) don't have this bug, and we can configure the textsize in php.ini (mssql.textlimit and mssql.textsize)..</p>

<p>If this is a bug in php itself, please fix that! Zend is one of the main developers of php, and this bug must be fixed in order to use ZendFramework completely.</p>

<p>More information: <a href="http://bugs.php.net/bug.php?id=38805">http://bugs.php.net/bug.php?id=38805</a></p>

<p>Are there any known workarounds?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michael Kliewe (mkliewe) on 2008-10-14T08:33:14.000+0000</p> 
        <div class="body">
            <p>This bug is not fixed...</p>

<p>Fix Version/s    Next Mini Release (1.5.3) [ 10161 ]
Fix Version/s    1.6.1 [ 10201 ]</p>

<p>But still not working in 1.6.2!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-12-05T09:20:01.000+0000</p> 
        <div class="body">
            <p>Need some info:</p>

<p>What version of PHP?
What version of MSSQL?
Which driver are you using?  Presumably pdo_mssql? or are you using the odbc driver?</p>

<p>Thanks,
Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Kliewe (mkliewe) on 2008-12-05T16:06:20.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>I'm using PHP 5.2.6. MSSQL Server 2005. Using pdo_mssql.
You can get more information of other people having the same problem in the link above ( <a href="http://bugs.php.net/bug.php?id=38805">http://bugs.php.net/bug.php?id=38805</a> ). This is an old bug, why is it not fixed?</p>

<p>This seems to be a bug in php itself, not in Zend_Db (I think, you have to check that).... But we cannot use Zend_Db with this bug. Perhaps you have better connections to php-developers to fix this soon!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Ballard (aballard) on 2008-12-08T06:48:03.000+0000</p> 
        <div class="body">
            <p>I believe this is an issue with the PDO MSSQL driver. It was one of the reasons I actually wrote a Zend_Db adapter to use the Microsoft SQL Server Driver for PHP for our sites that use ZF and SQL Server.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2008-12-10T03:12:58.000+0000</p> 
        <div class="body">
            <p>Steph Fox is currently looking to create a fix for pdo_mssql. We had a long discussion about this. Wez Furlong also helpt to get things very clear.</p>

<p>As I cannot fix pdo_mssql I could do something else: add support for odbc in Zend_Db_Adapter_Pdo_Mssql.</p>

<p>I will provide two patches that will offer this support. Note that is not a fix for the php bug. It is an improvement (I hope) that will let you use a workaround by going through pdo_odbc instead of pdo_mssql.</p>

<p>In order for this workaround to work, you will have to enable php_pdo_odbc.dll in your php.ini if you are working on Windows.</p>

<p>In addition, you will have to add extra options when you instantiate your Zend_Db_Adapter:</p>

<pre class="highlight"><code>
$db = Zend_Db::factory('Pdo_Mssql', array(
                                     'pdoType' =&gt; 'odbc',//extra
                                     'DRIVER'   =&gt; '{SQL Server}',//extra
                                     'host'   =&gt; $server,//required = $_SERVER['COMPUTERNAME']
                                     'username' =&gt; '*************',
                                     'password' =&gt; '*************',
                                     'dbname'    =&gt; '*************',
                                 )); 
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2008-12-10T03:16:40.000+0000</p> 
        <div class="body">
            <p>Patches added for odbc support so that you can use this workaround.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2008-12-10T03:17:43.000+0000</p> 
        <div class="body">
            <p>Assign to component owner for evalutation.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2008-12-10T05:02:20.000+0000</p> 
        <div class="body">
            <p>With the new odbc-2 patch you do not need to specify the extra DRIVER option, only the pdoType option:</p>

<pre class="highlight"><code>
$db = Zend_Db::factory('Pdo_Mssql', array(
                                     'pdoType' =&gt; 'odbc',
                                     'host'   =&gt; $server,
                                     'username' =&gt; $user,
                                     'password' =&gt; $pass,
                                     'dbname'    =&gt; $dbname,
                                 ));
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2008-12-10T05:09:48.000+0000</p> 
        <div class="body">
            <p>I changed it from Bug to Patch, because there now is a patch that you can use. Besides, this is not a bug in ZF, it is a bug in pdo_mssql.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-09-01T07:51:36.000+0000</p> 
        <div class="body">
            <p>Can you please check 5.2.10, the php.net site claims this limitation does not exist in that version:</p>

<p><a href="http://bugs.php.net/bug.php?id=38805">http://bugs.php.net/bug.php?id=38805</a></p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2009-09-01T15:46:24.000+0000</p> 
        <div class="body">
            <p>Tested on Windows Vista BU against 5.2.10 (which was a pain to get working...), confirmed that the problem still exists</p>

<pre class="highlight"><code>
&lt;?php
//phpinfo();
require_once 'Zend/Loader/AutoLoader.php';
$loader = Zend_Loader_AutoLoader::getInstance();

$db = Zend_Db::factory('Pdo_Mssql', array(
                                     'pdoType' =&gt; 'mssql',
                                     'host'   =&gt; 'HIGHLANDER',
                                     'username' =&gt; '*',
                                     'password' =&gt; '*',
                                     'dbname'    =&gt; '*',
                                 ));

$result = $db-&gt;query('SELECT top 1 inhoudtekst1 as tekst FROM O_ProductenInhoud WHERE DATALENGTH(inhoudtekst1) &gt; 4096');

foreach($result as $row) {
    var_dump($row['tekst']);
}

exit();
</code></pre>

<p>The result is a truncated text of exactly 4096 chars, as var_dump conveniently reports.
I must add that I had to download the ntwdblib.dll and replace the one that is shipped with php, because that one does not work at all (part of the pain of getting this installed). I also had to put it in system32.</p>

<p>I also added these settings in php.ini:
; Valid range 0 - 2147483647.  Default = 4096.
mssql.textlimit = 2147483647</p>

<p>; Valid range 0 - 2147483647.  Default = 4096.
mssql.textsize = 2147483647</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-12-21T12:54:42.000+0000</p> 
        <div class="body">
            <p>Which patch should I be looking at?</p>

<p>Also, in very succinct terms, what exactly is the proposed solution?  I've tried creating an ODBC driver for Zend_Db but it does not pass QA (there are alot of feature missing, the standard unit tests fail, see ZF-905).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2009-12-21T16:31:26.000+0000</p> 
        <div class="body">
            <p>Not really any patch at all yet. My patch was basically a naive and dirty way to work around the issue for a specific use case. No unit tests tried at all at the time.</p>

<p>The problem lies in pdo_mssql I am sure. But for windows, we now have the sqlserver driver, of which I wasn't very much aware at the time.</p>

<p>I suppose there already is a db adapter for that...?</p>

<p>The difference between pdo_mssql and regular mssql is that the regular one can retrieve longer text columns completely (over 4096 bytes) if you change some php.ini settings. The pdo driver does not respond to that. If pdo_mssql can be fixed by the php community, than this issue will likely be resolved as well.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-01-19T07:02:27.000+0000</p> 
        <div class="body">
            <p>Proposing to close as wont-fix since it's an issue in pdo_mssql that cannot be easily worked around through php.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2010-01-20T02:23:08.000+0000</p> 
        <div class="body">
            <p>Does anybody know if PDO is maintained and if yes by whom? If not, maybe someone can stand up and try to fix it. Once fixed, we can prove that this issue no longer exist and close it. In the meantime, we are not able to fix it and indeed, should change the status accordingly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jan Olsen (janpolsen) on 2010-02-08T07:55:25.000+0000</p> 
        <div class="body">
            <p>I just went through updating ZendFramework from 0.9.3 to 1.10.0 and while it should've been a simple overwrite of all the files then it took a bit longer than that.</p>

<p>The reason... I had to manually add the attached mssql-odbc-patch as well as the changes from ZF-6739.</p>

<p>I can understand that there is the right way of implementing stuff as well as the wrong way, but reading that this issue might get changed to "wont-fix" (as well as ZF-905) and the lack of response in issue ZF-6739 (which is depending on this fix) then I fear that I have to manually make changes in all future releases of Zend Framework.</p>

<p>This fix doesn't break any functionality and just adds an extra option/setting, so why is it, that it can't be implemented?</p>

<p>Do we really have to install Microsofts SQLserver driver and if so, does that then solve the problems in this issue and the related issues (text fields above 4096 bytes, trusted connection and multiple queries).</p>

        </div>
    </div>
    </div>

