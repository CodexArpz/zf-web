<h2>ZF-2781: closeConnection should return a boolean value not exceptions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-03-02T18:01:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-10T11:24:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                thing2b (thing2b)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5050">ZF-5050</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In some cases you may want to make sure that all database connections are closed, but you may intend to reconnect them later. If you call close on a Database that does not have a connection established or the the connection is closed, an error will be generated.</p>

<p>There are 2 ways to solve this:</p>

<p>In the Zend_Db_Adapter_Mysqli there is a line that assumes that if closeConnection is called, the connection has been set.</p>

<pre><code>public function closeConnection()
{
    $this-&gt;_connection-&gt;close();
    $this-&gt;_connection = null;
}
</code></pre>

<p>If closeConnection is called twice this will generate an error. This should instead check that $this-&gt;_connection is set before it attempts to close it. If $this-&gt;_connection is not set, the value "false" should be returned.</p>

<p>Another solution is to expect the programmer to check that the connection is there first in their own code. This would require a new method called something like "isConnected" and that just checks that the connection is there. If it is not, it should return false without establishing a connection.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:58.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2008-04-03T07:45:05.000+0000</p> 
        <div class="body">
            <p>What's wrong with using a {{try...catch}} block when calling a method that may throw an exception? It seems you are using {{close()}} in unintended ways, hence the exception being thrown.</p>

<p>That said, I do tend to agree that an exception should only be thrown if it is indeed an exceptional condition where processing cannot continue. This doesn't seem to be one of those cases. Instead, the implementation can be modified to gracefully handle the case where an exception is thrown without throwing an exception.</p>

<p>Still, this would be a backward-compatibility break that may or may not make it into the next major release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-04T13:17:30.000+0000</p> 
        <div class="body">
            <p>Reassigning to Ralph since he's the new maintainer of Zend_Db</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Evans (sparky) on 2008-12-20T04:16:48.000+0000</p> 
        <div class="body">
            <p>Same issue as ZF-5050</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:24:16.000+0000</p> 
        <div class="body">
            <p>Fixed in ZF-5050</p>

        </div>
    </div>
    </div>

