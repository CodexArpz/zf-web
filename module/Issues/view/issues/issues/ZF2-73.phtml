<h2>ZF2-73: Invalid return type on Zend\Http\Response-&gt;getStatusCode()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-09-29T07:48:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-11T19:24:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Http</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When the statusCode is assigned in the static method {{fromString}} it's not converted into an int.
Then in the {{setStatusCode}} method the {{is_numeric}} check is ok because the constant exist (the status code is a string at this point and {{$const = get_called_class() . '::STATUS_CODE_' . $code;}} exists if the http status code is valid). Finally the {{statusCode}} property is assigned but as a string.</p>

<p>How to test this issue :</p>

<p>{{$response}} is a response with a spec-valid http status code.</p>

<p>{{$response-&gt;getStatusCode() === 200}}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rados≈Çaw Benkel (singles) on 2011-11-11T19:22:05.000+0000</p> 
        <div class="body">
            <p>At the end of setStatusCode(), code is casted to integer.</p>

<pre class="highlight"><code>
public function setStatusCode($code)
{
    $const = get_called_class() . '::STATUS_CODE_' . $code;
    if (!is_numeric($code) || !defined($const)) {
        $code = is_scalar($code) ? $code : gettype($code);
        throw new Exception\InvalidArgumentException(sprintf(
            'Invalid status code provided: "%s"',
            $code
        ));
    }
    $this-&gt;statusCode = (int) $code;
    return $this;
}
</code></pre>

        </div>
    </div>
    </div>

