<h2>ZF-4437: Float values containing commas are not encoded correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-01T03:01:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-20T07:58:01.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A float value such as 10.3 that is represented by 10,3 in some locales is not encoded correctly. The resulting JSON string will contain an extra comma.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-10-01T06:02:02.000+0000</p> 
        <div class="body">
            <p>Please clarify: was this result obtained using Zend_Json::encode(), or Zend_Json_Encoder::encode()? If the former, do you have ex/tjson installed? The reason I ask is that this may be an upstream (PHP) bug.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2008-10-02T13:35:22.000+0000</p> 
        <div class="body">
            <p>Json extension is instaled and loaded:</p>

<p>json support     enabled
json version     1.2.1</p>

<p>tested on PHP 5.2.5 and 5.2.6 - same output</p>

<p>And test code:</p>

<pre><code>   $data = array ();
   for($i = 1; $i &lt; 10; $i ++) {
       $data [] = rand ( 0, 10 ) / rand ( 2, 9 );
   }
        echo '&lt;pre&gt;'; var_dump ( $data ); echo '&lt;/pre&gt;';
        echo '&lt;pre&gt;json_encode'; print_r( json_encode( $data )  ); echo '&lt;/pre&gt;';
   echo '&lt;pre&gt;ZJE::e'; print_r ( Zend_Json_Encoder::encode ( $data ) ); echo '&lt;/pre&gt;';
   echo '&lt;pre&gt;ZE::e'; print_r ( Zend_Json::encode ( $data ) ); echo '&lt;/pre&gt;';
</code></pre>

<p>array(9) {
 [0]=&gt;
 int(2)
 [1]=&gt;
 float(1,14285714286)
 [2]=&gt;
 int(3)
 [3]=&gt;
 float(1,42857142857)
 [4]=&gt;
 float(1,75)
 [5]=&gt;
 float(1,33333333333)
 [6]=&gt;
 int(0)
 [7]=&gt;
 float(1,28571428571)
 [8]=&gt;
 float(0,5)
}</p>

<p>json_encode[2,1.14285714286,3,1.42857142857,1.75,1.33333333333,0,1.28571428571,0.5]</p>

<p>ZJE::e[2,1,14285714286,3,1,42857142857,1,75,1,33333333333,0,1,28571428571,0,5]</p>

<p>ZE::e[2,1.14285714286,3,1.42857142857,1.75,1.33333333333,0,1.28571428571,0.5]</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-07T12:12:28.000+0000</p> 
        <div class="body">
            <p>I'm a bit loathe to alter Zend_Json_Encoder to have different results than json_encode(). Is there a bug filed on php.net to alter this behavior for ext/json? If so, I think we can make the change and indicate in the manual in what version of PHP it is (will be) fixed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2008-11-07T12:21:12.000+0000</p> 
        <div class="body">
            <p>Hmm. Looking at the tests above it looks like json_encode() is working properly and Zend_Json_Encoder is not.</p>

<p>json_encode[2,1.14285714286,3,1.42857142857,1.75,1.33333333333,0,1.28571428571,0.5]</p>

<p>ZJE::e[2,1,14285714286,3,1,42857142857,1,75,1,33333333333,0,1,28571428571,0,5]</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-03-20T07:58:00.000+0000</p> 
        <div class="body">
            <p>I reproduced this issue and committed a fix in r14400, scheduled for 1.8 release</p>

        </div>
    </div>
    </div>

