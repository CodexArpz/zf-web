<h2>ZF-12161: Allow setting custom prefix path for CAPTCHA adapters in Zend_Form_Element_Captcha</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-04-20T00:55:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-07T22:13:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.12 (22/Jun/12)</li>
            <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>FixForZF1.12</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15028/Captcha.php.patch">Captcha.php.patch</a></li>
            <li><a href="/issues/secure/attachment/15029/Element.patch">Element.patch</a></li>
            <li><a href="/issues/secure/attachment/15068/ZF-12161_adamlundrigan.patch">ZF-12161_adamlundrigan.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When {{Zend_Form_Element_Captcha::setOptions()}} runs, it runs {{Zend_Form_Element_Captcha::setCaptcha()}} BEFORE it runs {{Zend_Form_Element::setOptions()}}. This causes it to attempt to load Captcha Adapters WITHOUT first checking prefix paths passed in the element config. There is no way to specify a custom prefix path for the captcha plugin loader.</p>

<p>Here's the fix:</p>

<pre class="highlight"><code>
public function setOptions(array $options)
{
        $captcha = NULL;
        $captchaOptions = array();
        if (array_key_exists('captcha', $options)) {
            $captcha = $options['captcha'];
            if (array_key_exists('captchaOptions', $options)) {
                $captchaOptions = $options['captchaOptions'];
                unset($options['captchaOptions']);
            }
            unset($options['captcha']);
        }
        parent::setOptions($options);
        if($captcha !== NULL)
        {
            $this-&gt;setCaptcha($captcha, $captchaOptions);
        }
        return $this;
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-04-20T07:40:08.000+0000</p> 
        <div class="body">
            <p>Hi Tim,
can you write an unit test for your fix? Thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tim Klever (tklever) on 2012-04-23T21:11:29.000+0000</p> 
        <div class="body">
            <p>Frank, I'm having a bit of trouble thinking up a unit test.</p>

<p>I can't test the setOptioons function itself (as by the completion of the function, everything will be in place). Testing requires me to have a captcha adapter with a known path that is outside the Zend library. This is going to vary based on testing environment, hence my test would be specific to me.</p>

<p>I'd need to somehow have the test run at line 166 of Zend_Form_Element_Captcha.</p>

<p>The problem is that setCaptcha runs at line 159, and if a custom prefixPath has been passed, it will not be in the plugin loader until line 166. I'm not sure how to write a test that would check the pluginLoader at line 166 and throw an exception if the pluginLoader doesn't contain the passed prefixPath.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-04-24T08:51:33.000+0000</p> 
        <div class="body">
            <p>Patch and unit test added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-07T21:57:21.000+0000</p> 
        <div class="body">
            <p>Updated patch to correct issue with unit test (use of assertInstanceOf, which is not PHPUnit 3.4 compatible)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-07T22:13:43.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk (1.12.0): r24773
Fixed in release-1.11 (1.11.12): r24774</p>

        </div>
    </div>
    </div>

