<h2>ZF-5750: image/pjpeg not included in default $mimetype array</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-02-11T13:38:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-02-11T13:49:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate_File</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Internet explorer (checked with version 7) can treat uploaded images as image/pjpeg which then fails the validation of the following simple code:</p>

<p>$element = new Zend_Form_Element_File("categoryImage");
        $element-&gt;setLabel("Image")
                -&gt;setDestination('./public/uploads/')
                -&gt;addValidator('IsImage', false);
        $form-&gt;addElement($element);</p>

<p>Not sure if its a bug or an improvement as this issue is related to IEs handling of content types - its fine in safari, firefox etc. Suggest that 'image/pjpeg' be added to the array list which then solved the issue for me. A google search for 'pjpeg internet explorer' will show other (non-zf) users with the same issue.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-02-11T13:48:40.000+0000</p> 
        <div class="body">
            <p>The problem is that this mimetype is not defined in the standards. The IsImage validator checks only for known standard images types defined by IANA.</p>

<p>So when you want to accept this special type of mime you need to use the MimeType validator and use "image" as mimetype.</p>

<p>But this would also accept types like "image/my_own_mimeimagetype"</p>

        </div>
    </div>
    </div>

