<h2>ZF-10561: Ability to utilize a Cache for a Session SaveHandler: Zend_Session_SaveHandler_Cache</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-10-15T10:59:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-10-19T09:17:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Session</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13341/SessionSaveHandlerCache.patch">SessionSaveHandlerCache.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Utilizing a Cache as a session saveHandler is like having a saveHandler as a database except a bit more flexible.</p>

<p>The cache supports the Zend_Cache_Core frontend and any backend attached to it.
This becomes extremely valuable for things like Memcache / Memcached.  In a development environment we have even used APC.</p>

<p>Attached is a patch for this improvement that contains the SaveHandler support and tests.</p>

<p>The files are as follows:
M       tests/Zend/Session/SaveHandler/AllTests.php
A       tests/Zend/Session/SaveHandler/CacheTest.php
A       library/Zend/Session/SaveHandler/Cache.php</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mike Willbanks (digitalstruct) on 2010-10-15T11:05:17.000+0000</p> 
        <div class="body">
            <p>Usage:</p>

<p>Configuration INI File (for Zend_Application):
resources.session.saveHandler.class        = Zend_Session_SaveHandler_Cache</p>

<p>Bootstrap.php (for Zend_Application):</p>

<pre class="literal">
    protected function _initSessionCache()
        $this-&gt;bootstrap('session');
        $opts = $this-&gt;getOptions();
        if ('Zend_Session_SaveHandler_Cache' == $opts['resources']['session']['saveHandler']['class']) {
            $cache = $this-&gt;bootstrap('cachemanager')
                          -&gt;getResource('cachemanager')
                          -&gt;getCache('memcached');
            Zend_Session::getSaveHandler()-&gt;setCache($cache);
        }
    }
</pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2010-10-17T05:21:11.000+0000</p> 
        <div class="body">
            <p>Hi Mike</p>

<p>There a need of elaborate a propose, but already exists a porpose to this component <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Session_SaveHandler_Cache+-+Nick+Daugherty">http://framework.zend.com/wiki/display/â€¦</a>.</p>

<p>I have a code similar the this but propose only would accepted until final of August.</p>

<p>Also Zend_Session in ZF2 has changes and Zend_Cache is in phase refactoring.</p>

<p>Greetings
Ramon</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-10-19T09:17:09.000+0000</p> 
        <div class="body">
            <p>For the record: the SaveHandler functionality in ZF2 is not much changed, if at all, as it simply provides an interface for building a component that works with session_set_save_handler.</p>

<p>Mike -- I'd forgotten about the cache savehandler, and that it was already accepted. Closing this issue, as it will be implemented for ZF2.</p>

        </div>
    </div>
    </div>

