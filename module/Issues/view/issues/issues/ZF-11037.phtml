<h2>ZF-11037: Zend_Db_Table_Abstract::setMetadataCacheInClass(false) does not affect the behavior</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-02-04T11:47:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-04T11:47:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The following code should be self-explanatory:</p>

<p>class Test extends Zend_Db_Table_Abstract { protected $_name = 'test'; }
$test = new Test;
$test-&gt;setMetadataCacheInClass(false);
$info = $test-&gt;info();
$test-&gt;getAdapter()-&gt;query('ALTER TABLE test ADD somefield INT');
try {
    $row = $test-&gt;createRow();
    $row-&gt;somefield = 'content';
}
catch (Zend_Db_Table_Row_Exception $e) {
    echo $e-&gt;getMessage(), PHP_EOL;
}
var_dump($info === $test-&gt;info());</p>

<p>Outputs:
Specified column "somefield" is not in the row
bool(true)</p>

<p>The same thing happens if the metadata is hardcoded:
class Test extends Zend_Db_Table_Abstract { protected $_name = 'test'; protected $_metadata = array(...); }</p>

<p>It seems that the only option to get a "fresh" metadata is to create a new instance of the table.
In that case, I can't see what the purpose of setMetadataCacheInClass(false) is.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

