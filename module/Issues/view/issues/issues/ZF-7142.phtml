<h2>ZF-7142: Get e-mail structure</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-06-27T11:35:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-28T03:41:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                J?nis (janis)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Nico Edtinger (nico)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail_Storage</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello!</p>

<p>There is a PHP function "imap_fetchstructure" that tells the transfer encoding of the message (for example "BASE64" or "QUOTED-PRINTABLE"). Currently it seems that Zend framework cannot give this information. But it is important for the very simple case when I just need to list all the e-mails and display their content. Non-ASCII characters are encoded in the content returned by function "getContent" â€” I cannot display the message in such state to the users. :(</p>

<p>Thanks!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2009-06-27T15:59:39.000+0000</p> 
        <div class="body">
            <p>The messages returned by Zend_Mail_Storage implements RecursiveIterator. If you need to flatten the structure use RecursiveIteratorIterator. In every returned part you can use the same methods to get the headers and body of the part. See the docs and the demo for examples.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by J?nis (janis) on 2009-06-28T03:41:29.000+0000</p> 
        <div class="body">
            <p>Thank you for the comment! The transfer encoding is indeed obtainable with $oMessage-&gt;contentTransferEncoding or $oMessagePart-&gt;contentTransferEncoding.</p>

        </div>
    </div>
    </div>

