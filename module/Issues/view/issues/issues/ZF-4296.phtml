<h2>ZF-4296: How to retrieve values from nested arrays with Zend_Controller_Request_Http's getQuery(), getPost() and getCookie() methods</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-09-15T07:36:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-03-16T03:46:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Carlos Henrique Reche (carlosreche)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In the current <a href="http://framework.zend.com/apidoc/core/todolist.html">todo list</a>, there are three similar topics for the {{Zend_Controller_Request_Http}} about making available to retrieve values from nested arrays in the <em>GET, _POST and _COOKIE superglobals, via the _getQuery()</em>, <em>getPost()</em> and <em>getCookie()</em> methods. The solution I suggest is to also accept an array as the first parameter of each method, wich would have the sequence of keys to walk through the nested arrays.</p>

<pre class="highlight"><code>

    public function getQuery($key = null, $default = null)
    {
        if (null === $key) {
            return $_GET;
        }
        if (is_array($key)) {
            $value = $_GET;
            foreach ($key as $index) {
                if (!isset($value[$index])) {
                    return $default;
                }
                $value = $value[$index];
            }
            return $value;
        }

        return (isset($_GET[$key])) ? $_GET[$key] : $default;
    }

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-09-15T14:54:41.000+0000</p> 
        <div class="body">
            <p>A trick with RecursiveArrayIterator should make this work</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-05T12:06:44.000+0000</p> 
        <div class="body">
            <p>How hard is it really to simply pull the array and access it?</p>

<pre class="highlight"><code>
$get = $this-&gt;getQuery();
$value = (isset($get['foo']['bar'])) ? $get['foo']['bar'] : $default;
</code></pre>

<p>I'm not sure I see a burning need for this functionality.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tobias Hoffmann (demonkoryu) on 2011-03-16T03:46:17.000+0000</p> 
        <div class="body">
            <p>It's a convenience method, and a cleaner way than descending through the array by yourself.
If this was coded in, it would be possible to use it in declarative ways:</p>

<p>// fictional code: 
 $dataKey = 'billing/firstname'; 
 $data = $request-&gt;getPost($dataKey);</p>

        </div>
    </div>
    </div>

