<h2>ZF-2101: Can't execute multiple stored procedures with Pdo_Mysql</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-10-26T08:22:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-07T17:24:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Darby Felton (darby)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2097">ZF-2097</a></li>
            <li><a href="/issues/browse/ZF-3343">ZF-3343</a></li>
            <li><a href="/issues/browse/ZF-348">ZF-348</a></li>
            <li><a href="/issues/browse/ZF-5576">ZF-5576</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Patrick Calkins writes:</p>

<p>{quote}
Code:</p>

<pre class="highlight"><code>
$pdoParams = array(
    PDO::MYSQL_ATTR_USE_BUFFERED_QUERY =&gt; true
);

$params = array(
    'host'           =&gt; '127.0.0.1',
    'username'       =&gt; 'webuser',
    'password'       =&gt; 'xxxxxx',
    'dbname'         =&gt; 'test',
    'driver_options' =&gt; $pdoParams
);

$db = Zend_Db::factory('Pdo_Mysql', $params);

// Stored procedure returns a single row
$stmt = $db-&gt;prepare('CALL get_customer_by_id(:customerId)');
$stmt-&gt;bindParam('customerId', $customerId, PDO::PARAM_INT);
$stmt-&gt;execute();
$result = $stmt-&gt;fetchAll();
print_r($result);

$stmt-&gt;closeCursor();

// Stored procedure returns a single row
$stmt = $db-&gt;prepare('CALL get_address_by_id(:customerId)');
$stmt-&gt;bindParam('customerId', $customerId, PDO::PARAM_INT);
$stmt-&gt;execute();
$result = $stmt-&gt;fetchAll();
print_r($result);
</code></pre>

<p>This will consistently throw this error: 'SQLSTATE[HY000]: General error:
2014 Cannot execute queries while other unbuffered queries are active.
Consider using PDOStatement::fetchAll(). Alternatively, if your code is only
ever going to run against mysql, you may enable query buffering by setting
the PDO::MYSQL_ATTR_USE_BUFFERED_QUERY attribute.'</p>

<p>If you insert $stmt-&gt;nextRowset(); before $stmt-&gt;closeCursor(); it will
throw this error: 'SQLSTATE[HYC00]: Optional feature not implemented'</p>

<p>This appears to be a bug, and I haven't found any more info as to its status
lately. Is this correct??
{quote}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-10-26T08:23:14.000+0000</p> 
        <div class="body">
            <p>Good unit tests that execute multiple stored procedures would hopefully expose the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:32.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:55.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:53.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2008-05-26T23:24:12.000+0000</p> 
        <div class="body">
            <p>Resolved in r9539</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-06-17T08:36:40.000+0000</p> 
        <div class="body">
            <p>I think perhaps this issue needs to be merged into the 1.5 branch.  Can someone from the community check to see that this works as they expect in their application (the fix is in trunk)?</p>

<p>-Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:38:59.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Brian Fisher (brian3f) on 2009-01-14T09:11:55.000+0000</p> 
        <div class="body">
            <p>I've just tested this in version 1.7.2 and I'm still getting the error.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by John Simone (jsimone) on 2009-01-19T12:41:16.000+0000</p> 
        <div class="body">
            <p>It seems to be, at least partially, related to MySql version. Specifically I have the issue with 5.1.3 while a few co-workers and our integration server have no issues running the same code with MySql 5.0.45.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sébastien Barbieri (scips) on 2009-07-22T06:46:26.000+0000</p> 
        <div class="body">
            <p>This issue is present for those who are not using Zend Server CE. If you install Zend Server CE (which replace php5 PDO lib right?), the issue disapear, don't seems to be linked to ZF itself.</p>

<p>Could someone double check this? Because I'm going insane.</p>

<p>Thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-07-22T12:13:52.000+0000</p> 
        <div class="body">
            <p>It seems like the same version of ZF on different versions of PHP showing different behaviors is PHP (PDO) specific, how can we solve this in ZF?</p>

<p>Do you have any PDO code (non-zf) that can demonstrate this problem running on all PHP platforms?</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oliver Kastler (1730) on 2009-07-22T14:10:30.000+0000</p> 
        <div class="body">
            <p>I use to add this to the Db/Adapter/Pdo/Abstract.php _connect() method, inside the try/catch block:
$this-&gt;_connection-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, true);</p>

<p>That solves this issue for me, I had to put that into place for the last one or two years, into every new update...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sébastien Barbieri (scips) on 2009-07-23T01:26:20.000+0000</p> 
        <div class="body">
            <pre><code>$this-&gt;dbh = new PDO($this-&gt;options['dsn'], $this-&gt;options['username'], $this-&gt;options['password'], array(PDO::MYSQL_ATTR_INIT_COMMAND =&gt; 'SET NAMES '.$this-&gt;options['charset']));
$this-&gt;dbh-&gt;setAttribute(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, true);
$this-&gt;dbh-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, true);
    $sth = $this-&gt;dbh-&gt;prepare($_stored_proc_1);
            $sth-&gt;bindValue('I_bind', $value, PDO::PARAM_STR);
        $sth-&gt;execute();
        $object = $sth-&gt;fetchAll(PDO::FETCH_ASSOC);
        $sth-&gt;closeCursor();
    $sth = $this-&gt;dbh-&gt;prepare($_stored_proc_2);
            $sth-&gt;bindValue('I_bind', $value, PDO::PARAM_STR);
        $sth-&gt;execute();
        $object = $sth-&gt;fetchAll(PDO::FETCH_ASSOC);
        $sth-&gt;closeCursor();
</code></pre>

<p>The code above causes the issue</p>

<p>with any PHP version windows/linux/mac os x (WAMP 2.0f / ubuntu 9.4 default PHP5 / macport default PHP 5 ) but not with the PHP provided with Zend Server CE on linux, I still have to test it on windows and mac ... I don't think I'll do that this week, probably next week.</p>

<p>However I'm pretty sure it's not ZF related at all... I'll post this in PHP 5 bugs if you can confirm</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sébastien Barbieri (scips) on 2009-07-23T01:40:04.000+0000</p> 
        <div class="body">
            <p>Seems already there: #44081 <a href="http://bugs.php.net/bug.php?id=44081">http://bugs.php.net/bug.php?id=44081</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2011-02-17T14:28:58.000+0000</p> 
        <div class="body">
            <p>I am postponing this issue to be addressed with ZF 2.0.</p>

<p>It seems there are too many moving parts involved here to provide a backwards compability way to ensure that ZF's Db Abstraction works the same in both PHP 5.2 and PHP 5.3.</p>

        </div>
    </div>
    </div>

