<h2>ZF-4730: Add possibility to check group-membership in Zend_Auth_Adapter_Ldap</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-10-28T08:08:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-11T04:26:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.2 (25/Aug/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Kliewe (mkliewe)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Stefan Gehrig (sgehrig)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Auth_Adapter_Ldap</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11614/BDBAuthAdapterLdap.php">BDBAuthAdapterLdap.php</a></li>
            <li><a href="/issues/secure/attachment/11615/BDBLdap.php">BDBLdap.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using Zend_Auth_Adapter_Ldap, there is missing an additional check if a user is member of a specific group.</p>

<p>I found this in an old proposal:
<a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Auth_Adapter_Ldap?showComments=false">http://framework.zend.com/wiki/display/â€¦</a></p>

<p>'group_dn' : the DN of a group the authenticated user should be member of. If the user is authenticated against the LDAP, but is not member of the specified group, the authentication will fail (not implemented yet).</p>

<p>This feature is also available in PEAR_Auth, and I think many people out there would like to use such a feature, because mostly not everybody in a ldap-directory should be able to login, but specific groups (like e.g. departments in a company, or just admins and not "normal users").</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michael Kliewe (mkliewe) on 2008-10-31T05:40:01.000+0000</p> 
        <div class="body">
            <p>Here are my derived classes where I added the descripted feature.</p>

<p>You can use them to add the functionality to Zend_Ldap and Zend_Auth_Adapter_Ldap.</p>

<p>I'm not a specialist in Zend-Coding-Standards, but it will help you.</p>

<p>I used the following config to use the new feature:</p>

<p>ldap.server1.host = ldap.domain.de
ldap.server1.useSsl = false</p>

<p>ldap.server1.accountDomainName = blub.domain.com
ldap.server1.accountDomainNameShort = blub
ldap.server1.accountCanonicalForm = 3
ldap.server1.accountFilterFormat = "(&amp;(objectClass=user)(sAMAccountName=%s))"</p>

<p>ldap.server1.username = "cn=ldap,ou=myCompany,DC=blub,DC=domain,DC=com"
ldap.server1.password = mypwd
ldap.server1.baseDn = "DC=blub,DC=domain,DC=com"
ldap.server1.bindRequiresDn = true</p>

<p>ldap.server1.groups.1 = "Group 1 Admins"
ldap.server1.groups.2 = "Group 2 Germany Account Manager"</p>

<p>ldap.server1.groupAttr = "samAccountName"
ldap.server1.groupFilter = "(objectClass=group)"
ldap.server1.memberAttr = "member"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-08-07T04:45:45.000+0000</p> 
        <div class="body">
            <p>Assigning to Stefan Gehrig</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Gehrig (sgehrig) on 2009-08-07T12:21:25.000+0000</p> 
        <div class="body">
            <p>Not sure where to put this new feature...
Generally I'd say that this belogs in Zend_Auth_Adapter_Ldap but the current structure will make adding this very hacky as the whole authentication logic is actually situated in Zend_Ldap and all parameters are passed into Zend_Ldap as they are.</p>

<p>I really would like to separate the core LDAP functionality (Zend_Ldap) from everthing that's related to authentication (Zend_Ldap_Auth_Adapter_Ldap) - but that would surely break BC.</p>

<p>I will have a look at this one - perhaps it's possible to refactor the thing and to add the group-membership-feature along the way without breaking BC.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Gehrig (sgehrig) on 2009-08-11T04:26:29.000+0000</p> 
        <div class="body">
            <p>Feature request closed in trunk rev. 17554.</p>

<p>Added the possibility to pass the following options to Zend_Auth_Adapter_Ldap</p>

<pre class="highlight"><code>
$adapterOptions = array(
    'group'       =&gt; null, // the group the user must be member of; if NULL group-membership-check is disabled
    'groupDn'     =&gt; $ldap-&gt;getBaseDn(), // the parent DN under which the groups are located; defaults to the baseDn of the underlying Zend_Ldap
    'groupScope'  =&gt; Zend_Ldap::SEARCH_SCOPE_SUB, // the search scope when searching for groups
    'groupAttr'   =&gt; 'cn', // the attribute name for the RDN
    'groupFilter' =&gt; 'objectClass=groupOfUniqueNames', // an additional group filter that's added to the search filter
    'memberAttr'  =&gt; 'uniqueMember', // the group attribute in which to look for the user
    'memberIsDn'  =&gt; true // if TRUE then the account DN is used to check membership, otherwise the canonical account name is used
);
</code></pre>

<p>The options are not passed to the underlying Zend_Ldap so the group-membership-check is only available when using Zend_Auth_Adapter_Ldap.</p>

        </div>
    </div>
    </div>

