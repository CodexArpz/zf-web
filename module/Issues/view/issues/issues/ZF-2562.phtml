<h2>ZF-2562: Create interfaces for the various Zend_Form classes</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-02-04T11:49:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11148/Interface.php">Interface.php</a></li>
            <li><a href="/issues/secure/attachment/11147/Interface.php">Interface.php</a></li>
            <li><a href="/issues/secure/attachment/11146/Interface.php">Interface.php</a></li>
            <li><a href="/issues/secure/attachment/11145/Interface.php">Interface.php</a></li>
            <li><a href="/issues/secure/attachment/11144/Interface.php">Interface.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, Zend_Form has only concrete classes. For issues of composition and extendibility, we should have one or more interfaces which can be used to create alternate implementations.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-13T13:55:56.000+0000</p> 
        <div class="body">
            <p>Base interface covering shared functionality of all class types</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-13T13:56:21.000+0000</p> 
        <div class="body">
            <p>Form interface</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-13T13:56:51.000+0000</p> 
        <div class="body">
            <p>Display Group Interface</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-13T13:57:09.000+0000</p> 
        <div class="body">
            <p>Element interface</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-13T13:57:33.000+0000</p> 
        <div class="body">
            <p>SubForm interface</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-13T13:59:48.000+0000</p> 
        <div class="body">
            <p>The interfaces became too bloated and complex to be usable. While there were a finite number of methods required for each, there were also issues with multiple interfaces interfering with each other (e.g., Iterator, Zend_Form_Interface), and the fact that Zend_Form itself implemented all but the Element and DisplayGroup interfaces in order to keep the current API.</p>

<p>Closing as "Won't Fix".</p>

        </div>
    </div>
    </div>

