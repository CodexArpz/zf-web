<h2>ZF-5014: Multiple master files for Zend_Cache_Frontend_File</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-11-20T18:34:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-24T10:09:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>is it planned to integrate the possibility of using multiple master files for Zend_Cache_Frontend_File.</p>

<p>Use case for exmaple:</p>

<ul><li>parse various configuration files and build an object on these informations</li>
<li>store this serialized object in a Zend_Cache_Backend</li>
</ul><p>Now if you have only one master file you cannot monitor all neccesary config files for changes.
I extended Zend_Cache_Frontend_File for this purpose and i wanted to share this idea with the community.
I replaced the master_file string by an array and adapted the tests to work with the array.</p>

<pre class="highlight"><code>
public function __construct(array $options = array()) {

    while (list($name, $value) = each($options)) {
        $this-&gt;setOption($name, $value);
    }

    if (!isset($this-&gt;_specificOptions['master_file'])) {
        Zend_Cache::throwException('master_file option must be set');
    }

    if (!is_array($this-&gt;_specificOptions['master_file'])) {
        Zend_Cache::throwException('master_file option must contain an array');
    }

    clearstatcache();

    foreach($this-&gt;_specificOptions['master_file'] as $masterFile) {
        if (!($this-&gt;_masterFile_mtime[] = @filemtime($masterFile))) {
            Zend_Cache::throwException('Unable to read master_file : '.$masterFile);
        }    
    }
}
</code></pre>

<pre class="highlight"><code>
public function test($id) {

    $lastModified = parent::test($id);
    $maxModified = 0;

    if ($lastModified) {
        foreach($this-&gt;_masterFile_mtime as $masterFile_mtime) {
            if ($lastModified &lt; $masterFile_mtime) {
                return false;
            }
            if($masterFile_mtime &gt; $maxModified) $maxModified = $masterFile_mtime;
        }
        return $maxModified;
    }
    return false;
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-11-24T10:09:39.000+0000</p> 
        <div class="body">
            <p>duplicate with #ZF-4247</p>

        </div>
    </div>
    </div>

