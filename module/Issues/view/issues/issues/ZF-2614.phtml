<h2>ZF-2614: findDependentRowset(...)  bugs in loop</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-11T12:46:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-31T20:27:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Mathieu Decaffmeyer (mathi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I use findDependentRowset for each Zend_Db_Table_Row_Abstract object of my fetchAll query.
Since 1.5 version, the sql queries are wrong if I add the third parameter.</p>

<p>I logged the queries via the profiler :</p>

<p>Without third parameter :
SELECT
    <code>photos_article</code>.<code>id_photo</code>,
    <code>photos_article</code>.<code>path</code>,
    <code>photos_article</code>.<code>article_id</code>
FROM <code>photos_article</code>
WHERE
    (<code>article_id</code> = 1)</p>

<hr /><p>SELECT
    <code>photos_article</code>.<code>id_photo</code>,
    <code>photos_article</code>.<code>path</code>,
    <code>photos_article</code>.<code>article_id</code>
FROM <code>photos_article</code>
WHERE
    (<code>article_id</code> = 2)
........</p>

<p>With third parameter (see code below) :
SELECT
    <code>photos_article</code>.*
FROM <code>photos_article</code>
WHERE
    (to_delete = 0)
    AND (<code>article_id</code> = '1')</p>

<hr /><p>SELECT
    <code>photos_article</code>.*
FROM <code>photos_article</code>
WHERE
    (to_delete = 0)
    AND (<code>article_id</code> = '1')
    AND (<code>article_id</code> = '2')   &lt;----- This will never work
........</p>

<p>Here is the code in my application:</p>

<p>$articles = new Articles();   // &lt;- extends Zend_Db_Table_Abstract
$myArticles = $articles-&gt;fetchAll($where, $order);</p>

<p>$articlePhotos = new ArticlePhotos();   // &lt;- extends Zend_Db_Table_Abstract
$selectPhotos= $articlePhotos-&gt;select()-&gt;where('to_delete = ?', 0);</p>

<p>foreach ($myArticles as $article) {
   [...]
   echo $article-&gt;findDependentRowset('ArticlePhotos', null, $selectPhotos)-&gt;count();
   [...]
}</p>

<p>the problem is located on line 813 in file Zend_Db_Table_Row_Abstract :
$select-&gt;where("$dependentColumn = ?", $value, $type);</p>

<p>a solution could be ( probably stupid :) ) :
$selectTmp = clone $select;
$selectTmp-&gt;where("$dependentColumn = ?", $value, $type);
then it works</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-02-25T14:00:48.000+0000</p> 
        <div class="body">
            <p>Unsetting 'fix version priority' until this issue is reviewed. Setting correct 'affects version'.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2008-02-25T16:34:19.000+0000</p> 
        <div class="body">
            <p>OK, I've identified the bug and the cause within Zend_Db_Select. I'll investigate a fix shortly - the 'major' fix priority is warranted.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mathieu Decaffmeyer (mathi) on 2008-05-15T03:20:36.000+0000</p> 
        <div class="body">
            <p>Hello, may I know when this major bug will approximatively be resolved ? Thank you for any info.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2008-06-19T04:56:17.000+0000</p> 
        <div class="body">
            <p>I'm inclined not to be treating this as a bug. It's a known behaviour for objects to be passed by reference.</p>

<p>In your example, you could remove the issue simply by re-ordering your query to:-</p>

<pre class="highlight"><code>$articles = new Articles(); // &lt;- extends Zend_Db_Table_Abstract
$myArticles = $articles-&gt;fetchAll($where, $order);

$articlePhotos = new ArticlePhotos(); // &lt;- extends Zend_Db_Table_Abstract

foreach ($myArticles as $article) {
    $selectPhotos= $articlePhotos-&gt;select()-&gt;where('to_delete = ?', 0);
    [...]
    echo $article-&gt;findDependentRowset('ArticlePhotos', null, $selectPhotos)-&gt;count();
    [...]
}</code></pre>

<p>Unless there's a particularly critical reason that this behaviour is undesirable, I'll be marking this as 'won't fix'</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mathieu Decaffmeyer (mathi) on 2008-07-22T07:47:14.000+0000</p> 
        <div class="body">
            <p>It was narural for me to create the WHERE clause before the loop as it was the same for each iteration.
If there are specific reasons that it needs to be passed by reference, well then close this bug.
Thank you</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-06T10:51:44.000+0000</p> 
        <div class="body">
            <p>No action on this issue for too long. I'm reassigning to Ralph for re-evaluation and categorization.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:15:41.000+0000</p> 
        <div class="body">
            <p>Will evaluate this within 2 weeks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-07-17T13:58:39.000+0000</p> 
        <div class="body">
            <p>When using Zend_Db_Table_Select objects, they are typically passed by reference, and in using them, their state is typically changed (this is the nature of Zend_Db_Table_Select to fill in the from part when it needs to).</p>

<p>Since this is the case, its best that if you want to reuse such objects, you clone them first.  This will preserve their state inside the table consuming them.</p>

<p>-ralph</p>

        </div>
    </div>
    </div>

