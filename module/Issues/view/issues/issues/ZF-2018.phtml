<h2>ZF-2018: getQueryParams() returns wrong array</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-10-01T04:03:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-13T00:34:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.1 (15/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Martijn Korse (themarty)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Mickael Perraud (mikaelkael)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Profiler</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Consider the following snippet:</p>

<pre class="highlight"><code>
$params = array ( 
    'host'     =&gt; 'localhost',
    'username' =&gt; 'user',
    'password' =&gt; 'pass',
    'dbname'   =&gt; 'test',
    'profiler' =&gt; true
); 
 
$db = Zend_Db::factory('PDO_MYSQL', $params);

$query = "SELECT * FROM table WHERE field1 = ? AND field2 = ?";

$stmt = $db-&gt;query(
            $query,
            array(
                'value1',
                'value2'
            )
        );

$profiler = $db-&gt;getProfiler();
$profile = $profiler-&gt;getLastQueryProfile();
var_dump($profile-&gt;getQueryParams());
</code></pre>

<p>The output of the var_dump will be:
array(2) { [1]=&gt;  string(4) "value2" [2]=&gt;  string(4) "value2" }</p>

<p>Whereas the first value should be <em>value1</em>, not value2.
I've tested it with bigger arrays too and in every testcase the whole array is filled with the value of the last item.</p>

<p>Even though getQueryParams returns the wrong values, he values are correctly inserted into the prepared-statement.</p>

<p>Although it's only a minor loss of functionality, I put <em>Major</em> as the priority because there is no easy workaround. At least, i don't know any way to find out which values have been given to the prepared statement without this function.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-10-01T12:25:54.000+0000</p> 
        <div class="body">
            <p>Assigned to Bill</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:33.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:57.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:54.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2008-09-13T00:34:43.000+0000</p> 
        <div class="body">
            <p>Cannot reproduce with the same piece of code. Probably corrected by SVN6163 and SVN6170 even if it were not the initial goal.</p>

        </div>
    </div>
    </div>

