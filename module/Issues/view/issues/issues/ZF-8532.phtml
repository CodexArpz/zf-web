<h2>ZF-8532: Zend_Filter::filterStatic() and autoload error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-12-12T12:00:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-12-12T12:13:26.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jan Kastanek (toby77)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I get fatal error "Cannot redeclare class Zend_Filter_StringTrim" on this code:</p>

<p>Zend_Filter::addDefaultNamespaces(array('MyNamespace'));
Zend_Filter::filterStatic(' foo ', 'StringTrim'));</p>

<p>I use autoloader in standard way:</p>

<p>require_once 'Zend/Loader/Autoloader.php';
$loader = Zend_Loader_Autoloader::getInstance();</p>

<p>There is some problem with custom namespace. It was solved by changing this code in Zend/Filter.php[172]:</p>

<p>if (!class_exists($className)) {</p>

<p>to call with disabled autoload:</p>

<p>if (!class_exists($className, false)) {</p>

<p>But I'm not sure if it is good solution.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-12-12T12:13:26.000+0000</p> 
        <div class="body">
            <p>Not an issue</p>

<p>Changing the component, so classes would no longer be loaded would not be a good idea.</p>

<p>The reason seems that you have declared the same classname within 2 different files. This, of course, throws an exception.</p>

<p>It is also to note that the code line you gave and the release you gave do not conform... line 172: $className = $namespace . '_' . ucfirst($classBaseName); would NEVER throw an exception.</p>

<p>Feel free to reopen the issue when you have additional informations.</p>

        </div>
    </div>
    </div>

