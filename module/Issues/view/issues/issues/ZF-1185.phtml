<h2>ZF-1185: Table relationships methods return standard Row/Rowset, not custom Row/Rowset</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-04-02T16:49:56.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:01.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.3 (05/May/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Darby Felton (darby)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If I try to query for a Row or Rowset through a table relationship, I expect the returned classes to be based on the custom classes defined in the destination table class.</p>

<p>Instead, it appears to be returning standard classes Zend_Db_Table_Row/Rowset.</p>

<p>Please make sure the table-relationships feature supports the custom Row/Rowset classes of the destination table queried.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-04-10T16:29:24.000+0000</p> 
        <div class="body">
            <p>Assigning to Darby.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-04-16T18:14:59.000+0000</p> 
        <div class="body">
            <p>Snippet of <a href="http://www.nabble.com/Table-relationships-rowsets-don%27t-return-class-from-%24_rowClass-tf3484758s16154.html">original thread on fw-db mailing list</a> (by [~abu_hurayrah]):</p>

<p>"Namely, what is return from a call to the findManyToManyRowset (via the magic method routine) is not an instance of your custom class from the Table definition, but a plain-jane Zend_Db_Table_Rowset.  I didn't read anything in the documentation about this nor did I find a post on the issue, so if I missed, I do sincerely apologize.  Is this a bug, a feature, or am I just misunderstanding something?"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-04-17T18:02:36.000+0000</p> 
        <div class="body">
            <p>I have written unit tests that confirm that this functionality is working. It is important to note, however, in which situations custom Row and Rowset classes may be returned by the table relationships methods.</p>

<p>The {{$_rowClass}} and {{$_rowsetClass}} protected properties belong to classes extending {{Zend_Db_Table_Abstract}}. These properties may be set in three different ways:</p>

<h1>Override the properties within an extending class. For example:</h1>

<pre class="highlight"><code>
class SomeTable extends Zend_Db_Table_Abstract
{
    protected $_rowClass    = 'SomeRowClass';
    protected $_rowsetClass = 'SomeRowsetClass';
}
</code></pre>

<h1>Instantiate the class with the appropriate configuration directives. For example:</h1>

<pre class="highlight"><code>
class SomeTable extends Zend_Db_Table_Abstract
{}

$someTable = new SomeTable(array(
    'rowClass'    =&gt; 'SomeRowClass',
    'rowsetClass' =&gt; 'SomeRowsetClass'
    );
</code></pre>

<h1>Call {{setRowClass()}} and {{setRowsetClass()}} upon an existing instance. For example:</h1>

<pre class="highlight"><code>
assert($someTable instanceof Zend_Db_Table_Abstract);
$someTable-&gt;setRowClass('SomeRowClass');
$someTable-&gt;setRowsetClass('SomeRowsetClass');
</code></pre>

<p>If you use either of the latter two options, you must pass the affected instance to the appropriate relationships method, such as:</p>

<ul><li>{{Zend_Db_Table_Row_Abstract::findDependentRowset()}}</li>
<li>{{Zend_Db_Table_Row_Abstract::findParentRow()}}</li>
<li>{{Zend_Db_Table_Row_Abstract::findManyToManyRowset()}}</li>
</ul><p>Passing the class name as a string will not work, except where the class overrides the {{$_rowClass}} and/or {{$_rowsetClass}} properties.</p>

<p>Please see unit tests added with <a href="http://framework.zend.com/fisheye/changelog/Zend_Framework/?cs=4527">SVN r4527</a> for more information.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-04-17T19:50:44.000+0000</p> 
        <div class="body">
            <p>Also, it is not possible to specify the Row and Rowset classes if one uses the magic methods to call table relationships methods.  In those cases, the tables are named by strings, so there is no opportunity to set the properties to name custom Row and Rowset classes.</p>

<p>Therefore if you want to specify the Row and Rowset classes, you have two options:
- Declare the Row and/or Rowset classes in the extended Table class.
- Create an instance of the Table, set the properties for Row and/or Rowset classes, and pass this as an argument to non-magic relationships find methods.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-04-23T16:50:36.000+0000</p> 
        <div class="body">
            <p>Reopening issue based on <a href="http://www.nabble.com/Zend_Db_Table_Row_Abstract%3A%3AfindManyToManyRowSet-tf3630760s16154.html">original message by Julien Br√©da</a>. Fixes coming soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-04-24T17:20:14.000+0000</p> 
        <div class="body">
            <p>Resolved with <a href="http://framework.zend.com/fisheye/changelog/Zend_Framework/?cs=4599">SVN r4599</a>.</p>

        </div>
    </div>
    </div>

