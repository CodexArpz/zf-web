<h2>ZF-5387: If there is  a validation error, the Editor doesn't show its value again.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-12-30T21:35:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-21T04:53:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.9 (11/Jan/10)</li>
            <li>1.8.5 (11/Jan/10)</li>
            <li>1.9.7 (11/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dojo</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8127">ZF-8127</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Here is the form:
$this-&gt;addElement(
    'TextBox',
    'Title',
    array(
        'label' =&gt; 'News Title:',
        'required' =&gt; true,
        'validators' =&gt; array(
            array('NotEmpty', true),
        ),
    )
);</p>

<p>$this-&gt;addElement(
    'Editor',
    'Content',
    array(
        'label' =&gt; 'News Content:',
        'required' =&gt; true,
        'height' =&gt; '150px',
        'focusOnLoad' =&gt; true,
        'validators' =&gt; array(
            array('NotEmpty', true),
        ),
    )
);</p>

<p>If there is a validation error, the Editor will set the value to "Array".</p>

<p>Because there are two elements named "Content", see the following html code:
</p>

<p>And the solution is change the textarea element's id and name.</p>

<p>Open the Zend/Dojo/View/Helper/Editor.php:
change the following code:
protected function _normalizeEditorName($name)
    {
        if ('[]' == substr($name, -2)) {
            $name = substr($name, 0, strlen($name) - 2);
            $name .= '[Editor][]';
        } else {
            $name .= '[Editor]';
        }
        return $name;
    }</p>

<p>to:</p>

<p>protected function _normalizeEditorName($name)
    {
        if ('[]' == substr($name, -2)) {
            $name = substr($name, 0, strlen($name) - 2);
        $name .= '-Editor[]';
        } else {
        $name .= '-Editor';
        }
        return $name;
    }</p>

<p>Hope that helps.</p>

<p>Regard,
Justin</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wenlong Wu (ezdevelop) on 2008-12-30T21:39:53.000+0000</p> 
        <div class="body">
            <p>Another solution is:
Open the Zend/Dojo/View/Helper/Editor.php file:</p>

<p>change the following code:
$html = '&lt;input' . $this-&gt;_htmlAttribs($hiddenAttribs) . $this-&gt;getClosingBracket()
              . $this-&gt;textarea($textareaName, $value, $params, $attribs);</p>

<p>to:</p>

<p>$html = $this-&gt;textarea($textareaName, $value, $params, $attribs)
            .'&lt;input' . $this-&gt;_htmlAttribs($hiddenAttribs) . $this-&gt;getClosingBracket();</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by K (karan.tandon@gmail.com) on 2009-02-16T00:05:01.000+0000</p> 
        <div class="body">
            <p>Neither of the solutions work.</p>

<p>I am facing the same problem and am unable to capture the value type inside Editor.</p>

<p>If I hard code the value, like to 'something' below, then the server is able to capture the value correctly, on a valid post.
using the following code:
$form-&gt;editortab-&gt;getValue('content')</p>

<h6>################### DOJO EDITOR ELEMENT</h6>

<pre><code>    $editorForm-&gt;addElement(
        'Editor',
        'content',
        array(
            'label'         =&gt; 'Content',
            'inheritWidth'  =&gt; 'true',
            'height'        =&gt; '230px',
            'width'         =&gt; '200px',
            'focusOnLoad'   =&gt; true,
            'required'      =&gt; $required,
            'value'         =&gt; 'some',

        )
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by K (karan.tandon@gmail.com) on 2009-02-16T08:24:47.000+0000</p> 
        <div class="body">
            <p>Forgot to mention that when I hard-code, the value captured is only the text that I hard-coded (i.e. 'something') irrespective of what is actually typed on the UI</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by K (karan.tandon@gmail.com) on 2009-02-16T12:21:04.000+0000</p> 
        <div class="body">
            <p>SOLVED :)</p>

<p>To make Zend Dojo Editor work do following to .../Zend/Dojo/View/Helper/Dijit.php</p>

<p>1- Inside _createGetParentFormFunction()
 return elementNode.domNode;
instead of
return elementNode;</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by K (karan.tandon@gmail.com) on 2009-02-22T12:28:00.000+0000</p> 
        <div class="body">
            <p>However this solution only works for Firefox and not with the creepy Internet Explorer and the new kid called Google Crome</p>

<p>:(</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Vladimir Razuvaev (vladar) on 2010-01-02T17:13:41.000+0000</p> 
        <div class="body">
            <p>This issue appears because "textarea" tag is used as base for editor. Dojo doesn't recommend this for several reasons (including XSS vulnerability). It is much better to use "div" tag as a base for editor.</p>

<p>Here is a helper subclass, which replaces "textarea" tag to "div". Solution automatically fixes this bug and several other issues caused by same reason.</p>

<pre class="highlight"><code>
class MyEditor extends Zend_Dojo_View_Helper_Editor
{
    public function textarea($id, $value = null, array $params = array(), array $attribs = array())
    {
        // it is a trivial copy-paste of Zend_Dojo_View_Helper_Textarea::textarea method
        // with replaced "textarea" tag to "div"

        if (!array_key_exists('id', $attribs)) {
            $attribs['id']    = $id;
        }
        $attribs['name']  = $id;
        $attribs['type']  = $this-&gt;_elementType;

        $attribs = $this-&gt;_prepareDijit($attribs, $params, 'textarea');

        $html = '</code></pre><div><code>_htmlAttribs($attribs) . '&gt;'
              . $value
              . "</code></div><code>\n";

        return $html;
    }
}
</code>

        </div>
    </div>
    </div>

