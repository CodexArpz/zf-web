<h2>ZF-7119: ACL does not permit a &quot;deny all privileges all permissions&quot;, i.e. an unexpected implementation of &quot;all resources&quot; (two examples).</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-25T03:37:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-21T05:13:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Onno Lissenberg (orlissenberg)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Dolf Schimmel (Freeaqingme) (freak)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Acl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5369">ZF-5369</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have two scenario's that result in unexpected behavior of the acl component.</p>

<ol><li>If I deny all privileges to all resources, explicit allow rules are still allowing access.</li>
</ol>

&lt;?
include_once('Zend/Acl.php');
include_once('Zend/Acl/Role.php');
include_once('Zend/Acl/Resource.php');

$acl = new Zend_Acl();
$acl-&gt;addRole(new Zend_Acl_Role('user'));
$acl-&gt;addRole(new Zend_Acl_Role('troll'));

$acl-&gt;add(new Zend_Acl_Resource('news'));
$acl-&gt;add(new Zend_Acl_Resource('users'));

/*
  <a href="http://framework.zend.com/manual/en/zend.acl.html">http://framework.zend.com/manual/en/zend.acl.html</a>
  The NULL values in the above allow() calls are used to indicate that the allow rules apply to all resources.
*/

/* all the roles are permitted to view all resources */
$acl-&gt;allow(null, null, 'view');
$acl-&gt;allow('troll', 'news', 'view');

/* trolls denied all privileges to all resources!! */
$acl-&gt;deny('troll', null, null);

echo 'troll-all-view: '.($acl-&gt;isAllowed('troll', null, 'view') ? 'allowed to view' : 'denied to view');
echo '<br />';

/* expecting: denied, result: allowed */
echo 'troll-news-view: '.($acl-&gt;isAllowed('troll', 'news', 'view') ? 'allowed to view' : 'denied to view');
echo '<br />';

echo 'user-all-view: '.($acl-&gt;isAllowed('user', null, 'view') ? 'allowed to view' : 'denied to view');
echo '<br />';
?&gt;

<ol><li>If I ask if a specific role is allowed viewing privileges on all resources, but one of the resources is denied viewing privileges, I still get a positive result.</li>
</ol>

&lt;?
include_once('Zend/Acl.php');
include_once('Zend/Acl/Role.php');
include_once('Zend/Acl/Resource.php');

$acl = new Zend_Acl();
$acl-&gt;addRole(new Zend_Acl_Role('user'));
$acl-&gt;addRole(new Zend_Acl_Role('troll'));

$acl-&gt;add(new Zend_Acl_Resource('news'));
$acl-&gt;add(new Zend_Acl_Resource('users'));

/*
  <a href="http://framework.zend.com/manual/en/zend.acl.html">http://framework.zend.com/manual/en/zend.acl.html</a>
  The NULL values in the above allow() calls are used to indicate that the allow rules apply to all resources.
*/

/* all the roles are permitted to view all resources */
$acl-&gt;allow(null, null, 'view');

/* trolls denied to view news items */
$acl-&gt;deny('troll', 'news', null);

/* expecting: denied, result: allowed */
echo 'troll-all-view: '.($acl-&gt;isAllowed('troll', null, 'view') ? 'allowed to view' : 'denied to view');
echo '<br />';

/* explicit denied rule does work though */
echo 'troll-news-view: '.($acl-&gt;isAllowed('troll', 'news', 'view') ? 'allowed to view' : 'denied to view');
echo '<br />';

echo 'user-all-view: '.($acl-&gt;isAllowed('user', null, 'view') ? 'allowed to view' : 'denied to view');
echo '<br />';
?&gt;

<p>Best Regards,
Onno</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Ascheberg (asche) on 2009-07-19T09:10:06.000+0000</p> 
        <div class="body">
            <p>This bug seems to be about a possible problem with the structure of Zend_ACL so it might be interesting to also have a look at bug ZF-5369</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Kempen (webpatser) on 2009-07-21T05:05:11.000+0000</p> 
        <div class="body">
            <p>THis is not related to ZF-5369. ZF-5369 is about inheritance. This issue is about changing the ACL for a user in a script, that's not picked up correctly by Zend_ACL.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-07-21T05:10:21.000+0000</p> 
        <div class="body">
            <p>It in fact is the same problem. The "problem" is that zend_acl doesn't keep track of the order in which rules are added.</p>

<pre class="highlight"><code>
&lt;?
include_once('Zend/Acl.php');
include_once('Zend/Acl/Role.php');
include_once('Zend/Acl/Resource.php');

$acl = new Zend_Acl();
$acl-&gt;addRole(new Zend_Acl_Role('user'));
$acl-&gt;addRole(new Zend_Acl_Role('troll'));

$acl-&gt;add(new Zend_Acl_Resource('news'));
$acl-&gt;add(new Zend_Acl_Resource('users'));

$acl-&gt;allow('troll', 'news', 'view'); // allow first, deny later
$acl-&gt;deny('troll', null, null);
</code></pre>

<p>As a result of that the above codesample is equal to this:</p>

<pre class="highlight"><code>
&lt;?
include_once('Zend/Acl.php');
include_once('Zend/Acl/Role.php');
include_once('Zend/Acl/Resource.php');

$acl = new Zend_Acl();
$acl-&gt;addRole(new Zend_Acl_Role('user'));
$acl-&gt;addRole(new Zend_Acl_Role('troll'));

$acl-&gt;add(new Zend_Acl_Resource('news'));
$acl-&gt;add(new Zend_Acl_Resource('users'));

$acl-&gt;deny('troll', null, null); // Deny first, allow later
$acl-&gt;allow('troll', 'news', 'view');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-07-21T05:12:54.000+0000</p> 
        <div class="body">
            <p>Closing this issue as duplicate.</p>

        </div>
    </div>
    </div>

