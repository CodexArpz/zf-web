<h2>ZF-9679: Method isValid() carries validated Values to SubForms</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2010-04-15T02:17:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-15T19:31:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Webdevilopers (tridem)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have a Zend Dojo Form named <code>test</code> including an element namend <code>id</code>.</p>

<p>This form also has a subform named <code>subform</code>. Latter uses array notation.
(Note: using the method setIsArray(true) will not affect the issue!)</p>

<p>In this subform I have an element named <code>id</code> too. It is a MultiCheckbox.
The options include the keys <code>1</code> and <code>2</code> (NOT <code>3</code>!).</p>

<p>Actions:
- Get the <code>id</code> element from the base form <code>test</code>. Set its value to <code>3</code>.
- Don't choose any option on the <code>id</code> element in the subform <code>subform</code>.
- Submit Form.</p>

<p>Expected behaviours:
- The <code>id</code> element from the base form <code>test</code> is set to <code>3</code>.
- The <code>id</code> element from the subform <code>subform</code> is validated true.
- Form is valid!</p>

<p>Actual behaviour:
- The <code>id</code> element from the base form <code>test</code> is set to <code>3</code>.
- The <code>id</code> element from the subform <code>subform</code> is ALSO SET TO <code>3</code>. Since this option does not exist</p>

<p>it validates false.
- Form is invalid!</p>

<p>Debugging:</p>

<p>The <code>id</code> element from the base form <code>test</code>:
The dump on the element on line 46 shows the correct element. The other <code>id</code> element is never shown. Since the value is set correctely everything seems to work fine here.</p>

<p>Form values:
Dumping the form values in line 58 shows that the setValue(3) Method has also addresses the value to the wrong <code>id</code> element in the subform.</p>

<p>Conclusion:
There seems to be a problem with the set methods on elements in a subform that share the same name as in the base form or maybe even other subforms.</p>

<p>Further problematics:
If the original <code>id</code> element was set to a value that IS AN OPTION of the MultiCheckbox the form would have been valid - even if NO OPTION was checked.</p>

<p>Note:
Checking an option will override the value <code>3</code> and the form will be correct.</p>

<p>The Code:</p>

<pre class="highlight"><code>
&lt;?php
class Issues_MultiCheckboxController extends Zend_Controller_Action
{
    public function init()
    {
        $form = new Zend_Dojo_Form();
        $form-&gt;setName('test')
             -&gt;setAction('/issues/multi-checkbox/save/')
             -&gt;setMethod(Zend_Form::METHOD_POST);

        /**
         * Create subform with an element named `id` too - but in an array named `subform`
         */
        $subForm = new Zend_Dojo_Form_SubForm();
        $subForm-&gt;setIsArray(true);

        $fooElement = new Zend_Form_Element_MultiCheckbox('id');
        $fooElement-&gt;setLabel('Allowed options: 1, 2');
        $fooElement-&gt;setMultiOptions(array(
            '1' =&gt; 'yes',
            '2' =&gt; 'no'
        ));
        #$fooElement-&gt;setRequired(true);
        $subForm-&gt;addElement($fooElement);

        $form-&gt;addSubForm($subForm, 'subform');

        /**
         * Create primary element named `id` too - its value will be set afterwards to 3
         */
        $barElement = new Zend_Form_Element_Hidden('id');
        $barElement-&gt;setDecorators(array('ViewHelper'));
        $form-&gt;addElement($barElement);

        $sendElement = new Zend_Dojo_Form_Element_SubmitButton('send');
        $sendElement-&gt;setLabel('Send');
        $sendElement-&gt;setIgnore(true);
        $form-&gt;addElement($sendElement);

        $this-&gt;view-&gt;form = $form;
    }

    public function editAction()
    {
        $barElement = $this-&gt;view-&gt;form-&gt;getElement('id');
        Zend_Debug::dump($barElement);
        $barElement-&gt;setValue(3);
    }

    public function saveAction()
    {
        if (!$this-&gt;view-&gt;form-&gt;isValid($this-&gt;getRequest()-&gt;getPost())) {
            echo "Form not valid";
            $this-&gt;render('edit');
        }

        $values = $this-&gt;view-&gt;form-&gt;getValues(true);
        Zend_Debug::dump($values);
    }
}
</code></pre>

<p>Correctly generated HTML:</p>

<pre class="highlight"><code>
</code></pre><code></code><div title=""><code></code><code>Allowed options: 1, 2

yes<br />no</code></div><code>


Â 

</code>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-15T13:45:26.000+0000</p> 
        <div class="body">
            <p>This patch fixes the Issue, Unit Test included</p>

<pre class="highlight"><code>
Index: tests/Zend/Form/FormTest.php
===================================================================
--- tests/Zend/Form/FormTest.php    (Revision 21858)
+++ tests/Zend/Form/FormTest.php    (Arbeitskopie)
@@ -1184,6 +1184,22 @@
         $this-&gt;assertTrue($this-&gt;form-&gt;isValid($data));
     }
 
+    /**
+     * @group ZF-9679
+     */
+    public function testIsValidDiscardsValidatedValues()
+    {
+        $this-&gt;form-&gt;addElement('text', 'foo');
+        $this-&gt;form-&gt;addSubForm(new Zend_Form_SubForm(), 'bar')
+                   -&gt;bar-&gt;addElement('text', 'foo')
+                        -&gt;foo-&gt;setAllowEmpty(true)
+                             -&gt;addValidator('Identical',
+                                            true,
+                                            '');
+
+        $this-&gt;assertTrue($this-&gt;form-&gt;isValid(array('foo' =&gt; 'foo Value')));
+    }
+
     // Sub forms
 
     public function testCanAddAndRetrieveSingleSubForm()
Index: library/Zend/Form.php
===================================================================
--- library/Zend/Form.php   (Revision 21858)
+++ library/Zend/Form.php   (Arbeitskopie)
@@ -2057,6 +2057,7 @@
                 $valid = $element-&gt;isValid(null, $data) &amp;&amp; $valid;
             } else {
                 $valid = $element-&gt;isValid($data[$key], $data) &amp;&amp; $valid;
+                unset($data[$key]);
             }
         }
         foreach ($this-&gt;getSubForms() as $key =&gt; $form) {
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-15T13:47:00.000+0000</p> 
        <div class="body">
            <p>This is the similar to ZF-9666</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-15T19:31:02.000+0000</p> 
        <div class="body">
            <p>This Issue duplicates as of now the Issue ZF-9607, which also has given a patch with Unit Tests.</p>

        </div>
    </div>
    </div>

