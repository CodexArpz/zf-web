<h2>ZF-12478: PluginLoader file cache and scalability</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Performance Improvement</dd>

    <dt>Created:</dt>
    <dd>2012-11-28T18:55:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-04-05T16:07:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ryan Graciano (rmgraci)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Upon moving to an architecture that is more dependent on helpers than before, we have noticed a substantial decrease in site performance.  After doing some benchmarking, enabling the PluginLoaderCache has given us a substantial performance boost (~15%), but we are noticing that it is still inefficient:</p>

<ul><li><p>PluginLoader has no persistent cache across requests mapping name to classname, so it needs to loop through prefixes and check class_exists() on every one, every time, until it finds the helper it needs.</p></li>
<li><p>The filesystem is hit on every prefix (see ZF-11426), resulting in many disk accesses.  This is especially pronounced in larger codebases.</p></li>
<li><p>The includeFileCache requires that every helper be loaded up front in one big file on every request.  This is not scalable for large codebases with many helpers.</p></li>
</ul><p>We have a couple of potential solutions -</p>

<p>A) Give us an option to auto-load these classes.  This could be done by replacing the includeFileCache with a classNameCache which maps $name =&gt; $className.  Rather than loop through each prefix/name combo with class_exists, and then going to the disk on each one, we could check the name array for $name, return the $className, then allow the auto-loader to manage the class loading.</p>

<p>B) Allow the user to replace PluginLoader entirely with our own logic.  I don't think we're the only ones who have a reason to do this:  <a href="http://stackoverflow.com/questions/11849531/how-do-i-replace-pluginloader-in-zend-framework">http://stackoverflow.com/questions/11849531/â€¦</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2013-04-05T16:07:08.000+0000</p> 
        <div class="body">
            <p>This issue has been closed on Jira and moved to GitHub for issue tracking.  To continue following the resolution of this issues, please visit: <a href="https://github.com/zendframework/zf1/issues/37">https://github.com/zendframework/zf1/issues/37</a></p>

        </div>
    </div>
    </div>

