<h2>ZF-9778: Imposible create full rest modules using Zend_Config</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-30T14:08:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-03-22T23:18:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Reopened</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Grover Campos Ancajima (gtux)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Luke Crouch (lcrouch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Route</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10971">ZF-10971</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>At the Zend_Controller documentation, in Zend_Rest_Route usage section says literaly:</p>

<p>To enable Zend_Rest_Route for specific modules, construct it with an array of module names as the 3rd constructor argument:</p>

<pre class="highlight"><code>
$front     = Zend_Controller_Front::getInstance();
$restRoute = new Zend_Rest_Route($front, array(), array('product'));
$front-&gt;getRouter()-&gt;addRoute('rest', $restRoute);
</code></pre>

<p>It then specifies that you can create a route using Zend_Config and the controllers of some module can be configured by specifying as follow:</p>

<pre class="highlight"><code>
routes.rest.type = Zend_Rest_Route
routes.rest.defaults.controller = object
routes.rest.mod = project,user
</code></pre>

<p>When I tried to configure a RESTful module using Zend_Config, I figured that could be used as follows:</p>

<pre class="highlight"><code>
routes.rest.mod2 =
// or 
routes.rest.mod3[] =
</code></pre>

<p>But this fails, the error is in the getInstance method of Zend_Rest_Route:</p>

<pre class="highlight"><code>
foreach ($config as $key =&gt; $values) {
  if ($key == 'type') {
    // do nothing
  } elseif ($key == 'defaults') {
    $defaultsArray = $values-&gt;toArray();
  } else {
    $restfulConfigArray[$key] = explode(',', $values);
  }
}
</code></pre>

<p>In the else part of code should have a validation, since the value of the variable $value is an array or an empty string, and in these cases this fails. To be consistent in building RESTful modules using Zend_Config, the code should be:</p>

<pre class="highlight"><code>
foreach ($config as $key =&gt; $values) {
  if ($key == 'type') {
    // do nothing
  } elseif ($key == 'defaults') {
    $defaultsArray = $values-&gt;toArray();
  } else {
    if (!empty($values)) {
      $restfulConfigArray[$key] = explode(',', $values);
    } else {
      $restfulConfigArray[] = $key;
    }
  }
}
</code></pre>

<p>Sorry for my bad english.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-04-30T14:13:45.000+0000</p> 
        <div class="body">
            <p>Are you instantiating this through zend_app?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Grover Campos Ancajima (gtux) on 2010-04-30T14:26:55.000+0000</p> 
        <div class="body">
            <p>Well, yes, is a normal plain zend project from zf tool.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-04-30T16:21:58.000+0000</p> 
        <div class="body">
            <p>Please beware that Zend_Rest is explicitely not supported with zend_app. Therefore closing as wont-fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Grover Campos Ancajima (gtux) on 2010-05-03T12:46:01.000+0000</p> 
        <div class="body">
            <p>Not really understand the answer given, leaves me the feeling that you had no interest in studying (or even reading) what I'm exposing.</p>

<ul><li><p>First, Please tell me explicitly: where does it say in the Zend_Rest_Route's documentation that can not be used with Zend_Application?.</p></li>
<li><p>Secondly, I would understand why in the documentation specifies how to use the Zend_Rest_Route using Zend_Config or instancing an object. Please see [<a href="http://framework.zend.com/manual/en/zend.controller.router.html#zend.rest.route_usage">http://framework.zend.com/manual/en/…</a>] and [<a href="http://framework.zend.com/manual/en/zend.controller.router.html#zend.rest.route_config">http://framework.zend.com/manual/en/…</a>]? All that in order to use it with Zend_Application, if I'm not wrong.</p></li>
<li><p>Thirdly, if Zend_Rest_Route can not be used by Zend_Application, then why is within Zend_Controller's documentation: [<a href="http://framework.zend.com/manual/en/zend.controller.router.html#zend.controller.router.routes.rest">http://framework.zend.com/manual/en/…</a>]?</p></li>
<li><p>And last question if Zend_Rest_Route can not be used by Zend_Application, what else can be used Zend_Rest_Route?</p></li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-05-03T13:06:23.000+0000</p> 
        <div class="body">
            <p>I'm sorry I wasn't clear on this before.</p>

<p>The zend_rest component wasn't designed to be used with zend_application (that may be because it was developed before zend_app was, not sure about that).  Also, its design differs quite a lot from the other type of routes there are. Though there are plans to make it work more in line with the other routes, that isn't possible for the moment because it would break backwards compatibility.</p>

<p>You can configure Zend_Rest_Route through Zend_Application. You would however have to either write your own init method, or write a custom resource plugin.</p>

<p>To answer your questions in short:</p>

<ul><li>It may not have been described, nor has it been described that it can be used with zend_app.</li>
<li>The assumption is wrong. You dont have to use zend_app_resource_route in order to set up zend_rest with zend_config.</li>
<li>Zend_Controller is a different component than Zend_App. Zend_App complements Zend_Controller , not the other way around.</li>
<li>It's just PHP, you can use lots of code with zend_rest_route, including your own. Just not zend_app_resource_route...</li>
</ul><p>If there are any questions left, feel free to ask them.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Grover Campos Ancajima (gtux) on 2010-05-03T13:43:16.000+0000</p> 
        <div class="body">
            <p>I would like to expose the bug from a different point of view, because apparently I was not clear before.</p>

<p>In documentation about Zend_Controller, in Zend_Rest_Route section specifies how to use Zend_Rest_Route. It teaches how to get an instantiate of Zend_Rest_Route and add it to Zend_Controller_Front, and it also indicates how that can be added to an application using Zend_Config so it can be instantiated automatically from the bootstrap.</p>

<p>So far everything works right, unless, in the form which Zend_Rest_Route is programmed, it not cover the ability to specify that a complete module can be RESTful using Zend_Config.</p>

<p>Obviously this can be achieved from other forms, such as writing an init method in the Bootstrap itself (either the application's Bootstrap or specific module's Bootstrap), or through a custom plugin to give some examples.</p>

<p>What I propose is that it may be possible to use Zend_Config to specify, in a simple way, that a complete module be RESTful style only changing a few lines in Zend_Rest_Route component, and take advantage of the simplicity of using a configuration file for the entire application using the tools that currently exist in Zend Framework and not give the job to the developers having to re-engineering to achieve this.</p>

<p>The code that I'm talking about is in getInstance method of Zend_Rest_Route:</p>

<pre class="highlight"><code>
foreach ($config as $key =&gt; $values) {
  if ($key == 'type') {
    // do nothing
  } elseif ($key == 'defaults') {
    $defaultsArray = $values-&gt;toArray();
  } else {
    if (!empty($values)) {
      $restfulConfigArray[$key] = explode(',', $values);
    } else {
      $restfulConfigArray[] = $key;
    }
  }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-05-03T13:49:28.000+0000</p> 
        <div class="body">
            <p>In that case I'm reopening it, but only if it can be fixed without touching code in zend_app.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luke Crouch (groovecoder) on 2010-05-03T14:54:40.000+0000</p> 
        <div class="body">
            <p>It may be possible. I'm looking to do a slew of fixes and improvements before ZF 2.0 soon so I'll look at this at the same time.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Peter Moolenaar (petermoolenaar) on 2010-06-01T03:51:31.000+0000</p> 
        <div class="body">
            <p>Is there any thought on this making the 1.10 branch? Or should I use other means than Zend_Config to get this to work in the next couple of months.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luke Crouch (lcrouch) on 2010-06-02T06:18:18.000+0000</p> 
        <div class="body">
            <p>I'm planning a Zend_Rest workday in the next week or two. I've been cautious about it since we don't know how much of Zend_Rest will translate into 2.0. But I should be able to fix it soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rafael Oleza Alomar (rafeca) on 2011-03-22T23:18:29.000+0000</p> 
        <div class="body">
            <p>This bug is still happening on 1.11.4: From Zend_Config it's not possible to enable Zend_Rest_Route for a specific module.</p>

<p>The solution proposed by Grover Campos Ancajima is clean, easy to implement and it has no drawback. Is there any chance to have it implemented for the next version of ZF 1.11?</p>

        </div>
    </div>
    </div>

