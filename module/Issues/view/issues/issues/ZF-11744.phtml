<h2>ZF-11744: Setting the same order on a FormElement &quot;deletes&quot; Elements</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-09-15T13:22:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-09-20T14:26:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michiel Thalen (chielsen)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When you have 2 or more elements with the same order:</p>

<pre class="highlight"><code>
$form-&gt;addElement(new Zend_Form_Element_Text('one', array('order' =&gt; 1)));
$form-&gt;addElement(new Zend_Form_Element_Text('two', array('order' =&gt; 1)));
</code></pre>

<p>The first element doesn't get show, because internally the sort function overwrites it.
My solution is to alter the _sort method and let it check for duplicate Order values. If found, add a (couple) of thousands.
This is a working solution for up to 1000 duplicate orderV values.</p>

<pre class="highlight"><code>
    /**
     * Sort items according to their order
     *
     * @return void
     */
    protected function _sort()
    {
        if ($this-&gt;_orderUpdated) {
            $items = array();
            $index = $uniqOrder = 0 ;
            foreach ($this-&gt;_order as $key =&gt; $order) {
                if (null === $order) {
                    if (null === ($order = $this-&gt;{$key}-&gt;getOrder())) {
                        while (array_search($index, $this-&gt;_order, true)) {
                            ++$index;
                        }
                        $items[$index] = $key;
                        ++$index;
                    } else {
                        $items[$order] = $key;
                    }
                } else {
                    $items[isset($items[$order]) ? strval($order + (++$uniqOrder)/1000) : $order] = $key;
                }
            }

            $items = array_flip($items);
            asort($items);
            $this-&gt;_order = $items;
            $this-&gt;_orderUpdated = false;
        }
    }
</code></pre>

<p>Btw why don't we have a proper coding system? I can put above code into code tags and we still don't have php!! syntax support.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Br√ºckner (frosch) on 2011-09-20T14:26:17.000+0000</p> 
        <div class="body">
            <p>Code tags added.</p>

        </div>
    </div>
    </div>

