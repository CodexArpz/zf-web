<h2>ZF-5746: Add file inheritance and section.key based value return into the ini parser. </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-02-11T06:43:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-21T13:44:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11743/Ini.php">Ini.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>We missing two main features: 
1. inheritance sections and values from other ini file.
2. section.key based value return (IE: for constants, like path)</p>

<p>We added these two features and an eval feature. Please have a look at our working example attached.</p>

<pre class="highlight"><code>
/*
* You can use the '|' to specify a section from an extended ini file
*
*      [foo:<a>c:/path/to/file/extend.ini|fooExtend</a>]
*      hostname = "staging"
*
* another ini file ( extend.ini ):
*      [fooExtend]
*      hostname = "extendedValue"
*
*
* !!! The value must be quoted !!!!
*  
* You can concat evaluated elements as a value with the {E:} block. 
* Example: 
*
* [foo:extend{E:fooClass::getUsername()}]
* will be the same:
* [foo:extendTestUser]
*
*
* or
* [foo:<a>c:/{E:fooClass::getFilePath</a>()}/extend.ini|fooExtend]
* will be the same:
* [foo:<a>c:/path/to/file/extend.ini|fooExtend</a>]
*
*
* or
* [foo]
* file.path = "c:/{E:fooClass::getFilePath()}"
* will be the same:
* [foo]
* file.path = "c:/path/to/file"
*
*
* or
* [Db]
* host.name = "FooName"
*
* [foo:extend{Db.host.name}]
* will be the same:
* [foo:extendFooName]
*
*
* or
* 
* [Logger]
* file.path = "c:/path/to/file"
*
* [foo:{Logger.file.path}/log.ini|Log]
* will be the same:
* [foo:<a>c:/path/to/file/log.ini|Log</a>]
*
*
* or
* 
* [Logger]
* file.path = "c:/path/to/file"
*
* [Log]
* file = "{Logger.file.path}/debug.log"
* will be the same:
* [Log]
* file = "c:/path/to/file/debug.log"
*/
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2009-03-21T13:44:38.000+0000</p> 
        <div class="body">
            <p><em>1. inheritance sections and values from other ini file.</em></p>

<p>We already have Zend_Config::merge() for this use-case</p>

<p><em>2 . section.key based value return (IE: for constants, like path)</em>
Most of the examples quoted are too complicated as a generic eval within Zend_Config doesn't fit.</p>

<p>Having said that, this concept:</p>

<pre class="highlight"><code>
[log]
path = "/var/log"
file = "{log.path}/debug.log"
</code></pre>

<p>To evaluate to $config-&gt;log-&gt;file = /var/log/debug.log appeals as we're now into variable substitution.</p>

<p>Not going to happen until 2.0 though, so I've added to the wiki (<a href="http://framework.zend.com/wiki/display/ZFDEV/Zend_Config+2.0">http://framework.zend.com/wiki/display/â€¦</a>) and closed this issue.</p>

        </div>
    </div>
    </div>

