<h2>ZF-3220: Zend_Db_Table bind value problem?</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-05-08T04:51:14.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-29T01:56:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sebastien Sito (dreake)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
            <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2017">ZF-2017</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I don't know how this error appears. I have many controllers that has the same logic but only in some this error appear.
Example:</p>

<p>I'm deleting a photo from gallery in which goes order by field 'position'. If I'm deleting the last, there is no problem. When I'm deleting other I must decrement position of all photos after. So if the photo delete link is clicked, there is invoked this action:</p>

<p>[CODE]
public function deleteAction()
    {
        $id = $this-&gt;getRequest()-&gt;getParam('id');
        $photos = new Photos();</p>

<pre><code>    $where = $photos-&gt;getAdapter()-&gt;quoteInto('id = ?', $id);
    $photo = $photos-&gt;fetchRow($where);

    $position = $photo-&gt;position;

    $count = $photos-&gt;fetchAll()-&gt;count();

    if($position == $count)
    {
        $where = $photos-&gt;getAdapter()-&gt;quoteInto('id = ?', $id);
        $photos-&gt;delete($where);
    }
    else
    {
        $where = $photos-&gt;getAdapter()-&gt;quoteInto('id = ?', $id);
        $photos-&gt;delete($where);

        for($i = $position + 1; $i &lt;= $count; $i++)

        {

            $where = $photos-&gt;getAdapter()-&gt;quoteInto('position = '.$i);

            $data = array();

            $data['position'] = $i - 1;

            $photos-&gt;update($data, $where);

        }
    }

    $this-&gt;_redirect('admin/prodgallery');
}
</code></pre>

<p>[/CODE]</p>

<p>And it is producting this error:</p>

<p>[CODE]
Fatal error: Uncaught exception 'Zend_Db_Statement_Exception' with message 'SQLSTATE[HY093]: Invalid parameter number: no parameters were bound' in /home/httpd/html/shop/library/Zend/Db/Statement/Pdo.php:238 Stack trace: #0 /home/httpd/html/shop/library/Zend/Db/Statement.php(283): Zend_Db_Statement_Pdo-&gt;_execute(Array) #1 /home/httpd/html/shop/library/Zend/Db/Adapter/Abstract.php(406): Zend_Db_Statement-&gt;execute(Array) #2 /home/httpd/html/shop/library/Zend/Db/Adapter/Pdo/Abstract.php(206): Zend_Db_Adapter_Abstract-&gt;query(Object(Zend_Db_Table_Select), Array) #3 /home/httpd/html/shop/library/Zend/Db/Table/Abstract.php(1185): Zend_Db_Adapter_Pdo_Abstract-&gt;query(Object(Zend_Db_Table_Select)) #4 /home/httpd/html/shop/library/Zend/Db/Table/Abstract.php(1040): Zend_Db_Table_Abstract-&gt;_fetch(Object(Zend_Db_Table_Select)) #5 /home/httpd/html/shop/application/controllers/AdminController.php(423): Zend_Db_Table_Abstract-&gt;fetchAll(Object(Zend_Db_Table_Select)) #6 /home/httpd/html/shop/library/Zend/Controller/Action.php(502): AdminCon in /home/httpd/html/shop/library/Zend/Db/Statement/Pdo.php on line 238
[/CODE]</p>

<p>I was searching a lot to solve this. I've found many simmilar errors but in cases where a strange stirngs were binded. In my case we talk about simple numbers...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ian Matysik (imatyssik) on 2008-05-18T07:19:56.000+0000</p> 
        <div class="body">
            <p>I have found the same issue, which seems to be the problem in a file ZendFramework/library/Zend/Db/Table/Abstract.php</p>

<p>The function _fetch should be declared as the following, notice the additional $binds parameter.
    protected function _fetch(Zend_Db_Table_Select $select,$binds)
    {
        $stmt = $this-&gt;_db-&gt;query($select,$binds);
        $data = $stmt-&gt;fetchAll(Zend_Db::FETCH_ASSOC);
        return $data;
    }</p>

<p>And two other functions need amendment as following,</p>

<p>line 1039 of the same file  change to:
$rows = $this-&gt;_fetch($select,(($where instanceof Zend_Db_Table_Select)?$order:array()));</p>

<p>and line 1081 , same file:</p>

<p>$rows = $this-&gt;_fetch($select,(($where instanceof Zend_Db_Table_Select)?$order:array()));</p>

<p>That is a quick and dirty fix  of the Db_Table select with binds to align it to the documentation specifications.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ian Matysik (imatyssik) on 2008-05-18T07:24:50.000+0000</p> 
        <div class="body">
            <p>I have forgot to mention that this issues still remains in the 1.5.2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Roger Hunwicks (rhunwicks) on 2008-10-22T15:40:01.000+0000</p> 
        <div class="body">
            <p>Rather than update _fetch() to accept a $bind parameter, we could make the Zend_Db_Table_Select hold the bind variables, see [<a href="http://framework.zend.com/issues/browse/ZF-2017">http://framework.zend.com/issues/browse/ZF-2017</a>].</p>

<p>Then _fetch can be:</p>

<pre class="highlight"><code>protected function _fetch(Zend_Db_Table_Select $select)
    {
        $stmt = $this-&gt;_db-&gt;query($select, $select-&gt;getBind());
        $data = $stmt-&gt;fetchAll(Zend_Db::FETCH_ASSOC);
        return $data;
    }</code></pre>

<p>Line 1039, which is in fetchAll() wouldn't need updating, provided that when you want to use bind variables you call fetchAll with a Zend_Db_Select object rather than a sting where clause. The same is true of line 1081, which is in fetchRow().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Roger Hunwicks (rhunwicks) on 2008-10-22T15:45:08.000+0000</p> 
        <div class="body">
            <p>The updates to fetchAll() and fetchRow() would not be required if Zend_Db_Select allows bind variables to be stored in the object, and we require users to pass a Zend_Db_Select or Zend_Db_Table_Select object to these methods instead of a string where clause whenever they want to use bind variables.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-06T10:52:13.000+0000</p> 
        <div class="body">
            <p>No action on this issue for too long. I'm reassigning to Ralph for re-evaluation and categorization.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-03-29T01:56:19.000+0000</p> 
        <div class="body">
            <p>Resolved in r. 14528</p>

        </div>
    </div>
    </div>

