<h2>ZF-6046: lastinsertId unknown method for Zend_Db_Table</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-03-17T04:42:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-20T21:33:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Laurens (laurens0619)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using Zend_Db_Table to access the database the method lastInsertId is unavaible. When I use this method at the db adapter it works.</p>

<p>I've rewritten the Zend_Db_Table_Abstract to add this functionality:</p>

<pre class="highlight"><code>
abstract class Qyn_Db_Table_Abstract extends Zend_Db_Table_Abstract {
    /**
     * Last insert id.
     *
     * @access private
     * @var int
     */
    private $_iLastInsertId = 0;
    /**
     * Opvragen last insert id.
     *
     * @access private
     * @return int
     */
    private function getLastInsertId() {
        return $this-&gt;_iLastInsertId;
    }
    /**
     * Initialisatieroutine, moet altijd vanuit specialisatie aangeroepen worden.
     *
     * @access public
     * @return void
     */
    public function init() {
        if (empty($this-&gt;_schema)) {
            $this-&gt;_schema = Zend_Registry::getInstance()-&gt;serverAdapter-&gt;getObjectScheme($this-&gt;_name, Qyn_Communication_I5_Base::FILE);
        }
    }
    /**
     * Override van insert, om de laatste insert id meteen vast te kunnen leggen.
     *
     * @access public
     * @param array $aData
     * @return mixed
     */
    public function insert(array $aData) {
        $mReturn = parent::insert($aData);
        $this-&gt;setLastInsertId($this-&gt;getAdapter()-&gt;lastInsertId());
        return $mReturn;
    }
    /**
     * Opvragen van last insert id, zit vreemd genoeg niet in Zend_Table_Abstract.
     *
     * @access public
     * @return int
     */
    public function lastInsertId() {
        if (! $this-&gt;getLastInsertId()) {
            throw new Qyn_Exception('Retrieving last insert ID is meaningless without inserting before.');
        }
        return $this-&gt;getLastInsertId();
    }
    /**
     * Zetten van last insert id.
     *
     * @access private
     * @param int $iLastInsertId
     * @return Qyn_Db_Table_Abstract
     */
    private function setLastInsertId($iLastInsertId) {
        $this-&gt;_iLastInsertId = $iLastInsertId;
        return $this;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-20T21:33:43.000+0000</p> 
        <div class="body">
            <p>I am unsure what you are asking for and/or reporting as a bug.</p>

<p>Please reopen if more information can be attained.</p>

<p>Thanks, Ralph</p>

        </div>
    </div>
    </div>

