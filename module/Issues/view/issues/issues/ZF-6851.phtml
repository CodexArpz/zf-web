<h2>ZF-6851: Zend_File_Transfer_Adapter_Http rename filter issues, it clears the path set</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-05-28T12:27:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-11T13:06:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christopher Valderrama (gatorv)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6408">ZF-6408</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When you add a Rename Filter to the Transfer Adapter, it clears the path, the problem is here:</p>

<pre class="highlight"><code>
                $filename = $directory . $content['name'];
                $rename   = $this-&gt;getFilter('Rename');
                if ($rename !== null) {
                    $filename = $rename-&gt;getNewName($content['tmp_name']);
                    $key      = array_search(get_class($rename), $this-&gt;_files[$file]['filters']);
                    unset($this-&gt;_files[$file]['filters'][$key]);
                }
</code></pre>

<p>Afterwards this point, if there is a custom path move_uploaded_file doesn't recognize it, a solution is to add the directory after the rename:</p>

<pre class="highlight"><code>
                $filename = $content['name'];
                $rename   = $this-&gt;getFilter('Rename');
                if ($rename !== null) {
                    $filename = $rename-&gt;getNewName($content['tmp_name']);
                    $key      = array_search(get_class($rename), $this-&gt;_files[$file]['filters']);
                    unset($this-&gt;_files[$file]['filters'][$key]);
                }
                
                $directory   = '';
                $destination = $this-&gt;getDestination($file);
                if ($destination !== null) {
                    $directory = $destination . DIRECTORY_SEPARATOR;
                }
                $filename = $directory . $filename;
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-28T12:31:42.000+0000</p> 
        <div class="body">
            <p>Please provide a example of what you are doing.
Just commenting ZF source code does not enable us to reproduce the behaviour.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christopher Valderrama (gatorv) on 2009-05-28T12:43:59.000+0000</p> 
        <div class="body">
            <p>Ok:</p>

<pre class="highlight"><code>
               $image = $this-&gt;_form-&gt;image;
        $image-&gt;setDestination($this-&gt;_iconPath)
                  -&gt;addFilter('Rename', 'Icon_'.$pKey);
        if (!$image-&gt;receive()) {
            // Ups a error
            $this-&gt;_helper-&gt;FlashMessenger('error'));
        } else {
            // Update the received row
            $icono = $this-&gt;_model-&gt;find($pKey)-&gt;current();
            $icono-&gt;imagen = $image-&gt;getFileName(null, false);
            $icono-&gt;save();
        }
</code></pre>

<p>Upon calling receive I have noticed that $icono-&gt;imagen contains ./Icon_1 (if I get it with the path) and I see no file on the upload dir, upon debugging, the error was caused after the rename of the file, after the code entering:</p>

<pre class="highlight"><code>
$filename = $directory . $content['name'];
                $rename   = $this-&gt;getFilter('Rename');
                if ($rename !== null) {
                    $filename = $rename-&gt;getNewName($content['tmp_name']);
                    $key      = array_search(get_class($rename), $this-&gt;_files[$file]['filters']);
                    unset($this-&gt;_files[$file]['filters'][$key]);
                }
</code></pre>

<p>$filename contained only "Icon_1" not "/path/to/uploads/Icon_1" as expected.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-28T13:20:26.000+0000</p> 
        <div class="body">
            <p>You know that the Rename filter has to be used with the complete path ? The examples in the manual and also the blog do not show any other usage nor has this been supported in past.
By omitting the path at the rename filter you said to use the actual path which is the temporary upload path of php.</p>

<p>Changing this behaviour is not a bug, but a feature request. Note that this is partitially also a BC break and can not be integrated as is without deeper investigation.
Additionally your code makes it impossible to use the rename filter to set different directories as it's actually recommended.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christopher Valderrama (gatorv) on 2009-05-28T13:28:18.000+0000</p> 
        <div class="body">
            <p>Didn't saw that anotation, and in the tutorial in your blog you where using a only filename in the filter, I suppose I didn't read that well, I'll update my code.</p>

<p>Thanks for your fast respone.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-06-11T13:05:06.000+0000</p> 
        <div class="body">
            <p>Duplicate of ZF-6408</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-06-11T13:06:46.000+0000</p> 
        <div class="body">
            <p>New feature implemented with r16009</p>

        </div>
    </div>
    </div>

