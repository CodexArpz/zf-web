<h2>ZF-11259: Db: Move instantiation of a RowClass in Zend_Db_Table_Abstract::fetchRow() to a new method getRowClassInstance</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2011-04-04T12:00:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-05T15:29:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
            <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In my project those classes are instantiated with an additional parameter and in the currect version of ZF there's no way to do that.
By moving the creation of the class into a method, it will be possible to override the instantiation in child classes of Zend_Db_Table_Abstract.</p>

<p>This is a trivial and no behavior or public API-changing change.</p>

<p>I've attached the patch to this issue.
Sorry if I should've done something incorrectly, this is my first submission to ZF. :)</p>

<p>EDIT:
Oh, and it would be awesome, if this patch came in the next minor release of ZF, as we'll use this in one of our projects. :)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Lars Tesmer (lars.tesmer) on 2011-04-04T13:02:23.000+0000</p> 
        <div class="body">
            <p>Hm, I can't find any option to attach the patch, so I'll add it as a comment:
--- library/Zend/Db/Table/Abstract.php  (revision 23831)
+++ library/Zend/Db/Table/Abstract.php  (working copy)
@@ -410,6 +410,16 @@
     }</p>

<pre><code> /**
</code></pre>

<p>+     * @param string $rowClass
+     * @param array $data
+     * @return Zend_Db_Table_Row_Abstract
+     */
+    public function getRowClassInstance($rowClass, $data)
+    {
+        return new $rowClass($data);
+    }
+
+    /**
      * Add a reference to the reference map
      *
      * @param string $ruleKey
@@ -1403,7 +1413,7 @@
             require_once 'Zend/Loader.php';
             Zend_Loader::loadClass($rowClass);
         }
-        return new $rowClass($data);
+        $this-&gt;getRowClassInstance($rowClass, $data);
     }</p>

<pre><code> /**
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lars Tesmer (lars.tesmer) on 2011-04-05T08:11:32.000+0000</p> 
        <div class="body">
            <p>Since Jira messes up the formatting of the above patch, here's the patch posted as a gist on Github:
<a href="https://gist.github.com/903210">https://gist.github.com/903210</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-04-05T08:25:35.000+0000</p> 
        <div class="body">
            <p>Use the code tags! Look at the help: [<a href="http://framework.zend.com/issues/secure/WikiRendererHelpAction.jspa?section=advanced">http://framework.zend.com/issues/secure/â€¦</a>]</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lars Tesmer (lars.tesmer) on 2011-04-11T08:52:36.000+0000</p> 
        <div class="body">
            <p>Ok, so here's the patch using the code-tags</p>

<pre class="highlight"><code>
--- a/library/Zend/Db/Table/Abstract.php
+++ b/library/Zend/Db/Table/Abstract.php
@@ -391,6 +391,16 @@ abstract class Zend_Db_Table_Abstract
     }
 
     /**
+     * @param string $rowClass
+     * @param array $data
+     * @return Zend_Db_Table_Row_Abstract
+     */
+    public function getRowClassInstance($rowClass, $data)
+    {
+        return new $rowClass($data);
+    }
+
+    /**
      * @param  string $classname
      * @return Zend_Db_Table_Abstract Provides a fluent interface
      */
@@ -1403,7 +1413,7 @@ abstract class Zend_Db_Table_Abstract
             require_once 'Zend/Loader.php';
             Zend_Loader::loadClass($rowClass);
         }
-        return new $rowClass($data);
+        return $this-&gt;getRowClassInstance($rowClass, $data);
     }
 
     /**
</code></pre>

<p>If I need to do anything else, or if I did something else wrong, please let me know! :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2011-04-17T13:24:33.000+0000</p> 
        <div class="body">
            <p>Attached components to issue</p>

        </div>
    </div>
    </div>

