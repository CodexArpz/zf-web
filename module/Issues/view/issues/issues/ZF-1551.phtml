<h2>ZF-1551: Reporting known field as unknown</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-12T05:41:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC3 (23/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jacob Oettinger (oetting)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter_Input</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Rater confusing bug. I have not investigated it all that through, I figure the writer of the component will be better at this.</p>

<p>When a required field is missing 
and 
another field whose validator is the first defined is filtered to become empty</p>

<p>This other field will be reported as unknown. [EDIT: unknown, not missing]</p>

<p>Code to reproduce:</p>

<pre class="literal">
require 'Zend/Filter/Input.php';

header("Content-Type: text/plain");

$filters = array(  
    'field1'   =&gt; 'Digits',
    'field2'   =&gt; 'Alnum'
);
 
$validators = array(  
    'field1'   =&gt; array('Digits'),
    'field2'   =&gt; array('Alnum'),
    'field3' =&gt; array('Alnum','presence'=&gt;'required')
);
$data = array('field1'=&gt;'asd1','field2'=&gt;'â‚¬'); // Invalid data
$input = new Zend_Filter_Input($filters, $validators, $data); 

if ($input-&gt;hasInvalid()) {  
    $invalidFields = $input-&gt;getInvalid(); 
    echo "Invalid:\n";
    print_r($invalidFields);
}  
  
if ($input-&gt;hasMissing()) {  
    echo "Missing:\n";
    $missingFields = $input-&gt;getMissing();  
    print_r($missingFields);
}  
  
if ($input-&gt;hasUnknown()) {  
    echo "Unknown:\n";  
    $unknownFields = $input-&gt;getUnknown();  
    print_r($unknownFields);
}
</pre>

<p>Hope it is not just me that is missing something</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-12T13:53:35.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 5265.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jacob Oettinger (oetting) on 2007-06-12T15:55:15.000+0000</p> 
        <div class="body">
            <p>I have just checked out revision 5265.</p>

<p>It does not seem to solve the problem with the given test code.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-12T17:25:34.000+0000</p> 
        <div class="body">
            <p>Okay, try revision 5268.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jacob Oettinger (oetting) on 2007-06-13T01:46:13.000+0000</p> 
        <div class="body">
            <p>That did it. Thanks!</p>

        </div>
    </div>
    </div>

