<h2>ZF-9308: Segmentation fault caused by Zend_Form</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-02T15:43:03.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-15T17:01:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Botjan kufca (bostjan.skufca)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Please see PHP bug #51187 for exact description and code proof. 
<a href="http://bugs.php.net/bug.php?id=51187">http://bugs.php.net/bug.php?id=51187</a></p>

<p>Note: It IS also a ZF issue because unintended recursion causes PHP to hit it's bug and segfault.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-03-03T04:36:55.000+0000</p> 
        <div class="body">
            <p>The reproduce code from that bug has logical errors (a value passed to the method is overwritten; the element is passed to itself as its value). While it does illustrate a lack of recursion detection in the setValue() method, I'm not entirely convinced we need to add that detection to ZF; this sort of thing can easily be detected within your own test suite, and good programming practices should help prevent it in the first place.</p>

<p>Can you provide examples of how this could happen in a non-contrived example?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Botjan kufca (bostjan.skufca) on 2010-03-03T04:44:57.000+0000</p> 
        <div class="body">
            <p>(Un)Fortunately I can't.</p>

<p>I wanted to report this issues because combined with PHP segfault bug it creates an easy way to DOS. I do realize this is indeed mostly a PHP issue though.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-03-03T05:02:26.000+0000</p> 
        <div class="body">
            <p>Actually, as I noted, it's not exactly a PHP issue, either; it's a case of logic errors in the function provided. Fix the logic errors, and the issue will not present.</p>

<p>The issue <em>does</em> exist -- it's an infinite recursion vector. The problem I have is that the issue will only present itself if you have logical errors in your code in the first place, which is why I'm not sure we need to fix anything.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Botjan kufca (bostjan.skufca) on 2010-03-03T05:10:36.000+0000</p> 
        <div class="body">
            <p>True, but from sysadmin's point of view this has 2 options:
- either it is fixed and PHP reports max allowed memory and exits (and logs the script that caused it)
- or leaving it causes segfaults which appear in log with no script reference.</p>

<p>And later option is less desirable as it is way harder to analyze.</p>

<p>But, again, this is a PHP issue and we should not be talking about it here. I just reported it because it is an inconvenience. Feel free to ignore it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Irey (michaelirey) on 2012-08-15T17:01:52.000+0000</p> 
        <div class="body">
            <p>Any update on this? We have a site which suffers the terrible segfault directly related to Zend_Form. Our production logs indicate this happens frequently.</p>

        </div>
    </div>
    </div>

