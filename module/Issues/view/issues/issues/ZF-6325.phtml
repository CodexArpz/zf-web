<h2>ZF-6325: Pass profiling information to all Zend Db query methods.  __LINE__, __FILE__, scalar or string values for debugging and identifying line position of query</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-04-16T12:04:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-17T08:28:33.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Christensen (simplifiedweb)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For several years we have used our own DB layer and used the typical $db-&gt;query() method, however, we adapted our class to handle the passing of line level information, for example:</p>

<p>$query = $db-&gt;query("SELECT * FROM table", <strong>LINE</strong>, <strong>FILE</strong>);</p>

<p>In our own profiler, we could see where those particular queries were executed and in what file.  It is very helpful if there is a problem with your query, but it goes unnoticed until you review the profiler results.  Upon changing to the Zend Db Adapter, this missing feature was a big loss for us.  I considered passing the information to the $bind argument, but I don't want to neglect the availability of using parameter placeholders.  Additionally that wasn't the intended use of the second argument for the Zend_Db_Statement.</p>

<p>I would love to hear any suggestions, or the response of a possible future inclusion of this feature.</p>

<p>Thank you!</p>

<p>A huge Zend Framework Fan
Mike</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Pieter Kokx (kokx) on 2010-02-17T08:28:33.000+0000</p> 
        <div class="body">
            <p>You can use the PHP function debug_backtrace() for this purpose.</p>

        </div>
    </div>
    </div>

