<h2>ZF-11079: Zend_Db_Table_Abstract-&gt;insert() returns &quot;0&quot; when inserting an empty string</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-02-16T08:06:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-16T08:45:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This bug is related to [ZF-2953], recently resolved:</p>

<pre class="highlight"><code>
CREATE TABLE `table` (code char(2) not null, PRIMARY KEY(code));
</code></pre>

<pre class="highlight"><code>
$table = new Zend_Db_Table('table');
$row = $table-&gt;createRow();
$row['code'] = '';
$row-&gt;save();
$row-&gt;delete();
</code></pre>

<p>Result:</p>

<pre class="highlight"><code>
exception 'Zend_Db_Table_Row_Exception' with message 'Cannot refresh row as parent is missing' in Zend\Db\Table\Row\Abstract.php:764
</code></pre>

<p>Queries:</p>

<pre class="highlight"><code>
connect;   Array ( ) (0.014 s)
DESCRIBE `table`;   Array ( ) (0.006 s)
INSERT INTO `table` () VALUES ();   Array ( ) (0.001 s)
SELECT `table`.* FROM `table` WHERE (`table`.`code` = '0') LIMIT 1;   Array ( ) (0.001 s)
</code></pre>

<p>The empty string passed on the CHAR primary key is dropped, and the insert() function returns the string "0", which makes the refresh fail.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Strict Coding (strictcoding) on 2011-02-16T08:45:06.000+0000</p> 
        <div class="body">
            <p>Actually, setting Zend_Db_Table_Abstract::SEQUENCE to false in the config array does fix that behaviour.
Shouldn't Zend automatically populate this value to false for non- auto-increment/identity primary keys?
Or just default it to false in the definition, then set it to true if an identity has been found when describing the table?</p>

        </div>
    </div>
    </div>

