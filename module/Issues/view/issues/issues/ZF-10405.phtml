<h2>ZF-10405: Zend_Uri::__toString() doesn't handle Exceptions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2010-09-01T05:18:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-18T13:20:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ryan Mauger (bittarman)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Uri</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13301/ZF-10405.diff">ZF-10405.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Uri::__toString() returns the value of getUri(), but getUri() may throw an Exception (as in Zend_Uri_Http). __toString() methods which throw an Exception result in a fatal error. The __toString() method should catch instances of Zend_Uri_Exception and return an empty string.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-03T19:10:22.000+0000</p> 
        <div class="body">
            <p>I disagree. There is no precedent anywhere in Zend Framework where an Exception is caught and an empty is returned. An empty string being returned is very difficult to debug in the case of Zend_Uri_Http, since the exception is thrown if the URI is not valid.</p>

<p>Your application should catch the exception and properly handle it, if this is a possible scenario.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Buckley (cbuckley) on 2010-09-06T01:17:14.000+0000</p> 
        <div class="body">
            <p>On the contrary, no exception is thrown; if an exception is thrown within a __toString() method, an E_FATAL is triggered and the exception cannot be caught.</p>

<p>Example code:</p>

<pre class="highlight"><code>
class Test
{
    public function __toString()
    {   
        throw new Exception('Argh');
    }   
}

$t = new Test();

try {
    (string) $t; 
} catch (Exception $ex) {
    echo 'caught';
}
</code></pre>

<p>This results in "Fatal error:  Method Test::__toString() must not throw an exception," not "caught".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-09T20:59:17.000+0000</p> 
        <div class="body">
            <p>I found a bunch of instances within ZF that the __toString() method could possibly throw an exception. Most of these instances, such as Zend_Paginator, Zend_Form, Zend_Form_Element, Zend_Db_Select, handled the Exception as such:</p>

<pre class="highlight"><code>
public function __toString()
{
    try {
        $return = $this-&gt;render();
        return $return;
    } catch (Exception $e) {
        trigger_error($e-&gt;getMessage(), E_USER_WARNING);
    }

    return '';
}
</code></pre>

<p>So, in addition to returning an empty string, a warning is also raised. This makes me feel better than just returning an empty string which could be very difficult to track down the cause of.</p>

<p>Also not, the following Zend class also have a __toString() method that could possibly throw an exception and aren't handled:</p>

<ul><li>Zend_Currency</li>
<li>Zend_Mail_Part</li>
<li>Zend_Crypt_Rsa_Key</li>
<li>Zend_Uri</li>
</ul><p>I will create a patch for the Zend_Uri instance soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-09T21:21:25.000+0000</p> 
        <div class="body">
            <p>Attached patch with unit test. In this patch, I followed the precedent set by other __toString() methods that can cause an Exception.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-09T21:31:56.000+0000</p> 
        <div class="body">
            <p>Assigning back to Shahar and changing type to patch so it can be applied.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2010-11-18T13:20:23.000+0000</p> 
        <div class="body">
            <p>Applied patch in r23375, merged to 1.11 release in r23376</p>

        </div>
    </div>
    </div>

