<h2>ZF-6629: CLONE -ZenX JQuery callback function names do not pass down correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-12T18:01:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-15T04:22:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chris Anderson (chris.ncic)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
            <li>ZendX_JQuery</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-4588">ZF-4588</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I noticed that the callback function names do not pass to the actual JQuery call correctly.</p>

<p>Example:</p>

<p>I have in my View a code like this:</p>

<pre class="highlight"><code>
    $params = array(
                    "resize" =&gt; "doMyThingAtResize",
                    "title" =&gt; "My Zend Dialog",
                    );
                    
    echo $this-&gt;dialogContainer("dialog1", "Some text", $params, array('class' =&gt; 'flora'));
</code></pre>

<p>It will produce a JQuery call like this:</p>

<pre class="highlight"><code>
$("#dialog1").dialog({"resize":"doMyThingAtResize","title":"My Zend Dialog"});
</code></pre>

<p>This does work in other ways, but the callback for <em>resize</em> event does not get called as the value is text and not a function name.</p>

<p>What we would need it to produce would be like this:</p>

<pre class="highlight"><code>
$("#dialog1").dialog({"resize": doMyThingAtResize,"title":"My Zend Dialog"});
</code></pre>

<p>Same thing <em>doMyThingAtResize</em> without the quotes.</p>

<p>Problem goes AFAIK goes to <em>Zend_Json</em> and PHP <em>json_encode</em> as they will wrap the value with quotes, but I don't think this can be solved there.
One solution might be to add a separate function or parameter to add those callback function names. This means some manual code work to merge these into the variables passed to the JQuery call, but I don't see many other options.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Chris Anderson (chris.ncic) on 2009-05-12T18:08:31.000+0000</p> 
        <div class="body">
            <p>seems like the same issue persists into 1.8, and the latest release in svn (r15478 for zendx, and r15563 for zend).  i'm still getting the double quotes around the function name.  thanks for your help and time.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-05-15T04:22:29.000+0000</p> 
        <div class="body">
            <p>The correct way to express this would be:</p>

<pre class="highlight"><code>
    $params = array(
                    "resize" =&gt; new Zend_Json_Expr("doMyThingAtResize"),
                    "title" =&gt; "My Zend Dialog",
                    );
                    
    echo $this-&gt;dialogContainer("dialog1", "Some text", $params, array('class' =&gt; 'flora'));
</code></pre>

<p>This stops Zend_Json from escaping the field.</p>

        </div>
    </div>
    </div>

