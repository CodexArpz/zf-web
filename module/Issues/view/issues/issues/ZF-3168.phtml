<h2>ZF-3168: Zend_Db_Select naturalJoin with Oracle</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-04-23T12:51:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11263/zf3168.patch">zf3168.patch</a></li>
            <li><a href="/issues/secure/attachment/11262/zf3168.patch">zf3168.patch</a></li>
            <li><a href="/issues/secure/attachment/11267/zf3168_with_tests.patch">zf3168_with_tests.patch</a></li>
            <li><a href="/issues/secure/attachment/11266/zf3168_with_tests.patch">zf3168_with_tests.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>On Oracle, columns that are used for a named-join (either a NATURAL join or a join with a USING clause) cannot have an explicit qualifier.
This code:</p>

<pre class="highlight"><code>
$select = new Zend_Db_Select();
$select-&gt;form('table1');
$select-&gt;joinNatural('table2');
</code></pre>

<p>renders</p>

<pre class="highlight"><code>
SELECT table1.*, table2.* FROM table1 NATURAL JOIN table2;
</code></pre>

<p>But in this case, Oracle only accepts:</p>

<pre class="highlight"><code>
SELECT * FROM table1 NATURAL JOIN table2;
</code></pre>

<hr /><p>Another code:</p>

<pre class="highlight"><code>
$select = new Zend_Db_Select();
$select-&gt;form('table1');
$select-&gt;joinNatural('table2');
$select-&gt;join('table3','table1.col = table3.col'); // Column doesn't present in table2
</code></pre>

<p>renders</p>

<pre class="highlight"><code>
SELECT table1.*, table2.*, table3.* FROM table1 NATURAL JOIN table2 INNER JOIN table3 ON table1.col = table3.col;
</code></pre>

<p>In this case, Oracle accepts:</p>

<pre class="highlight"><code>
SELECT * FROM table1 NATURAL JOIN table2 INNER JOIN table3 ON table1.col = table3.col;
    or
SELECT table3.* FROM table1 NATURAL JOIN table2 INNER JOIN table3 ON table1.col = table3.col;
</code></pre>

<hr /><p>Last piece of code:</p>

<pre class="highlight"><code>
$select = new Zend_Db_Select();
$select-&gt;form('table1','col1');  // Column col1 can be in table2 or not
$select-&gt;joinNatural('table2',null);
</code></pre>

<p>renders</p>

<pre class="highlight"><code>
SELECT table1.col1, table2. FROM table1 NATURAL JOIN table2;
</code></pre>

<p>In this case, Oracle accepts:</p>

<pre class="highlight"><code>
SELECT col1 FROM table1 NATURAL JOIN table2;
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2008-04-25T12:57:32.000+0000</p> 
        <div class="body">
            <p>Correction</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2008-04-26T03:05:01.000+0000</p> 
        <div class="body">
            <p>New patch with associated tests</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2008-04-26T04:29:57.000+0000</p> 
        <div class="body">
            <p>Another correction, this time on tests (default autoQutoeIdentifier is true)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-09T12:30:15.000+0000</p> 
        <div class="body">
            <p>Ralph, it might be worth checking in to whether Simon can take this one on. If not, please evaluate and fix/categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:59:37.000+0000</p> 
        <div class="body">
            <p>Mickael, work with me next week to get this resolved.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2009-01-22T11:07:55.000+0000</p> 
        <div class="body">
            <p>I have also 2 tests failures that can be linked to this issue:</p>

<p>2) testTableRelationshipFindManyToManyRowsetSelect(Zend_Db_Table_Relationships_OracleTest)
Zend_Db_Statement_Oracle_Exception: 918 ORA-00918: dÚfinition de colonne ambigu SELECT z2.*
            FROM (
                SELECT z1.**, ROWNUM AS "zend_db_rownum"
                FROM (
                    SELECT "i".*, "m".* FROM "zfbugs_products" "i"
 INNER JOIN "zfproducts" "m" ON "i"."product_id" = "m"."product_id" WHERE ("bug_id" = 1) AND ("i"."bug_id" = 1.000000) O
RDER BY "product_name" ASC
                ) z1
            ) z2
            WHERE z2."zend_db_rownum" BETWEEN 1 AND 2
D:\web\ZendFramework\standard\trunk\library\Zend\Db\Statement\Oracle.php:274
D:\web\ZendFramework\standard\trunk\library\Zend\Db\Statement.php:283
D:\web\ZendFramework\standard\trunk\library\Zend\Db\Adapter\Abstract.php:457
D:\web\ZendFramework\standard\trunk\library\Zend\Db\Select.php:639
D:\web\ZendFramework\standard\trunk\library\Zend\Db\Table\Row\Abstract.php:1043</p>

<p>3) testTableRelationshipMagicFindManyToManyRowsetSelect(Zend_Db_Table_Relationships_OracleTest)
Zend_Db_Statement_Oracle_Exception: 918 ORA-00918: dÚfinition de colonne ambigu SELECT z2.*
            FROM (
                SELECT z1.**, ROWNUM AS "zend_db_rownum"
                FROM (
                    SELECT "i".*, "m".* FROM "zfbugs_products" "i"
 INNER JOIN "zfproducts" "m" ON "i"."product_id" = "m"."product_id" WHERE ("bug_id" = 1) AND ("i"."bug_id" = 1.000000) O
RDER BY "product_name" ASC
                ) z1
            ) z2
            WHERE z2."zend_db_rownum" BETWEEN 1 AND 2</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas VEQUAUD (echo_94) on 2009-02-28T01:29:08.000+0000</p> 
        <div class="body">
            <p>Hi there,</p>

<p>I've got an exception with an oracle query executed via Zend but it works when I execute it with Toad...</p>

<p>Here is the method building the query :
      $select = $this-&gt;select();
      $select-&gt;setIntegrityCheck(false);
      $select-&gt;from(array("INDIVIDUS" =&gt; "EAI_TA_INDIVIDUS"));
      $select-&gt;joinInner(array("AFF" =&gt; "EAI_TA_AFFECTATIONS"), 'INDIVIDUS.IND_ID = AFF.IND_ID');
      $select-&gt;where('INDIVIDUS.ANN_ANNEE = ?', (int)$annee);
      $select-&gt;where('INDIVIDUS.IND_MATRICULE = ?', $matricule);</p>

<p>Here is the query :
SELECT "INDIVIDUS".*, "AFF".*
FROM "EAI_TA_INDIVIDUS" "INDIVIDUS"
INNER JOIN "EAI_TA_AFFECTATIONS" "AFF" ON INDIVIDUS.IND_ID = AFF.IND_ID
WHERE (INDIVIDUS.ANN_ANNEE = 2009) AND (INDIVIDUS.IND_MATRICULE = '17483')</p>

<p>And here is the exception</p>

<p>exception 'Zend_Db_Statement_Exception' with message 'SQLSTATE[HY000]: General error: 918 OCIStmtExecute: ORA-00918: column ambiguously defined
 (ext\pdo_oci\oci_statement.c:146)' in D:\www\Zend Framework\Zend\Db\Statement\Pdo.php:238</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:28.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

