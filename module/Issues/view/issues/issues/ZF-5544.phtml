<h2>ZF-5544: Zend_Config_Writer_Ini does not comply to current manual example</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-01-14T05:17:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-02-26T14:22:33.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.6 (02/Mar/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config_Writer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11701/zf-5544.patch">zf-5544.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Catchable fatal error: Argument 1 passed to Zend_Config_Writer_Ini::_addBranch() must be an instance of Zend_Config, string given, called in D:\ZendFramework\library\Zend\Config\Writer\Ini.php on line 119 and defined in D:\ZendFramework\library\Zend\Config\Writer\Ini.php on line 138.</p>

<p>This error is triggered when using Zend_Config_Writer_Ini following the third example in the manual</p>

<pre class="highlight"><code>
$writer-&gt;write( 'example.ini', $config);
</code></pre>

<p>Where $config is a Zend_Config.</p>

<p>This happens because the code expects a section and doesn't account for no sections at all. In fact, the config <em>should</em> have at least one section for the writer to function properly.</p>

<p>However, this example in the manual: "Example 7.1. Using Zend_Config Per Se"  shows us that it is possible to have configuration values that are not part of a section.</p>

<p>It is also possible to read config.ini files that contain no sections at all using Zend_Config_Ini.</p>

<p>I think the behavior of Zend_Config_Writer_Ini should be the inverse of Zend_Config_Ini in that what you can legally read with the latter can be legally written with the first.</p>

<p>I will write a test with a Zend_Config object as in Example 7.1 and see if Zend_Config_Ini_Writer will write it properly. If it doesn't it should be fixed.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2009-01-14T05:53:04.000+0000</p> 
        <div class="body">
            <p>I attached a patch, that solves this issue and does not break the test.</p>

<p>I do yet have to add a test to avoid regression and I would appreciate if the community would test my patch to see if it still writes other configurations correctly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2009-01-14T05:55:45.000+0000</p> 
        <div class="body">
            <p>Changed Issue type to Patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2009-02-26T14:22:33.000+0000</p> 
        <div class="body">
            <p>Fixed with r14175 and merged into 1.7 release branch with r14176.</p>

        </div>
    </div>
    </div>

