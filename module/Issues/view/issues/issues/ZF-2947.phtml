<h2>ZF-2947: Zend_Cache_Backend_Sqlite sql escaping</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-03-22T17:16:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-04-05T03:30:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11189/ZF-2947.patch">ZF-2947.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>None of the methods in Zend_Cache_Backend_Sqlite preform sqlite_escape_string on any passed in values.</p>

<p>This causes errors if the passed values into any methods contain single quotes.</p>

<p>It also opens the cache up to sql injection attacks.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-04-04T15:56:33.000+0000</p> 
        <div class="body">
            <p>data are alrealy escaped</p>

<p>tags and cache ids are not escaped because there are "protected" by _validateIdOrTag() of Zend_Cache_Core</p>

<p>so this patch is not necessary</p>

<p>thanks anyway</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by James Dempster (letssurf) on 2008-04-04T16:36:08.000+0000</p> 
        <div class="body">
            <p>Although this is not an issue if used though the Zend_Cache_Core, if used directly ID's and tags are open to SQL injection attacks.</p>

<p>I don't see anything wrong with airing on the side of caution here and making the Zend_Cache_Backend_Sqlite behave securely by correctly escaping id's and tags, to allow for use on it's own. Rather than only allowing the safety of security though Zend_Cache_Core.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-04-05T03:30:09.000+0000</p> 
        <div class="body">
            <p>direct use of Zend_Cache backends is not supported</p>

        </div>
    </div>
    </div>

