<h2>ZF2-260: Support for classnames as parameter value in DI</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2012-04-11T14:52:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-25T21:27:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Stefan Kleff (dershao)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Di</li>
            <li>ClassName</li>
            <li>DI</li>
            <li>Doctrine</li>
            <li>String</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently I'm trying to configure Doctrine2 with ZF2/DI and in some cases it's necessary to specify a class name (string).
Example: "defaultRepositoryClassName" parameter of Doctrine\ORM\Configuration should be something like "MyLib\MyRepository" 
This is (afaik) not possible with the current DIC because "MyLib\MyRepository" will be recognized as class and therefore it will we instantiated and a reference will be used during injection.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Stefan Kleff (dershao) on 2012-04-11T15:14:48.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
return array(
    'di' =&gt; array(
        'definition' =&gt; array(
            'class' =&gt; array(
                'Doctrine\ORM\Configuration' =&gt; array(
                    'methods' =&gt; array(
                        'setDefaultRepositoryClassName' =&gt; array(
                                'defaultRepositoryClassName' =&gt; array('type' =&gt; false, 'required' =&gt; true)
                        ),
                     ),
                ),
            ),
        ),
    ),
);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Kleff (dershao) on 2012-04-11T15:15:20.000+0000</p> 
        <div class="body">
            <p>'type' =&gt; false does the magic ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Kleff (dershao) on 2012-04-18T09:47:58.000+0000</p> 
        <div class="body">
            <p>Assuming that type =&gt; false is the correct way to inject strings instead of classnames, I found another part where this is currently not working:</p>

<p>Use case:
There is a class with a method which expects a classname (not an instance). You want to inject multiple class names in this method</p>

<p>Given:
definition with method "addMyParam" and a param "myClassName" =&gt; array('type'=&gt;false).
instance with 'injections' array to set the classnames.</p>

<p>Result:
Somehow the class definition of the given class names is already known by DI. Maybe because of some RunetimeDefinition (I just started looking into DI). During resolveMethodParameters() in the "priority 1"-code the given string (classname) will be checked if the string is a known class name (which is the case) and instantiated.</p>

<p>Expected:
Still assuming that type=&gt;false indicates that it is a string instead of an object, it should not instntiate the class.</p>

<p>Bugfix:
Checking if the classname is known by the DI 
AND checking if type !== false</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2012-06-25T21:27:08.000+0000</p> 
        <div class="body">
            <p>Fixed in master</p>

        </div>
    </div>
    </div>

