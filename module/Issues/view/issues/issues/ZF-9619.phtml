<h2>ZF-9619: Custom Translate Adapters don't work in 1.10.3</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-06T02:25:52.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-07T12:58:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.4 (28/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Dan Osipov (danospv)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>After revision 21661, custom Translate Adapters are not being executed. Instead, a notice like:
Notice: The language 'en' has to be added before it can be used. in /Path/to/library/Zend/Translate/Adapter.php on line 394
is displayed.
Reverting changes from the revision fixes the bug, and has the Adapter working as before.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-06T11:04:03.000+0000</p> 
        <div class="body">
            <p>Sorry, "but do not work" is not enough for reproduction.
What are you doing, what are you calling, how does your adapter look like.</p>

<p>Note:
Language notices can be switched off... they are no failure, they are wished and available since 1.8 or earlier.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dan Osipov (danospv) on 2010-04-06T11:23:00.000+0000</p> 
        <div class="body">
            <p>Notice is not an issue in itself, but the Adapter is not executed. Here is the Adapter:
&lt;?php
class MyNamespace_Adapter extends Zend_Translate_Adapter
{
    private $_data = array();</p>

<pre><code>/**
 * Load translation data
 *
 * @param  string|array  $data
 * @param  string        $locale  Locale/Language to add data for, identical with locale identifier,
 *                                see Zend_Locale for more information
 * @param  array         $options OPTIONAL Options to use
 * @return array
 */
protected function _loadTranslationData($data, $locale, array $options = array())
{
    // ommitted logic for filling in $this-&gt;_data
    return $this-&gt;_data;
}

/**
 * returns the adapters name
 *
 * @return string
 */
public function toString()
{
    return "MyAdapter";
}
</code></pre>

<p>}</p>

<p>I call it using:
$translator = new Zend_Translate('MyNamespace_Adapter', '', 'en');</p>

<p>I was able to narrow down the issue to the following lines in Zend/Translate/Adapter.php:</p>

<pre><code>    $locale = null;
    if (!empty($options['locale'])) {
        $locale = $options['locale'];
        unset($options['locale']);
    }
    $this-&gt;setOptions($options);
</code></pre>

<p>At the end of these lines, the locale is set to 'auto', but:</p>

<pre><code>    if ($this-&gt;getLocale() !== (string) $options['locale']) {
        $this-&gt;setLocale($options['locale']);
    }
</code></pre>

<p>$this-&gt;setLocale() is executed, even though there is no translation data was loaded from the Adapter yet.</p>

<p>Let me know if this helps</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-06T12:16:52.000+0000</p> 
        <div class="body">
            <p>I can not verify your problems:</p>

<p>You are giving '' as content, so there are no data which are added.
The raised notices are therefor correct.</p>

<p>When I change your call to give content like</p>

<pre class="highlight"><code>
$translator = new Zend_Translate('MyNamespace_Adapter', 'somecontent', 'en');
</code></pre>

<p>and add a var_dump within your _loadTranslation method, this var_dump returns the previous given "somecontent".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dan Osipov (danospv) on 2010-04-07T01:45:05.000+0000</p> 
        <div class="body">
            <p>Ok, I see. This works because of the following:</p>

<pre class="highlight"><code>
 if (!empty($options['content'])) {
     $this-&gt;addTranslation($options);
 }
</code></pre>

<p>But why is the content required now? This was not the case in 1.10.2, and I understand that 1.10.3 was a bugfix release, that shouldn't have changed functionality?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-07T12:58:26.000+0000</p> 
        <div class="body">
            <p>A translation was also required before.</p>

<p>$data was not allowed to be empty... we just added array handling which means that the old $data is now internally named $options['content'].</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-07T12:58:44.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue</p>

        </div>
    </div>
    </div>

