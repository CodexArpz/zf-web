<h2>ZF-279: Zend_Db_Statement::fetchColumn() fetches all rows -  PDOStatement::fetchColumn() only the next one</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-07-22T06:38:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Gunar Scholz (felix)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Statement::fetchColumn() iterates through the result set</p>

<p>while ($row = $this-&gt;fetch ...)</p>

<p>and returns an array, but PDOStatement::fetchColumn() only fetches next row each time called and returns a single value.</p>

<p>Subsequent errors:
- Zend_Db_Adapter_Abstract::fetchOne() returns the whole first column instead of a single value for all non-pdo-adapters (except for Oracle because Zend_Db_Statement_Oracle overides fetchColumn())
- Zend_Db_Statement::fetchAll() with given second parameter (column number to fetch) returns a nested array because it calls $this-&gt;fetchColumn() using a while loop</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by bhawin13 (bhawin13) on 2006-08-29T01:06:16.000+0000</p> 
        <div class="body">
            <p>Hello,
What do you think about following solution.</p>

<h2>/*</h2>

<h2>Code of  Zend_Db_Statement::fetchColumn()</h2>

<p><em>/
    /**
     * returns the data from a single column in a result set
     */
    public function fetchColumn($col = 0)
    {
        $data = array();
        $col = (int) $col;
        /</em>
        while ($row = $this-&gt;fetch(Zend_Db::FETCH_NUM)) {
            $data[] = $row[$col];
        }
        */</p>

<pre><code>    //following line will fetch next row
    $row = $this-&gt;fetch(Zend_Db::FETCH_NUM)

    //following line will get data from specific column
    $data[] = $row[$col];

    return $data;

}
</code></pre>

<h2>/*</h2>

<p>bhawin13
*/</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gunar Scholz (felix) on 2006-08-29T12:53:24.000+0000</p> 
        <div class="body">
            <p>No, this returns an array with one element, but PDOStatement::fetchColumn() returns only a scalar value or false.
My personal solution:</p>

<pre class="highlight"><code>
//$data = array();
$col = (int) $col;
//while ($row = $this-&gt;fetch(Zend_Db::FETCH_NUM)) {
//    $data[] = $row[$col];
//}
//return $data;
$result = $this-&gt;fetch(Zend_Db::FETCH_NUM);
return ($result and (isset($result[$col]) or is_null($result[$col]))) ? $result[$col] : false;
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:22:37.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-02T22:57:54.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 3161.</p>

        </div>
    </div>
    </div>

