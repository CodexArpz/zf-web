<h2>ZF-1858: Zend_XmlRpc_Server should implement Zend_Server_Interface</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2007-08-16T08:58:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_XmlRpc_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Changing "public function handle(Zend_XmlRpc_Request $request = null)"
to  "public function handle($request = null)" is not critical, because type checking is also done by the following setRequest call. The other changes also don't seem to cause problems.</p>

<p>Patch follows:</p>

<pre class="highlight"><code> 
Index: Zend/XmlRpc/Server.php
===================================================================
--- Zend/XmlRpc/Server.php      (revision 6103)
+++ Zend/XmlRpc/Server.php      (working copy)
@@ -112,7 +112,7 @@
  * @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (<a href="http://www.zend.com">http://www.zend.com</a>)
  * @license    <a href="http://www.zend.com/license/framework/1_0.txt">http://www.zend.com/license/framework/1_0.txt</a> Zend Framework License version 1.0
  */
-class Zend_XmlRpc_Server
+class Zend_XmlRpc_Server implements Zend_Server_Interface
 {
     /**
      * Character encoding
@@ -368,7 +368,7 @@
      * @param mixed $class
      * @return void
      */
-    public function setPersistence($class = null)
+    public function setPersistence($class)
     {
     }
 
@@ -447,7 +447,7 @@
      * @param int $code
      * @return Zend_XmlRpc_Server_Fault
      */
-    public function fault($fault, $code = 404)
+    public function fault($fault = null, $code = 404)
     {
         if (!$fault instanceof Exception) {
             $fault = (string) $fault;
@@ -544,7 +544,7 @@
      * @param Zend_XmlRpc_Request $request Optional
      * @return Zend_XmlRpc_Response|Zend_XmlRpc_Fault
      */
-    public function handle(Zend_XmlRpc_Request $request = null)
+    public function handle($request = null)
     {
         // Get request
         if ((null === $request) &amp;&amp; (null === ($request = $this-&gt;getRequest()))) {
@@ -726,3 +726,4 @@
         return $responses;
     }
 }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-08-16T13:21:24.000+0000</p> 
        <div class="body">
            <p>Assigned to Matthew</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-11-16T15:12:42.000+0000</p> 
        <div class="body">
            <p>I was against Zend_Server_Interface from the beginning, because it does not allow for type hinting, which would make implementations such as Zend_XmlRpc_Server (which predated Zend_Server_Interface) more complex (explicit checks in the code, instead of implicit checks via type hinting).</p>

<p>Won't fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lars Strojny (lars) on 2007-11-19T07:03:28.000+0000</p> 
        <div class="body">
            <p>Aeh, what? Your opinion is fine. But as the other components implement this interface, don't you think it is a really good idea to implement that in Zend_XmlRpc_Server too? Just for the sake of completeness.
And yes, you are right, the type hinting thing is pretty sad, but at the end it is a PHP fault (see <a href="http://bugs.php.net/bug.php?id=37854">http://bugs.php.net/bug.php?id=37854</a>). Not implementing Zend_Server_Interface in Zend_XmlRpc_Server would erase the possibility to have type-hinting for a consumer of Zend_Server-implementations. I think this is a valuable argument.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T11:24:14.000+0000</p> 
        <div class="body">
            <p>Scheduling for next minor release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-05T09:05:43.000+0000</p> 
        <div class="body">
            <p>Changes commited to trunk in r10683 and merged to 1.6 release branch in r10684.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:14.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

