<h2>ZF-139: Insert/update do not distinguish between literal strings and SQL expressions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-23T07:23:07.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Shaun Mitchell (shaun.mitchell)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-900">ZF-900</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When attempting to use build in Mssql methods the PDO Binding attempts to convert it to a regular string insert.</p>

<p>$db = Zend_Db::factory('pdoMssql', array(SETUP STUFF));</p>

<p>$db-&gt;update(TABLE_NAME, array('dateTime_Field' =&gt; 'getdate()'), null);</p>

<p>Returns:</p>

<p>Fatal error:  Uncaught exception 'PDOException' with message 'SQLSTATE[HY000]: General error: 10007 Syntax error converting datetime from character string. [10007] (severity 5) [(null)]' in E:\development_tools\Skink3_CISCO\library\Zend\Db\Adapter\Abstract.php:153
Stack trace:</p>

<h1>0 E:\development_tools\Skink3_CISCO\library\Zend\Db\Adapter\Abstract.php(153): PDOStatement-&gt;execute(Array)</h1>

<h1>1 E:\development_tools\Skink3_CISCO\library\Zend\Db\Adapter\Abstract.php(251): Zend_Db_Adapter_Abstract-&gt;query('UPDATE SNMPC.DB...', Array)</h1>

<h1>2 E:\development_tools\Skink3_CISCO\cisco_snmp.php(67): Zend_Db_Adapter_Abstract-&gt;update('SNMPC.DBO.CISCO...', Array, NULL)</h1>

<h1>3 E:\ZendStudioServer\dummy.php(1): include('E:\development_...')</h1>

<h1>4 {main}</h1>

<p>thrown in E:\development_tools\Skink3_CISCO\library\Zend\Db\Adapter\Abstract.php on line 153</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:14:34.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-12-29T16:18:46.000+0000</p> 
        <div class="body">
            <p>The issue is actually more generic than just Microsoft SQL Server, or individual TSQL functions.</p>

<p>Attempting to set a column to an expression using the update() or insert() functions will fail, because the PHP method assumes the values are literal strings, not expressions.</p>

<p>Just thinking out loud, but one way to solve this is to use a class, and pass an instance of that class instead of a literal string:</p>

<pre class="highlight"><code>
$db-&gt;update(TABLE_NAME, array('dateTime_Field' =&gt; new Zend_Db_Expression('getdate()')), null);
</code></pre>

<p>That way the update() method can tell the difference between a simple string an an object instance of Zend_Db_Expression, and it knows to treat it as a string (for which it should create a bound parameter) or an expression.</p>

<p>Interpolating an expression like this introduces risks of SQL injection.  One way we can mitigate that risk is to enclose the expression in parentheses when generating the SQL.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-16T17:38:52.000+0000</p> 
        <div class="body">
            <p>Linking to ZF-900.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Gibson (jollytoad) on 2007-03-14T05:18:00.000+0000</p> 
        <div class="body">
            <p>This issue may be fixed due to commit in rev 3897. See ZF-1038 for more details.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-16T01:14:49.000+0000</p> 
        <div class="body">
            <p>This should be resolved as of revision 3897.</p>

<p>Identifiers should be quoted now, according to the rules of the db adapter.
To override quoting, and specify a SQL expression, you can use an instance of Zend_Db_Expr.</p>

        </div>
    </div>
    </div>

