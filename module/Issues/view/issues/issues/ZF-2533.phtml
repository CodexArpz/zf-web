<h2>ZF-2533: Zend internally doesn't use user-defined class loader</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-01-31T02:24:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-14T05:44:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Tomá? Procházka (t.prochazka)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3151">ZF-3151</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11249/patch">patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend own internally doesn't use my own class loader.</p>

<p>I set this:</p>

<pre class="highlight"><code>
MyZendLoader::registerAutoload('MyZendLoader');
</code></pre>

<p>And now for example in Zend_Db_Table_Row_Abstract is used this:</p>

<pre class="highlight"><code>
Zend_Loader::loadClass($tableClass);
</code></pre>

<p>But this static method is hardcoded and doesn't use my class loader, but table class it's my own class and I need use own class loader for it.</p>

<p>I found simple workarounfd, but it's necessary modify Zend_loader class and I don't like it.</p>

<pre class="highlight"><code>
    public static function loadClass($class, $dirs = null)
    {
        if (class_exists($class, false) || interface_exists($class, false)) {
            return;
        }
        
        if (spl_autoload_functions()!==false) {
          spl_autoload_call($class);
          if (class_exists($class, false) || interface_exists($class, false))  return;
        } 
</code></pre>

<p>I only add</p>

<pre class="highlight"><code>
        if (spl_autoload_functions()!==false) {
          spl_autoload_call($class);
          if (class_exists($class, false) || interface_exists($class, false))  return;
        } 
</code></pre>

<p>If is defined autoload function, Zend_Loader::loadClass() use it instead of default implementation.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-02-20T15:48:47.000+0000</p> 
        <div class="body">
            <p>Resetting priority and assigning for review.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2008-04-21T14:24:46.000+0000</p> 
        <div class="body">
            <p>As of 1.5.1 the issue remains unresolved. This is my patch proposal.
It will add an optional argument to Zend_Loader::loadClass() to specify whether to use autoload. *_Loader should call the method specifying false as third argument, while calls to Zend_Loader::loadClass() from Zend_Db component now works.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-22T09:07:58.000+0000</p> 
        <div class="body">
            <p>This is a pretty major change, and has wide ranging implications -- performance, class resolution, etc. While I can see the benefits, we cannot make a change of this scope until we are ready for a major revision (2.0).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrea Ercolino (aercolino) on 2008-11-25T02:07:57.000+0000</p> 
        <div class="body">
            <p>I'm using the simple non-optional patch by Tomáš Procházka since march 2008 and it works pretty well.
My setup is mixed: some classes follow ZF naming convention and some don't. 
The patch, together with my own class loader, makes any difference transparent.</p>

<p>As for the "wide ranging implications" I've seen none.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-30T06:41:07.000+0000</p> 
        <div class="body">
            <p>Assigning this to Matthew, as he oversees cross-cutting issues like this. I'd like to see a simple one-line comment that says with no uncertainty what we'll be doing- either wait for 2.0 or consider for 1.x.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-14T05:44:06.000+0000</p> 
        <div class="body">
            <p>Resolved in trunk and 1.8 release branch</p>

        </div>
    </div>
    </div>

