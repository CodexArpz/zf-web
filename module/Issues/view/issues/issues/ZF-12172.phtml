<h2>ZF-12172: formSelect Helper will not properly call __toString if object is passed as value</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-04-25T16:12:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-25T16:12:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Chuck Reeves (creeves1982)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When passing an object to Zend_View_Helper_FormSelect, the __toString method will not be called since the value is cast to an array in with array_map('strval', (array) $value);</p>

<p>This causes PHP error if some properties of the object do not implement __toString</p>

<p>Test Case</p>

<pre class="highlight"><code>
class Foo
{
    public $_filter;

    public $_value;

    public function __construct()
    {
        $this-&gt;_filter = new Zend_Filter();
    }

    public function setValue($value)
    {
        $this-&gt;_value = $this-&gt;_filter-&gt;filter($value);
        return $this;
    }

    public function __toString()
    {
        return $this-&gt;_value;
    }
}

$foo = new Foo();
$foo-&gt;setValue('bar');

echo $view-&gt;formSelect('test',
            $foo,
            null,
            array('bar','baz','bat'));
</code></pre>

<p>The above will throw a fatal error that Zend_Filter cannot be converted to string.
I have a fix that I will apply to Zend_View_Helper_FormSelect:</p>

<pre class="highlight"><code>

if (is_object($value)) {
    //if the object can be iterated, loop through
    if ($value instanceof Iterator) {
    $temp = array();
    foreach($value as $key =&gt; $value) {
        $temp[$key] = (string) $value;
    }

    $value = $temp;
    } else {
    $value = array((string) $value);
    }
} else {
    $value = array_map('strval', (array) $value);
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

