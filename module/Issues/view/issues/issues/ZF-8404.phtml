<h2>ZF-8404: Zend_Form::addElement() from config does not check the name of the newly created element</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-11-26T23:53:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you add element from config using <em>addElement()</em> the script executes <em>createElement()</em> method. But the name of the element may be changed there. For an instance I can add prefix to the name. It's not taken into consideration.</p>

<p>Here is my solution:</p>

<pre class="highlight"><code>
    /**
     * Add a new element
     *
     * $element may be either a string element type, or an object of type 
     * Zend_Form_Element. If a string element type is provided, $name must be 
     * provided, and $options may be optionally provided for configuring the 
     * element.
     *
     * If a Zend_Form_Element is provided, $name may be optionally provided, 
     * and any provided $options will be ignored.
     * 
     * @param  string|Zend_Form_Element $element 
     * @param  string $name 
     * @param  array|Zend_Config $options 
     * @return Zend_Form
     */
    public function addElement($element, $name = null, $options = null)
    {
        if (is_string($element)) {
            if (null === $name) {
                require_once 'Zend/Form/Exception.php';
                throw new Zend_Form_Exception('Elements specified by string must have an accompanying name');
            }

            if (is_array($this-&gt;_elementDecorators)) {
                if (null === $options) {
                    $options = array('decorators' =&gt; $this-&gt;_elementDecorators);
                } elseif ($options instanceof Zend_Config) {
                    $options = $options-&gt;toArray();
                }
                if (is_array($options) 
                    &amp;&amp; !array_key_exists('decorators', $options)
                ) {
                    $options['decorators'] = $this-&gt;_elementDecorators;
                }
            }

            // Element name may be changed in createElement!
            //$this-&gt;_elements[$name] = $this-&gt;createElement($element, $name, $options);
            // &lt;--
            $element = $this-&gt;createElement($element, $name, $options);
            $name = $element-&gt;getName();
            $this-&gt;_elements[$name] = $element;
            // --&gt;
        } elseif ($element instanceof Zend_Form_Element) {
            $prefixPaths              = array();
            $prefixPaths['decorator'] = $this-&gt;getPluginLoader('decorator')-&gt;getPaths();
            if (!empty($this-&gt;_elementPrefixPaths)) {
                $prefixPaths = array_merge($prefixPaths, $this-&gt;_elementPrefixPaths);
            }

            if (null === $name) {
                $name = $element-&gt;getName();
            }

            $this-&gt;_elements[$name] = $element;
            $this-&gt;_elements[$name]-&gt;addPrefixPaths($prefixPaths);
        }

        $this-&gt;_order[$name] = $this-&gt;_elements[$name]-&gt;getOrder();
        $this-&gt;_orderUpdated = true;
        $this-&gt;_setElementsBelongTo($name);

        return $this;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:22.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

