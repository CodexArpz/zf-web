<h2>ZF-9335: Elements with same names should not be removed when Zend_Form_Element::setBelongsTo() is used</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-03-04T17:47:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9351">ZF-9351</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Supose:
$this-&gt;addElement('text', 'number', array(
            'label'     =&gt; 'Phone Number 1',
            'belongsTo' =&gt; 'user[Contact][0]'
        ));
$this-&gt;addElement('text', 'number', array(
            'label'     =&gt; 'Phone Number 2',
            'belongsTo' =&gt; 'user[Contact][1]'
        ));
$this-&gt;addElement('text', 'number', array(
            'label'     =&gt; 'Phone Number 3',
            'belongsTo' =&gt; 'user[Contact][3]'
        ));</p>

<p>The form above will return "Phone Number 3" only, but the output name attribute is not the same, are:
user[Contact][0][number]
user[Contact][1][number]
user[Contact][2][number]</p>

<p>Zend_Form deals as one.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-03-06T17:54:19.000+0000</p> 
        <div class="body">
            <p>You should try this the other way around, like</p>

<p>$this-&gt;addElement('text', 'Contact1', array(
'label' =&gt; 'Phone Number 1',
'belongsTo' =&gt; 'user[Contact]'
));
$this-&gt;addElement('text', 'Contact2', array(
'label' =&gt; 'Phone Number 2',
'belongsTo' =&gt; 'user[Contact]'
));
$this-&gt;addElement('text', 'Contact3', array(
'label' =&gt; 'Phone Number 3',
'belongsTo' =&gt; 'user[Contact]'
));</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Lima (yourwebmaker) on 2010-03-06T18:32:02.000+0000</p> 
        <div class="body">
            <p>Christian,
I think that is not correct because:
1 - Elements name are uniques
2 - If I will need populate my from an array map this won't work correctly, e.g:
//Supose $data it's  a map from my model
$data['user']['Contact'][0]['number'] = '1111-2222';
$data['user']['Contact'][1]['number'] = '3333-4444';
$data['user']['Contact'][2]['number'] = '5555-6666';
//..//
$data['user']['Contact'][100]['number'] = '9999-9999';
$form-&gt;populate($data); //This won't works.</p>

<p>So... 
I would have to do:
$data['user']['Contact']['Contact1'] = '1111-2222';
$data['user']['Contact']['Contact2'] = '3333-4444';
$data['user']['Contact']['Contact3'] = '5555-6666';
.. but my model is not this</p>

        </div>
    </div>
    </div>

