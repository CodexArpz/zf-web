<h2>ZF-4023: POST data persisting through different HTTP requests</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-21T07:02:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-08-22T14:49:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Lorenzo Alberton (quipo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Shahar Evron (shahar)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I tried doing two consecutive HTTP calls with the same client object, and POST data persisted through the two requests.</p>

<p>$client = self::getHttpClient()-&gt;setUri('<a href="http://my.service/">http://my.service/</a>');
$client-&gt;setParameterPost('name1', 'value1');
$client-&gt;setEncType(Zend_Http_Client::ENC_URLENCODED);
$response = $client-&gt;request(Zend_Http_Client::POST);</p>

<p>$client = self::getHttpClient()-&gt;setUri('<a href="http://my.other.service/">http://my.other.service/</a>');
$client-&gt;setParameterPost('name2', 'value2');
$client-&gt;setEncType(Zend_Http_Client::ENC_URLENCODED);
$response = $client-&gt;request(Zend_Http_Client::POST);</p>

<p>//my.other.service also received 'name1'='value1'; from the first request</p>

<p>Adding $client-&gt;resetParameters(); between the two calls solved the issue, but the parameters should be automatically cleared after each request() call.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-22T14:49:17.000+0000</p> 
        <div class="body">
            <p>The solution is, as you noted, resetParameters(). This is by design, and would break that design to change it.</p>

        </div>
    </div>
    </div>

