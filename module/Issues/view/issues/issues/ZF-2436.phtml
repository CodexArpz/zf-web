<h2>ZF-2436: Zend_Controller_Response_Abstract shouldn't contain methods strictly related to HTTP transport and should have an interface</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-01-15T05:14:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michal Minicki (martel)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-4349">ZF-4349</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Controller_Response_Abstract shouldn't contain methods strictly related to HTTP transport. This doesn't make any sense for already existent Zend_Controller_Response_Cli which extends this abstract class. Following methods should be moved to corresponding Http class:</p>

<ul><li>setHeader</li>
<li>setRedirect</li>
<li>isRedirect</li>
<li>getHeaders</li>
<li>clearHeaders</li>
<li>setRawHeader</li>
<li>getRawHeaders</li>
<li>clearRawHeaders</li>
<li>clearAllHeaders</li>
<li>setHttpResponseCode</li>
<li>getHttpResponseCode</li>
<li>canSendHeaders</li>
<li>sendHeaders</li>
<li>sendResponse (should be refactored into two separate classes)</li>
</ul><p>It would be nice to extract an Interface at the same time allowing for use of user created Response objects.</p>

<p>And another thing worth considering is extracting http header methods to it's own class. HTTP standard uses them in the same way for a request as well as a response .</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2008-01-15T05:19:29.000+0000</p> 
        <div class="body">
            <p>I will be happy to work on this but I'm sure somebody should review this issue first. Feel free to assign it to me if you find it useful.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-01-15T08:54:21.000+0000</p> 
        <div class="body">
            <p>The reason I put the header information into the base request class was simply to make it trivial to switch out the response object to re-purpose an app from HTTP to the CLI. If those methods are removed, such a switch can be problematic, as code calling the header-specific methods will now cause the application to fail. With the current status, those methods are simply ignored on the CLI implementation.</p>

<p>Theoretically, we could intercept these via __call(), but then we need to define that into the interface.</p>

<p>Before any work is done, I'd like to see some proposed code that addresses the issue of headers in a BC way.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-05T20:46:38.000+0000</p> 
        <div class="body">
            <p>Marking for next major version, as it would create potential BC issues.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:45.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

