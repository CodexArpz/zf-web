<h2>ZF-4926: Problems with URL</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-12T07:19:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-24T10:22:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bruno Pirajá Moyle (brunitto)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is the modular file structure:</p>

<pre class="highlight"><code>
/application
    /config
    /layouts
        /default.phtml
        /error.phtml
    /modules
        /lists
        /default
        /...
    /bootstrap.php
/library
/public
    /css
    /img
    /js
    /.htaccess
    /index.php
</code></pre>

<p>Then in my bootstrap file...</p>

<pre class="highlight"><code>
...
$front-&gt;setBaseUrl('/intranet/');
...
$layout = Zend_Layout::startMvc();
$layout
    -&gt;setLayoutPath(APPLICATION_PATH . '/layouts');
    -&gt;setLayout('default');
...
</code></pre>

<p>Here is my default.phtml layout:</p>

<pre class="highlight"><code>
&lt;?php echo $this-&gt;docType(); ?&gt;
...

&lt;?php $this-&gt;headLink()-&gt;appendStylesheet('css/text-elements.css'); ?&gt;
&lt;?php $this-&gt;headLink()-&gt;appendStylesheet('css/structure.css'); ?&gt;
&lt;?php echo $this-&gt;headLink(); ?&gt;
...
</code></pre>

<p>When i request any controller/action from the default module, it works!</p>

<p><a href="http://localhost/intranet/posts">http://localhost/intranet/posts</a> (PostsController / indexAction)
<a href="http://localhost/intranet/posts/add">http://localhost/intranet/posts/add</a> (PostsController / addAction)</p>

<p>Then i used the Safari's inspector to check the static resources (CSS, JS, images, ...) URLs, it's fine.</p>

<pre class="highlight"><code>
</code></pre>

<p>If a request any non-default module controller or action, i got my layout rendered, but the static resources URL are prepended with the module name. If i request <a href="http://localhost/intranet/lists/crusher/index">http://localhost/intranet/lists/crusher/index</a> (lists module, CrusherController, indexAction) when i inspect the elements i get:</p>

<pre class="highlight"><code>
</code></pre>

<p>I had already cheked the base URL, but it's seens to be associated only with the routing process. All the requests are supposed to be executed from the public/index.php file, the modular structure affects it in someway.</p>

<p>Update at 5:22 PM: Digging into this issue i realize that if i use <em>more than one</em> item (modules, controllers, actions, ...) in the URL, like <a href="http://localhost/intranet/public/news/add">http://localhost/intranet/public/news/add</a> where <a href="http://localhost/intranet/public">http://localhost/intranet/public</a> is my base URL and /news/add are my URL endpoint, i got layout's paths messed, here are some examples (i will use the HeadLink placeholder to show the path mess:</p>

<p><a href="http://localhost/intranet/public/news">http://localhost/intranet/public/news</a> (module = default, controller = news, action = index)
&lt;?php $this-&gt;headLink()-&gt;appendStylesheet('css/text-elements.css'); ?&gt; <em>works</em> and the text-elements.css is searched in the /intranet/public directory.</p>

<p><a href="http://localhost/intranet/public/news/add">http://localhost/intranet/public/news/add</a> (module = default, controller = news, action = add) <em>Here i have more than one item in the URL endpoint (news and add)
&lt;?php $this-&gt;headLink()-&gt;appendStylesheet('css/text-elements.css'); ?&gt; *does not work</em> and text-elements.css is searched in the /intranet/public/<em>add</em> directory, that does not exists.</p>

<p><a href="http://localhost/intranet/public/news/list/order/date">http://localhost/intranet/public/…</a> (module = default, controller = news, action = list, var order = date) <em>Here i also have more than one item in the URL endpoint (news, list, order and date)
&lt;?php $this-&gt;headLink()-&gt;appendStylesheet('css/text-elements.css'); ?&gt; *does not work</em> and text-elements.css is searched in the /intranet/public/list/order/date directory, that does not exists.</p>

<p>Update at november 13th, 01:29 PM: Changing the Component and Summary of the issue.</p>

<p>Update at 5:27 PM: After some tests i discovered that this problem also occurs in a non modular structure.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-24T10:20:23.000+0000</p> 
        <div class="body">
            <p>headLink() does not prepend the base URL to the provided values; you need to do this manually:</p>

<pre class="highlight"><code>
$baseUrl = Zend_Controller_Front::getInstance()-&gt;getBaseUrl();
$this-&gt;headLink()-&gt;appendStylesheet($baseUrl . '/css/text-elements.css');
</code></pre>

<p>You can alternately create a BaseUrl view helper that returns that value for you:</p>

<pre class="highlight"><code>
class My_View_Helper_BaseUrl extends Zend_View_Helper_Abstract
{
    protected $_baseUrl;

    public function baseUrl()
    {
        if ($this-&gt;_baseUrl === null) {
            $this-&gt;_baseUrl = Zend_Controller_Front::getInstance()-&gt;getBaseUrl();
        }
        return $this-&gt;_baseUrl;
    }
}
</code></pre>

<p>and then simplify those calls to:</p>

<pre class="highlight"><code>
$this-&gt;headLink()-&gt;appendStylesheet($this-&gt;baseUrl() . '/css/text-elements.css');
</code></pre>

        </div>
    </div>
    </div>

