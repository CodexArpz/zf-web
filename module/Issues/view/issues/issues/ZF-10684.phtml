<h2>ZF-10684: Join method overwrite Left table value.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-11-14T22:50:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-18T16:03:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I found Zend_Db_Select join method bug.
if left and right table has same name column,
left table value over wrote by right value.
thank you.</p>

<pre class="highlight"><code>

// Table    col
// Orders       ID  ProductID   Text
//               1     101      "akihabara"

// Products     ID      Text
//              101     "Nintendo DS"

$seltmp = $db-&gt;select()-&gt;from('Orders', array(
    'Orders_ID' =&gt; 'Orders.ID',
    'Orders_ProductID' =&gt; 'Orders.ProductID' ,
    'Orders_Text' =&gt; 'Orders.Text',
    'Products_ID' =&gt; 'Products.ID',
    'Products_Text' =&gt; 'Products.Text'
    ))-&gt;joinLeft('Products', 'Orders.ProductID = Products.Id');
Zend_Debug::dump($db-&gt;fetchAll($seltmp));
// result
// array(1) {
//   [0] =&gt; array(7) {
//     ["Orders_ID"] =&gt; string(1) "1"
//     ["Orders_ProductID"] =&gt; string(3) "101"
//     ["Orders_Text"] =&gt; string(9) "akihabara"
//     ["Products_ID"] =&gt; string(3) "101"
//     ["Products_Text"] =&gt; string(11) "Nintendo DS"
//     ["ID"] =&gt; string(3) "101"                     &lt;= unknown data!!
//     ["Text"] =&gt; string(11) "Nintendo DS"          &lt;= unknown data!!
//   }
// }

$seltmp = $db-&gt;select()-&gt;from('Orders', array(
    'Orders.ID',             //&lt;= no alias
    'Orders.ProductID' ,     //&lt;= no alias
    'Orders.Text',           //&lt;= no alias
    'Products_ID' =&gt; 'Products.ID',
    'Products_Text' =&gt; 'Products.Text'
    ))-&gt;joinLeft('Products', 'Orders.ProductID = Products.Id');
Zend_Debug::dump($db-&gt;fetchAll($seltmp));
// result
// array(1) {
//   [0] =&gt; array(5) {
//     ["ID"] =&gt; string(3) "101"                       &lt;= over wrote by unknown data!!
//     ["ProductID"] =&gt; string(3) "101"                       
//     ["Text"] =&gt; string(11) "Nintendo DS"            &lt;= over wrote by unknown data!!
//     ["Products_ID"] =&gt; string(3) "101"
//     ["Products_Text"] =&gt; string(11) "Nintendo DS"
//   }
// }

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-18T16:03:46.000+0000</p> 
        <div class="body">
            <p>Instead of putting your aliases for the join table in the master table, you should put them in as the 3rd parameter of the join statement.  Of course, if you don't want any data from the join table pass in array() as the 3rd parameter.</p>

<p>If this is not what you are looking for, please re-open, but in looking at the unit tests, this use case is already described.</p>

<p>Please see these examples:
<a href="http://framework.zend.com/manual/en/zend.db.select.html#zend.db.select.building.join">http://framework.zend.com/manual/en/â€¦</a></p>

<p>Thanks, Ralph</p>

        </div>
    </div>
    </div>

