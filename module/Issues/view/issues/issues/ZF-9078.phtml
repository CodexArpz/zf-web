<h2>ZF-9078: Zend_Measure_Abstract: Precision detection on type change possible bug</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-04T00:18:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-05T01:59:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.3 (01/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Raphael Dehousse (thymus)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Measure</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Dears,</p>

<p>In this code (line 287)</p>

<p>$slength = strlen($value);
$length  = 0;
for($i = 1; $i &lt;= 25; ++$i) {
    if ($value[$slength - $i] != '0') {
        $length = 26 - $i;
        break;
    }
}</p>

<p>$this-&gt;_value = Zend_Locale_Math::round($value, $length);
$this-&gt;_type  = $type;</p>

<p>A possible error can occur if $slength is &lt; 25...
We will have $value[$indexNegative].
A simple fix would be</p>

<p>for($i = 1; $i &lt;= $slength &amp;&amp; $i &lt;= 25; ++$i) {</p>

<p>Regards,</p>

<p>Raphaël Dehousse</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-04T00:19:01.000+0000</p> 
        <div class="body">
            <p>This has been introduced in revision 18493:</p>

<p>[ZF-8009] Zend_Measure:</p>

<ul><li>added precision detection on type change</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-05T13:07:54.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue.
The code works as intended and throws no warning or error.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-07T05:34:48.000+0000</p> 
        <div class="body">
            <p>Thomas,</p>

<p>With all the respect I owe you, I do not understand why a notice is not considered as a possible bug.
With this code, I get notices than causes unit tests to fail.
A simple fix I provided you resolve the problem.
Why not integrate it?</p>

<p>Regards,</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-07T06:53:49.000+0000</p> 
        <div class="body">
            <p>If the strlen($value) == 0, then, the index will be -1 =&gt; notice</p>

<p>I will try to give you a test case to reproduce this</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-07T07:00:17.000+0000</p> 
        <div class="body">
            <p>$time = new Zend_Measure_Time(0, Zend_Measure_Time::SECOND);</p>

<p>$time-&gt;setType(Zend_Measure_Time::SECOND);</p>

<p>Uninitialized string offset: -1</p>

<p>Zend/Measure/Abstract.php:293</p>

<p>Regards,</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-07T07:07:55.000+0000</p> 
        <div class="body">
            <p>This is because with 0,
strlen($value) = 1,</p>

<p>for($i = 1; $i &lt;= 25; ++$i) {
    if ($value[$slength - $i] != '0') {
        $length = 26 - $i;
        break;
    }
}</p>

<p>$value[1 - 1] == 0 =&gt; won't break
$value[1 - 2] =&gt; negative offset...</p>

<p>Won't occur with $i &lt;= $slength</p>

<p>Thank for your help :)</p>

<p>Regards</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-15T07:52:05.000+0000</p> 
        <div class="body">
            <p>Dear Thomas,</p>

<p>I really like the Zend Framework and I think that I have shown good will by providing patches to the issues I reported.</p>

<p>Would it be possible to see any action from you? A response?</p>

<p>Thank you very much for your cooperation.</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-18T14:56:56.000+0000</p> 
        <div class="body">
            <p>The input value is fixed to a length of 25 by using Zend_Locale_Math.
Using your example code, a vardump of $value on line 290 returns:
string '0.0000000000000000000000000' (length=27)</p>

<p>Therefor still not reproducable. (speaking of revision 20096 or higher)</p>

<p>PS: Please note that I am always replying, even if I am one week away due to my real live job or because I am working on other issues... no reason to get impatient.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-01T02:36:29.000+0000</p> 
        <div class="body">
            <p>Dear Thomas,</p>

<p>First, please accept my excuses about my many comments.</p>

<p>Let's back to the issue :)</p>

<p>I tested on Linux and on Windows and indeed, the result is different.
On Windows, if I dump $value line around 289-290, I receive string(27) "0.0000000000000000000000000".
On Linux, I receive : string(1) "0".</p>

<p>So, the "problem" could be here.
Then the issue is maybe in Zend_Locale_Math?</p>

<p>PS: I tested against ZF 1.10.1 and 1.10.2</p>

<p>Best regards,</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-01T12:44:42.000+0000</p> 
        <div class="body">
            <p>Note:
When you say that unittests fail it is always recommended, and in my eyes useful, when you provide the returned informations from unittests to see which test fails on which line with which returned value.</p>

<p>And we need also some other informations for reproducation in all issues:
* PHP release?
* BCMath available?
* Used locale</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-02T00:58:09.000+0000</p> 
        <div class="body">
            <p>Test:</p>

<p>$ cat DummyTest.php 
&lt;?php</p>

<p>require_once('Zend/Measure/Time.php');</p>

<p>class DummyTest extends PHPUnit_Framework_TestCase
{</p>

<pre><code>    public function testTime()
    {
            $locale = new Zend_Locale();
            var_dump((string) $locale);

            var_dump(Zend_Locale_Math::isBcmathDisabled());

            $time = new Zend_Measure_Time(0, Zend_Measure_Time::SECOND);
            $time-&gt;setLocale($locale);

            $time-&gt;setType(Zend_Measure_Time::SECOND);
    }
</code></pre>

<p>}</p>

<p>Test output:</p>

<p>$ phpunit DummyTest.php 
PHPUnit 3.4.6 by Sebastian Bergmann.</p>

<p>string(5) "en_US"
bool(true)
E</p>

<p>Time: 0 seconds, Memory: 5.75Mb</p>

<p>There was 1 error:</p>

<p>1) DummyTest::testTime
Uninitialized string offset: -1</p>

<p>/usr/share/php5/Zend/Measure/Abstract.php:292
/home/rdehouss/DummyTest.php:12</p>

<p>FAILURES!
Tests: 1, Assertions: 0, Errors: 1.</p>

<p>PHP release: 5.2.12
BC math disabled
Locale: en_US</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-02T01:27:26.000+0000</p> 
        <div class="body">
            <p>With bcmath compiled with php, the problem does not occur:</p>

<p>$ phpunit DummyTest.php
PHPUnit 3.4.6 by Sebastian Bergmann.</p>

<p>string(5) "en_US"
bool(false)
.</p>

<p>Time: 1 second, Memory: 5.75Mb</p>

<p>OK (1 test, 0 assertions)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-02T02:39:14.000+0000</p> 
        <div class="body">
            <p>Do you want I create another bug for Zend_Locale_Math_PhpMath and let this one closed?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-03T12:18:42.000+0000</p> 
        <div class="body">
            <p>You said that unitests fail..</p>

<p>So I don't need a new test from you, but the information which unittests from ZF fail, with the exact failure, the exceptionstack and so on.</p>

<p>Give me not only the unitests from Zend_Measure but also the testresults from Zend_Locale_AllTests. These tests are deeper.</p>

<p>Thnx</p>

<p>PS: Please use styling and don't write code plaintext.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-04T14:08:07.000+0000</p> 
        <div class="body">
            <p>At last I was able to reproduce with a different code than yours.</p>

<p>Fixed with r21330</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-05T01:59:37.000+0000</p> 
        <div class="body">
            <p>Thanks!</p>

        </div>
    </div>
    </div>

