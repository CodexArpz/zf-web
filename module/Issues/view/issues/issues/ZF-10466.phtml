<h2>ZF-10466: Zend_Cache_Backend_TwoLevels</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-09-17T02:57:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-27T11:58:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jan Gantzert (tronga)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There might be a Bug in the Two Levels Caching.
With my Settings, its always taking th slow Cache, even with high priority.
Memcached is fully functionial and working with the same settings.</p>

<p>My Bootstrap and Controller Settings are:</p>

<pre><code>    $frontendOptions = array(
        'lifetime' =&gt; '10',
        'automatic_serialization' =&gt; true,
    );

    $options = array(
        'slow_backend' =&gt; 'File',
        'fast_backend' =&gt; 'Memcached',
        'slow_backend_options' =&gt; array(
            'cache_dir' =&gt; APPLICATION_PATH . '/../data/cache/corefile/',
            'file_name_prefix' =&gt; 'corefile_',
            'hashed_directory_level' =&gt; 2,
        ),
            'fast_backend_options' =&gt; array(
            'servers' =&gt; array(
                array(
                    'host' =&gt; 'localhost',
                    'port' =&gt; 11211
                )
            ),
            'compression' =&gt; true
        ),
        'stats_update_factor' =&gt; 10,
        'slow_backend_custom_naming' =&gt; false,
        'fast_backend_custom_naming' =&gt; false,
        'slow_backend_autoload' =&gt; false,
        'fast_backend_autoload' =&gt; false,
        'auto_refresh_fast_cache' =&gt; true
    );

    $twoLevelsCache = Zend_Cache::factory('Core', 'Two Levels', $frontendOptions, $options);

    Zend_Registry::set('System/Cache/Two Levels', $twoLevelsCache);
</code></pre>

<p>AND</p>

<pre><code>    $cache = Zend_Registry::get('System/Cache/Two Levels');

    $id1 = 'default_index_index__prices';

    if (!($data = $cache-&gt;load($id1))) {

        $q = Doctrine_Query::create()
            -&gt;from('Test t')
            -&gt;limit(1000)
        ;
        $dataCache = $q-&gt;fetchArray();

        $cache-&gt;save($dataCache, $cacheKey, array() , false , 10);
    }
</code></pre>

<p>The error is because of the $boolSlow line.
Deleting this line and it works.</p>

<p>if (($priority &gt; 0) &amp;&amp; (10 * $priority &gt;= $usage)) {
    $fastLifetime = $this-&gt;_getFastLifetime($lifetime, $priority);
    $boolFast = $this-&gt;_fastBackend-&gt;save($preparedData, $id, array(), $fastLifetime);
    $boolSlow = $this-&gt;_slowBackend-&gt;save($preparedData, $id, $tags, $lifetime);
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jan Gantzert (tronga) on 2010-09-17T04:09:44.000+0000</p> 
        <div class="body">
            <p>Ticket can be closed.
Two-Levels Cache is now always creating the SlowCache, even if it is using the FastCache.
The Question is why? Is that necessary?</p>

        </div>
    </div>
    </div>

