<h2>ZF-8791: Error: Pdf file syntax error. 'startxref' keyword expected. Offset - 0x2180.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-12T12:21:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-27T12:43:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.6 (22/Jun/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13050/Zend_Pdf_StringParser.patch">Zend_Pdf_StringParser.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Pdf_Parser gives an error on line 440: $this-&gt;_stringParser-&gt;readLexeme();</p>

<p>The parser works fine on my local Windows XP development machine, but it crashes on my Ubuntu 8.04 Linux server. The code is exactly identical on both machines, and so is the PDF file that I am loading with Zend_Pdf::load().</p>

<p>The error stack is below:</p>

<p>Error: Pdf file syntax error. 'startxref' keyword expected. Offset - 0x2180.</p>

<h1>0 /home/mvm_stevens/www_mvm/library/Zend/Pdf.php(303): Zend_Pdf_Parser-&gt;__construct('/home/mvm_steve...', Object(Zend_Pdf_ElementFactory_Proxy), true)</h1>

<h1>1 /home/mvm_stevens/www_mvm/library/Zend/Pdf.php(253): Zend_Pdf-&gt;__construct('/home/mvm_steve...', NULL, true)</h1>

<h1>2 /home/mvm_stevens/www_mvm/application/models/Report/Pdf.php(15): Zend_Pdf::load('/home/mvm_steve...')</h1>

<h1>3 /home/mvm_stevens/www_mvm/application/controllers/ReportsController.php(102): Report_Pdf-&gt;loadTemplate('10_slf_mon1_tem...')</h1>

<h1>4 /home/mvm_stevens/www_mvm/application/controllers/ReportsController.php(38): ReportsController-&gt;createReport(Array)</h1>

<h1>5 /home/mvm_stevens/www_mvm/library/Zend/Controller/Action.php(513): ReportsController-&gt;initialrepAction()</h1>

<h1>6 /home/mvm_stevens/www_mvm/library/Zend/Controller/Dispatcher/Standard.php(289): Zend_Controller_Action-&gt;dispatch('initialrepActio...')</h1>

<h1>7 /home/mvm_stevens/www_mvm/library/Zend/Controller/Front.php(946): Zend_Controller_Dispatcher_Standard-&gt;dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http))</h1>

<h1>8 /home/mvm_stevens/www_mvm/application/bootstrap.php(56): Zend_Controller_Front-&gt;dispatch()</h1>

<h1>9 /home/mvm_stevens/www_mvm/index.php(11): Bootstrap-&gt;runApp()</h1>

<h1>10 {main}</h1>

<p>I outcommented the lines 440 until 453 in Parser.php and echoed the content of $data to the browser, to see if the PDF file is properly read with the 'fread' function, and the output almost identical. The Ubuntu machine seems to recognize more characters. For example, the Windows version showed the following as the 2nd line:
%����
and Ubuntu showed:
%âãÏÓ</p>

<p>Anybody any ideas what is going on or what I can do to get the Ubuntu server load these PDF files?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kai Bielenberg (kaib) on 2010-01-15T02:52:38.000+0000</p> 
        <div class="body">
            <p>I had the same issue. The problem in my case was that i configure mbstring.func_overload to use mbstring functions instead of the normal string functions. Try something like this to see if this is also your problem:</p>

<p>ini_set('mbstring.internal_encoding', 'ASCII');
$pdf = Zend_Pdf::load('my.pdf');
ini_set('mbstring.internal_encoding', 'UTF-8');</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Kofler (miko) on 2010-02-16T06:33:14.000+0000</p> 
        <div class="body">
            <p>mbstring setting didn't help for me</p>

<p>PDF handling worked flawless both with zf 1.5.1 (ubuntu 8.04) and zf 1.9.4 (ubuntu 9.10);</p>

<p>zend 10.1 on ubuntu 8.04 did not work (error as described above), so I went back to 1.5.1 on this machine</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nicolas CORMIER (nicolascormier) on 2010-02-17T17:07:38.000+0000</p> 
        <div class="body">
            <p>Exact same issue as Michael...</p>

<p>Ubuntu 8.04.3 and Zend 10.1</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Yaroslav Golovach (yaroslav.golovach) on 2010-02-19T08:45:32.000+0000</p> 
        <div class="body">
            <p>I've encountered the same problem on one domain hosting based on linux. I tried zf 1.5.1 and some versions between 1.5.1 and 10.1 but nothing helped. Zf 1.5.1 displayed another problem than "'startxref' keyword expected" (I haven't written it down) but it also failed.</p>

<p>After some investigation I discovered that code at line 440 $this-&gt;_stringParser-&gt;readLexeme() is actually expected to read 'startxhref' word from pdf file. But in fact it reads 'startxhre' (without 'f' at the end) so exception is thrown.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Quintin Venter (quintinventer) on 2010-03-11T08:05:50.000+0000</p> 
        <div class="body">
            <p>We had a similar issue.</p>

<p>On my Windows machine running Zend 1.9.6 and Php 5.2.8 it all worked fine. We then rolled it out to our live systems where it only works on one of the two Ubuntu machines.</p>

<p>I was tasked with figuring out what is happening here. We found that our one system is runnin PHP 5.2.4 and the other is running 5.2.5 both with Zend 1.9.6.</p>

<p>The one running 5.2.5 is working fine but the one with 5.2.4 is giving us the problems.</p>

<p>I then had a look at the StringParser.php. In there you will find that Zend 1.9.6 checks for \f as one of the white space characters. This is not supported in version 5.2.4 yet (<a href="http://php.net/ChangeLog-5.php">http://php.net/ChangeLog-5.php</a>). So I had to go do a version check and adjust the data parser.</p>

<p>You want to go to line 267 and replace it with the following block of code:</p>

<p>$compare = "";
if ( version_compare( phpversion(), '5.2.5' ) &gt;= 0 ) { // this version added support for the escaped form feed character
      $compare = "()&lt;&gt;[]{}/%\x00\t\n\f\r ";
} else {
      $compare = "()&lt;&gt;[]{}/%\x00\t\n\r ";
}</p>

<p>$this-&gt;offset += strcspn($this-&gt;data, $compare, $this-&gt;offset);</p>

<p>Hope this solves your problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Yaroslav Golovach (yaroslav.golovach) on 2010-03-11T08:38:17.000+0000</p> 
        <div class="body">
            <p>Thanks a lot, Quintin.</p>

<p>Your fix works great :).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christiaan Kras (htbaa) on 2010-03-31T02:12:58.000+0000</p> 
        <div class="body">
            <p>Could this be fixed and backported to 1.9.7 (1.9.8 perhaps?) as the minimum requirement for ZF is PHP 5.2.4 and not PHP 5.2.5.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christiaan Kras (htbaa) on 2010-05-02T23:45:01.000+0000</p> 
        <div class="body">
            <p>This is a serious showstopper. Could this PLEASE be fixed ASAP so we don't have to patch StringParser.php ourselves? This fix is here, please apply it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christiaan Kras (htbaa) on 2010-05-02T23:53:50.000+0000</p> 
        <div class="body">
            <p>This patch applies to Zend_Pdf_StringParser of ZendFramework 1.10.4</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christiaan Kras (htbaa) on 2010-05-25T04:11:38.000+0000</p> 
        <div class="body">
            <p>I'm sorry for spamming this issue, but could this fix be applied before the next mini-release?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2010-05-27T06:11:08.000+0000</p> 
        <div class="body">
            <p>Sorry for the delay guys, I'm not a Zend_Pdf maintainer but I noticed your Devzone comment ;). Ask, and thou shalt receive! So I reviewed the patch. Fix looks good so I've applied it in r22311. Worth noting, there are always devs around on our regular bug hunt days - if there are other patches anyone needs applying you can grab us on IRC at those times for assistance.</p>

<p>Will apply this to the release branch soon for next mini-release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christiaan Kras (htbaa) on 2010-05-27T06:48:45.000+0000</p> 
        <div class="body">
            <p>Thanks for resolving this, much appreciated.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Quintin Venter (quintinventer) on 2010-05-27T06:57:54.000+0000</p> 
        <div class="body">
            <p>Thanks a mil.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Kliewe (mkliewe) on 2010-05-27T12:43:06.000+0000</p> 
        <div class="body">
            <p>Thank you for applying it, Padraic.</p>

        </div>
    </div>
    </div>

