<h2>ZF-9383: Zend_Validate_File_MimeType doesn't recognize mime types when a charset is returned</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-09T11:23:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-12T04:13:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.3 (01/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate_File</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12868/Zend_Validate_File_MimeType.php.patch">Zend_Validate_File_MimeType.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>With PECL fileinfo 1.0.4, PHP 5.2.10(.dfsg.1-2ubuntu6.4) and libmagic1 5.03(-ubuntu1), the code
<code>
$f = new finfo(FILEINFO_MIME); 
echo $f-&gt;file("/tmp/store/fS69Jh");
</code>
returns 
<code>image/jpeg; charset=binary</code>.</p>

<p>Zend_Validate_File_MimeType-&gt;isValid() from Version 1.10.2 always returns false with the message fileMimeTypeFalse, because if the mime type isn't found in the given list for valid types, it is exploded by '/' and by '-'. Then it tries again to find a valid mime type in the new list, which isn't successful and false is returned. A quick fix is attached as a patch, but the proper way would be to check if a charset is given and then remove it first.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-09T12:21:57.000+0000</p> 
        <div class="body">
            <p>Not reproducable...</p>

<p>ZF uses FILEINFO_MIME_TYPE when available (below 5.2.9 or below 1.0.0) which forces finfo not to return the charset but only the type information.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Ekoka (verysimple) on 2010-03-11T09:53:40.000+0000</p> 
        <div class="body">
            <p>Just had the exact same issue. Ubuntu 9.10 PHP.5.2.10 ZF 1.10</p>

<p>The combination PHPv5.2, Fileinfo linked to a more recent libmagic (version unknown) will also produce mimetypes that look like "image/jpeg; charset=binary" and according to <a href="">www.faqs.org/rfcs/rfc2045.html</a>" rel="nofollow"&gt;RFC2045 this is kosher. The PHP team even considers this a bug fix [<a href="http://bugs.php.net/48885">http://bugs.php.net/48885</a>].</p>

<p>However, it seems that the new constant FILEINFO_MIME_TYPE is only available in 5.3, since FileInfo is only maintained there. I don't exactly know how old libmagic has to be for fileinfo to truncate the charset, but downgrading libmagic is not even an option since a substantial number of applications on linux depends on it.</p>

<p>If a workaround such as the one just submitted by M. Weinrich is not implemented, my suggestion would be to add a note in the documentation informing people with that machine profile that the best way to solve this issue is to either uninstall fileinfo and let mime_content_type do the job, or upgrade to PHP 5.3.</p>

<p>mime_content_type is supposed to be deprecated, but then again why would I switch to FileInfo if it's only supported for 5.3+. It's not even in the Ubuntu repos and has to be explicitly installed through pecl. Personally, I don't see how or why it should be considered stable for v5.2.</p>

<p>mime_content_type is doing a great job so far, until I switch to 5.3, I'll stick with it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-12T04:13:48.000+0000</p> 
        <div class="body">
            <p>According to the developer of FINFO the constant depends on the finfo release and not on the used PHP version.</p>

<p>And the attached patch can not be implemented as it is based on an outdated release. Additionally I can not verify the behaviour. Even when setting the other constant manually within the core-code the mimetypes are recognised without problems.</p>

        </div>
    </div>
    </div>

