<h2>ZF-4838: HTTPS in Zend_Http_Client is to be considered insecure</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-06T12:13:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-02T01:18:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Thomas Gelf (tgelf)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Shahar Evron (shahar)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Client</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2946">ZF-2946</a></li>
            <li><a href="/issues/browse/ZF-3616">ZF-3616</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Http_Client (to more specific: it's only available adapter Zend_Http_Client_Adapter_Socket) does neither verify server certificates nor does it verify hostnames. Zend_Http_Client_Adapter_Curl behaves correct, but is not in trunk.</p>

<p>Best regards,
Thomas Gelf</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Gelf (tgelf) on 2008-11-06T13:03:13.000+0000</p> 
        <div class="body">
            <p>ML post and IRC discussion regarding this issue:</p>

<p><a href="http://www.nabble.com/Validating-SSL-server-certs---using-CA-certs-p20225319.html">http://nabble.com/Validating-SSL-server-certs---us…</a>
<a href="http://zftalk.com/logs/view/zftalk.dev/2008/10/29/">http://zftalk.com/logs/view/zftalk.dev/2008/10/29/</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-03-20T03:46:56.000+0000</p> 
        <div class="body">
            <p>Fixed with ZF-3616, inclusion of cURL Adapter into trunk, released in 1.8</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Gelf (tgelf) on 2009-03-20T04:06:15.000+0000</p> 
        <div class="body">
            <p>This is great news! I've been using your adapter for a while, the fact that it will be provided with ZF will however make things easier ;-)</p>

<p>Anyways, this doesn't solve the issue for me: Zend_Http_Client is still to be considered insecure with HTTPS and still prone to MITM attacks. This is also true for all Service-Components based on Zend_Http_Clients. The fact that there finally IS a secure connection adapter does neither fix the default one (Socket), nor does it tell coders to NOT use the default one for HTTPS unless fixed nor does it fix other components based on Zend_Http_Client.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2009-07-23T14:34:54.000+0000</p> 
        <div class="body">
            <p>Depends on being able to set context parameters on the stream. Work in progress on that.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2009-07-23T14:45:53.000+0000</p> 
        <div class="body">
            <p>Now that the setStreamContext() and getStreamContext() methods have been added (in trunk, CS-17009), you should be able to force peer validation easily.</p>

<p>We can't set this behavior to be the default one, because of BC issues. I also suspect most people will not want this because it makes development and testing harder.</p>

<p>Thanks for reporting!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Gelf (tgelf) on 2009-07-24T02:27:04.000+0000</p> 
        <div class="body">
            <p>That's great news, thank you!</p>

<p>Let me add some thoughts regarding default settings. First, this is what
I posted last autumn to ZF's mailinglist:</p>

<blockquote>
  <p>Unfortunately switching validation on per default is not an option as
  it would break currently working applications. I would suggest to change
  this with ZF 2.0 - as other libs / languages I know (CURL, Java, C# etc)
  are doing so out of the box. And in my believes this is the only correct
  way of using HTTPS. If someone wants to do insecure things he is free to
  do so, but he has to explicitly switch checks off.</p>
</blockquote>

<p>(see <a href="http://www.nabble.com/Validating-SSL-server-certs---using-CA-certs-p20225319.html">http://nabble.com/Validating-SSL-server-certs---us…</a> for full post)</p>

<p>I don't know which Zend_Service_Whatever-Classes are based on HTTPS
(a quick grep showed Amazon_Ec2, Delicious, ReCaptcha), probably all of
them are using Zend_Http_Client - with insecure defaults. And I'm pretty
sure others will follow.</p>

<p>Therefore I strongly suggest changing default settings with ZF 2.0. Many
developers just don't realize that self-signed certificates lead HTTPS ad
absurdum - and also not verifying signed ones does. If someone insists on
using useless certificates he can do so. But he needs to be made aware of
doing something REALLY bad (and shall be forced into explicitely allowing
this in his own code).</p>

<p>What is the best way to add a note assuring this doesn't will be forgotten?
Open a seperate ticket against "Next Major Release"?</p>

<p>Best regards,
Thomas Gelf</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-01-06T20:15:15.000+0000</p> 
        <div class="body">
            <p>Postponing issue until 2.0 when we can change the defaults in the socket adapter to be more like that of the curl adapter: validating all certificates by default.</p>

        </div>
    </div>
    </div>

