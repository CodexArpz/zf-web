<h2>ZF-3313: Form Element Translator Bug</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-05-22T22:38:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-08T08:02:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Satoru Yoshida (satoruyoshida)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2954">ZF-2954</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This fix is for _createMessage in Abstract.php line 191. It has been tested with 1.5.1, but probably applies to 1.5.2, as well.</p>

<p>Abstract:</p>

<p>Custom messages are not translated for form element validators. Inserting the following two lines before line 191 of Abstract.php will solve the problem:</p>

<pre class="highlight"><code>
           if ($translator-&gt;isTranslated($message))
                $message = $translator-&gt;translate($message);
            else
</code></pre>

<p>== Background ==</p>

<p>The default translator used by all forms may be set by calling:</p>

<pre><code>&lt;pre class="highlight"&gt;&lt;code&gt;
</code></pre>

<p>Then, when $form-&gt;isValid is called, each of the element validators have their translators set to that same default translator (if they don't have a translator explicitly defined).</p>

<p>This works fine, if you want to use the same error message for every validator instance of the same name. For example, NotEmpty, the validator automatically created by $element-&gt;setRequired(true), uses the key 'isEmpty' for its error message. If 'isEmpty' is mapped to a string in the default translator, it will be picked up and used as the error message when a value is not supplied for that field (element) of the form.</p>

<p>However, it is more-likely the case that in a large application, different fields will require different error messages when they are left blank. This is no problem if you're not relying on a translator. Each of those NotEmpty validator instances can be given customized messages by calling setMessage on them.</p>

<p>But in that case, the translator stops working, seemingly because of an oversight in the implementation:</p>

<p>(for this example, assume $messageKey has the value 'isEmpty')
_createMessage in Abstract.php line 191:</p>

<pre><code>    $message = $this-&gt;_messageTemplates[$messageKey];

    if (null !== ($translator = $this-&gt;getTranslator())) {
        if ($translator-&gt;isTranslated($messageKey)) {
            $message = $translator-&gt;translate($messageKey);
        }
    }
</code></pre>

<p>But what if the developer has specified:</p>

<p>
        $password-&gt;addValidator('NotEmpty', true);
        $password-&gt;getValidator('NotEmpty')-&gt;setMessage('form.login.password.errBlank');</p>

<pre class="highlight"><code>

with the following line in en_US.php:

        'form.login.password.errBlank'    =&gt; "Please enter your password."

The above code in Zend Framework's Abstract::_createMessage will output only the translation key as the error message ('form.login.password.errBlank').


== The Solution ==

What is needed, is to translate the message (user-defined key), if it has been set, otherwise, the default key for that validator:

</code></pre>

<pre><code>        if ($translator-&gt;isTranslated($message))
            $message = $translator-&gt;translate($message);
        else if ($translator-&gt;isTranslated($messageKey))
            $message = $translator-&gt;translate($messageKey);
</code></pre>

<p>```</p>

<p>This fix will behave as expected in both cases -- whether the developer has defined a custom message key, or not.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-01T14:06:54.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Justin Hendrickson (toxygene) on 2008-06-04T10:25:50.000+0000</p> 
        <div class="body">
            <p>Duplicate of [#ZF-2954] <a href="http://framework.zend.com/issues/browse/ZF-2954">http://framework.zend.com/issues/browse/ZF-2954</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-09-01T01:19:45.000+0000</p> 
        <div class="body">
            <p>I change Resolution value to Duplicate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:38:57.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by malt (malt) on 2010-11-03T04:33:42.000+0000</p> 
        <div class="body">
            <p>I noticed that this fix was reversed in Version 1.10.6 and is still in the latest version. Any particular reason why this was changed back? However the reported problem is present again and should be fixed.</p>

        </div>
    </div>
    </div>

