<h2>ZF-4124: Default to application-wide locale instead of browser locale in Zend_Translate_Adapter</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-29T16:34:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-07-07T14:30:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Remy Damour (remy215)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, when no locale is passed to Zend_Translate_Adapter-&gt;addTranslation(), $locale defaults to "new Zend_Locale()".</p>

<p>I would rather expect it first to default to application-wide locale (<a href="http://framework.zend.com/manual/en/zend.locale.html#zend.locale.frameworkwidelocale">http://framework.zend.com/manual/en/â€¦</a>), and if not set, then default to "new Zend_Locale()".</p>

<p>In my web application, users can change language (through a $lang variable). When they change it, I define a system-wide locale (let's say to "fr") as defined in Zend_Locale manual, storing my Zend_Locale instance into Zend_Registry::set('Zend_Locale', $locale);
Once I've set it, I would reasonably expect Zend_Translate_Adapter to default to this value (and display content in French as chosen by user) instead of having to specify each time what current locale is (generating "new Zend_Locale()" instance without parameters default locale to user's browser locale, therefore if user has an English browser, but clicked to display content in French (which I stored in application-wide locale), I would expect Zend_Translate_Adapter to default to this locale (French) and not to user's browser locale (English).</p>

<p>Basically I would change:</p>

<pre class="highlight"><code>
        if ($locale === null) {
            $locale = new Zend_Locale();
        }
</code></pre>

<p>into</p>

<pre class="highlight"><code>
        if ($locale === null) {
            $locale = Zend_Registry::isRegistered('Zend_Locale') ? Zend_Registry::get('Zend_Locale') : new Zend_Locale();
        }
</code></pre>

<p>Feel free to contact me if unclear (or if you want me to stop spamming Zend_Translate component :) )</p>

<p>Regards,
Remy</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-08-30T01:14:33.000+0000</p> 
        <div class="body">
            <p>Application wide locale is not supported for 1.5.3 and will not be in future.
This feature will be added in 1.7 and is already available in trunk.</p>

<p>This is wether a bug, nor a feature.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-08-30T01:15:39.000+0000</p> 
        <div class="body">
            <p>Please write to the mailing list when you have problems with existing features and you are not sure if they are bugs or not.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by boris (jer) on 2010-07-07T09:41:56.000+0000</p> 
        <div class="body">
            <p>it's 1.10.6 already and application wide locale is still not there. Docs declare I can set an application wide locale, so I started debugging to see what gone wrong, then switched to searching issues - waste of time. Please, implement that feature or at least add a comment to docs that its not implemented to Zend_Translate yet.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-07-07T14:30:24.000+0000</p> 
        <div class="body">
            <p>Implementing something which is already implemented is useless.
Use "null" when you don't want to have "browser" or "environment" or "auto".</p>

<p>Note that adding languages without knowing the language which should be added is also useless.</p>

        </div>
    </div>
    </div>

