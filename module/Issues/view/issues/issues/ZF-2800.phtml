<h2>ZF-2800: Add placeholder methods to partialLoop</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-03-04T06:40:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-02-06T09:36:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As the great ZF feature partialLoop will be used mostly when it comes to lists etc, it should (in my opinion) also contain the placeholder methods {{setPrefix()}}, {{setSeparator()}}, {{setIndent()}} and {{setPostfix}}. This way you'll be able to use the partialLoop to loop through an array with those html tags added. For example, I have created a partial which shows a single instance of an item. If there is only 1 item, I don't want to place it in a list. If there are more items, I want to use partialLoop to create a list with prefix {{</p>

<ul><li>}}, separator {{</li><li>}} and postfix {{</li></ul><p>}}.</p>

<p>I am now forced to either write my own {{foreach}} loop, or to add a partialLoop file which contains nothing more than {{</p>&lt;?php echo $this-&gt;partial('myPartial.phtml', $this); ?&gt;}}. In both example I don't get the performance benefits partialLoop should give me.

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-03-06T09:57:25.000+0000</p> 
        <div class="body">
            <p>Scheduling for first mini-release following 1.5.0 GA release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:29.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:33:29.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:49.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-04-22T10:28:46.000+0000</p> 
        <div class="body">
            <p>Updating project management info.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jason Eisenmenger (jasoneisen) on 2008-09-10T13:46:20.000+0000</p> 
        <div class="body">
            <p>In my opinion, every single view helper could use the setIndent() method.  I could much use this on actions, placeholders, forms, etc...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jason Eisenmenger (jasoneisen) on 2008-09-10T13:51:16.000+0000</p> 
        <div class="body">
            <p>As an example, I am currently doing this in one projects layout file to get the content to indent properly:</p>

<pre class="highlight"><code>
&lt;?php $this-&gt;placeholder('content')-&gt;setIndent(20)-&gt;set($this-&gt;layout()-&gt;content); ?&gt;
&lt;?php echo $this-&gt;placeholder('content'); ?&gt; 
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-02-06T09:35:33.000+0000</p> 
        <div class="body">
            <p>This sounds like a mismatch between your expectations of the components and their intended purpose. If you want to use prefix/postfix/separator, simply loop over a variable and append the content to a placeholder:</p>

<pre class="highlight"><code>
&lt;?php foreach ($this-&gt;foo as $i):
    $this-&gt;placeholder('content')-&gt;append($i);
endforeach; ?&gt;
</code></pre>

<p>If you want a common indentation method for helpers, please open a separate request.</p>

        </div>
    </div>
    </div>

