<h2>ZF-2546: Zend_Db_Table_Select should include its own table in the FROM section</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-01T08:38:25.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-26T09:19:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                julien PAULI (doctorrock83)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3239">ZF-3239</a></li>
            <li><a href="/issues/browse/ZF-2798">ZF-2798</a></li>
            <li><a href="/issues/browse/ZF-3485">ZF-3485</a></li>
            <li><a href="/issues/browse/ZF-2925">ZF-2925</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11132/Zend_Db_Table_Select-ZF2546.patch">Zend_Db_Table_Select-ZF2546.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Table_Select should include its own table name in the FROM section, as it's its goal :)
Actually it does not add the actual table to the from clause.</p>

<p>actual code :</p>

<pre class="highlight"><code>
    public function setTable(Zend_Db_Table_Abstract $table)
    {
        $this-&gt;_adapter = $table-&gt;getAdapter();
        $this-&gt;_info    = $table-&gt;info();
        return $this;
    }
</code></pre>

<p>patch could be :</p>

<pre class="highlight"><code>
    public function setTable(Zend_Db_Table_Abstract $table)
    {
        $this-&gt;_adapter = $table-&gt;getAdapter();
        $this-&gt;_info    = $table-&gt;info();
        $this-&gt;from($this-&gt;_info[Zend_Db_Table_Abstract::NAME]);
        return $this;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-02-08T17:54:34.000+0000</p> 
        <div class="body">
            <p>Patch attached</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2008-02-16T20:57:09.000+0000</p> 
        <div class="body">
            <p>Hi Julien</p>

<p>I removed it specifically from there as I wanted the ability for the 'FROM' to be applied either by the developer during query creation, or 'just-in-time' before the query is executed. This is handy, as it means that the select object doesn't need to be tied down with a one-to-one relationship with the parent table.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tim Fisken (timf) on 2008-08-22T16:51:39.000+0000</p> 
        <div class="body">
            <p>Although this bug is marked as resolved, it actually is the cause of a number of other bugs listed with Zend_Db_Table_Select.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tomáš Fejfar (tomas.fejfar@gmail.com) on 2008-11-19T10:50:45.000+0000</p> 
        <div class="body">
            <p>For me, the expected usage is:</p>

<pre class="highlight"><code> 
// Bugs
$bugs = new Bugs();
$bugs-&gt;select()-&gt;where('something = ?',$id); 
// I want to manipulate the table data - that's why I use the class !
$bugs-&gt;getAdapter()-&gt;select()-&gt;from('Other_Table')-&gt;where('whatever = 1'); 
// I don't wnat the "bugs" included? I'll use the adapter's method
</code></pre>

<p>The present situation is confusing. I create the class because I want to save time and typing when manipulating THIS BUG TABLE, not because I want it to perform <em>various</em> DB tasks with it !</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Muir (dmuir) on 2009-03-05T23:00:57.000+0000</p> 
        <div class="body">
            <p>Agree with Tomas.
Using Zend_Db_Table_Select implies you are wanting to select from the given table. If you don't want that, then you should be using Zend_Db_Select instead.</p>

<p>Simon, can you give a reasonable use case where you'd use Zend_Db_Table_Select instead of Zend_Db_Select to select from a table other than the table from which the select came from?
This is especially frustrating as the current implementation flips the order of the from and join</p>

<pre class="highlight"><code>
$bugs = new Bugs();
$bugs-&gt;select()-&gt;join('Table2', 'Bugs.id = Table2.bug_id')-&gt;where('whatever = 1');
</code></pre>

<p>becomes</p>

<pre class="highlight"><code>
SELECT `Bugs`.*
FROM `Table2`
INNER JOIN `Bugs`
WHERE whatever = 1
</code></pre>

<p>To fix it you have to specify a from clause explicitly.</p>

<p>Would be good if this issue were reopened and fixed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-25T17:15:57.000+0000</p> 
        <div class="body">
            <p>Since 1.9 there has been a feature in place that allowed select() to be called on a table with that will load the from part into the object.</p>

<p>Please see <a href="http://framework.zend.com/manual/en/zend.db.table.html#zend.db.table.qry.rows.set.refine.example">here</a>, and the api doc <a href="http://framework.zend.com/apidoc/core/Zend_Db/Table/Zend_Db_Table_Abstract.html#methodselect">here</a></p>

<p>I think it might fix this problem.</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-08-26T00:28:52.000+0000</p> 
        <div class="body">
            <p>It does, except that you have to explicitly choose it ($table-&gt;select(true)), which makes the API look strange.</p>

<p>And you have to do that if you want joins to work :</p>

<pre class="highlight"><code>
$table-&gt;select()-&gt;setIntegrityCheck(false)-&gt;join('other_table', "$this-&gt;_name.mycol = other_table.itscol", "some-col");
</code></pre>

<p>won't work and will complain about "columns mycol not in $this-&gt;_name table".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-26T07:05:56.000+0000</p> 
        <div class="body">
            <p>True, but its not something we can change pre 2.0.  Also, to make it more readable, one might consider using:</p>

<p>$table-&gt;select(Zend_Db_Table::WITH_FROM_PART)-&gt;setItegrityCheck()....</p>

<p>I'd suggest adding these notes to the Zend_Db 2.0 pages in ZFDEV wiki</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-08-26T09:19:18.000+0000</p> 
        <div class="body">
            <p>true and right ;-)</p>

        </div>
    </div>
    </div>

