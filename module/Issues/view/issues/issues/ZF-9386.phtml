<h2>ZF-9386: Zend_Form_Element::setBelongsTo is always filled with $form-&gt;getElementsBelongTo() in Decorator_FormElements</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2010-03-09T18:39:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-18T02:54:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In the Docs <a href="http://framework.zend.com/manual/en/zend.form.advanced.html">http://framework.zend.com/manual/en/â€¦</a></p>

<p>Zend_Form::setElementsBelongTo($array): Using this method, you can specify the name of an array to which all elements of the form belong. You can determine the name using the getElementsBelongTo() accessor.</p>

<p>Additionally, on the element level, you can specify individual elements may belong to particular arrays using Zend_Form_Element::setBelongsTo()  method. To discover what this value is -- whether set explicitly or implicitly via the form -- you may use the getBelongsTo() accessor.</p>

<p>But actually setting belongsTo on the element level in combination with setting elementsBelongTo on the (Sub)Form level discards the element level setting.</p>

<pre class="highlight"><code>
$form = new Zend_Form();
$form-&gt;setName('form');
$form-&gt;setElementsBelongTo('form');

$sub = new Zend_Form_SubForm(
    array(
        'elementsBelongTo' =&gt; 'subform[elementsBelongTo]',
        'elements' =&gt; array(
            array(
                'type' =&gt; 'Text',
                'name' =&gt; 'inputText',
                'options' =&gt; array(
                'belongsTo' =&gt; 'element[belongsTo]'
)))));

$form-&gt;addSubForm($sub,'foo');
$form-&gt;render();
</code></pre>

<p>renders the input like</p>

<pre class="highlight"><code>
</code></pre>

<p>And when setting belongsTo after adding the SubForm to the Form</p>

<pre class="highlight"><code>
$form-&gt;addSubForm($sub);
$sub-&gt;getElement('inputText')-&gt;setBelongsTo('element[belongsTo]');
$form-&gt;render();
</code></pre>

<p>again</p>

<pre class="highlight"><code>
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-03-09T19:01:22.000+0000</p> 
        <div class="body">
            <p>My question is then, what would be the expected value for getBelongsTo()?</p>

<p>1.) form[subform][elementsBelongTo][element][belongsTo][inputText]
2.) form[element][belongsTo][inputText]
3.) element[belongsTo][inputText]</p>

<p>Number 1 is the only one i can think of at the moment how to implement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-03-09T19:03:36.000+0000</p> 
        <div class="body">
            <p>I mean because 2 and 3 makes it rather heavy for Zend_Form to populate, getValues and Validate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-03-10T08:20:14.000+0000</p> 
        <div class="body">
            <p>The question was wrong asked, it should be what is the expected rendered name for the Element, if it has one.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-03-18T02:54:04.000+0000</p> 
        <div class="body">
            <p>This is fixed with ZF-9451</p>

        </div>
    </div>
    </div>

