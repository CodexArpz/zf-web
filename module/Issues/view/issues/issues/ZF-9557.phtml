<h2>ZF-9557: Cannot turn off &quot;use numbers&quot; feature for captcha words (bug fix attached)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-28T09:20:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-07T17:52:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Stanislav Malyshev (stas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Captcha</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12955/Word.php">Word.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The {{$_useNumbers}} property of the {{Zend_Captcha_Word}} class cannot be disabled (set to false) because there are no getter or setter methods like {{setUseNumber()}} or {{getUseNumber()}}.</p>

<p>The Zend_Captcha_Word class contains a protected property called {{$_useNumbers}} (line {{81}}) and this property is used to determine whether or not to generate a word that is completely alphabetic with letters only or alphanumeric with letters and numbers (lines {{304}} and {{305}}). There is, however, no method for setting - or getting - this value and because it is a private property it cannot be set manually by the user of the class.</p>

<p>The {{$_useNumbers}} property has a default value of true and the property is tied into the word generation code, so is used for the word-type (alpha vs alphanumeric) decision process already, but the behavior cannot be changed because there is no way to set the property, so the {{Zend_Captcha}} classes are limited to alphanumeric words only - i.e. you cannot generate captchas with words that use letters only if you are using any of the {{Zend_Captcha}} components.</p>

<p>The fix for this is very simple, and until the ZF team implements this fix, users can simply extend the captcha class of their choice, as illustrated below, with the proper getter and setter methods and use that instead. This works successfully for me, but it would be nice to see this fixed in future versions so this workaround, and the extra time it takes, is not required. Perhaps the dev team thought it better not to allow people to use numberless captchas unless they knew what they were doing :)</p>

<p><em>The Fix:</em> add these two methods to the {{Zend_Captcha_Word}} class. The updated Zend_Captcha_Word class file is already attached to the bug.</p>

<pre class="literal">
    public function getUseNumbers()
    {
        return $this-&gt;_useNumbers;
    }

    public function setUseNumbers($useNumbers)
    {
        $this-&gt;_useNumbers = $useNumbers;
        return $this;
    }
</pre>

<p><em>The Temporary Solution:</em> extend your own captcha class from the appropriate desired base class and add the above two methods</p>

<pre class="literal">
&lt;?php
require_once 'Zend/Captcha/Image.php';

class My_Captcha_Image extends Zend_Captcha_Image
{
    public function getUseNumbers()
    {
        return $this-&gt;_useNumbers;
    }

    public function setUseNumbers($useNumbers)
    {
        $this-&gt;_useNumbers = $useNumbers;
        return $this;
    }
}
?&gt;
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Vaughn Draughon (vfdev) on 2010-03-28T09:23:10.000+0000</p> 
        <div class="body">
            <p>Here is the updated/fixed Zend_Captcha_Class</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Vaughn Draughon (vfdev) on 2010-03-28T09:26:23.000+0000</p> 
        <div class="body">
            <p>Attached the patched class file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Peter Urda (purda) on 2010-04-06T06:36:29.000+0000</p> 
        <div class="body">
            <p>An easy fix, I was able to add this to my Zend library locally and it work perfectly. Should be an easy commit to trunk by someone with write access.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2010-04-06T06:59:28.000+0000</p> 
        <div class="body">
            <p>Could you please provide a .diff patch and unit tests for the setter/getter? I can apply it to the trunk then.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stanislav Malyshev (stas) on 2010-04-07T17:52:03.000+0000</p> 
        <div class="body">
            <p>fixed, added getter/setter in trunk</p>

        </div>
    </div>
    </div>

