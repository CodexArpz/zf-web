<h2>ZF-1097: [Zend][Controller][Action] unsetParam() and some suggestions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-03-21T04:59:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:58.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.2 (06/Apr/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <ol><li><p>There is no method to unset a param in action controller or its request class. We need a unsetParam() method in action/request.</p></li>
<li><p>I see usage of getRequest() and getResponse() methods inside the action class although these vars are sitting right inside the class itself (protected $_request, $_response) that can be accessed directly instead of invoking a method to access them. Accessing them directly inside the action class should improve performance.</p></li>
</ol><p>Regards,</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-22T12:23:00.000+0000</p> 
        <div class="body">
            <p>Assign to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-03-29T12:08:27.000+0000</p> 
        <div class="body">
            <p>Regarding (1), I'm assuming this has to do with the request object, and having an accessor in the action controller to proxy to the request object. As it is, you can pass null to setParam(); however, right now, it doesn't actually unset the parameter; I will change the behaviour so this will happen.</p>

<p>Regarding (2), the reason for usage of the accessors is so that developers may override the accessor to provide custom functionality -- such as returning a different request object, or modifying the request object on access. If we use $_request and $_response, we would effectively break those developer's applications. As a result, I will not change (2).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-04-02T11:29:47.000+0000</p> 
        <div class="body">
            <p>Added ability to unset request object parameters by passing null values to setParam() and setParams().</p>

<p>Will not add such ability to the action controller/dispatcher/router as these should not be changing parameters pushed in via the front controller.</p>

<p>Will not modify the action controller to use $_request and $_response internally, as this breaks extensibility.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shekar Reddy (zendfw) on 2007-06-11T17:27:40.000+0000</p> 
        <div class="body">
            <p>Matthew,</p>

<p>I notice, doing setParam( $key, null ) does not unset the parameter even with RC2 - does not even set it to null :(</p>

<pre class="highlight"><code>
$this-&gt;_setParam( $key, null ); 
$this-&gt;_request-&gt;setParam( $key, null ); 
$this-&gt;getRequest()-&gt;setParam( $key, null );
</code></pre>

<p>None of the above works!</p>

<p>Thanks,</p>

        </div>
    </div>
    </div>

