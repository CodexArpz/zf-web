<h2>ZF-6398: Improve Zend_Controller_Router_Route_Chain that Routes added to Chains still could be used in Router without chains</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2009-04-23T11:50:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-04-26T14:43:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Anjey Lobas (anjey)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently (version 1.8) method chain of Zend_Controller_Router_Route_Chain looks like:</p>

<pre><code>public function chain(Zend_Controller_Router_Route_Abstract $route, $separator = '/')
{
    $route-&gt;isPartial(true);

    $this-&gt;_routes[]     = $route;
    $this-&gt;_separators[] = $separator;

    return $this;

}
</code></pre>

<p>So when you add any Route object to chain it becomes Partial and stop function outside a chain.</p>

<p>Let say we need to reuse some route object in different chains to minimize memory usage. It's ok. But if we need to add this route to router without using chains (i.e. create partial route) it wouldn't function because of Partial flag set to true:</p>

<p>$route1 = new Zend_Controller_Router_Route (......);
$route2 = new Zend_Controller_Router_Route (......);
$route3 = new Zend_Controller_Router_Route (......);</p>

<p>$router-&gt;addRoute($route1); // will be broken because of Partial flag 
$router-&gt;addRoute($route1-&gt;chain($route2)); // ok
$router-&gt;addRoute($route1-&gt;chain($route2)-&gt;chain(route3)); // ok</p>

<p>Why not set Partial directly in match/assemble methods of Zend_Controller_Router_Route_Chain before calling match method of chain member and set Partial back to false after that.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-04-23T13:15:52.000+0000</p> 
        <div class="body">
            <p>Assigning to Ben Scholzen</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2009-04-24T06:49:24.000+0000</p> 
        <div class="body">
            <p>Your suggestion is possible, but would generate quuite some overhead. My prefered solution is to hand an additional $partial-parameter to the match() and assemble() method, tho this would be a change of the public API. I will make that change with the router refactoring.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Anjey Lobas (anjey) on 2009-04-24T09:58:20.000+0000</p> 
        <div class="body">
            <p>Well to minimize overhead there could be also another possible solution:</p>

<p>Remove partial flag, instead of using partial flag check in match/assemble instanceof caller object (If caller is instanceof Router_Abstract -- path is NOT partial, if instanceof Router_Route_Abstract -- path is partial),</p>

<p>Also your solution with default value of partial === null (which will then use isPartial object flag) would be fine and retain backward compatibility</p>

<p>Regards
Anjey</p>

        </div>
    </div>
    </div>

