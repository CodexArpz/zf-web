<h2>ZF-6805: Zend_View_Helper_PaginationControl should render with no partial set</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-05-26T02:49:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-09T07:48:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Ratzloff (mratzloff)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, when you don't set the partial for paginationControl, it just throws an exception. But, IMHO, you could render a decent paginator without it being required. Say</p>

<pre class="highlight"><code> 
</code></pre><code><a href="#">«</a>
  <a href="#">‹</a>
  <a href="#">1</a>
  <a href="#">2</a>
  <span>4</span>
  <a href="#">5</a>
  <a href="#">›</a>
  <a href="#">»</a>
</code>

<p>This would lower the requirements for using it.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dalibor Karlovic (dkarlovi) on 2009-05-26T02:56:32.000+0000</p> 
        <div class="body">
            <p>The params needed for this would be the HTML for the first/last, prev/next combo, the name of the URL param (which could default to "page") for the url() view helper and the route name (defaulting to... well, "default"). Maybe, if feeling really generous, one could supply an "attribs" param which would get embeded to</p>

<p>&lt;</p>

<p>ul&gt; itself (defaulting to array("class" =&gt; "paginator"); I reworked the paginationControl helper by adding __toString() and render() as paginationControl() returns $this.</p>

<p>This would enable cuszomizing the paginator rendering per instance, like:</p>

<pre class="highlight"><code>
&lt;?php
echo $this-&gt;paginationControl()-&gt;setPaginator($this-&gt;paginator)-&gt;setParamName('p')-&gt;setParamRoute('articles');
?&gt;
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-05-30T20:36:39.000+0000</p> 
        <div class="body">
            <p>Postponing this issue. In the early prototypes of Zend_Paginator this features was available, but after giving the feature a lot of thought we opted to include good examples in the manual instead. If something like this is attempted it should probably be done in a separate view helper to not clutter the current one too much.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dalibor Karlovic (dkarlovi) on 2009-05-31T02:08:45.000+0000</p> 
        <div class="body">
            <p>A separate helper is fine, but then you have an issue of "Which is the proper one?" Why was the rendering without partials droped?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2009-06-08T07:46:28.000+0000</p> 
        <div class="body">
            <p>The examples in the documentation exist for this very reason, and I think the documentation is pretty clear in this respect.  I think a separate view helper would be more confusing.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dalibor Karlovic (dkarlovi) on 2009-06-08T08:56:12.000+0000</p> 
        <div class="body">
            <p>I don't get the reasoning behind your comment. The component should be able to render itself without requiring an additional view file, much like for example Zend_Form or Zend_Navigation. I don't understand why you'd go for breaking this pattern here and opt for "it all in the doc" stance.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-06-08T09:37:28.000+0000</p> 
        <div class="body">
            <p>I kinda agree here, (sorry Norm2782). I don't see the problem in providing a few standard partials or view helpers with ZF (those of the documentation maybe? :D).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2009-06-08T14:13:46.000+0000</p> 
        <div class="body">
            <p>Dalibor: To be fair, Zend_Navigation was only recently released, so prior to the inclusion of Zend_Paginator in 1.6 only one component was released that did this.  One component is not really a pattern, and therefore Zend_Paginator is not really "breaking" anything.  :-)</p>

<p>Dolf: I'd more than likely be the one to implement this issue; that's why I assigned it to myself.</p>

<p>After considering a simpler way of solving this (simply including a default view partial under Zend/View/Helper/PaginatorControl/default.phtml) I will re-mark this as postponed until I get some time to do it.  However, a patch (with unit tests) will help speed up the time to completion if one of you would like to submit one.  It would be appreciated.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dalibor Karlovic (dkarlovi) on 2009-06-09T00:07:27.000+0000</p> 
        <div class="body">
            <p>Well, the "pattern" might have been an overstatement, but atleast you've changed the WONTFIX attitude so it kinda worked. :) Anyway, as you're proposing adding the first view partial (AFAIK), maybe the core devs should discuss the best place for it (naming scheme, etc.). I could submit a patch for this, it'd get my feet wet.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2009-06-09T07:48:52.000+0000</p> 
        <div class="body">
            <p>That's a good point.  I'll raise the issue on the mailing list.</p>

        </div>
    </div>
    </div>

