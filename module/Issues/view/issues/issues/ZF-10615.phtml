<h2>ZF-10615: Allow class callbacks in ContextSwitch Helper</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-10-30T12:02:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nick Daugherty (nd987)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Unless you extends Zend_Controller_Action_Helper_ContextSwitch, you cannot register callbacks that are part of a class (vs global function).</p>

<p>For example, it would be very useful to implement your callbacks in a Zend_Application_Resource object and then when adding contexts with Zend_Controller_Action_Helper_ContextSwitch, you can pass both the callback name AND class name/instance to the callbacks parameter.</p>

<p>This would encourage encapsulation and discourage global php functions, which is the only way to add new contexts currently (besides extending Zend_Controller_Action_Helper_ContextSwitch, which is rarely desirable).</p>

<p>The change would be easy enough...allow passing an array (callback name, class/instance) for the context callback, then add a few lines in ContextSwitch class, around line 301, to check if the method exists as part of the class/object.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

