<h2>ZF-6658: autoloading issue with the fallback autoloader</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-14T10:15:56.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-29T01:09:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.1 (11/Aug/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7550">ZF-7550</a></li>
            <li><a href="/issues/browse/ZF-6672">ZF-6672</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I've enabled the fallback autoloader in my application bootstrap.</p>

<p>class Bootstrap extends Zend_Application_Bootstrap_Bootstrap {
    protected function _initFallbackAutoload() {
        Zend_Loader_Autoloader::getInstance()
            -&gt;setFallbackAutoloader(true)
        ;
    }
    [...]
}</p>

<p>This leads to the following error messages.
Warning: include(Module/Bootstrap.php) [function.include]: failed to open stream: No such file or directory in /path/to/library/Zend/Loader.php on line 83</p>

<p>Warning: include() [function.include]: Failed opening 'Module/Bootstrap.php' for inclusion (include_path='/path/to/library:.:/usr/local/lib/php') in /path/to/library/Zend/Loader.php on line 83</p>

<p>Warning: include(FrontController.php) [function.include]: failed to open stream: No such file or directory in /path/to/library/Zend/Loader.php on line 83</p>

<p>Warning: include() [function.include]: Failed opening 'FrontController.php' for inclusion (include_path='/path/to/library:.:/usr/local/lib/php') in /path/to/library/Zend/Loader.php on line 83</p>

<p>But the module bootstrap and the front controller would be loaded.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Miroslav Kubelik (koubel) on 2009-06-18T02:10:03.000+0000</p> 
        <div class="body">
            <p>I have same problem, I think you have to have also set suppressNotFoundWarnings(false) for "global" autoloader to see this warnings.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-06-24T21:29:35.000+0000</p> 
        <div class="body">
            <p>Could you try and reproduce this issue with 1.8.4? The solution to ZF-7002 might have fixed this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Adler (madler) on 2009-06-26T02:38:00.000+0000</p> 
        <div class="body">
            <p>Now I have tested this issue against Zend Framework 1.8.4 Release (r16258).
It still throws both warnings related to the FrontController.php
as explained in the description, but the module bootstrap will be loaded without any warnings now.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Miroslav Kubelik (koubel) on 2009-06-27T15:29:31.000+0000</p> 
        <div class="body">
            <p>I also test it with ZF 1.8.4 (r16258) in real app and I think that everything is OK, no warnings for Module/Bootstrap.php and  no for FrontController.php.
But there is one problem I think.</p>

<p>At all events, ZF 7002 fixed the Module/Bootstrap.php warnings.</p>

<p>FrontController.php warnings are gone because the front controller resource plugin is initialized in the constructor of 
Zend_Application_Bootstrap_Bootstrap, this is parent for main boostraps in most situations.</p>

<p>But in situation, when the front controller plugin is initialized only from module bootstrap via code from Zend_Application_Module_Bootstrap
constructor:</p>

<pre class="literal">
       //ZF-6545: ensure front controller resource is loaded
        if (!$this-&gt;hasPluginResource('FrontController')) {
            $this-&gt;registerPluginResource('FrontController');
        } 
</pre>

<p>warnings related to FrontController.php can be populated, because code</p>

<pre class="literal">
if (class_exists($plugin)) { ...
</pre>

<p>is used in the Zend_Application_Bootstrap_BootstrapAbstract::getPluginResource()  as described in the dependent issue.</p>

<p>But is this situation real - when Zend_Application_Bootstrap_Bootstrap isn't used and Zend_Application_Module_Bootstrap is?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Miroslav Kubelik (koubel) on 2009-08-06T10:03:01.000+0000</p> 
        <div class="body">
            <p>patch to solve this is in ZF-7224</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-08-06T10:39:39.000+0000</p> 
        <div class="body">
            <p>Patch applied in trunk and 1.9 release branch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Margus Sipria (msipria) on 2009-09-29T01:09:18.000+0000</p> 
        <div class="body">
            <p>this bug should be opened again, patch has removed in the favor of ZF-7696</p>

        </div>
    </div>
    </div>

