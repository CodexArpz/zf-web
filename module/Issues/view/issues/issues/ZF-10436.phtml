<h2>ZF-10436: Zend_View_Abstract private variables</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-09-08T14:13:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-09-09T06:37:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_View_Abstract uses a number of private variables.
It provides accessors for some (but not ALL) of those.</p>

<p>The private variables prohibit derived classes from manipulating those variables which would be fine if accessors allowed them to be changed.</p>

<p>Extending Zend_View and Zend_View_Abstract is therefor effectively prevented in cases where one may want to do some advanced behaviour modification.</p>

<p>Changing the protection for the private variables will allow those classes to be extended while still preserving the protection against public access offered by the __set/assign methods ...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-09-08T17:04:02.000+0000</p> 
        <div class="body">
            <p>This is a design decision that is clearly spelled out on the "Zend_View_Abstract" page (<a href="http://framework.zend.com/manual/en/zend.view.abstract.html">http://framework.zend.com/manual/en/â€¦</a>).</p>

<p>Zend Framework 2.0 will rectify this situation, but do not expect any changes before then.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christo DeLange (dldinternet) on 2010-09-08T18:35:33.000+0000</p> 
        <div class="body">
            <p>Thank you for taking the time to respond  but I disagree. 
I understand the whole rationale explained on the link you provided BUT it is perfectly possible to maintain the goals and protections set out in the manual AND allow derived classes to extend the base. This is a key OO concept ... 
Nonetheless ... For now I will just duplicate the class hierarchy then ...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-09-09T06:37:11.000+0000</p> 
        <div class="body">
            <p>I understand that you disagree. I also pointed out that we plan to rectify the situation for ZF2. We simply cannot at this time due as it would introduce BC breaks.</p>

        </div>
    </div>
    </div>

