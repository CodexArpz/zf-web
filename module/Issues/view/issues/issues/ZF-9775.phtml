<h2>ZF-9775: Zend_Date-&gt;toValue fails if the system saves timestamp in exponential format</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-30T08:27:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-30T11:10:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.5 (26/May/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alvaro Villalba (alvarovillalba)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Today morning I realised the unix timestamp of "Apr 30 2010 00:00:00" Zend_Date-&gt;_unixTimestamp was in exponental format: 1.2726E+9 on a RedHat system. On a Ubuntu system was in integer format: 1272600000</p>

<p>The effect of this is that Zend_Date-&gt;toValue() returns 1 (i.e. my application jumped to 1970) on RedHat and 1272600000 on Ubuntu.</p>

<p>This is because intval(1.2726E+9) = 1 (Zend/Date.php:489)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alvaro Villalba (alvarovillalba) on 2010-04-30T08:57:35.000+0000</p> 
        <div class="body">
            <p>PHP code to get this approach:</p>

<p>&lt;?php
date_default_timezone_set('America/New_York');
$bugDate = new Zend_Date('Apr 30 2010 00:00:00');</p>

<p>echo 'timestamp: ' . $bugDate-&gt;getTimestamp() . "<br />\n";
echo 'toValue(): ' . $bugDate-&gt;toValue() . "<br />\n";
// if you see timestamp: 1272600000, then toValue(): 1272600000, but
// if you see timestamp: 1.2726E+9, then toValue(): 1</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-30T11:10:24.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue.</p>

<p>According to API the method toValue returns "the integer represenation of an date object".</p>

<p>When your system does not save values within the integer range as integer then they can not be returned as integer. The same applies when the used date extends the integer range.</p>

<p>If you need values which extend the integer range then use toString() instead of toValue().</p>

        </div>
    </div>
    </div>

