<h2>ZF-2908: ZF 1.5 no longer auto detecting browser language</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-03-18T07:16:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T17:09:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.1 (25/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Robert Castley (rcastley)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In ZF 1.0.4 I have the following code, it successfully detects browser language setting and applies the translation and will downgrade through the list of languages the browser sends.  Since upgrading to ZF 1.5 this no longer works and always returns the last language loaded (in my case Spanish!) even though the browser is set to en.</p>

<pre class="highlight"><code>
    public function preDispatch(Zend_Controller_Request_Abstract $request)
    {
        $browserLocale = new Zend_Locale(Zend_Locale::BROWSER);
        Zend_Registry::set('browserLocale', $browserLocale-&gt;__toString());
        setcookie('lang', $browserLocale-&gt;__toString(), null, '/');

        $config = Zend_Registry::get('config');

        $translate = new Zend_Translate("csv", "languages" . DS . "en" . DS . "lang.en", "en");

        if (!empty($config-&gt;languages-&gt;lang)) {
            foreach ($config-&gt;languages-&gt;lang as $lang) {
                $translate-&gt;addTranslation("languages" . DS . $lang . DS . "lang." . $lang, $lang);
            }
        }

        if ($translate-&gt;isAvailable($browserLocale-&gt;__toString())) {
            //Zend_Registry::get('logger')-&gt;info("Setting language to " . $browserLocale);
            $locale = substr($browserLocale-&gt;__toString(), 0, 2);
        } else {
            //Zend_Registry::get('logger')-&gt;info("Language " . $browserLocale . " not found downgrading to " . $translate-&gt;getLocale());
            $locale = substr($translate-&gt;getLocale(), 0, 2);
        }

        Zend_Registry::set('translate', $translate);
        Zend_Registry::set('locale', $locale);
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-03-18T08:40:45.000+0000</p> 
        <div class="body">
            <p>With your code you set all languages manually. This is the reason why it does not work for you.
The settings of your browser are ignored.</p>

<p>You have eighter to use "browser" or "auto" as locale to use the browser settings.</p>

<p>Also instead of adding each languages manually it is better to have this done automatically.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-03-18T08:44:13.000+0000</p> 
        <div class="body">
            <ul><li>locale "browser" for detecting browser locale</li>
<li>use directory or file search to get rid of the multiple adding a single file and setting always a new language within there</li>
<li>or use setLocale to set the wished locale</li>
</ul><p>all mentioned points are stated in the manual, just take a look</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Castley (rcastley) on 2008-03-18T18:11:38.000+0000</p> 
        <div class="body">
            <p>I have made the suggested changes to my code.  I know have:</p>

<pre class="highlight"><code>
public function preDispatch(Zend_Controller_Request_Abstract $request)
    {
      $locale = new Zend_Locale();
      $translate = new Zend_Translate('csv', 'languages', 'browser', array('scan'=&gt;Zend_Translate::LOCALE_DIRECTORY));
      $translate-&gt;setLocale('browser');
     Zend_Registry::set('Zend_Translate', $translate);
</code></pre>

<p>If I don't use $translate-&gt;setLocale('browser'); it seems to display the values of the last language file loaded.</p>

<p>A couple of things to note:</p>

<p>1) My language files are stored like so:</p>

<pre class="highlight"><code>
languages
  --&gt;en
    --&gt;lang.en
  --&gt;de
    --&gt;lang.de
  --&gt;fr
    --&gt;lang.fr
etc.
</code></pre>

<p>2) If I set my browser to e.g. Cambodian(km) I will only see messageIds in my view.  How do I get this to default or downgrade to English.  In 1.0.4 using the addTranslation it use to downgrade through the available languages sent by the browser i.e. if I had km -&gt; es -&gt; en in my list it would display English.</p>

<p>Also, Zend_Translate is not available Zend_View_Helper_MyHelper via $this-&gt;translate, I get an undefined method.  The docs seem to say that you can use $this-&gt;translate in helpers as long as you store $translate in the registry key Zend_Translate which I have done.  $this-&gt;translate is available in script views i.e. index.phtml.</p>

<p>Sorry to be a pain!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-03-19T06:45:19.000+0000</p> 
        <div class="body">
            <p>Zend_Locale recognises the locale "browser"...</p>

<p>Zend_Translate does only recognise the "auto" locale which includes the "browser" locale.
If you use "auto" then you do not need to set the locale afterwards... "auto" is also described in the manual for Zend_Translate.</p>

<p>As you can see by your structure you could also use search by filename as you have the locale present in it.</p>

<p>Related to "km"... of course... actually Zend_Translate is not able to do rerouting. There is a own issue for this improvement and this is no bug but an improvement. Actually you can do this manually by existing methods.
See getList()... it returns all languages... you could then do an array_key_exists BUT you can not do this per message. And also your code is wrong in this case.
When you have "fr" for example but only half of all strings translated also your code would not work !!!
This is where the other issue comes in.</p>

<p>Related to Zend_View_Helper_MyHelper... this is not a failure from Zend_Translate... you should ask in the mailinglist as this is not an issue but a question of proper handling. And no you can not use it in "helpers" but in the view... you can use view helper in the view and not view helpers in other view helpers. Please ask in the mailinglist for the exact handling.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Castley (rcastley) on 2008-03-19T07:17:12.000+0000</p> 
        <div class="body">
            <p>Many thanks for taking the time to respond, I really appreciate it.  Off to the mailing lists I go :-)</p>

<p>All the best!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:09:03.000+0000</p> 
        <div class="body">
            <p>I'm assuming this fix is merged to the 1.5 release branch for release with 1.5.1. Please update JIRA if this is not the case.</p>

        </div>
    </div>
    </div>

