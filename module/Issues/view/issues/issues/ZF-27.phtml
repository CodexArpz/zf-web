<h2>ZF-27: the Zend framework doesn't currently quote the column names in it's (My)SQL queries (TRAC#9)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-19T22:50:04.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1">ZF-1</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For you guys to ponder: the Zend framework doesn't currently quote the column names in it's (My)SQL queries. This gives issues when using "special" characters in those names and thus I found myself haphazardly adding them: From: Zend/Db/Select.php</p>

<pre class="highlight"><code>
    public function __toString()
    {
        //unchanged parts
 
        // add columns
        /** WH: Updated to quote column names in back-ticks (`). Needed for '-' in a column name.
         * Note that I am not sure how databases other than MySQL respond to those back-ticks.
         * Note also how - probably inefficiently - the select is for all columns by name, rather than *.
         * @todo: find a way to do this without altering the library code.
         */
        if ($this-&gt;_parts['cols']) {
            $sql .= '`'. implode("`,\n\t`", $this-&gt;_parts['cols']) . "`\n";
        }
 
        //more unchanged parts
    }
</code></pre>

<p>If this affects other database systems differently than MySQL, then I dunno how / where this had best be done. If it doesn't hurt any of them, then please implement right away. :D I'm very exited about this development. PHP really lacks a "master" framework (like Ruby's Rails or some of Java's frameworks). I think the future success of the language rides on it (now that PHP5 already covers most other wishes). With kind regards, Wim Heemskerk</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Zend Framework (zend_framework) on 2006-06-19T22:50:22.000+0000</p> 
        <div class="body">
            <p>05/05/06 19:43:49: Modified by gavin</p>

<p>Also, the same problem arises in MySQL when column names use reserved words (e.g. timestamp).</p>

<p>Right or wrong, phpMyAdmin permits this, and some people do this.
06/03/06 04:36:47: Modified by mike</p>

<p>See also #92, issue is not limited to MySQL.
06/06/06 08:00:31: Modified by tony at sealedenvelope.com</p>

<p>The same issue also applies to using reserved words (e.g. 'group') as table names in MySQL. Line 80 of Db/Adaptor/Pdo/Mysql.php should be changed from:</p>

<p>$sql = "DESCRIBE $table";</p>

<p>to:</p>

<p>$sql = "DESCRIBE <code>$table</code>";</p>

<p>06/12/06 05:48:50: Modified by Link</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2006-06-20T12:21:39.000+0000</p> 
        <div class="body">
            <p>Duplicates ZF-1</p>

        </div>
    </div>
    </div>

