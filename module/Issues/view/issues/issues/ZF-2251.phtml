<h2>ZF-2251: Add OPML support to Zend_Feed::findFeeds</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2007-11-30T22:18:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-17T15:19:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Turland (elazar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Feed</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10944/Feed.php.diff">Feed.php.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As it exists now, Zend_Feed::findFeeds can locate feeds advertised in HTML documents. The attached patch enhances this method such that it can also locate feeds advertised in OPML feeds.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-07T15:01:18.000+0000</p> 
        <div class="body">
            <p>I don't think this feature would be a good idea for Zend_Feed.</p>

<p>First of all, current Zend_Feed::findFeeds implementation not only tries to discover available feeds but also parses them and returns a valid Zend_Feed_* instance.
Because Zend_Feed doesn't support OPML at all any OPML support in Zend_Feed::findFeeds will cause Zend_Feed to raise an exception.</p>

<p>Finally, there's no valid reason to integrate OPML support in Zend_Feed as a syndication flavor.
OPML is often used as an outline format, for example fo feed collections, and doesn't really fit current Zend_Feed feed format architecture.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-02-07T15:29:52.000+0000</p> 
        <div class="body">
            <p>"First of all, current Zend_Feed::findFeeds implementation not only tries to discover available feeds but also parses them and returns a valid Zend_Feed_* instance."
The only reason I suggest that this feature function differently is because HTML files generally offer very few feeds, whereas an OMPL file generally contains many.</p>

<p>"Because Zend_Feed doesn't support OPML at all any OPML support in Zend_Feed::findFeeds will cause Zend_Feed to raise an exception."
Please cite an example of this. As far as I'm aware, this patch works without  breaking the existing feature or causing any other conflicts.</p>

<p>"Finally, there's no valid reason to integrate OPML support in Zend_Feed as a syndication flavor."
That's incorrect. Any respectable feed aggregator, web-based or otherwise, offers OMPL import/export as a feature, including Google Reader, Bloglines, and Newsgator/FeedDemon. Don't take my word for it, check the FAQ page for any of those readers and see for yourself.</p>

<p>"OPML is often used as an outline format, for example fo feed collections, and doesn't really fit current Zend_Feed feed format architecture."
That was its original purpose, yes, but it's obviously being used for other things now. See my last comment on feed aggregators using it as an import/export format. I wouldn't say the existing function really "fits" with Zend_Feed, either, so if it's going to have something that doesn't "fit," it may as well be as useful as possible.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-07T15:38:46.000+0000</p> 
        <div class="body">
            <p>Hi Matthew,
thanks for your feedback.</p>

<p>{quote}
The only reason I suggest that this feature function differently is because HTML files generally offer very few feeds, whereas an OMPL file generally contains many.
{quote}</p>

<p>Reading the quoted line I guess I probably misunderstand your request.
With "Add OPML support to Zend_Feed::findFeeds" do you actually mean</p>

<ol><li>enhance Zend_Feed in order to parse also OPML files and discover Atom/Rss feeds listed within the file</li>
</ol><p>or</p>

<ol><li>enhance Zend_Feed in order to parse a classic URL and extract all Atom/Rss è OPML files?</li>
</ol><p>Reading your last feedback I suppose your initial request was #1 but my interpretation was based on the #2nd option.
Could you please clarify your request?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-02-07T15:48:03.000+0000</p> 
        <div class="body">
            <h1>1 is what I actually meant. Zend_Feed:findFeeds already does this for HTML files. My patch merely makes some minor modifications so that it can also be used on OPML files.</h1>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-07T16:02:02.000+0000</p> 
        <div class="body">
            <p>I do apologize, Matthew, I misinterpreted your request.
I'm reopening the ticket, I'll give a look at the patch in a few days.</p>

<p>I'm a little concerned about the suggestion to tweak Zend_Feed::findFeeds.
I would add an additional importFromOpml instead or something like that. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-02-07T16:10:00.000+0000</p> 
        <div class="body">
            <p>"I would add an additional importFromOpml instead or something like that."</p>

<p>Fair enough. I can submitted a modified patch that takes that approach if need be.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:12:00.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:25:24.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-12-24T12:24:24.000+0000</p> 
        <div class="body">
            <p>Reexamining the patch, I'm not sure it makes sense to have a separate method without abstracting common logic out of findFeeds(). The only real difference in the two processes in the expected structure of the document / how feed URLs are parsed from it. Everything else is the same. Thoughts?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2011-02-17T14:29:50.000+0000</p> 
        <div class="body">
            <p>Is this something we should push to 2.0? or is there a clear fix now?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2011-02-17T15:09:59.000+0000</p> 
        <div class="body">
            <p>I spoke with Padraic Brady over Twitter, being that this ticket relates to Zend_Feed and his component Zend_Feed_Reader is the preferred way of handling feeds at this point. He requested that I assign the ticket to him, set it for release in ZF2, and set its status to postponed (which is the only part I don't seem to be able to do myself).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2011-02-17T15:19:26.000+0000</p> 
        <div class="body">
            <p>Status updated to postponed - Zend\Feed in ZF 2.0 will include OPML fetch/read/write support to handle this and other OPML use cases. Reporter is welcome to hijack Zend\Feed if they want to work on this specific feature set ;).</p>

        </div>
    </div>
    </div>

