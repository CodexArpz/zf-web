<h2>ZF-9632: Zend_Mail_Storage_Imap::getFolders() throws an exception when there is no subfolders in the mailbox</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-07T08:30:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail_Storage</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>From Zend_Mail_Storage_Imap code:</p>

<pre class="highlight"><code>
   /**
     * get root folder or given folder
     *
     * @param  string $rootFolder get folder structure for given folder, else root
     * @return Zend_Mail_Storage_Folder root or wanted folder
     * @throws Zend_Mail_Storage_Exception
     * @throws Zend_Mail_Protocol_Exception
     */
    public function getFolders($rootFolder = null)
    {
        $folders = $this-&gt;_protocol-&gt;listMailbox((string)$rootFolder);
        if (!$folders) {
            /**
             * @see Zend_Mail_Storage_Exception
             */
            require_once 'Zend/Mail/Storage/Exception.php';
            throw new Zend_Mail_Storage_Exception('folder not found');
        }
</code></pre>

<p>When mailbox pointed by {{$rootFolder}} is empty (has no subdirectories), it throws an exception. I reckon it should return an empty iterator instead.</p>

<p>The IMAP chat the code would result with:</p>

<pre class="literal">
TAG2 LIST "INBOX.aaa" "*"
TAG2 OK LIST completed
</pre>

<p>The IMAP implementation I was testing it against (courier) does not indicate errors if queried for inexistent folder</p>

<pre class="literal">
TAG3 LIST "INBOX.this.does.not.exist" "*"
TAG3 OK LIST completed
</pre>

<p>It is possible, though, to list the contents of the inbox by querying parent directory with an appropriate wildcard, and then parse the data.</p>

<pre class="literal">
TAG4 LIST "INBOX" "aaa*"
* LIST (\HasNoChildren) "." "INBOX.aaa"

TAG5 CREATE "INBOX.aaa.bbb"
TAG5 OK "INBOX.aaa.bbb" created.

TAG6 LIST "INBOX" "aaa*"
* LIST (\HasNoChildren) "." "INBOX.aaa.bbb"
* LIST (\HasChildren) "." "INBOX.aaa"
TAG6 OK LIST completed
</pre>

<p>Possible drawbacks I could imagine is having multiple directories matching the pattern resulting in unnecessary data being sent across the network &amp; processed (in example above it would list all directories starting with aaa).</p>

<p>Other possible solution is to have two step process:</p>

<p>{{LIST "INBOX.aaa" "*"}}, then if empty, check whether the directory exists itself by doing {{LIST "INBOX" "aaa"}}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

