<h2>ZF-9631: Add table's name in the Zend_Db_Table_Exception raised</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-04-07T07:16:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Wilfried Loche (w_loche)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>I have a lot of compiled views, and the message "Zend_Db_Table_Exception' with message 'Primary key column(s) (ID_PRC_STEP) are not columns in this table ()" is too generic for me to quickly find out the issue: I got no columns because the view is broken!</p>

<p>By simply add the table name {$this-&gt;_name}, I saw the issue. Here is my proposal:</p>

<p>line 859,</p>

<pre class="highlight"><code> 
abstract class Zend_Db_Table_Abstract
{
../..

protected function _setupPrimaryKey()
{
// ..//..

        if (! array_intersect((array) $this-&gt;_primary, $cols) == (array) $this-&gt;_primary) {
            require_once 'Zend/Db/Table/Exception.php';
            throw new Zend_Db_Table_Exception("Primary key column(s) ("
                . implode(',', (array) $this-&gt;_primary)
                . ") are not columns in this table {$this-&gt;_name} ("
                . implode(',', $cols)
                . ")");
        }
</code></pre>

<p>Thanks for this Framework that I really appreciate :)
Wilfried Loche</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

