<h2>ZF-2563: Allow array notation in form element names</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-02-04T12:01:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-09T01:40:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A common pattern used by those developing forms is to assign elements as array keys:</p>

<pre class="highlight"><code>
</code></pre>

<p>This is done to group related data, as well as on forms that may have repeated
sets of form data (e.g., a 'todo' application, that might create a new set of
data for each todo item).</p>

<p>Currently, this is not supported in Zend_Form, and the support within Zend_View_Helper_FormElement is slightly buggy.</p>

<p>In Zend_View_Helper_FormElement <em>can</em> create names with array notation without a problem. However, since the name is used as the id when no id is present, this causes invalid ids. Additionally, it does not currently look to see if the provided value is an array, nor if the element's name exists in the array, leading to errors and buggy output.</p>

<p>Within Zend_Form, we cannot allow names with array notation due to the fact that we overload; array notation will cause interpreter issues with PHP.</p>

<p>The solution to this is to use sub forms. My proposal is to add a 'belongsTo'
property to Zend_Form_Element. SubForms, when rendering, would then set the
'belongsTo' property of each element. Decorators that need to be array-aware
would then build the name using the value of this property:</p>

<pre class="highlight"><code>
$name = $element-&gt;getBelongsTo() . '['
      . $element-&gt;getName()
      . ']';
</code></pre>

<p>Additionally, it could set the id, if not previously set, by concatenating the
belongsTo property and the name with a dot separator:</p>

<pre class="highlight"><code>
$id = $element-&gt;getBelongsTo() . '.'
    . $element-&gt;getName();
</code></pre>

<p>Finally, the value would be passed by the decorator based on the element value,
thus bypassing the issues in Zend_View_Helper_FormElement.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-04T16:11:04.000+0000</p> 
        <div class="body">
            <p>This is now checked into the repo in r7793.</p>

<p>Usage is as follows:</p>

<pre class="highlight"><code>
$foo = new Zend_Form_SubForm();
$foo-&gt;setElementsBelongTo('foo')
    -&gt;setElements(array(
        'bar' =&gt; 'text',
        'baz' =&gt; 'text'
    ));
echo $foo;
</code></pre>

<p>which results in HTML something like:</p>

<pre class="highlight"><code>
</code></pre>

<p>When data is submitted from such a form, the 'foo' key will be passed to the subform, which will use that array in its own isValid() call -- effectively namespacing the elements.</p>

<p>Please give this a try and comment on any issues.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-06T08:49:17.000+0000</p> 
        <div class="body">
            <p>I've verified that all works as expected; labels are created with the appropriate ids, validation works as expected, and getValues() retrieves values as expected. As an example, I've created <a href="http://paste2.org/p/13127">a sample controller and login form</a> showing potential usage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sasa Stamenkovic (umpirsky) on 2009-11-09T01:40:52.000+0000</p> 
        <div class="body">
            <p>With</p>

<p>array(
            'ViewHelper',
            array(array('td' =&gt; 'HtmlTag'), array('tag' =&gt; 'td', 'style' =&gt; 'width: 360px;')),
            array('Label', array('tag' =&gt; 'td', 'requiredSuffix' =&gt; ' *')),
            array(array('tr' =&gt; 'HtmlTag'), array('tag' =&gt; 'tr')),
            array(array('tbody' =&gt; 'HtmlTag'), array('tag' =&gt; 'tbody')),
            array(array('table' =&gt; 'HtmlTag'), array('tag' =&gt; 'table', 'class' =&gt; 'tiny')),
            array(array('separator' =&gt; 'HtmlTag'), array('tag' =&gt; 'div', 'class' =&gt; 'separator'))
        )</p>

<p>element decorators, I get duplicated label (td) ids. I have 3 subforms under main form rendered on the page.</p>

        </div>
    </div>
    </div>

