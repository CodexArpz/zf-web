<h2>ZF-11955: Incorrect value comparisons in various setter method in Zend_GData_Query causes incorrect queries</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-12-21T23:01:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-21T23:01:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Dolf Starreveld (dolfs)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Trevor Johns (tjohns)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Gdata</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I found the problem in this method below, but it exists in many:</p>

<pre class="highlight"><code>
    public function setMaxResults($value)
    {
        if ($value != null) {
            $this-&gt;_params['max-results'] = $value;
        } else {
            unset($this-&gt;_params['max-results']);
        }
        return $this;
    }
</code></pre>

<p>I accidentally called this method with $value equal to 0 and noticed the max-results parameter was left out of the resulting query. This is wrong because I wanted 0 results, instead I got a huge amount (because the absence of the parameter means it defaults). The comparison in above should have been:</p>

<pre class="highlight"><code>
    public function setMaxResults($value)
    {
        if (!is_null($value) {
            $this-&gt;_params['max-results'] = $value;
        } else {
            unset($this-&gt;_params['max-results']);
        }
        return $this;
    }
</code></pre>

<p>The same problem exists in many of the setters in this class, and possibly others in the Zend_GData suite. In some of these cases the side effect of the problem is less noticeable, for example in setStartIndex because the absence of the parameter defaults to 0, which is fine if that is what one was trying to set anyway.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

