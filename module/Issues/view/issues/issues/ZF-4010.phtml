<h2>ZF-4010: assertQueryContentContains() crashes PHP on attribute value query</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-20T06:02:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-18T08:56:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.3 (22/Sep/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Stefan Gehrig (sgehrig)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Stefan Gehrig (sgehrig)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        
        
            Faxnummern
                <ol><li></li>
                    <li></li>
                    <li></li>
                </ol>
    
    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-09-11T07:06:46.000+0000</p> 
        <div class="body">
            <p>The problem isusing @value -- this syntax is not supported by Zend_Dom_Query. You can query for the <em>value</em> of an arbitrary attribute using some alternate CSS style notation; please see <a href="http://framework.zend.com/manual/en/zend.dom.query.html#zend.dom.query.operation">http://framework.zend.com/manual/en/â€¦</a> for more information.</p>

<p>Currently, there is no support for finding simply the existence of an arbitrary attribute, only for testing against the <em>value</em> of an arbitrary attribute. If you  would like the former functionality (existence of arbitrary attribute), please open a separate feature request.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Gehrig (sgehrig) on 2008-09-11T09:46:01.000+0000</p> 
        <div class="body">
            <p>Hi Matthew,</p>

<p>sorry, but I can't follow your comment... I'm trying to test against the value of an attribute (the {{value}}-Attribute of an {{}}-Tag).</p>

<p>The problem obviously is not {{Zend_Dom_Query}} as the following works as expected:</p>

<pre class="highlight"><code>
$query=new Zend_Dom_Query($string); // $string from example above
$result=$query-&gt;query('input#fax-0 @value');
var_dump($result);
foreach ($result as $r) {
    var_dump($r-&gt;value);
}
</code></pre>

<p>{{Zend_Dom_Query}} translates this into {{//input[@id='fax-0']//@value}}  and gives the following output</p>

<pre class="highlight"><code>
object(Zend_Dom_Query_Result)#3 (7) {
  ["_count:protected"]=&gt;
  NULL
  ["_cssQuery:protected"]=&gt;
  string(18) "input#fax-0 @value"
  ["_document:protected"]=&gt;
  object(DOMDocument)#2 (0) {
  }
  ["_nodeList:protected"]=&gt;
  object(DOMNodeList)#5 (0) {
  }
  ["_position:protected"]=&gt;
  int(0)
  ["_xpath:protected"]=&gt;
  NULL
  ["_xpathQuery:protected"]=&gt;
  string(28) "//input[@id='fax-0']//@value"
}
string(13) "(1234) 567890"
</code></pre>

<p>This is exactly what I want. But when using the query from above in a {{Zend_Test_PHPUnit_Constraint_DomQuery}} PHP crashes most obviously due to the code of {{Zend_Test_PHPUnit_Constraint_DomQuery::_getNodeContent(DOMNode $node)}} which reads:</p>

<pre class="highlight"><code>
$doc     = $node-&gt;ownerDocument;
$content = $doc-&gt;saveXML($node);
$tag     = $node-&gt;nodeName;
$regex   = '|?' . $tag . '[^&gt;]*&gt;|';
return preg_replace($regex, '', $content);
</code></pre>

<p>This doesn't work id {{$node}} is a  {{DOMAttr}}.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Gehrig (sgehrig) on 2009-09-18T01:43:10.000+0000</p> 
        <div class="body">
            <p>Fixed in r18224.
Zend_Test_PHPUnit_Constraint_DomQuery allows matching of attribute values.
Although the original issue seems to be related to the PHP version used, the present fix is PHP version independent.</p>

        </div>
    </div>
    </div>

