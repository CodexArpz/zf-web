<h2>ZF-1295: Zend_Cache_Backend_File use glob() to find cache files ?</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2007-04-19T15:09:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2449">ZF-2449</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10516/File2.php">File2.php</a></li>
            <li><a href="/issues/secure/attachment/10513/File2.php">File2.php</a></li>
            <li><a href="/issues/secure/attachment/10512/File2.php">File2.php</a></li>
            <li><a href="/issues/secure/attachment/10511/File2.php">File2.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Exist a particular reason to save expire timestamp in the cache file name ?
If not the system must not search cached file</p>

<pre class="highlight"><code>
    private function _file($id, $expire = null)
    {
        $path = $this-&gt;_path($id);
        if (is_null($expire)) {
            $glob = @glob($path . $this-&gt;_idToFileName($id, '*'));  //??????????????????
            $nbr = count($glob);
            if ($nbr == 1) {
                return $glob[0];
            }
            return null;       
        }
        $fileName = $this-&gt;_idToFileName($id, $expire);
        return $path . $fileName;
    }
</code></pre>

<p>and on load a cache id this method will call on test expire date and on read file</p>

<p>It is superior to write the expire timestamp as first byte in the file -&gt; better performance
on test read only the first byte and unpack this to a integer and on load the opened file must not close after testing expire date</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-05-06T09:27:50.000+0000</p> 
        <div class="body">
            <p>Zend_Cache related issue, assigned to Fabien</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2007-05-08T08:00:10.000+0000</p> 
        <div class="body">
            <blockquote>
  <p>It is superior to write the expire timestamp as first byte in the file -&gt; better performance</p>
</blockquote>

<p>Are you sure about it ? Do you make some benchs ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2007-05-08T08:03:09.000+0000</p> 
        <div class="body">
            <p>particulary when you do a clean with CLEANING_MODE_OLD</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2007-05-31T16:35:52.000+0000</p> 
        <div class="body">
            <p>I have rewritten the class Zend_Cache_Backend_File but it is not tested yet.
testing and bench comming soon</p>

<p>This class should fix ZF-1338, too.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2007-05-31T16:39:31.000+0000</p> 
        <div class="body">
            <p>new version</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2007-05-31T16:43:57.000+0000</p> 
        <div class="body">
            <p>new version</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2007-06-01T17:49:44.000+0000</p> 
        <div class="body">
            <p>new version</p>

<p>I write tags as serialized string a cache file named  ".tag"
The expirce time included as the first 4 bytes in the data file.
The hash including data file, too (32 bytes after expire only is read control is enabled)
The data file is named   ".data"</p>

<p>now the tests pass without:
testCleanModeOld &amp; testGetWithAnExpiredCacheId
this methods using public __expire ????</p>

<p>A very simple bench using tests (only Zend_Cache) like</p>

<pre class="highlight"><code>
$start = microtime(true);
for ($i=0; $i&lt;10; $i++) {
  AllTests::main();
}
echo "\n\nStart: $start\n";
echo "End:".($end=microtime(true))."\n";
echo ($end-$start)."\n";
</code></pre>

<p>result is:</p>

<p>my:
2.8983469009399
2.7813038825989
2.7996349334717
2.8102550506592
2.7592458724976</p>

<p>zend:
3.6789040565491
3.5660190582275
3.6374979019165
3.6498610973358
3.5821039676666</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2007-06-09T03:00:21.000+0000</p> 
        <div class="body">
            <p>thanks, I will review it after 1.0.0</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-01-17T17:49:20.000+0000</p> 
        <div class="body">
            <p>I just commited a completely new file backend inspired by your ideas and your code</p>

<p>many thanks</p>

        </div>
    </div>
    </div>

