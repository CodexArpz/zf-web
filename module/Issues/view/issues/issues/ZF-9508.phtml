<h2>ZF-9508: Section headings are all rendered as &lt;h1&gt; tags</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-03-22T10:30:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-02-07T13:47:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9509">ZF-9509</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In the current iteration of the ZF manual, section headings are all rendered as</p>

<p>&lt;</p>

<p>h1&gt; tags which makes certain sections very difficult to scan.  For example, if you view:</p>

<p><a href="http://framework.zend.com/manual/en/zend.validate.set.html">http://framework.zend.com/manual/en/…</a></p>

<p>And try to scan through all the validators, you will essentially be presented with the following list:</p>

<ul><li>Standard Validation Classes</li>
<li>Alnum</li>
<li>Alpha</li>
<li>Barcode</li>
<li>Basic usage</li>
<li>Optional checksum</li>
<li>Writing custom adapters</li>
<li>Between</li>
<li>Callback</li>
<li>Basic usage</li>
<li>Usage with closures</li>
<li>Usage with class-based callbacks</li>
<li>Adding options</li>
<li>CreditCard</li>
<li>Basic usage</li>
<li>Accepting defined credit cards</li>
<li>Validation by using foreign APIs</li>
<li>Ccnum</li>
<li>Date</li>
<li>...</li>
</ul><p>Immediately you should see a problem.  There's no visual difference between Validation class titles and the titles of those classes' sub-sections (such as "Basic usage" etc).</p>

<p>Now, if you look at the XML source file, these are properly nested  elements with child  elements, but when rendered you lose the inherent meaning of that nesting.</p>

<p>In an ideal world these would be exported as</p>

<p>&lt;</p>

<p>h1&gt;</p>

<p>&lt;</p>

<p>h2&gt;</p>

<p>&lt;</p>

<p>h3&gt; tags, but I don't know how difficult that would be to implement.  An easier solution (although less-than-ideal) would be to fix this through CSS.</p>

<p>There are a few CSS tweaks I would implement to fix this issue:</p>

<pre class="highlight"><code>
/* Indent Sub-Sections */
.section .section {
    margin-left: 10px;
}
.section .section .section {
    margin-left: 20px;
}

/* Change visual style of sub-headings */
#manual-container .section .section div.info h1 {
    color: #016080;
    border-color: #016080;
    font-size: 1.3em;
}
#manual-container .section .section .section div.info h1 {
    color: #206880;
    border-color: #206880;
    font-size: 1.1em;
}
</code></pre>

<p>These style changes will at least provide some visual hierarchy in heavily nested manual sections.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-11-17T02:54:12.000+0000</p> 
        <div class="body">
            <p>All section headers are still rendered as</p>

<p>&lt;</p>

<p>h1&gt; tags, however custom styling is applied to alter the font size depending on the nested level of the header.  This does improve the readability of the page, but we really should be making use of the full range of</p>

<p>&lt;</p>

<p>h1&gt;-</p>

<p>&lt;</p>

<p>h6&gt; tags.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-11-17T03:07:11.000+0000</p> 
        <div class="body">
            <p>I'm not sure this will be possible to accomplish. PhD uses Docbook5, which does not have a concept of specific section nesting depth tags (such as sect2, sect3, etc.) like Docbook4 had. As such, my understanding is that the XSLT does not keep track of the nesting level when parsing, which means the renderer cannot know either.</p>

<p>If somebody wants to dig into the PhD source and figure out how to make it happen, I'd welcome a patch -- the docbook build tools are all in the build-tools repo.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2013-02-07T13:47:06.000+0000</p> 
        <div class="body">
            <p>Fixed on Github (<a href="https://github.com/zendframework/zf-web/pull/73">#73</a>)</p>

<p>Example: <a href="http://framework.zend.com/manual/1.12/en/zend.validate.set.html">http://framework.zend.com/manual/1.12/…</a></p>

        </div>
    </div>
    </div>

