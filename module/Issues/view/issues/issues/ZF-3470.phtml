<h2>ZF-3470: Zend_Db_Statement_Pdo::setFetchMode does only except one parameter, while for PDO::FETCH_CLASS 2 (or 3) are needed</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-17T10:40:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-12-23T13:57:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.3 (22/Sep/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                S. Koopal (stien)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10866">ZF-10866</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For Zend_Db_Statement_Pdo::setFetchMode multiple arguments could be required, when working with PDO::FETCH_CLASS for example.
The current implementation does not support this feature since only the fetchmode can be set.</p>

<p>h3. Te reproduce</p>

<pre class="highlight"><code>
class FooClass {} 

$stmt = $db-&gt;query ( 'SELECT * FROM foo' );
$stmt-&gt;setFetchMode ( PDO::FETCH_CLASS, 'FooClass' );
</code></pre>

<p>Which results in: Zend_Db_Statement_Exception: SQLSTATE[HY000]: General error: No fetch class specified in ...</p>

<p>h3. Suggested fix</p>

<pre class="highlight"><code>
public function setFetchMode($mode)
{
     $args = func_get_args ();  

     $this-&gt;_fetchMode = $mode;

     try {
          return call_user_func_array ( array ( $this-&gt;_stmt, 'setFetchMode' ), $args );
     } catch (PDOException $e) {
          require_once 'Zend/Db/Statement/Exception.php';
          throw new Zend_Db_Statement_Exception($e-&gt;getMessage());
     }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-27T14:53:47.000+0000</p> 
        <div class="body">
            <p>Instead of adding PDO specific features to the Statement general API, we have decided to add a method called getDriverStatement() which will be able to return the internal statement handler.</p>

<p>In the case of PDO, it will return PDOStatement, and you'll be able to call setFetchMode() on that object:</p>

<pre class="highlight"><code>
$stmt-&gt;getDriverStatement()-&gt;setFetchMode(....); // PDO specific method.
</code></pre>

<p>This helps keep the API consistent across all adapters/drivers.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Waclaw Schiller (torinthiel) on 2010-12-23T13:32:05.000+0000</p> 
        <div class="body">
            <p>This won't work.
Zend_Db_Select has method query.
This method accepts parameter $fetchMode, which if not given is initialized to Zend_Db_Adapter_Abstract-&gt;getFetchMode().
Later, setFetchMode is called with this parameter.
Point is, if we use PDO, which REQUIRES 2 or 3 arguments to setFetchMode, this will break no matter what fetch mode is set beforehand.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Waclaw Schiller (torinthiel) on 2010-12-23T13:34:32.000+0000</p> 
        <div class="body">
            <p>Sorry, previous comment was not specific enough. PDO with FETCH_CLASS requires 2 or 3 arguments to setFetchMode.
Still, PDO and $fetchMode==FETCH_CLASS will break, no matter if fetchMode was added with getDriverStatement or not.</p>

        </div>
    </div>
    </div>

