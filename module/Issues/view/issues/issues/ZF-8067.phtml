<h2>ZF-8067: zf create action xxx mangles files that contain another class declaration.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-13T13:08:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-13T14:05:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Geoff Hubbard (geoff.hubbard)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Tool</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>zf create action foo xxxx mangles files that contain a class declaration other than just the xxxxController class.
It inserts the new action function in the wrong place.
And it causes the latter part of the xxxxController.php file to be lost!
This is really bad when your xxxxController.php file contained a lot of useful code.</p>

<hr /><p>Steps to reproduce:</p>

<pre class="literal">
zf create project testing
</pre>

<p>Edit testing/application/controllers/IndexController.php</p>

<pre class="literal">
testing/application/controllers/IndexController.php 
&lt;?php

class Helper
{

}

class IndexController extends Zend_Controller_Action
{

    public function init()
    {
        /* Initialize action controller here */
    }

    public function indexAction()
    {
        // action body
    }


}
</pre>

<pre class="literal">
 zf create action some index
</pre>

<pre class="literal">
testing/application/controllers/IndexController.php 
&lt;?php

class Helper
{

    public function someAction()
    {
        // action body
    }


}


class IndexController extends Zend_Controller_Action

{


</pre>

<p>EOF!</p>

<p>someAction is inserted in the wrong place and IndexController.php file is truncated.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-13T14:05:26.000+0000</p> 
        <div class="body">
            <p>ZF coding standards dictate one class per file. As such, the CodeGenerator and Zend_Tool are written to accomodate that concept. If you are adding additional classes or inline code to a file that you are manipulating with Zend_Tool, you need to follow the ZF coding standards.</p>

<p>If you need additional code available for use by your controllers, there are options already:</p>

<ul><li>Initialize the classes during bootstrapping (perform require_once calls during bootstrapping)</li>
<li>If they are action helpers, leverage the ability of the action helper broker to dynamically load helpers on demand using prefix paths, and initialize the paths during bootstrapping</li>
<li>Utilize autoloading to allow lazyloading the class on-demand. A resource autoloader can be helpful here.</li>
</ul><p>I'm closing this issue as the report is about functionality for which Zend_Tool was never designed, and other mechanisms exist to do the work as described.</p>

        </div>
    </div>
    </div>

