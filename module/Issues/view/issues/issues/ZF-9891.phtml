<h2>ZF-9891: Zend_Date::equals() issues when 2 objects have different TZs</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-05-26T11:03:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-30T03:15:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.6 (22/Jun/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In debugging an issue in Zend_Feed, I came across an odd issue in Zend_Date, summarized in the code below:</p>

<pre class="highlight"><code>
$ts = strtotime('Sat, 07 Mar 2009 08:03:50 +0000');
$date1 = new Zend_Date($ts);
echo "Via strtotime: ", $date1-&gt;get(Zend_Date::RFC_2822), "\n";

$date2 = new Zend_Date();
$date2-&gt;set('Sat, 07 Mar 2009 08:03:50 +0000', Zend_Date::RFC_2822);
echo "Via direct set: ", $date2-&gt;get(Zend_Date::RFC_2822), "\n";

echo "Date 1 equals Date 2? " . ($date2-&gt;equals($date1) ? 'yes' : 'no') . "\n";
</code></pre>

<p>This returns the following:</p>

<pre class="highlight"><code>
Via strtotime: Sat, 07 Mar 2009 03:03:50 -0500
Via direct set: Sat, 07 Mar 2009 08:03:50 +0000
Date 1 equals Date 2? no
</code></pre>

<p>(TZ information will differ based on your current date.timezone settings)</p>

<p>The important thing to note is that the two dates are, in fact, the same -- they simply display different timezones. However, Zend_Date::equals() evaluates them as unequal.</p>

<p>Using DateTime and a similar approach:</p>

<pre class="highlight"><code>
$ts = strtotime('Sat, 07 Mar 2009 08:03:50 +0000');
$date1 = new DateTime('@' . $ts);
echo "DateTime via strtotime: ", $date1-&gt;format('r'), "\n";

$date2 = new DateTime('Sat, 07 Mar 2009 08:03:50 +0000');
echo "DateTime via string: ", $date2-&gt;format('r'), "\n";

echo "Date 1 equals Date 2? " . (($date1 == $date2) ? 'yes' : 'no') . "\n";
</code></pre>

<p>I get the expected result -- these are equal dates. Interestingly, the TZ information is kept separate, and the dates as echoed match; if I set the timezone separately, it will then reflect that in the output, but the dates still will be equal.</p>

<p><em>summary</em>: equals() should be looking at timestamps when evaluating.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-05-30T03:15:13.000+0000</p> 
        <div class="body">
            <p>Fixed with r22321</p>

        </div>
    </div>
    </div>

