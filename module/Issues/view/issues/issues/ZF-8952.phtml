<h2>ZF-8952: Notice: Undefined index: second in Zend_Date</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-27T07:31:52.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-20T01:45:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.7 (11/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Raphael Dehousse (thymus)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12818/ZF-8952.patch">ZF-8952.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,</p>

<p>I do not know if you consider it as a bug but</p>

<p>$date = new Zend_Date();
$date-&gt;setTime('2359', 'HHmm');</p>

<p>will generate notices :</p>

<p>Notice: Undefined index: second in Zend/Date.php on line 2795
Notice: Undefined index: second in Zend/Date.php on line 2315</p>

<p>but not</p>

<p>$date = new Zend_Date();
$date-&gt;setTime('2359', 'HHmmss');</p>

<p>neither</p>

<p>$date = new Zend_Date();
$date-&gt;setTime('235900', 'HHmmss');</p>

<p>So, it's only when we do not care about seconds in setTime.</p>

<p>My 2 cents!</p>

<p>Regards,</p>

<p>Raphaël Dehousse</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-27T10:07:30.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue.</p>

<p>Time is always represented by Hour, Minute and Second.</p>

<p>Format can be used to change the order of input, but not to give other parameters or to omit them. When you have to set an abritary format use set() instead of setTime().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-07T05:37:39.000+0000</p> 
        <div class="body">
            <p>Thomas,</p>

<p>With all the respect I owe you, I do not understand why a notice is not considered as a possible bug.
I understand that setTime is maybe not exactly what I need, and that set could solve the problem, but, here, a simple "isset" could resolve the problem or by throwing an error telling that seconds are needed, I do not know, but here, it's not really error-safe for the developer that would omit the seconds.</p>

<p>Regards,</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-15T07:47:22.000+0000</p> 
        <div class="body">
            <p>In Zend_Date, line 2315: add</p>

<p>if (!isset($parsed['second'])) {
    $parsed['second'] = 0;
}</p>

<p>like there is for case "self::TIME_SHORT:" some lines below.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-15T07:48:37.000+0000</p> 
        <div class="body">
            <p>Same line 2799 :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-02-15T07:51:49.000+0000</p> 
        <div class="body">
            <p>Dear Thomas,</p>

<p>I really like the Zend Framework and I think that I have shown good will by providing patches to the issues I reported.</p>

<p>Would it be possible to see any action from you? A response?</p>

<p>Thank you very much for your cooperation.</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-18T22:20:42.000+0000</p> 
        <div class="body">
            <p>There is no additional benefit of adding the same non-informational, frustrating comment into several issues which are even not related to each other.</p>

<p>As already stated I am replying when I have reproduced or not reproduced an issue.</p>

<p>Please remember that most people, including me, have a real live job and working on the framework in their sparetime. This means that response to a issue will not be written within 3 minutes.</p>

<p>I would ask you to keep on the issue itself and not to bother me with the same text multiple times when there is no response within 3 minutes.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-01T02:39:35.000+0000</p> 
        <div class="body">
            <p>Hello Thomas,</p>

<p>Sorry for my many comments.</p>

<p>I will keep on the issue now.</p>

<p>What do you think about the "patch" I proposed?
Since the check is already there in some places, could you put it also where I said?</p>

<p>Thank you for your patience and cooperation.</p>

<p>Best regards,</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-01T13:38:07.000+0000</p> 
        <div class="body">
            <p>There is no attached patch to this issue</p>

<p>There is no "check" integrated... Zend_Date works localized and for some locales changes have been made</p>

<p>TIME_MEDIUM is not allowed to be without second... to allow medium dates without a given second is itself a failure... therefor the notice is correct in the provided example.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-02T00:45:37.000+0000</p> 
        <div class="body">
            <p>Here is the patch :)</p>

<p>If I do not use the APi correctly, could you help me by providing the correct method I should use?</p>

<p>The input I receive is 2359, not 23:59, neither 23:59:00, neither 235900, just 2359.</p>

<p>How could I set the time simply by using Zend_Date?
With setTime, it works perfectly, the problem is just the notice :)</p>

<p>Thank you for your patience :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-02T14:08:52.000+0000</p> 
        <div class="body">
            <p>As stated in my first reply:</p>

<p>When you don't give a complete time, you need to use set().
setTime() requires a complete time to be given. The format parameter is only available to allow switching the tokens.</p>

<p>As stated in my third reply:</p>

<p>TIME_MEDIUM is not allowed to be without seconds. MEDIUM is always with hour, minute and second. Without second it could be TIME_SHORT depending on the locale.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-03T00:04:42.000+0000</p> 
        <div class="body">
            <p>Does not work</p>

<p>And you won't apply the patch.</p>

<p>Ok, thank you anyway</p>

<p>Continue your great work!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-03T12:13:16.000+0000</p> 
        <div class="body">
            <p>No way... there are even unittests...</p>

<pre class="highlight"><code>
$date-&gt;set('23:59', 'HH:mm');
</code></pre>

<p>surely works</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-10T05:01:00.000+0000</p> 
        <div class="body">
            <p>Ok, Thanks</p>

<p>But anyway, an "isset" was not so hard :D</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-10T05:12:13.000+0000</p> 
        <div class="body">
            <p>euh</p>

<pre class="highlight"><code>
$dateSetTime = new Zend_Date();
$dateSetTime-&gt;setTime(str_pad('2359', 6, '0'), 'HHmmss');

$this-&gt;assertEquals(23, $dateSetTime-&gt;get(Zend_Date::HOUR));
$this-&gt;assertEquals(59, $dateSetTime-&gt;get(Zend_Date::MINUTE));

$dateSet = new Zend_Date();
$dateSet-&gt;set('235900', 'HHmmss');

$this-&gt;assertEquals(23, $dateSet-&gt;get(Zend_Date::HOUR));
$this-&gt;assertEquals(59, $dateSet-&gt;get(Zend_Date::MINUTE));

$this-&gt;assertEquals($dateSetTime-&gt;get(), $dateSet-&gt;get());
</code></pre>

<p>fail :/</p>

<p>So, I cannot use your solution.
I need to use -&gt;setTime(str_pad('2359', 6, '0'), 'HHmmss');
But I do not know why. I'm figuring out.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-10T05:13:49.000+0000</p> 
        <div class="body">
            <p>The result:</p>

<p>Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-1268261940
+82740</p>

<p>(Tested on Windows using php 5.2.5)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-10T05:24:58.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
$dateSetTime = new Zend_Date();
$dateSetTime-&gt;setTime(str_pad('2359', 6, '0'), 'HHmmss');
$dateSetTime-&gt;setDate('2010-01-01', 'yyyy-MM-dd');

$this-&gt;assertEquals(23, $dateSetTime-&gt;get(Zend_Date::HOUR));
$this-&gt;assertEquals(59, $dateSetTime-&gt;get(Zend_Date::MINUTE));

$dateSet = new Zend_Date();
$dateSet-&gt;set('235900', 'HHmmss');
$dateSet-&gt;setDate('2010-01-01', 'yyyy-MM-dd');

$this-&gt;assertEquals(23, $dateSet-&gt;get(Zend_Date::HOUR));
$this-&gt;assertEquals(59, $dateSet-&gt;get(Zend_Date::MINUTE));

$this-&gt;assertEquals($dateSetTime-&gt;get(), $dateSet-&gt;get());
</code></pre>

<p>works.</p>

<p>Ok, I'll do like that. But you see that it's not the same behavior. The "set" method will reset the date line 2628:</p>

<pre class="highlight"><code>
if (($calc == 'set') || ($calc == 'cmp')) {
    if (isset($parsed['month'])) {
        --$parsed['month'];
    } else {
        $parsed['month'] = 0;
    }

    if (isset($parsed['day'])) {
        --$parsed['day'];
    } else {
        $parsed['day'] = 0;
    }

    if (isset($parsed['year'])) {
        $parsed['year'] -= 1970;
    } else {
        $parsed['year'] = 0;
    }
}
</code></pre>

<p>Cheers,</p>

<p>Raphaël Dehousse</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-12T03:38:21.000+0000</p> 
        <div class="body">
            <p>to 1.)
Isset would not work...
Additionally within trunk and branch no notice is thrown.</p>

<p>to 2.)
Your issue was regarding a notice which is thrown.
It was not regarding non-tokenized dates to be recognised.</p>

<p>It is known that non-tokenized string can not be recognised and there are already issues regarding this problem.</p>

<p>The main reason is that you could have</p>

<p>HHmmss = 1234</p>

<p>Which could mean
1h2m34sec
OR
1h23m4sec
OR
12h3m4sec</p>

<p>And there is actually no way to detect the correct values.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-12T04:04:33.000+0000</p> 
        <div class="body">
            <p>For me, HHmmss = 1234 =&gt; 12h34m00sec</p>

<p>For the moment, isn't it possible to do, if we want</p>

<ul><li>1h2m34sec =&gt; Hmss</li>
<li>1h23m4sec =&gt; Hmms</li>
<li>12h3m4sec =&gt; HHms</li>
</ul><p>I'm not sure this is possible. Following the documentation (<a href="http://framework.zend.com/manual/en/zend.date.constants.html">http://framework.zend.com/manual/en/…</a>), I would say yes, but you know it better than me.
And in the case the user provide only 1234 for HHmmss, then, the result should be 12h34m00sec</p>

<p>But anyway, you are right, the first subject was the notice. If you say that no notice occurs on your side, then, maybe it's because php is not configured to show them? Or my php show notices that should not occur :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-12T04:29:23.000+0000</p> 
        <div class="body">
            <p>The reason is that I am testing against 1.10.x as 1.9 is no longer developed.</p>

<p>And my opinion would be a not recognised date.</p>

<p>When you say "HHmmss" and only "HHmm" is given then the date should not be accepted.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-03-12T04:33:07.000+0000</p> 
        <div class="body">
            <p>I'm using the version 1.10.2 :)</p>

<p>I agree that it should not be accepted :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shaddy Zeineddine (shaddyz) on 2010-11-15T19:00:59.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code> 
$date-&gt;setTime($event['event_time'], 'h:mma');
</code></pre>

<p>given that $event['event_time'] = '7:00pm';</p>

<p>this generates the error:</p>

<p>Undefined index: second on line 2728 of /var/web/unityla-dev/libraries/Zend/Date.php</p>

<p>Zend_Date version string "$Id: Date.php 17696 2009-08-20 20:12:33Z thomas $"</p>

<p>This is not expected behavior.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-11-20T01:45:52.000+0000</p> 
        <div class="body">
            <p>Unable to verify the error.
Line 2728 is the method header.</p>

<p>I expect that this error was already solved in past because line 2811 checks if the array key exists.
Please use the actual release.</p>

        </div>
    </div>
    </div>

