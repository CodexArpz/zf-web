<h2>ZF-3846: Many-to-many relationship on same table returns wrong results</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-04T02:48:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-20T21:01:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Cthulhu (cthulhu)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When defining a many-to-many relationship on the same table, in my case a user having many friends (where a friend is another user), using the mechanics described in the documentation (#10.8.5 on Zend_Db) results in wrong results, where the resulting rows are equal to the amount of friends the user has, but the results are a copy of the user itself - times three. The situation is as follows.</p>

<p>I have a Table User, defined as follows:</p>

<p>class Application_Models_Table_UserTable extends Zend_Db_Table
{</p>

<pre><code>protected $_name = 'users';
protected $_primary = 'user_id';
protected $_rowClass = 'User';
</code></pre>

<p>}</p>

<p>(don't mind the naming btw)</p>

<p>That table has a many-to-many relationship with itself, defined in the following Table (the actual table has two columns, user_id and friend_id):</p>

<p>&lt;?php
class Application_Models_Table_UserFriends extends Zend_Db_Table
{
    protected $_name = 'users_friends';
    protected $_primary = array('user_id', 'friend_id');</p>

<pre><code>protected $_referenceMap = array(
    'User' =&gt; array(
             'columns' =&gt; array('user_id'),
             'refTableClass' =&gt; 'Application_Models_Table_UserTable',
             'refColumns' =&gt; array('user_id') 
            ),
    'Friend' =&gt; array(
                'columns' =&gt; array('friend_id'),
                'refTableClass' =&gt; 'Application_Models_Table_UserTable',
                'refColumns' =&gt; array('user_id')
            )
); 
</code></pre>

<p>}</p>

<p>Next, the call to get the Friends of one users is as follows:</p>

<p>$user = $userTable-&gt;find(1);
$friends =  $user-&gt;findManyToManyRowset($user-&gt;getTable(), 'Application_Models_Table_UserFriends');</p>

<p>which defaults to the usage of the 'User' rule, if I'm correct. The result however is a Rowset of users where all users are the same user ($user, in this case).</p>

<p>Echo-ing the SQL results in the following query being executed:</p>

<p>SELECT <code>i</code>.*, <code>m</code>.*
FROM <code>users_friends</code> AS <code>i</code> 
INNER JOIN <code>users</code> AS <code>m</code> 
ON <code>i</code>.<code>user_id</code> = <code>m</code>.<code>user_id</code> 
WHERE (<code>i</code>.<code>user_id</code> = 1)</p>

<p>Manually altering and executing the query to:</p>

<p>SELECT <code>i</code>.*, <code>m</code>.*
FROM <code>users_friends</code> AS <code>i</code> 
INNER JOIN <code>users</code> AS <code>m</code> 
ON <code>i</code>.<code>friend_id</code> = <code>m</code>.<code>user_id</code> // i.user_id changed to i.friend_id here
WHERE (<code>i</code>.<code>user_id</code> = 1)</p>

<p>results in the right results. I have been unable to change the resulting ON-clause in the query by changing values in the UserFriends $_referenceMap variable, each change results in errors or wrong results. I'm using version 1.5.2, dunno if this problem is in 1.6.0 or any, but I wasn't able to find it anywhere else in the bugtracker.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-20T21:01:32.000+0000</p> 
        <div class="body">
            <p>I've attempted to follow your description and reproduce, but cannot. If you can provide a simpler and shorter use case, and this is still an issue, please re-open.</p>

<p>Thanks, Ralph</p>

        </div>
    </div>
    </div>

