<h2>ZF-3690: Cannot use both AjaxContext and ContextSwitch on same action</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-07-20T01:28:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-13T19:58:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Geoffrey Tran (potatobob)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>We cannot use both the AjaxContext and ContextSwitch on the same action because one will cancel out the other as both would not have the same contexts. AjaxContext has the html context defined while the contextswitch doesn't resulting in an exception from contextswitch.</p>

<p>AjaxContext should trigger without contextswitch also triggering.
Current workarounds are to add the context to both or change the format param for one....</p>

<p>$this-&gt;getHelper('ContextSwitch')-&gt;addContext('html', array());</p>

<p>Solutions:
At lines 225, this code never returns because hasActionContext() calls hasContext($context, true) instead of hasContext($context, false)</p>

<pre class="highlight"><code>
        // Check if context allowed by action controller
        if (!$this-&gt;hasActionContext($action, $context)) {
            return;
        }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-02-26T07:15:08.000+0000</p> 
        <div class="body">
            <p>I had the same issue. Currently I try to not use both on an action: request it with ajax or request it as xml (atom feed).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Court Ewing (courtewing) on 2009-10-12T07:50:11.000+0000</p> 
        <div class="body">
            <p>I am encountering this same issue.  My particular case can hopefully shine some light onto when this would be a problem:</p>

<p>In a fairly standard MVC setup, I have an action on a controller that generates a sitemap.  It sets a variable with the Zend_Navigation object on the view.  The sitemap can be viewed as html by administrators in a lightbox (an ajax request).  The same sitemap can also be accessed as an xml document by search engine spiders.</p>

<p>There are obviously workarounds for my case, but a permanent solution via the framework itself is ideal.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Przemys?aw Wróbel (wrobel) on 2011-06-07T10:39:32.000+0000</p> 
        <div class="body">
            <p>The same problem! I have subclassed from ContextSwitch twice but cannot use this two classes in one controller.</p>

<p>The Framework Guide says: "First, it uses a different action controller property for determining contexts, $ajaxable. This is so you can have different contexts used for AJAX versus normal HTTP requests" - but it is not possible since one context class does not know about context defined it the other one.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2011-08-13T19:58:53.000+0000</p> 
        <div class="body">
            <p>Matthew, any intention to fix this one?</p>

        </div>
    </div>
    </div>

