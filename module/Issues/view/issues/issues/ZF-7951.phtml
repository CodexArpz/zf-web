<h2>ZF-7951: Add allow bootstrap dependent resources</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-09-24T08:00:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-07-28T21:21:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Kasian Andrii (kandy)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Add allow bootstrap dependent resources
in config 
resources.{resourcename}.dependencies[] = Db
resources.{resourcename}.dependencies[] = FrontController
or</p>

<pre class="highlight"><code>
class System_Application_Resource_Modules extends Zend_Application_Resource_ResourceAbstract
{

    protected $_dependencies = array('FrontController');
</code></pre>

<pre class="highlight"><code>
/**
 * Class for bootstrap dependent resources
 *
 * @author Andrii Kasian 
 * @package system.application.resource
 */
abstract class System_Application_Resource_ResourceAbstract extends Zend_Application_Resource_ResourceAbstract
{
     * List of dependent resources
    protected $_dependencies = array();

     * Set list of dependent resources
    public function setDependencies($dependencies)
    {
        $this-&gt;_dependencies =$this-&gt;mergeOptions($this-&gt;_dependencies, (array) $dependencies);
    }

    /**
     * Get list of dependent resources
     * @return array
     */
    public function getDependencies()
    {
        return $this-&gt;_dependencies;
    }


    /**
     * Add dependent resource
     * @param string $dependency
     */
    public function addDependency($dependency)
    {
        $this-&gt;_dependencies[] = $dependency;
    }

    /**
     * Clear dependent resource
     * @param string $dependency
     */
    public function clearDependencis($dependency)
    {
        $this-&gt;_dependencies = array();
    }

     * Bootstrap dependent resources
    public function bootstrapDependencies()
    {
        foreach ($this-&gt;getDependencies() as $dependency){
            $this-&gt;getBootstrap()-&gt;bootstrap($dependency);
        }
    }

    public function init()
    {
        $this-&gt;bootstrapDependencies();
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-09-24T17:07:15.000+0000</p> 
        <div class="body">
            <p>Could you maybe explain the idea of this? What does it try to accomplish that cannot be done with zend_app already?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kasian Andrii (kandy) on 2009-09-25T12:32:15.000+0000</p> 
        <div class="body">
            <p>{quote}Zend_Application provides a bootstrapping facility for applications which provides reusable resources, common- and module-based bootstrap classes and dependency checking.{quote}
If resource a depend b, and b depend c then I must first write first c, then b and a. 
It's simple if  dependence static ( in code  $this-&gt;getBootstrap()-&gt;bootstrap('Dependet resource')), but if dependencies dynamic it's can lead to errors.</p>

<p>For example: 
I have load acl rules. 
In config  I write:</p>

<pre class="highlight"><code>
resource.acl.adapter = Config
resource.db.adapter = Pdo_Mysql
</code></pre>

<p>Then i have load acl from database
I change adapter, set to db  "resource.acl.adapter = Db" and get error. I need write "resource.db.adapter = Pdo_Mysql" before "resource.acl.adapter"
It is not hard, but program can do better :)<br />
Example:
I write</p>

<pre class="highlight"><code>
resource.acl.adapter = Db
resource.acl.dependencis[] = Db
resource.db.adapter = Pdo_Mysql
</code></pre>

<p>And all is beautiful  :))</p>

<p>PS: SORRY, for my bad English</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2009-09-25T12:38:03.000+0000</p> 
        <div class="body">
            <p>Ressources can already define depencies by themself</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-09-25T12:49:50.000+0000</p> 
        <div class="body">
            <p>There is already a mechanism for this built into ZF. Instead of being configuration driven, however, we require that the dependency is called as part of the resource. For example, if you write an ACL resource that depends on the DB resource, it might look like this:</p>

<pre class="highlight"><code>
class My_Resource_Acl extends Zend_Application_Resource_ResourceAbstract
{
    public function init()
    {
        $this-&gt;getBootstrap()-&gt;bootstrap('db');
        $db = $this-&gt;getBootstrap()-&gt;getResource('db');
        ....
    }
}
</code></pre>

<p>Basically, calling the bootstrap() method with the name of a resource is how you enforce dependencies. Using configuration seems to me to add some unnecessary and unwanted magic to the situation; the dependencies should be defined at the resource level, not configuration.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Albulescu Cosmin (albulescu) on 2012-07-28T21:21:16.000+0000</p> 
        <div class="body">
            <p>@Ben Scholzen - Yes Ben, resources can already define dependinces, but the Zend_Application_Resource_Session should bootstrap the multidb resource when session database save handler requested. You can make this from the settings ini for eg, but when you should have session first defined and then multidb is not working.</p>

<p>Maybe a Zend_Application_Resource_ResourceBootstrapper sould fix this.</p>

<p>Cosmin</p>

        </div>
    </div>
    </div>

