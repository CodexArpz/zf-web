<h2>ZF-11708: Zend_Loader_Autoloader_Resource::autoload does include instead of include_once</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-08-30T11:41:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-20T14:44:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The autoload method returns include of a file. This results in duplicate inclusions when using a PHP 5.3 namespaced interface class. When I change the include to include_once, the problem is solved.</p>

<p>To autoload PHP namespaced model classes I use:</p>

<pre class="highlight"><code>
class Bootstrap extends Zend_Application_Bootstrap_Bootstrap
{
    protected function _initAutoloader()
    {
        $loader = function($className) {
            $zfClassName = str_replace('\\', '_', $className);
            if (!class_exists($className, false) &amp;&amp; !class_exists($zfClassName, false)) {
                Zend_Loader_Autoloader::autoload($zfClassName);
            }
        };

        $autoloader = Zend_Loader_Autoloader::getInstance();
                // Scrum is set as appnamespace = "Scrum" within application.ini
        $autoloader-&gt;pushAutoloader($loader, 'Scrum\\');
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Martin S. (zickedi) on 2012-01-03T17:23:50.000+0000</p> 
        <div class="body">
            <p>Same problem here. Following code is critical:</p>

<pre><code>public function autoload($class)
{
    $classPath = $this-&gt;getClassPath($class);
    if (false !== $classPath) {
        return include $classPath;
    }
    return false;
}
</code></pre>

<p>And still in trunk...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by jeff sank (jsank) on 2012-04-19T20:36:19.000+0000</p> 
        <div class="body">
            <p>i'm getting, what i believe to be the same issue - after moving zend/doctrine to a new server i get a fatal 'cannot redeclare class' error after running 'class_exists' check on the class.</p>

<p>not sure what other details would be relevant</p>

        </div>
    </div>
    </div>

