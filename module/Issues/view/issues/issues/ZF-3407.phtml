<h2>ZF-3407: Not all faults are caught</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-06-07T09:25:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-04T14:29:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Simon Mundy (peptolab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Acl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I was just developing something wil ACL, not much of a big deal. I got this error at a given moment:
Catchable fatal error: Object of class stdClass could not be converted to string in ~/Zend/Acl/Role/Registry.php on line 151</p>

<p>There was no bugtrace, no nothing, just that line. The fact that is says it's catchable, let me to think that it should be catched, or give at least a backtrace, just for developers' sake.</p>

<p>The lines are:</p>

<pre class="highlight"><code>public function has($role)
    {
        if ($role instanceof Zend_Acl_Role_Interface) {
            $roleId = $role-&gt;getRoleId();
        } else {
            $roleId = (string) $role;                    // This is the line where it goes wrong
        }

        return isset($this-&gt;_roles[$roleId]);
    }</code></pre>

<p>Freak
(on IRC better known as Freeaqingme).</p>

<p>p.s. Of course I was the one who gave a wrong argument to this function, but I feel like I should have been given some more info.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Jakubowski (octavian) on 2008-07-01T08:36:10.000+0000</p> 
        <div class="body">
            <p>I think the php error message is sufficient in this case, because you were just misusing the functionality.</p>

<p>What exactly was your intention to pass an arbitrary object to that function?</p>

<p>It should be clear that it only works for classes that extend Zend_Acl_Role_Interface.
Maybe it works by implementing the __toString() method in your custom object so that the string cast works.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2008-07-01T09:49:57.000+0000</p> 
        <div class="body">
            <p>Obviously, I was misusing the functionality indeed, and I do not blame ZF or anyone else but myself for that. My intention was to use this function properly. The problem was that I was given no clear error, and that is something I would have liked to be different. As said; I don't think there's anything wrong with the method, it would just be appreciated if there's an error thrown so it can be backtraced easily.</p>

        </div>
    </div>
    </div>

