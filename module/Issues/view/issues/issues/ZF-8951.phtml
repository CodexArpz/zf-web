<h2>ZF-8951: Zend_Navigation View Helper Menu - allow different active classes for active parents</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-27T07:17:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-01-11T10:28:35.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.2 (25/Feb/13)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Navigation</li>
            <li>After1.12.0</li>
            <li>FixForZF1.12.1</li>
            <li>zf-crteam-priority</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7003">ZF-7003</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14968/Menu.php.patch">Menu.php.patch</a></li>
            <li><a href="/issues/secure/attachment/14969/Navigation.tests.patch">Navigation.tests.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Ideally my output navigation would look something like this:</p>

<pre class="highlight"><code> 
</code></pre><code>     
    <a href="">First Level</a>
    </code><code>
            <a href="">Second Level</a>
        
    
</code>

<p>I would like to display active parents differently from the active leaf nodes.
Since I cannot use CSS markup for li.active:has(li.active) I need a different class for the parent nodes.
This is a common use-case for me.</p>

<p>I suggest an amend to the Zend/View/Helper/Navigation/Menu.php</p>

<pre class="highlight"><code>
258             // create li element for page
259             $liCss = $page-&gt;isActive($recursive)
260                    ? ' class="active"'
261                    : '';
</code></pre>

<p>to</p>

<pre class="highlight"><code>
258             // create li element for page
259             $liCss = $page-&gt;isActive($recursive)
260                    ? ' class="active"'
261                    : '';
new             // show active parent
new             if (!$recursive &amp;&amp; !$page-&gt;isActive(false) &amp;&amp; $page-&gt;isActive(true)) $liCss = ' class="active-parent"';
</code></pre>

<p>This will not change the current behaviour for users using setParentActive.  Those not using it will get extra classes which will not affect display (unless they happen to be using that class name).</p>

<p>I think this is a very common use-case, so warrants inclusion in the library, rather than simply using a partial menu template.</p>

<p>I suspect my code could be expressed more elegantly.  The option could be added as a new configuration parameter.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2010-10-21T01:23:46.000+0000</p> 
        <div class="body">
            <p>??I need a different class for the parent nodes.??
I think that would be a BC break in HTML and CSS.</p>

<p>My suggestion:</p>

<pre class="highlight"><code>
class="active parent"
</code></pre>

<p>In CSS you can write:</p>

<pre class="highlight"><code>
li.active.parent
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-10-10T22:02:53.000+0000</p> 
        <div class="body">
            <p>I have found a simple solution.
I will write some unit tests and the implementation which includes:</p>

<ul><li>Two new properties {{$_parentClass}} and {{$_renderParentClass}}</li>
<li>Getter and setter for these properties ({{setParentClass()}}, {{getParentClass()}}, {{setRenderParentClass()}}, {{getRenderParentClass()}})</li>
<li>Update the methods {{renderMenu()}}, {{_renderMenu()}} and {{_normalizeOptions}}</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-03-21T19:12:15.000+0000</p> 
        <div class="body">
            <p>Patch and unit tests added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-07T21:00:11.000+0000</p> 
        <div class="body">
            <p>Patch fails to apply</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-07T21:00:52.000+0000</p> 
        <div class="body">
            <p>I'm also a little concerned that adding a class will result in unexpected styling. Maybe name the new class something like zf-nav-parent ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-11-08T17:09:11.000+0000</p> 
        <div class="body">
            <p>Or "menu-parent"?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2013-01-11T10:28:09.000+0000</p> 
        <div class="body">
            <p>Fixed on trunk (25214) and release-1.12 (25215)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2013-01-11T10:28:35.000+0000</p> 
        <div class="body">
            <p>Standard parent class is "menu-parent".</p>

        </div>
    </div>
    </div>

