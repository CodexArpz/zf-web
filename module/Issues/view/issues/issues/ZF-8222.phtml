<h2>ZF-8222: isDispatchable does not formatClassName for class_exists - neccessary for when prefixDefaultModule is true</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-11-04T21:59:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-28T11:57:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.5 (26/May/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13017/0001-fixed-ZF-8222-and-added-unit-tests-for-it.patch">0001-fixed-ZF-8222-and-added-unit-tests-for-it.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>{quote}
class Zend_Controller_Dispatcher_Standard
{
    public function isDispatchable(Zend_Controller_Request_Abstract $request)
    {
        $className = $this-&gt;getControllerClass($request);
        if (!$className) {
            return false;
        }</p>

<pre><code>    if (class_exists($className, false)) {
        return true;
    }
</code></pre>

<p>{quote}</p>

<p>When prefixDefaultModule is true, $className needs to be formatted via formatClassName otherwise the module name is not prefixed and so the class will not exist - which for example when forwarding to another action causes Zend_Loader::isReadable to always be executed.</p>

<p>Alternative code
{quote}
class Zend_Controller_Dispatcher_Standard
{
    public function isDispatchable(Zend_Controller_Request_Abstract $request)
    {
        $className = $this-&gt;getControllerClass($request);
        if (!$className) {
            return false;
        }</p>

<pre><code>    $class = $this-&gt;getParam('prefixDefaultModule')
                    ? ucfirst($this-&gt;formatClassName($this-&gt;_curModule, $className))
                        : $className;

    if (class_exists($class, false)) {
        return true;
    }
</code></pre>

<p>{quote}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Evan Coury (evan.pro) on 2010-03-24T13:31:42.000+0000</p> 
        <div class="body">
            <p>I can definitely confirm this issue.</p>

<p>One way to illustrate the problem is to set prefixDefaultModule to true and simply define a controller class for your default module somewhere (prefix it with the module name since we've set prefixDefaultModule) and give it a default action. Make sure you put the controller file somewhere not typical (so it cannot be autoloaded), and just require_once() it in yourself. Then try requesting that controller, and you'll get a invalid controller exception.</p>

<p>Also, Devosc's fix works great to mitigate this issue, without any adverse effects either.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Evan Coury (evan.pro) on 2010-04-19T18:10:29.000+0000</p> 
        <div class="body">
            <p>See the attached patch which includes a fix, as well as a unit test with assertions to prove the issue. Patch is in GIT format, so you may have to use git-apply. Also, it is relative from /framework/standard/trunk.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Evan Coury (evan.pro) on 2010-04-19T18:35:13.000+0000</p> 
        <div class="body">
            <p>Also, note that my patch is not the same fix as devosc has proposed. Upon looking closer, his fix does not completely solve the underlying issue, as his will only solve the issue for the default module, but any other modules will still experience the issue. The unit test I wrote above illustrates this, as simply running formatClassName() if the <em>prefixDefaultModule</em> parameter is true will not pass the test. You have to also say "or if the requested module is not the default module", since all controllers for non-default modules must have a prefix.</p>

<p>Perhaps a more accurate title for this issue might be: "isDispatchable does not formatClassName for class_exists - necessary for when prefixDefaultModule is true <em>OR</em> the request is for a non-default module"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-04-28T11:57:49.000+0000</p> 
        <div class="body">
            <p>Patch reviewed and applied to trunk and 1.10 release branch -- thanks!</p>

        </div>
    </div>
    </div>

