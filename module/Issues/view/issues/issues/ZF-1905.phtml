<h2>ZF-1905: where condition</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-09-03T19:13:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-16T16:46:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.7 (16/Mar/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1726">ZF-1726</a></li>
            <li><a href="/issues/browse/ZF-1881">ZF-1881</a></li>
            <li><a href="/issues/browse/ZF-651">ZF-651</a></li>
            <li><a href="/issues/browse/ZF-1726">ZF-1726</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11651/Adapter.diff">Adapter.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>i tried to execute this :
$table-&gt;update($data, array('id = ?' =&gt; 5));
and the query resulted was :
update <code>table</code> set ........ where (5)</p>

<p>i think the _updateExpr() function should be changed to :</p>

<pre class="highlight"><code>
    protected function _whereExpr($where)
    {
        if (empty($where)) {
            return $where;
        }
        if (!is_array($where)) {
            $where = array($where);
        }
        foreach ($where as $key=&gt;&amp;$term) {
            if ($term instanceof Zend_Db_Expr) {
                $term = $term-&gt;__toString();
            } else {
                if (!is_numeric($key))
                {
                    $term = $this-&gt;quoteInto($key,$term);
                }
            }
            $term = '(' . $term . ')';
        }
        $where = implode(' AND ', $where);
        return $where;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-08T12:01:05.000+0000</p> 
        <div class="body">
            <p>Assigned to Bill</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:30.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:57.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:52.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Kabacinski (kabot) on 2008-11-21T03:36:50.000+0000</p> 
        <div class="body">
            <p>I prepared patch file with functionality mentioned above and i added one more feature.
In most cases where conditions are simple comparision with '=' sign. With attached patch you can prepare where parameter as below:</p>

<pre class="highlight"><code>
$db = Zend_Db::factory(...);

//current functionality
$db-&gt;delete('tbl1', "name = 'a'");
$db-&gt;delete('tbl1', array("name = 'a'", new Zend_Db_Expr('id = 8')));

//NEW, key is expression and value bind parameter
//DELETE FROM tbl1 WHERE (name = 'a') AND (id &gt; '8')
$db-&gt;delete('tbl1', array("name = ?" =&gt; "a", "id &gt; ?" =&gt; 8));

//NEW, key is column name and value bind parameter
//DELETE FROM tbl1 WHERE (name = 'a') AND (id = '9')
$db-&gt;delete('tbl1', array("name" =&gt; "a", "id" =&gt; 9));
</code></pre>

<p>It works with update and insert method as well.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Kabacinski (kabot) on 2008-11-21T03:42:22.000+0000</p> 
        <div class="body">
            <p>Of course i meant delete and update method (no insert).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-04T12:53:16.000+0000</p> 
        <div class="body">
            <p>Reassigning as Ralph is the maintainer of Zend_Db</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-09T14:59:57.000+0000</p> 
        <div class="body">
            <p>Will evaluate within 2 weeks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-03-16T15:23:51.000+0000</p> 
        <div class="body">
            <p>I don't see a use case here where you can't build the where clause string using quote() or quoteInto(). It doesn't seem to be worth the additional complexity. Please reopen if I'm missing something- especially a use case that cannot be handled with this method.</p>

<p>,Wil</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-03-16T15:34:08.000+0000</p> 
        <div class="body">
            <p>Actually, there are several issues for this and a case for matching the behavior of fetch() and fetchAll(). This will be fixed, but for bookkeeping purposes this issue will be closed as a duplicate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Kabacinski (kabot) on 2009-03-16T16:45:44.000+0000</p> 
        <div class="body">
            <p>IMHO in this situation it's worth additional complexity beacouse of consistency. In insert method and half of update is used parametrized query but here we need to use quoteInto.
Would be nice if i could could use what i have from db engine and not using something like addslashes() - more accurate but still.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Kabacinski (kabot) on 2009-03-16T16:46:04.000+0000</p> 
        <div class="body">
            <p>IMHO in this situation it's worth additional complexity beacouse of consistency. In insert method and half of update is used parametrized query but here we need to use quoteInto.
Would be nice if i could could use what i have from db engine and not using something like addslashes() - more accurate but still.</p>

        </div>
    </div>
    </div>

