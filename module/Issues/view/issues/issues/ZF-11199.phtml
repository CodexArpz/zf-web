<h2>ZF-11199: Zend_View_Helper_Partial extract $view-&gt;addBasePath() from partial() to separate method (patch included)  </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-03-19T23:25:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-03-19T23:25:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13810/helper_partial.patch">helper_partial.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I think Helper_Partial::partial() needs "extract method" refactoring:</p>

<pre class="highlight"><code>
$viewsDir = dirname($moduleDir) . '/views';
$view-&gt;addBasePath($viewsDir); 
</code></pre>

<p>should be extracted to separate method. This will allow easily change view base path lookup rules in subclasses. Implement viewRenderer base path specification dependency for example.</p>

<pre class="highlight"><code>
if ((null !== $module) &amp;&amp; is_string($module)) {
    require_once 'Zend/Controller/Front.php';
    $moduleDir = Zend_Controller_Front::getInstance()-&gt;getControllerDirectory($module);
    if (null === $moduleDir) {
        require_once 'Zend/View/Helper/Partial/Exception.php';
        $e = new Zend_View_Helper_Partial_Exception('Cannot render partial; module does not exist');
        $e-&gt;setView($this-&gt;view);
        throw $e;
    }
    $this-&gt;_viewAddBasePath($view, $module, $moduleDir);
</code></pre>

<pre class="highlight"><code>
protected function _viewAddBasePath(Zend_View_Interface $view, $module, $moduleDir)
{
    $view-&gt;addBasePath($moduleDir . '/views');
    return $this;
}
</code></pre>

<p>This change will not affect any existing code so this change is BC safe</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

