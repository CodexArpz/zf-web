<h2>ZF-9918: Validating a German Date returns true even if the date is wrong</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-05-31T03:48:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christian Ebert (griesi007)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am trying to validate a German Date. isDate returns always true even if the date format is wrong. I am using the following line of Code:</p>

<p>Zend_Date::isDate('12.12-2010dsa', 'dd.mm.yyyy', 'de_DE')</p>

<p>Zend_Date converts the submitted date to the following date(var_dump($parsed) in Zend/Date.php)</p>

<p>array
  'date_format' =&gt; string 'dd.mm.yyyy' (length=10)
  'locale' =&gt; string 'de_DE' (length=5)
  'day' =&gt; string '12' (length=2)
  'minute' =&gt; string '12' (length=2)
  'year' =&gt; int 1971
  'hour' =&gt; int 12
  'second' =&gt; int 0
  'month' =&gt; int 1</p>

<p>Obviously the wrong date parts of the submitted dates are replaced by default values and then the date of course is wrongly  validated true</p>

<p>Validating the date without setting locale and format works correct for US Dates</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Chernov (alekc) on 2010-06-09T07:06:54.000+0000</p> 
        <div class="body">
            <p>I've tried your code
{panel} 
$date = new Zend_Date('12.12-2010dsa', 'dd.mm.yyyy', 'de_DE');
        $stringdate = $date-&gt;toString();
        die($stringdate); //output = 12.01.2010 00:12:00
{panel}
and on 
{panel}
Zend_Date::isDate('12.12-2010dsa', 'dd.mm.yyyy', 'de_DE');
{panel}
on line 4761 of Zend/Date $parsed value is 
{panel}
Array
(
    [date_format] =&gt; dd.mm.yyyy
    [locale] =&gt; de_DE
    [day] =&gt; 12
    [minute] =&gt; 12
    [year] =&gt; 2010
)
{panel}
Seems to be working for me</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Ebert (griesi007) on 2010-06-09T12:47:28.000+0000</p> 
        <div class="body">
            <p>Hi Alexander,</p>

<p>I can not follow your argumentation. Does in your case 
      Zend_Date::isDate('12.12-2010dsa', 'dd.mm.yyyy', 'de_DE'); 
return true? In my opinion it should never return true. I specified a date format of type dd.mm.yyyy. Therefore if the user enters something like '12.12-2010dsa' which is not compliant with the specified date format dd.mm.yyyy isDate must return false. In your comment, isDate transforms the given string '12.12-2010dsa' to day 12, year 2010 and minute 12 and returns true. In my eyes this is hardly accepatable. I want to strictly validate the submitted string to the required date format. If the user submits something else I want not to validate it true. The reason therefore is that I want to let the user check what he has submitted so he is able to correct errors. Otherwise something will be stored accidently what the user did not want to. In your example the user submitted 12.12-2010asd accidently. He wanted to submit 12.12.2010. In your example Zend will validate the given string to true and save the wrong date 12.01.2010. What makes it worth is that a timestamp of  00:12:00 is appendend which will produce a database error because database expects dd.mm.yyyy</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-06-09T13:04:27.000+0000</p> 
        <div class="body">
            <p>But you know that "dd.mm.yyyy" means
DAY - MINUTE - YEAR</p>

<p>I know no single database on the market which accepts or uses the minute as month value of a date.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Ebert (griesi007) on 2010-06-09T13:39:49.000+0000</p> 
        <div class="body">
            <p>Hi Thomas,</p>

<p>of course you are right. I noticed this error also but it does not make a difference. The following expression returns also true.</p>

<p>var_dump(Zend_Date::isDate('12.12-2010dsa', 'dd.MM.yyyy', 'de_DE'));</p>

<p>My problem is:
1) User submits a string 12.12-2010dsa
2) I want to make sure that this string is exactly in the format dd.MM.yyyy. So I expect that isDate should return false if the expected format has been specified and the given string does not match. I can understand if is_Date tries to fix a wrong date but this should only be the case if the developer explicitly said "try to fix" or if he did not specify the expected format.</p>

<p>Maybe I am wrongly understanding the purpose of isDate. It would be great to learn what the idea behind is</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Chernov (alekc) on 2010-06-10T00:52:51.000+0000</p> 
        <div class="body">
            <p>Ah ok, I've not understood that you was looking for "strict" validation. I suppose (since I began to use ZF not a long time ago) that main purpose of isDate is to check if passed value can be converted in time value without errors. If you look in "private static function _parseDate" from Zend/Locale/Format.php you will see that it doesn't matter what character you are putting as separator since function will check iconv_strpos value of the anchor (dd, mm, yyyy, etc).</p>

<p>I would suggest to use regex check in this case if you want to be sure to have time in "correct" form.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Ebert (griesi007) on 2010-06-10T01:25:36.000+0000</p> 
        <div class="body">
            <p>Hi Alexander,</p>

<p>yes obviously isDate checks if the passed value can be converted to a valid datetime value without errors.</p>

<p>Obviously you have Zend_Validate oder a RegExp to be sure that the expected pattern matches with the submitted string and the afterwards check with istDate of the submitted date is a date.</p>

<p>@Thomas: Maybe It would be very helpful if the documentation explicitly points out that developers have to use Zend_Validate if they want to strictly validate an expected date pattern.</p>

<p>Best Regards 
Christian</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Ebert (griesi007) on 2010-06-10T01:25:59.000+0000</p> 
        <div class="body">
            <p>@Thomas: For the time beeing I think you can close this issue</p>

        </div>
    </div>
    </div>

