<h2>ZF-1479: ::toNumber() returns wrong value</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-01T18:59:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC3 (23/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>
print Zend_Locale_Format::toNumber(3.57, array('precision' =&gt; 2, 'locale' =&gt; $locale));
</code></pre>

<p>The output should be something like 3.57... but it returns 3.43 for me :)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by John Coggeshall (coogle) on 2007-06-01T19:22:07.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
Index: PhpMath.php
===================================================================
--- PhpMath.php (revision 5073)
+++ PhpMath.php (working copy)
@@ -73,7 +73,7 @@
     if ((string)($result + $op2) != (string)$op1) {
         throw new Zend_Locale_Math_Exception("subtraction overflow: $op1 - $op2 != $result", $op1, $op2, $result);
     }
-    if ($op3 !== null) {
+    if (($op3 !== null) &amp;&amp; ($op3 !== 0)) {
         $result = round($result, $op3);
     }
     if ($op3 &gt; 0) {
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-01T19:34:38.000+0000</p> 
        <div class="body">
            <p>Assigning to Thomas.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-06-04T14:21:32.000+0000</p> 
        <div class="body">
            <p>Please give details on</p>

<p>*) SVN Version
*) OS System
*) BCMath useage
*) The used locale option
*) The used number format option</p>

<p>for reproduction</p>

<p>Thnx</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-06-09T05:03:12.000+0000</p> 
        <div class="body">
            <p>*) PHP Version</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tibor Antal√≥czy (tibor) on 2007-06-09T07:55:39.000+0000</p> 
        <div class="body">
            <ul><li>svn version: 1.0.0 RC2 (downloaded from <a href="http://framework.zend.com/download">http://framework.zend.com/download</a>)</li>
<li>system: Linux Debian 2.6.16.45</li>
<li>php version: PHP Version 5.1.4-Debian-0.1~sarge1 (Debian GNU/Linux)</li>
<li>apache version: Apache/2.0.54 (Debian GNU/Linux)</li>
<li>apache loaded modules: core mod_access mod_auth mod_log_config mod_logio mod_env mod_setenvif prefork http_core mod_mime mod_status mod_autoindex mod_negotiation mod_dir mod_alias mod_so mod_actions mod_cgi mod_php5 mod_rewrite mod_ssl mod_userdir</li>
<li>php features enabled: calendar, curl, date, dom, eAceelerator (I tried eAccelerator enabled and disabled, but the result was the same), exif, gd, gettext, hash, iconv, imap, libxml, mbstring, mysql, pcre, pdo, pdo_mysql, pdo_pgsql, pgsql, Reflection, session, shmop, SimpleXML, SPL, SQLite, standard, tidy, xml, xmlreader, xmlrpc, xmlwriter, zlib</li>
<li>BCMath: I don't seem to have that installed (tried to use the bcadd and bcmul functions, but they resulted in PHP fatal errors) <em>I guess this is the cruicial difference between your and my system</em></li>
<li>I was testing with 'en', 'de' and 'hu' locales, they all produced the same output</li>
<li>I didn't use any extra options for toNumber(), just the number and the locale</li>
</ul><p>Here is the code I run as an example:</p>

<pre class="highlight"><code>
   for($i=1.7; $i&lt;3.8; $i=$i+0.1) {
       $number = Zend_Locale_Format::toNumber($i, array('locale' =&gt; $this-&gt;view-&gt;locale));
       echo $i.': '.$number.'<br />';
   }
</code></pre>

<p>if locale set to 'hu', the output is as follows:
   1.7: 1,3
   1.8: 2,2
   1.9: 2,1
   2: 2
   2.1: 2,1
   2.2: 2,2
   2.3: 2,3
   2.4: 2,4
   2.5: 2,5
   2.6: 2,4
   2.7: 2,3
   2.8: 3,2
   2.9: 3,1
   3: 3
   3.1: 3,1
   3.2: 3,2
   3.3: 3,3
   3.4: 3,4
   3.5: 3,5
   3.6: 3,4
   3.7: 3,3</p>

<p>In this example, 1.7, 1.8, 1.9, 2.6, 2.7, 2.8, 2.9, 3.5, 3.6 and 3.7 was incorrectly printed.</p>

<p><em>My suggestion (skip this if you don't care or find it totally wrong, I am just trying to help here):</em>
If the developers use BCMath, than probably it would worth trying this function BCMath disabled. 
I tried to trace the error, and I found that the Zend_Locale_Math_Sub() function is not handling the requests as the Zend_Local_Format_toNumber() function would expect (Zend/Locale/Format.php line 392).
While John Coggeshall in his first comment has spotted the error correctly, his quick fix didn't really cure the problem (at least not in my case).
The toNumber() function is calling Zend_Locale_Math::$sub with three parameters: the two numbers that should be substracted and the precision it should be rounded to. The called function is doing its job nicely, but as far as I can see, the toNumber() function is expecting the number before the decimal sign (floor()).
To correct this I have made two changes:
Zend/Locale/Format.php line 392</p>

<pre class="highlight"><code>
-         $preg = call_user_func(Zend_Locale_Math::$sub, $value, '0', 0);
+        $preg = call_user_func(Zend_Locale_Math::$sub, $value, '0');
</code></pre>

<p>Zend/Locale/Math/PhpMath.php from line 76</p>

<pre class="highlight"><code>
    if ($op3 !== null) {
        $result = round($result, $op3);
+    } else {
+        $result = floor($result);
    }
</code></pre>

<p>Since I don't have BCMath, I couldn't try how that reacts to this change, but according to the php manual, the bcsub should return the correct result if only the two numbers are given.</p>

<p>I hope this helps a bit.</p>

<p>Tibor</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-06-10T11:26:41.000+0000</p> 
        <div class="body">
            <p>Yes... seems to work with and without...</p>

<p>Fixed with SVN 5208</p>

        </div>
    </div>
    </div>

