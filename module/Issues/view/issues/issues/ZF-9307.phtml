<h2>ZF-9307: Zend_Rest_Client fails to clean-up arg1 </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-02T14:45:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-21T09:14:35.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Anthony Burian (aburian)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Davey Shafik (davey)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13259/ZF-9307.patch">ZF-9307.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using named arguments Zend_Rest_Client adds an additional argument named arg1 to the call.</p>

<pre class="highlight"><code>
$client = new Zend_Rest_Client('<a href="http://api.flickr.com/services/rest/">http://api.flickr.com/services/rest/</a>');
$client-&gt;method('flickr.auth.getFrob');
$client-&gt;api_key('3dc5df007ff96b1ceb7870ffe45eafc0');
$client-&gt;api_sig($api_sig);

$result = $client-&gt;get();
</code></pre>

<p>Here's the relevant part of the var_dump($client)</p>

<pre class="highlight"><code>
object(Zend_Rest_Client)#2 (2) { ["_data:protected"]=&gt;  array(4) { ["method"]=&gt;  string(19) "flickr.auth.getFrob" ["arg1"]=&gt;  string(19) "flickr.auth.getFrob" ["api_key"]=&gt;  string(32) "3dc5df007ff96b1ceb7870ffe45eafc0" ["api_sig"]=&gt;  string(32) "5292b6ecbb8a907e689f36d55697572c" }
</code></pre>

<p>As you can see; method is duplicated as arg1; which breaks the flicker call because it's sending
<a href="http://api.flickr.com/services/rest/?method=flickr.auth.getFrob&amp;api_key=3dc5df007ff96b1ceb7870ffe45eafc0&amp;api_sig=5292b6ecbb8a907e689f36d55697572c&amp;arg1=flickr.auth.getFrob">http://api.flickr.com/services/rest/…</a> instead of <a href="http://api.flickr.com/services/rest/?method=flickr.auth.getFrob&amp;api_key=3dc5df007ff96b1ceb7870ffe45eafc0&amp;api_sig=5292b6ecbb8a907e689f36d55697572c">http://api.flickr.com/services/rest/…</a>.</p>

<p>Updating this as it is still an issue in 1.10.4.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2010-03-02T16:50:46.000+0000</p> 
        <div class="body">
            <p>Sorry, I am not maintainer now.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-21T10:20:44.000+0000</p> 
        <div class="body">
            <p>Reassigning to component lead</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Anthony Burian (aburian) on 2010-04-26T06:50:03.000+0000</p> 
        <div class="body">
            <p>This there an update? This seems to still be an issue in 1.10.3 . Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jonathan Stewmon (jstewmon) on 2010-08-20T09:18:39.000+0000</p> 
        <div class="body">
            <p>Attached is a patch which will resolve this issue and produce the expected behavior.  It will also throw Zend_Rest_Client_Exceptions in cases where incorrect usage would result in unexpected behavior.</p>

<p>The __call method on the client that allows consumers to use fluent syntax can produce unexpected behavior because of the variety of conditions that it handles, which is the cause for most of the defects I see related to this class.</p>

<p>For the most reliable results, I recommend using the declared rest methods.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dan Chase (cdchase) on 2010-12-07T07:45:58.000+0000</p> 
        <div class="body">
            <p>The boxed Warning at: <a href="http://framework.zend.com/manual/en/zend.rest.client.html">http://framework.zend.com/manual/en/…</a>:</p>

<p>"Any REST service that is strict about the arguments it receives will likely fail using Zend_Rest_Client, 
because of the behavior described above. This is not a common practice and should not cause problems."</p>

<p>Is misleading as it IS a problem with <em>some</em> servers. Like the case reported in this bug, I have a similar issue when trying to use "waterservices.usgs.gov."</p>

<p>While I can understand the desire to make Zend_Rest_Client work easily with Zend_Rest_Server, most servers are not of this type and may object.</p>

<p>I would suggest adding a flag for STRICT operation. Whether the default should be enabled or disabled is up for argument. My vote would be 'enabled.'</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-07-21T09:14:35.000+0000</p> 
        <div class="body">
            <p>We found the same issue to be true. It can be easily solved by creating your own class that inherits from Zend_Rest_Client and override __call. That way you can also return different content-types than XML.</p>

        </div>
    </div>
    </div>

