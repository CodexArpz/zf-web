<h2>ZF-3582: Zend_Cache cannot have custom backend/frontend</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-07-04T18:05:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Graham Hensley (chiatar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The Zend_Cache controller has a bug which makes it impossible for a custom class to be used for the backend or frontend.</p>

<p>e.g.</p>

<p>bootstrap call:</p>

<pre><code>    $cache=Zend_Cache::factory('Core','Project_Cache_Backend_MemcacheExt', array('lifeTime'=&gt;null, 'automatic_serialization'=&gt;true), array('servers'=&gt;$config-&gt;cache-&gt;toArray())),null,true);
</code></pre>

<p>in the factory function the first two calls are the issue:
        $frontend = self::_normalizeName($frontend);
        $backend  = self::_normalizeName($backend);</p>

<p>normalize name changes $backend to</p>

<pre><code>    Projectcachebackendmemcacheext
</code></pre>

<p>now none of the logic to find the class name will work later on in the function because backend has already been "normalized"</p>

<pre><code>       if ($customBackendNaming) {
            // we use this boolean to avoid an API break
            $backendClass = 'Zend_Cache_Backend_' . $backend;
        } else {
            $backendClass = $backend;
        }

        if (!$autoload) {
            $file = str_replace('_', DIRECTORY_SEPARATOR, $backendClass) . '.php';
            if (!(self::_isReadable($file))) {
                self::throwException("file $file not found in include_path");
            }
            require_once $file;
        } 
</code></pre>

<p>Don't know if this has been resolved yet. Seems simple to fix.</p>

<p>thx</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Graham Hensley (chiatar) on 2008-07-04T18:07:39.000+0000</p> 
        <div class="body">
            <p>sorry. typo
fixed
-chiatar</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-07-05T05:41:33.000+0000</p> 
        <div class="body">
            <p>just fixed in SVN trunk (thanks)</p>

<p>can you try it ?</p>

<p>The syntax you have to use :</p>

<pre class="highlight"><code>
$cache=Zend_Cache::factory('Core','Project_Cache_Backend_MemcacheExt', array([...]), array([...]), false, true, false);
</code></pre>

<p>You have to do the "require_once" of your specific backend by yourself (last false). If it is in the include_path, you can try to change the last "false" into "true".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Graham Hensley (chiatar) on 2008-07-05T13:27:21.000+0000</p> 
        <div class="body">
            <p>Thanks Marty.</p>

<p>Everything looks good. However it still doesn't work. I don't know if this a  product of my particular PHP install.</p>

<p>You added:
        // because lowercase will fail
        if (!$customFrontendNaming) {
            $frontend = self::_normalizeName($frontend);
       }
        if (!$customBackendNaming) {
           $backend  = self::_normalizeName($backend);
       }</p>

<p>Only this works as desired for my installation</p>

<pre><code>    if ($customFrontendNaming != false) {
        $frontend = self::_normalizeName($frontend);
    }
    if ($customBackendNaming !=false) {
        $backend  = self::_normalizeName($backend);
    }
</code></pre>

<p>I tried casting the method variable as bool, this was the only comparison that worked.</p>

<p>Is this still an issue?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:25.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

