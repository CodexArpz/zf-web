<h2>ZF-6064: Zend_Config_Ini::getSectionNames() returns null when all sections are loaded.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-03-19T07:22:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-22T02:17:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you load a file into a Zend_Config_Ini object while passing null or no second parameter as the second parameter, method getSectionNames() will return null, although all sections will be laoded.</p>

<p>In fact, what it returns is what you pass in, you pass in 'Admin', it will probably retun 'Admin', if you pass in array('Admin', 'Frontend'), it will probably return array('Admin', 'Frontend').</p>

<p>Point is, it should not just echo back what you pass in if null is passed. Because null means all sections, getSectionNames() should return an array of all section names if there are more than one and a string sectionName if there is only one section.</p>

<p>Not sure wether to call this a bug or an improvement, so I will stick to improvement for now.</p>

<p>I need this functionality to be able to add sections that are not necessarily known in advance to the code, so they must not be hardcoded. I want to do something for each loaded section and reuse the name when saving new settings for each section. If there is a workaround, other than using multiple files and scandir() I would like to know.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2009-03-21T08:04:08.000+0000</p> 
        <div class="body">
            <p>Hmm...   getSectionName() doesn't work and I doubt it's worked since 1.0!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2009-03-21T08:24:29.000+0000</p> 
        <div class="body">
            <p>Thinking some more about this, there's no way that Zend_Config can know what the loaded sections are as that information is in Zend_Config_Ini and not Zend_Config.</p>

<p>If you then take into account that a Zend_Config object may have been merged or loaded via an array, what information should getSectionName() return?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2009-03-21T10:34:10.000+0000</p> 
        <div class="body">
            <p>My current thinking is that getSectionName() and areAllSectionsLoaded() should be marked deprecated and removed in 2.0.</p>

<p>I suspect that you should be using Zend_Config_Writer.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2009-03-21T14:42:57.000+0000</p> 
        <div class="body">
            <p>I've studied a bit more now, especially the test method testZF414() and ZF-414.</p>

<p>getSectionName() intentionally returns null if all sections are loaded so you can distinguish between this case and when multiple, but not all sections have been loaded.</p>

<p>If you get null from getSectionName, then you can do:</p>

<pre class="highlight"><code>
$sections =  array_keys($config-&gt;toArray());
</code></pre>

<p>to get all the sections in the file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2009-03-22T02:16:55.000+0000</p> 
        <div class="body">
            <p>Thanks for the tip! This will help to solve my case.</p>

<p>However, I still think the behavior is a bit unexpected, especially because we have allSectionsLoaded() to determine wether all sections are loaded.</p>

        </div>
    </div>
    </div>

