<h2>ZF-4597: Zend_File_Transfer receive method returns true in cases where Rename filter fails</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-14T13:52:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-13T14:10:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The _filter function inside of Zend/File/Transfer/Adapter/Abstract.php  performs a try/catch block to detect errors.  The problem is that the Rename filter uses the rename function which does not throw an exception upon failure. Instead, it only returns a boolean of false.</p>

<p>Because the Rename filter is meant to be used the Zend_File_Transfer to modify the destination directory of the file upload, you will get a boolean of true from calling the receive() method of the adapter when the rename is never successful.  If a rename fails in this case, the file is never moved to it's final destination and receive() should return false.</p>

<p>One potential fix would be to update the Rename filter to throw an exception when the rename fails. Right now an exception is only being thrown if the file exists. Because the  _filter method is checking for exceptions to detect errors, this rename failure never propagates up to _filter.</p>

<p>Zend/File/Transfer/Adapter/Abstract.php</p>

<pre class="highlight"><code>
protected function _filter($files = null)
    {
        $check           = $this-&gt;_getFiles($files);
        foreach ($check as $name =&gt; $content) {
            if (array_key_exists('filters', $content)) {
                foreach ($content['filters'] as $class) {
                    $filter = $this-&gt;_filters[$class];
                    try {
                        $result = $filter-&gt;filter($this-&gt;getFileName($name));

                        $this-&gt;_files[$name]['destination'] = dirname($result);
                        $this-&gt;_files[$name]['name']        = basename($result);
                    } catch (Zend_Filter_Exception $e) {
                        $this-&gt;_messages += array($e-&gt;getMessage());
                    }
                }
            }
        }

        if (count($this-&gt;_messages) &gt; 0) {
            return false;
        }

        return true;
    }
</code></pre>

<p>Zend/Filter/File/Rename.php</p>

<pre class="highlight"><code>
        if (file_exists($newfile)) {
            require_once 'Zend/Filter/Exception.php';
            throw new Zend_Filter_Exception("File $value could not be renamed. It already exists.");
        }

        $result = rename($value, $newfile);

        if ($result === true) {
            return $newfile;
        }

        return false;
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-10-15T07:26:58.000+0000</p> 
        <div class="body">
            <p>Yes, this is true.
Fixed in r11963.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:31.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

