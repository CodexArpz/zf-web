<h2>ZF-5376: Allow Zend_Paginator to Accept An Infinite Item Count Per Page</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-12-29T14:40:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-25T18:47:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.0 (02/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bradley Holt (bradley.holt)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bradley Holt (bradley.holt)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13107/ZF-5376.patch">ZF-5376.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It would be nice if Zend_Paginator supported an infinite item count per page by passing in a zero (0) as the argument to the setItemCountPerPage method. This would be useful when one wants allow the user to select the item count per page, e.g. "show 25, 50, 100, All items per page". Currently passing a negative one (-1) provides this functionality but is not an intended feature according to this email exchange with Matthew Ratzloff:</p>

<p>On Mon, Dec 29, 2008 at 5:18 PM, Matthew Ratzloff <a href="mailto:matt@builtfromsource.com">matt@builtfromsource.com</a> wrote:</p>

<blockquote>
  <p>Hi Bradley,
  Sorry about the confusion, I misread your requirement.  The -1 trick is in
  fact not an intended feature (if it were, it would be 0, to be in line with
  typical PHP API), but if it works, use it for now.  Whatever fix will just
  test for &lt; 1, so your code should be forward-compatible.
  I highly encourage you to file an enhancement ticket so that this can be
  implemented properly.  If you do, please copy and paste this e-mail exchange
  as a comment into the ticket.
  Thanks,
  -Matt</p>
  
  <p>On Mon, Dec 29, 2008 at 11:56 AM, Bradley Holt <a href="mailto:bradley.holt@foundline.com">bradley.holt@foundline.com</a>
  wrote:
  &gt;</p>
  
  <blockquote>
    <p>Matt,</p>
    
    <p>Taking a closer look at the documentation, the "All" scrolling style
    "returns every page." I'm not trying to show every page in the
    paginator control, I'm trying to have an infinite item count <em>per
    page</em> (which, of course, will make it so I have only one page of
    items). Like I said, passing a negative one (-1) to the
    setItemCountPerPage method does the job - I just don't know if this is
    an intended feature or something that just happens to work now but may
    not be supported in the future.</p>
    
    <p>Thanks,
    Bradley</p>
    
    <p>On Mon, Dec 29, 2008 at 1:00 PM, Matthew Ratzloff
    <a href="mailto:matt@builtfromsource.com">matt@builtfromsource.com</a> wrote:
    &gt;</p>
    
    <blockquote>
      <p>Hi Bradley,
      Use the scrolling style "All" instead.
      Please see <a href="http://framework.zend.com/manual/en/zend.paginator.usage.html">http://framework.zend.com/manual/en/…</a>
      for more information.
      -Matt</p>
      
      <p>On Sun, Dec 28, 2008 at 6:40 PM, Bradley Holt
      <a href="mailto:bradley.holt@foundline.com">bradley.holt@foundline.com</a> wrote:
      &gt;</p>
      
      <blockquote>
        <p>I was looking for a way to have Zend_Paginator show all of the items.
        For example, I have a selector that allows a user to show 25, 50, 100,
        or all records. I couldn't find any documentation but by experimenting
        I found that I could pass a negative one (-1) to setItemCountPerPage
        and it would show all items (actually, I think any negative number
        will show all items). Since I couldn't find any documentation on this
        I'm wondering if this is a supported feature of Zend_Paginator that
        just happens to work now but might break in the future.</p>
        
        <p>Thanks,
        Bradley</p>
        
        <p>--
        Bradley Holt
        bradley.holt@foundline.com</p>
      </blockquote>
    </blockquote>
    
    <p>--
    Bradley Holt
    bradley.holt@foundline.com</p>
  </blockquote>
</blockquote>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2009-08-12T10:17:44.000+0000</p> 
        <div class="body">
            <p>This allows a user to use paginator objects throughout an application.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steve Pavarno (pavarnos) on 2009-11-15T15:33:10.000+0000</p> 
        <div class="body">
            <p>+1</p>

<p>Looks like a simple patch?</p>

<p>Paginator.php line 607</p>

<pre class="highlight"><code>
    public function setCurrentPageNumber($pageNumber)
    {
        $this-&gt;_currentPageNumber = (integer) $pageNumber;
        $this-&gt;_currentItems      = null;
        $this-&gt;_currentItemCount  = null;

        return $this;
    }
</code></pre>

<p>becomes</p>

<pre class="highlight"><code>
    public function setCurrentPageNumber($pageNumber)
    {
        $this-&gt;_currentPageNumber = (integer) $pageNumber;
        $this-&gt;_currentItems      = null;
        $this-&gt;_currentItemCount  = null;
        if ($pageNumber &lt;= 0) $this-&gt;setItemCountPerPage( $this-&gt;getTotalItemCount() );

        return $this;
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bradley Holt (bradley.holt) on 2010-05-25T11:23:43.000+0000</p> 
        <div class="body">
            <p>I've attached a patch to allow for a negative one to be passed to Zend_Paginator::setItemCountPerPage() which will explicitly allow for an infinite (technically the total item count, but effectively infinite) number of items per page. The patch also includes a new assertion in the unit tests for this component. With some adapters, this may technically be a BC break (but I'm not sure) since all values below one were treated the same before, but now zero will be treated as before, but values below zero will get an item count per page equal to the total item count. If this patch looks good, I will go ahead and commit it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2010-05-25T12:44:42.000+0000</p> 
        <div class="body">
            <p>PHP is inconsistent in its API, so this method should accept -1, 0, or null as triggers for this behavior.</p>

<p>0:
<a href="http://php.net/manual/en/function.set-time-limit.php">http://php.net/manual/en/…</a> (seconds)
<a href="http://php.net/manual/en/function.ldap-read.php">http://php.net/manual/en/function.ldap-read.php</a> (sizeLimit)
<a href="http://php.net/manual/en/function.ldap-search.php">http://php.net/manual/en/function.ldap-search.php</a> (sizeLimit)</p>

<p>-1:
<a href="http://www.php.net/manual/en/ini.list.php">http://www.php.net/manual/en/ini.list.php</a></p>

<p>-1, 0, null:
<a href="http://php.net/manual/en/function.preg-split.php">http://php.net/manual/en/function.preg-split.php</a> (limit)
<a href="http://php.net/manual/en/function.preg-replace.php">http://php.net/manual/en/function.preg-replace.php</a> (limit)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bradley Holt (bradley.holt) on 2010-05-25T13:05:59.000+0000</p> 
        <div class="body">
            <p>Values less than one was what the original issue description said the value should be to trigger an infinite item count per page would. However, this caused an existing unit test to break so I didn't feel it was an appropriate change. That's why I went with negative one (well, anything less than zero) instead.</p>

<p>This is the existing assertion that fails if we change the behavior to accept zero as the infinite item count per page:</p>

<pre class="highlight"><code>
$this-&gt;_paginator-&gt;setItemCountPerPage(0);
$this-&gt;assertEquals(10, $this-&gt;_paginator-&gt;getItemCountPerPage());
</code></pre>

<p>I didn't feel it was my place to change an existing assertion as I don't know the history behind that expected behavior. If you are confident that assertion can safely be modified, then I can change the behavior to accept -1, 0, or null as triggers for this behavior. The assertion would have to modified as follows for the tests to pass with this new behavior:</p>

<pre class="highlight"><code>
$this-&gt;_paginator-&gt;setItemCountPerPage(0);
$this-&gt;assertEquals(101, $this-&gt;_paginator-&gt;getItemCountPerPage());
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2010-05-25T17:18:52.000+0000</p> 
        <div class="body">
            <p>That test doesn't make any logical sense to me, anyway; I think it's safe to change.  Passing 0 as an argument has never been a documented use of the API, so I have no BC concerns about this change.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2010-05-25T17:19:39.000+0000</p> 
        <div class="body">
            <p>Thanks for taking this on, Bradley!</p>

        </div>
    </div>
    </div>

