<h2>ZF-4936: multiple paginator instances with the same view script</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-11-12T12:27:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-06-18T02:51:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Ratzloff (mratzloff)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>You currently have to create a new view script for every paginator instance you want to use on a single page.</p>

<p>This is caused by the paginator view script setting the url page parameter.   If each paginator instance uses the same view script then when you paginate one  you will paginate all.</p>

<p>Here is the code to fix this.</p>

<p>I would like to commit it to the trunk but I wanted someone else to review this first.</p>

<pre class="highlight"><code>
class Paginator extends Zend_Paginator
{
    public $pageName = 'page';
    
    public function getPages($scrollingStyle = null)
    {
        $pages = parent::getPages($scrollingStyle);
        
        $pages-&gt;pageName = $this-&gt;pageName;
        
        return $pages;
        
    }
    
    public function setPageName($pageName)
    {
        $this-&gt;pageName = $pageName;
    }
}
</code></pre>

<pre class="highlight"><code>
&lt;?php if (isset($this-&gt;previous)): ?&gt; 
  <a href="">&lt; Previous</a> | 
&lt;?php else: ?&gt; 
  <span class="disabled">&lt; Previous</span> | 
&lt;?php endif; ?&gt; 
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2008-12-09T13:23:41.000+0000</p> 
        <div class="body">
            <p>{quote}
This is caused by the paginator view script setting the url page parameter. If each paginator instance uses the same view script then when you paginate one you will paginate all.
{quote}</p>

<p>Right. and this intentional; say you have two pagination controls, one at the top of the results and another at the bottom.  Both advance the same.</p>

<p>I'm curious how in your scenario you would have two pagination controls controlling different data but with identical URLs.  Or maybe I'm misunderstanding.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by michael depetrillo (klassicd) on 2008-12-09T13:44:27.000+0000</p> 
        <div class="body">
            <p>I have a page to view a user profile at /user/view/id/1</p>

<p>On this page I have multiple sets of data like Comments, Articles, Pictures and Friends.</p>

<p>In my UserController I have code to create an sql statement for each data set.  For each sql statement I create a new instance of Zend_Paginator using the modifications above.  I give each pagination instance a unique page name.</p>

<p>I can choose to paginate Articles to the next page at /user/view/id/1/articlePage/2.  This will  paginate the article data set only.</p>

<p>I can then choose to paginate pictures to the last page at /user/view/id/1/articlePage/2/picturePage/999.  This keeps the articles on page 2 and the pictures on page 999.</p>

<p>The class Zend_View_Helper_Url handles all of this for me.  I can use the same view script for each pagination instance giving my site a more consistent look and feel.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Kusmierz (raistlin) on 2008-12-14T13:46:32.000+0000</p> 
        <div class="body">
            <p>You can also do it by:</p>

<p>in Controller:</p>

<pre class="highlight"><code>
$sth = getPages()-&gt;pageName = 'page2';
</code></pre>

<p>where $sth is instance of Zend_Paginator</p>

<p>Now you have $this-&gt;pageName  in you paginator view, you can only add ie.:</p>

<pre class="highlight"><code>
&lt;?php if (empty($this-&gt;pageName)) $this-&gt;pageName = 'page' ?&gt;
</code></pre>

<p>and as above:</p>

<pre class="highlight"><code>
&lt;?php if (isset($this-&gt;previous)): ?&gt; 
  <a href="">&lt; Previous</a> | 
&lt;?php else: ?&gt; 
  <span class="disabled">&lt; Previous</span> | 
&lt;?php endif; ?&gt;
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Schaatsbergen (erubyr) on 2010-06-18T02:29:30.000+0000</p> 
        <div class="body">
            <p>{quote}in Controller:</p>

<pre class="highlight"><code>

I assume you meant
</code></pre>

<p>which actually works quite well.</p>

<p>The correct items are subtracted from the set, but for some reason the pagination controls seem to disagree. As yet I am unable to convince them it is not first page any more....</p>

<pre class="highlight"><code>
Employees
Last name   First name  Type        Location
Test        Twentyeight     Non Admin   Oldenburg   delete
Test        Sixtynine   Non Admin   Oldenburg   delete
Test    Thirty  Non Admin   Oldenburg   delete
add
1 - 10 of 33 First | &lt; Previous | Next &gt; | Last
</code></pre>

<p>Those are the final 3 records (after having clicked on last) but the paginator controls still think the first 10 are shown, so first and previous are disabled, next and last are enabled. Will continue to look into it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Schaatsbergen (erubyr) on 2010-06-18T02:51:02.000+0000</p> 
        <div class="body">
            <p>And I found where I went wrong, getPages() uses the currentpagenumber, which I set after calling the getPages function....... Now it works brilliantly, thanks!</p>

        </div>
    </div>
    </div>

