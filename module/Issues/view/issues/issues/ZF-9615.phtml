<h2>ZF-9615: getDbAdapter() on Zend_Application_Resource_Db incorrect behaviour </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-04T18:56:25.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-12-18T20:08:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.1 (18/Dec/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application_Resource</li>
            <li>FixForZF1.12</li>
            <li>zf-caretaker-adamlundrigan</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-12466">ZF-12466</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12976/zend-application-resource-db.patch">zend-application-resource-db.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>From <a href="http://framework.zend.com/manual/en/zend.application.available-resources.html#zend.application.available-resources.db">Zend Application Available Resources Db</a> Documentation:</p>

<p>{quote}
Below is an example INI configuration that can be used to initialize the DB resource.</p>

<pre class="highlight"><code>
[production]
resources.db.adapter = "pdo_mysql"
resources.db.params.host = "localhost"
resources.db.params.username = "webuser"
resources.db.params.password = "XXXXXXX"
resources.db.params.dbname = "test"
resources.db.isDefaultTableAdapter = true
</code></pre>

<p>Note: Retrieving the Adapter instance
If you choose not to make the adapter instantiated with this resource the default table adapter, how do you retrieve the adapter instance?
As with any resource plugin, you can fetch the DB resource plugin from your bootstrap:</p>

<pre class="highlight"><code>
$resource = $bootstrap-&gt;getPluginResource('db');
</code></pre>

<p>Once you have the resource object, you can fetch the DB adapter using the getDbAdapter() method:</p>

<pre class="highlight"><code>
$db = $resource-&gt;getDbAdapter();
</code></pre>

<p>{quote}</p>

<p>So i expect when i override the Application Bootstrap _initDb() function with those:</p>

<pre class="highlight"><code>
function _initDb() {
    if ($this-&gt;hasPluginResource('db')) {
        $resource = $this-&gt;getPluginResource('db');
        $db = $resource-&gt;getDbAdapter();
        return $db;
    }
}
</code></pre>

<p>that everything works fine.
But it doesn't because getDbAdapter() does not set the default table adapter; it is acctually setted on init().
Imho, this is the wrong place.</p>

<p>The attached patch should fix this problem.</p>

<p>Here a workaround:</p>

<pre class="highlight"><code>
function _initDb() {
    if ($this-&gt;hasPluginResource('db')) {
        $resource = $this-&gt;getPluginResource('db');
        $db = $resource-&gt;init();
        return $db;
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-04-04T19:00:07.000+0000</p> 
        <div class="body">
            <p>What exactly is the problem?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giuseppe Roberti (hardcoded) on 2010-04-04T19:42:41.000+0000</p> 
        <div class="body">
            <p>Sorry, clicked on Create before i had finished writing.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-06-24T18:15:05.000+0000</p> 
        <div class="body">
            <p>Reassigning to Matthew.</p>

<p>Matthew, I assume you originally wrote this class? The issue at hand seems legit, but I'm unsure if there's anything I'm missing and/or why you chose to did it the way you did when you wrote it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-11-13T21:38:37.000+0000</p> 
        <div class="body">
            <p>Merged to trunk and 1.12 branch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sergio Rinaudo (razorblade) on 2012-11-14T10:53:08.000+0000</p> 
        <div class="body">
            <p>After the update this exception is thrown in an application of the company where I work</p>

<p>Uncaught exception 'Zend_Exception' with message 'No entry is registered for key 'pdo_mysql''</p>

<p>It seems to look for a pdo_mysql key inside Zend_Registry.
Use temporarily multidb resource instead of db solved the problem.</p>

<p>Is only me with this problem?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Arnold Pistorius (arnoldpistorius) on 2012-11-14T17:32:50.000+0000</p> 
        <div class="body">
            <p>@Sergio</p>

<p>At my company we have this problems too, I found a work around at <a href="http://framework.zend.com/issues/browse/ZF-12466">http://framework.zend.com/issues/browse/ZF-12466</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-11-14T18:31:58.000+0000</p> 
        <div class="body">
            <p>Sergio, Arnold -- I've committed a fix that should correct this; let me know if you are still experiencing issues.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sergio Rinaudo (razorblade) on 2012-11-15T09:31:46.000+0000</p> 
        <div class="body">
            <p>Hello Matthew,
everything it's fine with this fix, 
thank you!</p>

<p>Also thank you Arnold for the workaround advice.</p>

        </div>
    </div>
    </div>

