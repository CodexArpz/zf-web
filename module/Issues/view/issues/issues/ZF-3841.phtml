<h2>ZF-3841: Expand Zend_Dojo_Data to include custom parameters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-03T15:29:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-08T09:10:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.1 (15/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Dave (dave_edelhart)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dojo</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The dojo.data.QueryReadStore requires a "numRows" parameter of the data JSON block. While patching this particular parameter would be easy, it might be better to allow a user-expandable array for any parameters they might want to add. I have implemented such in my extension of this class.</p>

&lt;?php

class Dojoplus_Data extends Zend_Dojo_Data {
    
    public $extra_params = array();
    
    public function set_extra_param($pKey, $pValue){
        $this-&gt;extra_params[$pKey] = $pValue;
    }
    
    public function get_extra_param($pKey){
        if(isset($this-&gt;extra_params[$pKey])):
            return $this-&gt;extra_params[$pKey];
        else:
            return NULL;
        endif;
    }
    
    public function toArray(){
        return array_merge($this-&gt;extra_params, parent::toArray());
    }
}
?&gt;

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-09-08T09:10:20.000+0000</p> 
        <div class="body">
            <p>Patch committed to trunk and 1.6 release branch. API is as follows:</p>

<pre class="highlight"><code>
// Set the "numRows" to 100
$data-&gt;setMetadata('numRows', 100);

// Set several items at once:
$data-&gt;setMetadata(array(
    'numRows' =&gt; 100,
    'sort'    =&gt; 'name',
));

// Inspect a single metadata value:
$numRows = $data-&gt;getMetadata('numRows');

// Inspect all metadata:
$metadata = $data-&gt;getMetadata();

// Remove a metadata item:
$data-&gt;clearMetadata('numRows');

// Remove all metadata:
$data-&gt;clearMetadata();
</code></pre>

        </div>
    </div>
    </div>

