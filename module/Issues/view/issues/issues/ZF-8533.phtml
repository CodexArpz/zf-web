<h2>ZF-8533: Zend_Db_Table_Abstract _fetch() returns only arrays</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-12T13:12:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-12-22T10:16:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                peter böthig (mittax)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ramon Henrique Ornelas (ramon)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8534">ZF-8534</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The _fetchAll methode use a hardcoded Constant</p>

<pre class="highlight"><code>
protected function _fetch(Zend_Db_Table_Select $select)
    {
        $stmt = $this-&gt;_db-&gt;query($select);
        $data = $stmt-&gt;fetchAll(Zend_Db::FETCH_ASSOC);
        return $data;
    }
</code></pre>

<p>i created a patch. It gets the current given constant of the db_Adapter.</p>

<pre class="highlight"><code>

 protected function _fetch(Zend_Db_Table_Select $select) {
        $stmt = $this-&gt;_db-&gt;query($select);
        $data = $stmt-&gt;fetchAll($this-&gt;_db-&gt;getFetchMode());
        return $data;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by peter böthig (mittax) on 2009-12-12T13:20:27.000+0000</p> 
        <div class="body">
            <p>Sorry. Is there an Option to use 2 CodeBlocks. One for the issue and one for the solvation?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by peter böthig (mittax) on 2009-12-14T04:07:48.000+0000</p> 
        <div class="body">
            <p>I could figure it out.</p>

<p>I used in the model the var rowClass and pointed to the model itself. That causes an error of return only array when i fetchAll() on the modelobject, even when i setFetchMode(Zend_Db::Fetch_OBJ).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2009-12-20T13:57:13.000+0000</p> 
        <div class="body">
            <p>If change is applied to cause problem to other components of the Db.
Example: Zend_Db_Table_Row.</p>

<p>I do not see this issue as a bug but an improvement.</p>

<p>@peter
Because of this improvement?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by peter böthig (mittax) on 2009-12-21T01:42:56.000+0000</p> 
        <div class="body">
            <p>@ramon</p>

<p>the problen i see is the following: 
i wrongly set the $_RowClass in my Modelfile to Admin(s).php in Admins.php instead to set it to Admin.php (my rowclassfile).</p>

<p>This simple mistake causes a return of type array in fetchAll(). It took 3 hours to find the error.
So i tried to set the returnvalue explizit to object with setFethMode() but with not success.</p>

<p>It would be very helpfull if the framework would throw an exception of "missing correct _rowClass definition" or something in that way.</p>

<p>I could only find my mistake of debugging the framework.</p>

<p>Change the hardcoded Constant to dynamic getFechtmode in _fetch() causes another problem.
The rowclass needs assoc as returnvalue to return an array with resultrows.</p>

<p>greets</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-12-21T10:15:33.000+0000</p> 
        <div class="body">
            <p>I am not sure what the feature/bug issue is here.</p>

<p>Zend_Db_Table only deals in associative information, as the keys map directly to properties in an object.  Other fetch modes would not make must sense.  Can someone help me understand the issue here?</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by peter böthig (mittax) on 2009-12-21T11:10:07.000+0000</p> 
        <div class="body">
            <p>@ ralph</p>

<p>its correct, that the result of zend_db_table_row only can be type array. the incorrect use of _rowClass causes a return of array by using zend_db_table_abstract::fetchAll()  instead of type object.</p>

<p>if $_rowClass would throw an exeption if it points to itselfs or another zend_db_table_abstract class it would be very helpful. Not only for beginners like me.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2009-12-22T02:06:18.000+0000</p> 
        <div class="body">
            <p>@ralph</p>

<p>I commented on this  does not  change was feasible and does not make sense, that would cause some problems in Row.</p>

<p>I will close this issue as "Not a issue".</p>

        </div>
    </div>
    </div>

