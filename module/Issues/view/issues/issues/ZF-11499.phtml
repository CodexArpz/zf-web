<h2>ZF-11499: PHP5 UTF-8</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-06-21T15:51:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-14T16:11:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Rin Nas (rin-nas)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello.
My name is Rinat, I want to contribute ZF by my class.</p>

<p>PHP5 UTF-8 is a UTF-8 aware library of functions mirroring PHP's own string functions
<a href="http://code.google.com/p/php5-utf8/source/browse/">http://code.google.com/p/php5-utf8/source/browse/</a>
This package is advance of <a href="http://sourceforge.net/projects/phputf8">http://sourceforge.net/projects/phputf8</a> (last updated in 2007).</p>

<p><em>Features and benefits of using this class</em>
  * Compatibility with the interface standard PHP functions that deal with single-byte encodings
  * Ability to work without PHP extensions ICONV and MBSTRING, if any, that are actively used! Uses the fastest available method between MBSTRING, ICONV, native on PHP and hacks.
  * Useful features are missing from the ICONV and MBSTRING
  * The methods that take and return a string, are able to take and return null. This useful for selects from a database.
  * Several methods are able to process arrays recursively
  * Validating method parameters to allowed types via reflection (You can disable it)
  * A single interface and encapsulation, You can inherit and override
  * Test coverage
  * PHP&gt; = 5.3.x</p>

<p>Example:
  $s = 'Hello, Привет';
  if (UTF8::is_utf8($s)) echo UTF8::strlen($s);</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-14T16:11:22.000+0000</p> 
        <div class="body">
            <p>Rinat,</p>

<p>ZFv1 is no longer accepting new features, and also the minimum PHP version is 5.2.4 yet your class requires 5.3.x.</p>

<p>If this is still something you wish to contribute to ZF, I would suggest opening an RFC on the <a href="http://framework.zend.com/wiki/display/ZFDEV2/RFC%27s">Zend Framework 2 wiki page</a> to begin the process of having it accepted into ZF2</p>

        </div>
    </div>
    </div>

