<h2>ZF-11609: ZF 1.11.9: No Captcha img rendered</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-07-25T21:13:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-11T15:56:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.10 (04/Aug/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                rossi (segnior_rossi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Kai Uwe (kaiuwe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8094">ZF-8094</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14539/Captcha.php.patch">Captcha.php.patch</a></li>
            <li><a href="/issues/secure/attachment/14540/CaptchaTest.php.patch">CaptchaTest.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>i've upgraded from ZF 1.11.8 to 1.11.9. After the upgrade no captcha image is displayed any more, because the captcha img tag is not rendered. I could solve it by explicitely adding the captcha decorator to Zend_Form_Element_Captcha.</p>

<p>Issue is explained here as well: <a href="http://stackoverflow.com/questions/6726987/zend-1-11-9-form-decorators-captcha">http://stackoverflow.com/questions/6726987/â€¦</a></p>

<p>ninsky</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-25T21:53:49.000+0000</p> 
        <div class="body">
            <p>Component changed to Zend_Form.
Priority changed because a simple workaround is available.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-25T21:56:00.000+0000</p> 
        <div class="body">
            <p>Please have a look at: ZF-8094 - Captcha element always set captcha decorator</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-26T08:34:52.000+0000</p> 
        <div class="body">
            <p>Example to reproduce the problem.</p>

<pre class="highlight"><code>
$form = new Zend_Form(); 

$form-&gt;addElement( 
    'captcha', 
    'foo', 
    array( 
        'label' =&gt; 'Foo', 
            'captcha' =&gt; array( 
            'captcha' =&gt; 'Figlet', 
            'wordLen' =&gt; 6, 
            'timeout' =&gt; 300, 
        ), 
    ) 
); 

echo '</code></pre><h3><code>Before rendering</code></h3><code>'; 
echo '</code><code>'; 
foreach ($form-&gt;getElement('foo')-&gt;getDecorators() as $decorator) { 
    echo '' . get_class($decorator) . ''; 
} 
echo ''; 

echo '</code><h3><code>Output</code></h3><code>'; 
echo $form-&gt;render($view); 

echo '</code><h3><code>After rendering</code></h3><code>'; 
echo '</code><code>'; 
foreach ($form-&gt;getElement('foo')-&gt;getDecorators() as $decorator) { 
    echo '' . get_class($decorator) . ''; 
} 
echo '';
</code>

<pre class="highlight"><code>
</code></pre><h3><code>Before rendering</code></h3><code>
</code><code>Zend_Form_Decorator_Errors
    Zend_Form_Decorator_Description
    Zend_Form_Decorator_HtmlTag
    Zend_Form_Decorator_Label
</code><h3><code>Output</code></h3><code>

    </code><code>
            Foo
        
        
            
    
</code><h3><code>After rendering</code></h3><code>
</code><code>Zend_Form_Decorator_Captcha_Word
    Zend_Form_Decorator_Errors
    Zend_Form_Decorator_Description
    Zend_Form_Decorator_HtmlTag
    Zend_Form_Decorator_Label
</code>

<p><em>Before rendering</em></p>

<ul><li>Zend_Form_Decorator_Errors</li>
<li>Zend_Form_Decorator_Description</li>
<li>Zend_Form_Decorator_HtmlTag</li>
<li>Zend_Form_Decorator_Label</li>
</ul><p><em>After rendering</em></p>

<ul><li>Zend_Form_Decorator_Captcha_Word</li>
<li>Zend_Form_Decorator_Errors</li>
<li>Zend_Form_Decorator_Description</li>
<li>Zend_Form_Decorator_HtmlTag</li>
<li>Zend_Form_Decorator_Label</li>
</ul><p>The decorator "Zend_Form_Decorator_Captcha" is missing.</p>

<p>BUT:</p>

<pre class="highlight"><code>
$form-&gt;getElement('foo')-&gt;clearDecorators(); 
</code></pre>

<pre class="highlight"><code>
</code></pre><h3><code>Before rendering</code></h3><code>
</code><code></code><h3><code>Output</code></h3><code>

    </code><code>
</code><h3><code>After rendering</code></h3><code>
</code><code>Zend_Form_Decorator_Captcha_Word
</code>

<p><em>Before rendering</em></p>

<p>(empty)</p>

<p><em>After rendering</em></p>

<ul><li>Zend_Form_Decorator_Captcha_Word</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thanos Kyritsis (djart) on 2011-07-26T10:14:58.000+0000</p> 
        <div class="body">
            <p>Thanks for opening this bug. It is affected by Subversion revision #24223 for library/Zend/Form/Element/Captcha.php which fixed ReCaptcha, but broke the other captchas (Figlet, Image and Dumb which are all Word Captchas). Specifically, the following block of code doesn't work well for Word Captchas (it only does for ReCaptcha):</p>

<pre class="highlight"><code>
$decorator  = $captcha-&gt;getDecorator();
if (!empty($decorator)) {
    array_unshift($decorators, $decorator);
} else {
     $decorator = array('Captcha', array('captcha' =&gt; $captcha));
     array_unshift($decorators, $decorator);
}

$this-&gt;setDecorators($decorators);
</code></pre>

<p>Recaptcha needs just his own decorator, so the if/else block is correct for it's case. All the other (word) captchas need both their own decorator (which is actually "Captcha_Word") AND additionally the generic Captcha Decorator, so that if/else block ruins it for them.</p>

<p>I can think of two different solutions, I don't know which one Zend Framework developers think as better:</p>

<ul><li>Change the above if/else block to a bit more complicated (and "uglier") one</li>
<li>Refactor the Captcha_Word decorator (making it as "good" and "rich" as the Captcha_ReCaptcha decorator is) and (probably) drop the generic Captcha decorator completely. (I would say this is the cleaner approach but ZF devs should decide)</li>
</ul><p>For the first case, the if/else could be something like the following pseudo-code:</p>

<pre class="highlight"><code>
$decorator  = $captcha-&gt;getDecorator();
if (!empty($decorator)) {
    array_unshift($decorators, $decorator);
}

if (the current captcha object is not ReCaptcha) {
     // push an additional decorator to the stack
     $decorator = array('Captcha', array('captcha' =&gt; $captcha));
     array_unshift($decorators, $decorator);
}

$this-&gt;setDecorators($decorators);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-26T10:55:42.000+0000</p> 
        <div class="body">
            <p>{quote}
Refactor the Captcha_Word decorator (making it as "good" and "rich" as the Captcha_ReCaptcha decorator is) and (probably) drop the generic Captcha decorator completely. (I would say this is the cleaner approach but ZF devs should decide)
{quote}
I think it is a bad idea, because we need a separation between image/figlet and the text input.</p>

<p>(The example does not use the current implementation, because the current implementation adds additional decorators in the method to render!)</p>

<pre class="highlight"><code>
// Form
$form = new Zend_Form();
$form-&gt;removeDecorator('HtmlTag');

// Element
$form-&gt;addElement(
    'captcha',
    'foo',
    array(
        'label' =&gt; 'Foo',
        'captcha' =&gt; array(
            'captcha' =&gt; 'Figlet',
            'wordLen' =&gt; 6,
            'timeout' =&gt; 300,
        ),
    )
);

// Element decorators
$form-&gt;getElement('foo')-&gt;setDecorators(array(
    // Zend_Form_Decorator_HtmlTag
    array(
        // Decorator name
        array(
            'spanOpen' =&gt; 'HtmlTag',
        ),
        // Decorator options
        array(
            'tag'      =&gt; 'span',
            'openOnly' =&gt; true,
        ),
    ),
    // Zend_Form_Decorator_Captcha
    'Captcha',
    // Zend_Form_Decorator_HtmlTag
    array(
        // Decorator name
        array(
            'spanClose' =&gt; 'HtmlTag',
        ),
        // Decorator options
        array(
            'tag'       =&gt; 'span',
            'closeOnly' =&gt; true,
            'placement' =&gt; 'append',
        ),
    ),
    // Zend_Form_Decorator_Captcha_Word
    'Captcha_Word',
    // Zend_Form_Decorator_Errors
    'Errors',
    // Zend_Form_Decorator_Description
    'Description',
    // Zend_Form_Decorator_Label
    'Label',
    // Zend_Form_Decorator_HtmlTag
    array(
        // Decorator name
        array(
            'div' =&gt; 'HtmlTag',
        ),
        // Decorator options
        array(
            'tag' =&gt; 'div',
        ),
    ),
));

echo $form-&gt;render($view);
</code></pre>

<pre class="highlight"><code>

    </code></pre><div><code>
        Foo
        <span>
        </span></code><pre><code>__    __   __   __   __   _    __   __    ______    _____   
\ \\ / //  \ \\/ // | || | ||  \ \\/ //  /_   _//  |  ___|| 
 \ \/ //    \ ` //  | '--' ||   \ ` //     | ||    | ||__   
  \  //      | ||   | .--. ||    | ||     _| ||    | ||__   
   \//       |_||   |_|| |_||    |_||    /__//     |_____|| 
    `        `-`'   `-`  `-`     `-`'    `--`      `-----`  
                                                            
</code></pre><code>
        
        </code></div><code>

</code>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-26T11:08:54.000+0000</p> 
        <div class="body">
            <p><em>@Thanos</em>
The new implementation must respect "loadDefaultDecoratorsIsDisabled()".
See my example above with â€œclearDecorators()" and ZF-8094.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thanos Kyritsis (djart) on 2011-07-26T12:21:25.000+0000</p> 
        <div class="body">
            <p>{quote}
The new implementation must respect "loadDefaultDecoratorsIsDisabled()".
See my example above with â€œclearDecorators()" and ZF-8094.
{quote}</p>

<p>@Kai
I agree, it's a chance to solve both problems/issues with one patch. I think that the Zend_Form_Element_Captcha render function currently doesn't show much respect neither for ReCaptcha nor for the others, am I correct ? It is the only render function (among other zend form elements) that actually pushes additional decorators in the stack.</p>

<p>Are the Zend_Form_Decorator_Captcha_Word, Zend_Form_Decorator_Captcha and Zend_Form_Decorator_Captcha_ReCaptcha regarded as default decorators or not ? Which of them should or shouldn't be in the default decorators group ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-26T14:59:43.000+0000</p> 
        <div class="body">
            <p>{quote}I think that the Zend_Form_Element_Captcha render function currently doesn't show much respect neither for ReCaptcha nor for the others, am I correct ?{quote}
Right.
{quote}It is the only render function (among other zend form elements) that actually pushes additional decorators in the stack.{quote}
Zend_Form_Element_File needs also a special decorator, but <a href="http://framework.zend.com/code/filedetails.php?repname=Zend+Framework&amp;path=%2Ftags%2Frelease-1.11.9%2Flibrary%2FZend%2FForm%2FElement%2FFile.php">takes a different approach</a>.
{quote}Are the Zend_Form_Decorator_Captcha_Word, Zend_Form_Decorator_Captcha and Zend_Form_Decorator_Captcha_ReCaptcha regarded as default decorators or not ? Which of them should or shouldn't be in the default decorators group ?{quote}
This is the problem:
||Captcha adapters||Required decorators||
|Dumb, Figlet, Image|Zend_Form_Decorator_Captcha + Zend_Form_Decorator_Captcha_Word|
|ReCaptcha|Zend_Form_Decorator_Captcha_ReCaptcha|</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thanos Kyritsis (djart) on 2011-07-26T16:45:22.000+0000</p> 
        <div class="body">
            <p>All right, how about this patch:</p>

<pre class="highlight"><code>
--- library/Zend/Form/Element/Captcha.php.orig  2011-07-26 19:02:59.473494443 +0300
+++ library/Zend/Form/Element/Captcha.php   2011-07-26 19:21:08.795165709 +0300
@@ -178,17 +178,21 @@
         $captcha    = $this-&gt;getCaptcha();
         $captcha-&gt;setName($this-&gt;getFullyQualifiedName());
 
-        $decorators = $this-&gt;getDecorators();
+        if (!$this-&gt;loadDefaultDecoratorsIsDisabled()) {
+            $decorators = $this-&gt;getDecorators();
 
-        $decorator  = $captcha-&gt;getDecorator();
-        if (!empty($decorator)) {
-            array_unshift($decorators, $decorator);
-        } else {
-            $decorator = array('Captcha', array('captcha' =&gt; $captcha));
-            array_unshift($decorators, $decorator);
-        }
+            $decorator  = $captcha-&gt;getDecorator();
+            if (!empty($decorator)) {
+                array_unshift($decorators, $decorator);
+            }
+
+            if ($captcha instanceof Zend_Captcha_Word) {
+                $decorator = array('Captcha', array('captcha' =&gt; $captcha));
+                array_unshift($decorators, $decorator);
+            }
 
-        $this-&gt;setDecorators($decorators);
+            $this-&gt;setDecorators($decorators);
+        }
 
         $this-&gt;setValue($this-&gt;getCaptcha()-&gt;generate());
 
</code></pre>

<p>It makes the render function look like this:</p>

<pre class="highlight"><code>
public function render(Zend_View_Interface $view = null)
    {
        $captcha    = $this-&gt;getCaptcha();
        $captcha-&gt;setName($this-&gt;getFullyQualifiedName());

        if (!$this-&gt;loadDefaultDecoratorsIsDisabled()) {
            $decorators = $this-&gt;getDecorators();

            $decorator  = $captcha-&gt;getDecorator();
            if (!empty($decorator)) {
                array_unshift($decorators, $decorator);
            }

            if ($captcha instanceof Zend_Captcha_Word) {
                $decorator = array('Captcha', array('captcha' =&gt; $captcha));
                array_unshift($decorators, $decorator);
            }

            $this-&gt;setDecorators($decorators);
        }

        $this-&gt;setValue($this-&gt;getCaptcha()-&gt;generate());

        return parent::render($view);
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-27T09:00:19.000+0000</p> 
        <div class="body">
            <p>Should we check for existing captcha decorators?</p>

<pre class="highlight"><code>
/**
 * @group ZF-11609
 */
public function testDecoratorsBeforeAndAfterRendering()
{
    // Disable default decorators is true
    $element = new Zend_Form_Element_Captcha(
        'foo',
        array(
            'captcha'        =&gt; 'Dumb',
            'captchaOptions' =&gt; array(
                'sessionClass' =&gt; 'Zend_Form_Element_CaptchaTest_SessionContainer',
            ),
            'disableLoadDefaultDecorators' =&gt; true,
            'decorators'                   =&gt; array(
                'Description',
                'Errors',
                'Captcha_Word',
                'Captcha',
                'Label',
            ),
        )
    );

    // Before rendering
    $decorators = array_keys($element-&gt;getDecorators());
    $this-&gt;assertSame(
        array(
            'Zend_Form_Decorator_Description',
            'Zend_Form_Decorator_Errors',
            'Zend_Form_Decorator_Captcha_Word',
            'Zend_Form_Decorator_Captcha',
            'Zend_Form_Decorator_Label',
        ),
        $decorators,
        var_export($decorators, true)
    );

    $element-&gt;render();

    // After rendering
    $decorators = array_keys($element-&gt;getDecorators());
    $this-&gt;assertSame(
        array(
            'Zend_Form_Decorator_Description',
            'Zend_Form_Decorator_Errors',
            'Zend_Form_Decorator_Captcha_Word',
            'Zend_Form_Decorator_Captcha',
            'Zend_Form_Decorator_Label',
        ),
        $decorators,
        var_export($decorators, true)
    );

    // Disable default decorators is false
    $element = new Zend_Form_Element_Captcha(
        'foo',
        array(
            'captcha'        =&gt; 'Dumb',
            'captchaOptions' =&gt; array(
                'sessionClass' =&gt; 'Zend_Form_Element_CaptchaTest_SessionContainer',
            ),
            'decorators' =&gt; array(
                'Description',
                'Errors',
                'Captcha_Word',
                'Captcha',
                'Label',
            ),
        )
    );

    // Before rendering
    $decorators = array_keys($element-&gt;getDecorators());
    $this-&gt;assertSame(
        array(
            'Zend_Form_Decorator_Description',
            'Zend_Form_Decorator_Errors',
            'Zend_Form_Decorator_Captcha_Word',
            'Zend_Form_Decorator_Captcha',
            'Zend_Form_Decorator_Label',
        ),
        $decorators,
        var_export($decorators, true)
    );

    $element-&gt;render();
    
    // After rendering
    $decorators = array_keys($element-&gt;getDecorators());
    $this-&gt;assertSame(
        array(
            'Zend_Form_Decorator_Description',
            'Zend_Form_Decorator_Errors',
            'Zend_Form_Decorator_Captcha_Word',
            'Zend_Form_Decorator_Captcha',
            'Zend_Form_Decorator_Label',
        ),
        $decorators,
        var_export($decorators, true)
    );
}
</code></pre>

<pre class="highlight"><code>
There was 1 failure:

1) Zend_Form_Element_CaptchaTest::testDecoratorsBeforeAndAfterRendering
array (
  0 =&gt; 'Zend_Form_Decorator_Captcha',
  1 =&gt; 'Zend_Form_Decorator_Captcha_Word',
  2 =&gt; 'Zend_Form_Decorator_Description',
  3 =&gt; 'Zend_Form_Decorator_Errors',
  4 =&gt; 'Zend_Form_Decorator_Label',
)
--- Expected
+++ Actual
@@ @@
 Array
 (
-    [0] =&gt; Zend_Form_Decorator_Description
-    [1] =&gt; Zend_Form_Decorator_Errors
-    [2] =&gt; Zend_Form_Decorator_Captcha_Word
-    [3] =&gt; Zend_Form_Decorator_Captcha
+    [0] =&gt; Zend_Form_Decorator_Captcha
+    [1] =&gt; Zend_Form_Decorator_Captcha_Word
+    [2] =&gt; Zend_Form_Decorator_Description
+    [3] =&gt; Zend_Form_Decorator_Errors
     [4] =&gt; Zend_Form_Decorator_Label
 )
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thanos Kyritsis (djart) on 2011-07-27T10:31:56.000+0000</p> 
        <div class="body">
            <p>(I would upload the patch as an attachment, but perhaps I don't have the permissions to do so).
Right, here is an improved version that should not fail the above Unit test (it checks for existing captcha decorators):</p>

<pre class="highlight"><code>
--- library/Zend/Form/Element/Captcha.php.orig  2011-07-26 19:02:59.473494443 +0300
+++ library/Zend/Form/Element/Captcha.php   2011-07-27 13:17:00.216725827 +0300
@@ -178,17 +178,24 @@
         $captcha    = $this-&gt;getCaptcha();
         $captcha-&gt;setName($this-&gt;getFullyQualifiedName());
 
-        $decorators = $this-&gt;getDecorators();
+        if (!$this-&gt;loadDefaultDecoratorsIsDisabled()) {
+            $decorators = $this-&gt;getDecorators();
+            $decorator  = $captcha-&gt;getDecorator();
+            $key        = get_class($this-&gt;_getDecorator($decorator, null));
+
+            if (!empty($decorator) &amp;&amp; !array_key_exists($key, $decorators)) {
+                array_unshift($decorators, $decorator);
+            }
 
-        $decorator  = $captcha-&gt;getDecorator();
-        if (!empty($decorator)) {
-            array_unshift($decorators, $decorator);
-        } else {
             $decorator = array('Captcha', array('captcha' =&gt; $captcha));
-            array_unshift($decorators, $decorator);
-        }
+            $key       = get_class($this-&gt;_getDecorator($decorator[0], $decorator[1]));
 
-        $this-&gt;setDecorators($decorators);
+            if ($captcha instanceof Zend_Captcha_Word &amp;&amp; !array_key_exists($key, $decorators)) {
+                array_unshift($decorators, $decorator);
+            }
+
+            $this-&gt;setDecorators($decorators);
+        }
 
         $this-&gt;setValue($this-&gt;getCaptcha()-&gt;generate());
 
</code></pre>

<p>It makes the render function look like this:</p>

<pre class="highlight"><code>
    public function render(Zend_View_Interface $view = null)
    {
        $captcha    = $this-&gt;getCaptcha();
        $captcha-&gt;setName($this-&gt;getFullyQualifiedName());

        if (!$this-&gt;loadDefaultDecoratorsIsDisabled()) {
            $decorators = $this-&gt;getDecorators();
            $decorator  = $captcha-&gt;getDecorator();
            $key        = get_class($this-&gt;_getDecorator($decorator, null));

            if (!empty($decorator) &amp;&amp; !array_key_exists($key, $decorators)) {
                array_unshift($decorators, $decorator);
            }

            $decorator = array('Captcha', array('captcha' =&gt; $captcha));
            $key       = get_class($this-&gt;_getDecorator($decorator[0], $decorator[1]));

            if ($captcha instanceof Zend_Captcha_Word &amp;&amp; !array_key_exists($key, $decorators)) {
                array_unshift($decorators, $decorator);
            }

            $this-&gt;setDecorators($decorators);
        }

        $this-&gt;setValue($this-&gt;getCaptcha()-&gt;generate());

        return parent::render($view);
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-27T12:47:01.000+0000</p> 
        <div class="body">
            <p>Fix and unit tests</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-07-27T13:23:09.000+0000</p> 
        <div class="body">
            <p>@Thanos Kyritsis
You will need to sign and submit a CLA before you can attach your patch to this issue
See here: <a href="http://framework.zend.com/wiki/display/ZFPROP/Contributor+License+Agreement">http://framework.zend.com/wiki/display/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-07-27T13:37:10.000+0000</p> 
        <div class="body">
            <p>Hi Adam,
Thanos wrote the patch. I've tested the patch, write the unit tests and added both files.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-07-28T21:39:09.000+0000</p> 
        <div class="body">
            <p>Patches reviewed and applied to both trunk and 1.11 release branch.</p>

        </div>
    </div>
    </div>

