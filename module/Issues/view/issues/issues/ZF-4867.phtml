<h2>ZF-4867: getTimezoneFromString() uses wrong regular expression</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-07T13:21:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-13T14:10:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Date uses in its function getTimezoneFromString() the following 
code to find a timezone string ("CET" or "Europe/Berlin"):</p>

<p>reg_match('/(\w{3,30})/', $zone, $match);</p>

<p>Unfortunately this regexp does not match the second form of time zone.
Its only matches the first part ("Europe" in the above example). And even
more annoying: it also matches strings of this form: 2008-12-31 (result:
"2008").</p>

<p>To correct this issue, the better regexp would be this:</p>

<p>reg_match('/([[:alpha:]\/]{3,30})/', $zone, $match);</p>

<p>Results:</p>

<p>~$ php -r "\$m=array(); preg_match('/([[:alpha:]\/]{3,30})/','Europe/Berlin', \$m); print_r(\$m);"
Array
(
    [0] =&gt; Europe/Berlin
    [1] =&gt; Europe/Berlin
)
~$ php -r "\$m=array(); preg_match('/([[:alpha:]\/]{3,30})/','2008-12-31 12:00:00', \$m); print_r(\$m);"
Array
(
)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-11-07T14:03:21.000+0000</p> 
        <div class="body">
            <p>The mentioned line does only check if there is a character string.
The proper timezone is checked and set within setTimeZone.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-11-07T14:19:53.000+0000</p> 
        <div class="body">
            <p>Fixed with r12391</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Welzel (gawain) on 2008-11-07T14:20:30.000+0000</p> 
        <div class="body">
            <p>Then please define, what you are refering to as "character string".
If you mean "a string consisting only of letters" than this is the wrong
regexp as "/(\w{3,30})/" also matches numbers.
And if you mean "a string consisting a valid timezone like Europe/Berlin"
its wrong too, because it will only extract "Europe".</p>

<p>Try this with Zend_Date: 
$date = new Zend_Date();
$date-&gt;set('2008-12-31 12:00:00', 'YYYY-MM-dd HH:mm:ss');</p>

<p>It will try to set "2008" as timezone which results in a php-warning.
And this is because getTimezoneFromString() uses the wrong regexp
to extract the timezone from the string.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Welzel (gawain) on 2008-11-07T14:34:36.000+0000</p> 
        <div class="body">
            <p>Thanks for fixing this!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:18.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

