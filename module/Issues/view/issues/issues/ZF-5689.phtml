<h2>ZF-5689: ArrayOf&lt;Type&gt; in wsdl - Zend_Soap_Autodiscovery</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-02-04T10:47:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-02-04T13:31:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Soap_Wsdl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5430">ZF-5430</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I guess it is a bug.. if I use Zend_Soap_Wsdl_Strategy_ArrayOfTypeSequence and write docblock for method like this:</p>

<pre class="highlight"><code>
/** 
 * @param string $session_id
 * @param string[] $type 
 * @param string[] $status 
 * @param string[] $registrar 
 * @return object
 */
</code></pre>

<p>I get in wsdl:</p>

<pre class="highlight"><code>
</code></pre>

<p>only first string[] argument has wsdl type ArrayOfString other have 'string[]'. That is also true for int[] and other arrays.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-02-04T10:57:10.000+0000</p> 
        <div class="body">
            <p>Can you please verify that this has been fixed in ZF 1.7.4? I closed a similar bug for this release, see Ticket ZF-5430</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bojan Mauser (bmauser) on 2009-02-04T11:48:21.000+0000</p> 
        <div class="body">
            <p>Yes, it's OK in 1.7.4. Thanks.</p>

<p>I noticed one more thing about arrays that comes from client request. This is part of soap xml that client send to my zend soap server:</p>

<pre><code>     &lt;type xsi:type="web:ArrayOfString"&gt;
        &lt;!--Zero or more repetitions:--&gt;
            &lt;item xsi:type="xsd:string"&gt;1&lt;/item&gt;
    &lt;item xsi:type="xsd:string"&gt;2&lt;/item&gt;
            &lt;item xsi:type="xsd:string"&gt;3&lt;/item&gt;
     &lt;/type&gt;
</code></pre>

<p>and for $type argument of my method I get:</p>

<pre><code>    stdClass Object
    (
        [item] =&gt; Array
            (
                [0] =&gt; 1
                [1] =&gt; 2
                [2] =&gt; 3
            )
    )
</code></pre>

<p>but if client send this xml in request (only one item):</p>

<pre><code>     &lt;type xsi:type="web:ArrayOfString"&gt;
        &lt;!--Zero or more repetitions:--&gt;
            &lt;item xsi:type="xsd:string"&gt;1&lt;/item&gt;
     &lt;/type&gt;
</code></pre>

<p>I get this for $type method argument:</p>

<pre><code>           stdClass Object
            (
                [item] =&gt; all
            )
</code></pre>

<p>So in the second example [item] property is not an array. I guess it should be, like in first example, only with one element cause I expect array from client. Maybe this is intentional, but I always have to check if
[item]  is an array and if not convert it to array cause my method expects array as argument which can be, for example, passed to foreach loop.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bojan Mauser (bmauser) on 2009-02-04T11:52:04.000+0000</p> 
        <div class="body">
            <p>sory,  in comment above last stdClass object should look like</p>

<p>stdClass Object
(
[item] =&gt; 1
)</p>

<p>not 'all' as value for [item]</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-02-04T11:56:06.000+0000</p> 
        <div class="body">
            <p>this is indeed strange behaviour, but the parsing of WSDL structure and building of requests and responses of it is done by the internal PHP SOAPClient and SOAPServer we only wrap convenience functionality around it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bojan Mauser (bmauser) on 2009-02-04T12:05:13.000+0000</p> 
        <div class="body">
            <p>Ok. Thanks. You can close the ticket.</p>

        </div>
    </div>
    </div>

