<h2>ZF-9759: Zend_Locale_Format::toNumber rounding inconsistency</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-28T02:47:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-29T14:05:10.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.4 (28/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sven Carstens (sven.carstens)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13043/testcaseRounding.php">testcaseRounding.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Locale_Format::toNumber doesn't apply Zend_Locale_Math::round to the supplied value when called without an explicit number_format.
round(1298.85525,2) =&gt; 1298.86
Zend_Locale_Math::round(1298.85525,2) =&gt; 1298.86
Zend_Locale_Format::toNumber(1298.85525,array('precision' =&gt; 2)) =&gt; 1298.85</p>

<p>This patch handles explicit and default number_formats the same way.</p>

<p>--- Format.php-1.10.3   Wed Apr 28 11:42:57 2010
+++ Format.php-1.10.3-fixed Wed Apr 28 11:44:47 2010
@@ -339,14 +339,9 @@
         $format = $options['number_format'];
         if ($format === null) {
             $format  = Zend_Locale_Data::getContent($options['locale'], 'decimalnumber');
-            if (iconv_strpos($format, ';') !== false) {
-                if (call_user_func(Zend_Locale_Math::$comp, $value, 0) &lt; 0) {
-                    $format = iconv_substr($format, iconv_strpos($format, ';') + 1);
-                } else {
-                    $format = iconv_substr($format, 0, iconv_strpos($format, ';'));
                 }
-            }
-        } else {
+
+        if ($format !== null) {
             // seperate negative format pattern when available
             if (iconv_strpos($format, ';') !== false) {
                 if (call_user_func(Zend_Locale_Math::$comp, $value, 0) &lt; 0) {</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-28T10:47:01.000+0000</p> 
        <div class="body">
            <p>Please describe your problem a little bit</p>

<p>We will not change the core without knowing details:
* What is the problem 
* How is it reproduceable
* What's the expected result
* Which locale are you using</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sven Carstens (sven.carstens) on 2010-04-28T23:25:29.000+0000</p> 
        <div class="body">
            <p>What is the problem:
- the output values of Zend_Locale_Format::toNumber are wrong in some cases</p>

<p>How is it reproducable:
- see attached source file</p>

<p>What's the expected result:
- consistent and always correct behaviour, ie. Zend_Locale_Format::toNumber should generate the same output regardless of a explicitly specified number format</p>

<p>Which locale are you using:
- the erratic behaviour is independent of the user locale, the example sets and uses 'en_GB'</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-29T14:05:05.000+0000</p> 
        <div class="body">
            <p>Not reproducable</p>

<p>The examplecode returns all values as expected:</p>

<pre class="highlight"><code>
1298.86
1298.86
1,298.86
1,298.86
</code></pre>

        </div>
    </div>
    </div>

