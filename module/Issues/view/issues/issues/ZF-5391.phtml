<h2>ZF-5391: Flash Media Server 3 - Zend Amf</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-02T01:23:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-11T20:24:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bunal (bunal)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Asked Wade and he asked me to shoot it as a bug.</p>

<p>I've been trying to use serverside remoting in FMS3 with ZendAMF but no luck.
I get "onStatus&gt;info.code: Client.Header.BadVersion" in FMSLiveLog</p>

<p>But when i try to use the samegateway with Flex there is np and eveything works smooth.</p>

<p>Thought it might be smthing related to amf version but FMS3 should also use AMF3?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Erik Scholten (x_ile) on 2009-04-16T07:41:06.000+0000</p> 
        <div class="body">
            <p>I think this issue is indeed FMS3 related. when I checked the $HTTP_RAW_POST_DATA ( <a>php://input</a> ) and FMS3 reports its objectEncoding version as 0x01 not 0x00 or 0x03.  It could be a bug or part of the FMS failsave for connecting to AMF0 encoded servers I don't know.</p>

<p>Anyways, added a check at class Zend_Amf_Request   at function readMessage solved it for me.</p>

<pre class="highlight"><code>
    /**
     * Takes the raw AMF input stream and converts it into valid PHP objects
     *
     * @param  Zend_Amf_Parse_InputStream
     * @return Zend_Amf_Request
     */
    public function readMessage(Zend_Amf_Parse_InputStream $stream)
    {
        $clientVersion = $stream-&gt;readUnsignedShort();
        if (($clientVersion != Zend_Amf_Constants::AMF0_OBJECT_ENCODING)
            // Added Check for 0x01 for FMS. Could be defined a const as well.
            &amp;&amp; ($clientVersion != 0x01) 
            &amp;&amp; ($clientVersion != Zend_Amf_Constants::AMF3_OBJECT_ENCODING)
        ) {
            require_once 'Zend/Amf/Exception.php';
            throw new Zend_Amf_Exception('Unknown Player Version ' . $clientVersion);
        }
</code></pre>

<p>Hope this helps.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wade Arnold (wadearnold) on 2009-05-11T20:24:26.000+0000</p> 
        <div class="body">
            <p>Thanks for the code sample. Will be added to the next mini release.</p>

        </div>
    </div>
    </div>

