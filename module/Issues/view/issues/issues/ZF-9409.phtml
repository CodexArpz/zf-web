<h2>ZF-9409: Zend_Form::getFullyQualifiedName() does not respect elementsBelongTo</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2010-03-11T15:43:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-24T03:06:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8933">ZF-8933</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is an issue with equal named SubForms because they will get the same id rendered.
But while fixing this i realized this is way too complicated.</p>

<p>I found a solution, however that is not consistent to how $element-&gt;getFullyQualifiedName()
works.</p>

<p>This is done by adding setBelongsTo and getBelongsTo to Zend_Form, and setting that when
calling _setElementsBelongTo on a Zend_Form with attached SubForms.</p>

<p>In method getFullyQualifiedName() it will then concat $belongsTo . $name . $elementsBelongTo</p>

<pre class="highlight"><code>
Index: tests/Zend/Form/FormTest.php
===================================================================
--- tests/Zend/Form/FormTest.php        (Revision 21732)
+++ tests/Zend/Form/FormTest.php        (Arbeitskopie)
@@ -1579,7 +1621,17 @@
         $this-&gt;assertSame($this-&gt;form-&gt;getValidValues($data['invalid']), $data['partial']);
     }
 
+    public function testGetFullyQualifiedNameWithElementsBelongTo()
+    {
+        $data = $this-&gt;_setup9350();
+
+        $this-&gt;form-&gt;setView($this-&gt;getView())-&gt;populate($data['valid']);
+        $html = $this-&gt;form-&gt;render();
+        preg_match_all('/id=.fieldset[^\"\']*/', $html, $match);
+        $this-&gt;assertEquals($match[0], array_unique($match[0]));
+    }
+
+
     // Display groups
 
     public function testCanAddAndRetrieveSingleDisplayGroups()
Index: library/Zend/Form.php
===================================================================
--- library/Zend/Form.php       (Revision 21732)
+++ library/Zend/Form.php       (Arbeitskopie)
@@ -860,6 +860,23 @@
         return $this-&gt;getAttrib('name');
     }
 
+    protected $_belongsTo = null;
+
+    public function setBelongsTo($notation)
+    {
+        $notation = $this-&gt;filterName($notation, true);
+        if ('' === $notation) {
+            $notation = null;
+        }
+        $this-&gt;_belongsTo = $notation;
+        return $this;
+    }
+
+    public function getBelongsTo()
+    {
+        return $this-&gt;_belongsTo;
+    }
+
     /**
      * Get fully qualified name
      *
@@ -869,7 +886,25 @@
      */
     public function getFullyQualifiedName()
     {
-        return $this-&gt;getName();
+        $name = $this-&gt;getName();
+
+        if ($this-&gt;isArray() &amp;&amp;
+            null !== ($elementsBelongTo = $this-&gt;getElementsBelongTo())) {
+                $name .= '/' . $elementsBelongTo;
+        }
+
+        if (null !== ($belongsTo = $this-&gt;getBelongsTo())) {
+            $name = $belongsTo . '/' . $name;
+        }
+
+        $path = explode('/', strtr($name, array('[' =&gt; '/', ']' =&gt; '')));
+
+        $name = array_shift($path);
+        
+        if (!empty($path)) {
+           $name .=  '[' . join($path, '][') . ']';
+        }
+        return $name;
     }
 
     /**
@@ -1452,9 +1494,14 @@
             foreach ($this-&gt;getElements() as $element) {
                 $element-&gt;setBelongsTo($array);
             }
+            foreach ($this-&gt;getSubForms() as $subform) {
+                $subform-&gt;setBelongsTo($array);
+            }
         } else {
             if (null !== ($element = $this-&gt;getElement($name))) {
                 $element-&gt;setBelongsTo($array);
+            } else if (null !== ($subform = $this-&gt;getSubForm($name))) {
+                $subform-&gt;setBelongsTo($array);
             }
         }
     }
@@ -1541,6 +1588,7 @@
         $this-&gt;_subForms[$name] = $form;
         $this-&gt;_order[$name]    = $order;
         $this-&gt;_orderUpdated    = true;
+        $this-&gt;_setElementsBelongTo($name);
         return $this;
     }

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-02T08:06:46.000+0000</p> 
        <div class="body">
            <p>Matthew, what do you think about that, it will completely change the way
fieldset id's for Forms and SubForms will be rendered, so i am really unsure about it.</p>

<p>And if we going to implement this, then we could append the fieldset to
fullyName instead of prepending it, there was a Request in the Issue
Tracker for that as well, to make it consistent with the label and
element id's.</p>

        </div>
    </div>
    </div>

