<h2>ZF-6379: AjaxContext -&gt;initContext doesn't set specified context for action</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-22T07:47:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>I've carefully followed the documentation for using AjaxContext.</p>

<p>In my controller, in the init() method, I've specified that a certain action ('check') has an json context:</p>

<p>$this-&gt;_helper-&gt;ajaxContext-&gt;addActionContext('check', 'json');
$this-&gt;_helper-&gt;ajaxContext-&gt;initContext();</p>

<p>This should suffice to make the action switch to JSON when called with XHR. However, this does not happen.
Only when the context is explicitly supplied, it will be used, like this:</p>

<p>$this-&gt;_helper-&gt;ajaxContext-&gt;initContext('json');</p>

<p>However, that means that the <em>whole</em> controller will be using this context, not just a specific action.
What you'd expect, given the documentation, is that after adding the action context, that context will be switched to automatically for that action only.</p>

<p>This exact problem has been noticed by at least 3 different persons on the mailing list, and in one case, a discussion with Matthew resulted in an issue being added here (ZF-3162). Matthew agreed it made sense.</p>

<p>I was hoping this would get fixed in the new 1.8 release, but I've just seen that the code there is still the same. The following code could easily fix it:</p>

<pre><code>    if (empty($format))  {
        $action = $this-&gt;getRequest()-&gt;getActionName();
        $formats = $this-&gt;getActionContexts($action);
        if (count($formats) == 1) {
            $format = $formats[0];
        }
    }
</code></pre>

<p>(to be inserted in AjaxContext.php, line 69)
This is almost exactly the same code as was previously suggested, by the way.</p>

<p>I hope the ZF dev team will seriously consider updating AjaxContext to make it work properly. If I just don't understand how it is supposed to work, I'd appreciate a clear explanation of how to better use AjaxContext.</p>

<p>Thank you very much.</p>

<p>Kind regards,</p>

<p>Raymond</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by James Thomson (jamesthomson) on 2010-02-10T03:19:40.000+0000</p> 
        <div class="body">
            <p>I too experienced this after following the examples here: <a href="http://framework.zend.com/manual/en/zend.controller.actionhelpers.html#zend.controller.actionhelpers.contextswitch.ajaxcontext">http://framework.zend.com/manual/en/…</a></p>

<p>While I agree that this is a minor bug I think that it's impact is more severe in terms of denting the confidence of developers new to the framework, following the examples as I did.</p>

<p>Raymond - thanks very much for the fix.</p>

<p>James.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-02-17T20:48:17.000+0000</p> 
        <div class="body">
            <p>Your request must have a parameter of format=json in it.</p>

<p>Either like this:
<a href="http://www.example.com/mymodule/mycontroller/myaction/format/json">http://example.com/mymodule/mycontroller/…</a></p>

<p>or:</p>

<p><a href="http://www.example.com/mymodule/mycontroller/myaction?format=json">http://example.com/mymodule/mycontroller/…</a></p>

<p>This is mentioned in the documentation at the link that James provided:</p>

<p>"On the client end, your AJAX library will simply request the endpoints '/comment/view', '/comment/form', and '/comment/process', and pass the 'format' parameter: '/comment/view/format/html', '/comment/form/format/html', '/comment/process/format/json'. (Or you can pass the parameter via query string: e.g., "?format=json".)"</p>

        </div>
    </div>
    </div>

