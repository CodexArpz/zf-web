<h2>ZF-1002: Document deleting/updating problem</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-03-02T01:01:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-955">ZF-955</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <h2>Problem was originally reported by Uros in FW-General - <a href="http://www.nabble.com/Zend_Search_Lucene---updating-documents-tf3325986s16154.html#a9246813">http://nabble.com/Zend_Search_Lucene---updating-doâ€¦</a></h2>

<p>i'm trying to find what may be a problem when updating documents. For now I
don't have a clue. Here is my scenario.</p>

<ol><li>open index
1.1 also add setMaxBufferedDocs(1) and setMaxMergeDocs(1)</li>
<li>find by document_id (this is indexed)</li>
<li>if found delete this document</li>
<li>create document from data</li>
<li>add document to index</li>
<li>commit</li>
<li>unset index</li>
</ol><p>If I open index with luke I see that document stored. Then I update some
other, maybe same document. 
And here is the problem. When searching for document_id document is not
found (it's also not found when
searching on front page) so document is added with previous one.</p>

<p>If I call optimize it helps, but I have two same documents in index. If I
update it again both of them gets deleted and then add one document.</p>

<h2>Is there something I'm doing wrong?</h2>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Peter Van Garderen (peter_vg) on 2007-03-06T13:53:51.000+0000</p> 
        <div class="body">
            <p>I am not sure if this is related specifically to this ticket but I am experiencing a similar problem.</p>

<p>After converting from Zend_Lucene_Search 0.2 to 0.8 I can't delete/update a specific document because it is no longer possible to get a search hit on fields that store numeric characters. Of course, I use my application's unique identifiers, assigned to a Keyword field in my index documents, to pick specific documents out of the Zend index. I have tried converting the identifier field from an integer to a string value before adding it as an index document field, changing the document field type from Keyword to Text, changing the name of the field, and changing the document field encoding to ISO iso-8859-1 from utf-8. All to no avail.</p>

<p>The numeric value in the identifier field is, in fact, stored in the index. I can search on it and get a hit using Luke. Also, when I retrieve a document from the index using a Zend Search hit on another field (e.g. Title, Description), I can retrieve and display the corresponding identifier field value. I just can't get a hit on it using Zend Search queries (e.g. $hit = $index-&gt;find('my_identifier_field:'.$numeric_query_value).</p>

<p>I see in the documentation that using the Zend Search Query API is recommended for application-generated Keyword fields such as my_identifier_field. However, I can't determine from the documentation how to match a Query Term to a specific index document field, which is necessary to ensure a match to a unique value in order to retrieve a specific document from the index.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-06T15:49:43.000+0000</p> 
        <div class="body">
            <p>It looks like it's the same problem.</p>

<p>0.8 doesn't search for specified term if it has not entry in terms dictionary of the first index segment.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-06T15:52:24.000+0000</p> 
        <div class="body">
            <p>So it affects for unique fields first of all.</p>

<p>This already fixed.</p>

<p>Please take current SVN version or latest <a href="http://framework.zend.com/download/snapshot">Nightly Snapshot</a>.</p>

<p>PS Please let me know if it helps or doesn't help.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Peter Van Garderen (peter_vg) on 2007-03-06T16:06:09.000+0000</p> 
        <div class="body">
            <p>Hi Alexander,</p>

<p>Yes, I noticed that there was more discussion on this in the forum and that you had posted a fix. I downloaded and installed the latest snapshot (20070306-3762). I rebuilt the index from scratch. Unfortunately, I am still experiencing the exact same problem.</p>

<p>What do you mean by "0.8 doesn't search for specified term if it has not entry in terms dictionary of the first index segment"? Is this something I can fix by the way that I am indexing or querying the documents or is this something that you need address in a code revision?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-06T16:19:59.000+0000</p> 
        <div class="body">
            <ol><li>Zend Search Query API comment:</li>
</ol><h2>Terms contain field information. So, to prepare term query you should do the following:</h2>

<p>$query = new Zend_Search_Lucene_Search_Query_Term(</p>

<h2>                             new Zend_Search_Lucene_Index_Term($numeric_query_value, 'my_identifier_field'));</h2>

<ol><li><p>Have you set the same analyzer before search request?
Query parser uses default analyzer to transform parsed lexemes into terms. Default analyzer skips numbers, so your numeric ids may be reduced to empty string.</p></li>
<li><p>If second step doesn't help. Could you attach to the issue or send me (alexander.v@zend.com) your index and give an example of your query?</p></li>
</ol>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Peter Van Garderen (peter_vg) on 2007-03-06T16:42:10.000+0000</p> 
        <div class="body">
            <p>BINGO! When I use the Term Query as you've shown in step 1 I am getting hits on my numeric field.</p>

<p>I was using the default query parser previously which, as you point out, uses the default analyzer which skips numbers.</p>

<p>Thanks so much for your quick response Alexander!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Peter Van Garderen (peter_vg) on 2007-03-06T16:51:35.000+0000</p> 
        <div class="body">
            <p>I did realize from reading the documentation that a Term Query was the recommended approach but, as I noted earlier, I was confused by the documentation which did not indicate that you could match the Term Query to a specific document field. Perhaps the example in the documentation in section '22.5.2. Term Query' should be revised to read:</p>

<pre><code>$term  = new Zend_Search_Lucene_Index_Term('my_query_term', 'index_document_field_name');
$query = new Zend_Search_Lucene_Search_Query_Term($term);
$hits  = $index-&gt;find($query);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-06T17:49:45.000+0000</p> 
        <div class="body">
            <p>Super! :)</p>

<p>I do agree, that it should be described more clear in a documentation.
I've just made necessary changes.</p>

<p>Thank you for the report!</p>

<h2>PS If you want query parser to include numbers into search, you should switch default analyzer. Use:</h2>

<p>Zend_Search_Lucene_Analysis_Analyzer::setDefault(</p>

<h2>    new Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum_CaseInsensitive());</h2>

<h2>or</h2>

<p>Zend_Search_Lucene_Analysis_Analyzer::setDefault(</p>

<h2>    new Zend_Search_Lucene_Analysis_Analyzer_Common_TextNum());</h2>

<h2>or</h2>

<p>Zend_Search_Lucene_Analysis_Analyzer::setDefault(</p>

<h2>    new Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num());</h2>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-06T17:51:43.000+0000</p> 
        <div class="body">
            <p>Is duplicate of <a href="http://framework.zend.com/issues/browse/ZF-955">ZF-955</a>.
Fixed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Peter Van Garderen (peter_vg) on 2007-03-06T18:43:59.000+0000</p> 
        <div class="body">
            <p>Sorry for starting what turned out to be a discussion thread in your issue tracker. I probably should have used the forum to post my original problem. Anyway, I do appreciate the help.</p>

<p>RE: switching default analyzer. I have switched to using the Utf8Num() analyzer as per your suggestion. Query Parser does now include numbers. That's cool because now it picks up dates that I had in general text fields. I can also continue to use my application's default searchbox to retrieve documents by id by using the identifier field in the basic query term which is handy.</p>

<p>I decided to use Utf8Num() as my default analyzer because I want to index numbers and because I will be internationalizing my application and expect to have to index a variety of scripts. However, Utf8Num() appears to be an extension of the Common() analyzer and not the Utf8() analyzer. How is Utf8Num() different from TextNum() and from Utf8()?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-07T01:55:38.000+0000</p> 
        <div class="body">
            <p>Not a problem :) Please also feel free to mail me directly or post it to ZF mailing lists.</p>

<p>"Num" versions of analyzers are not derived from non-num versions. They are alternative implementations.</p>

<p>Utf8Num treats digits as parts of terms.
Utf8 analyzers have some limitations. First of all they treats all non-ascii characters as letters (part of terms) and use ctype_... functions for ascii subset.
Other thing is that Utf8 analyzers don't have case insensitive versions.
Please take a look at documentation - <a href="http://framework.zend.com/manual/en/zend.search.charset.html#zend.search.charset.utf_analyzer">UTF-8 compatible text analyzer</a>. You can find there more detailed description and workaround if you want to make search  case insensitive</p>

        </div>
    </div>
    </div>

