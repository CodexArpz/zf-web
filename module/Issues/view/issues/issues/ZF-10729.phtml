<h2>ZF-10729: Zend_Mail _formatAddress working incorrect</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-11-23T01:45:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-12-06T03:34:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                M Lehr (milehr)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Dolf Schimmel (Freeaqingme) (freak)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you put a string with with a comma and special chars in the from name, the header get screwed up.</p>

<pre class="highlight"><code> 
$mail = new Zend_Mail();
$mail-&gt;setFrom('bernd@example.org', 'The rabbit, which is Bernd\'s best fr√∂nd!');
$mailHeader = $mail-&gt;getHeaders();

echo $mailHeader['From'][0];
</code></pre>

<p>this will result in</p>

<pre class="highlight"><code>
From: =?ISO-8859-1?Q?The_rabbit=2C_which_is_Bernd=27s_best_fr=F6nd=21?= </code></pre>

<p>the comma will not be encoded in quoted printable and therefor, the sendername will not be quoted so that the email client could not recognize the whole sender name.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kues Michael (michael.kues@telenet.be) on 2010-11-27T05:22:00.000+0000</p> 
        <div class="body">
            <p>Tried to reproduce the behavior, but we could not reproduce it.  The comma is ignored (meaning it is not converted to a hex code in _encodeQuotedPrintable) which is the intended behavior.  As stated by the Quoted-printable encoding mechanism, all ASCII codes within the range 33 and 126 should be ignored.  The comma falls within this range with it's ASCII code 44.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by M Lehr (milehr) on 2010-12-01T08:52:56.000+0000</p> 
        <div class="body">
            <p>hi michael,</p>

<p>thanks for your reply.</p>

<p>yes the comma falls within the range - thats okay.</p>

<p>I think the problem is in Zend_Mail-&gt;_formatAddress.</p>

<pre class="highlight"><code>
protected function _formatAddress($email, $name)
{
    if ($name === '' || $name === null || $name === $email) {
        return $email;
    } else {
        $encodedName = $this-&gt;_encodeHeader($name);
        if ($encodedName === $name &amp;&amp;
                ((strpos($name, '@') !== false) || (strpos($name, ',') !== false))) {
            $format = '"%s" &lt;%s&gt;';
        } else {
            $format = '%s &lt;%s&gt;';
        }
        return sprintf($format, $encodedName, $email);
    }
}
</code></pre>

<p>if $name is set, it will be encoded. So if there is a char which is not in the ASCII range between 33 and 126, this one will be encoded ($encodedName = $this-&gt;_encodeHeader($name);)</p>

<p>But then, the $name will only be double quoted when $encodedName === $name - but this will result in false if there is a char with ASCII code outside of the range 33-126.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-12-04T14:04:22.000+0000</p> 
        <div class="body">
            <p>This would be the correct string, right?</p>

<p>```</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-12-06T03:34:27.000+0000</p> 
        <div class="body">
            <p>Assuming fixed in ZF2</p>

        </div>
    </div>
    </div>

