<h2>ZF-12054: Possible XSS in Zend_View::escape()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-02-12T20:14:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-14T16:02:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Reopened</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>&lt;?php
require_once "Zend/Loader/Autoloader.php";
Zend_Loader_Autoloader::getInstance()-&gt;setFallbackAutoloader(true);
$view = new Zend_View();
$userInput = "' onmouseover='alert(/XSS/)";
?&gt;
<span title="&lt;?php echo $view-&gt;escape($userInput); ?&gt;">Test</span>
</code></pre>

<p>Expected output:</p>

<pre class="highlight"><code>

Actual output with ZF 1.11.8:
</code></pre>

<p>Which results in Javascript being executed on mouse over.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Tomáš Fejfar (tomas.fejfar@gmail.com) on 2012-02-12T20:15:37.000+0000</p> 
        <div class="body">
            <p>via <a href="http://zdrojak.root.cz/zpravicky/vysel-nette-framework-2-0-final/21292/vlakno/#o21292">http://zdrojak.root.cz/zpravicky/…</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2012-02-12T20:58:01.000+0000</p> 
        <div class="body">
            <p>This is not an XSS vector which has resulted from Zend Framework code.</p>

<p>The escape function is intended to be used to convert html special characters into their entites, such as &lt; into &amp;lt; thus preventing injection of further tags into content. If it were to also add slashes, (to ' or ", or both?)  then this would affect the output of many many applications, littering them with superflous slashes which are not actually needed.</p>

<p>Unfortunately, you have decided to use it as a part of escaping a html attribute, not an entire block, it is therefore your responsibility to ensure that user input cannot prematurely end the quoting. (and this should be done through whitelisting your user input).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2012-02-12T21:01:37.000+0000</p> 
        <div class="body">
            <p>To make this clear, consider this example:</p>

<p>$comments = array("I don't like XSS, it puts a crimp in my day");</p>

<p>foreach ($comments as $comment)  {
    echo $view-&gt;escape($comment), "\n";
}</p>

<p>You'd expect:
I don't like XSS, it puts a crimp in my day</p>

<p>Due to your proposed fix to your problem:
I don\'t like XSS, it puts a crimp in my day</p>

<p>This is not desireable.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2012-02-12T21:03:46.000+0000</p> 
        <div class="body">
            <p>Closing as not an issue after getting some agreement from other contributors on IRC.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tomáš Fejfar (tomas.fejfar@gmail.com) on 2012-02-12T21:16:51.000+0000</p> 
        <div class="body">
            <p>I understand how it works and why it does not work in this case. The problem is that (as average developer)  when I call $this-&gt;escape($var) I assume it's safe to  echo the code. There should at least be a warning in the manual for escape(), that you need to call addslashes whenever using escaped content inside tag's attribute. Typical use - user's name as image alt/title - Jim O'Reily, Dwayne "The Rock" Johnson. You can't filter those. At least this problem is enough to debate whether to hide the real implementation in escape method or use the plain old htmlspecialchars without any wrapper.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2012-02-12T21:23:27.000+0000</p> 
        <div class="body">
            <p>Reopened pending security review.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2012-02-12T22:02:10.000+0000</p> 
        <div class="body">
            <p>Call to htmlspecialchars() or htmlentities() from Zend_View_Abstract::escape uses ENT_COMPAT in preference to ENT_QUOTES which would have replaced single quotes with semantically equivalent numeric entities. Unless double quoted attributes are enforceable by the framework, it seems reasonable to switch the flag.</p>

<p>Please note that all security related issues should be reported to zf-security@zend.com in preference to the issue tracker. You can read our security policy at <a href="http://framework.zend.com/security">http://framework.zend.com/security</a>.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tomáš Fejfar (tomas.fejfar@gmail.com) on 2012-02-12T22:07:24.000+0000</p> 
        <div class="body">
            <p>I'm sorry. Didn't knew it. My appologies.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2012-02-12T22:19:43.000+0000</p> 
        <div class="body">
            <p>No worries . I've email the zf-security address with a quick note on this, and copied you in so you can track its progress.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Hujer (mhujer) on 2012-02-13T08:06:52.000+0000</p> 
        <div class="body">
            <p><a href="http://php.vrana.cz/defense-against-xss-in-zend-framework.php">http://php.vrana.cz/defense-against-xss-in-zend-fr…</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jakub Vrána (vrana) on 2012-02-13T18:15:41.000+0000</p> 
        <div class="body">
            <p>To clarify this, the expected output is:</p>

<pre class="highlight"><code>
<span title="' onmouseover='alert(/XSS/)">Test</span>
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2012-02-13T19:12:24.000+0000</p> 
        <div class="body">
            <p>Jakub, noted ;). JIRA just decoded that into a forward slash I think for the comments above.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-14T16:02:06.000+0000</p> 
        <div class="body">
            <p>Where does this issue stand?  Are there any mitigation strategies we could realistically include in 1.12?</p>

        </div>
    </div>
    </div>

