<h2>ZF-7740: Zend_Date's methods getTimestamp() and get(Zend_Date::TIMESTAMP) return different values if date is outside the year range of 1901 to 2038</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-08-31T14:53:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-01T03:20:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Robin Lindroos (robinlindroos)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7731">ZF-7731</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>On my system PHP's date() function can handle dates roughly between the dates 1901 to 2038. Zend_Date also works fine inside this same range but when a date is outside this range the returned unix timestamp produced by calling get(Zend_Date::TIMESTAMP) had the timezone offset added to the timestamp, which is wrong. Code to prove this:</p>

<pre class="highlight"><code>
date_default_timezone_set('EET');
//December 6th 1917 10:10:10
$timestamp = '-1643212190';
$dateObj = new Zend_Date($timestamp);
echo $timestamp . "\n";
echo $dateObj-&gt;getTimestamp() . "\n";
echo $dateObj-&gt;get(Zend_Date::TIMESTAMP) . "\n";
//December 6th 1817 10:10:10
$timestamp = '-4798885790';
$dateObj = new Zend_Date($timestamp);
echo $timestamp . "\n";
echo $dateObj-&gt;getTimestamp() . "\n";
echo $dateObj-&gt;get(Zend_Date::TIMESTAMP);
</code></pre>

<p>This produces the output:</p>

<pre class="highlight"><code>
-1643212190
-1643212190
-1643212190
-4798885790
-4798885790
-4798878590
</code></pre>

<p>Why is the last unix timestamp not the same when calling get(Zend_Date::TIMESTAMP) and calling getTimestamp() when the date is outside the year range of 1901 to 2038? Dates inside this year range get correctly the same unix timestamp from both methods.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-01T00:42:47.000+0000</p> 
        <div class="body">
            <p>Duplicate of already fixed issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robin Lindroos (robinlindroos) on 2009-09-01T00:59:56.000+0000</p> 
        <div class="body">
            <p>Could somebody please explain to me why this behavioir is correct? Why does getTimestamp() and get(Zend_Date::TIMESTAMP) return the same unix timestamp when the date is inside the year range of 1901 to 2038, but they return different values when the date is outside this year range?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-01T02:50:48.000+0000</p> 
        <div class="body">
            <p>Running your example code on SVN the following is returned:</p>

<pre class="highlight"><code>
-1643212190
-1643212190
-1643212190
-4798885790
-4798885790
-4798885790
</code></pre>

<p>As this issue is marked as fixed for the next minor release I don't see a problem as all works like it should.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robin Lindroos (robinlindroos) on 2009-09-01T02:58:12.000+0000</p> 
        <div class="body">
            <p>Ok, so there was a bug. I did not understand that from your first comment. I thougt you sed it SHOULD work like I had reported :) But ok, thanks for this!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-01T03:20:00.000+0000</p> 
        <div class="body">
            <p>You gave the second example at a time where the other issue was already closed for the next minor release.
And at night I normally sleep... therefor the delay in the response ;-)</p>

        </div>
    </div>
    </div>

