<h2>ZF-1832: Zend_Date::setWeekDay wrong result for a week overlaping 2 years</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-08-08T10:49:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-11-15T14:39:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.2 (25/Sep/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                matthieu (matthieu)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Test code</p>

<pre class="highlight"><code>
     function test_week_zendsetweekday()
     {
        $date = new Zend_Date('2006-01-01','YYYY-MM-dd', 'en');
        $date-&gt;setWeekday(1);
        
        $this-&gt;assertEqual('2005-12-26', $date-&gt;toString("Y-m-d"));
     }
</code></pre>

<p>Expected result : '2005-12-26'</p>

<p>Actual result: '2006-01-02'</p>

<p>I couldn't find a fix as the date class is fairly complicated.
This bug is a critical bug.</p>

<p>Edit: My version of a setWeekday(1)</p>

<pre class="highlight"><code>
if( $date-&gt;toString('N') &gt; 1)
{
        $date = $date-&gt;subDay($date-&gt;toString('N')-1);
}
        
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-08-16T15:12:23.000+0000</p> 
        <div class="body">
            <p>Just for completeness...
Your testcode would never work !
"Y-m-d" returns YEAR - MINUTE - DAY instead of year-month-day...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-08-16T15:13:32.000+0000</p> 
        <div class="body">
            <p>Fixed with SVN 6105</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by matthieu (matthieu) on 2007-08-16T15:24:39.000+0000</p> 
        <div class="body">
            <p>Thomas, I actually do this</p>

<pre class="highlight"><code>
Zend_Date::setOptions(array('format_type' =&gt; 'php'));
</code></pre>

<p>For the story Im planning to stop using zend_date as it is way too slow for my use (like creating 365+ dates which takes too much time considering the work one date object has to do (checking locale, etc...))
But I guess Zend_Date is perfect when you need to create one date and work on it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-08-16T17:27:34.000+0000</p> 
        <div class="body">
            <p>Zend_Date is actually not allowed to use the new date object of PHP as the Zend Framework uses 5.1.4...</p>

<p>When the requirements are raised we are able to change this to work with the internal php functions, which will raise the speed.</p>

<p>Btw:
Why should anyone use 365+ objects simultaneously ???
This is nonsense... even if you use 365+ objects of any other framework class (Zend_Db for example) you will see massively speed problems.</p>

<p>It's always better to rely on existing objects...</p>

<p>And related to checking locale... there is a chapter on how to speed locale useage...</p>

<p>Anyway... it you have ideas of how to speed up Zend_Date my ears are open...
But without the useage of the date object which was included in 5.2 I see not very much ways to do this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-13T15:40:36.000+0000</p> 
        <div class="body">
            <p>Branch integration</p>

        </div>
    </div>
    </div>

