<h2>ZF-1587: Allow variables to be passed to render()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-06-19T11:25:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It would be useful to be able to pass variables to render() that will then be available to the view script.</p>

<p>e.g. main view script:</p>

<pre class="highlight"><code>
&lt;?php 
</code></pre><h1><code>data 1</code></h1><code>
$this-&gt;render('_table.phtml', array('tableData'=&gt;$this-&gt;dataset1);
</code><h1><code>data 2</code></h1><code>
$this-&gt;render('_table.phtml', array('tableData'=&gt;$this-&gt;dataset2);
?&gt;
</code>

<p>then, $tableData would be available only within _table.phtml</p>

<p><em>Suggested Patch</em></p>

<pre class="highlight"><code>
Index: Zend/View.php
===================================================================
--- Zend/View.php   (revision 5379)
+++ Zend/View.php   (working copy)
@@ -43,6 +43,9 @@
      */
     protected function _run()
     {
+        if (is_array(func_get_arg(1))) {
+            extract(func_get_arg(1));
+        }
         include func_get_arg(0);
     }
 }
Index: Zend/View/Abstract.php
===================================================================
--- Zend/View/Abstract.php  (revision 5379)
+++ Zend/View/Abstract.php  (working copy)
@@ -57,6 +57,13 @@
     private $_file = null;
 
     /**
+     * Script variables for file
+     *
+     * @var array
+     */
+    private $_scriptVariables = null;
+
+    /**
      * Instances of helper objects.
      *
      * @var array
@@ -756,16 +763,19 @@
      * Processes a view script and returns the output.
      *
      * @param string $name The script script name to process.
+     * @param array $scriptVariables Additional variables for the script.
      * @return string The script output.
      */
-    public function render($name)
+    public function render($name, $scriptVariables=null)
     {
         // find the script file name using the parent private method
         $this-&gt;_file = $this-&gt;_script($name);
+        $this-&gt;_scriptVariables = $this-&gt;_script($scriptVariables);
         unset($name); // remove $name from local scope
+        unset($scriptVariables); // remove $scriptVariables from local scope
 
         ob_start();
-        $this-&gt;_run($this-&gt;_file); 
+        $this-&gt;_run($this-&gt;_file, $this-&gt;_scriptVariables); 
 
         return $this-&gt;_filter(ob_get_clean()); // filter output
     }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-11-16T11:00:07.000+0000</p> 
        <div class="body">
            <p>This is implemented via the partial() and partialLoop() helpers of the Zend_View Enhanced proposal, and is available now in the incubator. It will be released as part of 1.1.0</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-12-11T15:10:23.000+0000</p> 
        <div class="body">
            <p>Partial and PartialLoop view helpers merged to core.</p>

        </div>
    </div>
    </div>

