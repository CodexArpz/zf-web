<h2>ZF-321: Allow other HTTP status codes in Zend_Controller_Action::_redirect()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2006-08-15T20:20:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.6.0 (16/Dec/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Willie Alberty (willie)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In some cases, it might not be appropriate to use the default 302 (Found) response code for a redirect.</p>

<p>The patch below adds an optional second parameter to {{Zend_Controller_Action::_redirect()}}, accepting the 3xx class HTTP response code to use.</p>

<pre class="highlight"><code>
Index: Action.php
===================================================================
--- Action.php  (revision 962)
+++ Action.php  (working copy)
@@ -184,18 +184,28 @@
     /**
      * Redirect to another URL
      *
+     * Normally sends a 302 (Found) HTTP response. You may optionally provide a
+     * different 3xx status code to use. See RFC 2616, section 10.3.
+     *
      * @param string $url
+     * @param integer $statusCode (optional)
      */
-    final protected function _redirect($url)
+    final protected function _redirect($url, $statusCode = 302)
     {
         if (headers_sent()) {
             throw new Zend_Controller_Action_Exception('Cannot redirect because headers have already been sent.');
         }
+        if (($statusCode &lt; 300) || ($statusCode &gt; 399)) {
+            throw new Zend_Controller_Action_Exception('The redirection status code must be in the 3xx range.');
+        }
 
         // prevent header injections
         $url = str_replace(array("\n", "\r"), '', $url);
 
         // redirect
+        if ($statusCode != 302) {
+            header("HTTP/ $statusCode");
+        }
         header("Location: $url");
         exit();
     }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-08T22:09:13.000+0000</p> 
        <div class="body">
            <p>Implemented in subversion revision 1506 in incubator. 3xx headers that allow body content are allowed; see the $_redirectHeaders property for the full list.</p>

<p>302 header is the default, as this is the header sent by PHP with Location headers; when used, no additional HTTP headers are sent.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Willie Alberty (willie) on 2006-11-08T22:21:35.000+0000</p> 
        <div class="body">
            <p>Thanks for implementing this patch. One suggestion: Since you're restricting the 3xx codes that may be used, an exception should be thrown if an unusable code was provided instead of silently changing it to 302.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-10T12:49:32.000+0000</p> 
        <div class="body">
            <p>Most current SVN now throws an exception, as requested. :-)</p>

        </div>
    </div>
    </div>

