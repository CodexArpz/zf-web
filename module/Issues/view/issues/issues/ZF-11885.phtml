<h2>ZF-11885: Zend_Controller_Action_Helper_Cache does not encode cache key on remove</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-11-11T16:20:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-07-04T10:47:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
            <li>FixForZF1.12</li>
            <li>cache</li>
            <li>state:need-feedback</li>
            <li>zf-caretaker-adamlundrigan</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15056/ZF-11885.patch">ZF-11885.patch</a></li>
            <li><a href="/issues/secure/attachment/15096/ZF-11885_v2.patch">ZF-11885_v2.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As the start method does, the removePage function should wrap $relativeUrl with _encodeCacheId - it seems bad practice to automatically do it on save but not on remove.</p>

<p>Replace line 142 with:</p>

<p>return $cache-&gt;remove($this-&gt;_encodeCacheId($relativeUrl));</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-04T19:11:26.000+0000</p> 
        <div class="body">
            <p>Attached a patch which provides a reproducing test case and fix</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-12T12:31:57.000+0000</p> 
        <div class="body">
            <p>My initial fix breaks backwards-compatibility for those who have implemented a workaround whereby they pre-encoded the relative URL before passing it on to the {{remove}} method.  I've updated my fix to tirst try removing by an encoded {{$relativeUrl}}, and if that fails it removes by raw {{$relativeUrl}}.  Example</p>

<pre class="highlight"><code>
$result = $cache-&gt;remove($this-&gt;_encodeCacheId($relativeUrl));
if (is_null($result) ) {
    $result = $cache-&gt;remove($relativeUrl);
}
return $result;
</code></pre>

<p>I've added an additional test case to enforce the change, and all unit tests in Controller suite still pass after patch is applied.</p>

<p>I've not had much experience using this cache action helper.  Are there any potential side-effects of doing this two-step remove that I am not taking into account?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-31T23:19:59.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk r24853</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gregory Art (artisson) on 2012-07-04T10:47:27.000+0000</p> 
        <div class="body">
            <p>Doesn't this solution introduce another problem ?</p>

<p>With the Page cache, and the Static Backend , the name of the stored file is not encoded and the file is never removed.</p>

<p>If we call $cache-&gt;remove($relativeUrl); without encoding , the Zend_Cache_Core method return the "Invalid id or tag '$string' : must use only [a-zA-Z0-9_]" execption.</p>

<p>Calling directly the backend method (Static_Cache) Seems to solve the problem.</p>

<p>But i don't know if it's appropriate.</p>

        </div>
    </div>
    </div>

