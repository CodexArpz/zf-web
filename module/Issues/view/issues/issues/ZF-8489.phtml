<h2>ZF-8489: Zend_Validate_Callback does not propagate context</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-07T08:16:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-12-08T10:06:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Paul Mitchell (libertus)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>According to Reference Guide ยง23.3.3, note "Validation Context" - "Zend_Form_Element::isValid() supports an additional argument, $context. Zend_Form::isValid() passes the entire array of data being processed to $context when validating a form, and Zend_Form_Element::isValid(), in turn, passes it to each validator."</p>

<p>The current trunk version of Zend_Validate_Callback does not propagate this optional context to the callback.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-12-07T08:34:10.000+0000</p> 
        <div class="body">
            <p>The manual section you are referring to is from Zend_Form.</p>

<p>Note that $context is only used and valid for Zend_Form but not for Zend_Validate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-12-07T08:35:38.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue.</p>

<p>Note that there is already a proposal written which should act as gateway/validator for context.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-12-07T08:49:04.000+0000</p> 
        <div class="body">
            <p>Thomas -- Please pass $context if available on to the callback so end-users do not need to build their own validators.</p>

<p>Yes, this may be Zend_Form specific, but there's no reason on generic validators such as this not to honor it. If the callback does not accept the parameter, it will simply be ignored.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-12-07T10:21:23.000+0000</p> 
        <div class="body">
            <p>I still don't see this being a bug of Zend_Validate_Callback.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Paul Mitchell (libertus) on 2009-12-08T05:34:34.000+0000</p> 
        <div class="body">
            <p>Although I agree with you Thomas, I have to side with Matthew on this. The lack of context propagation unnecessarily limits the usefulness of the validator. For instance, I've patched my version of Zend_Validate_Callback to pass on the context and wrote the classic "do the passwords match on this form" validation as a one-line static method on the controller rather than a separate class.</p>

<p>I'm happy for this issue to be reclassified as an enhancement if that is more appropriate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-12-08T09:19:50.000+0000</p> 
        <div class="body">
            <p>Fixed this bug with r19529. (In my eyes this is still a feature request and not a bug!)</p>

<p>Note that this change breaks BC and is therefor not backported to 1.9.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Paul Mitchell (libertus) on 2009-12-08T10:06:18.000+0000</p> 
        <div class="body">
            <p>Thank you, Thomas</p>

        </div>
    </div>
    </div>

