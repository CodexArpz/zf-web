<h2>ZF-5570: Flex ArrayCollection only mapping from PHP to Flex not the other way around</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-16T16:08:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-15T18:23:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11704/ArrayCollectionMappingBug.zip">ArrayCollectionMappingBug.zip</a></li>
            <li><a href="/issues/secure/attachment/11705/ArrayCollectionMappingBugFlexApp.zip">ArrayCollectionMappingBugFlexApp.zip</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello, I've tried everything to pass an ArrayCollection from Flex to the PHP side without success.</p>

<p><em>Step 1</em>
created ArrayCollection vo in php flex/messaging/io/ArrayCollection.php
&lt;?php
class ArrayCollection{
    //public $_explicitType = "mx.collections.ArrayCollection";
    var $_explicitType = "flex.messaging.io.ArrayCollection";</p>

<pre><code>var $source = array();

function ArrayCollection()
{
    $this-&gt;source = array();
}
</code></pre>

<p>}</p>

<p><em>Step 2</em>
included the ArrayCollection.php file and set the class map in the amf.php gateway
$server-&gt;setClassMap('flex.messaging.io.ArrayCollection', 'ArrayCollection');</p>

<p><em>Step 3</em>
created the service class.</p>

<p><em>Step 4</em>
To test mapping bidirectionally I made a service method called returnIt which takes a object and returns it.</p>

<p><em>Step 5</em> 
create flex app to invoke service method.</p>

<p>I have checked inside the returnIt method with Zend Logger that infact the ArrayCollection was being mapping correctly.  But then something happens and the script aborts and the ArrayCollection is never returned to Flex..</p>

<p>I've mapped my other custom classes successfully, just not for the Flex ArrayCollection.</p>

<p>Here are the relevant debugging messages..</p>

<p><em>From Flex Debugger (using AMF3 NetConnection):</em>
AMFPHP.onNetStatus NetConnection.Call.BadVersion</p>

<p><em>From Flex Debugger (using RemoteObject):</em>
[FaultEvent fault=[RPC Fault faultString="Channel disconnected" faultCode="Client.Error.DeliveryInDoubt" faultDetail="Channel disconnected before an acknowledgement was received"] messageId="43D17271-865C-EC1E-E1CB-E1DC89C39167" type="fault" bubbles=false cancelable=true eventPhase=2]</p>

<p><em>From my PHP error_log:</em></p>

<p>[16-Jan-2009 18:40:52] PHP Warning:  Invalid argument supplied for foreach() in /Users/panupan/Zend/workspaces/DefaultWorkspace/bbahh/library/Zend/Amf/Parse/Amf3/Deserializer.php on line 388</p>

<p><em>The returned error message (as seen from ServiceCapture) when using the Flex RemoteObject and Zend AMF sever set to production false:</em></p>

<p>extendedData (null): null
faultCode (Number): 0
faultDetail (String): #0 /Users/panupan/Zend/workspaces/DefaultWorkspace/bbahh/library/Zend/Amf/Server.php(291): Zend_Amf_Server-&gt;_loadCommandMessage(Object(Zend_Amf_Value_Messaging_CommandMessage))</p>

<h1>1 /Users/panupan/Zend/workspaces/DefaultWorkspace/bbahh/library/Zend/Amf/Server.php(384): Zend_Amf_Server-&gt;_handle(Object(Zend_Amf_Request_Http))</h1>

<h1>2 /Users/panupan/Zend/workspaces/DefaultWorkspace/bbahh/public/amf.php(28): Zend_Amf_Server-&gt;handle()</h1>

<h1>3 {main}</h1>

<p>faultString (String): CommandMessage::12 not implemented
rootCause (null): null
correlationId (String): 5519AEBD-8877-6AB3-5C38-E1DC89BB3AF1
clientId (String): 393BE507-F7CD-ECC8-C360-0000301BD7EA
destination (null): null
messageId (String): 47D34E84-7B65-E269-4A28-00006AA3EDD4
timestamp (String): 123214997300
timeToLive (Number): 0
headers (Object):</p>

<p>body (null): null</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Panupan Sriautharawong (lionpeal) on 2009-01-16T16:12:28.000+0000</p> 
        <div class="body">
            <p>PHP side source code.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Panupan Sriautharawong (lionpeal) on 2009-01-16T16:14:13.000+0000</p> 
        <div class="body">
            <p>Flex side source code</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nikola Petkanski (dinamic) on 2009-03-19T03:32:54.000+0000</p> 
        <div class="body">
            <p>I've came upon the very same issue using ZF 1.7.0 and 1.7.7.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nikola Petkanski (dinamic) on 2009-03-19T04:13:31.000+0000</p> 
        <div class="body">
            <p>I've just found a workaround for this issue.</p>

<p>Here is the corresponding code:</p>

<h1>start: library/Zend/Amf/Parse/Amf3/Deserializer.php:388</h1>

<p>// Add properties back to the return object.
foreach($properties as $key=&gt;$value) {
    if($key) {
        $returnObject-&gt;$key = $value;
    }
}</p>

<h1>end: library/Zend/Amf/Parse/Amf3/Deserializer.php:388</h1>

<p>It seems at some point $properties is left to a value of NULL, thus foreach() fails.
To workaround the issue you can simply set one line before the foreach() like that:</p>

<p>if (!is_array($properties)) $properties = array();</p>

<p>Another solutions might be to use something similar:</p>

<p>// Check for any properties defined
if (is_array($properties))
{
    // Add properties back to the return object.
    foreach($properties as $key=&gt;$value) {
        if($key) {
            $returnObject-&gt;$key = $value;
        }
    }
}</p>

<p>There is no notable difference in using any of the methods.</p>

<p>Please note that this is a workaround! An official fix for the issue still has to be released.</p>

<p>Best regards,</p>

<p>Nikola Petkanski
PHP Developer
<a href="http://www.e-man.co.uk/">http://www.e-man.co.uk/</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Morgan Gustafsson (bloomboy) on 2009-04-09T06:10:56.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>The $properties array is not defined for externalizable objects such as {ArrayCollection} and {ObjectProxy}.
Look at switch/case starting on 335.</p>

<p>My solution was to insert (on row 346):
$properties = array();</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2011-08-15T18:23:55.000+0000</p> 
        <div class="body">
            <p>Fixed in r24385 using suggested workaround (seem fine to cast $properties to an array if not already in that form).</p>

        </div>
    </div>
    </div>

