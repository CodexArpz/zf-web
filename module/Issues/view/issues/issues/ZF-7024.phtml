<h2>ZF-7024: Create Zend_Application_Ressource_Cache to configure Zend_Cache instances</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-06-16T04:30:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-30T07:09:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.5 (26/May/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                julien PAULI (doctorrock83)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application_Resource</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7057">ZF-7057</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12273/Cache.php">Cache.php</a></li>
            <li><a href="/issues/secure/attachment/12274/CacheTest.php">CacheTest.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Create Zend_Application_Ressource_Cache to configure Zend_Cache instances</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-09-29T11:44:42.000+0000</p> 
        <div class="body">
            <p>First ideas attached as patch</p>

<p>I like the idea about "shareToZendObjects' as some applications would only require one hole global cache. This option can be usefull.
We could improve it by providing a way to customise the Zend classes to be given to the cache instance.</p>

<p>Any suggestions ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-10-16T07:19:49.000+0000</p> 
        <div class="body">
            <p>This issue was resolved with the introduction of the cachemanager resource plugin, which will be available as of 1.10.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2009-10-17T08:24:42.000+0000</p> 
        <div class="body">
            <p>Will add a new Zend_Application_Resource_CacheManager issue (when it's added to the Jira list) concerning the "shareToZendObjects". Until that issue can be created, I have reopened this one so it's not lost on my radar! I will close the moment the new issue is opened.</p>

<p>In the meantime, I don't believe I will add the shareToZendObjects method completely as-is. It has two problems:</p>

<p>1) Zend_Cache_Manager is intended to allow for the lazy loading of caches. However, the method requires an upfront object on every invocation.
2) The method adds the cache to all of these components without knowing in advance which will be used. Again, forcing a per-request cache object requirement.</p>

<p>The cleanest resolution, I can think of right now, is to enable CacheManager support in all the OTHER resources by allowing a new configuration setting which defines the name of a cache configuration registered with the Cache Manager. The resource may then ensure the CacheManager resource is bootstrapped, and pull out the correct cache as needed if that specific resource has been used by the application. This would also allow individual resource control over what cache to use.</p>

<p>Nevertheless, I do see the original solution as something of a massive but simple over-attack. It should be added, and documented, as such with a detailed description of it's impact. It should also be implemented without overriding the per-resource CacheManager settings. This would allow the application of the method as a global default to cover all bases, while not preventing more specific configuration via the Cache Manager.</p>

<p>I'll add this in the upcoming week to Zend_Application_Resource_CacheManager in the Incubator. The other resources will need to follow suit once the class hits the trunk, but hopefully everyone will see the benefits.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2010-04-30T07:09:10.000+0000</p> 
        <div class="body">
            <p>Resolving given we have a CacheManager resource. If someone wants to persue a global share feature to Zend objects, it should be separately submitted (most likely for ZF 2.0).</p>

        </div>
    </div>
    </div>

