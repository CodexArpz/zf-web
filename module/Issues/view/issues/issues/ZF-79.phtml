<h2>ZF-79: Zend_Db_Pdo_Mssql uninitialized variable (TRAC#89 darby)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-20T23:18:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.2.0 (29/Oct/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Zend Framework (zend_framework)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-234">ZF-234</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><a href="http://framework.zend.com/developer/ticket/89">http://framework.zend.com/developer/ticket/89</a></p>

<p>Rob Allen confirms this as a bug:</p>

<p>message from Jan Pieper:</p>

<p>I´ve found a variable where I can´t see where it comes from. It is not initialized and nothing.</p>

<p>Zend/Db/Pdo/Mssql.php:137 $order = implode(',', $parts['order']);</p>

<p>What is $parts? (Revision: 464)</p>

<p>-- Jan Pieper</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Zend Framework (zend_framework) on 2006-06-20T23:19:20.000+0000</p> 
        <div class="body">
            <p>06/05/06 11:20:07: Modified by gavin</p>

<p>The code in Zend/Db/Pdo/Mssql.php is not consistent with information presented here: <a href="http://lists.bestpractical.com/pipermail/rt-devel/2005-June/007339.html">http://lists.bestpractical.com/pipermail/rt-devel/…</a></p>

<p>Hopefully, someone familiar with MSSQL will volunteer a patch :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Justin Plock (jplock) on 2006-08-02T15:33:07.000+0000</p> 
        <div class="body">
            <p>{{   /**
    * Adds an adapter-specific LIMIT clause to the SELECT statement.
    *
    * @link <a href="http://lists.bestpractical.com/pipermail/rt-devel/2005-June/007339.html">http://lists.bestpractical.com/pipermail/rt-devel/…</a>
    * @return string
    */
   public function limit($sql, $count, $offset)
   {
       if ($count) {</p>

<pre><code>       $orderby = stristr($sql, 'ORDER BY');
       if ($orderby !== false) {
           $sort = (stripos($orderby, 'desc') !== false) ? 'desc' : 'asc';
           $order = str_ireplace('ORDER BY', '', $orderby);
           $order = trim(preg_replace('/ASC|DESC/i', '', $order));
       }

       $sql = preg_replace('/^SELECT /i', 'SELECT TOP '.($count+$offset).' ', $sql);

       $sql = 'SELECT * FROM (SELECT TOP '.$count.' * FROM ('.$sql.') AS inner_tbl';
       if ($orderby !== false) {
           $sql .= ' ORDER BY '.$order.' ';
           $sql .= (stripos($sort, 'asc') !== false) ? 'DESC' : 'ASC';
       }
       $sql .= ') AS outer_tbl';
       if ($orderby !== false) {
           $sql .= ' ORDER BY '.$order.' '.$sort;
       }
  }
  return $sql;
</code></pre>

<p>}}}</p>

<p>I've found this code works pretty well in some other applications I've done</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Justin Plock (jplock) on 2006-08-02T15:38:25.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
   /**
    * Adds an adapter-specific LIMIT clause to the SELECT statement.
    *
    * @link <a href="http://lists.bestpractical.com/pipermail/rt-devel/2005-June/007339.html">http://lists.bestpractical.com/pipermail/rt-devel/…</a>
    * @return string
    */
   public function limit($sql, $count, $offset)
   {
       if ($count) {

           $orderby = stristr($sql, 'ORDER BY');
           if ($orderby !== false) {
               $sort = (stripos($orderby, 'desc') !== false) ? 'desc' : 'asc';
               $order = str_ireplace('ORDER BY', '', $orderby);
               $order = trim(preg_replace('/ASC|DESC/i', '', $order));
           }

           $sql = preg_replace('/^SELECT /i', 'SELECT TOP '.($count+$offset).' ', $sql);

           $sql = 'SELECT * FROM (SELECT TOP '.$count.' * FROM ('.$sql.') AS inner_tbl';
           if ($orderby !== false) {
               $sql .= ' ORDER BY '.$order.' ';
               $sql .= (stripos($sort, 'asc') !== false) ? 'DESC' : 'ASC';
           }
           $sql .= ') AS outer_tbl';
           if ($orderby !== false) {
               $sql .= ' ORDER BY '.$order.' '.$sort;
           }
      }
      return $sql;
  }
</code></pre>

<p>Let's try this again.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Justin Plock (jplock) on 2006-08-02T15:43:43.000+0000</p> 
        <div class="body">
            <p>I don't think I have access to actually make this change in the SVN repository, but I believe this new limit() method will resolve this issue.</p>

        </div>
    </div>
    </div>

