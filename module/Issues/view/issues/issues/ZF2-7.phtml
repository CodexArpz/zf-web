<h2>ZF2-7: Zend_Config_Xml support for namespaces attributes</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-31T14:30:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-29T10:49:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11510/patch.diff">patch.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This little patch will add support in Zend_Config_Xml for namespaces attributes.
This patch is for file Zend/Config/Xml.php in  ZF 1.6.0RC3 
\
\</p>

<pre class="literal">
--- Xml.php     2008-07-21 18:31:27.000000000 +0200
+++ XmlNew.php  2008-08-31 23:28:35.000000000 +0200
@@ -143,26 +143,32 @@
         $config = array();
 
         // Search for parent node values
-        if (count($xmlObject-&gt;attributes()) &gt; 0) {
-            foreach ($xmlObject-&gt;attributes() as $key =&gt; $value) {
-                if ($key === 'extends') {
-                    continue;
-                }
+        $aNamespaces = array_merge(array(''), array_keys($xmlObject-&gt;getNamespaces(true)));
+        foreach($aNamespaces as $sNamespace) {
+            $aAttributes = empty($sNamespace) ? $xmlObject-&gt;attributes() : $xmlObject-&gt;attributes($sNamespace, true);
+            if (count($aAttributes) &gt; 0) {
+                foreach ($aAttributes as $key =&gt; $value) {
+                    if (!empty($sNamespace)) {
+                        $key = sprintf('%s:%s', $sNamespace, $key);
+                    }
+                    if ($key === 'extends') {
+                        continue;
+                    }
 
-                $value = (string) $value;
+                    $value = (string) $value;
 
-                if (array_key_exists($key, $config)) {
-                    if (!is_array($config[$key])) {
-                        $config[$key] = array($config[$key]);
-                    }
+                    if (array_key_exists($key, $config)) {
+                        if (!is_array($config[$key])) {
+                            $config[$key] = array($config[$key]);
+                        }
 
-                    $config[$key][] = $value;
-                } else {
-                    $config[$key] = $value;
+                        $config[$key][] = $value;
+                    } else {
+                        $config[$key] = $value;
+                    }
                 }
             }
         }
-
         // Search for children
         if (count($xmlObject-&gt;children()) &gt; 0) {
             foreach ($xmlObject-&gt;children() as $key =&gt; $value) {
@@ -176,7 +182,19 @@
                         $value = $this-&gt;_toArray($value);
                     }
                 } else {
-                    $value = (string) $value;
+                    // Search also for namespaces attributes
+                    $bNamespacesAttributesExists = false;
+                    $aNamespaces = array_keys($xmlObject-&gt;getNamespaces(true));
+                    foreach($aNamespaces as $sNamespace) {
+                        if (count($value-&gt;attributes($sNamespace, true)) &gt; 0) {
+                            $value = $this-&gt;_toArray($value);
+                            $bNamespacesAttributesExists = true;
+                            break;
+                        }
+                    }
+                    if (!$bNamespacesAttributesExists) {
+                        $value = (string) $value;
+                    }
                 }
 
                 if (array_key_exists($key, $config)) {
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2009-03-21T13:08:05.000+0000</p> 
        <div class="body">
            <p>What advantages does this give Zend_Config? Could you provide a use-case and sample config files?</p>

<p>Thanks,</p>

<p>Rob...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jan Pieper (jpieper) on 2009-11-20T01:24:24.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>www.google.de/"&gt;
    </code></pre>

<pre class="highlight"><code>array
  'production' =&gt; 
    array
      'dummy' =&gt; string '' (length=0)</code></pre>

<pre class="highlight"><code>array
  'production' =&gt; 
    array
      'google:name' =&gt; string 'test' (length=4)
      'dummy' =&gt; string '' (length=0)</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-21T10:25:15.000+0000</p> 
        <div class="body">
            <p>Reassigned to component maintainer</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2011-05-27T01:58:28.000+0000</p> 
        <div class="body">
            <p>Moved to ZF2 as this is a feature improvement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-04-28T16:13:32.000+0000</p> 
        <div class="body">
            <p>Ben: Any thoughts on this for ZF2?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2012-04-29T10:49:07.000+0000</p> 
        <div class="body">
            <p>The way XML (and every reader I know so far) works, is that unknown namespaces are skipped/ignored, and not blindly parsed. One reason is that this could lead to unwanted results. Closing the issue.</p>

        </div>
    </div>
    </div>

