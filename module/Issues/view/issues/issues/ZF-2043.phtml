<h2>ZF-2043: Unappealing From header</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-10-04T13:10:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-26T08:48:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Satoru Yoshida (satoruyoshida)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3912">ZF-3912</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When a letter is sent and the message does not provide a name 
for the sender then the From-header is set with empty brackets.</p>

<pre class="highlight"><code>
$mail-&gt;setFrom('adress@mail.ca');
</code></pre>

<p>Results as
From :  "" <a href="mailto:adress@mail.ca">adress@mail.ca</a></p>

<p>One would expect the from-header not to include empty brackets "".</p>

<p>The setFrom function of the Zend_Mail class should be changed as follows</p>

<pre class="highlight"><code>

/**
* Sets From-header and sender of the message
*
* @param  string    $email
* @param  string    $name     optional
* @return Zend_Mail Provides fluent interface
* @throws Zend_Mail_Exception if called subsequent times
*/
public function setFrom($email, $name = '')
{
        if ($this-&gt;_from === null) {
            $email = strtr($email,"\r\n\t",'???');
            $this-&gt;_from = $email;

            if ($name != '') {
                $name = '"' . $this-&gt;_encodeHeader($name) . '" ';
            }

            $this-&gt;_storeHeader('From', $name .' &lt;'.$email.'&gt;', true);
        } else {
            throw new Zend_Mail_Exception('From Header set twice');
        }
        return $this;
}

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-10-15T14:04:49.000+0000</p> 
        <div class="body">
            <p>Assigned to Nico</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-11-07T08:22:05.000+0000</p> 
        <div class="body">
            <p>Solved in SVN r12370</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Gelf (tgelf) on 2008-11-07T08:46:20.000+0000</p> 
        <div class="body">
            <p>As the second parameter is optional I suggest setting $name = null and verifying whether $name === null to be conform with "PHP Coding Standard (draft) -&gt; Optional Parameters".</p>

<p>One more thing: if name is given you're currently adding two spaces between name and email address. A possible variant, IMO also easier to read could be:</p>

<pre class="literal">
public function setFrom($email, $name = null)
{
    if ($this-&gt;_from === null) {
        $email = strtr($email,"\r\n\t",'???');
        $this-&gt;_from = $email;

        if (null === $name) {
            $from = sprintf('"%s" ', $this-&gt;_encodeHeader($name));
        } else {
            $from = '';
        }
        $from .= sprintf('&lt;%s&gt;', (string) $email);
        $this-&gt;_storeHeader('From', $from, true);
    } else {
        ...
</pre>

<p>Cheers,
Thomas</p>

<p>Sorry for nitpicking, could not resist ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-11-07T10:51:30.000+0000</p> 
        <div class="body">
            <p>Hello, Thomas.
You are welcome.;-)   Thank You for Your advice.</p>

<p>I refixed as following.</p>

<p>1) If $name is not used or the $name is same as $email,
        header is "From: $email".</p>

<p>2) If $name is used and the $name is encoded,
        header is "From: $name &lt;$email&gt;".</p>

<p>3) If $name is used and the $name is not encoded and not contains comma, 
        header is "From: $name &lt;$email&gt;".</p>

<p>4) If $name is used and the $name is not encoded and contains comma, 
        header is "From: "$name" &lt;$email&gt;".</p>

<p>Best Regards,
Satoru Yoshida</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Gelf (tgelf) on 2008-11-07T12:51:13.000+0000</p> 
        <div class="body">
            <p>Great. One last note: Wouln't 1) better be From: &lt;$email&gt; ?</p>

<p>Regards,
Thomas Gelf</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Gelf (tgelf) on 2008-11-07T15:16:15.000+0000</p> 
        <div class="body">
            <p>Sorry, my fault. "From: user@domain.tld" is correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-11-07T17:44:35.000+0000</p> 
        <div class="body">
            <p>Hi, Thomas.</p>

<p>Thank You for checking my comment.</p>

<p>Yes, both  "From: user@domain.tld" and "From: <a href="mailto:user@domain.tld">user@domain.tld</a>" are correct.</p>

<p>I selected "From: user@domain.tld" on implementation. :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:14.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

