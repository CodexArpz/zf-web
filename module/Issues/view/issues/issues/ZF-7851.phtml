<h2>ZF-7851: Call to Zend_Form_Element::receive() and then Zend_Form::getValues causes Zend_Validate_File_Count to count 2 files</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-15T16:18:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-27T01:18:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Duo Zheng (duoduo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_Validate_File</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Validate_File_Count shows an error prematurely like this:
"Too much files, maximum '1' are allowed but '2' are given"</p>

<p>This can be done in 2 ways</p>

<ol><li><p>Call Zend_Form_Element::receive() then call Zend_Form-&gt;getValues()</p></li>
<li><p>Call Zend_Form-&gt;getValues twice</p></li>
</ol><p>What happens is the first call adds the temporary file path to Zend_Validate_File_Count
/tmp/phpwlAZqc</p>

<p>The second call adds the real file name
/tmp/picture.jpg</p>

<p>I do understand that getValues tries to process the form, but should I not be able to call it twice on the same instance? Or sometimes you want to check of the file was received first with Zend_Form_Element::receive() then collect the form data with Zend_Form-&gt;getValues(). If it shouldn't something should be done about multiple calls. Took a while to track this down.</p>

<p>Reproducible code below.</p>

<pre class="highlight"><code>
&lt;?php
// Ensure library/ is on include_path
set_include_path(implode(PATH_SEPARATOR, array(
    realpath(dirname(__FILE__) . '/../../library'),
    get_include_path(),
)));

/** Zend_Loader_Autoloader */
require_once 'Zend/Loader/Autoloader.php';
//automatically registers Zend
Zend_Loader_Autoloader::getInstance();

$form = new Zend_Form();
$form-&gt;setAction('')
     -&gt;setMethod('post');
$file = new Zend_Form_Element_File('picture');
$file-&gt;setLabel('Picture');
//$file-&gt;setDestination('/tmp');
// ensure only 1 file
$file-&gt;addValidator('Count', true, 1);
$form-&gt;addElement($file);

$submit = new Zend_Form_Element_Submit('save');
$submit-&gt;setLabel('Save');
$form-&gt;addElement($submit);

if($form-&gt;isValid($_POST) &amp;&amp; $form-&gt;picture-&gt;receive()){
    var_dump($form-&gt;getValues()); //THIS CAUSES THE COUNT ERROR
}

echo $form-&gt;render(new Zend_View());
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Duo Zheng (duoduo) on 2009-09-15T16:22:40.000+0000</p> 
        <div class="body">
            <p>Added some additonal information</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-27T01:18:50.000+0000</p> 
        <div class="body">
            <p>There is a logical description for this irritation:
Before the file has been uploaded, it is physically not available. Therefor it is counted with the temporary name.</p>

<p>After the upload, it is physically available, and the real name is counted.</p>

        </div>
    </div>
    </div>

