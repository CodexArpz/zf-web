<h2>ZF-6741: Decorators and id attribute</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Task</dd>

    <dt>Created:</dt>
    <dd>2009-05-20T05:54:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-03-13T20:55:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Mini Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In the default element decorators, the id attribute is set for the wrapping dd tag</p>

<pre class="highlight"><code>
                -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dd',
                                                'id'  =&gt; $this-&gt;getName() . '-element'))
</code></pre>

<p>getName() should be replaced by getId() because the name of an element is not always unique.</p>

<p>The same issue appears in the DtDdWrapper decorator where the element name is taken for the ids.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-20T11:28:51.000+0000</p> 
        <div class="body">
            <p>Simply replacing getName() with getId() has not the effect you wish it to have,
because the Id gets assembled only when rendering within FormElements Decorator.</p>

<p>So i am suggesting this solution, please give me your opinions.</p>

<pre class="highlight"><code>
    public function loadDefaultDecorators()
    {
        if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
            return;
        }

        $decorators = $this-&gt;getDecorators();
        if (empty($decorators)) {
            $getId = create_function('$decorator',
                                     'return $decorator-&gt;getElement()-&gt;getId()
                                             . "-element";');
            $this-&gt;addDecorator('ViewHelper')
                -&gt;addDecorator('Errors')
                -&gt;addDecorator('Description', array('tag' =&gt; 'p', 'class' =&gt; 'description'))
                -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dd',
                                                'id'  =&gt; array('callback' =&gt; $getId))
                -&gt;addDecorator('Label', array('tag' =&gt; 'dt'));
        }
    }
</code></pre>

<pre class="highlight"><code>
    protected function _htmlAttribs(array $attribs)
    {
        $xhtml = '';
        $enc   = $this-&gt;_getEncoding();
        foreach ((array) $attribs as $key =&gt; $val) {
            $key = htmlspecialchars($key, ENT_COMPAT, $enc);
            if (is_array($val)) {
                if (array_key_exists('callback', $val)
                    &amp;&amp; is_callable($val['callback'])) {              //added is_callable in r21970
                    $val = $val['callback']($this);
                }
                else {
                    $val = implode(' ', $val);
                }
            }
            $val    = htmlspecialchars($val, ENT_COMPAT, $enc);
            $xhtml .= " $key=\"$val\"";
        }
        return $xhtml;
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-20T11:43:34.000+0000</p> 
        <div class="body">
            <p>Fix For SubTask ZF-7663</p>

<pre class="highlight"><code>
...
        if (null !== $tag) {
            require_once 'Zend/Form/Decorator/HtmlTag.php';
            $decorator = new Zend_Form_Decorator_HtmlTag();
            $decorator-&gt;setOptions(array('tag' =&gt; $tag,
                                         'id'  =&gt; $this-&gt;getElement()-&gt;getId() . '-label'));

            $label = $decorator-&gt;render($label);
        }
...
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-21T14:40:45.000+0000</p> 
        <div class="body">
            <p>Solution of first comment applied to trunk r21964, sheduling for next minor release.</p>

        </div>
    </div>
    </div>

