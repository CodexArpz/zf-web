<h2>ZF-6584: Zend_Form_Element_File problem on automated receive of multiple files</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-08T12:47:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-13T11:58:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Cristian Bichis (avantis)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>If using the automated receive feature as per example we are experiencing one problem if the uploaded files have the same name. The files are overwrited....</p>

<p>elements.media.type = "file"
elements.media.options.label = "Imagini"
elements.media.options.multifile = 5
elements.media.options.destination = PUBLIC_PATH "/media/categories/"</p>

<p>So if i upload into two fields two files having same name then... Voila... only one file would be into destination folder...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-08T13:03:16.000+0000</p> 
        <div class="body">
            <p>Assigning to Thomas</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-08T14:06:27.000+0000</p> 
        <div class="body">
            <p>I've searched the complete manual... the mentioned example with the code you gave does not exist.</p>

<p>So the question is:
When you define 5 files and store them in the same directory how should the file element know what to do without additional rules ?</p>

<p>You could for example define a rewrite filter, react on duplicate files or use different folders.</p>

<p>Also, when you have 2 identical files then your form will return an error... one file is stored, but the other 4 files can not be stored if they already exist. So you will know that there is something wrong, the problem will not be supressed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-05-08T22:42:35.000+0000</p> 
        <div class="body">
            <p>As i posted also in your blog, the problem is the filters are added only if i use receive() manually....</p>

<p>So if i rather use receive automatically the problem would continue to exist no matter what...</p>

<p>I think filters should work also for automated case, not just for manually receiving files...</p>

<p>We are actually "making less" than PHP does. PHP ensures the files are not overwrited... With current approach we are just breaking this...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-09T02:10:07.000+0000</p> 
        <div class="body">
            <p>The question is:
How do you expect that you are getting the values from a form ?
You must call a method to get values and a file element has as value a file.</p>

<p>If you call receive() to get the file, or if you call getValues(), it's the same. How are you getting other values from the form? I expect that you are calling getValues().</p>

<p>And as you are speaking of PHP... with PHP you must call move_uploaded_file to get the file, which is also a method. I can't see a difference in calling one method, regardless of it's name.</p>

<p>Filters are attached on both methods... calling receive() and calling getValues(). There is no difference.
So what do you want to do?
I am missing additional information.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-09T02:13:09.000+0000</p> 
        <div class="body">
            <p>And related to "the file will be overwritten"...</p>

<p>PHP manual for move_uploaded_file states:
"If the destination file already exists, it will be overwritten. "</p>

<p>So this is correct and expected behaviour.
You can prevent this by using the rename filter which can be set to disallow overwriting files.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-05-10T07:48:34.000+0000</p> 
        <div class="body">
            <p>"Filters are attached on both methods... calling receive() and calling getValues(). There is no difference."</p>

<p>Your blog post says:</p>

<p><a href="http://www.thomasweidner.com/flatpress/2009/04/17/recieving-files-with-zend_form_element_file/">http://thomasweidner.com/flatpress/2009/â€¦</a></p>

<p>"Remember, to have this working you need to call setValueDisabled() otherwise the file is transferred when calling getValues(). When you omit the call then your file will be transferred, due to getValues(), but it will not be renamed, because the rename filter was not available at the time, the file has been received."</p>

<p>So according to text rename filters are available only when receive is called manually... Not when doing directly with getValues() and setValueDisabled() not called....</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-10T09:11:51.000+0000</p> 
        <div class="body">
            <p>You have to read the complete blog and not only one part of it.
The sentences above in my blog describes how you can make getValues() NOT to receive the file, which is default behaviour. And the sentence you are referring to is a comprehensive note of the above description to make getValues() not receive the file.</p>

<p>All depends on which methods and parameters are used.
As you have still not given any additional information than a ini file there is no way to help.</p>

<p>Again:
Rename filters ARE called when calling receive. There is per default no difference if you call it automatically or manually. When you switch off the automatic by using setValueDisabled() then you have decided to do so.</p>

<p>So any changed behaviour according to your call is intentionally and wished by you.</p>

<p>Without additional information I must conclude that you are using default behaviour. Which means that filters are called on both methods.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-13T11:58:22.000+0000</p> 
        <div class="body">
            <p>Closing issue due to non-response.</p>

<p>As result of the discussion the following note:
* The mentioned problem of overwriting existing uploaded files is default behaviour of PHP
* You can change this behaviour by using the rename filter with the "overwrite" option
* Automatic rename of duplicated files is part of another issue regarding the rename filter</p>

        </div>
    </div>
    </div>

