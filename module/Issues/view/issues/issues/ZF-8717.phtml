<h2>ZF-8717: Add UrlSafe base64 encoding to Zend_Mime</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-05T16:04:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-07T12:22:26.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Vladimir Razuvaev (vladar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mime</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Base64 encoding might be useful for passing binary data via URLs or cookies (since it produces shorter strings then hexdigest). See <a href="http://en.wikipedia.org/wiki/Base64#URL_applications">http://en.wikipedia.org/wiki/Base64/â€¦</a></p>

<p>But by default base64 is not urlsafe and there is no urlsafe version in native PHP (at least yet). So I propose to add trivial methods encodeBase64UrlSafe and decodeBase64UrlSafe to Zend_Mime compatible with python's base64.urlsafe_b64encode:</p>

<pre class="highlight"><code>
static function encodeBase64UrlSafe($value)
{
   return str_replace(array('+', '/'), array('-', '_'), base64_encode($value));
}

static function decodeBase64UrlSafe($value)
{
   return base64_decode(str_replace(array('-', '_'), array('+', '/'), $value));
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2010-06-12T06:18:40.000+0000</p> 
        <div class="body">
            <p>Sorry, I have been inactive since last April.</p>

        </div>
    </div>
    </div>

