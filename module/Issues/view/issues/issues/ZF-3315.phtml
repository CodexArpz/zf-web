<h2>ZF-3315: [Zend_Filter_StripTags]: validate parameter before filtering to avoid exceptions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-05-23T00:35:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-13T14:10:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ramses Paiva (rpaiva)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11477/StripTags.php">StripTags.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In Zend_Filter_StripTags, if the filter is applied only for strings, returns the original value if the parameter is not a string.</p>

<pre class="highlight"><code>

    /**
     * Defined by Zend_Filter_Interface
     *
     * @todo improve docblock descriptions
     *
     * @param  string $value
     * @return string
     */
    public function filter($value)
    {
        // If the param is not a string, return the original value
        if (!is_string($value)) {
            return $value;
        }
        
        $valueCopy = (string) $value;

        // If comments are allowed, then replace them with unique identifiers
        if ($this-&gt;commentsAllowed) {
            preg_match_all('/&lt;\!--.*?--\s*&gt;/s' , (string) $valueCopy, $matches);
            $comments = array_unique($matches[0]);
            foreach ($comments as $k =&gt; $v) {
                $valueCopy = str_replace($v, self::UNIQUE_ID_PREFIX . $k, $valueCopy);
            }
        }

        // Initialize accumulator for filtered data
        $dataFiltered = '';
        // Parse the input data iteratively as regular pre-tag text followed by a
        // tag; either may be empty strings
        preg_match_all('/([^&lt;]*)(&lt;?[^&gt;]*&gt;?)/', (string) $valueCopy, $matches);
        // Iterate over each set of matches
        foreach ($matches[1] as $index =&gt; $preTag) {
            // If the pre-tag text is non-empty, strip any "&gt;" characters from it
            if (strlen($preTag)) {
                $preTag = str_replace('&gt;', '', $preTag);
            }
            // If a tag exists in this match, then filter the tag
            $tag = $matches[2][$index];
            if (strlen($tag)) {
                $tagFiltered = $this-&gt;_filterTag($tag);
            } else {
                $tagFiltered = '';
            }
            // Add the filtered pre-tag text and filtered tag to the data buffer
            $dataFiltered .= $preTag . $tagFiltered;
        }

        // If comments are allowed, then replace the unique identifiers with the corresponding comments
        if ($this-&gt;commentsAllowed) {
            foreach ($comments as $k =&gt; $v) {
                $dataFiltered = str_replace(self::UNIQUE_ID_PREFIX . $k, $v, $dataFiltered);
            }
        }

        // Return the filtered data
        return $dataFiltered;
    }

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-09T16:34:39.000+0000</p> 
        <div class="body">
            <p>Please evaluate and fix/categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramses Paiva (rpaiva) on 2008-08-12T09:13:51.000+0000</p> 
        <div class="body">
            <p>I solved this task. Now, it's just needed to commit to SVN repository.
I don't have write access to the repository, so, anyone can help me?
Thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramses Paiva (rpaiva) on 2008-08-12T20:40:46.000+0000</p> 
        <div class="body">
            <p>I've solved this issue. Now, it's needed to commit it, but I don't have write privilege on SVN server to do it.
Anybody can help me?
Thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramses Paiva (rpaiva) on 2008-08-15T07:30:30.000+0000</p> 
        <div class="body">
            <p>This is the patch to accomplish this task. Please, review the patch and contribute with your comments.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramses Paiva (rpaiva) on 2008-09-03T03:10:24.000+0000</p> 
        <div class="body">
            <p>Must be commited to SVN.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:00.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

