<h2>ZF-5759: Parse once, execute many time the same SQL statement</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-02-12T06:46:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-25T10:56:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Mickael Perraud (mikaelkael)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Oracle</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5758">ZF-5758</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>This proposal was announced here: <a href="http://framework.zend.com/issues/browse/ZF-5758">ZF-5758</a>.</p>

<p>We have took a look on the SGA Trace/optimzer of TOAD, and saw that exactly the same query was parsed as many time as it was executed.
This is not as optimized as our own framework (... that only support Oracle, this is a fact!), here is our simple proposal that caches allready prepared statements :</p>

<pre class="highlight"><code>
/**
 * Adapter Oracle
 *
 * @package Core
 * @subpackage Db
 */
class Cto_Core_Db_Adapter_Oracle extends Zend_Db_Adapter_Oracle
{

    /** @var array array of Zend_Db_Statement_Oracle */
    private $_preparedStmt = array();

    /**
     * Returns an SQL statement for preparation.
     *
     * @param string $sql The SQL statement with placeholders.
     * @return Zend_Db_Statement_Oracle
     */
    public function prepare($sql) {

        if (isset($this-&gt;_preparedStmt[md5($sql)])) {
            return $this-&gt;_preparedStmt[md5($sql)];
        }
        
        $stmt = parent::prepare($sql);
        $this-&gt;_preparedStmt[md5($sql)] = $stmt;
        return $stmt;
    }

}
</code></pre>

<p>To use it, we simply add a new parameter in the config.ini:</p>

<pre class="literal">
[DB]
adapter = oracle
params.dbname = SPMS11
params.username = xxx
params.password = xxx
params.adapterNamespace = Cto_Core_Db_Adapter
params.options.autoQuoteIdentifiers = false
</pre>

<p>Is there any reason why not putting it in the main code?</p>

<p>Regads,
Wilfried LOCHE</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wilfried Loche (w_loche) on 2009-02-12T06:48:43.000+0000</p> 
        <div class="body">
            <p>This is a proposed optimization to reduce dramaticaly the number of parsed queries.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fran√ßois-Xavier MAURICARD (fxmauricard) on 2012-01-25T10:56:23.000+0000</p> 
        <div class="body">
            <p>In fact it will only consume more memory for something that is just bad writing of the SQL query, and will just cache SQL query for the same HTTP request.</p>

<p>But Oracle by itself cache the query and is doing soft-parse when sufficient.
If you have too many hard-parse it's because you are not using bind variables, or not writing the same query with the same syntax (for exemple "select * from emp" is different to "select * from EMP").</p>

        </div>
    </div>
    </div>

