<h2>ZF-11865: If a Zend_Navigation_Page_Uri is the active page then Zend_View_Helper_Navigation_Menu::setOnlyActiveBranch(true) renders nothing</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-11-01T02:02:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-01-22T10:31:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Navigation</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The isActive() method of Zend_Navigation_Page_Mvc matches its params to the request which works fine! 
For Zend_Navigation_Page_Uri there is no matching. The method is inhereted from Zend_Navigation_Page and implements some basic recursion to check if there are active child pages.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-01T10:43:35.000+0000</p> 
        <div class="body">
            <p>Simple workaround: use a mvc page.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-01T11:15:20.000+0000</p> 
        <div class="body">
            <p>I do. Because Uri pages don't work. I did report a bug not a problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-01T12:10:10.000+0000</p> 
        <div class="body">
            <p>{quote}I did report a bug not a problem.{quote}
I've only changed the priority. The issue is still open. :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-01T12:50:34.000+0000</p> 
        <div class="body">
            <p>Reading the documentation at <a href="http://framework.zend.com/manual/en/zend.navigation.pages.html">http://framework.zend.com/manual/en/…</a></p>

<p>I found:</p>

<p>options: 'active' -&gt; Whether the page should be considered active for the current request. If active is FALSE or not given, MVC pages will check its properties against the request object upon calling $page-&gt;isActive().</p>

<p>It's a feature! Not a bug. My apologies.</p>

<p>Is there a reason for this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-01T12:52:48.000+0000</p> 
        <div class="body">
            <p>Strike through is not intentional..</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-01T13:08:08.000+0000</p> 
        <div class="body">
            <p>{quote}It's a feature! Not a bug. My apologies.{quote}
You are right. 
{quote}Is there a reason for this?{quote}
To use the component alone. (without Zend_Controller_Front, Zend_Controller_Request)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-01T13:52:39.000+0000</p> 
        <div class="body">
            <p>I'm not sure I understand. Do you mean without Zend_View_Helpers?</p>

<p>isActive is called in Zend_View_Helper_Navigation_HelperAbstract::findActive</p>

<p>What I referred to is: 
Is it difficult to implement for Zend_Navigation_Page_Uri?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-01T16:00:26.000+0000</p> 
        <div class="body">
            <p>{quote}I'm not sure I understand. Do you mean without Zend_View_Helpers?{quote}
I mean without Zend_Controller_Front/Zend_Controller_Request.
{quote}Is it difficult to implement for Zend_Navigation_Page_Uri?{quote}
No, it is very easy. But we have to create another dependency to Zend_Controller_Front/Zend_Controller_Request.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-01T16:51:24.000+0000</p> 
        <div class="body">
            <p>OK I'm starting to understand...</p>

<p>Zend_Navigation must be standalone. At least for uri pages.</p>

<p>Then to remove inconsistencies shouldn't the matching of both uri and mvc pages take place at the View_Helper level?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-05T09:24:47.000+0000</p> 
        <div class="body">
            <p>{quote}Zend_Navigation must be standalone. At least for uri pages.{quote}
Yes, this is the point!
{quote}Then to remove inconsistencies shouldn't the matching of both uri and mvc pages take place at the View_Helper level?{quote}
Can you explain what you mean with inconsistencies? Thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-08T23:54:52.000+0000</p> 
        <div class="body">
            <p>For me the inconsistencies boil down to the implementation Zend_Navigation_Page_Mvc::isActive. It needs Zend_Controller_Request to operate. Zend_Navigation_Page_Uri::isActive may not.</p>

<p>isActive is called by Zend_View_Helper_Navigation_HelperAbstract::findActive and I don't think the dependency constraints are still an issue there.</p>

<p>I have been busy working on a solution. It removes all dependencies on Zend_Controller_Request from Zend_Navigation_Page_Mvc.</p>

<p>Step 1. remove Zend_Navigation_Page_Mvc::isActive</p>

<p>Step 2. In Zend_Navigation_Page replace</p>

<p>/**
 * Returns whether page should be considered active or not
 *
 * @param boolean $recursive unused
 * @return boolean
 */
public function isActive($recursive = false)
{
    if (null !== $this-&gt;getParent()) {
        return $this === $this-&gt;getParent()-&gt;getActivePage();
    }
    return false;
}</p>

<p>/**
 * Sets whether page should be considered active or not
 *
 * @param boolean $active
 * @return Custom_Navigation_Page
 */
public function setActive($active = true)
{
    if (null !== ($parent = $this-&gt;getParent())) {
        if (true === $active) {
            $parent-&gt;_setActivePage($this);
        }
        else {
            $parent-&gt;_setActivePage();
        }
   }
   return $this;
}</p>

<p>Step 3. Zend_Navigation_Container add:</p>

<p>/**
 * Placeholder for the active child
 *
 * @var Zend_Navigation_Page
 */
protected $_activePage;</p>

<p>/**
 * Returns the active page for this container.
 * If recursive is true then find the deepest active page
 *
 * @return Zend_Navigation_Page|null
 */
public function getActivePage($recursive = false)
{
    $page = $this-&gt;_activePage;
    if (true === $recursive) {
        while ($page &amp;&amp; $page-&gt;_activePage) {
            $page = $page-&gt;_activePage;
        }
    }
    return $page;
}</p>

<p>/**
 * Set the active page for this container and update the parents and children
 *
 * @param Zend_Navigation_Page|null $page
 * @return Custom_Navigation
 <em>/
protected function _setActivePage($page = null)
{
    /</em> Page is already the active page */
    if ($page === $this-&gt;_activePage) {
        return $this;
    }</p>

<pre><code>/* Deactivate the current active page and its children */
if (null !== $this-&gt;_activePage) {
    $this-&gt;_activePage-&gt;_setActivePage();
}

/* Make page the activePage and activate the parents */
if (null !== $page) {
    if (!$this-&gt;hasPage($page)) {
        throw new Exception('Error activating page. Page is not a child');
    }
    $this-&gt;_activePage = $page;
    if ($this instanceof Zend_Navigation_Page)
    {
        $this-&gt;getParent()-&gt;_setActivePage($this);
    }
}
</code></pre>

<p>}</p>

<p>Use case: match the request to a navigation page and activate it</p>

<p>// Convert the request to a uri
$params = array();
$params['module'] = $this-&gt;getRequest()-&gt;getModuleName();
$params['controller'] = $this-&gt;getRequest()-&gt;getControllerName();
$params['action'] = $this-&gt;getRequest()-&gt;getActionName();
$params = $request + $this-&gt;getRequest()-&gt;getParams();
foreach ($params as $key =&gt; $value) {
    if (empty($value))
    {
        unset($params[$key]);
    }
}
$uri = Zend_Controller_Front::getInstance()-&gt;getRouter()
    -&gt;assemble($params, null, false);</p>

<p>// Find the page matching the uri
$page = $navigation-&gt;findOneByHref($uri);
// If found activate the page
if ($page) {
    $page-&gt;setActive();
}</p>

<p>Tell me what you think.</p>

<p>Maybe I should implement this on Github but I have no experience there.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-09T09:43:55.000+0000</p> 
        <div class="body">
            <p>Hi Bart,
this is no inconsistencies - this is the required behavior!
The documentation says:</p>

<p><em>Zend_Navigation_Page_Mvc</em>
{quote}MVC pages are defined using MVC parameters known from the Zend_Controller component. An MVC page will use Zend_Controller_Action_Helper_Url internally in the getHref() method to generate hrefs, and the isActive() method will intersect the Zend_Controller_Request_Abstract params with the page's params to determine if the page is active.{quote}
<em>Zend_Navigation_Page_Uri</em>
{quote}Pages of type Zend_Navigation_Page_Uri can be used to link to pages on other domains or sites, or to implement custom logic for the page. URI pages are simple; in addition to the common page options, a URI page takes only one option — uri. The uri will be returned when calling $page-&gt;getHref(), and may be a String or NULL.{quote}</p>

<p>When you remove all dependencies on Zend_Controller from Zend_Navigation_Page_Mvc - where is the difference between Uri- and MVC-Pages?
In addition, Zend_Controller is required to generate URLs for MVC-pages.</p>

<p>In short:
* a MVC-page link to an action in a controller within a Zend Framework application
* a URI-page link to an other domain or site (it is also required to use Zend_Navigation alone/without Zend_Controller)</p>

<p>This not a error or a problem, it is the normal and required behavior!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-09T22:58:16.000+0000</p> 
        <div class="body">
            <p>Hello Frenk,</p>

<p>I must admit the documentation (reading it more thoroughly now) follows the implementation very precise or should I say consistent:). But let's not argue over (in)consistencies. I could state that required cq. documented behavior doesn't rule out inconsistencies but that leads nowhere. So I won't.</p>

<p>I read my previous post and I really state:
{quote}It removes all dependencies on Zend_Controller_Request from Zend_Navigation_Page_Mvc{quote}.
<em>Zend_Navigation_Page_Mvc::isActive</em> is what I meant. For sure! Removing all dependencies is ridiculous. Sorry for the confusion.</p>

<p>But that said, running the snippet before using the view helpers is a good workaround for this bug:</p>

<pre class="literal">
// Convert the request to a uri 
$params = array(); 
$params['module'] = $this-&gt;getRequest()-&gt;getModuleName(); 
$params['controller'] = $this-&gt;getRequest()-&gt;getControllerName(); 
$params['action'] = $this-&gt;getRequest()-&gt;getActionName(); 
$params = $request + $this-&gt;getRequest()-&gt;getParams(); 
foreach ($params as $key =&gt; $value) {
    if (empty($value)) {
        unset($params[$key]);
    } 
} 
$uri = Zend_Controller_Front::getInstance()-&gt;getRouter() -&gt;assemble($params, null, false);
// Find the page matching the uri 
$page = $navigation-&gt;findOneByHref($uri); 
// If found activate the page
if ($page) {
    $page-&gt;setActive(); 
}
</pre>

<p>Conclusion: if a Zend_Navigation_Page_Uri is active the Zend_View_Helper_Navigation_Menu::setOnlyActiveBranch(true) will render. Hench the issue as stated doesn't exist or can we rephrase it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-09T23:43:16.000+0000</p> 
        <div class="body">
            <p>Hi Bart,
let's take a simple example:</p>

<pre class="highlight"><code>$container = new Zend_Navigation(array(
    array(
        'label'  =&gt; 'Page 1',
        'uri'    =&gt; 'page-1',
        'active' =&gt; true,
        'pages'  =&gt; array(
            array(
                'label' =&gt; 'Page 1.1',
                'uri'   =&gt; 'page-1.1',
            ),
            array(
                'label' =&gt; 'Page 1.2',
                'uri'   =&gt; 'page-1.2',
                
            ),
        ),
    ),
    array(
        'label' =&gt; 'Page 2',
        'uri'   =&gt; 'page-2',
    ),
    array(
        'label' =&gt; 'Page 3',
        'uri'   =&gt; 'page-3',
    ),
));

echo $view-&gt;navigation($container)-&gt;menu()-&gt;setOnlyActiveBranch(true);</code></pre>

<pre class="highlight"><code></code></pre><code>
        <a href="page-1">Page 1</a>
        </code><code>
                <a href="page-1.1">Page 1.1</a>
            
            

                <a href="page-1.2">Page 1.2</a>
            
        
</code>

<p>Result: It works!</p>

<p>This is the desired and documented behavior - no more and no less.
You can use it without {{Zend_Controller}} and this is also the goal for the page type "uri"!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-10T00:05:26.000+0000</p> 
        <div class="body">
            <p>{quote}</p>

<pre class="highlight"><code>
// Convert the request to a uri 
$params = array(); 
$params['module'] = $this-&gt;getRequest()-&gt;getModuleName(); 
$params['controller'] = $this-&gt;getRequest()-&gt;getControllerName(); 
$params['action'] = $this-&gt;getRequest()-&gt;getActionName(); 
$params = $request + $this-&gt;getRequest()-&gt;getParams(); 
foreach ($params as $key =&gt; $value) {
    if (empty($value)) {
        unset($params[$key]);
    } 
} 
$uri = Zend_Controller_Front::getInstance()-&gt;getRouter() -&gt;assemble($params, null, false);
</code></pre>

<p>I'm sorry, but your code snippet shows the same behavior as {{Zend_Navigation_Page_Mvc}}!</p>

<p>Do you understand what I mean?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart van der Linden (bart) on 2011-11-10T00:56:25.000+0000</p> 
        <div class="body">
            <p>{quote}This is the desired and documented behavior - no more and no less.{quote}</p>

<p>That's why I wondered if the issue should remain open.</p>

<p>{quote}Do you understand what I mean?{quote}</p>

<p>Yes, it merely injects the request at a different level.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-10T11:33:12.000+0000</p> 
        <div class="body">
            <p>{quote}That's why I wondered if the issue should remain open.{quote}
The idea is not bad, but we need a solution with a "soft" dependency on Zend_Controller and a fallback/alternative with plain PHP. Maybe $_SERVER['REQUEST_URI']?!</p>

<p>I will write some unit tests and look for a simple solution without Zend_Controller.</p>

<p>Thanks for your input!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2013-01-22T10:31:55.000+0000</p> 
        <div class="body">
            <p>This is a task for a new version of Zend_Navigation, maybe in version 2.5 or 3.</p>

        </div>
    </div>
    </div>

