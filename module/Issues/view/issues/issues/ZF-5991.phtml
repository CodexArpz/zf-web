<h2>ZF-5991: Mysql comments can't include named bind parameters </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-03-11T04:29:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-20T21:32:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Cameron Green (camerongreen)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Working around bug <a href="http://framework.zend.com/issues/browse/ZF-5200">http://framework.zend.com/issues/browse/ZF-5200</a>, I wanted to leave the named parameter in for documentation purposes.</p>

<p>This causes the following error :</p>

<p>Message:  SQLSTATE[HY093]: Invalid parameter number: number of bound variables does not match number of tokens</p>

<p>Comments should be stripped before anything else is done with the query.  I know this is already done by each dbms but it's probably simpler than catching every case where syntax might conflict.  Another example of this <a href="http://framework.zend.com/issues/browse/ZF-4312">http://framework.zend.com/issues/browse/ZF-4312</a></p>

<p>To recreate :</p>

<p>$query = "INSERT INTO Chomsky VALUES (:id, /<em>:dateCreated</em>/ NOW(), :dateExpanded, :creatorId;";</p>

<pre><code>                        $params = array(
                            ":id"                   =&gt; null,
                            //":dateCreated"            =&gt; new Zend_Db_Expr('NOW()'),  // Zend bug #5200
                            ":dateExpanded"         =&gt; null,
                            ":creatorId"            =&gt; 0
                        );

                        $result = $db-&gt;query($query, $params);
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-20T21:32:07.000+0000</p> 
        <div class="body">
            <p>Zend_Db does not attempt to address "comments" within queries.</p>

<p>Closing as not an issue.  If this is a well-known use case, lets address this in Zend Db 2.0.</p>

<p>-ralph</p>

        </div>
    </div>
    </div>

