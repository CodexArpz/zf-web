<h2>ZF-1364: Zend_XmlRpc_Client forces faultCode and faultString on response</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-05-08T11:28:25.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC3 (23/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_XmlRpc_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The faultCode/faultString in the response should be optional and not considered mandatory.</p>

<p>For example from Java a standard exception has no code what so ever, hence, the field faultCode in the response is empty, which leads to a Zend_XmlRpc_Client_Exception.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-05-12T12:23:03.000+0000</p> 
        <div class="body">
            <p>Assigning to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2007-05-12T13:00:00.000+0000</p> 
        <div class="body">
            <p>Just to give feedback, if this is mandatory indeed (I found and read the <a href="">www.xmlrpc.com/spec</a>" rel="nofollow"&gt;spec in the meantime and it's not so clear on this) this may be a week implementation in the Java-based XML-RPC service I have to query.  What would be your advice then?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-05-17T11:03:19.000+0000</p> 
        <div class="body">
            <p>Can you give an example fault response payload that triggers the exception? Zend_XmlRpc_Fault::loadXml() only throws exceptions for the following conditions:</p>

<ul><li>malformed XML</li>
<li>malformed fault response, which means that it doesn't minimally have  structure</li>
<li>BOTH code AND message missing from the fault struct</li>
</ul><p>In the case of a missing code, it simply sets it to '404', and uses the message provided. My inclination is that the response you're getting back is so far different from a typical XML-RPC response as to be unrecognizable.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2007-05-23T06:51:35.000+0000</p> 
        <div class="body">
            <p>Apologies for the delay - this is what I get when I dump:</p>

<pre class="highlight"><code>
$httpResponse = $http-&gt;request(Zend_Http_Client::POST);
</code></pre>

<p>Response:</p>

<pre class="highlight"><code>
&lt;?xml version="1.0"?&gt;
faultStringjava.lang.ClassCastException: java.lang.IntegerfaultCode0</code></pre>

<p>Exception:
Fault code and string required</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-05-23T07:55:00.000+0000</p> 
        <div class="body">
            <p>The problem is with the XML, in particular, the faultString value; it's missing the tag indicating the value type. Instead of:</p>

<pre class="highlight"><code>
java.lang.ClassCastException: java.lang.Integer</code></pre>

<p>it should be reading:</p>

<pre class="highlight"><code>
java.lang.ClassCastException: java.lang.Integer</code></pre>

<p>The only way to fix this is to intercept the XML as it arrives and insert the tag (can be done using either regexp, DOM, or SimpleXML).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-05-23T07:56:01.000+0000</p> 
        <div class="body">
            <p>Fault response returned from third-party server does not conform to XML-RPC spec; not an issue of ZF.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2007-05-29T05:52:44.000+0000</p> 
        <div class="body">
            <p>The XML-RPC spec states that if no type supplied, "string" is assumed. So this fault is not so far away from the standard. ;-)</p>

<p><a href="http://www.xmlrpc.com/spec">http://www.xmlrpc.com/spec</a>
<a href="https://issues.apache.org/jira/browse/XMLRPC-142?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12499656">https://issues.apache.org/jira/browse/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-13T09:21:09.000+0000</p> 
        <div class="body">
            <p>Zend_XmlRpc_Value is correctly defaulting to using strings if no type is provided; however, Zend_XmlRpc_Fault is not using Zend_XmlRpc_Value to pull the fault struct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-13T09:21:30.000+0000</p> 
        <div class="body">
            <p>Resolved in r5279.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2007-06-13T11:24:09.000+0000</p> 
        <div class="body">
            <p>Thanks!</p>

        </div>
    </div>
    </div>

