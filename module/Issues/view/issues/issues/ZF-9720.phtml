<h2>ZF-9720: Stopped working automatic loading of translations from directory by filename</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-20T17:26:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-22T11:06:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.4 (28/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Vaidotas Stankus (krienas)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Thats the way I had initialized Zend_Translation in bootstrap:
&lt;?php
$locale = new Zend_Locale();
Zend_Registry::set('Zend_Locale', $locale);
$translate = new Zend_Translate(Zend_Translate::AN_ARRAY, 
                APPLICATION_PATH . '/../languages/', 'auto', 
                        array(
                        'scan' =&gt; Zend_Translate::LOCALE_FILENAME,
                        'log' =&gt; Zend_Registry::get('Zend_Log'),
                        'logUntranslated' =&gt; true,
                        ));
Zend_Registry::set('Zend_Translate', $translate);
?&gt;</p>

<p>In languages folder create two translation files en.php and lt.php. Internaly those files looks like:</p>

&lt;?php
/**
 * English language file
 */

return array(

'token1' =&gt; 'text in english1',
'token2' =&gt; 'text in english2'
);
?&gt;

<p>This part was working perfectly until I had made upgrade of ZF to 1.10.3. Sad, can't say what version was before. I guess 1.9.x. After some debugging I had realized, that Zend_Translate_Adapter_Array::_loadTranslationData as $data parameter can accept only string with path to translation or array of such strings for multiple translation files. Zend_Translate_Adapter_Array::_addTranslationData doesn't do anything with $data value, simply passes it to _loadTranslationData. But structure of array passed has all (except the first) arguments passed to Zend_Translate constructor.</p>

<p>If in Zend_Translate_Adapter_Array::addTranslation method after line with this code:</p>

&lt;?php
$options  = $options + $this-&gt;_options;
?&gt;

<p>I add something like this:</p>

&lt;?php
if (is_array($data) &amp;&amp; !empty($data['content'])) {
   $data = $data['content'];
}
?&gt;

<p>Translations start to work again. If that is really the way component is intended to be used, then I think this issue is feature breaker.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Vaidotas Stankus (krienas) on 2010-04-20T17:37:49.000+0000</p> 
        <div class="body">
            <p>Sorry for editing it so much times, didn't expect it will save all edits..</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-22T11:06:10.000+0000</p> 
        <div class="body">
            <p>Not reproduceable in trunk.</p>

<p>In line 126, if options is a string (note that it should be an array according to API doc) it is converted to array('content' =&gt; options) which itself is accepted by addTranslation().</p>

<p>Using your example all works without problems without any changes to the component.</p>

        </div>
    </div>
    </div>

