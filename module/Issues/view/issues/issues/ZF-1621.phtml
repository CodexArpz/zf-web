<h2>ZF-1621: Zend_Log methods should return $this for convienence</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-06-24T18:45:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It appears Zend_Log does not return an instance of itself at the moment, but for convenience it might be a good idea to return $this where possible</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-25T14:07:38.000+0000</p> 
        <div class="body">
            <p>I see no justification for this change.  Can you explain why it's more convenient to do this:</p>

<pre class="highlight"><code>
$log = new Zend_Log(...);
$log-&gt;addWriter(...)
    -&gt;info(...);
</code></pre>

<p>Instead of this:</p>

<pre class="highlight"><code>
$log = new Zend_Log(...);
$log-&gt;addWriter(...);
$log-&gt;info(...);
</code></pre>

<p>Especially since in typical usage, the call to addWriter() and the call to info() are not close together in one's application.  Typically, logs are set up in the bootstrap, and then messages are output in many places in the code.</p>

<p>Another use case is where one might want to output to multiple log levels when a single log event occurs in the app:</p>

<pre class="highlight"><code>
$log-&gt;info( ...some short message... );
$log-&gt;debug( ...some longer message... );
</code></pre>

<p>Is it really so painful to write {{$log}} twice in such cases?  I don't think so.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Geoffrey Tran (potatobob) on 2007-06-25T20:17:44.000+0000</p> 
        <div class="body">
            <p>It is for cases where several filters or writers are added not for chaining log events after Zend_Log instantiation because as you said logs are typically setup in the bootstrap.</p>

<pre class="highlight"><code>
$log = new Zend_Log(...);
$log-&gt;addWriter(...)
        -&gt;addFilter($filter)
        -&gt;addFilter($filter2);
</code></pre>

<p>Of course it does not matter whether we have to hit a few extra keys, but it does make things easier by shaving off 0.5 seconds when setting up Zend_Log.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-25T23:41:38.000+0000</p> 
        <div class="body">
            <p>I think optimizing keystrokes is not really the intended value of fluent interfaces.
And returning {{$this}} does not a fluent interface make.</p>

<p>I had a discussion with the designer of this component, and he said he didn't implement the function to return {{$this}} because the design of this API is not designed to be a true fluent interface according to the Martin Fowler pattern.  In fact, most of the instances of functions that return {{$this}} in Zend Framework aren't proper fluent interfaces.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-26T11:19:15.000+0000</p> 
        <div class="body">
            <p>I'm sorry, but the use case for this feature request is not convincing.</p>

        </div>
    </div>
    </div>

