<h2>ZF-2067: Zend_Cache_Frontend_File should not require a unique ID</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-10-15T02:17:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-12T16:53:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Cache_Frontend_File should not require a unique ID, it should be automatically generated from the path and filename in the same way some of the other frontends are able to automatically generate IDs.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-10-15T13:40:56.000+0000</p> 
        <div class="body">
            <p>Assigned to Fabien</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-03-11T15:13:21.000+0000</p> 
        <div class="body">
            <p>I don't understand.</p>

<p>With the File frontend, you can have several distinct cache files (all these cache records will be dropped if the unique master file is touched).</p>

<p>So the user must have the control of the cache id</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Brown (pooh) on 2008-03-11T16:00:21.000+0000</p> 
        <div class="body">
            <p>When using Zend_Cache_Frontend_File you still have to use:</p>

<p>if (!($result = $cache-&gt;load($cacheName))) {</p>

<p>In this example $cacheName is a uniquely generated ID (I use an MD5 of the filename).</p>

<p>Is there a reason the this unique ID is required, given that the cache is based on the master file? Couldn't the unique ID be generated automatically based on the filename of the master file?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-03-12T13:36:23.000+0000</p> 
        <div class="body">
            <p>But in several cases, the "$cacheName" is not a unique ID !</p>

<p>Let's take an example :</p>

<p>You have an XML file (masterFile) with a lot of different datas inside.</p>

<p>You have several PHP scripts which make different things with this unique XML file.</p>

<p>You use Zend_Cache_Frontend_File for caching.</p>

<p>Each PHP script uses the same master file but uses different cache ID because they cache different results made from the XML file.</p>

<p>When the XML file is touched, all cache records are dropped.</p>

<p>So maybe for your kind of use, the cache ID is unique (one cache id for one master file) but it's not the general case ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Brown (pooh) on 2008-03-12T16:53:15.000+0000</p> 
        <div class="body">
            <p>Fair enough</p>

        </div>
    </div>
    </div>

