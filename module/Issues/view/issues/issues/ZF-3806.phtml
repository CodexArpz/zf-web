<h2>ZF-3806: Problem with stored procedure and MySql</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-07-30T05:06:14.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-17T14:06:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.4 (23/Jun/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I need your help with a stored procedure in MySql using ZendFramework:</p>

<p>This is the stored:
DELIMITER $$
DROP PROCEDURE IF EXISTS <code>test</code>.<code>p1</code> $$
CREATE DEFINER=<code>root</code>@<code>%</code> PROCEDURE <code>p1</code>(IN p_in INT, OUT p_out INT)
BEGIN</p>

<p>SELECT concat("VALORE DI p_in: ", p_in) as VALORE;</p>

<h1>Creo il valore di output</h1>

<p>SET p_out = p_in * 100;
END $$
DELIMITER ;</p>

<p>This is the result on MySql command prompt:
mysql&gt; SET @prova = 100;
Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql&gt; CALL p1 (9, @prova);
+-------------------+
| VALORE |
+-------------------+
| VALORE DI p_in: 9 |
+-------------------+
1 row in set (0.00 sec)</p>

<p>Query OK, 0 rows affected (0.09 sec)</p>

<p>mysql&gt; SELECT @prova;
+--------+
| @prova |
+--------+
| 900 |
+--------+
1 row in set (0.02 sec)</p>

<p>Now the php script:
&lt;?php
require_once 'Zend/Db.php';
require_once 'Zend/Db/Adapter/Mysqli.php';

$db = new Zend_Db_Adapter_Mysqli(array(
'host' =&gt; 'localhost',
'username' =&gt; 'mito',
'password' =&gt; 'test',
'dbname' =&gt; 'test'
));
$prova = 0;
$out_in = 100;

$sql = "SET @prova = 100";
$stmt = new Zend_Db_Statement_Mysqli($db, $sql);
$stmt-&gt;execute();

$sql = "CALL p1 (?, @prova)";
$stmt = new Zend_Db_Statement_Mysqli($db, $sql);
$stmt-&gt;execute(array(60));
$row = $stmt-&gt;fetchAll();

print "</p><pre>";
print_r($row);
print "</pre>";

//$nextRowset = $stmt-&gt;nextRowset();
$closeCursor = $stmt-&gt;closeCursor();
$close = $stmt-&gt;close();

// Retrieve variable
$sql = "SELECT @prova";
$stmt2 = new Zend_Db_Statement_Mysqli($db, $sql);
$stmt2-&gt;execute();
$prova = $stmt2-&gt;fetch();

echo "value: " . $prova;
?&gt;

<p>Running the script I have an error at this istruction: $stmt2 = new Zend_Db_Statement_Mysqli($db, $sql);
Debug Error: /cabelweb/lib/PHP/ZendFramework-1.5.1/library/Zend/Db/Statement/Mysqli.php line 85 - Uncaught exception 'Zend_Db_Statement_Mysqli_Exception' with message 'Mysqli prepare error: Commands out of sync; you can't run this command now' in /cabelweb/lib/PHP/ZendFramework-1.5.1/library/Zend/Db/Statement/Mysqli.php:85
Stack trace:</p>

<h1>0 /cabelweb/lib/PHP/ZendFramework-1.5.1/library/Zend/Db/Statement.php(109): Zend_Db_Statement_Mysqli-&gt;_prepare('SELECT @prova')</h1>

<h1>1 /cabelweb/bin/PHP/com/cabel/apps/test/zend_framework/mysql/stored_exec_ZF.php(35): Zend_Db_Statement-&gt;__construct(Object(Zend_Db_Adapter_Mysqli), 'SELECT @prova')</h1>

<h1>2 {main}</h1>

<p>thrown</p>

<p>Why this behavior? Where is the problem?
Thanks in advance</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-08-27T13:04:25.000+0000</p> 
        <div class="body">
            <p>Hi Shlomo,</p>

<p>I think we have a fix for this inside ZF 1.6 coming up soon.</p>

<p>If you are interested in a patch, please check this:</p>

<p><a href="http://framework.zend.com/code/changelog/Standard_Library?cs=9738">http://framework.zend.com/code/changelog/…</a></p>

<p>more specfifically, this file and change:</p>

<p><a href="http://framework.zend.com/code/browse/Standard_Library/trunk/library/Zend/Db/Statement/Mysqli.php?r1=9573&amp;r2=9738">http://framework.zend.com/code/browse/…</a></p>

<p>As you can see, the closeCursor() method gets a next_result call to the Mysqli statement object.  The reason this is necessary is b/c stored procedure calls always return multiple result sets (presumably the last result set is for the exit status code).  Please try this and let me know if it works.</p>

<p>Thanks!
Ralph Schindler</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-06-17T14:06:16.000+0000</p> 
        <div class="body">
            <p>No response from reporter, this issue appears to have been fixed in 1.6.</p>

        </div>
    </div>
    </div>

