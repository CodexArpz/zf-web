<h2>ZF-4915: multiCheckbox (_getErrorMessages()) fails if configuring custom validation message</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-11T14:57:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-16T02:49:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.5 (27/Oct/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5603">ZF-5603</a></li>
            <li><a href="/issues/browse/ZF-5412">ZF-5412</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12151/Element.patch">Element.patch</a></li>
            <li><a href="/issues/secure/attachment/12120/Zend_Form_Element.php.diff">Zend_Form_Element.php.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If user checks no options for a multiCheckbox element and a custom validation message is configured, the _getErrorMessages() function generates a warning and fails to return the custom message.  The line that fails is " foreach ($value as $val)" because $value is set to null.</p>

<p>Made the following change to get around the problem:   if (($this-&gt;isArray() || is_array($value)) &amp;&amp; !empty($value)) {</p>

<pre><code>protected function _getErrorMessages()
{
    $translator = $this-&gt;getTranslator();
    $messages   = $this-&gt;getErrorMessages();
    $value      = $this-&gt;getValue();

    foreach ($messages as $key =&gt; $message) {
        if (null !== $translator) {
            $message = $translator-&gt;translate($message);
        }
        if (($this-&gt;isArray() || is_array($value)) &amp;&amp; !empty($value)) {
            $aggregateMessages = array();
            foreach ($value as $val) {
                $aggregateMessages[] = str_replace('%value%', $val, $message);
            }
            $messages[$key] = $aggregateMessages;
        } else {
            $messages[$key] = str_replace('%value%', $value, $message);
        }
    }
    return $messages;
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Neal Stammers (shovels) on 2009-03-20T05:23:19.000+0000</p> 
        <div class="body">
            <p>I have also ran into this issue when trying to implement a custom error message. Are there any plans to fix this issue, or am I assigning the error message in an incorrect way?</p>

<p>$element = $this-&gt;createElement('MultiCheckbox', 'checkbox');
$element-&gt;addErrorMessage('Foo');</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nils Caspar (pencil) on 2009-08-01T05:04:55.000+0000</p> 
        <div class="body">
            <p>Here is a patch for Zend/Form/Element.php</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nils Caspar (pencil) on 2009-08-01T05:05:51.000+0000</p> 
        <div class="body">
            <p>Pleas fix this ASAP</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Hamacher (thamacher) on 2009-08-20T06:28:40.000+0000</p> 
        <div class="body">
            <p>The suggested patch from Nils is broken. As far as i can see the logic should be the same as in the Element::getValue() method. I've added a proper patch.</p>

<p>As a workaround you can derive the MultiCheckbox and implement the _getErrorMessages() method on your own, until the error is fixed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nicholas Calugar (njcalugar) on 2009-08-27T10:02:20.000+0000</p> 
        <div class="body">
            <p>Here is a code snippet that shows a very similar issue that occurs when adding a custom error message to a multi select. In this case, _getErrorMessages returns an array with an extra dimension, which causes a Warning when the FormErrors View Helper tries to escape each error message:</p>

<p>&lt;?php
set_include_path(get_include_path() . PATH_SEPARATOR . 'library');</p>

<p>include('Zend/Form/Element/Multiselect.php');
include('Zend/View.php');
include('Zend/Version.php');</p>

<p>echo ("Zend_Version: " . Zend_Version::VERSION . "\n\n");</p>

<p>echo "PRINTING CONTROL ELEMENT:\n\n";</p>

<p>$control = new Zend_Form_Element_Multiselect('control');</p>

<p>$control-&gt;addMultiOptions(
    array(
        1 =&gt; 'One',
        2 =&gt; 'Two',
        3 =&gt; 'Three',
    )
);</p>

<p>$control-&gt;isValid(array(1,4));</p>

<p>echo $control-&gt;render(new Zend_View());</p>

<p>echo "\n\nPRINTING BUG ELEMENT:\n\n";</p>

<p>$bug = new Zend_Form_Element_Multiselect('bug');</p>

<p>$bug-&gt;addMultiOptions(
    array(
        1 =&gt; 'One',
        2 =&gt; 'Two',
        3 =&gt; 'Three',
    )
);</p>

<p>$bug-&gt;addErrorMessage('%value% is invalid');</p>

<p>$bug-&gt;isValid(array(1,4));</p>

<p>echo $bug-&gt;render(new Zend_View());</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nils Caspar (pencil) on 2009-10-08T04:36:27.000+0000</p> 
        <div class="body">
            <p>Any news on this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-15T12:54:07.000+0000</p> 
        <div class="body">
            <p>The report and diagnosis are both incorrect. What happens is that the FormErrors view helper fails because the value passed to escape() is an array, not a string.</p>

<p>What needs to be done is to flatten the errors within _getErrorMessages() so that we don't get multiple error messsages per validator.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-15T13:11:30.000+0000</p> 
        <div class="body">
            <p>Resolved in trunk and 1.9 release branch. See r18554 for details on how it was accomplished.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nils Caspar (pencil) on 2009-10-16T02:49:27.000+0000</p> 
        <div class="body">
            <p>Thank you! :-)</p>

        </div>
    </div>
    </div>

