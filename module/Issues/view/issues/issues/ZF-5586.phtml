<h2>ZF-5586: Extend Zend_Soap_Server and overwrite method &quot;_initializeSoapErrorContext&quot; and error_handler with E_ALL -&gt; &quot;loadXML()&quot; error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-20T04:47:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-31T20:28:51.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.4 (02/Feb/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sven (sunnysven)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Soap_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A small excerpt from my code (overwrite standard error_handler from Zend_Soap_Server:</p>

<pre class="highlight"><code>
&lt;?php
class Ms_Soap_Server extends Zend_Soap_Server
{
    protected function _initializeSoapErrorContext()
    {
        $displayErrorsOriginalState = ini_get('display_errors');
        ini_set('display_errors', false);
        
        //  Standard = E_USER_ERROR
        set_error_handler(array($this, 'handlePhpErrors'), E_ALL);
        return $displayErrorsOriginalState;
    }
    
    public function handlePhpErrors($errno, $errstr, $errfile = null, $errline = null, array $errcontext = null) 
    {       
        switch ($errno)
        {
            case E_USER_ERROR:
                $soapErrorCode = 'Receiver';
            break;
            
            default:
                $errstr = 'Sorry, internal server error!';
                $soapErrorCode = 'Server';
            break;
        }
        
        throw $this-&gt;fault($errstr, $soapErrorCode);
    }
}
?&gt;
</code></pre>

<p>When I make an "empty request" to the SoapServer via a web browser (<a href="http://www.xxx.com/server/">http://www.xxx.com/server/</a>) the answer must be an XML document with an SoapFault "Invalid XML".
But that is not possible because of the code beginning on line 612 (SVN)</p>

<pre class="highlight"><code>if (!$dom-&gt;loadXML($xml)) {
    require_once 'Zend/Soap/Server/Exception.php';
    throw new Zend_Soap_Server_Exception('Invalid XML');
}
</code></pre>

<p>See DOMDocument::loadXML:
"Errors/Exceptions: If an empty string is passed as the source, a warning will be generated."</p>

<p>Before the "loadXML" is called, it should be checked for an empty XML-Document (request) as follows:</p>

<pre class="highlight"><code>
if ($xml == '' || !$dom-&gt;loadXML($xml)) {
    require_once 'Zend/Soap/Server/Exception.php';
    throw new Zend_Soap_Server_Exception('Invalid XML');
}
</code></pre>

<p>So it works smoothly when I overwrite the error handler of the Zend_Soap_Server class to return individual error messages for example when a database connetection is impossible -&gt; SoapFault: Sorry, internal server error.</p>

<p>In addition, the word "Reciever" in the class Zend_Soap_Server" should be replaced with "Receiver" (at line 832, 851, 873).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-01-21T02:10:49.000+0000</p> 
        <div class="body">
            <p>Issue resolved, will be released in next minor release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-01-29T11:37:36.000+0000</p> 
        <div class="body">
            <p>Moved to 1.7 release branch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-03-31T20:28:50.000+0000</p> 
        <div class="body">
            <p>correct fix version</p>

        </div>
    </div>
    </div>

