<h2>ZF-4668: Use of is_uploaded_file() and move_uploaded_file() makes forms impossible to test</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-21T11:21:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-10-22T06:38:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Giorgio Sironi (giorgiosironi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In Zend_File_Trasfer and Zend_Validate_File folders these php functions are used:
- is_uploaded_file()
- move_uploaded_file()
That makes the form where Zend_Form_File_Element is inserted impossible to test with Zend_Test. Faking $_FILES superglobal array does not work because file pointed are not valid uploaded file. Only way is hack in the source of zf components.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-10-21T12:14:51.000+0000</p> 
        <div class="body">
            <p>And what should we do ? Delete a working solution because you can not test it ?</p>

<p>ZF can not solve problems of PHP itself.
As soon as you try to change the $_FILES array it will be recognised as attack and a error is thrown from PHP itself.</p>

<p>The only way how this can be tested can be seen in the testbed of ZF.</p>

<p>We will surely NOT delete a working solution because you are not able to test it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-10-21T12:16:35.000+0000</p> 
        <div class="body">
            <p>This is a PHP problem not a ZF problem.
Therefor we close this issue as won't fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2008-10-22T04:52:51.000+0000</p> 
        <div class="body">
            <blockquote>
  <p>And what should we do ? Delete a working solution because you can not test it ?</p>
</blockquote>

<p>Not said that, and no flame intended.</p>

<blockquote>
  <p>ZF can not solve problems of PHP itself.
  As soon as you try to change the $_FILES array it will be recognised as attack and a error is thrown from PHP itself.</p>
</blockquote>

<p>On php 5.2.4, with error_reporting on E_ALL | E_STRICT, I cannot reproduce this behaviour. Can you give me an hint on how to see that?</p>

<blockquote>
  <p>The only way how this can be tested can be seen in the testbed of ZF.</p>
</blockquote>

<p>I was talking of an integration test of controllers. It's nice to test dispatching of an homepage, but POST request are a more important and more likely to break part of an application.
A possible proposal is to add a public static variable to Zend_File_Transfer like the one in Zend_Session that will inhibit the use of move_uploaded_file() towards rename() and is_uploaded_file() to true.
Since a controller test case is run by cli, this is not menacing security as who can set a variable on Zend_File_Transfer has already access to the machine.
Also <code>grep -r "uploaded_file(" library/</code> gives 2 results, so it's a matter of 8-10 lines of code in total. I would like to write a proposed patch but I'm not familiar with zf development environment (how to assure a patch does not break existing regression tests).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-10-22T06:38:11.000+0000</p> 
        <div class="body">
            <p>Upload a file, change the name of the $_FILES array, then use move_uploaded_file and you will get a attacker error from PHP.</p>

<p>Regarding to Coding Standard it is depreciated to add testcode in the final implementation.
A mock adapter would be ok like done in Zend_Db but this is not what you need.</p>

        </div>
    </div>
    </div>

