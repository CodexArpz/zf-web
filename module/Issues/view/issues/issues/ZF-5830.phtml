<h2>ZF-5830: Zend_Db_Table_Select doesn't allow use of $select-&gt;columns('..')</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-02-18T12:14:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-07-21T15:28:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Rehbein (tech13)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3239">ZF-3239</a></li>
            <li><a href="/issues/browse/ZF-5985">ZF-5985</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11775/Table_Select.patch">Table_Select.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Table_Select doesn't allow use of $select-&gt;columns('..')</p>

<p>code fragment:
$tbl = new Category_Table();
$select = $tbl-&gt;select()-&gt;columns('id');</p>

<p>Results:
Zend_Db_Select_Exception: No table has been specified for the FROM clause in /usr/share/php/Zend-1.7.5/Db/Select.php on line 224</p>

<p>Expected:
Zend_Db_Table_Select should already have a table when created from a Zend_Db_Table_Abstract.</p>

<p>Bug?:
Zend_Db_Table_Select's from clause isn't set till assemble()</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-02-20T05:29:03.000+0000</p> 
        <div class="body">
            <p>Agreed.</p>

<p>I already told Zend (ralph probably) that a Zend_Db_Table_Select <em>should be given it's own table</em> in the from clause, just after creating it.
It's not logic to have a Zend_Db_Table_Select entirely empty at creation, it should at least contains its own table as its first from clause.</p>

<p>See :</p>

<pre class="highlight"><code>
// that's not logic
$table-&gt;fetchall($table-&gt;select()-&gt;from($table, array('my', 'cols')));
</code></pre>

<pre class="highlight"><code>
// that seems more logic
$table-&gt;fetchall($table-&gt;select()-&gt;columns(array('my', 'cols')));
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Rehbein (tech13) on 2009-02-26T10:27:28.000+0000</p> 
        <div class="body">
            <p>Turns out just adding the from in the setTable doesn't act as expected.</p>

<p>$select = $tbl-&gt;select()-&gt;columns('id'); would still include an all columns in the select.</p>

<p>'select <code>table</code>.* , <code>table</code>.<code>id</code> from <code>table</code>'</p>

<p>Attached is a patch I used to fix the bug for me.</p>

<p>short version:
Added a different version of the columns method for the class that includes the 'from' on demand.
If a column not from the primary table is requested, it will throw an error.
Seemed logical since the assemble for Zend_Db_Table_Select would throw for any columns not in the primary table.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-03-11T20:29:47.000+0000</p> 
        <div class="body">
            <p>This issue is already known as ZF-3239. It's a tricky one and hard solve without BC issues. A real patch probably won't be available until ZF 2.0, where we can break the BC a bit. Although I would love to be proven wrong in this case ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-25T17:15:30.000+0000</p> 
        <div class="body">
            <p>Since 1.9 there has been a feature in place that allowed select() to be called on a table with that will load the from part into the object.</p>

<p>Please see <a href="http://framework.zend.com/manual/en/zend.db.table.html#zend.db.table.qry.rows.set.refine.example">here</a>, and the api doc <a href="http://framework.zend.com/apidoc/core/Zend_Db/Table/Zend_Db_Table_Abstract.html#methodselect">here</a></p>

<p>I think it might fix this problem.</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Rehbein (tech13) on 2010-02-22T11:02:44.000+0000</p> 
        <div class="body">
            <p>Was fixed as of 1.9.  Marking issue closed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Enrico Hofmann (ehofmann) on 2012-04-25T12:59:20.000+0000</p> 
        <div class="body">
            <p>I got this error, today on Version 1.10.6.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nico Mebes (nicomebes) on 2012-06-08T12:34:50.000+0000</p> 
        <div class="body">
            <p>Got the same error today. Version 1.11.5</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Crispen Smith (crispen) on 2012-07-21T15:28:16.000+0000</p> 
        <div class="body">
            <p>Also using Version 1.11.5, replicated the issue using this code:</p>

<pre><code>public function fetchThumbnailBarContents()
{
    $table = $this-&gt;getTable();
    $select = $table-&gt;select()-&gt;columns('index_image')-&gt;where('status=1')-&gt;order('created')-&gt;limit(9);
    return $table-&gt;fetchAll($select);
}
</code></pre>

<p>and:</p>

<pre><code>public function getTable()
{
    if (null === $this-&gt;_table) {
        require_once APPLICATION_PATH . '/models/DbTable/IndexImages.php';
        $this-&gt;_table = new Model_DbTable_IndexImages;
    }
    return $this-&gt;_table;
}
</code></pre>

<p>All other pulls from the same pattern work fine, but when I try to specify just the index_images column I get error message:</p>

<p>Message: No table has been specified for the FROM clause</p>

<p>Luckily enough, it's a lightweight table and I was just doing minor performance tuning, but it would be nice if this could be resolved.</p>

        </div>
    </div>
    </div>

