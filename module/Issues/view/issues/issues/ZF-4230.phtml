<h2>ZF-4230: Strange exception inheritance</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-09-09T08:03:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-31T03:56:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                John Coggeshall (coogle)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_InfoCard</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11692/Exception.php">Exception.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Every exception in the Zend Framework is inherited from the class Zend_Exception.
But Zend_InfoCard_Exception checks if the class Zend_Exception exists. If not it will be inherited from Exception.
This is a unpredictable behaviour which nobody would expect.</p>

<p>So i think it should be compatible to all other exceptions and have a hard dependency to Zend_Exception.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Tobias Petry (ice-breaker) on 2008-12-06T13:09:07.000+0000</p> 
        <div class="body">
            <p>I think the programmer did this because Zend_InfoCard is one of the components who have got a special build and are used without other components BUT Zend_Exception is included in the infocard build.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by John Coggeshall (coogle) on 2008-12-23T00:03:33.000+0000</p> 
        <div class="body">
            <p>This is expected behavior because Zend_InfoCard is also shipped as a stand-alone component without the Zend_Exception class and thus must extend from Exception instead of Zend_Exception.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tobias Petry (ice-breaker) on 2008-12-27T06:04:21.000+0000</p> 
        <div class="body">
            <p>Fix for this "bug" ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tobias Petry (ice-breaker) on 2008-12-27T06:05:22.000+0000</p> 
        <div class="body">
            <p>This is NOT correct.
Yes Zend_Infocard is shipped seperately in a infocard build but Zend_Exception is included in this build.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sebastian Krebs (kingcrunch) on 2009-03-30T17:37:42.000+0000</p> 
        <div class="body">
            <p>Like Tobias said, there will be no problem to ship Zend_Exception with Zend_Infocard.</p>

<p>This</p>

<pre class="highlight"><code>
try {
  /* Some Infocard-code */
} catch (Zend_Exception $e) {
  /* Some Exception code */
}</code></pre>

<p>Will work ... maybe</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tobias Petry (ice-breaker) on 2009-03-31T03:56:57.000+0000</p> 
        <div class="body">
            <p>It will not "maybe" work, it will definitely work because Zend_Exception is shipped together with Zend_Infocard, but i seems the developer has no intention to have a look of about 2 minutes on the infocard package.</p>

        </div>
    </div>
    </div>

