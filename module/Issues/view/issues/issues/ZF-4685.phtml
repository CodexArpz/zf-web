<h2>ZF-4685: ZenX JQuery callback function names do not pass down correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-23T02:29:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-25T10:48:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
            <li>ZendX_JQuery</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-4588">ZF-4588</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I noticed that the callback function names do not pass to the actual JQuery call correctly.</p>

<p>Example:</p>

<p>I have in my View a code like this:</p>

<pre class="highlight"><code>
    $params = array(
                    "resize" =&gt; "doMyThingAtResize",
                    "title" =&gt; "My Zend Dialog",
                    );
                    
    echo $this-&gt;dialogContainer("dialog1", "Some text", $params, array('class' =&gt; 'flora'));
</code></pre>

<p>It will produce a JQuery call like this:</p>

<pre class="highlight"><code>
$("#dialog1").dialog({"resize":"doMyThingAtResize","title":"My Zend Dialog"});
</code></pre>

<p>This does work in other ways, but the callback for <em>resize</em> event does not get called as the value is text and not a function name.</p>

<p>What we would need it to produce would be like this:</p>

<pre class="highlight"><code>
$("#dialog1").dialog({"resize": doMyThingAtResize,"title":"My Zend Dialog"});
</code></pre>

<p>Same thing <em>doMyThingAtResize</em> without the quotes.</p>

<p>Problem goes AFAIK goes to <em>Zend_Json</em> and PHP <em>json_encode</em> as they will wrap the value with quotes, but I don't think this can be solved there.
One solution might be to add a separate function or parameter to add those callback function names. This means some manual code work to merge these into the variables passed to the JQuery call, but I don't see many other options.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-10-23T04:10:43.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>this is a known issue which will be (hopefully) resolved for the 1.7 release with the Zend_Json_Expr proposal.</p>

<p>Currently you cannot hand down callbacks via Zend_Json.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-10-23T04:41:02.000+0000</p> 
        <div class="body">
            <p>Assigning to Ben Eberlei</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-03-25T10:48:45.000+0000</p> 
        <div class="body">
            <p>Fixed and scheduled for 1.8</p>

        </div>
    </div>
    </div>

