<h2>ZF-9974: Zend_Form_Element-&gt;belongsTo not usable with same named multiple elements </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-06-10T02:07:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-06-10T03:06:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Saman Darougheh (excuvator)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Lets say i want to create two arrays inside one form, using belongsTo: if i want to use they same keys for both arrays, i have to name those elements the same. Unfort., even with different ids, there maynot be more than one element what results in the second element (in this case: remove[$i]) overwriting the first (in this case status[$i]).</p>

<p>class My_Form_Random extends Zend_Form
{</p>

<pre><code>public function init()
{
    $data = array(1 =&gt; 'test1', 2 =&gt; 'test2');
    foreach ($data as $field =&gt; $val)
    {
        $this-&gt;addStatusElement($field, $field, $val);
        $this-&gt;addRemoveElement($field);
    }


    $this-&gt;addElement('submit', 'submit');

}

protected function addStatusElement($id, $label, $value)
{
    $element = new Zend_Form_Element_Select('add_'.$id);


    $element-&gt;addMultiOption(1);
    $element-&gt;addMultiOption(2);

    $element-&gt;setBelongsTo('status')
            -&gt;setName($id)
            -&gt;setLabel($label)
            -&gt;setValue($value);
    $this-&gt;addElement($element);
}

protected function addRemoveElement($id)
{
    $element = new Zend_Form_Element_Checkbox('remove_'.$id);

    $element-&gt;setBelongsTo('remove')
            //-&gt;setName($id)
            -&gt;setValue(0)
            -&gt;setLabel('Remove');
    $this-&gt;addElement($element);
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-06-10T03:05:19.000+0000</p> 
        <div class="body">
            <p>Postponing for Zend Framework 2.0 development.</p>

        </div>
    </div>
    </div>

