<h2>ZF-4669: Zend_Controller_Request_Http-&gt;setPathInfo doesn't handle baseURL values correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-21T11:26:28.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-18T12:14:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Andrew Magruder (amgarude)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-4810">ZF-4810</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Reply to comment:</p>

<p>The fact that $routeTwo doesn't look correct is exactly the issue.  I'm passing in the baseURL ('/app') in my case which is how the current code knows the strip the first four characters (strlen('/app') = 4.)  The problem that is it's possible for the router to encounter URLs which do <em>not</em> have the correct baseURL value and therefore they shouldn't have their initial characters stripped.  The use case is when one would like to build a "routing" controller which transposed (legacy in my case) URLs (completely arbitrary) to MVC-formatted URLs (baseUrl/module/controller/action/.)  One can do this today, using a legacy URL routing approach per $routeTwo, but it's odd and non-obvious...</p>

<p>My proposal is to use a regex to determine if the initial characters of the URL <em>match</em> the provided $baseURL before stripping the initial characters of the request URI and to not modify the request URI if they do not match.</p>

<p>P.s. I gave the ``` thing a try but it doesn't seem to like my syntax for some reason. Sorry...</p>

<p>Initial report:</p>

<p>If you have a baseURL set, setPathInfo's implementation strips the length of the baseURL from the request URI, not the baseURL's value itself.  This makes it difficult to setup Zend_Controller_Router_Route_* rules to route from legacy URL(s) to Zend Framework MVC+mod_rewrite URL(s).  Example:</p>

<p>$router       = new Zend_Controller_Router_Rewrite();
$routeOne = new Zend_Controller_Router_Route_Static(
    '/directory/index.php',
    array(
        'module'     =&gt; 'someModule',
        'controller' =&gt; 'someController',
        'action'     =&gt; 'someAction'
    )
);
$routeTwo = new Zend_Controller_Router_Route_Static(
    'ectory/index.php',
    array(
        'module'     =&gt; 'someModule',
        'controller' =&gt; 'someController',
        'action'     =&gt; 'someAction'
    )
);
$router-&gt;addRoutes(array($routeOne , $routeTwo ));</p>

<p>$frontController-&gt;setControllerDirectory(array('default' =&gt; '../application/default/controllers',
                                               'api'     =&gt; '../application/api/controllers'))
                -&gt;setRouter($router)
                -&gt;setBaseUrl('/app');</p>

<p>RouteTwo "matches" but RouteOne does not.  Because the first four characters are missing (strlen('/app')) there are potential issues with naming overlap.</p>

<p>Suggested fix, replace:</p>

<p>Zend/Controller/Request/Http.php:551
            if ((null !== $baseUrl)
                &amp;&amp; (false === ($pathInfo = substr($requestUri, strlen($baseUrl)))))</p>

<p>with</p>

<p>Zend/Controller/Request/Http.php:551
            if ((null !== $baseUrl)
                &amp;&amp; (false === ($pathInfo = preg_replace("/^".$baseUrl."/", "", $requestUri))))</p>

<p>This will cause the baseURL to be stripped for requestURI's which have it, but not alter requestURI's which don't - allowing a developer to handle that case with their own routing.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-07T10:25:38.000+0000</p> 
        <div class="body">
            <p>I think part of your code was stripped on submission, as the route indicated in $routeTwo does not look correct. (Use  ``` to enter code)</p>

<p>Looking at your "solution", the only difference I see is that it appends an additional '/' to the $baseUrl when stripping it. Have you tried changing the baseUrl you pass to the front controller to include the trailing '/'?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-18T12:14:07.000+0000</p> 
        <div class="body">
            <p>Please add more information on how to property reproduce and reopen.</p>

<p>Thanks, Ralph</p>

        </div>
    </div>
    </div>

