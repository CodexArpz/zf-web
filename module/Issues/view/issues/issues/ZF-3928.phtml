<h2>ZF-3928: Zend_View_Helper_HeadScript: no way to disable encoding of attributes passed to appendFile and related methods</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-11T14:49:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-13T14:10:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Jon Whitcraft (sidhighwind)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11600/zf3928.patch">zf3928.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There is currently no way (at least that I could dissect) to disable encoding of values passed into Zend_View_Helper_HeadScript::appendFile which causes some 3rd-party javascript API's to break.</p>

<p>For example,  if I need to link to a javasript API that requires that I pass in more then one parameter in order to remotely load the file. I am currently unable to do this as the '&amp;' separating the parameters will be automatically encoded to '&amp;'</p>

<p>For example.
$this-&gt;view-&gt;HeadScript()-&gt;appendFile('<a href="http://server/script.js?v=1.2&amp;id=123">http://server/script.js?v=1.2&amp;id=123</a>');
will generate the following code:</p>

<p>which causes the remote server to not see the 'id' variable b/c it doesn't see the '&amp;' delimiter and thus refuses to let me access the javascript api.</p>

<p>In the Zend_View_Helper_HeadScript::itemToString method there should be a way to disable calling htmlspecialchars.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-10-20T15:00:46.000+0000</p> 
        <div class="body">
            <p>This issue also affects HeadLink Helper.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-10-22T09:01:29.000+0000</p> 
        <div class="body">
            <p>Attached is the proposed patch file.</p>

<p>With this file you can call your string like this:</p>

<pre class="highlight"><code>
$this-&gt;headScript()-&gt;setAutoEscape(true)-&gt;appendFile('test.js?id=123&amp;foo=bar');

and 

$this-&gt;headStyle()-&gt;setAutoEscape(true)-&gt;appendStylesheet('/css/rules.css?id=123&amp;foo=bar');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-10-22T09:02:46.000+0000</p> 
        <div class="body">
            <p>the proper one for the style sheet is</p>

<pre class="highlight"><code>
$this-&gt;headLink()-&gt;setAutoEscape(true)-&gt;appendStylesheet('/css/rules.css?id=123&amp;foo=bar');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-10-23T18:06:01.000+0000</p> 
        <div class="body">
            <p>Fixed in r12106.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:22.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

