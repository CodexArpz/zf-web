<h2>ZF-11197: Form containing a file input is not valid when submitting via PHPUnit</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-03-18T21:10:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-15T01:15:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Aleksander Turiak (zifius)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3791">ZF-3791</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When sending data via PHPUnit to Zend_From containing Zend_Form_Element_File (which is optional) isValid method returns false. However the same form submitted in browser validates successfully.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Andries Seutens (andries) on 2011-03-18T21:40:14.000+0000</p> 
        <div class="body">
            <p>Here's some extra info. Given the following form:</p>

<pre class="highlight"><code> 
&lt;?php

class Application_Form_Test extends Zend_Form
{
    public function init()
    {
        $element = new Zend_Form_Element_File('file');
        $this-&gt;addElement($element);
    }
}
</code></pre>

<p>The following unit test should pass:</p>

<pre class="highlight"><code>
&lt;?php

class MyTest extends PHPUnit_Framework_TestCase
{
    public function testFormValidates()
    {
        $form = new Application_Form_Test();
        $this-&gt;assertTrue($form-&gt;isValid(array()));
    }
}
</code></pre>

<p>This however is not the case, due to a short-circuit in Zend_File_Transfer_Adapter_Abstract line 620</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-04-30T03:54:36.000+0000</p> 
        <div class="body">
            <p>Zend_Form_Element_File lazy-loads the Zend_File_Transfer_Adapter_Http class to handle the actual file transfer.  Obviously this works well with an actual form, but in the context of unit testing causes a bit of a problem.</p>

<p>This is how I would get around it:   (caveat: this may not be the best, or "officially supported", way)</p>

<p>What you will need to do is create mock adapter which implements Zend_File_Transfer_Adapter_Abstract and feeds in a "dummy" file.  For example, Zend_File_Transfer_Adapter_AbstractTest already has such a mock adapter, so if you'll have the ZF test suite available when running your own tests you can lean on that:</p>

<pre class="highlight"><code>
public function testTestingZendFormWithFileElementByUsingAMockTransferAdapter()
{
    require_once "Zend/File/Transfer/Adapter/AbstractTest.php";
        
    $form = new ZF11197_TestForm();
    $form-&gt;getElement('file')-&gt;setTransferAdapter(
        new Zend_File_Transfer_Adapter_AbstractTest_MockAdapter()
    );
        
    $this-&gt;assertTrue($form-&gt;isValid(array()));
}

</code></pre>

<p>When added to the Zend_Form_FormTest test suite along with the following form class, this test will pass.</p>

<pre class="highlight"><code>
class ZF11197_TestForm extends Zend_Form
{
    public function init()
    {
        $element = new Zend_Form_Element_File('file');
        $this-&gt;addElement($element);
    }
}
</code></pre>

<p>An alternative would be to rip the code for Zend_File_Transfer_Adapter_AbstractTest_MockAdapter out of the ZF testsuite and place it in your own application's test suite to remove that dependency on what is essentially a private class of the ZF testsuite.</p>

        </div>
    </div>
    </div>

