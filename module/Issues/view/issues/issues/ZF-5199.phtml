<h2>ZF-5199: Zend_Db_Select should make use of Zend_Db_Table instances in from() and join() clauses</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-12-10T07:01:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                julien PAULI (doctorrock83)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Look at Zend_Db_Table_Select from() method :</p>

<pre class="highlight"><code>
public function from($name, $cols = self::SQL_WILDCARD, $schema = null)
{
if ($name instanceof Zend_Db_Table_Abstract) {
            $info = $name-&gt;info();
            $name = $info[Zend_Db_Table_Abstract::NAME];
            if (isset($info[Zend_Db_Table_Abstract::SCHEMA])) {
                $schema = $info[Zend_Db_Table_Abstract::SCHEMA];
            }
        }
// ...
</code></pre>

<p>That is nice, and I wonder why that has'nt been implemented in Zend_Db_Select class.
Same for join() : Why cant we use a Zend_Db_Table instance in it ?</p>

<p>Use case asked :</p>

<pre class="highlight"><code>
$db-&gt;select()-&gt;from($aTable)-&gt;join($anotherTable) ...
// $db is a Zend_Db_Adapter_Abstract
// $aTable and $anotherTable are both Zend_Db_Table_Abstract objects
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-11T22:00:15.000+0000</p> 
        <div class="body">
            <p>Why should Zend_Db_Select be aware of anything Zend_Db_Table?  Wouldnt this introduce a level of unwanted coupling?  Isnt this what Z_D_T_Select is for?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ian F Phillips (ianfp) on 2010-11-05T10:47:08.000+0000</p> 
        <div class="body">
            <p>@Ralph Schindler:</p>

<p>Here's why I vote for this issue.  I have a table "Foo" for which I have created a subclass of Zend_Db_Table_Abstract called FooTable.  I want to select a single value from a single column of "Foo", but Zend_Db_Table does not have a fetchOne() method, whereas Zend_Db_Adapter does.  So I use Zend_Db_Adapter for the query.  However, I want my FooTable class to completely encapsulate the database table, so that if I decide to change the name of the table from "Foo" to "BetterFoo", I only have to make a change in one place.</p>

<p>Instead of doing this:</p>

<p>$select = $db_adapter-&gt;select()-&gt;from("Foo", ...);
$scalar_val = $db_adapter-&gt;fetchOne($select);</p>

<p>I want to do this:</p>

<p>$foo_table = new FooTable();
$select = $db_adapter-&gt;select()-&gt;from($foo_table, ...);
$scalar_val = $db_adapter-&gt;fetchOne($select);</p>

<p>Comments welcome!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Hodgins (mjh_ca) on 2010-11-05T15:09:19.000+0000</p> 
        <div class="body">
            <p>@Ian:</p>

<p>Not a valid reason for Zend_Db_Select to need extra code to need be aware of Zend_Db_Table.</p>

<p>take a look at the docs here
<a href="http://framework.zend.com/manual/en/zend.db.table.html#zend.db.table.advanced.usage">http://framework.zend.com/manual/en/â€¦</a></p>

<p>You can already retrieve specific columns with Zend_Db_Table_Select:</p>

<pre class="highlight"><code>
$table = new MyTable();
$table-&gt;select()-&gt;from($table, array('my_column'))-&gt;fetchRow();
</code></pre>

<p>If you really want the same behavior as Zend_Db_Select#fetchOne() (that is, return a single value as a result) then you can do:</p>

<pre class="highlight"><code>
$table = new MyTable();
$select = $table-&gt;select()-&gt;from($table, array('my_column'));
$result = $table-&gt;getAdapter()-&gt;fetchOne($select);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ian F Phillips (ianfp) on 2010-11-05T15:26:33.000+0000</p> 
        <div class="body">
            <p>@Marc Hodgins:</p>

<p>Your second code snippet addresses my concern quite well.  I didn't realize you could pass a Zend_Db_Table_Select to Zend_Db_Adapter-&gt;fetchOne().  (Of course, now that I look more closely at the API docs, I see that Zend_Db_Table_Select inherits from Zend_Db_Select, so I guess I could have figured this out on my own.)</p>

<p>Thanks for the feedback/lesson.  Your (and Ralph's) point about keeping Zend_Db_Select unaware of Zend_Db_Table is a good one, so I'll "unvote" this issue.</p>

        </div>
    </div>
    </div>

