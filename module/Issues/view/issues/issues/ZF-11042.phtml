<h2>ZF-11042: Getting the full url when a default action is used</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-02-06T15:20:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-30T07:08:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Kim Blomqvist (kblomqvist)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller_Router</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>it is not possible to get the full url including the default action.</p>

<p>this is annoying when you need to add parameters via JS</p>

<p>Zend_Controller_Router_Route_Module, line 250:</p>

<pre class="highlight"><code>
if (!empty($url) || $action !== $this-&gt;_defaults[$this-&gt;_actionKey]) { 
    if ($encode) $action = urlencode($action); 
    $url = '/' . $action . $url; 
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-05-28T07:46:00.000+0000</p> 
        <div class="body">
            <p>Umm... cannot see any attached patch. Furthermore I think this is more like an improvement. Could you provide a detailed use case as I haven't had problems with JS and Module route.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maximilian Weber (webermax) on 2011-05-28T08:04:47.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>

/**
* url() has no option to populate the default action
*/

$actionUrl = $this-&gt;view-&gt;url(...));

// this is my current fix
if ($actionUrl == '/module/controller')
    $actionUrl = '/module/controller/index';

// method is GET
$form-&gt;setAction($actionUrl);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gabor Nagy (gabor_nagy) on 2011-05-28T09:28:47.000+0000</p> 
        <div class="body">
            <p>I try to explain a detailed use case where the current behaviour gets annoying. I have created an ajax grid component in which some parameters (e.g. filtering, ordering) are set by JavaScript code dynamically. It pulls the basic URL from a hidden form field - generated on the server side - and appends the extra parameters to it on the client side. When there are no parameters set, the generated URL coming from the server is missing the action part as described above. So in this case when the JS code tries to append the URL, it cannot figure out what the action name actually is.</p>

<p>I used a dirty hack to fix this, that I included a dummy parameter when generating the URL on the server side so it now contains the action name every time. I think having a framework-level option to always generate the full URL would help a lot in such cases.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-05-28T10:56:27.000+0000</p> 
        <div class="body">
            <p>But wouldn't this break the comfort from the user point of view? For example if I make a link to the landing page</p>

<pre class="highlight"><code>
<a href=""></a></code></pre>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Moore III (wilmoore) (wilmoore) on 2011-05-28T23:33:02.000+0000</p> 
        <div class="body">
            <p>I agree with Kim that you should override the intrinsic view helper with your own.</p>

<h1>Add to your application config</h1>

<p>resources.view.helperPath.some_prefix = /full/path/to/some_prefix_directory</p>

<h1>Extend Zend_View_Helper_Url</h1>

<p>class some_prefix_url extends Zend_View_Helper_Url {}</p>

<h1>Implement the "url" method which overrides the super method</h1>

<p>public function url(...)</p>

<p>The beauty of using this methodology is that you don't have to change any of your current URLs since view helpers are called in a hierarchical manner. In other words, if you provide a "url" helper, it is used, otherwise, the default (Zend Provided) helper of the same name is used.</p>

<p>Here is the intrinsic method:</p>

<pre class="highlight"><code>
    public function url(array $urlOptions = array(), $name = null, $reset = false, $encode = true)
    {
        $router = Zend_Controller_Front::getInstance()-&gt;getRouter();
        return $router-&gt;assemble($urlOptions, $name, $reset, $encode);
    }
</code></pre>

<p>I suggest for your custom version, something like this:</p>

<pre class="highlight"><code>
    public function url(array $urlOptions = array(), $name = null, $reset = false, $encode = true, array $options = array())
    {
        if (! empty($options['full'])) { return $this-&gt;fullUrl(); // you must implement the fullUrl method }
        return parent::url($urlOptions, $name, $reset, $encode);
    }
</code></pre>

<p>Now, when you want to grab a full url, you simply utilize the optional $options array and provide the 'full' key with a value of true (or anything that evaluates to true).</p>

<p>I attribute my understanding of this technique to a post by Hector Virgen: <a href="http://zend-framework-community.634137.n4.nabble.com/Generating-URL-s-View-Helper-Action-Helper-tp3002936p3004194.html">http://zend-framework-community.634137.n4.nabble.com/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gabor Nagy (gabor_nagy) on 2011-05-30T07:08:00.000+0000</p> 
        <div class="body">
            <p>Kim, Wil, thank you for the idea and the detailed instructions!</p>

        </div>
    </div>
    </div>

