<h2>ZF-6630: Zend_Service classes throw Zend_Http_Client_Adapter_Exception when you are unable to connect to the server</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-12T22:57:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-19T08:55:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Service_Amazon</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When you are offline, Zend_Service_Amazon#itemSearch throws Zend_Http_Client_Adapter_Exception with the following code.</p>

<p>$amazon = new Zend_Service_Amazon($getAccessKey, $getCountryCode);
$results = $amazon-&gt;itemSearch($searchOptions);</p>

<p>exception 'Zend_Http_Client_Adapter_Exception' with message 'Unable to Connect to <a>tcp://webservices.amazon.co.jp:80</a>. Error #14851561: ' in C:\xampp\php\PEAR\Zend\Http\Client\Adapter\Socket.php:148 Stack trace:</p>

<h1>0 C:\xampp\php\PEAR\Zend\Http\Client.php(863): Zend_Http_Client_Adapter_Socket-&gt;connect('webservices.ama...', 80, false)</h1>

<h1>1 C:\xampp\php\PEAR\Zend\Rest\Client.php(135): Zend_Http_Client-&gt;request('GET')</h1>

<h1>2 C:\xampp\php\PEAR\Zend\Service\Amazon.php(103): Zend_Rest_Client-&gt;restGet('/onca/xml', Array)</h1>

<h1>3 D:\my\application\libs\Ad.php(147): Zend_Service_Amazon-&gt;itemSearch(Array)</h1>

<p>The code in Zend/Service/Amazon is like the following, but restGet just throws Exception and there are no catch block here.</p>

<p>$response = $this-&gt;_rest-&gt;restGet('/onca/xml', $options);</p>

<p>if ($response-&gt;isError()) {
    /**
     * @see Zend_Service_Exception
     */
    require_once 'Zend/Service/Exception.php';
    throw new Zend_Service_Exception('An error occurred sending request. Status code: '
                                   . $response-&gt;getStatus());
}</p>

<p>Other Zend_Service classes also use the rest object same way.</p>

<p>I am not sure which fix should be better
- Use try...catch block at all such call and rethrow as Zend_Service_Exception
or
- Modify the rest class not to throw the exception in such case</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2009-11-19T08:55:55.000+0000</p> 
        <div class="body">
            <p>Classes generally do not interfere with the exceptions thrown from dependencies unless there's a good reason to. This allows the full exception to fall through to the user by design - obviously they should be aware of general exceptions. Intercepting an Exception is useful when there is a secondary option to cover the failure, but otherwise a rethrow does nothing but change the exception name and type, and modify the message attached and details of the back trace.</p>

<p>Unless there's a compelling reason to change the current method beyond a preference, this will not be fixed.</p>

        </div>
    </div>
    </div>

