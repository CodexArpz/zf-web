<h2>ZF-11282: ZEND_LDAP method bind does not return Exception for credentials need  one try on begin and catch on end function to return error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-04-12T19:37:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-04-29T17:55:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Ldap</li>
            <li>Action_Helper</li>
            <li>Authentication</li>
            <li>LDAP</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When I was testing my LDAP authentication method realized that the "bind ()" was not returning error message then added at the beginning and end of a "try""catch" with only "exception".
Eg: try {
.
.
} catch (Exception $ e) {
    echo $ e-&gt; getMessage ();
    exit ();
}</p>

<p>Note: Please try to fix this problem and return for the next version of Zend_Ldap.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-04-29T17:09:35.000+0000</p> 
        <div class="body">
            <p>This is the expected behavior of Zend_Ldap.  If Zend_Ldap::bind() fails to bind, it throws an exception of type Zend_Ldap_Exception.  The examples on the documentation pages don't do it, but you're Zend_Ldap code should look like this:</p>

<pre class="highlight"><code>
$ldap = new Zend_Ldap($options);
try {
    $ldap-&gt;bind();
    [...your LDAP actions here...]
} catch ( Zend_Ldap_Exception $e ) {
    [...handle case where LDAP can't connect...]
}
</code></pre>

<p>The unit tests in Zend_Ldap_BindTest do this as well.  For example:</p>

<pre class="highlight"><code>
public function testEmptyOptionsBind()
{
    $ldap = new Zend_Ldap(array());
    try {
        $ldap-&gt;bind();
        $this-&gt;fail('Expected exception for empty options');
    } catch (Zend_Ldap_Exception $zle) {
        $this-&gt;assertContains('A host parameter is required', $zle-&gt;getMessage());
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andre Guariento (fominomato) on 2011-04-29T17:55:06.000+0000</p> 
        <div class="body">
            <p>Well, this occurred when the LDAP server was not returned information or took too long to return, I believe that the library was a mistake to delay this because, simply stop the process of research and class error "LDAP exception" did not return anything but null.</p>

<p>My resolution of the problem was put in the search method from the library the output to 'catch (Exception) "and so get the exception error in communication.</p>

<p>As this error was not provided an instability in our LDAP servers do not believe I need to roast our brains to solving a complex.</p>

<p>I used google translate to translate this text, sorry.</p>

        </div>
    </div>
    </div>

