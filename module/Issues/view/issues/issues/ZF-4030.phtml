<h2>ZF-4030: Warning on form validation</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-08-22T01:51:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-28T15:34:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9002">ZF-9002</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For each invalid field Zend_Form generates a warning:</p>

<p>Warning: htmlspecialchars() expects parameter 1 to be string, array given in /Library/WebServer/Library/Zend/View/Abstract.php on line 804</p>

<p>I've encountered this with both Select fields and normal Text fields, but other elements might be affected as well. A valid field does not generate this warning. The error messages do appear next to the elements.</p>

<p>Select code:</p>

<pre class="highlight"><code>
$fieldElement1 = new Zend_Form_Element_Select('field1');
$fieldElement1-&gt;setRequired(true)
              -&gt;setAllowEmpty(false)
              -&gt;setMultiOptions(array('foo' =&gt; 'FOO', 'bar' =&gt; 'BAR'));
</code></pre>

<p>Textfield code:</p>

<pre class="highlight"><code>
$queryElement1 = new Zend_Form_Element_Text('query1');
$queryElement1-&gt;setRequired(true)
              -&gt;setAllowEmpty(false);
</code></pre>

<p>Edit:</p>

<p>The call to Zend_View_Abstract's escape() method originates from Zend_View_Helper_FormErrors line 75. A var_dump() on line 74 gives these results:</p>

<p>array
  'isEmpty' =&gt; string 'Value is empty, but a non-empty value is required' (length=49)</p>

<p>array
  'isEmpty' =&gt; string 'Value is empty, but a non-empty value is required' (length=49)</p>

<p>array
  'field1' =&gt; 
    array
      'isEmpty' =&gt; string 'Value is empty, but a non-empty value is required' (length=49)
  'query1' =&gt; 
    array
      'isEmpty' =&gt; string 'Value is empty, but a non-empty value is required' (length=49)</p>

<p>Edit2:
It appears it's caused by adding the Errors decorator manually with $this-&gt;addDecorator('Errors');</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-23T20:57:03.000+0000</p> 
        <div class="body">
            <p>I'm actually unsure exactly what the issue is. I've tried creating the elements  you specify, passing invalid values to isValid(), and rendering, but with no errors. I've even tried specifying adding the Errors decorator manually -- I simply cannot reproduce any sort of warning.</p>

<p>I'm going to mark the issue as "cannot reproduce". Feel free to re-open if you can provide the following, succinctly:
* Reproduce case
* Expected result (this can even be "no warnings")
* Actual result (this could be "warnings generated" -- please make sure you paste in the warnings)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-08-24T03:53:48.000+0000</p> 
        <div class="body">
            <p>Both of these code snippets reproduce the bug:</p>

<pre class="highlight"><code>
require_once 'Zend/Form.php';
require_once 'Zend/Form/Element/Select.php';
require_once 'Zend/Form/Element/Text.php';
require_once 'Zend/View.php';

class FooForm extends Zend_Form
{
    public function init()
    {
        $fieldElement1 = new Zend_Form_Element_Select('field1');
        $fieldElement1-&gt;setRequired(true)
                      -&gt;setAllowEmpty(false)
                      -&gt;setMultiOptions(array('foo' =&gt; 'FOO', 'bar' =&gt; 'BAR'));
        
        $queryElement1 = new Zend_Form_Element_Text('query1');
        $queryElement1-&gt;setRequired(true)
                      -&gt;setAllowEmpty(false);
                      
        $this-&gt;addElements(array($fieldElement1, $queryElement1));
    }
    
    public function loadDefaultDecorators()
    {
        parent::loadDefaultDecorators();
        $this-&gt;addDecorator('Errors');
    }
}

$form = new FooForm();
$form-&gt;isValid(array('field1' =&gt; 'baz', 'query1' =&gt; ''));

echo $form-&gt;render(new Zend_View());
</code></pre>

<pre class="highlight"><code>
require_once 'Zend/Form.php';
require_once 'Zend/Form/Element/Select.php';
require_once 'Zend/Form/Element/Text.php';
require_once 'Zend/View.php';

class FooForm extends Zend_Form
{
    public function init()
    {
        $fieldElement1 = new Zend_Form_Element_Select('field1');
        $fieldElement1-&gt;setRequired(true)
                      -&gt;setAllowEmpty(false)
                      -&gt;setMultiOptions(array('foo' =&gt; 'FOO', 'bar' =&gt; 'BAR'));
        
        $queryElement1 = new Zend_Form_Element_Text('query1');
        $queryElement1-&gt;setRequired(true)
                      -&gt;setAllowEmpty(false);
                      
        $this-&gt;addElements(array($fieldElement1, $queryElement1));
        
        $this-&gt;addDecorator('FormElements')
             -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dl', 'class' =&gt; 'zend_form'))
             -&gt;addDecorator('Form')
             -&gt;addDecorator('Errors');
    }
}

$form = new FooForm();
$form-&gt;isValid(array('field1' =&gt; 'baz', 'query1' =&gt; ''));

echo $form-&gt;render(new Zend_View());
</code></pre>

<p>Output:</p>

<pre class="highlight"><code>
<br /><b>Warning</b>:  htmlspecialchars() expects parameter 1 to be string, array given in <b>/Library/WebServer/Library/Zend/View/Abstract.php</b> on line <b>804</b><br /><br /><b>Warning</b>:  htmlspecialchars() expects parameter 1 to be string, array given in <b>/Library/WebServer/Library/Zend/View/Abstract.php</b> on line <b>804</b><br /></code></pre><code> 

FOOBAR</code><code>'baz' was not found in the haystack
 

</code><code>Value is empty, but a non-empty value is required
</code><code></code>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-24T14:31:46.000+0000</p> 
        <div class="body">
            <p>The 'Errors' decorator is currently not intended for use at the form level, only with individual elements. I'm going to change this to a feature request, as we probably need a 'FormErrors' decorator.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-07T08:14:08.000+0000</p> 
        <div class="body">
            <p>FormErrors decorator added in r12369 to trunk; will release with 1.7.0</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:09.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by ved prakash bishnoi (vpgodara) on 2010-01-20T03:31:52.000+0000</p> 
        <div class="body">
            <p>Use this for remove haystack error</p>

<p><code>
$fieldElement1 = new Zend_Form_Element_Select('field1');
$fieldElement1-&gt;setRequired(true)
-&gt;setRegisterInArrayValidator(false);
&lt;/code</code></p>

        </div>
    </div>
    </div>

