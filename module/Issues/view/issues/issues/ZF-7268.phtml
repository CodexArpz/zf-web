<h2>ZF-7268: Zend_CodeGenerator_Php_Property_DefaultValue shouldn't include semicolon </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-07-14T10:50:14.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-03-23T20:52:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                SÃ¸ren Haagerup (shaagerup)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_CodeGenerator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When writing Code Generation code, I have found it useful to use <em>Zend_CodeGenerator_Php_Property_DefaultValue</em> to build parts of function body code.
For example:</p>

<pre class="highlight"><code>
require_once 'Zend/CodeGenerator/Php/Class.php';
require_once 'Zend/CodeGenerator/Php/Property/DefaultValue.php';


$elementsArray = array('test1' =&gt; 'Description1', 'test2' =&gt; 'Description2');

$class = new Zend_CodeGenerator_Php_Class();
$class-&gt;setName('SamleClass' );

$temp = new Zend_CodeGenerator_Php_Property_DefaultValue();
$temp-&gt;setValue($elementsArray);

$cbody = '$this-&gt;addElements(' .$temp-&gt;generate(). ');';
$class-&gt;setMethod(array(
    'name'         =&gt; '__construct',
    'visibility'   =&gt; 'public',
    'body' =&gt; $cbody
));


echo $class-&gt;generate();

</code></pre>

<p>results in</p>

<pre class="highlight"><code>
class SamleClass
{

    public function __construct()
    {
        $this-&gt;addElements(array(
                'test1' =&gt; 'Description1',
                'test2' =&gt; 'Description2'
                ););
    }

}
</code></pre>

<p>It could be nice if the semicolon wasn't part of <em>Zend_CodeGenerator_Php_Property_DefaultValue</em> in scenarios like this.</p>

<p>A similar suggestion: If</p>

<pre class="highlight"><code> 
$temp = new Zend_CodeGenerator_Php_Property_DefaultValue();
$temp-&gt;setValue($elementsArray);
</code></pre>

<p>could be simplified to</p>

<pre class="highlight"><code>
$temp = new Zend_CodeGenerator_Php_Property_DefaultValue($elementsArray);
</code></pre>

<p>it would be nice too.</p>

<p>Let me know if there are better ways to accomplish what I'm trying to :-).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-03-23T20:52:26.000+0000</p> 
        <div class="body">
            <p>Typically, you shouldn't use CodeGenerator for the body of a method. If you do, Php_Property_DefaultValue is not the appropriate class to use here anyways -- that class is intended for code generation of a class property, not inline-code (Php_Value would be the more appropriate case here).</p>

        </div>
    </div>
    </div>

