<h2>ZF2-80: require_once - statements without __DIR__ do not work, if Zend Framework isn't in include_path</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-10-20T14:46:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-23T16:17:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Johannes Lichtenwallner (hannes)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Mvc\Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Please remove <em>require_once</em> from class <em>Zend\Controller\Router\Rewrite</em> on line 97. It forces the include_path to contain the Zend Framework.</p>

<pre class="highlight"><code>
    public function addDefaultRoutes()
    {
        if (!$this-&gt;hasRoute('application')) {
            $dispatcher = $this-&gt;getFrontController()-&gt;getDispatcher();
            $request = $this-&gt;getFrontController()-&gt;getRequest();

            require_once 'Zend/Controller/Router/Route/Module.php';
            $compat = new Route\Module(array(), $dispatcher, $request);

            $this-&gt;_routes = array_merge(array('application' =&gt; $compat), $this-&gt;_routes);
        }

        return $this;
    }
    </code></pre>

<p>Affected Version: 2.0.0beta1</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Beno√Æt Durand (intiilapa) on 2011-10-22T11:09:00.000+0000</p> 
        <div class="body">
            <p>Zend\Controller is old MVC port from ZF1. Look the new Mvc component and Zend\Mvc\Router subnamespace for ZF2 beta1.
So priority major is wrong.</p>

<p>How do you want use ZF in app without have ZF in the include path?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Lichtenwallner (hannes) on 2011-10-25T14:04:35.000+0000</p> 
        <div class="body">
            <p>sorry, setting major priority was an error.</p>

<p>{quote}How do you want use ZF in app without have ZF in the include path?{quote}</p>

<p>I thought thats the intention of <em>Zend\Loader\StandardAutoloader</em> as the constructor contains:</p>

<pre class="highlight"><code>
$this-&gt;registerNamespace('Zend', dirname(__DIR__));
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-10-25T14:12:43.000+0000</p> 
        <div class="body">
            <p>The question is: how do you get the standard autoloader in the first place? You have to have it either on your include_path or require it by a known path in the first place. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Lichtenwallner (hannes) on 2011-10-25T14:35:31.000+0000</p> 
        <div class="body">
            <p>yes, you're right, it doesn't really matter. But currently ZendFramework chooses, not the user.</p>

<p><em>Zend\Application\Application</em> requires the StandardAutoloader by absolute path in his constructor:</p>

<pre class="highlight"><code>
require_once __DIR__ . '/../Loader/StandardAutoloader.php';
</code></pre>

<p>So you just have to know the absolute path to Zend\Application\Application. Thats the way i prefer to use ZendFramwork or other libraries (e.g. Doctrine), because i use a shared library path for all projects/services with following directory structure:</p>

<pre class="highlight"><code>
/path/to/library
    /dynamic
        /Doctrine
            /2.1.1
            /2.1.2
        /ZendFramework
            /1.11.10
            /1.11.11
            /2.0.0beta1
</code></pre>

<p>For ZF 1.x i have to use set_include_path, in 2.x not necessarily.</p>

<p>But as i said: it doesn't matter, so it doesn't bother me, if resolution will be <em>won't fix</em> :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-02-23T16:17:40.000+0000</p> 
        <div class="body">
            <p>Zend\Controller has been removed from the mainline ZF2 distribution in favor of a new MVC (Zend\Mvc).  A module providing a ZF1-compatible MVC layer can be found in <a href="https://github.com/zendframework/zf2/tree/master/modules/ZendFramework1Mvc">modules/ZendFramework1Mvc</a></p>

        </div>
    </div>
    </div>

