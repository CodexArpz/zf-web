<h2>ZF-3090: Url-ViewHelper should generate identical urls when using identical parameters in different order</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-04-10T04:43:07.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-04-23T03:31:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.3 (28/Jul/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Michal Minicki (martel)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code><a href="">1</a>
<a href="">1</a></code></pre>

<p>generates</p>

<pre class="highlight"><code><a href="http://localhost/index/index/a/b/1/2">http://localhost/index/index/a/b/1/2</a>
<a href="http://localhost/index/index/1/2/a/b">http://localhost/index/index/1/2/a/b</a></code></pre>

<p>Both urls refer to the same page, but are different. It might be useful, if the url-helper (or maybe better: the router) will be generate same urls, when passing same arguments. In the helper its easy to solve in line 70</p>

<pre class="highlight"><code>        $route = $router-&gt;getRoute($name);
        ksort($urlOptions); // &lt;-----
        $url = rtrim($front-&gt;getBaseUrl(), '/') . '/';
        $url .= $route-&gt;assemble($urlOptions, $reset);</code></pre>

<p>As I said, its maybe better to implement this in the router, but i dont had a look at it ;)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:16:13.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T10:43:06.000+0000</p> 
        <div class="body">
            <p>Assigning to Martel to evaluate and triage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T10:43:42.000+0000</p> 
        <div class="body">
            <p>Scheduling for next mini release; Martel, let me know if this is a problem, and I'll re-schedule it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2008-04-22T11:53:48.000+0000</p> 
        <div class="body">
            <p>Sebastian, you can't sort the wildcard parameters. That's because it would make keeping parameters in specific order kind of impossible. Imagine you have a search system and would like to keep supporting parameters in this specific order: page, order, dir (like: page/1/order/name/dir/asc) . If you sort it it will mess your carefully chosen url scheme (and possibly break all current application to date). You just can't order wildcard parameters since you don't declare their positions in the route URL scheme.</p>

<p>If you require such functionality then I advise creating full scale routes for your site instead of relying on "magic" functionality. This way you declare positions for parameters so the router knows where to place each one exactly. For instance, yuo could create a route like this:</p>

<pre class="highlight"><code>
new Route(':page/:order/:dir');
</code></pre>

<p>and then you can pass parameters to URL helper in any order you wish, eg. $this-&gt;url(array(dir =&gt; 'asc', 'page' =&gt; '3')).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sebastian Krebs (kingcrunch) on 2008-04-23T03:31:34.000+0000</p> 
        <div class="body">
            <p>Later I thought it might disturb some existing routes, so i think, youre right. Qoure idea is nice,  thank you :)</p>

        </div>
    </div>
    </div>

