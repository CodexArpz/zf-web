<h2>ZF-6666: pdoType on Zend_Db_Adapter_Pdo_Mssql could be guessed automaticaly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-05-14T20:32:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-03-13T20:55:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Mini Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12163/Mssql.php.patch">Mssql.php.patch</a></li>
            <li><a href="/issues/secure/attachment/12073/patch">patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Its possible to determine the pdoType using something like this:</p>

<p>$avaliableDrivers = PDO::getAvailableDrivers();
$suitedDrivers = array('mssql', 'dblib', 'sybase');
$avaliableSuitedDrivers = array_intersect($avaliableDrivers, $suitedDrivers);
$bestDriver = array_shift($avaliableSuitedDrivers);</p>

<p>Scripts using such algorithm could run on any enabled plataform without changing any configuration.</p>

<p>Sample Zend_Db_Adapter_Pdo_Mssql modification:</p>

<pre class="highlight"><code>
//

        if (isset($dsn['pdoType'])) {
            switch (strtolower($dsn['pdoType'])) {
                case 'freetds':
                case 'sybase':
                    $this-&gt;_pdoType = 'sybase';
                    break;
                case 'mssql':
                    $this-&gt;_pdoType = 'mssql';
                    break;
                case 'dblib':
                default:
                    $this-&gt;_pdoType = 'dblib';
                    break;
            }
            unset($dsn['pdoType']);
        } else {
            $avaliableDrivers = PDO::getAvailableDrivers();
            $avaliableSuitedDrivers = array_intersect($avaliableDrivers, array('mssql', 'dblib', 'sybase'));
            if (count($avaliableSuitedDrivers)) {
                $this-&gt;_pdoType = array_shift($avaliableSuitedDrivers);
            }
        }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-05-14T23:16:29.000+0000</p> 
        <div class="body">
            <p>set component and auto reassign</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-06-23T16:42:37.000+0000</p> 
        <div class="body">
            <p>Set as patch as for there's a fix available.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jayson Santos dos Reis (jaysonsantos) on 2009-07-15T08:48:35.000+0000</p> 
        <div class="body">
            <p>Is this a valid patch ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jayson Santos dos Reis (jaysonsantos) on 2009-08-26T14:31:59.000+0000</p> 
        <div class="body">
            <p>Attaching a better patch to revision #17835.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jayson Santos dos Reis (jaysonsantos) on 2009-08-26T14:42:58.000+0000</p> 
        <div class="body">
            <p>Please, consider only Mssql.php.patch</p>

        </div>
    </div>
    </div>

