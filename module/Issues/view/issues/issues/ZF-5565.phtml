<h2>ZF-5565: Zend_Soap_Server - method handle() - only returns null by an non user error (error handling -&gt; E_USER_ERROR)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-01-16T05:58:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-16T09:16:10.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sven (sunnysven)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Soap_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Soap_Server line 730 (SVN):</p>

<p>set_error_handler(array($this, 'handlePhpErrors'), E_USER_ERROR);</p>

<p>Change "E_USER_ERROR" to "E_ALL" so that I will be able to throw an SoapFault when a server error occures.
So I will be able to overwrite the function "handlePhpErrors" in my Class "Ms_Soap_Server" which extends "Zend_Soap_Server".</p>

<p>With these changes it will be possible to return a SoapFault with a message like "sorry, internal server error" when an error occures in a function of a service class (database connection error).</p>

<p>Otherwise it is impossible to register my own error-handler, because Zend_Soap_Server registers an error-handler on line 730 (SVN).
set_error_handler(array($this, 'handlePhpErrors'), E_USER_ERROR);</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-01-16T09:11:16.000+0000</p> 
        <div class="body">
            <p>the problem why we cannot set this to E_ALL is the following: The errors would by default be thrown to the userland code, which for SOAP Servers is a potential security leak.</p>

<p>What i am going to do is the following, i'll refactor the registering of the fault handler and move it into a protected method which can be overwritten more easily than the handle() function.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-01-16T09:16:09.000+0000</p> 
        <div class="body">
            <p>Added new protected method _initializeSoapErrorContext() that can be overwritten by userland code.</p>

        </div>
    </div>
    </div>

