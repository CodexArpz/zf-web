<h2>ZF-9441: Zend_Validate_StringLength doesn't reset errors and messages if null is passed in as value</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-17T08:34:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-17T12:00:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.3 (01/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The $this-&gt;_errors and $this-&gt;_messages is normally reset when isValid() is invoked (actually Zend_Validate_Abstract::_setValue does the reset).</p>

<p>In Zend_Validate_StringLength, the isValid() checks for is_string before it does a _setValue.</p>

<p>This means if it is not re-instantiated it will keep the $this-&gt;_messages and $this-&gt;_errors from the previous validation.</p>

<p>Fix:
Move _setValue() in Zend_Validate_StringLength to the first line of Zend_Validate_StringLength::isValid()</p>

<p>public function isValid($value)
    {
        $this-&gt;_setValue($value);</p>

<pre><code>    if (!is_string($value)) {
        $this-&gt;_error(self::INVALID);
        return false;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-17T12:00:20.000+0000</p> 
        <div class="body">
            <p>Moving _setValue "before" the validation (which looks if the given value has the correct type, would add new problems when a false type is given.</p>

<p>According to API doc from StringLength only "string" is allowed as type. A "NULL" is no string, so from this point the behaviour is correct.</p>

        </div>
    </div>
    </div>

