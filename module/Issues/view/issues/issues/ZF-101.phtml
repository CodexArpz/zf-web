<h2>ZF-101: Zend_View_Abstract::_loadClass() doesn't work with classes on the include path (TRAC#99)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-21T21:47:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.6.0 (16/Dec/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10009/Zend_View_Abstract.patch">Zend_View_Abstract.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><a href="http://framework.zend.com/developer/ticket/99">http://framework.zend.com/developer/ticket/99</a></p>

<p>Zend_View_Abstract::_loadClass() calls is_readable() to find out if the particular file exists on the path.</p>

<p>This causes problems when you want to have a set of common view helpers for multiple projects. In my case, I use a directory called Akrabat/View/Helper as part of a tree that mirrors the ZF tree for consistency.)</p>

<p>My preference would be to change</p>

<pre class="highlight"><code>
    if (is_readable($dir . $file)) {
</code></pre>

<p>to</p>

<pre class="highlight"><code>
    if (Zend::isReadable($dir . $file)) {
</code></pre>

<p>to solve this problem.</p>

<p>Suggested patch attached.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Zend Framework (zend_framework) on 2006-06-21T21:47:17.000+0000</p> 
        <div class="body">
            <p>05/28/06 16:18:19: Modified by rob.nospam@akrabat.com</p>

<pre><code>* attachment Zend_View_Abstract.patch added.
</code></pre>

<p>Suggested patch v1</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nick Lo (nicklo) on 2006-06-26T00:55:09.000+0000</p> 
        <div class="body">
            <p>Rather than make the class dependant on Zend.php how about changing...</p>

<pre class="literal"> 
if (is_readable($dir . $file)) {
    include $dir . $file;
</pre>

<p>...to...</p>

<pre class="literal"> 
if (include $dir . $file) {
</pre>

<p>...which would achieve much the same result</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nick Lo (nicklo) on 2006-06-26T23:19:43.000+0000</p> 
        <div class="body">
            <p>Forget my suggestion...</p>

<pre class="literal"> 
if (include $dir . $file) {
</pre>

<p>...as this produces warnings as each _path stack is looped over</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jayson Minard (jayson) on 2006-07-09T00:42:45.000+0000</p> 
        <div class="body">
            <p>Mind looking at this for 0.2.0?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Elisamuel Resto (user00265) on 2006-07-30T22:20:31.000+0000</p> 
        <div class="body">
            <p>One way is explode the path and then loop through it doing a Zend::isReadable() for each path with the requested file, that is somewhat slow in my eyes, but it's the only solution I see for making this work.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-02T00:11:51.000+0000</p> 
        <div class="body">
            <p>Fixed in 1428</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-02T00:34:27.000+0000</p> 
        <div class="body">
            <p>Further analysis shows that the original behaviour was intentional. addScriptPath() can be used at any point to add additional view script paths to the view object. The reporter need only have done the following:</p>

<pre class="highlight"><code>
$view-&gt;addScriptPath('/path/to/common/view/scripts');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-02T00:35:16.000+0000</p> 
        <div class="body">
            <p>Behaviour was intentional, and a way to do as the reporter desired already existed in the code.</p>

        </div>
    </div>
    </div>

