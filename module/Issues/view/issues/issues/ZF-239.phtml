<h2>ZF-239: Consider RewriteRouter's setRewriteBase option in _redirect() method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-07-12T10:56:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.6.0 (16/Dec/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marc Jakubowski (octavian)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using the new RewriteRouter and trying to do a redirect by calling $this-&gt;_redirect('/controller/action/') the redirect method should check if a RewriteBase is set and prepend it to the URL. It could look like this:</p>

<pre class="highlight"><code>
/**
 * Redirect to another URL
 *
 * @param string $url
 */
final protected function _redirect($url)
{
        if (headers_sent()) {
            throw new Zend_Controller_Action_Exception('Cannot redirect because headers have already been sent.');
        }
        
        // add RewriteBase when RewriteRouter is used
    $router = Zend_Controller_Front::getInstance()-&gt;getRouter();
    if ($router instanceof Zend_Controller_RewriteRouter) {
        $url = $router-&gt;getRewriteBase() . $url;
    }
        
    // prevent header injections
        $url = str_replace(array("\n", "\r"), '', $url);
        
        // redirect
        header("Location: $url");
        exit();
}
</code></pre>

<p>There should also be some checks with trailing slashes.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:27:45.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2006-11-16T05:38:44.000+0000</p> 
        <div class="body">
            <p>Assigning to Matthew, lead on Controller components.</p>

<p>With the new MVC, Response object may pull the BaseURL out of Request for redirection purposes. I personally would like to see a flag (as a second parameter for example) where user can choose whether to compute a relative redirect (using baseURL) or to craft it from scratch:</p>

<pre class="highlight"><code>
public function redirect($url, $clean = false) 
{
   ...
   if (!$clean)  {
      $base = $this-&gt;getRequest()-&gt;getBaseURL();
      $url = $base . $url;
   }
   ...
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-28T14:19:38.000+0000</p> 
        <div class="body">
            <p>Functionality added in revision 1901. New prototype is:</p>

<pre class="highlight"><code>
protected function _redirect($url, $code = 302, $prependBase = true);
</code></pre>

<p>If $prependBase is true and the $url is relative, prepends the base URL as found in the request object to the $url prior to redirecting.</p>

        </div>
    </div>
    </div>

