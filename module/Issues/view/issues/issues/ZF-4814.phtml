<h2>ZF-4814: Promote actions' level to CLASS level from FUNCTION level.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-11-05T20:16:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-06T05:36:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                GyongChol (three_star123)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi, PHP developers.</p>

<p>I have been developing several web-sites with Zend FW.
( template engine : Smarty )</p>

<p>I developed a few web-sites with "raw Zend" as it was.
But, I felt few shortcomings in controller part.
 - in case that controller class contains many actions, 
   controller class files' size became to be large.
 - In many cases, action functions wasn't relative to each other.
 - It was inconvenient to process common works like as authentication and etc.</p>

<p>In order to overcome these shortcomings, 
I have modified some classes related to Zend controller so that
promote actions to CLASS level.
I made action classes derived from Zend_Controller_Action.</p>

<p>Each action classes has three functions, which charges some works respectively.
These functions are executed by dispatch function of Zend_Controller_Action.
Please, refer to following codes.</p>

<pre><code>/**
 *  Authentication process before main process.
 *
 *  @access public
 *  @return string  LocationPath(null : normal, false : stop next process)
 */
public function authenticate()
{
    /* check whether the request is available, or not */
    return null;
}

/**
 *  Preparing process before main process.
 *
 *  @access public
 *  @return string  LocationPath(null : normal, false : stop next process)
 */
public function prepare()
{
    /* input check and convert input data automatically */
    return null;
}

/**
 *  Main Process
 *
 *  @access public
 *  @return string  LocationPath(null : no forwarding )
 */
public function perform()
{
    /* major process : db access, ... */
    return null;
}

/**
 * Dispatch requested action. Called by Zend_Front_Controller
 * 
 * @return void
 */
final public function dispatch()
{
    // Notify helpers of action preDispatch state
    $this-&gt;_helper-&gt;notifyPreDispatch();

    $this-&gt;preDispatch();
    if ($this-&gt;getRequest()-&gt;isDispatched()) {
        // preDispatch() didn't change the action, so we can continue
        if( ! $this-&gt;_forwardAction( $this-&gt;authenticate() ) )
        {
            if( ! $this-&gt;_forwardAction( $this-&gt;prepare() ) )
                $this-&gt;_forwardAction( $this-&gt;perform() );
        }

        $this-&gt;postDispatch();
    }

    // whats actually important here is that this action controller is 
    // shutting down, regardless of dispatching; notify the helpers of this 
    // state
    $this-&gt;_helper-&gt;notifyPostDispatch();
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-06T05:36:20.000+0000</p> 
        <div class="body">
            <p>While I appreciate your effort here, I fail to see anything here that is not already possible with the combination of action controllers, action helpers, and existing components. If you feel strongly about these ideas, I encourage you to create a proposal in the wiki so that you can gather community feedback.</p>

        </div>
    </div>
    </div>

