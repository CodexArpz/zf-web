<h2>ZF-1750: Make Db adapters return consistent datatype from lastInsertId()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-07-20T23:47:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-01-23T18:32:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.1 (30/Jul/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When queried for lastInsertId , the PDO_MYSQL returns a string representing the id of the last inserted row instead of an integer. The MYSQLi adapter returns an integer (I cannot comment on any other adapters since I have not tested further). In the Zend_Db_Adapter_Abstract, the result of lastInsertId is defined as integer.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-07-23T07:16:05.000+0000</p> 
        <div class="body">
            <p>Assigned to Bill</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-27T01:45:12.000+0000</p> 
        <div class="body">
            <p>This does affect most of the Db adapters, and it also affects the {{lastSequenceId()}} and {{nextSequenceId()}} methods.</p>

<p>Most adapters return a string, even though you might expect the value of an auto-generated value would be an integer.  The datatype is string because the RDBMS might return a 64-bit integer value, but this would result in an overflow on 32-bit PHP distributions.</p>

<p>In the case of the mysqli extension, the last_insertid class property is a PHP {{int}} so it is at risk of overflow if you use a primary key with a datatype of {{BIGINT}} or {{SERIAL}} and {{AUTO_INCREMENT}} modifier.  But there is not much we can do about that, it's a design flaw in the mysqli extension.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-27T02:30:11.000+0000</p> 
        <div class="body">
            <p>Committed fix in trunk revision 5876.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-27T22:18:52.000+0000</p> 
        <div class="body">
            <p>Changes reviewed by Darby.</p>

<p>Committed to ZF 1.0.1 branch in revision 5906.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-01-23T18:32:37.000+0000</p> 
        <div class="body">
            <p>Updating Fix Version to follow issue tracker conventions.</p>

        </div>
    </div>
    </div>

