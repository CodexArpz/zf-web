<h2>ZF-4486: PDOStatement is of type Traversable, Zend_Db_Statement should be an Iterator</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-10-04T11:55:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-22T00:34:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>PDOStatement has type Traversable. This is a php-internal type. 
To my surprise Zend_Db_Statement doesn't expose this interface. I expect at least Zend_Db_Statement_Pdo to be iterative.
Iterator extends Traversable and this interface can be used in userland code. Implementing the Iterator interface for Zend_Db_Statement would solve this discrepancy. We can throw an NotImplementedException for rewind().</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-11-27T08:01:24.000+0000</p> 
        <div class="body">
            <p>Perhaps we could use IteratorAggregate.</p>

<p>The getIterator() method could then return the PDOStatement, as return $this-&gt;_stmt</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-12-19T06:48:55.000+0000</p> 
        <div class="body">
            <p>Something like this works :</p>

<pre class="highlight"><code>
class Zend_Db_Statement_Pdo extends Zend_Db_Statement implements IteratorAggregate
{
   / ...
    public function getIterator()
    {
        return new IteratorIterator($this-&gt;_stmt);
    }
}
</code></pre>

<p>But I don't know if that is THE solution.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-12-22T00:34:37.000+0000</p> 
        <div class="body">
            <p>r13420 adds the improvement</p>

        </div>
    </div>
    </div>

