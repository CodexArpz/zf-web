<h2>ZF-10179: Zend_Http_Client failes to decode reply</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-07-19T07:38:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:33.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am trying to use Zend_Http_Client to fetch a specific page (www . nu . nl). I am using this code</p>

<p>$client = new Zend_Http_Client($url,
    array(
        'maxredirects' =&gt; 5, 
        'timeout' =&gt; 30,
        'useragent' =&gt; 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.3) Gecko/20010801 '
    )
);
$code = $client-&gt;request("GET");
$pageBody = $code-&gt;getBody();</p>

<p>For this specific site, $pagebody is empty (0). Using xdebug, it seems that it fetches the encoded response but fails on the decoding. Also, and this is wierd to me, sometimes it works with no problem! So, it is not deterministically reproducible. On my tests, it failed most of the time.</p>

<p>For many other pages I have tried, it works with absolutely no problem. The error has been confirmed both on a Wamp server and on a Lamp one (on different locations, different network providers).</p>

<p>Edit: The raw data can be found here:  <a href="http://pastebin.com/raw.php?i=r5xe2xzC">http://pastebin.com/raw.php?i=r5xe2xzC</a> 
Note that this is from a dynamic site so each request does not necessarily get the same data, so the above refers to the data sent for that specific request.</p>

<p>Edit2: Full response including headers can be downloaded from here: <a href="http://rapidshare.com/files/408267267/rawresp210710.rar">http://rapidshare.com/files/408267267/…</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2010-07-19T07:43:22.000+0000</p> 
        <div class="body">
            <p>Could you supply which encoding in question causes this failure? without this, it would be difficult to produce a reliable test case to prove any fix for this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by john (jazz) on 2010-07-19T08:01:59.000+0000</p> 
        <div class="body">
            <p>As I understand, it is gzip encoded.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2010-07-19T12:59:26.000+0000</p> 
        <div class="body">
            <p>Can you stringify a response that fails, and save it to a file and attach it here?</p>

<p>Eg:</p>

<pre class="highlight"><code>
$debugFile = '/tmp/response.txt';

$code = $client-&gt;request('GET');
$pageBody = $code-&gt;getBody();

if (! $pageBody) {
   file_put_contents($debugFile, $code-&gt;asString());
}
</code></pre>

<p>And attach $pageBody to this report?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by john (jazz) on 2010-07-19T15:09:48.000+0000</p> 
        <div class="body">
            <p>I can't reproduce it at this time on either Windows or Linux. I run a test 100 times on both and it was successful.</p>

<p>I notice they use "Juniper Networks NitroCache/v1.0" so it is possible that there was a glitch on the server side and not on the framework.</p>

<p>I will be monitoring it for the next days. Stupidly enough, I did not record the raw data on the first day I noticed the problems. I am very sorry if I acted too fast and unwise on this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2010-07-20T01:34:08.000+0000</p> 
        <div class="body">
            <p>np, don't worry about it :)</p>

<p>If you're able to capture the raw request, we can easily make a test case out if it.</p>

<p>If you can't reproduce this for some time, feel free to close the bug.</p>

<p>Shahar.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by john (jazz) on 2010-07-20T19:29:11.000+0000</p> 
        <div class="body">
            <p>I have finally managed to capture it. :)</p>

<p>I have uploaded the result from getRawBody() (base64encoded) here: <a href="http://pastebin.com/raw.php?i=r5xe2xzC">http://pastebin.com/raw.php?i=r5xe2xzC</a></p>

<p>This decodes to an empty string with getBody().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by john (jazz) on 2010-07-20T19:39:08.000+0000</p> 
        <div class="body">
            <p>Updated with more information</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2010-07-20T20:33:18.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>I was specifically asking for the entire response (incl. headers) because the body by itself can't tell us what Http_Client was trying to do with it (e.g. what Transfer-Encoding, Content-Transfer-Encoding etc. headers are sent).</p>

<p>Can you please try it again and this time grab the entire output of $response-&gt;asString() and paste it there? (or upload as a file).</p>

<p>BTW the body is a base64-encoded gzipped HTML page, which is AFAIK not a method of transporting content described in any HTTP standard.</p>

<p>Thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by john (jazz) on 2010-07-21T13:57:25.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>Thank you for you input. I will try to do as you instructed and update this.</p>

<p>Please note that I encoded it in base64 in order to upload it as string in pastebin. The raw response was <em>not</em> in base64 encoding, it looked binary to me. So I used base64 to make sure that it did not get corrupted when I uploaded it to pastebin.</p>

<p>Thank you.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by john (jazz) on 2010-07-21T14:16:00.000+0000</p> 
        <div class="body">
            <p>New response recorded using asString() method.</p>

<p>Please download it form here: <a href="http://rapidshare.com/files/408267267/rawresp210710.rar">http://rapidshare.com/files/408267267/…</a></p>

<p>The rar contains 2 files, created with the following code.</p>

<pre class="highlight"><code>
            $raw = $code-&gt;asString();
            $fp = fopen('rawresp-base64.txt', "w");
            fwrite($fp, base64_encode($raw));
            fclose($fp);
            $fp2 = fopen('rawresp3.txt', "wb");
            fwrite($fp2, $raw);
            fclose($fp2);
</code></pre>

<p>Best regards,</p>

<p>John</p>

        </div>
    </div>
    </div>

