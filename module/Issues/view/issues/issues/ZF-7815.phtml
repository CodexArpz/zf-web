<h2>ZF-7815: In Zend Application with namespace &quot;Default_&quot;, there is some errors to load modules with namespace &quot;Default_ModuleName_&quot;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-09-09T17:47:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-05T15:19:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.2 (30/Dec/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nicola Avancini (niscio)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6484">ZF-6484</a></li>
            <li><a href="/issues/browse/ZF-11219">ZF-11219</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>if i set to the module the namespace Default_ModuleName the class Zend_Loader_Autoloader return the wrong Default_ resource instead of Default_ModuleName.</p>

<p>Becouse the class search the first Resource with the 
0 === strpos($class, $ns)</p>

<p>But the resource is put by Zend_Application_Module_loader.... in this order
1. Default_
2. Default_ModuleName
etc..</p>

<p>I propose to replace in Zend_Loader_Autoloader at line 304 the foreach with the for that begins the search from the bottom up
like this..
        //foreach (array_keys($this-&gt;_namespaceAutoloaders) as $ns) {
        $keys = array_keys($this-&gt;_namespaceAutoloaders);
        for($i = count($keys); $i &gt; 0 ; $i--){<br />
            $ns = $keys[$i - 1];
             if ('' == $ns) {
                continue;
            }
            if (0 === strpos($class, $ns)) {
                $namespace   = $ns;
                $autoloaders = $autoloaders + $this-&gt;getNamespaceAutoloaders($ns);<br />
                break;
            }
        }</p>

<p>and remove the control in Zend_Loader_Autoloader_Resource at line 147 that check if the first argument of split of classname by _ is equal to namespace loaded
//        if (!empty($namespaceTopLevel)) {
//            $namespace = array_shift($segments);
//            if ($namespace != $namespaceTopLevel) {
//                // wrong prefix? we're done
//                return false;
//            }
//        }</p>

<p>Excuse my poor English.
I do not know if this model was intended or not but I felt much more comfortable that a module could be prefixed with the application,
but     I hope it is not interfering.</p>

<p>Good Work!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-06-18T09:11:05.000+0000</p> 
        <div class="body">
            <p>I'm actually not entirely clear from your description what the issue you're experiencing is.</p>

<p>Can you please provide the following:
* Short reproduce code displaying the issue
* What your expectations are
* What the actual result is</p>

<p>In your case, it sounds like autoloading of module resources is not working as expected, but it also sounds like you may be using a compound class prefix. Please make sure your example fully illustrates any such configuration.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-06-18T09:27:56.000+0000</p> 
        <div class="body">
            <p>This appears to duplicate ZF-6484.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nicola Avancini (niscio) on 2010-06-21T02:49:55.000+0000</p> 
        <div class="body">
            <p>Yes, is duplicate...</p>

<p>In my case i create an application with namespace "Apps_", then when i tried to create 
modules extension i trie to assign module namespace like "Apps_Blog", but this don't work becouse Zend_Loader_autoloader takes the first namespace available (in this case Apps_).</p>

<p>I tried to post a simple patch for resolv this issue</p>

<p>Zend_Loader_Autoloader at line 304</p>

<pre class="highlight"><code>
(--)//foreach (array_keys($this-&gt;_namespaceAutoloaders) as $ns) {
(++)$keys = array_keys($this-&gt;_namespaceAutoloaders);
(++)for($i = count($keys); $i &gt; 0 ; $i--){
       $ns = $keys[$i - 1];
       if ('' == $ns) { continue; }
       if (0 === strpos($class, $ns)) { $namespace = $ns; $autoloaders = $autoloaders + $this-&gt;getNamespaceAutoloaders($ns); break; }
    }
</code></pre>

<p>Zend_Loader_Autoloader_Resource at line 147</p>

<pre class="highlight"><code>
(--)// if (!empty($namespaceTopLevel)) {
(--)//    $namespace = array_shift($segments);
(--)//    if ($namespace != $namespaceTopLevel) { // 
(--)//        wrong prefix? we're done 
(--)//        return false; 
(--)//    }
(--)// }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-07-05T15:19:50.000+0000</p> 
        <div class="body">
            <p>Fixed with ZF-11219 for release 1.11.2.</p>

        </div>
    </div>
    </div>

