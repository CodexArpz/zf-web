<h2>ZF-9124: JQuery auto-enables if ZendX_Application_Resource_Jquery is used</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-09T07:56:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-07-16T05:14:26.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.7 (28/Jul/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Dolf Schimmel (Freeaqingme) (freak)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application_Resource</li>
            <li>ZendX_JQuery</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9980">ZF-9980</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12729/Jquery.php.diff">Jquery.php.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When you add JQuery support via resources, e.g. in config.ini:</p>

<pre class="highlight"><code>
resources.jquery.stylesheet = "/styles/blitzer/jquery-ui.css"
</code></pre>

<p>It becomes always enabled. The problem is located inside
ZendX_Application_Resource_Jquery::_parseOptions() method.
Options are pared inside foreach loop:</p>

<pre class="highlight"><code>
109         foreach ($options as $key =&gt; $value) {
...         ...
156         }
</code></pre>

<p>But somebody put code for uienable parameter outside that loop:</p>

<pre class="highlight"><code>
158         if ((isset($key['uienable']) &amp;&amp; (bool) $key['uienable'])
159             || (isset($key['ui_enable']) &amp;&amp; (bool) $key['ui_enable'])
160             || (!isset($key['ui_enable']) &amp;&amp; !isset($key['uienable'])))
161         {
162             $this-&gt;_view-&gt;JQuery()-&gt;uiEnable();
163         } else {
164             $this-&gt;_view-&gt;JQuery()-&gt;uiDisable();
165         }
</code></pre>

<p>There are two ways of solving this:
First is to put code back into foreach loop, so the case will look like:</p>

<pre class="highlight"><code>
case 'uienable':
case 'ui_enable':
    if ((bool) $value) {
        $this-&gt;_view-&gt;JQuery()-&gt;uiEnable();
    } else {
        $this-&gt;_view-&gt;JQuery()-&gt;uiDisable();
    }
    break;
</code></pre>

<p>I also propose to include new option:</p>

<pre class="highlight"><code>
case 'enable':
    if ((bool) $value) {
        $this-&gt;_view-&gt;JQuery()-&gt;enable();
    } else {
        $this-&gt;_view-&gt;JQuery()-&gt;disable();
    }
    break;
</code></pre>

<p>But to keep less lines of code and to keep somebody's idea
to move logic of <code>uienable</code> option parsing out from that loop,
I have prepared a patch which I will attach to this report.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2010-02-09T07:58:18.000+0000</p> 
        <div class="body">
            <p>My proposed patch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andreas Möller (localheinz) on 2010-02-11T10:50:47.000+0000</p> 
        <div class="body">
            <p>I believe this is just an error, as in ZendX_Application_Resource_Jquery it says</p>

<pre class="literal"> 

/**
 *   resources.Jquery.uienable = true;
 *   resources.Jquery.ui_enable = true;
 */

</pre>

<p>Should be fixed, though,because there's no way to disable JQuery UI unless you put the "uienable" option last in the specified options, and even then, it will only work when you have specified a "cdn_ssl" option, as otherwise, the "cdn_ssl" option is appended to the specified options and will be the last value in the iteration.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2010-02-13T11:32:32.000+0000</p> 
        <div class="body">
            <p>Yes, it's an error. And that was what I said.
Bug == error. Or what did you tried to say?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-02-13T11:41:08.000+0000</p> 
        <div class="body">
            <p>Benjamin, I think this is an issue with zendx_jquery, cause imho it shouldn't enable the ui part unless uiEnable() got called. If you disagree, please elaborate and reassign to me.</p>

<p>{quote}But to keep less lines of code and to keep somebody's idea to move logic of <code>uienable</code> option parsing out from that loop,{quote}</p>

<p>That 'somebody' would be me. So if you have any questions about that, feel free to ask.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2010-02-14T04:52:47.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>I don't have any questions.</p>

<p>I found a bug, fixed it (at least in my project) and shared patch with you. If you'll look into the code (at least at the part that I showed) you'll see that this code is totally unpredictable. Using variables from the loop outside it - is not good idea at all.</p>

<p>This is not an issue with ZendX_JQuery, it's an issue with ZendX_Application_Resource_Jquery. ZendX_Jquery doesn't enabled by default, but it get's if you'll use ZendX_Application_Resource_Jquery, as the last auto-enables jQuery UI because of small bug (or one may call it a "feature"). And enabling of jQuery UI in it's turn enables jQuery.</p>

<p>So, NO! This is not an issue with ZendX_JQuery.</p>

<p>PS In fact, you can resolve this issue with "not a bug" and pretend that it should be as it is. All I wanted is to point out the bug someone can mess with (as I did) and share a solution. Will you fix it or not - I don't care. :))</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Igor Bekrenyov (tigerman) on 2010-07-06T21:45:14.000+0000</p> 
        <div class="body">
            <p>Version 1.10.6
Still the same problem. :(
Apply the patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Gräfe (cgraefe) on 2010-07-16T02:57:17.000+0000</p> 
        <div class="body">
            <p>This is definitely an issue with ZendX_Application_Resource_Jquery. Without even considering any jQuery plugin semantics: $key['uienable'] is currently used in a scope that $key is not even defined in. At least it wouldn't be if we were using a "real" programming language. ;-)</p>

<p>So please, fix this issue in the next release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-07-16T05:12:44.000+0000</p> 
        <div class="body">
            <p>This issue was fixed with ZF-9980, committed with r22499 and merged with the release branch in r22500. Unfortunately 1.10.6 was packaged around r 22482, so it just missed it. You can either use trunk, apply the patch yourself, or wait for August. Usually in the first week of each month a new mini release is released.</p>

        </div>
    </div>
    </div>

