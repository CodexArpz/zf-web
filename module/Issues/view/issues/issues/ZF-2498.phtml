<h2>ZF-2498: Zend_OpenID doesn't play nice with Zend_Controller (due to rewrites)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-01-25T15:39:04.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-22T03:45:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Steven Osborn (steve918)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Dmitry Stogov (dmitry)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_OpenId</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When implementing Zend_OpenID inside a controller Zend_OpenID::selfUrl() is always going to return the front controller 'index.php' but in reality it is being routed from <a href="http://example.com/controller/action">http://example.com/controller/action</a></p>

<p>It seems like it should be possible to just cache the return_to url that I send during Consumer::login() and check it against the one received in Consumer::verify().  As long as the return to URL matches what I expect, it's really not important that it matches the current URL.  Doing so just makes it painful to work with controllers and rewrites.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Steven Osborn (steve918) on 2008-01-27T14:02:57.000+0000</p> 
        <div class="body">
            <p>I'm kind of curious is there any reason this check could not be dropped completely.  I don't see any obvious reason why it needs to be there and it complicates things a bit for mod_rewrite users.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Osborn (steve918) on 2008-01-28T14:25:49.000+0000</p> 
        <div class="body">
            <p>Heres an option:</p>

<p>In JanRain's implementation you actually pass  the return_to URL to the complete() function.</p>

<p>$response = $this-&gt;consumer-&gt;complete($return_to);</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-12T11:35:11.000+0000</p> 
        <div class="body">
            <p>Sorry, but I'm not able to reproduce the issue.
The demo MVC application "demo/Zend/OpenId/mvc_auth" works fine.
The bug is probably already fixed some time ago (svn diff -r 6835:7023 library/Zend/OpenId.php).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Osborn (steve918) on 2008-02-12T12:39:53.000+0000</p> 
        <div class="body">
            <p>Hmm... I wasn't working out of SVN.  I believe I downloaded a nightly, but perhaps not.  I'll check it out via svn and give it another go.  Sorry.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Schlag (adamschlag) on 2008-02-19T18:59:18.000+0000</p> 
        <div class="body">
            <p>Dmity,</p>

<p>The issue is that on a CGI/FastCGI setup (I'm using lighttpd myself) the variables that are being used to evaluate selfUrl don't give you what you need.</p>

<p>For example, when I load a URL such as <a href="http://localhost/testmod/testcontrol/testaction">http://localhost/testmod/testcontrol/testaction</a> and add a phpinfo() in there to check variables, this is what I see:</p>

<p>$_SERVER['SCRIPT_URI'] is not set
$_SERVER['HTTP_HOST'] is set to localhost
$_SERVER['SERVER_PORT'] is set to 80
$_SERVER['SERVER_NAME'] is set to localhost
$_SERVER['SCRIPT_URL'] is not set
$_SERVER['REDIRECT_URL'] is not set
$_SERVER['PHP_SELF'] is set to /index.php
$_SERVER['SCRIPT_NAME'] is set to /index.php
$_SERVER['PATH_INFO'] has no value</p>

<p>The only variable that has the correct value for use in selfUrl (on my server) is $_SERVER['REQUEST_URI'].  But, I'm wondering, why you don't use functionality such as is found in Zend_Controller_Request_Http to do this work for you?  Why make this evaluation in two different ways?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-21T06:43:38.000+0000</p> 
        <div class="body">
            <p>Must be fixed now. Could you please verify it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Schlag (adamschlag) on 2008-02-22T03:40:44.000+0000</p> 
        <div class="body">
            <p>Yep, it works!  Don't know if you need Steven to verify that it works for him as well, but the update did get things working for me.  Thanks Dmitry!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-22T03:45:28.000+0000</p> 
        <div class="body">
            <p>Thank you Adam.</p>

        </div>
    </div>
    </div>

