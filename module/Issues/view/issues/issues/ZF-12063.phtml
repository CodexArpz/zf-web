<h2>ZF-12063: Zend_Date::subMonth() - Strange behavior on february</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-02-16T12:36:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-16T13:04:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li></li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Date offers different methods to help working with dates.
One of them is the "subMonth" method.</p>

<p>I have been using this method to work trough dates and performing DB queries.
For example:</p>

<pre class="highlight"><code>
$date = new Zend_Date('2012-03-01 00:00:00');
$lastMonth = $date-&gt;subMonth(1); //Expected value is '2012-02-01 00:00:00'
</code></pre>

<p>This works for every case, except when the date is 'YEAR-02-01 00:00:00'.
In the case the date is February 1st, the date returned it January 1st of the previous year.</p>

<pre class="highlight"><code>
$date = new Zend_Date('2012-02-01 00:00:00');
$lastMonth = $date-&gt;subMonth(1); //Resulted value is '2011-01-01 00:00:00'
</code></pre>

<p>Interesting fact is if you continue to iterate trough this, the date gets back to normal, but it will fail in every February 1st.</p>

<pre class="highlight"><code>
$date = new Zend_Date('2012-02-01 00:00:00');
while ($months++ &lt; 24) {
    echo $date-&gt;toString('YYYY-MM-dd') . '<br />';
    $date-&gt;subMonth(1);
}
</code></pre>

<p>This will output:</p>

<pre class="highlight"><code>
2012-02-01
2011-01-01 &lt;&lt; Wrong year
2011-12-01
2011-11-01
...
2011-03-01
2011-02-01
2010-01-01 &lt;&lt; Wrong year
2010-12-01
2010-11-01
...
</code></pre>

<p>I noticed others strange behaviors, but I was unable to replicate as this.</p>

<p>The file version is described as:
* @version   $Id: Date.php 22713 2010-07-29 11:41:56Z thomas $
It's the version included in the Magento library.</p>

<p>I have upgraded this component to the 1.11.10, and the problem seems to persists.
* @version   $Id: Date.php 24108 2011-06-04 00:09:27Z freak $</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Glauco Lins (gateon) on 2012-02-16T12:43:34.000+0000</p> 
        <div class="body">
            <p>Added code example showing strange behavior during a while loop.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Glauco Lins (gateon) on 2012-02-16T12:44:43.000+0000</p> 
        <div class="body">
            <p>Added comment in the output block.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Glauco Lins (gateon) on 2012-02-16T13:04:08.000+0000</p> 
        <div class="body">
            <p>Reviewing the timestamps, they seems to be right.
The problem might be related to the output.</p>

<pre class="highlight"><code>
[1328054400] =&gt; 2012-02-01 00:00:00
[1325376000] =&gt; 2011-01-01 00:00:00 &lt;&lt; Wrong year
[1322697600] =&gt; 2011-12-01 00:00:00
[1320105600] =&gt; 2011-11-01 00:00:00
...
[1296518400] =&gt; 2011-02-01 00:00:00
[1293840000] =&gt; 2010-01-01 00:00:00 &lt;&lt; Wrong year
[1291161600] =&gt; 2010-12-01 00:00:00
...
[1264982400] =&gt; 2010-02-01 00:00:00
[1262304000] =&gt; 2009-01-01 00:00:00 &lt;&lt; Wrong year
</code></pre>

        </div>
    </div>
    </div>

