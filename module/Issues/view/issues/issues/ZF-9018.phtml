<h2>ZF-9018: Zend_Reflection_Method::getBody() drops closing curly brace of method content</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-29T16:10:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-01T17:28:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Reflection</li>
            <li>FixForZF1.12</li>
            <li>state:patch-ready-for-review</li>
            <li>zf-caretaker-adamlundrigan</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10870">ZF-10870</a></li>
            <li><a href="/issues/browse/ZF-12040">ZF-12040</a></li>
            <li><a href="/issues/browse/ZF-11472">ZF-11472</a></li>
            <li><a href="/issues/browse/ZF-9501">ZF-9501</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14631/library.diff">library.diff</a></li>
            <li><a href="/issues/secure/attachment/12972/ZF-9018-library.diff">ZF-9018-library.diff</a></li>
            <li><a href="/issues/secure/attachment/12973/ZF-9018-tests.diff">ZF-9018-tests.diff</a></li>
            <li><a href="/issues/secure/attachment/14954/ZF-9018.patch">ZF-9018.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When I use Zend_Reflection_Method::getBody() on a method like that :</p>

<p>method() {
  if(1) {
    ;
  }
}</p>

<p>it returns only :
  if(1) {
    ;</p>

<p>I don't understand why getBody() returns rtrim(ltrim(implode("\n", $lines), '{'), '}') instead of only implode("\n", $lines)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jan Pieper (jpieper) on 2010-04-03T05:25:13.000+0000</p> 
        <div class="body">
            <p>Added diff files (library, tests).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jan Pieper (jpieper) on 2010-04-03T05:25:57.000+0000</p> 
        <div class="body">
            <p>Reassign to Ralph for validation.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by BitConstructor Co. Ltd. (bitconstructor) on 2010-12-30T21:56:57.000+0000</p> 
        <div class="body">
            <p>this issue is stil present in 1.11.2 (and trunk) actually now more broken than ever.</p>

<p>Additionally to faulty formatting and wrongly cut out closing brace of structures like (if, ..) at end of function calls it now messes up the document head. The files arent more declared as PHP.</p>

<p>It removes &lt;?php from beginning of file and adds following code at end of file;
&lt;?php
/* Zend_CodeGenerator_Php_File-DocblockMarker */</p>

<p>Hope somebody can fix it soon. We are writing bigger applications and have to clean up the classes always after adding a action.</p>

<p>Otherwise Zend Tool is a great help and thank you all for creating it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Franck STAUFFER (franckstauffer) on 2011-08-26T13:56:24.000+0000</p> 
        <div class="body">
            <p>The patch doesn't fully solve the issue as getStartLine on ReflectionMethod returns the line number containing the name of the function...a line break in the arguments lists for instance would also break the parsing. The only solution that's a 100% sure to fix the issue (which I have a patch for) is to use token_get_all to extract the method's body.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Franck STAUFFER (franckstauffer) on 2011-08-30T10:58:24.000+0000</p> 
        <div class="body">
            <p>New patch to fix the bug using the PHP tokenizer to make sure any kind of weird source formatting doesn't break the parsing.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-10-17T16:15:27.000+0000</p> 
        <div class="body">
            <p>This patch breaks compatibility with the existing implementation, as it includes everything (specifically, the leading and trailing whitespace characters) inside the method brackets.  When I run the Zend_CodeGenerator test suite after applying your patch, I get failures like these:</p>

<pre class="highlight"><code>
5) Zend_CodeGenerator_Php_MethodTest::testMethodFromReflection
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
     {
+
         /* test test */
+
     }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Franck STAUFFER (franckstauffer) on 2011-10-17T16:32:47.000+0000</p> 
        <div class="body">
            <p>Yeah I know, but I don't immediately see the point in not preserving the full method body as is - at least that's not something (as an API user) I'd expect.</p>

<p>Do we agree that using the tokenizer is the only sensible way to make sure we get it right regardless of the coding style used in PHP files Zend_Reflection_Method gets called on ? 
If we agree I can resubmit the patch to restore leading and trailing whitespaces removal, if not, then I just want to emphasize that the previous patch that was attached to this also fails in many cases.</p>

<p>Thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-10-17T16:52:32.000+0000</p> 
        <div class="body">
            <p>I absolutely agree.  The current implementation of {{Zend_Reflection_Method::getBody}} blows up when it's given a PHP file which doesn't conform to Zend Framework coding standards; that is a product of it's design, which was primarily driven by it's use in {{Zend_Tool}}/{{Zend_CodeGenerator}}.  Your approach is much better than the current implementation, unfortunately the existing narrow behavior is already in the wild and it's highly unlikely to be changed in ZFv1 without risk of breaking backwards-compatibility.  I would push for your patch to be integrated into ZF2's Zend\Code\Reflection component.</p>

<p>In the meanwhile, we can probably fix the original poster's issue (which is the root cause of ZF-9501) using the simple fix below:</p>

<pre class="highlight"><code>
Index: library/Zend/Reflection/Method.php
===================================================================
--- library/Zend/Reflection/Method.php  (revision 24511)
+++ library/Zend/Reflection/Method.php  (working copy)
@@ -163,6 +163,6 @@
         }

         // just in case we had code on the bracket lines
-        return rtrim(ltrim(implode("\n", $lines), '{'), '}');
+        return implode("\n", $lines);
     }
 }
Index: tests/Zend/Reflection/MethodTest.php
===================================================================
--- tests/Zend/Reflection/MethodTest.php        (revision 24511)
+++ tests/Zend/Reflection/MethodTest.php        (working copy)
@@ -26,6 +26,11 @@
 require_once 'Zend/Reflection/Method.php';

 /**
+ * @see ZF-9018
+ */
+require_once dirname(__FILE__) . '/_files/ZF9018TestClass.php';
+
+/**
  * @category   Zend
  * @package    Zend_Reflection
  * @subpackage UnitTests
@@ -79,6 +84,36 @@
         $reflectionMethod = new Zend_Reflection_Method('Zend_Reflection_TestSampleClass6', 'doSomething');
         $this-&gt;assertEquals($body, $reflectionMethod-&gt;getBody());
     }
+
+    /**
+     * @group ZF-9018
+     * @group ZF-9501
+     */
+    public function testGetBodyReturnsCorrectBodyWhenContentEndsWithClosingCurlyBrace()
+    {
+        $body = '        if ( true ) {
+            echo "True";
+        } else {
+            echo "False";
+        }';
+        $reflectionMethod = new Zend_Reflection_Method('ZF9018TestClass', 'doSomething');
+        $this-&gt;assertEquals($body, $reflectionMethod-&gt;getBody());
+    }
+
+    /**
+     * @group ZF-9018
+     * @group ZF-9501
+     */
+    public function testGetBodyReturnsCorrectBodyWhenMethodWithInlineOpenBraceHasBodyWhichEndsWithClosingCurlyBrace()
+    {
+        $body = '        if ( true ) {
+            echo "True";
+        } else {
+            echo "False";
+        }';
+        $reflectionMethod = new Zend_Reflection_Method('ZF9018TestClass', 'doSomethingOpenBraceInline');
+        $this-&gt;assertEquals($body, $reflectionMethod-&gt;getBody());
+    }

     public function testGetContentsReturnsCorrectContent()
     {
Index: tests/Zend/Reflection/_files/ZF9018TestClass.php
===================================================================
--- tests/Zend/Reflection/_files/ZF9018TestClass.php    (revision 0)
+++ tests/Zend/Reflection/_files/ZF9018TestClass.php    (revision 0)
@@ -0,0 +1,21 @@
+&lt;?php
+
+class ZF9018TestClass
+{
+    public function doSomething($var)
+    {
+        if ( true ) {
+            echo "True";
+        } else {
+            echo "False";
+        }
+    }
+
+    public function doSomethingOpenBraceInline($var) {
+        if ( true ) {
+            echo "True";
+        } else {
+            echo "False";
+        }
+    }
+}
\ No newline at end of file

Property changes on: tests/Zend/Reflection/_files/ZF9018TestClass.php
___________________________________________________________________
Added: svn:keywords
   + Id

</code></pre>

<p>As far as I can see, it fixes the issue with ZF-9501 without breaking the existing tested behavior of {{Zend_Reflection}}, {{Zend_Tool}} or {{Zend_CodeGenerator}}.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Franck STAUFFER (franckstauffer) on 2011-10-18T14:18:21.000+0000</p> 
        <div class="body">
            <p>OK, thanks for the clarification.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-03-09T20:03:25.000+0000</p> 
        <div class="body">
            <p>Attached file: ZF-9018.patch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-06-01T17:28:01.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk (1.12.0): r24860</p>

        </div>
    </div>
    </div>

