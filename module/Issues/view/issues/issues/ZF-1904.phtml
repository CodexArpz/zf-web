<h2>ZF-1904: Encoding does not work</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-09-03T01:45:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-19T02:32:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When encoding the Zend Framework with Zend Guard it's no longer possible to run several classes.</p>

<p>This is due to variable classnames.
For example within Zend_Controller's HelperBroker line 315...</p>

<pre class="highlight"><code>
if (class_exists($class, false)) {
    $helper = new $class;
</code></pre>

<p>Execution fails at new $class... 
Class exists work properly but new class produces an PHP-Error...</p>

<p>To get the code working encoded an unencoded we have to do the following:</p>

<pre class="highlight"><code>
if (class_exists($class, false)) {
    if(function_exists('zend_loader_file_encoded') and zend_loader_file_encoded()) {
        $class = zend_obfuscate_class_name($class);
    }
    $helper = new $class();
</code></pre>

<p>This way the Controller runs properly when the file is unencoded and encoded.
It also has no problem when Zend_Optimizer is not installed (function_exists)...</p>

<p>This referrs also to all other constructs like the above.
The following classes/files include such constructs and should be changed so that everyone can encode the framework:</p>

<p>/library/Zend
Controller/Action/HelperBroker.php 2 times
Controller/Dispatcher/Standard.php
Controller/Front.php 3 times
Db/Table/Row/Abstract.php 7 times
Db/Table/Rowset/Abstract.php
Db/Table/Abstract 3 times
Db/Statement.php
Feed/Abstract.php
Gdata/App/Feed.php
Gdata/App.php 3 times
Http/Client.php
Mail/Storage/Imap.php
Mail/Storage/Maildir.php
Mail/Storage/Mbox.php
Mail/Storage/Pop3.php
Mail/Transport/Smtp.php
Service/StrikeIron.php
View/Abstract.php 2 times
XmlRpc/Client/ServerProxy.php
XmlRpc/Server.php
XmlRpc/Value.php
Cache.php 2 times
Db.php
Feed.php 2 times
Memory.php
Session.php
Translate.php
Uri.php</p>

<p>/incubator
Environment/Module/Security.php
Mail/Transport/Smtp.php
Environment.php
TimeSync.php</p>

<p>/incubator/tests
Db/AllTests.php</p>

<p>/incubator/tools/http_server/src
Server.php</p>

<p>/tests/Zend/Cache
CommonBackendTest.php 2 times
Db/Adapter/TestCommon.php 2 times
Db/Statement/TestCommon.php 2 times
Db/Table/testSetup.php
Db/AllTests.php
Db/TestSetup.php
XmlRpc/Server/FaultTest.php</p>

<p>Changing all previous mentioned classes would mean that the Zend Framework could also be used with encoded environments which the license of ZF allows.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-03T04:00:19.000+0000</p> 
        <div class="body">
            <p>Of course the mentioned problem is not the only one for encryption.
Several other things have to be thought of when the Zend Framework should be able to be encrypted.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2007-09-03T07:32:28.000+0000</p> 
        <div class="body">
            <p>You mean it is not possible to use unencrypted files from the include path with zend guard? Otherwise it does not make sense to encrypt something that is open source anyway. Also this should be reported to the zend guard team. They could i.e. keep hashes of the original class names to support this use case. It is used quite often in autoloaders.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-08T11:56:26.000+0000</p> 
        <div class="body">
            <p>No this is not what I meant...</p>

<p>In my company we use the Zend Framework for customer applications.
For us it's easier to encrypt all code... our source and also the ZF.</p>

<p>And using the ZF encrypted did not work when obfuscation was turned on (which is mandatory because of security). The code mentioned above did solve the issue...</p>

<p>Anyway... because we often include the trunk and did not always want to integrate the changes we do not use Zend Guard anymore... we throwed it away (as also the respone from the support team did not really help).</p>

<p>Now we are using ioncobe which has not the problems...</p>

<p>So for us this issue is solved.</p>

<p>For any other guys having this problem there are only 3 solutions...</p>

<p>*) turn off obfuscation (security risk)
*) include all ZF classes to the ignore list
*) use ion cube</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-19T02:32:44.000+0000</p> 
        <div class="body">
            <p>Bookkeeping. Assigning closed and resolved issues to those who resolved them. The only unassigned issues should be new and unreviewed.</p>

        </div>
    </div>
    </div>

