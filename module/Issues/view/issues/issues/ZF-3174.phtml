<h2>ZF-3174: Zend_Validate_StringLength fails when iconv internal encoding differs from input character set</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-04-25T06:21:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-15T12:01:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.3 (19/Jan/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                C Snover (snover)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>ZF-1913 broke Zend_Validate_StringLength in instances when PHP's iconv.internal_encoding setting differs from the character set of the data that's being validated.</p>

<p>The simple fix is to add a new character set option that defaults to UTF-8:</p>

<pre class="highlight"><code>
Index: library/Zend/Validate/StringLength.php
===================================================================
--- library/Zend/Validate/StringLength.php      (revision 9303)
+++ library/Zend/Validate/StringLength.php      (working copy)
@@ -54,7 +54,7 @@
         'min' =&gt; '_min',
         'max' =&gt; '_max'
     );
-
+
     /**
      * Minimum length
      *
@@ -70,18 +70,27 @@
      * @var integer|null
      */
     protected $_max;
+
+    /**
+     * String character set
+     *
+     * @var string
+     */
+    protected $_charset;

     /**
      * Sets validator options
      *
      * @param  integer $min
      * @param  integer $max
+     * @param  string  $charset
      * @return void
      */
-    public function __construct($min = 0, $max = null)
+    public function __construct($min = 0, $max = null, $charset = 'utf-8')
     {
         $this-&gt;setMin($min);
         $this-&gt;setMax($max);
+        $this-&gt;setCharset($charset);
     }

     /**
@@ -149,6 +158,28 @@

         return $this;
     }
+
+    /**
+     * Returns the character set
+     *
+     * @return string
+     */
+    public function getCharset()
+    {
+        return $this-&gt;_charset;
+    }
+
+    /**
+     * Sets the character set
+     *
+     * @param string $charset
+     * @return Zend_Validate_StringLength Provides a fluent interface
+     */
+    public function setCharset($charset)
+    {
+        $this-&gt;_charset = $charset;
+        return $this;
+    }

     /**
      * Defined by Zend_Validate_Interface
@@ -163,7 +194,7 @@
     {
         $valueString = (string) $value;
         $this-&gt;_setValue($valueString);
-        $length = iconv_strlen($valueString);
+        $length = iconv_strlen($valueString, $this-&gt;_charset);
         if ($length &lt; $this-&gt;_min) {
             $this-&gt;_error(self::TOO_SHORT);
         }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-09T13:40:50.000+0000</p> 
        <div class="body">
            <p>Please evaluate and fix/categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-12-15T12:01:21.000+0000</p> 
        <div class="body">
            <p>Duplication of ZF-3015.
New feature implemented with r13278</p>

        </div>
    </div>
    </div>

