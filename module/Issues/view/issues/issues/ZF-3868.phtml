<h2>ZF-3868: Form validation does not work properly for selects with optgroups</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-06T04:49:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Emil Ivanov (vladev)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Since the addition of the InArray validator for select elements in Zend_Form forms do not validate when using selects with optgroups.
Testing against current trunk.</p>

<p>The couple of tests pass before r10646, but the first one fails with the latest trunk.</p>

<pre class="highlight"><code>
&lt;?php
    class Carutoo_Form_InArrayTest extends PHPUnit_Framework_TestCase
    {
        public function testSelectWithOptionGroupDoesNotValidateCorrectly()
        {
            $data = array (
                'Ford' =&gt; array (
                    '1' =&gt; 'Focus',
                    '2' =&gt; 'Mondeo'
                ),
                'Mazda' =&gt; array (
                    '3' =&gt; '3',
                    '4' =&gt; '6'
                )
            );

            $form = new Zend_Form();
            $form-&gt;addElement('select', 'brand', array (
                'label' =&gt; 'Brand',
                'multiOptions' =&gt; $data,
                'required' =&gt; true
            ));

            $this-&gt;assertTrue($form-&gt;isValid(array ('brand' =&gt; 3)));
        }

        public function testSelectWithoutOptionGroupValidatesCorrectly()
        {
            $data = array (
                '1' =&gt; 'Ford Focus',
                '2' =&gt; 'Ford Mondeo',
                '3' =&gt; 'Mazda 3',
                '4' =&gt; 'Mazda 6'
            );

            $form = new Zend_Form();
            $form-&gt;addElement('select', 'brand', array (
                'label' =&gt; 'Brand',
                'multiOptions' =&gt; $data,
                'required' =&gt; true
            ));

            $this-&gt;assertTrue($form-&gt;isValid(array ('brand' =&gt; 3)));
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-06T06:31:32.000+0000</p> 
        <div class="body">
            <p>Just a note: you can disable the auto-registration of the InArray validator:</p>

<pre class="highlight"><code>
$element-&gt;setRegisterInArrayValidator(false);

// or, at creation time:
$form-&gt;addElement('select', 'brand', array(
    'label'                    =&gt; 'Brand',
    'multiOptions'             =&gt; $data,
    'required'                 =&gt; true,
    'registerInArrayValidator' =&gt; false,
));
</code></pre>

<p>How were you registering validators previously?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-06T06:33:01.000+0000</p> 
        <div class="body">
            <p>Degrading to minor and scheduling as nice-to-have fix for 1.6.0... assuming I can get the original use case.</p>

<p>In the meantime, disabling the validator is possible and provides a BC solution for select elements.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Emil Ivanov (vladev) on 2008-08-06T06:41:51.000+0000</p> 
        <div class="body">
            <blockquote>
  <p>How were you registering validators previously?</p>
</blockquote>

<p>The normal way!?! The test cases are extracts from a real application.</p>

<p>I think the problem is with the retrieval of possible values.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-06T07:02:53.000+0000</p> 
        <div class="body">
            <p>What I mean is, before current trunk, we did not auto register the InArray validator. So, if you weren't registering any validators previously, then the solution is to simply disable registration of the InArray validator; otherwise, I need to know what validator you <em>were</em> using, and how you were instantiating and/or registering it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Emil Ivanov (vladev) on 2008-08-06T07:14:55.000+0000</p> 
        <div class="body">
            <p>Thanks Matthew,</p>

<p>disabling the InArray validator did the trick.</p>

<p>I still, however, consider this a low priority bug.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-06T07:50:56.000+0000</p> 
        <div class="body">
            <p>There were three different requests for having InArray validation provided by default, each of which had multiple watchers. At this point, we have decided that this should be standard behavior.</p>

<p>The new functionality is well documented, and this documentation will be available on-line with RC2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Emil Ivanov (vladev) on 2008-08-06T23:26:43.000+0000</p> 
        <div class="body">
            <p>But the first test on the top is still failing, despite 3 being a valid value for the select.
What I'm saying is that the InArray validator does not work for selects with optgroups.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-07T05:24:50.000+0000</p> 
        <div class="body">
            <p>I understand that the InArray validator does not work for selects with optgroups -- and this is because InArray is for flat arrays, not nested arrays; one that works recursively would need a much different architecture. If you would like a validator that works for nested arrays, please file a separate issue requesting one.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Emil Ivanov (vladev) on 2008-08-07T05:30:43.000+0000</p> 
        <div class="body">
            <p>Thank you for the replies.
Here it is ZF-3882.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:15.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

