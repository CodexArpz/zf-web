<h2>ZF-8116: Zend_Translate usage of the cache is inapropriate.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-21T15:45:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-21T23:19:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Translate_Adapter usage of the cache is inapropriate.</p>

<p>There is 2 distinct problem with it.</p>

<p>A - The options are cached into the same key no matter what the options contains. So If you have different usage of the Zend_Translate, with different options, you will get a lot "Zend_Cache_Core::save() / write_control : written and read data do not match" in your logs. Also, their is is absolutely no point, in caching the options passed to the construcor.</p>

<p>B - The translation files, are cached in the same key no matter what the options where used to open it. causing the same result as in a.</p>

<p>Here is the patch we applied locally.
--- Adapter.php (revision 10888)
+++ Adapter.php (revision 10930)
@@ -100,14 +100,6 @@
      */
     public function __construct($data, $locale = null, array $options = array())
     {
-        if (isset(self::$_cache)) {
-            $id = 'Zend_Translate_' . $this-&gt;toString() . '_Options';
-            $result = self::$_cache-&gt;load($id);
-            if ($result) {
-                $this-&gt;_options   = unserialize($result);
-            }
-        }
-
         if (($locale === "auto") or ($locale === null)) {
             $this-&gt;_automatic = true;
         } else {
@@ -339,11 +331,6 @@</p>

<pre><code>     if ($this-&gt;_options['locale'] != $locale) {
</code></pre>

<h2>             $this-&gt;_options['locale'] = $locale;</h2>

<ul><li>if (isset(self::$_cache)) {</li>
<li>$id = 'Zend_Translate_' . $this-&gt;toString() . '_Options';</li>
<li>self::$_cache-&gt;save( serialize($this-&gt;_options), $id, array('Zend_Translate'));</li>
<li><pre><code>     }
 }

 return $this;
</code></pre>

<p>@@ -457,8 +444,9 @@</p>

<pre><code> $read = true;
 if (isset(self::$_cache)) {
</code></pre></li>
<li>$id = 'Zend_Translate_' . md5(serialize($data)) . '_' . $this-&gt;toString();</li>
<li>$result = self::$_cache-&gt;load($id);</li>
<li>$ident = md5(serialize($data) . $locale . serialize($options));</li>
<li>$cacheId = 'Zend_Translate_' . $ident . '_' . $this-&gt;toString();</li>
<li><pre><code>     $result = self::$_cache-&gt;load($cacheId);
     if ($result) {
         $temp = unserialize($result);
         $read = false;
</code></pre>

<p>@@ -495,8 +483,7 @@
     }</p>

<pre><code> if (($read) and (isset(self::$_cache))) {
</code></pre></li>
<li>$id = 'Zend_Translate_' . md5(serialize($data)) . '_' . $this-&gt;toString();</li>
<li>self::$_cache-&gt;save( serialize($temp), $id, array('Zend_Translate'));</li>
<li><pre><code>     self::$_cache-&gt;save( serialize($temp), $cacheId, array('Zend_Translate'));
 }

 return $this;
</code></pre></li>
</ul>
    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-21T22:58:51.000+0000</p> 
        <div class="body">
            <p>Changing priority.</p>

<p>A "inapropiate" behaviour which does not block the usage is not critical.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-21T23:11:34.000+0000</p> 
        <div class="body">
            <p>Changing from "Patch" to "Bug".
The patch can not be applied as is.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-21T23:19:17.000+0000</p> 
        <div class="body">
            <p>Closing as "incomplete".</p>

<p>The patch is based on ZF 1.6.
Several of the mentioned code lines which are patched do not exist. Since the past 1.5 years several changes and new features have been added which would be broken by this patch.</p>

<p>When you have a problem, then please try your code as first step with the actual release.</p>

<p>Integrating BC breaks is not allowed by patches.</p>

<p>Patches should always be done based on the actual release and not based on 1.5 years old codebase.</p>

        </div>
    </div>
    </div>

