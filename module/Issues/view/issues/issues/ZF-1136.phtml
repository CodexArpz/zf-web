<h2>ZF-1136: Zend_View Helpers to be optionally view aware</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-03-26T01:03:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.2 (06/Apr/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1142">ZF-1142</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Very simple improvement.  To allow view helper to interact with variables in the scope of the view, make Zend_View Helpers optionally view aware.</p>

<p>The proposed change would essentially do a property_exists check on the helper class for a public property named $view.  If it exists, pass reference to the current view object to it, otherwise, do nothing.</p>

<p>This would prove extremely useful when using helpers inside of a template system where later processing needs to occur on templates.</p>

<p>Chat with me on this if you need more insight.</p>

<p>-ralph</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Svyatoslav Kucheruk (nimnul) on 2007-03-26T03:58:46.000+0000</p> 
        <div class="body">
            <p>I agree with Ralph, this will be very-very useful.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-03-26T14:50:09.000+0000</p> 
        <div class="body">
            <p>Yep, I would also like to see this improvement.</p>

<p>Then I can create a Zend_View helper that allows me to "declare" variables by providing a list of strings.  If the corresponding variable is not set in the view object, then the helper can set it to an empty string.</p>

<p>When a view uses an undefined variable with E_STRICT, sometimes I want a warning, and sometimes I don't.  When I make typos, I want a warning, but for some other variables in my view templates I don't want a warning.  If I list only those variables that might not have a value, then the view helper can "disable" the warning, as described above, if the helper has access to the view.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-03-26T18:12:27.000+0000</p> 
        <div class="body">
            <p>The patch in ZF-1142 also solves this issue.  Relevant snippet from the patch:</p>

<pre class="highlight"><code>
@@ -230,6 +248,9 @@
             // load class and create instance
             $class = $this-&gt;_loadClass('helper', $name);
             $this-&gt;_helper[$name] = new $class();
+            if (property_exists($class, 'view')) {
+                $this-&gt;_helper[$name]-&gt;view = $this;
+            }
         }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-04-02T16:59:23.000+0000</p> 
        <div class="body">
            <p>Functionality added in r4316.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2007-04-03T11:04:15.000+0000</p> 
        <div class="body">
            <p>With the current solution, $view property has to be public so you're placing unnecessary constraints on the view helper. Why not use a setter? Which could then be overridden by view helper author which has additional value. Like:</p>

<pre class="highlight"><code>
             // load class and create instance
             $class = $this-&gt;_loadClass('helper', $name);
             $this-&gt;_helper[$name] = new $class();
             $this-&gt;_helper[$name]-&gt;setView($this);
</code></pre>

<p>This will require something like an abstract for each helper, so I'm proposing an alternative which achieves the same functionality but does not break backward compatibility. And can still be overridden by helper authors:</p>

<pre class="highlight"><code>
             // load class and create instance
             $class = $this-&gt;_loadClass('helper', $name);
             $this-&gt;_helper[$name] = new $class($this);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-04-03T11:12:52.000+0000</p> 
        <div class="body">
            <p>Looks like part of the comment got lost, but I see where you're going -- check for method_exists($helper, 'setView'), and, if so, call it. This would alleviate any need to create an interface for helpers, and also give the optional view awareness.</p>

<p>I'll make this change today.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-04-03T11:13:13.000+0000</p> 
        <div class="body">
            <p>Reopening -- use accessor instead of view property.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2007-04-03T11:42:45.000+0000</p> 
        <div class="body">
            <p>The comment is misplaced but nothing got lost, Matthew. Take a closer look - $this (view instance) is passed in the constructor in the second code snippet.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2007-04-03T11:43:00.000+0000</p> 
        <div class="body">
            <p>Oh! And thank you :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-04-03T11:52:07.000+0000</p> 
        <div class="body">
            <p>I don't think I'll do it in the constructor, as it's less obvious then how the view is set. Using the accessor make it completely optional, and also sets a standard location. If we later move towards using an interface, the groundwork will have been laid.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-04-03T15:03:44.000+0000</p> 
        <div class="body">
            <p>Completed in r4331; helpers that require access to the original view object should implement a setView($view) accessor.</p>

        </div>
    </div>
    </div>

