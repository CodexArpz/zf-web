<h2>ZF-4307: Zend_Form '5507' was not found in the haystack error for select element</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-09-16T07:32:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-17T15:04:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ryan Pyeatt (pysan)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When I use 1.6 or 1.6.1 I get the error "'5495' was not found in the haystack" for the following "school" form element.</p>

<p>$school = new Zend_Form_Element_Select('school');
    $school-&gt;setLabel('School Attending')
    -&gt;setRequired(false)
    -&gt;setDescription('Choose State first')
    -&gt;addMultiOptions(array('---'=&gt;''))
    -&gt;addFilter('StripTags')
    -&gt;addFilter('StringTrim')
    -&gt;addValidator('Int');</p>

<p>This generates a list looking like this, which appears fully correct.</p>

<p>name1name2name3</p>

<p>If I revert the Form.php and Form dir inside the Zend library dir back to the 1.5.0 version, it works just fine.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michal Vrchota (techi) on 2008-10-13T07:57:38.000+0000</p> 
        <div class="body">
            <p>Well I was shocked by this behaviour also at first time. Luckily when I looked into code, I have discovered that InArray validator is enabled automatically if validator was not present.</p>

<p>This behaviour can be change when you call
$element-&gt;setRegisterInArrayValidator(false);</p>

<p>But I also believe that this validator should be disabled by default</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-10-13T08:08:33.000+0000</p> 
        <div class="body">
            <p>We enabled the validator by default because it was an oft-requested feature; we had users who were, to use your own verbiage, "shocked" that the multi-elements were not auto-registering an InArray validator based on the attached options.</p>

<p>There is a documented way to disable the validator, so there's nothing here to fix or change.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Vrchota (techi) on 2008-10-13T08:32:05.000+0000</p> 
        <div class="body">
            <p>OK, sounds reasonable. I used that validator maily for ignore the 0 =&gt; " -- select -- " but this can be validate by GreaterThan(0) validator</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by paolo (poloche) on 2012-08-17T15:04:52.000+0000</p> 
        <div class="body">
            <p>I think this happens only when the value is numeric is sent in the array for validation because the problem had not had a string array identifiacdores zend but that seems a php error.</p>

<p>the solution works but not if it is really valid if I want to validate the information with such arrays</p>

        </div>
    </div>
    </div>

