<h2>ZF-7976: Notice at Zend/File/Transfer/Adapter/Http.php</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-09-29T13:27:52.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-30T15:54:10.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I got the following warning when working with a Zend_Form_Element_File in a trivial form:</p>

<pre class="highlight"><code>
Notice: Undefined index: CONTENT_LENGTH in /usr/local/php/share/Zend/File/Transfer/Adapter/Http.php on line 124
</code></pre>

<p>The line 124 we have:</p>

<pre class="highlight"><code>
// Workaround for a PHP error returning empty $_FILES when form data exceeds php settings
if (empty($this-&gt;_files) &amp;&amp; ($_SERVER['CONTENT_LENGTH'] &gt; 0)) {
</code></pre>

<p>Maybe a simple <em>array_key_exists()</em> or <em>isset()</em> before the <em>if</em> might solve this notice.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-29T13:37:59.000+0000</p> 
        <div class="body">
            <p>When there is no CONTENT_LENGTH available then you have a web-server problem.
It should always be available as long as $_POST is here and you received data from a form.</p>

<p>And when POST does not exist you can not have a active upload.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-29T14:29:52.000+0000</p> 
        <div class="body">
            <p>Feature added.</p>

<p>The HTTP protocol defines that CONTENT_LENGTH must be available in POST requests.Note that a missing CONTENT_LENGTH shows a broken web server.
So you should install the newest release of your webserver to get rid of this problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bruno Piraj치 Moyle (brunitto) on 2009-09-29T16:09:20.000+0000</p> 
        <div class="body">
            <p>The notice did not appeared  when trying to submit the form, but after the form was rendered.</p>

<p>I created a form using a class:</p>

<pre class="highlight"><code>
class Form_Upload extends Zend_Form
{
    public function init()
    {
        $this-&gt;addElement('file', 'upload', array(
            'required'    =&gt; true,
            'filters'         =&gt; array(...),
            'validators' =&gt; array(...)
        );

        $this-&gt;addElement('submit', 'submit', array('label' =&gt; 'Upload it!'));
    }
}
</code></pre>

<p>Then I just created a form object in controller and injected in view:</p>

<pre class="highlight"><code>
class UploadController extends Zend_Controller_Action
{
...
    public function indexAction()
    {
        $this-&gt;view-&gt;form = new Form_Upload();
    }
...
}
</code></pre>

<p>Finally, I just rendered in my view...</p>

<pre class="highlight"><code>
...
echo $this-&gt;form;
...
</code></pre>

<p>... and got the notice as described above.</p>

<p>Thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-30T11:32:39.000+0000</p> 
        <div class="body">
            <p>Which means that you are calling receive() when you just display the form.</p>

<p>Receive must only be called when a form has been provided, not when it's being displayed.
The manual describes how the correct usage is.</p>

<p>Normally you have to do something like:</p>

<pre class="highlight"><code>
if ($form-&gt;isPost($_POST)) {
    $element-&gt;reveice();
}
</code></pre>

<p>When you are having problems with form itself then please write into the mailing list.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bruno Piraj치 Moyle (brunitto) on 2009-09-30T12:35:20.000+0000</p> 
        <div class="body">
            <p><em>Which means that you are calling receive() when you just display the form.</em>
I am not calling {{receive()}} - as showed in the code above.</p>

<p>A deeper look at my code and I noticed that I am calling {{isValid()}} without POST data in the request, generating the notice as described.</p>

<p>Anyway, as defined in PHP manual <a href="http://br2.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting">section</a>:</p>

<p>{quote}
...NOTICE messages will warn you about possible bugs in your code. For example, use of unassigned values is warned. It is extremely useful to find typos and to save time for debugging. NOTICE messages will warn you about bad style.
{quote}</p>

<p>In my opinion, the component might handle this notice.</p>

<p>Just for the records, the Zend_Form doesn't have a {{isPost()}} method. I believe you mean:</p>

<pre class="highlight"><code>
if ($this-&gt;getRequest()-&gt;isPost()) {
    $element-&gt;receive();
}
</code></pre>

<p>This verification might be defined within the component as well.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-30T13:00:53.000+0000</p> 
        <div class="body">
            <p>*) The code above does not show anything... there is no file upload done you just gave the code for rendering... not more not less.</p>

<p>*) The component does handle the notice. Otherwise this issue would not have been fixed for the next release.</p>

<p>*) Why and how should Zend_File_Transfer verify if the controller is called by post or not ? There is no connection between this components. Additionally Zend_File_Transfer can be called with Put, Delete, Ftp, Webdav or any other protocol. It is not fixed to Post. So this would not work.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bruno Piraj치 Moyle (brunitto) on 2009-09-30T13:31:43.000+0000</p> 
        <div class="body">
            <p>*) Precisely, it shows that nothing has been done than creating and rendering the form.</p>

<p>*) Cool.</p>

<p>*) Any component can introspect the request through Zend_Controller_Front:</p>

<pre class="highlight"><code>
// Gets a front controller singleton instance
$front       = Zend_Controller_Front::getInstance();

// Now you have the request
$request = $front-&gt;getRequest();
</code></pre>

<p>In my opinion, there is a connection between Zend_File_Transfer_Adapter_Http and Zend_Controller_Request_Http, as <em>Zend_File_Transfer_Adapter_Http</em> uses an HTTP request as data source. Additionally, you can use the Zend_Controller_Request_Http {{isGet()}}, {{isPost()}}, {{isDelete()}} and {{isPut()}} methods ensure that the request holds the correct data - <em>only for HTTP adapters</em>.</p>

<p>Thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-30T14:04:06.000+0000</p> 
        <div class="body">
            <p>Line 124 you gave as error is from the isValid method.
This method is only called when you call isValid on the form.</p>

<p>Your code does not call this method, so there are things missing which you did not gave. That's what I mean with missing parts. The code you gave does not call isValid, so the notice itself is not thrown just by the code you gave.</p>

<p>And no, we will not limit Zend_File to Zend_Controller_Request_Http. Beside of the BC break this would mean, it would also add a limitation which is not necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bruno Piraj치 Moyle (brunitto) on 2009-09-30T15:54:10.000+0000</p> 
        <div class="body">
            <p>Actually I didn't proposed a <em>limitation</em>, I proposed just an <em>additional validation</em>, to handle a potential problem explicitly and avoid wrong usage. I don't see how this verification could limit others adapters.</p>

<p>Anyway, the subject of the issue was the notice message and it seems to be solved, thanks for your time.</p>

        </div>
    </div>
    </div>

