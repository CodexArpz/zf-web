<h2>ZF-32: Zend Log throwing an error without a default logger (TRAC#16)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-06-19T22:59:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.2.0 (29/Oct/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Richard Thomas (cyberlot)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10080/ZF-32.patch">ZF-32.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><a href="http://framework.zend.com/developer/ticket/16">http://framework.zend.com/developer/ticket/16</a></p>

<p>Zend Log throws an error if you register all log adapters with a name (or without a default name to be exact).</p>

<p>Copy and paste from the manual - section 9.4:</p>

<pre class="highlight"><code>
require_once 'Zend/Log.php';                 // Zend_Log base class
require_once 'Zend/Log/Adapter/File.php';    // File log adapter
require_once 'Zend/Log/Adapter/Console.php'; // Console log adapter

Zend_Log::registerLogger(new Zend_Log_Adapter_File('framework.txt'), 'File');
Zend_Log::registerLogger(new Zend_Log_Adapter_Console(), 'Console');

Zend_Log::log('First logging message.');
</code></pre>

<p>Results in:</p>

<p>Fatal error: Uncaught exception 'Zend_Log_Exception' with message 'No instance of log named "LOG".' in /home/martel/WWW/ZendFramework/library/Zend/Log.php:151</p>

<p>It think it would be far better to register the first log adapter as a default one instead of using hard-wired default named "LOG".</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2006-07-28T19:36:53.000+0000</p> 
        <div class="body">
            <p>I have added a simple patch for this issue.</p>

<p>All I have done is make the first logger registered the default logger.</p>

<p>The manual code should now work.</p>

<pre class="highlight"><code>
/**
     * Instantiates a new instance of Zend_Log carrying the supplied Zend_Log_Adapter_Interface and stores
     * it in the $_instances array.
     *
     * @param  Zend_Log_Adapter_Interface $logAdapter Log adapter implemented from Zend_Log_Adapter_Interface
     * @param  string                     $logName    Name of this instance, used to access it from other static functions.
     * @throws Zend_Log_Exception
     * @return boolean                    True
     */
    public static function registerLogger(Zend_Log_Adapter_Interface $logAdapter, $logName=null)
    {
        if (is_null($logName)) {
            $logName = self::$_defaultLogName;
        }

        /* @var $log Zend_Log */
        if (!self::hasLogger($logName)) {
            self::$_instances[$logName] = new Zend_Log($logName, $logAdapter);
        } else {
            throw new Zend_Log_Exception("Cannot register, \"$logName\" already exists.");
        }

        //make sure we have a default logger
        if(sizeof(self::$_instances == 1)) {
            self::setDefaultLogger($logName);
        }

        return true;
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Richard Thomas (cyberlot) on 2006-09-22T19:38:00.000+0000</p> 
        <div class="body">
            <p>The attached patch is invalid.</p>

<p>This is more a doc issue then anything else, even if the patch worked it assumes the user isn't using the default method and cause confusion.</p>

<p>If a developer is going to setup 2 distinct loggers they need to decide which one to use by default.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Richard Thomas (cyberlot) on 2006-09-22T19:38:59.000+0000</p> 
        <div class="body">
            <p>More a doc/use issue then anything else, suggested fix would break backwards compat without providing any real benifit.</p>

        </div>
    </div>
    </div>

