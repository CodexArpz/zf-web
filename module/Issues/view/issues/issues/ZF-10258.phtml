<h2>ZF-10258: json_encode($array) and $this-&gt;_helper-&gt;json($array) encode french charaset to NULL values</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-03T08:04:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-21T04:50:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Michelangelo van Dam (dragonbe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Consider this action in a controler</p>

<pre class="highlight"><code>
public function qryemailbookAction()
{
    //if ($this-&gt;getRequest()-&gt;isXmlHttpRequest()) {
        $param = $this-&gt;getRequest()-&gt;getParam('query');

        $usr = new Model_DbTable_User();
        $result = $usr-&gt;queryEmailBook($query);
        Zend_Debug::dump($result); // dumping PHP array, result from a Zend_Db query
        
        $test = json_encode($result); // encoding PHP array
        Zend_Debug::dump($test); // dumping encoded result
        // $this-&gt;_helper-&gt;json($result);
    //}
    $this-&gt;_helper-&gt;layout-&gt;disableLayout();
    $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender();
}
</code></pre>

<p>it will output this:</p>

<pre class="highlight"><code>
array(1) {
  [0] =&gt; array(2) {
    ["USRNAM"] =&gt; string(14) "André Baker"
    ["USREML"] =&gt; string(20) "abaker@someisp.com"
  }
}

string(49) "[{"USRNAM":null,"USREML":"abaker@someisp.com"}]"
</code></pre>

<p>the json helper output the same thing</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Piotr Mlocek (pimlock) on 2010-08-12T08:07:57.000+0000</p> 
        <div class="body">
            <p>The question here is what encoding are you using in your database (and also what encoding are you using for connection to database, if you are using MySQL, you can check here [<a href="http://dev.mysql.com/doc/refman/5.0/en/charset-connection.html">http://dev.mysql.com/doc/refman/…</a>]).
In {{json_encode}} function manual [<a href="http://php.net/manual/en/function.json-encode.php">http://php.net/manual/en/function.json-encode.php</a>] it's stated that 
bq. This function only works with UTF-8 encoded data.
(section <em>Parameters</em> -&gt; <em>value</em>).</p>

<p>So {{null}} is result of converting text, which is not in UTF-8 encoding to json.
I've tested it and it works correctly with UTF-8.</p>

<pre class="highlight"><code>
$text = "André Baker";
$text = iconv('XXXX', 'UTF-8', $text);

$test = array("USRNAM" =&gt; $text);
var_dump(json_encode($test));
</code></pre>

<p>Where {{XXXX}} is encoding you are using (it can be e.g. 'ISO-8859-1'). The output now is correct</p>

<pre class="highlight"><code>
string(29) "{"USRNAM":"Andr\u00e9 Baker"}"
</code></pre>

<p>As you can see, character {{é}} is encoded as {{\u00e9}}.</p>

<p>So it's not ZF bug in my opinion.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michelangelo van Dam (dragonbe) on 2010-11-18T03:32:21.000+0000</p> 
        <div class="body">
            <p>It's a limitation of the PHP function json_encode and requires UTF-8 character sets. Maybe a point to explicitly mention this in the documents, but not a requirement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Duccio Gasparri (dgasparri) on 2011-01-21T04:50:12.000+0000</p> 
        <div class="body">
            <p>Maybe it will help someone. If text is not valid UTF-8, Zend_Json will return null with no warning issued or explanation given. If you get null results, first check that the input text is indeed valid UTF-8 (and don't trust mb_detect_encoding!)</p>

        </div>
    </div>
    </div>

