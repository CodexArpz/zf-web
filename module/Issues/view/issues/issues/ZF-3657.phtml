<h2>ZF-3657: Zend_Filter_Input does not always return all error messages from getMessages</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-07-16T03:41:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-27T15:02:47.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter_Input</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6764">ZF-6764</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Using the array of validators below, only one of the three regex error messages is ever returned from getMessages().</p>

<pre><code>    $aValidators = array(
        'password_new' =&gt; array(
            array('StringLength', 8),
            new Zend_Validate_Regex('/[0-9]+/'),
            new Zend_Validate_Regex('/[A-Z]+/'),
            new Zend_Validate_Regex('/[a-z]+/'),
            'presence' =&gt; 'required',
            'allowEmpty' =&gt; false,
            'messages' =&gt; array(
                'Password must contain 8 or more characters', 
                'Password must contain at least one number',
                'Password must contain at least one capital letter',
                'Password must contain at least one lower case letter'
            )
        )
</code></pre>

<p>The 8 character limit check always works correctly.
If the password 'aa' is submitted the the 'at least one capital' message is returned. If the password 'AA' is submitted then the 'at least one lower case letter' message is returned. If 'Aa' is used the the 'at least one number' message is returned. In ZF1.04 the correct behaviour is seen - 'AA' and 'aa' return two errors each and 'Aa' returns just the 'at least one number' message.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-23T13:17:43.000+0000</p> 
        <div class="body">
            <p>Fixed component assignment</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-08-27T13:06:25.000+0000</p> 
        <div class="body">
            <p>The reason for using the messageKeys from the validator is that this enables us to translate them.</p>

<p>We have the following possibilities in my opinion:
*) First validator returns messageKey, when more than one of the same validators are used then every additional validator can return a numerical key which would mean that the previous one is not overwritten.</p>

<p>BUT: This could mean that we are no longer be able to translate as most users use the messageKey of the validator for translation and not the message itself (which is often not possible as values are included)</p>

<p>*) We could change behaviour to return an array instead of a string when more than one message is returned.</p>

<p>BUT: This is very problematic as it would break an userland code, and makes things much more complicated in other components... I would not to this.</p>

<p>*) We could concate the messages and seperate them with a special sign ( "message1|message2"). This would not break BC but does not look good.</p>

<p>*) We could close this issue as won't fix and clearify this within the manual.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-11-27T15:02:46.000+0000</p> 
        <div class="body">
            <p>Closing as won't fix.</p>

<p>Actually solution 4 is alreaddy available.
A integration would eighter break the possibility of I18n (numeric keys) or add a BC problem (multidim array).</p>

        </div>
    </div>
    </div>

