<h2>ZF-1035: Role inheritance not propagating correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-03-11T22:36:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Simon Mundy (peptolab)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Darby Felton (darby)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Acl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In some circumstances role permissions are not returning expected results. This seems to occur when a child has a specific permission rule for a resource that may conflict with its parent, and a 'null' permission is being tested against.</p>

<p>Example ACL:-</p>

<pre class="highlight"><code>
        require_once 'Zend/Acl.php';
        require_once 'Zend/Acl/Role.php';
        require_once 'Zend/Acl/Resource.php';
        $acl = new Zend_Acl();

        // The new marketing group inherits permissions from staff
        $acl-&gt;addRole(new Zend_Acl_Role('guest'));
        $acl-&gt;addRole(new Zend_Acl_Role('staff'));
        $acl-&gt;addRole(new Zend_Acl_Role('channel'), 'staff');
        $acl-&gt;addRole(new Zend_Acl_Role('admin'), 'channel');
        
        $acl-&gt;add(new Zend_Acl_Resource('network'));
        
        $acl-&gt;allow('guest');
        $acl-&gt;deny('staff', 'network');
        $acl-&gt;allow('channel', 'network');
        $acl-&gt;deny('channel', 'network', array('upload'));
        $acl-&gt;allow('admin', 'network', array('upload'));
        
        if ($acl-&gt;isAllowed('channel', 'network')) {
            echo 'Yes';
        } else {
            echo 'No';
        }
</code></pre>

<p><em>Expected result:</em>
If an admin tries to access a 'network' resource without any permissions (i.e. 'null' permissions), they should be allowed, as their parent (channel) has been allowed access to the resource <em>except</em> for 'upload' permissions.</p>

<p><em>Actual result:</em>
The rule is disallowed for both 'admin' and 'channel' if no permission is provided to the isAllowed method. See below:-</p>

<pre class="highlight"><code>
$acl-&gt;isAllowed('channel', 'network') // Returns false, incorrect result
$acl-&gt;isAllowed('channel', 'network', 'index') // Returns true, correct result
$acl-&gt;isAllowed('channel', 'network', 'upload') // Returns false, correct result
$acl-&gt;isAllowed('admin', 'network', 'upload') // Returns true, correct result
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-03-12T08:26:08.000+0000</p> 
        <div class="body">
            <p>This issue seems to be the result of misunderstanding. From the {{isAllowed()}} docblock:</p>

<pre class="highlight"><code>
* If a $privilege is not provided, then this method returns false if and only if the
* Role is denied access to at least one privilege upon the Resource. In other words, this
* method returns true if and only if the Role is allowed all privileges on the Resource.
</code></pre>

<p>Since {{'channel'}} has been denied access to at least one privilege ({{'upload'}} upon the Resource {{'network'}}, then {{isAllowed()}} returns {{false}}, which is expected behavior. A {{null}} value for {{$privilege}} basically indicates that you are asking whether the Role has access to /all/ privileges upon the Resource. In this case, the Role is denied at least one privilege. Therefore, the Role does not have access to all privileges upon the resource.</p>

<p>Maybe it stands to reason to clarify this point in the manual documentation as well, since it seems to be a point of confusion?</p>

        </div>
    </div>
    </div>

