<h2>ZF-9629: Zend_Date::setOptions  timesync,  custom Dates can't be created.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-07T04:46:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-07T13:08:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.4 (28/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The following code snippet returns the actual date, instead of the date set in the constructor.</p>

<pre class="highlight"><code>
require_once 'Zend/TimeSync.php';

$serverlist = array(
'<a>ntp://ntp.ubuntu.com</a>',
);

$server = new Zend_TimeSync($serverlist);
$servers = $server-&gt;getIterator();

Zend_Date::setOptions(array('timesync' =&gt; $servers[0]));
$date = new Zend_Date("2001-01-01","YYYY-MM-dd HH:mm:ss");
echo $date;
</code></pre>

<p>the problems seems to be a line 174 - 180 of Zend_Date (version $Id: Date.php 21282 2010-03-01 21:40:19Z thomas $):</p>

<pre class="highlight"><code>
if ($date instanceof Zend_TimeSync_Protocol) {
       $date = $date-&gt;getInfo();
       $date = $this-&gt;_getTime($date['offset']);
       $part = null;
} else if (parent::$_defaultOffset != 0 ) {
       $date = $this-&gt;_getTime(parent::$_defaultOffset);
}
</code></pre>

<p>as soon as "parent::$_defaultOffset" is set, dates passed to the constructor are ignored, and the timestamp is used.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-07T13:08:04.000+0000</p> 
        <div class="body">
            <p>I think that you misunderstood what time synchronisation should do.</p>

<p>Using timesync you say that Zend_Date MUST return the actual date. Regardless of any given input.</p>

<p>There is, and there must be no way to change the time and date which is returned by the timeserver.</p>

<p>When you need to change the result which is returned by the timeserver then you must do this after object creation.</p>

<p>The default offset is set by Zend_TimeSync... there are just two ways how time synchronisation can be used. Directly or by using the option timesync. But from handling they are both more or less equal.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-04-07T13:08:19.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue</p>

        </div>
    </div>
    </div>

