<h2>ZF-2140: Zend_Feed (RSS) Does Not Provide Access To &lt;content:encoded&gt;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-11-02T13:24:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Lee (scrasher)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Simone Carletti (weppos)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Feed</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11105/RSS-Feed.diff">RSS-Feed.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Feed::RSS does not provide access to the  data of each RSS feed item. This is the main item holding the XHTML content of each RSS item in a feed. From what i can tell, the code attempts to parse it, but either  provides no mechanism to access it (i.e. $item-&gt;content()) or  improperly parses it such that that block is always returned as "".</p>

<p>You should be able to do:</p>

<p>$item-&gt;content() and get the xhtml content of the  tag. Without this ability, parsing most RSS feeds becomes essentially useless.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kevin Golding (caomhin) on 2008-01-24T11:26:19.000+0000</p> 
        <div class="body">
            <p>This isn't really a bug, more a usability issue.</p>

<p>$item-&gt;content() will always be empty because content is the namespace.</p>

<p>$item-&gt;encoded() returns the value of  because the actual element is  - basically the parser strips the namespace.</p>

<p>Altering this behaviour would be a bad idea since we should always have access to $item-&gt;encoded() to ensure consistency within the system.</p>

<p>This definitely needs documenting more clearly to ensure no confusion with this, or other namespaces.</p>

<p>However we should consider setting up an alias so that $item-&gt;content() will return  to ensure consistency with feed creation (we set  using $dataentry-&gt;content currently)</p>

<p>So not broken, and not very serious, but a serious contender for a feature enhancement to maximise consistency and minimise confusion.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Golding (caomhin) on 2008-01-24T12:21:23.000+0000</p> 
        <div class="body">
            <p>Meh, shouldn't make such suggestions without offering up a patch I guess...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-02-11T14:05:29.000+0000</p> 
        <div class="body">
            <p>There is a workaround (actually the correct usage), so this seems like a should have- or maybe even a nice-to-have- to me. Perhaps we should log another issue for fixing the docs in 1.0.4 for this, and creating the alias (and updating the docs) for 1.5.
Simone, what do you think? And will you be able to get to this in the next couple of days if you intend to fix it. If not, please unassign it since we are getting very close to the code freeze dates for 1.0.4 and 1.5 RC1.</p>

<p>Thanks.
,Wil</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-11T14:12:32.000+0000</p> 
        <div class="body">
            <p>The patch is ready since the beginning of February but I haven't created consistent test cases yet.
I will take the time to fix it until tomorrow. If not, I will unassign it and follow your suggestions. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-11T15:43:55.000+0000</p> 
        <div class="body">
            <p>Hi Wil,
I just noticed the example in the English documentation is incomplete.</p>

<p>The code is missing the __call implementation.</p>

<pre class="highlight"><code>
    public function __call($var, $unused)
    {
        switch ($var) {
            case 'myUpdated':
                // Translate myUpdated to myns:updated.
                return parent::__call('myns:updated', $unused);

            default:
                return parent::__call($var, $unused);
            }
    }
</code></pre>

<p>Additionally, I would change</p>

<pre class="highlight"><code>
&lt;?php
$entry = new MyEntry();
$entry-&gt;myUpdated = '2005-04-19T15:30';
</code></pre>

<p>into</p>

<pre class="highlight"><code>

&lt;?php
$entry = new MyEntry();
$entry-&gt;myUpdated = '2005-04-19T15:30';

// method style call is handled by __call function
$entry-&gt;myUpdated();  
// property style call is handled by __get function
$entry-&gt;myUpdated;
</code></pre>

<p>Because English it not my mother language could you please give a check to the modification above and let me know if they are grammatically corrected?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-11T16:52:41.000+0000</p> 
        <div class="body">
            <p>fixed in r7933.
I wait a feedback on my previous comment before closing the issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-02-13T17:01:05.000+0000</p> 
        <div class="body">
            <p>If you're talking about the comments in the PHP code, they all look good to me. The only minor comment is that I would write method-style and property-style instead of 'method style' and 'property style'.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-02-14T14:16:35.000+0000</p> 
        <div class="body">
            <p>definitely closed in r8008</p>

        </div>
    </div>
    </div>

