<h2>ZF-9020: Quick Start data mapper improvement suggestion</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-29T18:43:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-17T03:17:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Steshenko (lcf)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I liked the Model thing in previous versions of the quick start, but some of responsible persons decided to make it better and to teach people a bit of good OOP. 
So you added that mappers things. And I support the intention ! but the current example (and it's there for quite a while) only confuses people and make them asking other people 'Why' is it and 'What are the benefits'.</p>

<p>The following code:</p>

<pre class="highlight"><code>
class Application_Model_Guestbook
{
    protected $_comment;
    protected $_created;
    protected $_email;
    protected $_id;
 
    public function __set($name, $value);
    public function __get($name);
 
    public function setComment($text);
    public function getComment();
 
    public function setEmail($email);
    public function getEmail();
 
    public function setCreated($ts);
    public function getCreated();
 
    public function setId($id);
    public function getId();
 
    public function save();
    public function find($id);
    public function fetchAll();
}
</code></pre>

<p>with findAll() and setEmail() methods in the same class make some professionals feel a shock when they see it and confuses some beginners.</p>

<p>I have some options here, choose what is applicable (if any) and can be done faster. I can help with fixing this too by providing a patch if the responsible agrees it needs to be improved.</p>

<p>1) We do tell people about the data mapper, we are not trying to be maximally easy - so why not to tell them about Service Application Layer and give them some simple example. It would be just a couple of lines of code with that GuestBook thing. So that we would have
GuestBook (that I'd better rename to the GuestBookComment which it really is)
GuestBookMapper
and
GuestBookService</p>

<p>2) If (1) doesn't fit you for some reasons (I don't really see them) then what should be done minimally is removing those find and findAll from the GuestBook entity and using the mapper's methods instead right from the controller.
I.e. instead of this:</p>

<pre class="highlight"><code>

// application/controllers/GuestbookController.php
 
class GuestbookController extends Zend_Controller_Action
{
    public function indexAction()
    {
        $guestbook = new Application_Model_Guestbook();
        $this-&gt;view-&gt;entries = $guestbook-&gt;fetchAll();
    }
}
</code></pre>

<p>I'd suggest doing this:</p>

<pre class="highlight"><code>

// application/controllers/GuestbookController.php
 
class GuestbookController extends Zend_Controller_Action
{
    public function indexAction()
    {
        $guestbookMapper = new Application_Model_Mapper_Guestbook();
        $this-&gt;view-&gt;entries = $guestbookMapper-&gt;fetchAll();
    }
}
</code></pre>

<p>(3) the least you can do is make them (find and findAll) static to be able to do GuestBook::findAll</p>

<hr /><p>So, I'd recommend to use (1) but you can choose/argue.
If you agree with some of my points but don't have time for this part of the documentation - tell me, I'll prepare a patch for the docs which you can review and correct.</p>

<p>Official QuickStart is very important for all those who tries the framework first time (and there is A LOT) and should be as great as possible.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Steshenko (lcf) on 2010-04-30T12:08:47.000+0000</p> 
        <div class="body">
            <p>Judging by Subversion history, 3 days after I had created this issue, Matthew fixed this issue partially using my variant number 2.
Why no comments were left? Why still open, are you planning to add the Service Layer?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Yaroslav Zenin (yaroslavzenin) on 2010-11-17T13:43:32.000+0000</p> 
        <div class="body">
            <p>It would be great to see the example of Service Layer.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-11-17T03:17:17.000+0000</p> 
        <div class="body">
            <p>Marking issue as resolved.</p>

        </div>
    </div>
    </div>

