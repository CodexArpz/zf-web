<h2>ZF-3583: Zend_Locale_Data doesn't work with cache when automatic_serialization = true</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-07-05T01:56:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-07-05T02:18:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                C Snover (snover)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, Zend_Locale_Data assumes that the cache being used does not have automatic_serialization = true. When it tries to unserialize the data, PHP throws a warning at this, because it's already been unserialized. I thought I had a quick easy fix, but the issue is a bit more complex, since in theory it should still be working right now (it should just end up double-serializing the data). My guess is that this might actually be caused by a bug in Zend_Cache, in which case I'll update this bug if nobody else has figured it out first.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by C Snover (snover) on 2008-07-05T02:05:11.000+0000</p> 
        <div class="body">
            <p>Er, I should try checking things more thoroughly before submitting reports. :) Provided a more accurate description and removed the clearly wrong fix from the description.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by C Snover (snover) on 2008-07-05T02:18:38.000+0000</p> 
        <div class="body">
            <p>Sorry for bugspam. Marking this as bogus. It happened, reproducibly, but without any logical reason as far as I can tell from looking over the code (these are not exactly complicated modules). Now it's not happening, even after clearing the cache and starting over. Woohoo! I'll reopen this bug if it resurfaces and I can find some sort of rhyme or reason for it.</p>

        </div>
    </div>
    </div>

