<h2>ZF-945: Rename to Zend_Translator</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-02-22T12:56:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:51.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For consistency in naming conventions.</p>

<p>Per this thread: <a href="http://www.nabble.com/Consistency-in-naming-tf3255289s16154.html">http://nabble.com/Consistency-in-naming-tf3255289sâ€¦</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-02-22T13:39:29.000+0000</p> 
        <div class="body">
            <p>As non english speaker I want to translate... so I use Zend_Translate to translate something.</p>

<p>Principle the name of the class can be such or such... I have no problem with renaming.
But I need a decission from the devteam to do so.</p>

<p>Waiting for response...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-26T15:35:47.000+0000</p> 
        <div class="body">
            <p>As we discussed in ZF-944, I do not see this is a mandatory change.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-02-26T15:58:59.000+0000</p> 
        <div class="body">
            <p>By the same reasons listed for ZF-944, we generally plan to forgo user-facing API breaks in favor of maintaining backward compatibility.</p>

        </div>
    </div>
    </div>

