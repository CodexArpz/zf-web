<h2>ZF-10919: Zend_Form_Element - BreakChainOnFailure</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-01-05T15:23:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-06T18:44:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I think this is a bug, but perhaps it's by design.  It certainly did not work as I expected.</p>

<ol><li>I have to change the error message of "NotEmpty" validator for a Zend_Form_Element.</li>
<li>There are multiple elements that need the same message change.</li>
<li>I create a custom Zend_Form class.</li>
<li>I create $notEmpty = new Zend_Validate_NotEmpty() instance.</li>
<li>I set the custom message with $notEmpty-&gt;setMessage($message, $code);</li>
<li>I add that validator to every element that needs is with "$element-&gt;addValidator($notEmpty);"</li>
<li>On the second or later element, I change the "breakChainOnFailure" parameter to true.</li>
<li>The "breakChainOnFailure" value is not not updated.</li>
</ol><p>Here's some sample code:
(inside a Zend_Form class constructor)
{quote}
 1 : $notEmpty = new Zend_Validate_NotEmpty();
 2 : $notEmpty-&gt;setMessage('Sorry, that this value is empty.',Zend_Validate_NotEmpty::IS_EMPTY);
 3 : 
 4 : $element_name = new Zend_Form_Element_Text('name');
 5 : $element_name-&gt;setRequired(true);
 6 : $element_name-&gt;addValidator($notEmpty);
 7 : 
 8 : $element_email = new Zend_Form_Element_Text('email');
 9 : $element_email-&gt;setRequired(true);
10 : $element_email-&gt;addValidator($notEmpty, true);
11 : $element_email-&gt;addValidator('EmailAddress');
{quote}</p>

<p><em>Issue</em>
$element_email will not break chain on failure.  The "true" parameter gets ignored and I believe this is why:</p>

<p>/Zend/Form/Element.php line 1134</p>

<p>{quote}
1134 : if ($validator instanceof Zend_Validate_Interface) {
1135 :     $name = get_class($validator);
1136 : 
1137 :     if ( !isset( $validator-&gt;zfBreakChainOnFailure ) ) { 
1138 :         $validator-&gt;zfBreakChainOnFailure = $breakChainOnFailure;
1139 :     }
1140 :}
{quote}</p>

<p>Passing $notEmpty validator object into the first Zend_Form_Element will hit the code above.  Once the object hits line #1137, it evaluates to true(not set) because there is no "zfBreakChainOnFailure" in Zend_Form_Element or Zend_Form_Element_Abstract and goes into line #1138 where it sets this value to false because that was the original (default) value of "$element_name" at line #6 above.</p>

<p>When "$element_email" tries to set this validator, it goes to the line # 1137 but this time it evaluates to false(set) because this object was set by the previous element.</p>

<p>Because of this, it ignores the passed in parameter.</p>

<p>I marked this as minor because I didn't think it was "major" and you can:
A) Create a new Validation object for each element, even using the "string name" method and passing in the new error messages each time.  But this replicated a lot of code.
B) Create a $notEmpty2 object for the "breakChainOnFailure" elements that are set to true and use the appropriate object on the appropriate element.  This, again, replicates code but a lot less than before.</p>

<p>Maybe this is how it's suppose to work, but it doesn't seem like this is how it should work.</p>

<p>I would think that I should be able to create a single validation object with custom error messages and selectively tell what elements to break the chain and which not to, but not have to create a new Validation object for every case, repeating code.</p>

<p>It appears that since the "break chain" attribute is associate with the Validation object via "zfBreakChainOnFailture" that removing the "isset()" conditional would not work because the object would, instead, be set to whatever was the last element to set it, instead of whatever was the first.</p>

<p>Instead, perhaps the "break chain" attribute should be an element level data point, not a validator level data point.  Meaning, the element could remember if it should break chain on a given validator, not the validator itself.</p>

<p>But I have not though that through thoroughly, so there might be better reasons why it is the way it is.</p>

<p>Cheers!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by fodi69 (fodi69) on 2012-03-06T18:44:48.000+0000</p> 
        <div class="body">
            <p>+1</p>

        </div>
    </div>
    </div>

