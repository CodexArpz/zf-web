<h2>ZF-3024: Zend_Form Radio and MultiCheckbox elements fail W3C validations due to missing IDs</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2008-04-02T10:44:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-05T07:43:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2937">ZF-2937</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11709/FormRadio.patch">FormRadio.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Multi elements such as Radio and MultiCheckbox do not pass W3C validations with the default decorators due to an issue with how labels are generated.</p>

<p>W3C says that the 'for' attribute of an element must point to the id of  a single other input element in the form. However, in cases such as the radio and multicheckbox, there are actually multiple elements in the form related to the same label. Our current solution uses the element name (which is the same between all input elements) in the label "for" attribute -- which is invalid markup.</p>

<p>Potential solutions:</p>

<ul><li>Do not use an id with the label in these situations (may be invalid markup)</li>
<li>Generate a unique ID for each input element, and utilize the first for the label.</li>
</ul>
    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T11:55:53.000+0000</p> 
        <div class="body">
            <p>Scheduling for next minor release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Collington (amnuts) on 2009-01-13T03:18:23.000+0000</p> 
        <div class="body">
            <p>Doesn't seem that the solution to this was put in to a minor release since Matthew's comment in April, as looking at version 1.7.2 now the problem of having no 'for' attribute in the labels still exists.  Random IDs are generated, but then only used within the input tag itself.</p>

<p>I'd suggest simply updating FormRadio.php so that the line:</p>

<pre><code>$radio = '&lt;label'
</code></pre>

<p>becomes:</p>

<pre><code>$radio = '&lt;label for="' . $optId . '"'
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Collington (amnuts) on 2009-01-22T03:29:13.000+0000</p> 
        <div class="body">
            <p>Patch file for the update.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-15T08:15:53.000+0000</p> 
        <div class="body">
            <p>This has been resolved at some point in the past; please see Zend_View_Helper_FormRadioTest::testRadioLabelContainsForAttributeTag(), as well as line 161 of the FormRadio view helper, which reads:</p>

<pre class="highlight"><code>
. $this-&gt;_htmlAttribs($label_attribs) . ' for="' . $optId . '"&gt;'
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Edouard Cunibil (duael) on 2010-02-10T03:43:08.000+0000</p> 
        <div class="body">
            <p>I found a solution by redefining "Label" decorator on these fields !</p>

<p>You have to pass the "disableFor" option to the decorator. It will remove the "for" attribute of the main "label" tag but not from the checkboxes' ones.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-05T07:07:34.000+0000</p> 
        <div class="body">
            <p>Current trunk validates fine with</p>

<pre class="highlight"><code>
$form = new Zend_Form();
$form-&gt;addElement('Radio', 'Woo', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('Select', 'Zaa', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('Multiselect', 'Qua', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('MultiCheckbox', 'Qui', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('submit','submit');
die($form-&gt;render());
</code></pre>

        </div>
    </div>
    </div>

