<h2>ZF-5628: ContextSwitch not working with routers</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-24T05:31:03.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-30T01:03:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The bug with a Zend_Controller_Action_Helper_ContextSwitch</p>

<p>When using custom routes it will not work at all. 
In function public function initContext($format = null).....  $action     = $request-&gt;getActionName();
This action will be always null so context will not be switched.</p>

<p>By changing it to 
$action     = $request-&gt;getActionName();
if (empty($action)) {
 $action = Zend_Controller_Front::getInstance()-&gt;getDefaultAction();
}
It working fine.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Anton Visser (toneplex) on 2011-05-11T20:59:35.000+0000</p> 
        <div class="body">
            <p>We are running into this same issue with ZF 1.11.5. I'd be willing to help patch this, but is @ivan fix the correct way to fix this, or is there a better place?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin (zendmartin) on 2011-08-30T01:03:50.000+0000</p> 
        <div class="body">
            <p>In ZendFramework-1.11.10 this problem still exists. I tried using a different layout for mobile devices with Zend_Controller_Action_Helper_ContextSwitch. After a long time searching for bugs in my code, I Googled and ran into this bug report.</p>

<p>The problem lies much deeper than Zend_Controller_Request_Http. The problem is that the default controller (index) and the default action (index) are never being set by the Router at all. The router fully relies on the config file as this code shows:</p>

<pre class="highlight"><code>
public static function getInstance(Zend_Config $config)
{
    $defs = ($config-&gt;defaults instanceof Zend_Config) ? $config-&gt;defaults-&gt;toArray() : array();
    $map = ($config-&gt;map instanceof Zend_Config) ? $config-&gt;map-&gt;toArray() : array();
    $reverse = (isset($config-&gt;reverse)) ? $config-&gt;reverse : null;
    return new self($config-&gt;route, $defs, $map, $reverse);
}

public function __construct($route, $defaults = array(), $map = array(), $reverse = null)
{
    $this-&gt;_regex    = $route;
    $this-&gt;_defaults = (array) $defaults;
    $this-&gt;_map      = (array) $map;
    $this-&gt;_reverse  = $reverse;
}</code></pre>

<p>Zend_Controller_Dispatcher_Standard on the other hand <em>does know</em> what the default action and the default controller are, because they are inherited from Zend_Controller_Dispatcher_Abstract where they are both hardcoded as properties. They are however never passed to the request object.</p>

<p>When the controller name or action name is missing in Zend_Controller_Request_Http this should (in my opinion) raise an exception so that users know what the problem is, because other functionality breaks when these parameters are missing. An other solutions could be setting the default controller and default action in Zend_Controller_Request_Http. They are documented as the default value when not provided by the user, but when the user forgets them, they are not being set.</p>

<p>See: <a href="http://framework.zend.com/manual/en/zend.controller.quickstart.html#zend.controller.quickstart.go.controller">http://framework.zend.com/manual/en/â€¦</a>
??If no action is provided, the action index is assumed, and if no controller is provided, the controller index is assumed (following the Apache convention that maps a DirectoryIndex automatically).??</p>

<p>The easiest fix for now is too hardcode the controller and action in the routing.</p>

<p>This <em>does not</em> work when using ContextSwitch:</p>

<pre class="highlight"><code>
resources.router.routes.default.type = "Zend_Controller_Router_Route_Regex"
resources.router.routes.default.route = "([a-z0-9]*(?:/[a-z0-9]+)*)"
resources.router.routes.default.defaults.module = "default"
resources.router.routes.default.map.1 = "page"
</code></pre>

<p>This <em>does work</em> when using ContextSwitch:</p>

<pre class="highlight"><code>
resources.router.routes.default.type = "Zend_Controller_Router_Route_Regex"
resources.router.routes.default.route = "([a-z0-9]*(?:/[a-z0-9]+)*)"
resources.router.routes.default.defaults.module = "default"
resources.router.routes.default.defaults.controller = "index"
resources.router.routes.default.defaults.action = "index"
resources.router.routes.default.map.1 = "page"
</code></pre>

<p>It would be nice if this bug gets fixed after more than 2 and a half years. If more info is needed, just let me know.</p>

        </div>
    </div>
    </div>

