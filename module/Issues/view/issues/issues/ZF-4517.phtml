<h2>ZF-4517: Zend_Translate_Adapter_Gettext: processing wrong translation files can generate empty translation arrays for a locale</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-08T01:49:04.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-10-09T12:44:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Victor Sanguino (vikenbauer)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Problem description: 
Using Zend_Translate with language files autodiscovery option (Zend_Translate::LOCALE_FILENAME). There are language files for a given language but there aren't for some dialects (i.e., es.mo exists, es_ES.mo not). The default stablished locale is one of the dialect s without file (i.e., es_ES), and the requested page locale is that dialect (i.e.,es_ES).
Language files directory has been SVN checked out (so it contains a .svn dir and svn config. files). 
Under this circumstances, if the subversion config files are processed before the right language files, an empty internal translation array ($this-&gt;_translate member) is generated for the dialect locale (i.e., es_ES), so Zend_Translate fails when a call to Zend_Translate-&gt;setLocale is made for that dialect locale (es_ES in our example).</p>

<p>The origin of this bug is Zend_Translate_Adapter_Gettext-&gt;_loadTranslationData (lines  84 to 97). When a wrong file is processed, an exception is thrown, but  under the circumstances above the internal translation array has been already initialized (with an empty array) and nobody clears it.
A solution could be to check if the translation array is set but empty before throwing the exception:
[...]
// Patch
if (is_set($this-&gt;_translate[$locale]) &amp;&amp; empty($this-&gt;_translate[$locale])) 
{
    unset($this-&gt;_translate[$locale]);
}
// End of patch
throw new Zend_Translate_Exception([...])
[...]</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-10-08T12:26:19.000+0000</p> 
        <div class="body">
            <p>Your circumstance is wrong...</p>

<p>Files and Directories beginning with "." are ignored per default.
See the "ignore" Option.</p>

<p>And you thoughts are also not exact.... if you search for FILENAME and a filename is found the locale will be set, even if no translation is within this file.</p>

<p>The reason is, that often empty files are used as placeholder for new languages, which would not work when we would integrate what you showed as solution.</p>

<p>Also when you have es_ES empty and es filled, it would still be no problem at all, because translation will still work. Rerouting is always available in I18N.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Victor Sanguino (vikenbauer) on 2008-10-09T04:37:01.000+0000</p> 
        <div class="body">
            <p>You are right, the translation process works, and you get a right translation (from es.mo file) even with an empty translation array. But all this stuff generates a warning, and those made me to overqualify this, so I'll try to cancel the issue if possible.</p>

<p>About the ignore option, I never heard about it until you mentioned it... And then i found your blog entry and all became clear.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-10-09T12:44:03.000+0000</p> 
        <div class="body">
            <p>No problem at all...
Things are now cleared.</p>

<p>Issue closed</p>

        </div>
    </div>
    </div>

