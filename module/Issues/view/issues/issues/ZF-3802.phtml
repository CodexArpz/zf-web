<h2>ZF-3802: Code which tests for an exception throw should be modified in some cases</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Unit Tests: Task</dd>

    <dt>Created:</dt>
    <dd>2008-07-29T11:43:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-18T14:34:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There are a lot of tests which use constructions similar to this:</p>

<pre class="highlight"><code>
try {
...
    // Some code which must throw an exception

    $this-&gt;fail('Some message');
} catch (Exception $e) {
    // Success
    // Do nothing
}
</code></pre>

<p>It doesn't work.
PHPUnit fail() tests flow management is also exception based. 
So test failure (if it appears) is not registered since fail exception is caught.</p>

<p>In most cases only component specific exceptions (or Zend_Exception) should be caught.
But we should be accurate enough with just replacing Exception to Zend_Exception through whole ZF tests code.</p>

<p>Searching for '(Exception' through ZF tests code returns 97 files</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-07-29T12:00:20.000+0000</p> 
        <div class="body">
            <p>It's ok when an component-specific exception is catched... something like</p>

<pre class="highlight"><code>
try {
  $this-&gt;assertEquals(..., ...);
  $this-&gt;fail('failed');
} catch (Zend_Db_Exception $e) {
  // failed, run through
}
</code></pre>

<p>But it's always better to test also for the exception text which is really easy...</p>

<pre class="highlight"><code>
try {
  $this-&gt;assertEquals(..., ...);
  $this-&gt;fail('failed');
} catch (Zend_Db_Exception $e) {
  $this-&gt;assertContains('my exception text', $e-&gt;getMessage());
}
</code></pre>

<p>This is the proper way of testing exceptions and should be done in all ZF testbeds.
Btw: Just searching for "Exception" is not enough, because Zend_Exception or Zend_Db_Exception will also return "Exception".</p>

<p>To clearify... just replacing Exception with Zend_Exception is not enough for proper testing.</p>

<p>Greetings
Thomas, I18N Team Leader</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2008-07-29T12:28:07.000+0000</p> 
        <div class="body">
            <p>Yeah.</p>

<p>There is also another way to test for expected exceptions mentioned by Matthew:</p>

<pre class="highlight"><code>
/**
 * @expectedException Zend_Foo_Exception
 */
public function testSuchAndSuchShouldThrowExceptionWithInvalidInput()
{
    // ...
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-07-30T03:58:28.000+0000</p> 
        <div class="body">
            <p>Yes Alex, it's the same as $this-&gt;setExpectedException().</p>

        </div>
    </div>
    </div>

