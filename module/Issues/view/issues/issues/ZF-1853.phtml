<h2>ZF-1853: Zend_Rest_Client doesn't clean params before create the Zend_Http_Client request</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-08-15T09:36:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-10-11T21:33:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.4 (26/Feb/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marc Bennewitz (GIATA mbH) (mben)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Davey Shafik (davey)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10664">ZF-10664</a></li>
            <li><a href="/issues/browse/ZF-2467">ZF-2467</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11076/Client.php.diff">Client.php.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>
$rest1 = new Zend_Rest_Client('<a href="http://rest.server.com">http://rest.server.com</a>');
$rest1-&gt;test('test');
$rest-&gt;get();    // -&gt; <a href="http://rest.server.com?arg1=test&amp;test=test&amp;rest=1">http://rest.server.com?arg1=test&amp;test=test&amp;rest=1</a>

$rest2 = clone $rest1;
$rest2-&gt;test2('test2');
$rest2-&gt;get();    // -&gt; <a href="http://rest.server.com?arg1=test2&amp;test=test&amp;test2=test2&amp;rest=1">http://rest.server.com//…</a>

$rest3 = new Zend_Rest_Client('<a href="http://rest.server.com">http://rest.server.com</a>');
$rest3-&gt;test3('test3');
$rest3-&gt;get();    // -&gt; <a href="http://rest.server.com?arg1=test3&amp;test=test&amp;test2=test2&amp;text3=test3&amp;rest=1">http://rest.server.com//…</a>
</code></pre>

<p>Zend_Rest_Client use a static Zend_Http_Client object but this only add all given params</p>

<pre class="highlight"><code>
    // Zend_Rest_Client (Line 130 - 136)
    final public function restGet($path, array $query = null)
    {
        $this-&gt;_prepareRest($path);
        $client = self::getHttpClient();
        $client-&gt;setParameterGet($query);
        return $client-&gt;request('GET');
    }

    // Zend_Rest_Client (Line 100 - 120)
    final private function _prepareRest($path)
    {
        // Get the URI object and configure it
        if (!$this-&gt;_uri instanceof Zend_Uri_Http) {
            require_once 'Zend/Rest/Client/Exception.php';
            throw new Zend_Rest_Client_Exception('URI object must be set before performing call');
        }

        $uri = $this-&gt;_uri-&gt;getUri();

        if ($path[0] != '/' &amp;&amp; $uri[strlen($uri)-1] != '/') {
            $path = '/' . $path;
        }

        $this-&gt;_uri-&gt;setPath($path);

        /**
         * Get the HTTP client and configure it for the endpoint URI.  Do this each time
         * because the Zend_Http_Client instance is shared among all Zend_Service_Abstract subclasses.
         */
        self::getHttpClient()-&gt;resetParameters();    // &lt;- This line is missing
        self::getHttpClient()-&gt;setUri($this-&gt;_uri);
    }


    // Zend_Http_Client  (Line 377 - 387)
    public function setParameterGet($name, $value = null)
    {
        if (is_array($name)) {
            foreach ($name as $k =&gt; $v)
                $this-&gt;_setParameter('GET', $k, $v);
        } else {
            $this-&gt;_setParameter('GET', $name, $value);
        }

        return $this;
    }

    // Zend_Http_Client  (Line 415 - 433)
    protected function _setParameter($type, $name, $value)
    {
        $parray = array();
        $type = strtolower($type);
        switch ($type) {
            case 'get':
                $parray = &amp;$this-&gt;paramsGet;
                break;
            case 'post':
                $parray = &amp;$this-&gt;paramsPost;
                break;
        }

        if ($value === null) {
            if (isset($parray[$name])) unset($parray[$name]);
        } else {
            $parray[$name] = $value;
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-08-16T13:26:00.000+0000</p> 
        <div class="body">
            <p>Assigned to Davey</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-01-10T20:49:49.000+0000</p> 
        <div class="body">
            <p>I agree with the original report. Each request made by Zend_Rest_Client is "inheriting" parameters from previous requests made with that Zend_Rest_Client instance. I don't believe this is intuitive given that Zend_Rest_Client doesn't provide methods for parameter handling as Zend_Http_Client does, which implies that parameters will be specific to the request being executed and will not be retained in subsequent requests made with that Zend_Rest_Client instance. This needs to be fixed. I'll attach a patch shortly that makes use of the fluent API to apply the fix suggested in the bug report.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-01-10T20:50:55.000+0000</p> 
        <div class="body">
            <p>Proposed patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Davey Shafik (davey) on 2008-01-10T21:54:11.000+0000</p> 
        <div class="body">
            <p>Fixed in 1.0.x and trunk</p>

<ul><li>Davey</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tom Sommer (tomsommer) on 2008-01-23T01:11:05.000+0000</p> 
        <div class="body">
            <p>This bug is not entirely fixed.</p>

<p>Sending more requests after each other produces wrong requests on the server.</p>

<p>$client = new Zend_Rest_Client('<a href="http://127.0.0.1/rest.php">http://127.0.0.1/rest.php</a>');
$res = $client-&gt;add(0,0,0,0,0,0)-&gt;get();
var_dump($res);</p>

<p>$client = new Zend_Rest_Client('<a href="http://127.0.0.1/rest.php">http://127.0.0.1/rest.php</a>');
$res = $client-&gt;find(16)-&gt;get();
var_dump($res);</p>

<p>GET /rest.php?method=add&amp;arg0=0&amp;arg1=0&amp;arg2=0&amp;arg3=0&amp;arg4=0&amp;arg5=0&amp;rest=1 HTTP/1.1" 200 175 "-" "Zend_Http_Client"
GET /rest.php?find=16&amp;arg1=16&amp;rest=1 HTTP/1.1" 404 202 "-" "Zend_Http_Client"</p>

<p>As you can see, the 2nd request is incorrect, and contains no "method" argument, resulting in an error from the server.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart McLeod (mcleod@spaceweb.nl) on 2011-10-11T21:33:36.000+0000</p> 
        <div class="body">
            <p>I tried to reproduce the bug described in the last comment, but I can't. The opposite is true, it is working allright now.</p>

        </div>
    </div>
    </div>

