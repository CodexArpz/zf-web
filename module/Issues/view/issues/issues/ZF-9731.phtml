<h2>ZF-9731: Zend_Paginator::toJson() returns an object of objects instead of an array of objects</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-22T02:00:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Guillaume ORIOL (goriol)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Use case:
retrieve paginated data from database, serialize them in JSON and return it to populate a dojox.data.JsonRestStore on the client side.</p>

<p>Here is a code sample of the model:</p>

<pre class="highlight"><code>
// ...
$select = $this-&gt;select();
$adapter = $select-&gt;getAdapter();
$adapter-&gt;setFetchMode(Zend_Db::FETCH_ASSOC);
$paginator = new Zend_Paginator(
    new Zend_Paginator_Adapter_DbSelect($select));
</code></pre>

<p>And the corresponding code sample of the view script:</p>

<pre class="highlight"><code>
// ...
$this-&gt;response-&gt;setHeader('Content-Type', 'application/json');
$paginator = $this-&gt;paginator;
echo $paginator-&gt;toJson();
</code></pre>

<p>Whatever $adapter-&gt;setFetchMode() I choose, I get an object like this:</p>

<pre class="highlight"><code>
{
  "0":{"id":"CUSTOMERS","nature":"external","name":"Clients"},
  "1":{"id":"ABCDEFGHI","nature":"consignment","name":"Example"},
  "2":{"id":"SUPPLIERS","nature":"external","name":"Fournisseurs"}
}
</code></pre>

<p>If I switch from PHP encoder to built-in encoder (with "Zend_Json::$useBuiltinEncoderDecoder = true;"), I get:</p>

<pre class="highlight"><code>
{
  "__className":"ArrayIterator",
  0:{"id":"CUSTOMERS","nature":"external","name":"Clients"},
  1:{"id":"ABCDEFGHI","nature":"consignment","name":"Example"},
  2:{"id":"SUPPLIERS","nature":"external","name":"Fournisseurs"}
}
</code></pre>

<p>But a JsonRestStore expects an array of objects like this:</p>

<pre class="highlight"><code>
[
  {"id":"CUSTOMERS","nature":"external","name":"Clients"},
  {"id":"ABCDEFGHI","nature":"consignment","name":"Example"},
  {"id":"SUPPLIERS","nature":"external","name":"Fournisseurs"}
]
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Guillaume ORIOL (goriol) on 2010-04-22T02:38:07.000+0000</p> 
        <div class="body">
            <p>I would suggest this modification in Zend_Paginator:</p>

<pre class="highlight"><code>
    public function getItemsByPage($pageNumber)
    {
        $pageNumber = $this-&gt;normalizePageNumber($pageNumber);

        if ($this-&gt;_cacheEnabled()) {
            $data = self::$_cache-&gt;load($this-&gt;_getCacheId($pageNumber));
            if ($data !== false) {
                return $data;
            }
        }

        $offset = ($pageNumber - 1) * $this-&gt;getItemCountPerPage();

        $items = $this-&gt;_adapter-&gt;getItems($offset, $this-&gt;getItemCountPerPage());

        $filter = $this-&gt;getFilter();

        if ($filter !== null) {
            $items = $filter-&gt;filter($items);
        }

        // ZF-9731 change
        // Previously:
        // if (!$items instanceof Traversable) {
        if (!is_array($items) 
            &amp;&amp; (is_object($items) &amp;&amp; !$items instanceof Traversable)
        ) {
            $items = new ArrayIterator($items);
        }
        // ...
</code></pre>

        </div>
    </div>
    </div>

