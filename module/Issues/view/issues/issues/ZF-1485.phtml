<h2>ZF-1485: Prevent unnecessary ViewRenderer instanciation</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-06-04T08:41:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Given the debate over ViewRenderer some of the concerns seem to be performance related. Don't subscribe here myself but a valid point is that ViewRenderer should not be instantiated unless needed. It's a minor improvement to move the instantiation from the Zend_Controller_Front::__construct method to Zend_Controller_Front::dispatch() to allow the viewRenderer parameter to be checked using a private function like:</p>

<pre class="highlight"><code>
final private function _viewRenderer()
{
   // viewRenderer param is FALSE by default
   if ( $this-&gt;_getParam( 'viewRenderer' ) &amp;&amp; ! Zend_Controller_Action_HelperBroker::hasHelper('viewRenderer'))
   {
      Zend_Controller_Action_HelperBroker::addHelper(new Zend_Controller_Action_Helper_ViewRenderer());
   }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Andries Seutens (andries) on 2007-06-04T08:47:59.000+0000</p> 
        <div class="body">
            <p>I disagree. in an M<em>V</em>C framework, the view should be enabled by default. It's a matter of a documentation improvement to turn this behaviour off.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2007-06-04T08:55:43.000+0000</p> 
        <div class="body">
            <p>As Andries has written the view can't be optional. The real problem is IMO, that it's not really documented how to use a different template engine. Something like <a href="http://naneau.nl/2007/05/31/using-naneau_view_smarty-with-rc1/">http://naneau.nl/2007/05/…</a> would help.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shekar Reddy (zendfw) on 2007-06-04T09:11:57.000+0000</p> 
        <div class="body">
            <p>For those who use third-party templating engines with ad-hoc naming of scripts for optimized usage of templates, ViewRenderer does not serve the purpose as it maps to a different script for each action. For instance, a single template can be used for both actions - Add / Edit - which adds to maintainability. This is just an example and there are several other optimizations to outline here that could be made using ad-hoc naming and cannot be implemented inside ViewRenderer to keep its implementation as simple as possible. ViewRenderer is great for people who wish to use it with one script for each action but its an overhead for those who don't need it and degrades performance for them! Even if it can be extended to implement ad-hoc naming of scripts, there are better ways to accompllish the same results with less overhead/latency (with just under 15 lines of code without any additional classes covering all complex cases).</p>

<p>If it was a case similar to ErrorHandler, it would have been a common functionality for all to enable ViewRenderer by default but ViewRenderer is not a functionality that is common to all. In any case, its just a matter of adding just one line of code inside the bootstrap to enable the ViewRenderer and enjoy its power :~)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andries Seutens (andries) on 2007-06-04T09:18:38.000+0000</p> 
        <div class="body">
            <p>Your comment makes sense. However, i am a strong believer that there <em>should</em> be some kinda of default. When some people buy a new car, they'll put 24" rims on it, because they feel that "normal behaviour" doesn't suffice for their needs. Should all cars come without rims?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-04T09:19:37.000+0000</p> 
        <div class="body">
            <p>Shekar, I respectfully disagree. The default use case should not require additional steps for use. The default use case for the Zend MVC is to use ViewRenderer, which conforms to the Conventional Modular directory usage we outline and uses ZF's own Zend_View component. If you're using a different layout or different view engine than these, <em>then</em> you should need to add steps/configurations/etc in your bootstrap.</p>

<p>I will implement Padraic's request, with the difference that the ViewRenderer <em>will</em> be enabled by default, but if the user has selectively turned off usage of the ViewRenderer (or ErrorHandler), then it will not instantiate it prior to dispatching.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shekar Reddy (zendfw) on 2007-06-04T09:38:11.000+0000</p> 
        <div class="body">
            <p>I was more concerned about the overhead of instantiating objects not needed and latency than invoking setParam( 'noViewRenderer', true ) which is trivial.</p>

<p>Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2007-06-04T14:42:24.000+0000</p> 
        <div class="body">
            <p>Just to note this specific issue as posted has nothing to do with enabling ViewRenderer by default or not - only the timing of ViewRenderer's instantiation. The first few comments all seem to be off on a detour ;).</p>

<p>Thanks, Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andries Seutens (andries) on 2007-06-04T14:52:35.000+0000</p> 
        <div class="body">
            <p>Right, tourbus took me all the way to Paris. Anyway, I agree with Matthew's solution.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-07T11:22:05.000+0000</p> 
        <div class="body">
            <p>Assigning to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-12T18:01:10.000+0000</p> 
        <div class="body">
            <p>Closing code block in description field.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-19T17:04:31.000+0000</p> 
        <div class="body">
            <p>Commit made in r5387 pushes instantiation from front controller constructor to dispatch(). You may lazy-load and register ViewRenderer with the helper broker early using:</p>

<pre class="highlight"><code>
$vr = Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer');
</code></pre>

        </div>
    </div>
    </div>

