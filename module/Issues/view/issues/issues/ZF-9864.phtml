<h2>ZF-9864: Zend_Http_Cookie does not allow quoted values as stated in RFC 2965 section 3.1</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-05-19T14:06:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                James Zimmerman (sandwyrm)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Cookie</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>While dealing with the Asterisk AMI interface, we received cookie key, value pairs which featured quoted values.  When using the built-in cookie jar functionality, the cookie was then being reused on later calls in a urlencoded form which replaced the double quotes (") with the encoded counterpart (%22), which did not work.  After much research we discovered that the Zend_Http_Cookie class does not account for double quotes in values as is specified by the RFC 2965 in section 3.1 (<a href="http://tools.ietf.org/html/rfc2965#section-3.1">http://tools.ietf.org/html/rfc2965#section-3.1</a>) which stipulates values can be a "token | quoted-string".  We have modified the Zend_Http_Cookie class to simply strip quotes before storing the value.  Since I do appear to be able to submit files with this ticket, the patch is as follows:</p>

<h1>Index: library/Zend/Http/Cookie.php</h1>

<p>--- library/Zend/Http/Cookie.php    (revision 22198)
+++ library/Zend/Http/Cookie.php    (working copy)
@@ -302,6 +302,7 @@
         // Get the name and value of the cookie
         list($name, $value) = explode('=', trim(array_shift($parts)), 2);
         $name  = trim($name);
+        $value = str_replace( '"', '', $value );
         if ($encodeValue) {
             $value = urldecode(trim($value));
         }</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by David Hollingshead (dhinged) on 2010-07-09T07:44:45.000+0000</p> 
        <div class="body">
            <p>A better way to strip the beginning and ending quotes is to use ltrim and rtrim. This prevents inner double-quotes from being replaced.</p>

<p>$value = ltrim(rtrim($value, '"'), '"');</p>

        </div>
    </div>
    </div>

