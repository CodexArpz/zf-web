<h2>ZF-7861: Using namespaced models in relationships within Zend_Db_Table_Abstract</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-09-16T07:48:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>With regards to defining relationships in subclasses of Zend_Db_Table_Abstract:
<a href="http://framework.zend.com/manual/en/zend.db.table.relationships.html">http://framework.zend.com/manual/en/â€¦</a></p>

<p>It seems that namespaced models are not supported. So I want to do this:</p>

<pre class="highlight"><code>
$questionModel = new Blah_Model_Question();
$questionRow = $questionModel-&gt;find(5)-&gt;current();
$section = $questionRow-&gt;findParentSection();
</code></pre>

<p>But I have to do this:</p>

<pre class="highlight"><code>
$questionModel = new Blah_Model_Question();
$questionRow = $questionModel-&gt;find(5)-&gt;current();
$section = $questionRow-&gt;findParentBlah_Model_Section(); //Not looking good!
</code></pre>

<p>My model looks like this:</p>

<pre class="highlight"><code>
class Dlapiper_Model_Question extends Dlapiper_Model_Abstract {
    
    protected $_name = 'questions';
    protected $_primary = 'question_id';
    
    protected $_referenceMap = array(
        'Section' =&gt; array(
            'columns' =&gt; 'section_id',
            'refTableClass' =&gt; 'Dlapiper_Model_Section',
            'refColumns' =&gt; 'section_id'
        )
    );
.....
}
</code></pre>

<p>I cannot see a simple workaround in this situation, so it would be great to have support for this.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christoph Roensch (croensch) on 2010-06-01T02:10:43.000+0000</p> 
        <div class="body">
            <p>While the -&gt;find*() functions are syntactic Sugar they not provide any namespacing or aliasing. Therefor it's pretty useless in bigger Projects.</p>

<p>I usually create Table and Row Classes and write simple proxy functions in the Row Class.</p>

<pre class="highlight"><code>
/**
 * @return SectionRow
 */
public function getSection()
{
  return $this-&gt;findParentRow('namespace_SectionTable');
}
</code></pre>

<p>Workaround indeed.</p>

        </div>
    </div>
    </div>

