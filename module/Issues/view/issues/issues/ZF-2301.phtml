<h2>ZF-2301: Zend_Controller_Router_Route_Regex::assemble() uses default even when parameter is matched</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-12-12T16:28:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chris Abernethy (brownoxford)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2482">ZF-2482</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11162/martel-regex-route-issue-ZF-2301.patch">martel-regex-route-issue-ZF-2301.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It seems like default values are being used even when parameters are actually matched from the url. Take the following for example:</p>

<pre class="highlight"><code>
$route = new Zend_Controller_Router_Route_Regex(
  "itemlist(?:/(\d+))?"
, array('page' =&gt; 1) // Defaults
, array(1 =&gt; 'page') // Parameter map
, 'itemlist/%d'
);

$values = $route-&gt;match('/itemlist/2');

var_dump($values);

$url = $route-&gt;assemble();

// Expect string(10) "itemlist/2"
var_dump($url);

$url = $route-&gt;assemble(array('page' =&gt; 2));

// Expect string(10) "itemlist/2"
var_dump($url);
</code></pre>

<p>Which results in:</p>

<pre class="literal">
array(1) {
  ["page"]=&gt;
  string(1) "2"
}
string(10) "itemlist/1"
string(10) "itemlist/2"
</pre>

<p>This appears to work fine if the parameter map is reversed so that 'page' is the key and '1' is the value.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2008-01-11T08:17:42.000+0000</p> 
        <div class="body">
            <p>Good catch, Chris. It may be tricky to get straight, though.</p>

<p>As you already see, ZF supports declaring parameter names in both ways. I would like to keep it that way but I'm afraid we will have to do some magic from the looks of it.</p>

<p>If you already have some working code, then please go ahead and share.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-02-28T12:07:15.000+0000</p> 
        <div class="body">
            <p>Hey Martel,</p>

<p>I think I've found the issue (it has to do with the way that assemble() merges data from defaults, values and provided data).</p>

<p>If this patch works for you, can I go ahead and commit?</p>

<p>Thanks,
Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2008-02-28T13:22:34.000+0000</p> 
        <div class="body">
            <p>Looks very good, Ralph. Go ahead and commit. Thanks.</p>

<p>But for the sake of my conscience, please change the last lines of the test. This:</p>

<pre class="highlight"><code>
+        // check to make sure that the assembly will return with provided page=2 in the correct place
+        $this-&gt;assertEquals('itemlist/2', $route-&gt;assemble(array('page' =&gt; 2)));
</code></pre>

<p>Should be changed into this:</p>

<pre class="highlight"><code>
+        // check to make sure that the assembly will return with provided page=2 in the correct place
+        $this-&gt;assertEquals('itemlist/3', $route-&gt;assemble(array('page' =&gt; 3)));
+
+        // check to make sure that the assembly can reset a single parameter
+        $this-&gt;assertEquals('itemlist/1', $route-&gt;assemble(array('page' =&gt; null)));
</code></pre>

<p>First to make sure we don't get a 2 out of URL values, second to make sure parameter is being reset back to default.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-02-29T12:58:05.000+0000</p> 
        <div class="body">
            <p>fixed in r8470</p>

<p>Keeping open until its merged into 1.5.0 branch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-02-29T13:46:35.000+0000</p> 
        <div class="body">
            <p>FIxed in both the 1.5 branch as well as trunk</p>

        </div>
    </div>
    </div>

