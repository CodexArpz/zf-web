<h2>ZF-3714: rename Zend_Dojo -&gt; Zend_Js_Dojo</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-07-22T07:35:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-07-22T09:39:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dojo</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I think it is better to name the Zend_Dojo Component like Zend_Js_Dojo.</p>

<p>Than in the Zend_Js component path can create more than one js frameworks in the future like:
Zend_Js_Yui
Zend_Js_Prototype
Zend_Js_Scriptaculus ( extends Zend_Js_Prototype )
etc.</p>

<p>Furthermore in Zend_Js can an interface/adapter to handle more js frameworks equal
and the stable version is not released today.</p>

<p>The Component Zend_Search_Lucene doesn't name Zend_Lucene</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-07-22T09:39:42.000+0000</p> 
        <div class="body">
            <p>We will never be distributing other JS libraries or JS library integrations in the standard library, only Dojo; as such, keeping it in its own top-level namespace is an appropriate solution.</p>

<p>There may be other JS library integrations shipped via the extras library; we have not yet determined if we will require that these be placed under the ZendX_Js namespace, or if each will have its own top-level namespace. Once such a component is reviewed for inclusion, we will make that determination.</p>

<p>There are benefits and issues with both hierarchical and flat structures, and we will be deciding which best suits ZF and its users for 2.0.</p>

        </div>
    </div>
    </div>

