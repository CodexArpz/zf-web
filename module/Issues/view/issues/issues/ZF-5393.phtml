<h2>ZF-5393: Error when passing Zend_Amf_Server::setClass() an object instead of a string </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-02T06:39:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-13T11:31:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.3 (19/Jan/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7587">ZF-7587</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you pass an object to Zend_Amf_Server and don't specify a namespace it will generate the following error:</p>

<pre class="highlight"><code>
Warning: strrpos() expects parameter 1 to be string, object given in /home/norm2782/library/Zend/Amf/Server.php on line 501
</code></pre>

<p>Propopsed patch:</p>

<pre class="highlight"><code>
// Use the class name as the name space by default. 
if ($namespace == '') {
    $className = is_object($class) ? get_class($class) : $class;
    
    $namespace = substr($className, 0, strrpos($className, '.'));
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-01-02T16:33:20.000+0000</p> 
        <div class="body">
            <p>Set component</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2009-01-09T06:05:38.000+0000</p> 
        <div class="body">
            <p>I don't experience this problem with version 1.7.2 of Zend_Amf_Server. I can call setClass(), passing it an object with no namespace, and I get no such error. I think this issue may have been resolved.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-01-09T06:28:15.000+0000</p> 
        <div class="body">
            <p>I'm actually using the latest trunk and I'm getting this error.  Code to reproduce</p>

<pre class="highlight"><code>
class MyService
{
    /**
     * Returns foo
     *
     * @return string
     */
    public function foo()
    {
        return 'foo';
    }
}

require_once 'Zend/Amf/Server.php';

$server = new Zend_Amf_Server();
$server-&gt;setClass(new MyService());
</code></pre>

<p>Complete error:</p>

<pre class="highlight"><code>
Warning: strrpos() expects parameter 1 to be string, object given in /Users/norm2782/Projects/OSS/ZF/standard/trunk/library/Zend/Amf/Server.php on line 501

Catchable fatal error: Object of class MyService could not be converted to string in /Users/norm2782/Projects/OSS/ZF/standard/trunk/library/Zend/Amf/Server.php on line 501
</code></pre>

<p>Current code in Zend_Amf_Server (just did an SVN update):</p>

<pre class="highlight"><code>
public function setClass($class, $namespace = '', $argv = null)
{
    if (is_string($class) &amp;&amp; !class_exists($class)){
        require_once 'Zend/Amf/Server/Exception.php';
        throw new Zend_Amf_Server_Exception('Invalid method or class');
    } elseif (!is_string($class) &amp;&amp; !is_object($class)) {
        require_once 'Zend/Amf/Server/Exception.php';
        throw new Zend_Amf_Server_Exception('Invalid method or class; must be a classname or object');
    }

    $argv = null;
    if (2 &lt; func_num_args()) {
        $argv = array_slice(func_get_args(), 2);
    }
    
    // Use the class name as the name space by default. 
    if ($namespace == '') { // EDIT: Evaluates as true, so next line is executed
        $namespace = substr($class, 0, strrpos($class, '.')); // EDIT: Calling substr() on an object... here's where it fails
    }
    $this-&gt;_methods[] = Zend_Server_Reflection::reflectClass($class, $argv, $namespace);
    $this-&gt;_buildDispatchTable();

    return $this;
}
</code></pre>

<p>Darby, do you have display_errors switched on? ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-01-09T07:06:34.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 13581</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wade Arnold (wadearnold) on 2009-01-09T07:13:52.000+0000</p> 
        <div class="body">
            <p>It does not look like a unit test was written for this. Please don't mark an item as resolved without a corresponding unit test that tests the new feature.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wade Arnold (wadearnold) on 2009-01-09T07:16:17.000+0000</p> 
        <div class="body">
            <p>Also do either of you have a use case for this that you could help me understand so that I can use it in the documentation as to why you would pass an instantiated object through setClass(). Thanks for the code submission and making Zend Amf better for everyone! Really appreciate the help!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-01-09T07:25:13.000+0000</p> 
        <div class="body">
            <p>Actually, I did add a unit test ; )</p>

<p><a href="http://framework.zend.com/code/changelog/Zend_Framework/?cs=13581">http://framework.zend.com/code/changelog/â€¦</a></p>

<p>The primary use case for this is that Zend_Server_Reflection supports reflecting on an object. Because of this, it's better to have Zend_Amf_Server support this as well, because otherwise it would be unexpected behavior.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wade Arnold (wadearnold) on 2009-01-09T07:31:01.000+0000</p> 
        <div class="body">
            <p>Awesome thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2009-01-09T10:36:36.000+0000</p> 
        <div class="body">
            <p>Sorry, I wasn't using latest trunk version but the version included with 1.7.2. This issue says that it affects 1.7.2, but I can't see that it does.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrea Montemaggio (klinamen) on 2009-03-25T02:17:41.000+0000</p> 
        <div class="body">
            <p>When the object passed as argument is an instance of a class whose constructor requires arguments, an instantiation error is raised on service call.
I'm using 1.7.6 version of ZF. I've done some debug and found that in Zend/Amf/Server.php on line 165 (_dispatch method) the method's declaring class obtained by reflection is called on a NEW instance created with default construction and not on the object passed to setClass() as I expected.
This behavior seems to raise the instantiation trouble I've mentioned; moreover, this behavior seems to be inconsistent w.r.t. the one observed, for example, in Zend/Json/Server component.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrea Montemaggio (klinamen) on 2009-03-25T02:26:23.000+0000</p> 
        <div class="body">
            <p>I'm sorry, the version of ZF I'm using is 1.7.4 and NOT 1.7.6 as I reported.</p>

        </div>
    </div>
    </div>

