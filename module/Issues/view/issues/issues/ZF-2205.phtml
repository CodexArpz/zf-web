<h2>ZF-2205: Can't load the language file correctly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-11-14T19:58:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-11-21T07:06:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.3 (30/Nov/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>My codes is:</p>

<pre><code>public function testGetTextTw()
{
    $t = new Zend_Translate('gettext', './_locale/', 'zh_TW');
    $this-&gt;assertEquals('n2', $t-&gt;_('New'));
}

public function testGetTextCn()
{
    $t = new Zend_Translate('gettext', './_locale/', 'zh_CN');

    $this-&gt;assertEquals('n1', $t-&gt;_('New'));
}
</code></pre>

<p>But, the testGetTextCn() go into fail: expected string 'n1' but got string 'n2'.</p>

<p>So, I read the codes in Zend_Translate_Adapter::__construct(). 
the param variable $local was covered by an other value.</p>

<p>I made this patch:</p>

<p>Index: Adapter.php</p>

<p>===================================================================</p>

<p>--- Adapter.php (revision 6821)</p>

<p>+++ Adapter.php (working copy)</p>

<p>@@ -59,7 +59,7 @@</p>

<pre><code>  */
 protected $_options = array(
     'clear' =&gt; false, // clear previous loaded translation data
</code></pre>

<p>-        'scan'  =&gt; null   // where to find the locale
+        'scan'  =&gt; self::LOCALE_DIRECTORY,   // where to find the locale
     );</p>

<pre><code> /**
</code></pre>

<p>@@ -79,14 +79,14 @@</p>

<pre><code>  * @param  string|array        $options   Options for the adaptor
  * @throws Zend_Translate_Exception
  */
</code></pre>

<p>-    public function __construct($data, $locale = null, array $options = array())
+    public function __construct($data, $defaultLocale = null, array $options = array())
     {
-        if ($locale === null) {
-            $locale = new Zend_Locale();
+        if ($defaultLocale === null) {
+            $defaultLocale = new Zend_Locale();
         }
-        if ($locale instanceof Zend_Locale) {
-            $locale = $locale-&gt;toString();
-        }
+        if ($defaultLocale instanceof Zend_Locale) {
+            $defaultLocale = $defaultLocale-&gt;toString();
+        }</p>

<pre><code>     $options = array_merge($this-&gt;_options, $options);
     if (is_string($data) and is_dir($data)) {
</code></pre>

<p>@@ -96,7 +96,7 @@</p>

<pre><code>             if ($info-&gt;isDir()) {

                 $directory = $info-&gt;getPath();
</code></pre>

<p>-                    // pathname as locale
+                    // pathname as localeself::LOCALE_DIRECTORY
                     if (($options['scan'] === self::LOCALE_DIRECTORY) and (Zend_Locale::isLocale((string) $info))) {
                         $locale = (string) $info;
                     }
@@ -126,8 +126,8 @@</p>

<pre><code>                 }
                 try {
                     $this-&gt;addTranslation((string) $info-&gt;getPathname(), $locale, $options);
</code></pre>

<p>-                        if ((array_key_exists($locale, $this-&gt;_translate)) and (count($this-&gt;_translate[$locale]) &gt; 0)) {
-                            $this-&gt;setLocale($locale);
+                        if ((array_key_exists($defaultLocale, $this-&gt;_translate)) and (count($this-&gt;_translate[$defaultLocale]) &gt; 0)) {
+                            $this-&gt;setLocale($defaultLocale);
                         }
                     } catch (Zend_Translate_Exception $e) {
                         // ignore failed sources while scanning
@@ -135,9 +135,9 @@</p>

<pre><code>             }
         }
     } else {
</code></pre>

<p>-            $this-&gt;addTranslation($data, $locale, $options);
-            if ((array_key_exists($locale, $this-&gt;_translate)) and (count($this-&gt;_translate[$locale]) &gt; 0)) {
-                $this-&gt;setLocale($locale);
+            $this-&gt;addTranslation($data, $defaultLocale, $options);
+            if ((array_key_exists($defaultLocale, $this-&gt;_translate)) and (count($this-&gt;_translate[$defaultLocale]) &gt; 0)) {
+                $this-&gt;setLocale($defaultLocale);
             }
         }
         $this-&gt;_automatic = true;</p>

<p>Now, it works fine!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-11-15T03:14:39.000+0000</p> 
        <div class="body">
            <p>Not able to reproduce the problem...</p>

<p>False initialisation and no translation file for verification given.
The given patch also introduces several other problems with tmx, xliff, array and others. Therefor we will not integrate it.</p>

<p>If you give all data we will look into the problem.</p>

<p>We need your default locale, the gettext files, the directory structure, the svn version, the OS, and 32/64bit?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-11-21T07:06:44.000+0000</p> 
        <div class="body">
            <p>Closing issue as there is no feedback.</p>

<p>The user just have to give the wished option instead of changing the class.</p>

        </div>
    </div>
    </div>

