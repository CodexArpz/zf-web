<h2>ZF-6329: Zend_Db_Table_Abstract's _getCols method returns unexpected results when it goes against metadata cache and the _schema ivar isn't set</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-16T14:18:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The public info() method in Zend_Db_Table_Abstract calls _getCols, which returns unexpected column names if two different tables with the same name exist in two different schemas, and one is already cached, because of the way the table cache key is generated in _setupMetadata().</p>

<p>The table cache key in _setupMetadata is generated using the _schema ivar set in the table instance, which is usually 'null' if a programmer doesn't go to the trouble of explicitly setting it by passing the corresponding key-value pair to the constructor. If this behavior is intended, it's extremely counterintuitive, as I would expect the table to know well enough to cache using the schema specified in the adapter when appropriate.</p>

<p>Steps to reproduce:</p>

<p>1) Call Zend_Db_Table_Abstract::setDefaultMetadataCache().
2) Instantiate Zend_Db_Table_Abstract with table name <code>foo</code>, with an adapter for schema <code>bar</code>, without explicitly setting the schema in the table constructor.
3) Instantiate Zend_Db_Table_Abstract with table name <code>foo</code>, with an adapter for schema <code>baz</code>, without explicitly setting the schema in the table constructor.
4) Call info() on the baz.foo table, and look at the columns that are returned. They are the columns that belong to bar.foo ...</p>

<p>Recommendations:</p>

<p>The schema from the adapter should supersede the table schema in _setupMetadata() if the table schema is null.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:37.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

