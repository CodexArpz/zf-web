<h2>ZF-8629: Doctrine_Hydrator_ArrayDriver segfaults Php when loaded by Zend_Loader_Autoloader</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-24T15:50:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Gatto (mgatto)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Apache and Php segfault with no error information in the logs and a white screen of death when I use Doctrine 1.2.1 in a Zend Framework controller.</p>

<p>I've traced the problem to line 126 of Zend/Loader/Autoloader.php which only seemed to occur when it autoloaded Doctrine_Hydrator_ArrayDriver during a call to save() in the controller.</p>

<p>I debugged with xdebug and have attached a simple test controller with no other code. The ZF page works fine when all Doctrine is commented out and a Doctrine test page with the same code but outside of ZF worked fine via Apache as did a CLI script.</p>

<p>Workaround is to not push Doctrine to Zend Loader in the bootstrap.</p>

<p>Here is the debug output just before a segfault, the stack and the variable values:</p>

<p>Remote Launch (stepping)<br />
    Library/Zend/Loader/Autoloader.php.Zend_Loader_Autoloader::autoload : lineno 126<br />
    Library/Zend/Loader/Autoloader.php.is_subclass_of : lineno 0<br />
    Library/Doctrine/Query.php.Doctrine_Query-&gt;processPendingFields : lineno 477<br />
    Library/Doctrine/Query.php.Doctrine_Query-&gt;buildSqlQuery : lineno 1213<br />
    Library/Doctrine/Query.php.Doctrine_Query-&gt;getSqlQuery : lineno 1122<br />
    Library/Doctrine/Query/Abstract.php.Doctrine_Query_Abstract-&gt;_getDqlCallbackComponents : lineno 1137<br />
    Library/Doctrine/Query/Abstract.php.Doctrine_Query_Abstract-&gt;_preQuery : lineno 1106<br />
    Library/Doctrine/Query/Abstract.php.Doctrine_Query_Abstract-&gt;execute : lineno 1001<br />
    Library/Doctrine/Template/Listener/Sluggable.php.Doctrine_Template_Listener_Sluggable-&gt;getUniqueSlug : lineno 207<br />
    Library/Doctrine/Template/Listener/Sluggable.php.Doctrine_Template_Listener_Sluggable-&gt;buildSlugFromFields : lineno 120 
    Library/Doctrine/Template/Listener/Sluggable.php.Doctrine_Template_Listener_Sluggable-&gt;preInsert : lineno 65<br />
    Library/Doctrine/Record/Listener/Chain.php.Doctrine_Record_Listener_Chain-&gt;preInsert : lineno 342<br />
    Library/Doctrine/Record.php.Doctrine_Record-&gt;invokeSaveHooks : lineno 355<br />
    Library/Doctrine/Connection/UnitOfWork.php.Doctrine_Connection_UnitOfWork-&gt;insert : lineno 551<br />
    Library/Doctrine/Connection/UnitOfWork.php.Doctrine_Connection_UnitOfWork-&gt;saveGraph : lineno 81<br />
    Library/Doctrine/Record.php.Doctrine_Record-&gt;save : lineno 1691 
    Application/controllers/TestingController.php.TestingController-&gt;indexAction : lineno 20<br />
    Library/Zend/Controller/Action.php.Zend_Controller_Action-&gt;dispatch : lineno 513<br />
    Library/Zend/Controller/Dispatcher/Standard.php.Zend_Controller_Dispatcher_Standard-&gt;dispatch : lineno 289<br />
    Library/Zend/Controller/Front.php.Zend_Controller_Front-&gt;dispatch : lineno 946<br />
    Library/Zend/Application/Bootstrap/Bootstrap.php.Zend_Application_Bootstrap_Bootstrap-&gt;run : lineno 77<br />
    Application/Bootstrap.php.Bootstrap-&gt;run : lineno 52<br />
    Library/Zend/Application.php.Zend_Application-&gt;run : lineno 346 
    Public/index.php.{main} : lineno 26</p>

<p>=-=-=-=-=-=</p>

<p>$class  Doctrine_Hydrator_ArrayDriver<br />
$object Zend_Loader_Autoloader<br /><em>autoloaders    Array [1]<br />
        0   Array [2]<br />
            0   Doctrine<br />
            1   autoload<br />
    _defaultAutoloader  Array [2]<br />
        0   Zend_Loader 
        1   loadClass<br />
    _fallbackAutoloader false<br />
    _internalAutoloader Array [2]<br />
        0   Zend_Loader_Autoloader<br />
        1   _autoload<br />
    _namespaces Array [5]<br />
        Zend</em>   true<br />
        ZendX_  true<br />
        Lisantra_   true<br />
        Persistence_    true<br />
        Doctrine_   true<br /><em>namespaceAutoloaders   Array [1]<br />
        Array [1]<br />
            0   Array [2]<br />
                0   Doctrine<br />
                1   autoload<br />
    _suppressNotFoundWarnings   false<br />
$self   Zend_Loader_Autoloader<br />
    _autoloaders    Array [1]<br />
        0   Array [2]<br />
            0   Doctrine<br />
            1   autoload<br />
    _defaultAutoloader  Array [2]<br />
        0   Zend_Loader 
        1   loadClass<br />
    _fallbackAutoloader false<br />
    _internalAutoloader Array [2]<br />
        0   Zend_Loader_Autoloader<br />
        1   _autoload<br />
    _namespaces Array [5]<br />
        Zend</em>   true<br />
        ZendX_  true<br />
        Lisantra_   true<br />
        Persistence_    true<br />
        Doctrine_   true<br />
    _namespaceAutoloaders   Array [1]<br />
        Array [1]<br />
            0   Array [2]<br />
                0   Doctrine<br />
                1   autoload<br />
    _suppressNotFoundWarnings   false<br />
$method _autoload<br />
$autoloader Array [0]</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by PÃ¡draic Brady (padraic) on 2010-02-15T04:39:26.000+0000</p> 
        <div class="body">
            <p>Hehe. Spent a few hours worried this was just me ;). But yes, in certain scenarios Doctrine craps out when autoloaded this way. I haven't dug any deeper into why but my own xdebug trace ends after trying to autoload the Hydrator.</p>

        </div>
    </div>
    </div>

