<h2>ZF-1578: Report query parameters in query profile</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-06-17T11:22:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC3 (23/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Profiler</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1517">ZF-1517</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, the Zend_Db_Profiler_Query class stores the SQL string to represent the query executed.  But in cases when this query contains parameter placeholders, it can be hard to know why a given query took as much time as it did.</p>

<p>This is a feature request to add support to Zend_Db_Profiler_Query to store the values of parameters, and make them available through a new method {{getParams()}}.  The method should return an array of key/value pairs, because parameters can be specified by integer position or by named parameters.</p>

<p>Do not "merge" the parameter values with the original SQL.  This is error-prone and also obscures some information that could be important.  That is, it may be useful to know which values are literals in the prepared SQL string, versus provided at execute-time as parameters.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-17T11:25:36.000+0000</p> 
        <div class="body">
            <p>This issue depends on the changes for ZF-1517.  We need to support the Profiler in the Statement class, not only in the Adapter class.  So if an application uses {{Adapter::prepare()}} and {{Statement::execute()}} it will still get the profiler data.</p>

<p>Also it should support parameter binding.  It needs to store references to the bound parameter objects, and then at execute-time get the values of the bound parameter, because the values may have changed between parameter bind-time and query execute-time.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-20T20:35:20.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 5401.</p>

<p>There is a new method Zend_Db_Profiler_Query::getQueryParams(), which returns an array of key/value pairs for the values of parameters used in the current query profile.  The keys are the parameter placeholders, which may be 1-based integers, or else strings prefixed with ':'.</p>

        </div>
    </div>
    </div>

