<h2>ZF-5819: Zend_Db_Table_Row_Abstract::setFromArray removes data key/value pair if key is not a DB column</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-02-17T14:07:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Data provided to row by 'setFromArray' method are deleted if the key is not a DB column (key is not present in self::_data array) without call '_transformColumn'.</p>

<p>\</p>

<pre class="highlight"><code>
public function setFromArray(array $data)
{
    $data = array_intersect_key($data, $this-&gt;_data);

    foreach ($data as $columnName =&gt; $value) {
        $this-&gt;__set($columnName, $value);
    }

    return $this;
}
</code></pre>

<pre class="highlight"><code>
public function setFromArray(array $data)
{
    foreach ($data as $columnName =&gt; $value) {
        $this-&gt;__set($columnName, $value);
    }

    return $this;
}
</code></pre>

<p>The magic method '__set' (invoked in setFromArray for each key/value pair):</p>

<ul><li>call the self::_transformColumn method (used for inflection, for example);</li>
<li>check the existence of 'column' in self::_data array (raising an exception if not found).</li>
</ul><pre class="highlight"><code>
public function __set($columnName, $value)
{
    $columnName = $this-&gt;_transformColumn($columnName);
    if (!array_key_exists($columnName, $this-&gt;_data)) {
        require_once 'Zend/Db/Table/Row/Exception.php';
        throw new Zend_Db_Table_Row_Exception("Specified column \"$columnName\" is not in the row");
    }
    $this-&gt;_data[$columnName] = $value;
    $this-&gt;_modifiedFields[$columnName] = true;
}
</code></pre>

<p>So ``` may be safely removed.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Helgi Hrafn Halld√≥rsson (harabanar) on 2009-04-24T04:30:21.000+0000</p> 
        <div class="body">
            <p>When using Oracle the database column names are usually in uppercase, while the names of the input fields are in lower. For that we use the _transformColumn function. When using the setFromArray, when posting data from a form, the array_intersect_key function will return an empty array, and no data will be set.</p>

<p>So, I vote for this issue to be resolved.</p>

<p>If the array_intersect_key function must be, I suggest that the _transformColumn function is used before, so the array keys have been transformed before removal.</p>

<p>Hope this will be fixed. For now I have overwritten the setFromArray function and removed the following line</p>

<p>```</p>

<p>ps. I am using 1.7.8</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Richard Jones (talentedmrjones) on 2009-12-19T12:21:50.000+0000</p> 
        <div class="body">
            <p>I wholeheartedly concur. In my applications I prefer to hide the column names from the user in forms and rely on _transformColumn for column name mapping. So in some cases where setFromArray is used I have to override that function in my concrete row class rather than modifying core.</p>

<p>I dont see an issue with removing the array_intersect_key function, as the current implementation of __set() will catch column names that do not exist in the row.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by starflash (starflash) on 2010-12-17T01:29:10.000+0000</p> 
        <div class="body">
            <p>I agree.</p>

<p>For example:</p>

<p>The db table has tow columns: test_1, test_2 .</p>

<p>my _transformColumn function is:</p>

<p>'test_one' =&gt; 'test_1',
'test_two' =&gt; 'test_2',</p>

<p>when I invoke setFromArray(array('test_one' =&gt; 'abc', 'test_two' =&gt; 'abc)), and no data will be set.</p>

        </div>
    </div>
    </div>

