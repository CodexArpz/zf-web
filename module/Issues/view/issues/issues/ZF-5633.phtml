<h2>ZF-5633: Wrong response code when header location is used</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-26T01:45:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-07T06:55:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Symetrix (symetrix)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When setting location header, and when this header is not the first, the responseCode is ignore because 
header ($header['name'], . ': ' . $header['value'], $header['replace'])
modify the response code if $header['name'] == 'location'</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Travis Pew (travisp) on 2009-09-18T09:36:25.000+0000</p> 
        <div class="body">
            <p>I guess this is because for php, the location header is a special case:</p>

<p>{quote} The second special case is the "Location:" header. Not only does it send this header back to the browser, but it also returns a REDIRECT (302) status code to the browser unless some 3xx status code has already been set. 
<a href="">www.php.net/manual/en/function.header.php</a>" rel="nofollow"&gt;PHP: header - Manual
{quote}</p>

<p>Currently:
The responseCode that Zend_Controller_Response sets will depend on whether or not the location header is the first header that Zend comes across. If the location header was the first header that was set, _httpResponseCode if set will override the location header. If the location header is not the first header that was set, php's standard behavior will be followed (overriding _httpResponseCode if it was anything other than 201 or 3xx).</p>

<p>I don't think what Symetrix thought was a problem should be a problem but I think there is another potential problem:
A user sets a responseCode, then later sets the location header (this is the only header that the user sets). The user's location header will essentially be overruled by the <em>prior</em> set responseCode:</p>

<pre class="highlight"><code>
$response = new Zend_Controller_Response_Http();
$response-&gt;setHttpResponseCode(200);
$response-&gt;setHeader('location', '<a href="http://www.php.net">http://www.php.net</a>');
$response-&gt;sendHeaders();
//result = HTTP/1.1 200 OK

$response = new Zend_Controller_Response_Http();
$response-&gt;setHttpResponseCode(200);
$response-&gt;setHeader('X-test', 'test');
$response-&gt;setHeader('location', '<a href="http://www.php.net">http://www.php.net</a>');
$response-&gt;sendHeaders();
//result = HTTP/1.1 302 Found
</code></pre>

<p>Either the httpResponseCode should be the code that is always sent back or we should let location override the response code regardless of whether it was the first or second set header.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-09-18T12:56:11.000+0000</p> 
        <div class="body">
            <p>Calling setHeader('Location', '...') will not set the response code (unless, of course, PHP does when it detects the Location header). If you call setRedirect(), however, you have the option of providing a response code -- and in that case, it <em>will</em> set the response code.</p>

<p>There are reasons for this. For instance, with REST, when a new item is POST'd, you should specify a "201: Created" header, but also include a "Location" header pointing to the URI for the newly created resource. If setHeader('Location', ...') actually set the response code automatically, this would be problematic</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by I Yu (airr) on 2009-10-07T06:55:15.000+0000</p> 
        <div class="body">
            <p>How i can fix this problem? 
WebDav-classes do not work with this problem.</p>

        </div>
    </div>
    </div>

