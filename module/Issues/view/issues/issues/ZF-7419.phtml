<h2>ZF-7419: Allow Bootstrap::getOption to return Zend_Config Object</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-07-30T03:00:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Fergus Hadley (voidstate)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
            <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, almost every time I use the getOption() method in a Zend Application bootrap class, I have to wrap it in "new Zend_config()".</p>

<p>For example:</p>

<p>$Front-&gt;getRouter()-&gt;addConfig( new Zend_Config( $this-&gt;getOption( 'routes' ) ) );</p>

<p>It would be good to have the option to have the array automatically converted to a Zend_config object.</p>

<p>Change would need to be made to Zend_Application_Bootstrap_BootstrapAbstract::getOption()</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2009-07-30T03:08:19.000+0000</p> 
        <div class="body">
            <p>The router is the only component where a Zend_Config object is required, which will be fixed with ZF 2.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-09-29T11:48:53.000+0000</p> 
        <div class="body">
            <p>Yes, any Zend component except router has a method such as setOptions($array) in addition to setConfig(Zend_Config).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jonathan Reid Kushner (jkushner1019) on 2010-12-10T07:22:26.000+0000</p> 
        <div class="body">
            <p>This is because the bootstrap receives the options array from the application class on instantiation, and when you request options from the bootstrap class, you are receiving a merged version of options in an array format. i think its the standard to have the options in the array format for the application component.</p>

        </div>
    </div>
    </div>

