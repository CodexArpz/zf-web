<h2>ZF-10289: Zend_View renders wrong script</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-10T06:03:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-08-10T08:12:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Valentine Mayamsin (wargoth)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Steps to reproduce:</p>

<ol><li><p>Create: 
module1/controllers/IndexController::indexAction
module1/controllers/BlockController::blockAction
module2/controllers/BlockController::blockAction</p></li>
<li><p>Then add two blocks to action stack in IndexController::indexAction():</p></li>
</ol><p>$this-&gt;_helper-&gt;actionStack('block', 'block', 'module1');
$this-&gt;_helper-&gt;actionStack('block', 'block', 'module2');</p>

<p>If you try to run IndexController::indexAction, then you'll find that actually module2/controllers/BlockController::blockAction renders twice.</p>

<p>It happens because of accumulated view script's paths:</p>

<p>print_r($this-&gt;view-&gt;getScriptPaths());</p>

<p>{quote}
Array
(
    [0] =&gt; /path/modules/module2/views/scripts/
    [1] =&gt; /path/modules/module1/views/scripts/
    [2] =&gt; /path/views/scripts/
)
{quote}</p>

<p>So, the last script, which is located in /path/modules/module1/views/scripts/block/block.phtml will be found in /path/modules/module2/views/scripts/block/block.phtml</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-08-10T06:27:04.000+0000</p> 
        <div class="body">
            <p>Honestly, this sort of thing is going to be an issue whenever you push identically named controllers and actions on the ActionStack -- script paths are accumulated in a LIFO order, so the first match will always be the one rendered.</p>

<p>One way to remedy the situation is to customize the ViewRenderer slightly. You could modify it to add each module as a script directory, and then change the view script path spec to point to views/scripts/:controller/:action.:suffix:</p>

<pre class="highlight"><code>
$viewRenderer-&gt;setViewBasePathSpec(':moduleDir')
             -&gt;setViewScriptPathSpec('views/scripts/:controller/:action.:suffix');
</code></pre>

<p>I'd do that somewhere in a dispatchLoopStartup() plugin or your bootstrap.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-08-10T06:28:18.000+0000</p> 
        <div class="body">
            <p>Marking as "Won't Fix," as Zend_View is working as designed, and the issue is due to userland naming conflicts. Configuration of the ViewRenderer can resolve those issues.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Valentine Mayamsin (wargoth) on 2010-08-10T07:41:02.000+0000</p> 
        <div class="body">
            <p>We've spent a lot of time to figure why this happens and potentially this issue could be very confusing for new developers. Maybe there should be default configuration of ViewRenderer? Or script paths should be cleaned up on each stack loop?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-08-10T08:12:48.000+0000</p> 
        <div class="body">
            <p>We're actually hoping to phase out the ActionStack in ZF2. It has been problematic on a number of fronts -- the issue you post here, as well as performance problems, confusion about how content is aggregated for layouts, and more. Your idea of doing script path cleanup within the ActionStack is interesting, but would require some major changes to Zend_View, as the script path stack is designed as something you add to, but otherwise do not manipulate.</p>

<p>Due to these issues, it doesn't make sense for us to make ActionStack-specific changes to the ViewRenderer at this point.</p>

        </div>
    </div>
    </div>

