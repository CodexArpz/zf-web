<h2>ZF-10649: Recent fix for Issue ZF-9643 seems to break a critical functionality of Zend_Acl</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-11-05T16:53:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-21T08:57:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.1 (30/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Acl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9643">ZF-9643</a></li>
            <li><a href="/issues/browse/ZF-10743">ZF-10743</a></li>
            <li><a href="/issues/browse/ZF-10879">ZF-10879</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13431/ZF-10649.patch">ZF-10649.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Seems that the recent fix <a href="http://framework.zend.com/issues/browse/ZF-9643">http://framework.zend.com/issues/browse/ZF-9643</a> broke a critical functionality of Zend_Acl</p>

<p>$acl = new Zend_Acl();
$acl-&gt;addRole(new Zend_Acl_Role('administrator'));
$acl-&gt;addResource(new Zend_Acl_Resource('administrator'));</p>

<p>$acl-&gt;allow('administrator');</p>

<p>echo $acl-&gt;isAllowed('administrator') ? "allowed" : "denied";
// denied</p>

<p>// In versions 1.10.x 'administrator' role would be allowed to access All resources
// by $acl-&gt;allow('administrator'); or $acl-&gt;allow('administrator', null);
// basically saying to allow Role 'administrator' to Access ALL Resources</p>

<p>// Reverting the old code from line 636 of Zend_Acl would fix the issue, but of course would revert ZF-9643 issue
// $resources = ($resources == null &amp;&amp; count($this-&gt;_resources) &gt; 0) ? array_keys($this-&gt;_resources) : array($resources); 
// revert to
// array($resources)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by jsnod (afx114) on 2010-11-09T14:33:07.000+0000</p> 
        <div class="body">
            <p>I am experiencing this same issue, it is preventing me from upgrading to 1.11.0.  Reverting as specified by Reporter above fixes it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Philip Iezzi (iezzip) on 2010-11-11T09:10:44.000+0000</p> 
        <div class="body">
            <p>Same problem here, prevents me from upgrading to 1.11.0. I've got a default allow permission schema for a site with just 3 resources that need to be restricted.</p>

<pre class="highlight"><code>
// default permission is allow
$this-&gt;allow();
</code></pre>

<p>This won't give permission to any resource that is NOT defined as follows:</p>

<pre class="highlight"><code>
$this-&gt;add(new Zend_Acl_Resource('account'));
</code></pre>

<p>In 1.10.8 it worked as expected, gave permission to every other resource.
Thanks for fixing soon!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-12T12:24:51.000+0000</p> 
        <div class="body">
            <p>I've uploaded a patch for this issue. It includes a unit test.</p>

<p>The problem is actually pretty interesting.  The fix for ZF-9643 was at the time a good fix, but there is this use case (described in this issue) that was not covered by our existing unit tests.  Regardless, this use case is indeed pretty common, so we need to find a way to ensure that all common use cases work.</p>

<p>In this solution, we actually need to handle (in setRule()) the special case of what happens when 'null' is passed in for resources.  The concept of "all resources" is handled by a special "global" ruleset.  This solution attempts to modify the global ruleset instead of iterating and applying a rule to all resources.  Consequently, when removing rules globally, this patch iterates all resources to do a full "cleanup".</p>

<p>The solution provided is completely backwards compatible for as far as all the use cases described in old and the new unit tests.</p>

<p>Please test this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Emmanuel Bouton (goten4) on 2010-11-13T13:22:21.000+0000</p> 
        <div class="body">
            <p>I had the same problem and the patch fixed it ! Thanks Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jacek Kobus (jacekkobus.com) on 2010-11-14T17:06:36.000+0000</p> 
        <div class="body">
            <p>Had the same problem after upgrade. Path worked as expected. Thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jerome Coloma (froz) on 2010-11-14T17:10:59.000+0000</p> 
        <div class="body">
            <p>The patch worked as expected. Thank you for fixing the issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-11-18T08:20:28.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk at r23357 and release branch 1.11 at 23358</p>

        </div>
    </div>
    </div>

