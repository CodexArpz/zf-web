<h2>ZF-3392: Png with transparency makes pdf generation performance collapse</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-06-05T04:27:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-31T08:39:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Francois Gaudin (alf)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>here is my test code :</p>

<pre class="highlight"><code>
     public function printtestAction()
    {
        require_once 'Zend/Pdf.php';
        $pdf = new Zend_Pdf() ;
        $pdf-&gt;pages[] = ($page1 = $pdf-&gt;newPage('A4')) ;
        $style = new Zend_Pdf_Style() ;
        $style-&gt;setFont(Zend_Pdf_Font::fontWithName(Zend_Pdf_Font::FONT_HELVETICA));
        $style-&gt;setFontSize(12);
        $style-&gt;setFillColor(new Zend_Pdf_Color_Html('black'));
        $page1-&gt;setStyle($style);
        $page1-&gt;drawText('Test',50,50,'UTF-8') ;
        $background = Zend_Pdf_Image::imageWithPath('pdf_ressources/fond.png');
        $page1-&gt;drawImage($background, 0, 0, 597, 841);
        
        $response = $this-&gt;getResponse(); 
        $response-&gt;setHeader('Cache-Control', 'public', true) 
            -&gt;setHeader('Content-Description', 'File Transfer', true) 
            -&gt;setHeader('Content-Type', 'application/pdf', true) 
            -&gt;setHeader('Content-Disposition', 'attachment;filename=test.pdf', true) 
            -&gt;setHeader('Content-Transfer-Encoding', 'binary', true) 
            -&gt;appendBody($pdf-&gt;render());
        
        $this-&gt;_helper-&gt;layout-&gt;disableLayout();
        $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender(true) ;
    }
</code></pre>

<p>The image is 597x841. With transparency, it takes about 20 sec, without it's immediate. The image is about 120kB with transparency and about 70kB without.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Francois Gaudin (alf) on 2008-06-09T07:18:10.000+0000</p> 
        <div class="body">
            <p>Alexander, related to your comment on my blog, I can't attach the image since it's a copyrighted one but I think any A4 image with a lot of transparency may cause the problem. I'll test during the week with an other (home made) image to check.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin McArthur (kevin) on 2008-07-15T14:16:47.000+0000</p> 
        <div class="body">
            <p>This is unfortunatly a technical limitation to the way the PNG parser works. I assume this is a RGB + Alpha channel image.</p>

<p>The way PDF works is to create two images from one and overlay them as two data streams. PNG is an integrated format. As a result putting out a transparent alpha png requires looping the entire thing and copying out the transparency data.</p>

<p>The key bit of code is...</p>

<p>//Iterate every pixel and copy out rgb data and alpha channel (this will be slow)
                for($pixel = 0, $pixelcount = ($width * $height); $pixel &lt; $pixelcount; $pixel++) {
                    $imageDataTmp .= $pngDataRawDecoded[($pixel<em>4)+0] . $pngDataRawDecoded[($pixel</em>4)+1] . $pngDataRawDecoded[($pixel<em>4)+2];
                    $smaskData .= $pngDataRawDecoded[($pixel</em>4)+3];
                }</p>

<p>However, this peice of code is being upgraded to the new fileparsers so, any improvement to this should occur <em>after</em> the fileparser upgrades are done. (Which is being worked on in the community, but not at zend afaik)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Willie Alberty (willie) on 2008-07-31T11:20:56.000+0000</p> 
        <div class="body">
            <p>Alexander - are you actively working on this? If not, I have a newer parser half-finished that should help address this; please assign to me.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2008-08-01T03:39:37.000+0000</p> 
        <div class="body">
            <p>Hi Willie!</p>

<p>No. I don't touch these things now.
The only thing I would like to add before ZF 1.6 is transparency handling.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Willie Alberty (willie) on 2008-12-04T22:34:54.000+0000</p> 
        <div class="body">
            <p>Unassigning Zend_Pdf issues currently assigned to me pending decision on ZF 2.0 release timeframe and potential contribution of comprehensive changeset.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matt Mercer (mattmercerca) on 2010-11-06T10:44:23.000+0000</p> 
        <div class="body">
            <p>I would add that PNG 32 with alpha channel transparencies play a role in this performance degradation. It seems as PNG 24 is not causing as much grief.</p>

        </div>
    </div>
    </div>

