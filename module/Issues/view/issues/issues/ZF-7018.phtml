<h2>ZF-7018: Zend_Db_Table should fetch related objects</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-06-15T05:53:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-18T04:19:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Romain Fromi (fromi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Many users ask for how to write a join request with Zend_Db_Table-&gt;select().
For now it is not possible to join foreign column to a table select statement unless you call setIntegrityCheck(false).
Even so, the result is having one corrupted Zend_Db_Table_Row instance with all column.
I expected to have a non corrupted Zend_Db_Table_Row with the foreign attribute being a reference to a second non corrupted Zend_Db_Table_Row.</p>

<p>Let have an exemple :
We have to tables : Bugs(bug_id, title, author_id) and Authors(author_id, name).
I want to fetch all Bug table entries.</p>

<p>I can write :</p>

<pre class="highlight"><code>
$bug = new DbTable_Bugs();
$bugs = $bug-&gt;fetchAll();
for each ($bugs as $bugRow)  {
    $bugRow-&gt;findParentRow('Author');
}
</code></pre>

<p>But, this way I will do 1 + n queries to the database : 1 for the fetchAll query, n being every findParentRow queries.
The solution would be something like :</p>

<pre class="highlight"><code>
$bugs = $bug-&gt;fetchAllJoinAuthor();
</code></pre>

<p>and then findParentRow do not require any other queries, every rows needed whould have already been created and linked together.</p>

<p>Today I am nearly sure this feature does not exist yet (but I may be wrong). I think that Zend_Db_Table_Row do not support foreign rows. It would be great if Zend_Db could run the same as Propel does in the following exemple (my inspiration for this thread) :
[<a href="http://propel.phpdb.org/trac/wiki/Users/Documentation/1.2/Relationships#FetchingRelatedObjects">http://propel.phpdb.org/trac/wiki/…</a>]</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Romain Fromi (fromi) on 2009-06-18T04:19:14.000+0000</p> 
        <div class="body">
            <p>I made up my mind and found a Component proposal on the wiki which is an answer to my problem : <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Db_Mapper+-+Benjamin+Eberlei">http://framework.zend.com/wiki/display/…</a></p>

        </div>
    </div>
    </div>

