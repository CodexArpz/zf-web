<h2>ZF-5372: Wrong SQL generation in Zend_Db_Select::joinUsing()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-12-29T05:34:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-05T02:36:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
            <li>zf-caretaker-adamlundrigan</li>
            <li>zf-crteam-needsexpert</li>
            <li>zf-crteam-priority</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3792">ZF-3792</a></li>
            <li><a href="/issues/browse/ZF-3309">ZF-3309</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The SQL generated by Zend_Db_Select::joinUsing() when joining by an array of columns is totally broken.</p>

<p>Sample code to reproduce:</p>

<pre class="highlight"><code>
$db = Zend_Db::factory('Pdo_Mysql', array('dbname' =&gt; 'test', 'username' =&gt; 'root', 'password' =&gt; ''));
$select = new Zend_Db_Select($db);
$select-&gt;from('table_A')-&gt;joinUsing('tableB', array('col_one', 'col_two'));
// Outputs:
//  SELECT `table_A`.*, `tableB`.* FROM `table_A` INNER JOIN `tableB` ON `tableB`.Array = `table_A`.Array
echo (string) $select;
</code></pre>

<p>Notice the columns being used on the ON clause:  ON <code>tableB</code>.{color:red}Array{color} = <code>table_A</code>.{color:red} Array{color}</p>

<p>This is a quick patch that solves the issue:</p>

<pre class="highlight"><code>
Index: Zend/Db/Select.php
===================================================================
--- Zend/Db/Select.php  (revision 13462)
+++ Zend/Db/Select.php  (working copy)
@@ -809,9 +809,17 @@
         $join  = $this-&gt;_adapter-&gt;quoteIdentifier(key($this-&gt;_parts[self::FROM]), true);
         $from  = $this-&gt;_adapter-&gt;quoteIdentifier($this-&gt;_uniqueCorrelation($name), true);
 
-        $cond1 = $from . '.' . $cond;
-        $cond2 = $join . '.' . $cond;
-        $cond  = $cond1 . ' = ' . $cond2;
+        if (is_scalar($cond)) {
+            $cond1 = $from . '.' . $cond;
+            $cond2 = $join . '.' . $cond;
+            $cond  = $cond1 . ' = ' . $cond2;
+        } else {
+            $conds = array();
+            foreach ($cond as $c) {
+                $conds[] = $from . '.' . $c . ' = ' . $join . '.' . $c;
+            }
+            $cond = implode(' AND ', $conds);
+        }
 
         return $this-&gt;_join($type, $name, $cond, $cols, $schema);
     }
</code></pre>

<p>Sample code output <em>after</em> applying above patch::</p>

<pre class="highlight"><code>
// Outputs:
//  SELECT `table_A`.*, `tableB`.* FROM `table_A` INNER JOIN `tableB` ON `tableB`.col_one = `table_A`.col_one AND `tableB`.col_two = `table_A`.col_two
</code></pre>

<p>It would be better if the generated SQL was using <code>USING</code> though.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2008-12-29T05:41:26.000+0000</p> 
        <div class="body">
            <p>It isn't a bug but an improvement because joinUsing wasn't designed to function with an array.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Berstein (danielb) on 2008-12-29T06:43:43.000+0000</p> 
        <div class="body">
            <p>So may I ask what's the purpose of the joinUsing family of methods? I fail to see their usefulness.</p>

<p>Well then I would suggest to complete remove it, it serves no purpose:
a) It does not generate a USING clause (see [<a href="http://framework.zend.com/issues/browse/ZF-3792">http://framework.zend.com/issues/browse/ZF-3792</a>]).
b) It does not simplify code by mapping a column-list array into the proper AND'ed expressions (like what this issue is about).</p>

<p>I would then label this bug as a <em>design bug</em>, but a bug nevertheless.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2008-12-29T07:08:28.000+0000</p> 
        <div class="body">
            <p>I understand what you want, but this is the phpDoc associated to _joinUsing:</p>

<pre class="highlight"><code>
/**
 * Handle JOIN... USING... syntax
 *
 * This is functionality identical to the existing JOIN methods, however
 * the join condition can be passed as a single column name. This method
 * then completes the ON condition by using the same field for the FROM
 * table and the JOIN table.
 *
 * <code>
 * $select = $db-&gt;select()-&gt;from('table1')
 *                        -&gt;joinUsing('table2', 'column1');
 *
 * // SELECT * FROM table1 JOIN table2 ON table1.column1 = table2.column2
 * </code>
 *
 * These joins are called by the developer simply by adding 'Using' to the
 * method name. E.g.
 * * joinUsing
 * * joinInnerUsing
 * * joinFullUsing
 * * joinRightUsing
 * * joinLeftUsing
 *
 * @return Zend_Db_Select This Zend_Db_Select object.
 */
</code></pre>

<p>Perhaps, joinUsing isn't a good name for this function ;).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Berstein (danielb) on 2008-12-29T10:07:55.000+0000</p> 
        <div class="body">
            <p>Thanks for showing me the "fine print" ;)</p>

<p>How can I help to fix it? The patch in the issue (massaging parameter $cond)  at least gives some utility to the method(s) IMO. Don't you agree?</p>

<p>After further checking, the implementation of joinUsing() is broken in another way too: table aliases are not being respected!</p>

<pre class="highlight"><code>
$select-&gt;from(array('a' =&gt; 'table_a'))
       -&gt;joinUsing(array('b' =&gt; 'table_b'), 'col_X');
</code></pre>

<p>You would assume the generated SQL to be:</p>

<pre class="highlight"><code>
SELECT `a`.*, `b`.* FROM `table_a` AS `a` INNER JOIN `table_b` AS `b` ON `b`.col_X = `a`.col_X
</code></pre>

<p>But you would be wrong, the actual SQL generated is:</p>

<pre class="highlight"><code>
SELECT `a`.*, `b`.* FROM `table_a` AS `a` INNER JOIN `table_b` AS `b` ON `table_b`.col_X = `a`.col_X
</code></pre>

<p>Here is the less intrusive patch I could think of that solves this second problem:</p>

<pre class="highlight"><code>
Index: Zend/Db/Select.php
===================================================================
--- Zend/Db/Select.php  (revision 13471)
+++ Zend/Db/Select.php  (working copy)
@@ -826,6 +826,10 @@
     {
         if (is_array($name)) {
             $c = end($name);
+            // Respect table name aliases if present
+            if (!is_numeric(key($name))) {
+                $c = key($name);
+            }
         } else {
             // Extract just the last name of a qualified table name
             $dot = strrpos($name,'.');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Niels Lensink (nielslensink) on 2009-03-10T02:23:20.000+0000</p> 
        <div class="body">
            <p>The following join method in 1.7.5 still generates wrong SQL code</p>

<p>-&gt;joinUsing(array('b' =&gt; 'table_b'), 'col_X');</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sonntag (sunday) on 2010-07-09T08:09:25.000+0000</p> 
        <div class="body">
            <p>Any news here?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-08-20T17:46:14.000+0000</p> 
        <div class="body">
            <p>bq. Any news here?</p>

<p>Yes there are - fixed in trunk, see ZF-3309</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-10-17T01:28:06.000+0000</p> 
        <div class="body">
            <p>@[~danielb]
The table alias problem is being worked on in ZF-3309.  The currently-agreed-upon solution is very similar to what you have proposed.</p>

<p>However, the original issue reported in this ticket has not been resolved. @[~ralph]: Is this something we want to add in ZFv1 at this stage? ie:</p>

<pre class="highlight"><code>
$select-&gt;from('table_A')-&gt;joinUsing('tableB', array('col_one', 'col_two'));
// Outputs:
//  SELECT `table_A`.*, `tableB`.* FROM `table_A` INNER JOIN `tableB` ON `tableB`.col_one = `table_A`.col_one AND `tableB`.col_two = `table_A`.col_two
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-05T02:36:40.000+0000</p> 
        <div class="body">
            <p>This will be addressed in ZF2 Zend\Db</p>

        </div>
    </div>
    </div>

