<h2>ZF-186: Add method Zend_Db_Table::fetchCol()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-07-02T15:15:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.3 (05/May/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Darby Felton (darby)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There are some wrapper functions absent from Zend_Db_Table, namely fetchCol() and fetchOne().  For people extending Zend_Db_Table, they may want to provide public methods such as findNames(), which returns a list of all the values in the 'names' column of a table.  Currently, this function would look something like this:</p>

<pre class="highlight"><code>
$db = $this-&gt;getAdapter();
$select = $db-&gt;select();
$select-&gt;from($this-&gt;_name, 'name');
        
return $db-&gt;fetchCol($select);
</code></pre>

<p>People might find themselves writing this code multiple times over.  What would be better is if fetchCol() was defined in the abstract Zend_Db_Table.  Then, the findNames() function would be as simple as:</p>

<pre class="highlight"><code>
return $this-&gt;fetchCol('name');
</code></pre>

<p>My proposal is to provide fetchCol() and fetchOne in Zend_Db_Table.  The function takes a column and optional where clauses and order expressions, etc.  It constructs the select object and returns the return of the appropriate call to the table's Db_Adapter object.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gregory Szorc (indygreg) on 2006-07-02T16:31:34.000+0000</p> 
        <div class="body">
            <p>Here are some functions that I believe should be in Zend_Db_Table.  There is some code repetition, so they may not be optimal.</p>

<pre class="highlight"><code>
   /**
     * Fetches values from a column
     * 
     * @param string $col column name to fetch
     * @param string $where SQL composing optional WHERE clause
     * @param string $order SQL composing optional ORDER BY clause
     */
    public function fetchCol($col, $where = null, $order = null)
    {
        $db = $this-&gt;getAdapter();
        $select = $db-&gt;select();
        $select-&gt;from($this-&gt;_name, $col);
        
        if (!is_null($where)) {
            $select-&gt;where($where);
        }
        
        if (!is_null($order)) {
            $select-&gt;order($order);
        }
        
        return $db-&gt;fetchCol($select);
        
    }
    
    /**
     * Fetch the first row of the first column
     */
    public function fetchOne($col, $where = null, $order = null)
    {
        $db = $this-&gt;getAdapter();
        $select = $db-&gt;select();
        
        $select-&gt;from($this-&gt;_name, $col);
        
        if (!is_null($where)) {
            $select-&gt;where($where);
        }
        
        if (!is_null($order)) {
            $select-&gt;order($order);
        }
        
        return $db-&gt;fetchOne($select);
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:15:30.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-05T17:06:25.000+0000</p> 
        <div class="body">
            <p>Recategorize as Zend_Db_Table component.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-15T19:48:00.000+0000</p> 
        <div class="body">
            <p>Change summary, format description.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-04-10T16:29:25.000+0000</p> 
        <div class="body">
            <p>Assigning to Darby.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-04-20T16:53:41.000+0000</p> 
        <div class="body">
            <p>We're going to close this issue as "won't fix".</p>

<p>The reason is that fetch and find methods in Zend_Db_Table should all return objects of type Zend_Db_Table_Row or Zend_Db_Table_Rowset.  Adding methods that return array primitives does not fit this pattern.</p>

<p>It's also unnecessary to provide these methods, because they are just proxies to the existing methods in the Zend_Db_Adapter class.  It's easy to get access to the Adapter class from the table:</p>

<pre class="highlight"><code>
$table = new MyTable();
$result = $table-&gt;getAdapter()-&gt;fetchCol(...);
</code></pre>

<p>If this is absolutely needed in your environment, you can add the methods in your Table subclasses.  Or else create a single abstract subclass and then derive your individual tables from the custom abstract class.</p>

        </div>
    </div>
    </div>

