<h2>ZF-5842: When cloning subforms, reset elementsBelongTo value</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2009-02-19T08:50:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When cloning sub forms, output can be problematic if the original sub form has already been rendered. In such a case, if the cloned sub form has been assigned a different name, the original elementsBelongTo value will persist and be used during output. As an example:</p>

<pre class="highlight"><code>
$subForm-&gt;setName('foo');
$subForm-&gt;render();

$clone = clone $subForm;
$clone-&gt;setName('bar');
echo $clone-&gt;render();
</code></pre>

<p>When the $clone is rendered, its items will still be subscripts of 'foo', not 'bar'.</p>

<p>The solution is to modify setName() slightly to detect such a situation:</p>

<pre class="highlight"><code>
    public function setName($name)
    {   
        $updateElementsBelongTo = false;
        if ($this-&gt;getElementsBelongTo() == $this-&gt;getName()) {
            $updateElementsBelongTo = true;
        }

        $name = $this-&gt;filterName($name);
        if (('0' !== $name) &amp;&amp; empty($name)) {
            require_once 'Zend/Form/Exception.php';
            throw new Zend_Form_Exception('Invalid name provided; must contain o
        }

        $this-&gt;setAttrib('name', $name);

        if ($updateElementsBelongTo) {
            $this-&gt;setElementsBelongTo($name);
        }
        return $this;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

