<h2>ZF-11714: Zend_Config_Json windows path constant parse error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-09-01T19:08:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-03T14:10:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jonathan Fingland (j_fingland)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Using Zend_Application on Windows with constant path defines such as:</p>

<pre class="highlight"><code>
define('BASE_PATH', realpath(dirname(__FILE__) . '/../'));

// Define path to application directory
define('APPLICATION_PATH', BASE_PATH . '/application');
</code></pre>

<p>and using JSON config files, for example:</p>

<pre class="highlight"><code>
{
    "production":{
    "baseUrl": "http://<a href="www.example.com">www.example.com</a>",
        "phpSettings":{
            "display_startup_errors": false,
            "display_errors": false
        },
        "includePaths":{
            "library": "APPLICATION_PATH/../library",
            "models": "APPLICATION_PATH/models"
        },
...
}
</code></pre>

<p>will fail when you attempt to create the new Zend_Config_Json</p>

<pre class="highlight"><code>
$config = new Zend_Config_Json(APPLICATION_PATH . '/configs/config.json', APPLICATION_ENV, true);
</code></pre>

<p>What happens is Zend_Config_Json replaces the constants (unless told to ignore), which on windows will result in lines like:</p>

<pre class="highlight"><code>
            "library": "C:\path\to\www/../library",
</code></pre>

<p>which then fails to parse as valid JSON due to the backslashes not being escaped.</p>

<p>Possible solution is use of addslashes() when replacing constants with their values. e.g.</p>

<pre class="highlight"><code>
    protected function _replaceConstants($value)
    {
        foreach ($this-&gt;_getConstants() as $constant) {
            if (strstr($value, $constant)) {
                $value = str_replace($constant, constant($constant), $value);
            }
        }
        return $value;
    }
</code></pre>

<p>is changed to:</p>

<pre class="highlight"><code>
    protected function _replaceConstants($value)
    {
        foreach ($this-&gt;_getConstants() as $constant) {
            if (strstr($value, $constant)) {
                $value = str_replace($constant, addslashes(constant($constant)), $value);
            }
        }
        return $value;
    }
</code></pre>

<p>This solution is somewhat less than optimal as it may be unexpected behaviour when a constant includes an intended newline.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-03-05T23:01:40.000+0000</p> 
        <div class="body">
            <p>Is this an issue which should be fixed for ZF v1.12?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-03T14:10:28.000+0000</p> 
        <div class="body">
            <p>I don't know enough about Zend_Config_Json.</p>

        </div>
    </div>
    </div>

