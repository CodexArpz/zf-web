<h2>ZF-3424: Zend_Log returns &quot;Fatal error: Call to a member function shutdown() on a non-object in .../Zend/Log.php on line 87&quot;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-09T15:04:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-21T15:36:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Victor Shih (vshih)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Wil Sinclair (wil)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <h2>I am run the following code with PHPUnit:</h2>

<p>&lt;?php
set_include_path(get_include_path() . PATH_SEPARATOR . '/path/to/Zend...');</p>

<p>ini_set('display_errors', 'on');</p>

<p>require 'Zend/Loader.php';
Zend_Loader::loadClass('Zend_Log_Writer_Stream');
Zend_Loader::loadClass('Zend_Log');
$writer = new Zend_Log_Writer_Stream('<a>php://output</a>');
$logger = new Zend_Log($writer);
//$writer = null; // uncomment for work-around</p>

<p>class tst extends PHPUnit_Framework_TestCase {
    public function test1() { }
}</p>

<hr /><p>which causes</p>

<p>Fatal error: Call to a member function shutdown() on a non-object in .../Zend/Log.php on line 87</p>

<p>Uncommenting the comment line seems to circumvent this error.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-21T15:27:23.000+0000</p> 
        <div class="body">
            <p>This is a side-effect of PHPUnit backing up the globals before tests and restoring them afterwards. Basically, it is copying the Zend_Log instance, and the destructor for this instance isn't working correctly because the writer either wasn't set in the first place or the destruction order for this serialized and deserialized object is not the same as the first, normally instantiated instance.
I'm resolving this as 'not an issue' because the method to trigger this error is a not recommended unit testing best practice for ZF. If you would like to avoid this error, then you can set the $backupGlobals attribute to false in your subclass. This must be done during static class definition time; setting it in the setup() method won't work!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-21T15:36:46.000+0000</p> 
        <div class="body">
            <p>This test code seems to work on PHPUnit 3.3.10. Upgrading PHPUnit seems to be another solution.</p>

        </div>
    </div>
    </div>

