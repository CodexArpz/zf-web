<h2>ZF-3165: Zend_Date/Zend_TimeSync: Undefined index: offset</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-04-23T04:33:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:38:58.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christoph Ziegenberg (ziegenberg)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_TimeSync</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I used the timeserver "ntp://ntps1-1.rz.uni-osnabrueck.de" for some tests and it worked fine, but today I got the following error:
Notice: Undefined index: offset in [...]Zend\Date.php on line 273</p>

<p>The result is a valid instance of the Zend_TimeSync_Protocol, but the getInfo() method returns an empty array.</p>

<p>The code:
...
$serverlist = array(
    '<a>ntp://ntps1-1.rz.uni-osnabrueck.de</a>',
    '<a>ntp://swisstime.ethz.ch</a>',
 );</p>

<p>$server = new Zend_TimeSync($serverlist);
$servers = $server-&gt;getIterator();</p>

<p>Zend_Date::setOptions(array('timesync' =&gt; $servers[0]));
...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-23T05:15:00.000+0000</p> 
        <div class="body">
            <p>Are you sure the timeserver works ?
Can you dump us the $server object ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Ziegenberg (ziegenberg) on 2008-04-23T06:40:43.000+0000</p> 
        <div class="body">
            <p>I don't think that the servers are valid (at the moment), but that's not the problem.</p>

<p>I passed a valid instance of the Zend_TimeSync_Protocol (althougth the server isn't valid), and Zend_Date expects that an array key  exists which does not exist - so this should be checked and throw an exception. I know the posted code isn't a good way (got it from an tutorial) - if I use the getServer() method I can check if there is a valid server or not.</p>

<p>Here's the $server object:</p>

<p>object(Zend_TimeSync)#319 (3) {
  ["_timeservers:protected"]=&gt;
  array(2) {
    [0]=&gt;
    object(Zend_TimeSync_Ntp)#312 (5) {
      ["_port:protected"]=&gt;
      int(123)
      ["_socket:protected"]=&gt;
      NULL
      ["_exceptions:protected"]=&gt;
      NULL
      ["_timeserver:protected"]=&gt;
      string(34) "udp://ntps1-1.rz.uni-osnabrueck.de"
      ["_info:protected"]=&gt;
      array(0) {
      }
    }
    [1]=&gt;
    object(Zend_TimeSync_Ntp)#311 (5) {
      ["_port:protected"]=&gt;
      int(123)
      ["_socket:protected"]=&gt;
      NULL
      ["_exceptions:protected"]=&gt;
      NULL
      ["_timeserver:protected"]=&gt;
      string(23) "udp://swisstime.ethz.ch"
      ["_info:protected"]=&gt;
      array(0) {
      }
    }
  }
  ["_current:protected"]=&gt;
  NULL
  ["_allowedSchemes:protected"]=&gt;
  array(2) {
    [0]=&gt;
    string(3) "Ntp"
    [1]=&gt;
    string(4) "Sntp"
  }
}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-23T07:44:23.000+0000</p> 
        <div class="body">
            <p>No, the thing is that Zend_TimeSync should throw an exception when no time can be evaluated, and not Zend_Date.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-23T07:57:24.000+0000</p> 
        <div class="body">
            <p>Where does the code you used come from ???</p>

<p>It can not have worked in my opinion.
When you look at the manual you will see where the problem is.</p>

<p>See this code from the manual:</p>

<pre class="highlight"><code>
&lt;?php
    require_once 'Zend/TimeSync.php';
    $server = new Zend_TimeSync('0.pool.ntp.org');
    print $server-&gt;getDate()-&gt;getIso();
</code></pre>

<p>]</p>

<p>Zend_Timesync returns you a Zend_Date object and not reverse.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Ziegenberg (ziegenberg) on 2008-04-23T09:55:04.000+0000</p> 
        <div class="body">
            <p>Zend_Date does not return a Zend_Timesync object, but uses it as an option for all instances of Zend_Date to correct times (Zend_Date_DateObject::$_defaultOffset).</p>

<p>{quote}Normally the clocks from servers and computers differ from each other. Zend_Date  is able to handle such problems with the help of Zend_TimeSync. You can set a timeserver with Zend_Date::setOptions(array('timesync' =&gt; $timeserver)); which will set the offset between the own actual timestamp and the real actual timestamp for all instances of Zend_Date. Using this option does not change the timestamp of existing instances. So best usage is to set it within the bootstrap file.{quote}</p>

<p>See here: <a href="http://framework.zend.com/manual/en/zend.date.overview.html#zend.date.options.timesync">http://framework.zend.com/manual/en/â€¦</a></p>

<p>(PS: Dunno where the code was from)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-23T12:53:15.000+0000</p> 
        <div class="body">
            <p>To get your code working you should simply call getDate after assigning the wished timeserver.</p>

<p>Beside, your code is wrong in another point.</p>

<p>You create a timesync object with 2 servers for redundancy.
But then you assign only one server to Zend_Date which results in problems when exact this server can not be reached.</p>

<p>Assign the Zend_TimeSync object to Zend_Date.
getIterator makes no sense in this point... the code is wrong.</p>

<p>Also before attaching it to Zend_Date you have to receive the timesync which means that you call getDate and then assign it to Zend_Date.</p>

<p>This way your code will work.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Ziegenberg (ziegenberg) on 2008-04-24T02:29:30.000+0000</p> 
        <div class="body">
            <p>{quote}But then you assign only one server to Zend_Date which results in problems when exact this server can not be reached.{quote}
That's right. If a valid server ist found, the code works.</p>

<p>{quote}Assign the Zend_TimeSync object to Zend_Date.{quote}
Ever tried this? Then you'll get an exception with the message "Instance of Zend_TimeSync expected" - although it's checked for an instance of "Zend_TimeSync_Protocol" (and "Zend_TimeSync" isn't). So there is definitely an error in the code.</p>

<p>{quote}getIterator makes no sense in this point... the code is wrong.{quote}
That's right, as I already mentioned before this is not a good solution, but it's a fact that an valid instance of an object is given and that the Zend_Date class expects that there is a variable which does not exist and which is not checked.</p>

<p>{quote}Also before attaching it to Zend_Date you have to receive the timesync which means that you call getDate and then assign it to Zend_Date.{quote}
Sounds strange and unhandy. If that is right, it should be mentioned in the manual - or done automatically by Zend_date::setOption().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Ziegenberg (ziegenberg) on 2008-04-24T02:55:20.000+0000</p> 
        <div class="body">
            <p>It's really neccessary, that the method getDate() ist called, so that's the final soulution, which is not documented:</p>

<pre class="highlight"><code>
...
            $serverlist = array(
                '<a>ntp://0.de.pool.ntp.org</a>',
                '<a>ntp://1.de.pool.ntp.org</a>',
                '<a>ntp://2.de.pool.ntp.org</a>',
                '<a>ntp://3.de.pool.ntp.org</a>',
                '<a>ntp://4.de.pool.ntp.org</a>',
            ); 
            $server = new Zend_TimeSync($serverlist);
            $server-&gt;getDate(); // sets the valid server
            
            $selected_server = $server-&gt;getServer(); //throws an exception if no valid server found
            
            Zend_Date::setOptions(array('timesync' =&gt; $selected_server));
...
</code></pre>

<p>But there are still errors in Zend_Date:
- a wrong instance check (or a wrong error message)
- a missing check for the array key "offset"</p>

<p>Here's my fix, which allows to use an instance of "Zend_TimeSync" or "Zend_TimeSync_Protocol", with a corrected exception message, and with a check for the missing key:</p>

<pre class="highlight"><code>
...
                    case 'timesync' :
                        if ($value instanceof Zend_TimeSync) {
                            try {
                                $value = $value-&gt;getServer();
                            }
                            catch (Zend_TimeSync_Exception $e) {
                                $value-&gt;getDate();
                                $value = $value-&gt;getServer();
                            }
                        }
                        if (!$value instanceof Zend_TimeSync_Protocol) {
                            require_once 'Zend/Date/Exception.php';
                            throw new Zend_Date_Exception("Instance of Zend_TimeSync_Protocol expected");
                        }
                        $date = $value-&gt;getInfo();
                        if (isset($date['offset']))
                        {
                            parent::$_defaultOffset = $date['offset'];
                        }
                        break;
...
</code></pre>

<p>This allowes the following use:</p>

<pre class="highlight"><code>
...
            $serverlist = array(
                '<a>ntp://0.de.pool.ntp.org</a>',
                '<a>ntp://1.de.pool.ntp.org</a>',
                '<a>ntp://2.de.pool.ntp.org</a>',
                '<a>ntp://3.de.pool.ntp.org</a>',
                '<a>ntp://4.de.pool.ntp.org</a>',
            ); 
            $server = new Zend_TimeSync($serverlist);
            $server-&gt;getDate(); // sets the valid server
            
            Zend_Date::setOptions(array('timesync' =&gt; $server));
...
</code></pre>

<p>or just</p>

<pre class="highlight"><code>
...
            $serverlist = array(
                '<a>ntp://0.de.pool.ntp.org</a>',
                '<a>ntp://1.de.pool.ntp.org</a>',
                '<a>ntp://2.de.pool.ntp.org</a>',
                '<a>ntp://3.de.pool.ntp.org</a>',
                '<a>ntp://4.de.pool.ntp.org</a>',
            ); 
            $server = new Zend_TimeSync($serverlist);

            Zend_Date::setOptions(array('timesync' =&gt; $server));
...
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-24T03:11:50.000+0000</p> 
        <div class="body">
            <p>I havn't had said that we will not fix it... I only showed you a solution to your problem beside this error.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Ziegenberg (ziegenberg) on 2008-04-24T03:19:02.000+0000</p> 
        <div class="body">
            <p>Okay ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-05-15T11:05:19.000+0000</p> 
        <div class="body">
            <p>Fixed with r9460</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:38:58.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

