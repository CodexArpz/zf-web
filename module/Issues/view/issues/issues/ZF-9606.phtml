<h2>ZF-9606: lucene doesnt work on 32bit systems</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-03T16:03:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-30T17:39:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Heid (michaelheid)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
            <li>state:patch-ready-for-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-11890">ZF-11890</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13184/9606.patch">9606.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>it is maybe related to the change on ZF-4071</p>

<p>Errors:</p>

<p>Notice: Hex number is too big: 0x100000000 in /Zend/Search/Lucene/Storage/File.php on line 269</p>

<p>Notice: Hex number is too big: 0x100000000 in /Zend/Search/Lucene/Storage/File.php on line 290</p>

<p>Notice: Hex number is too big: 0x100000000 in /Zend/Search/Lucene/Storage/File.php on line 291</p>

<p>works for me on win32bit, linux64bit and win64bit but not on linux 32bit.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Brian Wigginton (bawigga) on 2010-04-26T08:38:05.000+0000</p> 
        <div class="body">
            <p>I have the same errors using Zend Lucene in a 32bit Linux Environment. However the index still seems to be able to return results.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dan (aussiedan) on 2010-07-02T07:00:48.000+0000</p> 
        <div class="body">
            <p>Replacing (float)0x100000000 with (float)0x10000000*(float)0x10 appears to resolve the issue:</p>

<p>64-bit:</p>

<p>$ php -d display_errors=on -d error_reporting=30719 -r '$x = (float)0x100000000;var_dump($x);'
float(4294967296)</p>

<p>$ php -d display_errors=on -d error_reporting=30719 -r '$x = (float)0x10000000*(float)0x10;var_dump($x);'
float(4294967296)</p>

<p>32-bit:</p>

<h1>php -d display_errors=on -d error_reporting=30719 -r '$x = (float)0x100000000;var_dump($x);'</h1>

<p>Notice: Hex number is too big: 0x100000000 in Command line code on line 1
float(2147483647)</p>

<h1>php -d display_errors=on -d error_reporting=30719 -r '$x = (float)0x10000000*(float)0x10;var_dump($x);'</h1>

<p>float(4294967296)</p>

<p>I'm not sure whether fixing the problem has any implications for indexes created on 32-bit platforms using the old code.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dan (aussiedan) on 2010-07-02T07:08:17.000+0000</p> 
        <div class="body">
            <p>patch implementing the fix described above</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin (kevin.p) on 2011-03-31T09:24:16.000+0000</p> 
        <div class="body">
            <p>Still existing in 1.11.4.</p>

<p>One year with a working patch that only needs to be applied .... why does nobody incorporate these changes into the ZF trunk?</p>

        </div>
    </div>
    </div>

