<h2>ZF-11421: CLONE - Fatal error: Class 'Zend_CodeGenerator_Php_Docblock_Tag' not found</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-05-31T12:27:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-31T16:34:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.7 (02/Jun/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chris Buckley (cbuckley)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_CodeGenerator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8739">ZF-8739</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>
set_include_path('/path/to/library'); // current trunk
require_once "Zend/CodeGenerator/Php/Docblock/Tag.php";
$foo = new Zend_CodeGenerator_Php_Docblock_Tag();
</code></pre>

<p>Fatal error: Class 'Zend_CodeGenerator_Php_Docblock_Tag' not found in /path/to/library/Zend/CodeGenerator/Php/Docblock/Tag/Param.php on line 34</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Chris Buckley (cbuckley) on 2011-05-31T12:28:21.000+0000</p> 
        <div class="body">
            <p>Clone of ZF-8739 as the issue has remained closed for a while now.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-05-31T15:39:15.000+0000</p> 
        <div class="body">
            <p>I was able to reproduce this in trunk by running this command:</p>

<pre class="highlight"><code>
[adam@zfdev trunk]$ php -r "set_include_path('/path/to/zf/library'); require_once 'Zend/CodeGenerator/Php/Docblock/Tag.php';"
</code></pre>

<p>Results in fatal error:</p>

<pre class="highlight"><code>
PHP Fatal error:  Class 'Zend_CodeGenerator_Php_Docblock_Tag' not found in /usr/local/apache2/htdocs/lib/zfdev/trunk/library/Zend/CodeGenerator/Php/Docblock/Tag/Param.php on line 35
PHP Stack trace:
PHP   1. {main}() Command line code:0
PHP   2. require_once() Command line code:1
PHP   3. require_once() /usr/local/apache2/htdocs/lib/zfdev/trunk/library/Zend/CodeGenerator/Php/Docblock/Tag.php:31
</code></pre>

<p>Zend/CodeGenerator/Php/Docblock/Tag.php require_once's Zend/CodeGenerator/Php/Docblock/Tag/Param.php, which in turn require_once's Zend/CodeGenerator/Php/Docblock/Tag.php.  That second require_once of Zend/CodeGenerator/Php/Docblock/Tag.php isn't performed since the file is already included, but because it hasn't been fully processed by PHP yet the class Zend_CodeGenerator_Php_Docblock_Tag doesn't exist, so PHP throws a fatal error when trying to define class Zend_CodeGenerator_Php_Docblock_Tag_Param.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Buckley (cbuckley) on 2011-05-31T15:53:34.000+0000</p> 
        <div class="body">
            <p>Fix suggested in original bug (ZF-8739) is to remove</p>

<pre class="highlight"><code>
require_once 'Zend/CodeGenerator/Php/Docblock/Tag/Param.php';
...
require_once 'Zend/CodeGenerator/Php/Docblock/Tag/Return.php';
</code></pre>

<p>from Zend_CodeGenerator_Php_Docblock_Tag.</p>

<p>Workaround is to manually require abstract class to modify include order:</p>

<pre class="highlight"><code>
set_include_path("/path/to/library");
require_once "Zend/CodeGenerator/Php/Abstract.php";
require_once "Zend/CodeGenerator/Php/Docblock/Tag.php"; // works
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-05-31T16:02:37.000+0000</p> 
        <div class="body">
            <p>The question is why are _Param and _Return require_once'd into Zend/CodeGenerator/Php/Docblock/Tag.php?</p>

<pre class="highlight"><code>
/**
 * @see Zend_CodeGenerator_Php_Docblock_Tag_Param
 */
require_once 'Zend/CodeGenerator/Php/Docblock/Tag/Param.php';

/**
 * @see Zend_CodeGenerator_Php_Docblock_Tag_Return
 */
require_once 'Zend/CodeGenerator/Php/Docblock/Tag/Return.php';
</code></pre>

<p>Those classes are not directly referenced anywhere in the code of the class.  If I remove those require_once statements, the errors go away:</p>

<pre class="highlight"><code>
[adam@zfdev trunk]$ phpsh
php&gt; set_include_path('/home/webadmin/htdocs/lib/zfdev/trunk/library');
php&gt; require_once 'Zend/CodeGenerator/Php/Docblock/Tag.php';
php&gt; $o = new Zend_CodeGenerator_Php_Docblock_Tag();
php&gt; var_dump(get_class($o));
string(35) "Zend_CodeGenerator_Php_Docblock_Tag"
</code></pre>

<p>And the unit test suite results are unchanged.</p>

<p>Is there any practical reason why those seemingly-unnecessary require_once statements can't be removed?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Buckley (cbuckley) on 2011-05-31T16:09:58.000+0000</p> 
        <div class="body">
            <p>See <a href="http://framework.zend.com/issues/browse/ZF-8739?focusedCommentId=46925&amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-46925">my comment</a> on the original bug; they were left over from before the class used the plugin loader for the factory.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-05-31T16:29:31.000+0000</p> 
        <div class="body">
            <p>That explanation works for me.  I've updated the file in trunk to remove the require_once statements.</p>

<p>Fixed in trunk r24098
Merged to release-1.11 in r24099</p>

        </div>
    </div>
    </div>

