<h2>ZF-11337: Zend_Cache_Frontend_Class::__call shoud throw an Exception on invalid method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-05-01T12:51:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-10T21:09:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.7 (02/Jun/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sergio Vaccaro (hujuice)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When the __call function is called, a call_user_func_array function is invoked, wrapped in a try/catch.
But the call_user_func_array function returns a warning (not an exception) with an non-existent method name, blocking a good tracing.</p>

<p>I think that the line 223 (1.11.5) should be out of the try/catch and provide an exception itself in case of errors.</p>

<pre class="highlight"><code>
if (!$return = call_user_func_array(array($this-&gt;_cachedEntity, $name), $parameters))
   throw new Exception ('Unable to call ' . $name . ' bla bla bla');
</code></pre>

<p>Regards,
Sergio</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2011-05-03T21:26:52.000+0000</p> 
        <div class="body">
            <p>We don't know what the return value of the called function/method should be. A value of FALSE can be valid, too!
If you call the method without the class cache you are going in the same error.
-&gt; The class cache is only for caching method results and not for adding features or changing functionalities.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sergio Vaccaro (hujuice) on 2011-05-08T09:11:12.000+0000</p> 
        <div class="body">
            <p>What I meant is a bit different. The problem is to find a wrong call.
An example could be the clearest explanation.</p>

<p>I have a class, successfully cached.
After a while, I delete a method or change its name. Or maybe some coder mistyped the method name.
How to find that wrong call?
(Ok, there are many solutions).</p>

<p>When a wrong chunk of code calls the cached class, I have an error message generated by 'call_user_function' in Zend_Cache_Frontend_Class, but this way I'm not able to find where the wrong calling code is.</p>

<pre class="highlight"><code>
$obj = new cachedClass();
$obj-&gt;deletedOrMistypedMethod();
</code></pre>

<pre class="highlight"><code>
Warning: call_user_func_array() expects parameter 1 to be a valid callback, class 'cachedClass'
does not have a method 'deletedOrMistypedMethod' in
/path/to/lib/ZendFramework-1.11.6/library/Zend/Cache/Frontend/Class.php on line 223
</code></pre>

<p>This is not so helpful.</p>

<p>If I skip caching, this kind of error is a fatal error with a file/number reference:</p>

<pre class="highlight"><code>
$obj = new NONcachedClass();
$obj-&gt;deletedOrMistypedMethod();
Fatal error: Call to undefined method NONcachedClass::deletedOrMistypedMethod() in
/path/to/file/containing/the/wrong/code.php on line nn
</code></pre>

<p>This is why I thought to an exception.</p>

<p>Best regards,
Sergio</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2011-05-09T21:53:52.000+0000</p> 
        <div class="body">
            <p>I'll add an is_callable check and throw an exception like Zend_Cache_Frontend_Function</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sergio Vaccaro (hujuice) on 2011-05-10T14:12:28.000+0000</p> 
        <div class="body">
            <p>IMO, it would be an improvement.
Sergio</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2011-05-10T21:09:39.000+0000</p> 
        <div class="body">
            <p>implemented in r24031 (trunk) &amp; r24032 (1.11 branch)</p>

        </div>
    </div>
    </div>

