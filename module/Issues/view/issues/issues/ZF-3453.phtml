<h2>ZF-3453: Zend_Db_Statement_Mysqli::_execute() binds every parameter as type &quot;s&quot;, causing bit type mysql columns (and others?)  to fail with &quot;Data too long&quot; error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-12T21:18:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-03-13T20:55:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Mini Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Diego Sainz (disago)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11688/ZF-3453.patch">ZF-3453.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When Zend_Db_Statement_Mysqli::_execute() prepares parameters types to bind before executing it does the next :</p>

<pre class="highlight"><code>
            array_unshift($params, str_repeat('s', count($params)));
</code></pre>

<p>And when a bit type column value is passed to the statement (for example by Zend_Db_Table_Abstract:insert(), the query will fail with "Data too long for column X".</p>

<p>Proposed solution:</p>

<p>There should be some basic parameter type checking, something like:</p>

<pre class="highlight"><code>
            $types='';
            $numParams=count($params);
            for($n=0;$n&lt;$numParams;$n++) {
                if (is_numeric($params[$n])) {
                    if (is_double($params[$n])) {
                        $types.='d';            
                    }   
                    else {
                        $types.='i';
                    }
                } 
                else {
                    $types.='s';
                }
            }
            array_unshift($params, $types);
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mark Evans (sparky) on 2008-12-20T05:19:18.000+0000</p> 
        <div class="body">
            <p>Added a patch to correctly identify the parameter types</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Diego Sainz (disago) on 2009-03-19T19:46:39.000+0000</p> 
        <div class="body">
            <p>As of ZF 1.7.7 this issue remains unsolved (and the patch is already attached).</p>

<p>The 'nice to have' status sounds inadequate to me because this bug disables the use of Zend_Db_Statement in mysql if bit columns are being used.</p>

<p>Any comments?</p>

<p>Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Anthon Pang, VIP Software Technologies Inc. (vipsoft) on 2011-01-12T09:32:16.000+0000</p> 
        <div class="body">
            <p>This is still outstanding in 1.11.2, and is inconsistent because it doesn't occur when using Zend_Db_Adapter_Pdo_Mysql.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Constantine Karnacevych (digital) on 2011-01-12T09:38:59.000+0000</p> 
        <div class="body">
            <p>the bug is for Mysqli, not Mysql</p>

        </div>
    </div>
    </div>

