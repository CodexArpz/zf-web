<h2>ZF-5343: allow to define help text for remaining arguments</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-12-23T08:54:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Remy Damour (remy215)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Console_Getopt</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently it looks like we cannot set help text for non-option arguments.</p>

<p>For example let's say my script allow one option  (--opt1|o) and one mandatory argument ('filename') so that usage is:
Usage: myscript.php [ options ] <em>filename</em>
--opt1|o    opt1 gets activated</p>

<p>'filename' is not an option but an argument, without it the script is stopped.
It would be great to be able to add argument names that would be displayed when calling -&gt;getUsageMessage();</p>

<p>Regards,
Remy Damour</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by David O. (dordal) on 2009-05-15T12:42:04.000+0000</p> 
        <div class="body">
            <p>I want to second this request. It would also be great to get some way to get those non-option arguments into the usage summary</p>

<p>Right now, usage in the above example would look like:</p>

<p>Usage: myscript.php [ options ]
--opt1|o opt1 gets activated</p>

<p>It would be nice to be able to do:</p>

<p>Usage: myscript.php [ options ] filename
--opt1|o opt1 gets activated</p>

<p>or at least:</p>

<p>Usage: myscript.php [ options ]
--opt1|o opt1 gets activated
filename  path to the file to work on</p>

<p>Thx</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gilles Bouthenot (megar) on 2009-07-26T01:22:23.000+0000</p> 
        <div class="body">
            <p>I was looking for this feature is the source. Currently the better way to display the usage message is to extend Zend_Console_Getopt and rewrite the usage message.</p>

<p>I would also request for a way to order these additional arguments:</p>

<p>usage: phpname.php action [ options ]
instead of:
usage: phpname.php [ options ] action</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gilles Bouthenot (megar) on 2009-08-17T00:53:45.000+0000</p> 
        <div class="body">
            <p>One very simple solution would be to split getUsageMessage like that:</p>

<p><code>
public function getUsageMessage()
{
        $usage = "Usage: {$this-&gt;_progname} [ options ]\n";
        $usage .= $this-&gt;getOptionsMessage()
}</code></p>

<p>/**
 * returns program name
 * @return string
 */
public function getProgname()
{
        return $this-&gt;_progname;
}
</p>

<p>and new method getOptionsMessage, exactly like the current getUsagerMessage() minus the "usage" line.
This would allow a simple way to display a custom usage message, including actions and additional mandatory argument.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-17T08:05:04.000+0000</p> 
        <div class="body">
            <p>Remy-</p>

<p>On its own, Zend_Console_GetOpt doesnt support arguments right?  The only way we've managed to support argument is by adding an option to stop processing:</p>

<pre class="highlight"><code>
   $getopt = new Zend_Console_GetOpt(..., ..., array('parseAll' =&gt; false))
</code></pre>

<p>That will force the getopt to stop on non-options.</p>

<p>Gilles-</p>

<p>See above on the argument point.</p>

<p>Also, I think its worth noting that usage messaging should probably be part of the application itself than the option parsing component.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:21.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

