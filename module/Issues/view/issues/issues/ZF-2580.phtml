<h2>ZF-2580: Provide easy access to schema and table name for insertion into SQL query strings</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-02-05T20:01:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-06T10:53:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There should be an easy method for retrieving the schema and table name from a Zend_Db_Table instance. It should be a string, properly formatted with quotes, for quick insertion into Zend_Db_Select and raw SQL queries. I was thinking this method might be called getSchemaName() â€” unless someone can think of something more concise?</p>

<p>Zend_Db_Table_Abstract::__toString() should proxy this method to make things even more fluent.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Nathan Wright (natew) on 2008-02-05T22:35:24.000+0000</p> 
        <div class="body">
            <p>I've come up with a solution which works in both these scenarios:
* $query = "SELECT * FROM $table"
* $select-&gt;from($table)</p>

<pre class="highlight"><code>
/**
 * Get a quoted SQL expression which references this table by name &amp; schema.
 *
 * @return Zend_Db_Expr
 */
public function getSchemaName()
{
    if ($this-&gt;_schema !== null) {
        $ref = array($this-&gt;_schema, $this-&gt;_name);
    } else {
        $ref = $this-&gt;_name; 
    }
    
    return new Zend_Db_Expr($this-&gt;getAdapter()-&gt;quoteIdentifier($ref));
}

/**
 * Get a quoted SQL expression which references this table by name &amp; schema.
 *
 * @return string
 */
public function __toString()
{
    return $this-&gt;getSchemaName()-&gt;__toString();
}</code></pre>

<p>Zend_Db_Select::_join() needs a slight modification to properly support this.</p>

<pre class="highlight"><code>
--- Select.php  (revision 7796)
+++ Select.php  (working copy)
@@ -341,6 +341,9 @@
             throw new Zend_Db_Select_Exception("Invalid join type '$type'");
         }
 
+        if ($name instanceof Zend_Db_Table_Abstract) {
+               $name = $name-&gt;getSchemaName();
+        }
         if (empty($name)) {
             $correlationName = $tableName = '';
         } else if (is_array($name)) {
</code></pre>

<p>I plan on testing this further, but is there any other use cases that should be accounted for?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:51.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-06T10:51:11.000+0000</p> 
        <div class="body">
            <p>No action on this issue for too long. I'm reassigning to Ralph for re-evaluation and categorization.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:09:55.000+0000</p> 
        <div class="body">
            <p>Will evaluate within 2 weeks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-06T10:53:20.000+0000</p> 
        <div class="body">
            <p>Whats wrong with using $table-&gt;info('schema')?  I dont think we'd want to support the automatic quoting of schema on return since we cannot infer that it will always be used for injecting into a select statement.  I am gonna close as wont fix.  Please reopen if you'd like and we can reevaluate.</p>

<p>-ralph</p>

        </div>
    </div>
    </div>

