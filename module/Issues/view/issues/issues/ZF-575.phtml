<h2>ZF-575: cumulative recipient when mail generate with a foreach structure.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2006-11-21T04:12:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Simon Mundy (peptolab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>First of all, excuse my poor english level :(</p>

<p>An exemple for explain the issue.
In the code bellow, i espect to have 4 emails. Each one whith 1 recipient.
In fact i receved 4 emails with cumulative recipient.</p>

<p>mail 1 :  To: first@somewhere.net
mail 2 :  To: first@somewhere.net, second@somewhere.net
mail 3 :  To: first@somewhere.net, second@somewhere.net, first@anotherone.net
mail 4 :  To: first@somewhere.net, second@somewhere.net, first@anotherone.net, second@anotherone.net</p>

<hr /><pre class="highlight"><code>
...
$this-&gt;emailList['first@somewhere.net']   = new stdClass();
$this-&gt;emailList['second@somewhere.net']  = new stdClass();
$this-&gt;emailList['first@anotherone.net']  = new stdClass();
$this-&gt;emailList['second@anotherone.net'] = new stdClass();

...

foreach ( $this-&gt;emailList as $toEmail =&gt; $el) {
  $mail = new Zend_Mail('UTF-8');
  
  $mail-&gt;setBodyHtml($this-&gt;generateHtmlBody($el));
  
  $mail-&gt;addTo($toEmail,$toEmail);
  $mail-&gt;setSubject('test mail');
  
  $mail-&gt;send();
  unset($mail);
}

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-28T17:50:43.000+0000</p> 
        <div class="body">
            <p>Assigning to Matthew, scheduling for 0.7.0 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2007-02-03T09:40:28.000+0000</p> 
        <div class="body">
            <p>The code snippet supplied is, in fact, working as intended. For each loop iteration you are calling addTo, which is exactly what the Zend_Mail object is doing and therefore you end up with cumulative recipients.</p>

<p>I suggest that this is really more of a feature request, as the behaviour you are expecting is more likely to be resolved with a 'setTo()' method.</p>

<p>To this end, could I also suggest the following to assist with better control over the behaviour of Zend_Mail:-</p>

<ul><li>setTo() - clears current 'To' headers before adding recipient</li>
<li>hasHeader($id) - returns boolean for existence of a header name (will be called from setTo())</li>
<li>removeHeader() - removes header from mail object (will be called from setTo())</li>
</ul><p>I believe the hasHeader and removeHeader deserve to be public methods to complement the addHeader method.</p>

<p>If there's no strong objection we can hopefully add these shortly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2007-02-03T09:48:45.000+0000</p> 
        <div class="body">
            <p>I just saw the 'unset($mail)' there so I guess you WERE expecting the mail to only have one address. This particular issue may have been resolved by ZF-608 - can you please verify?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jean-Claude GLOMBARD (jc.glombard) on 2007-02-16T03:07:50.000+0000</p> 
        <div class="body">
            <p>It's ok now...
Good job ;)</p>

        </div>
    </div>
    </div>

