<h2>ZF-11459: Zend_Db_Table_Row_Abstract - __set does check against _data not columns.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-06-09T11:39:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-12T01:09:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Mubble Jubble (mubble.jubble)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
            <li>__set</li>
            <li>createRow()</li>
            <li>malfunction</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Table_Row_Abstract - __set does check against _data not columns. If createRow() is used (as specified in documentation) with not parameters (e.g. data array) - when trying to set a _data value at a later stage using __set($columnName, $value) results in a 'Zend_Db_Table_Row_Exception: Specified column "XXX" is not in the row' exception.</p>

<p>e.g.</p>

<p>$obj = $table-&gt;createRow();</p>

<p>//exception - testValue is not in the row
$obj-&gt;testValue = "x"; //e.g. $obj-&gt;__set("testValue", "x");</p>

<p>I think the check should be against the column metadata, not the data array - as this might not be populated yet. This was mentioned in 2007 in a ticket about default values - although I dont think the issue is directly related anyway.</p>

<p><a href="http://zendframework.com/issues/browse/ZF-1870?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel">http://zendframework.com/issues/browse/â€¦</a>
Comment to look at: B. Charbonneau added a comment - 09/Nov/07 9:45 PM</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mubble Jubble (mubble.jubble) on 2011-06-09T11:47:57.000+0000</p> 
        <div class="body">
            <p>PS - this was on a field without a default value... it did work on those with defaults set. __set seems to work for fields with defaults set.</p>

<p>e.g. in SQL:
testValue varchar(30) NOT NULL</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mubble Jubble (mubble.jubble) on 2011-06-09T12:19:06.000+0000</p> 
        <div class="body">
            <p>I have found the causing issue in my own code:</p>

<p>I inadvertently used an unset() to delete stored data as part of the business logic in my extended row class ( unset($this-&gt;testValue)) - this assumed that sets are checked by column metadata as opposed to checking the _data array (current imp). This call removed the column $key from _data - this causing the exception.</p>

        </div>
    </div>
    </div>

