<h2>ZF-4058: assertQueryContentContains($path, $match, $message = '') always fails when $match contains non-ascii characters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-25T05:57:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-14T14:39:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In my case test failt when I use utf8 polish characters.</p>

<p>$this-&gt;response-&gt;getBody()   //</p>

<p>Autoryzacja nie powiodła się</p>

<p>$this-&gt;assertQueryContentContains('p', 'Autoryzacja nie powiodła się'); // fails</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-09-11T07:10:08.000+0000</p> 
        <div class="body">
            <p>Internally, the constraint uses strstr. We could potentially utilize the mb_stristr() variant, but has mbstring is not installed on vanilla PHP installs, this would require adding an additional test to determine if the the extension is present.</p>

<p>Deferring for a while.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Czachur (zimnyx) on 2008-09-15T02:32:11.000+0000</p> 
        <div class="body">
            <p>Matthew,</p>

<p>Are you sure it's strstr() issue?
I've just lunched XDebug and take a look on strstr() arguments inside Zend_Test_PHPUnit_Constraint_DomQuery::_matchContent().
What I have noticed is that $this-&gt;_getNodeContent($node); returns string 'Autoryzacja nie powiodÅ&lt;82&gt;a siÄ&lt;99&gt;'. This spoiled string is passed to strstr().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Czachur (zimnyx) on 2008-12-02T00:35:12.000+0000</p> 
        <div class="body">
            <p>Matthew,</p>

<h1>To  replicate this bug create simple view with non-ascii unicode string:</h1>

<p>łąka</p>

<p>============</p>

<h1>Then in controller test add:</h1>

<h1>$this-&gt;assertQueryContentContains('p', 'łąka');</h1>

<p>It should pass, but doesn't.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-01-15T16:21:28.000+0000</p> 
        <div class="body">
            <p>I've done a fair bit of research, and this appears to be a problem with libxml. When I call $doc-&gt;saveXML(), I receive the document with all UTF-8 characters represented as HTML entities; however, when I call $doc-&gt;saveXML($node), I get a different string entirely -- no HTML entities, and different characters than the original.</p>

<p>You can verify this by adding the following two lines following line 193 of Zend/Dom/Query.php:</p>

<pre class="highlight"><code>
echo $domDoc-&gt;saveXML() . "\n\n";
foreach ($nodeList as $node) {
    echo $domDoc-&gt;saveXML($node), "\n\n";
}
</code></pre>

<p>I think I need to pass this upstream to the PHP project.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Czachur (zimnyx) on 2009-05-25T05:27:58.000+0000</p> 
        <div class="body">
            <p>Matthew, any news?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Czachur (zimnyx) on 2009-05-25T06:01:32.000+0000</p> 
        <div class="body">
            <p>Matthew,
take a look, for me saveXML() returns spoiled characters in both situations (PHP 5.2.6):</p>

<pre class="highlight"><code>
$doc = new DOMDocument('1.0', 'UTF-8');

$root = $doc-&gt;createElement('book');
$root = $doc-&gt;appendChild($root);

$title = $doc-&gt;createElement('title');
$title = $root-&gt;appendChild($title);

$text = $doc-&gt;createTextNode('Word with polish character: użytkownik');
$text = $title-&gt;appendChild($text);

echo "Saving all the document:<br />\n";
echo htmlspecialchars($doc-&gt;saveXML()) . "<br />\n";

echo "Saving only the title part:<br />\n";
echo htmlspecialchars($doc-&gt;saveXML($title));

</code></pre>

<p>Outputs</p>

<pre class="highlight"><code>
Saving all the document:
&lt;?xml version="1.0" encoding="UTF-8"?&gt; Word with polish character: uÅ¼ytkownik
Saving only the title part:
Word with polish character: uÅ¼ytkownik</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Czachur (zimnyx) on 2009-05-25T06:11:45.000+0000</p> 
        <div class="body">
            <p>...but in commandline version, with the same php.ini, saveXML() returns valid values:</p>

<pre class="highlight"><code>
php /var/www/test.php 
Saving all the document:<br />&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;book&gt;&lt;title&gt;Word with polish character: użytkownik&lt;/title&gt;&lt;/book&gt;
<br />Saving only the title part:<br />&lt;title&gt;Word with polish character: użytkownik&lt;/title&gt;
</code></pre>

<p>Definitely PHP bug, I will report it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Piotr Czachur (zimnyx) on 2009-05-25T06:40:43.000+0000</p> 
        <div class="body">
            <p>Seems to be fixed in 5.2.9, confirmed on Linux and Windows version.
Let me check if unit test will pass after upgrade to 5.2.9 - I'll be back here soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2011-08-14T14:39:45.000+0000</p> 
        <div class="body">
            <p>Libxml issue has been fixed for a while.</p>

        </div>
    </div>
    </div>

