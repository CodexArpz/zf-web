<h2>ZF-7973: Assertion implementation does not receive ACL privilege query parameter.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-29T06:50:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-15T16:56:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Dolf Schimmel (Freeaqingme) (freak)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Acl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12286/Acl.php">Acl.php</a></li>
            <li><a href="/issues/secure/attachment/12279/Acl.php">Acl.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>(I am experiencing a bug in the latest version of Zend that seems similar to an issue reported in the past - ZF-5425.  It is the same in every way except I am only having trouble with the "privilege" parameter.  Everything else seems to be being passed.)</p>

<p>Zend_Acl manual states that:</p>

<p>{quote}
The assert() method of an assertion object is passed the ACL, role, resource, and privilege to which the authorization query (i.e., isAllowed()) applies, in order to provide a context for the assertion class to determine its conditions where needed. 
{quote}</p>

<p>But when assertion is attached to global "all-privileges" with:</p>

<pre class="highlight"><code>
$acl::allow('someRole',null,null,new MyAssertion());
</code></pre>

<p>... with the assertion built like:</p>

<pre class="highlight"><code>
class MyAssertion implements Zend_Acl_Assert_Interface {
    public function assert(Zend_Acl $acl,
                Zend_Acl_Role_Interface $role = null,
                Zend_Acl_Resource_Interface $resource = null,
                $privilege = null)
    {
        if($role == 'someRole') return true;
        elseif($resource == 'someBannedResource') return false;        
        else return true;
    }   
}
</code></pre>

<p>... Then after a query:</p>

<pre class="highlight"><code>
 $acl-&gt;isAllowed('someRole','someResource','somePermission');
</code></pre>

<p>... the assertion <em>should</em> be called with</p>

<p>{{assert(Zend_Acl object, 'somerole', 'someResource', 'somePermission')}}.</p>

<p>Instead it is called with</p>

<p>{{assert(Zend_Acl object, 'somerole', 'someResource', null)}}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Aaron Lozier (ajlozier) on 2009-09-30T15:06:27.000+0000</p> 
        <div class="body">
            <p>The attached file contains what seems to be a fix for the reported issue.  Here is what I added:</p>

<p>Lines 93-96: added _isAllowedPrivilege parameter.  this serves the same purpose as _isAllowedRole and _isAllowedResource directly above.</p>

<p>Lines 762-765: sets _isAllowedPrivilege to $privilege where $privilege not null.  again, same as the functionality for role and resource directly above.</p>

<p>Line 1047: changed $privilege to $this-&gt;_isAllowedPrivilege</p>

<p>The main point here is that wherever null value ('all-privileges') is used in the allow() function, the original value of privilege gets lost in the loop by the time it calls the assertion class.  Saving it in a class parameter and passing that when the assertion class is called resolves the problem.</p>

<p>Hope this helps!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aaron Lozier (ajlozier) on 2009-10-06T14:54:54.000+0000</p> 
        <div class="body">
            <p>_isAllowedPrivilege must also be set back to null at beginning of isAllowed method. Lines 741-742</p>

<p>FROM:</p>

<pre><code>    // reset role &amp; resource to null
    $this-&gt;_isAllowedRole = $this-&gt;_isAllowedResource = null;
</code></pre>

<p>TO:</p>

<pre><code>    // reset role &amp; resource &amp; privilege to null
    $this-&gt;_isAllowedRole = $this-&gt;_isAllowedResource = $this-&gt;_isAllowedPrivilege = null;
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-10-15T16:56:22.000+0000</p> 
        <div class="body">
            <p>Fixed. Thanks for reporting!</p>

        </div>
    </div>
    </div>

