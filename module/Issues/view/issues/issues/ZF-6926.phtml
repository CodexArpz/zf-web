<h2>ZF-6926: use SplObjectStorage class within Zend_Pdf_ElementFactory</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2009-06-05T01:34:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-30T06:09:26.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>ElementFactory uses several object collections, which are really large for large enough PDF documents. All of them are organized as arrays with a string keys which are generated by objects. Each key generation needs string processing.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2009-07-30T06:09:24.000+0000</p> 
        <div class="body">
            <p>Only $_removedObjects is transformed to SplObjectStorage.</p>

<p>$_modifiedObjects entries have to be sorted by keys while PDF dump operation.</p>

<p>$_registeredObjects entries have to be referable by string reference (to check if it's already parsed)</p>

        </div>
    </div>
    </div>

