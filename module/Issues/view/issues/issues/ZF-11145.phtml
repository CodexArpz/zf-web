<h2>ZF-11145: Zend_Controller_Request_Http setRequestUri - HTTP_X_REWRITE_URL GET parameters not parsed</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-03-07T03:12:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-03-07T03:13:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Zijin Huang (zijin)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When URL is rewriteen by IIRF or IIS (when the original request URL is placed in server variable HTTP_X_REWRITE_URL), Zend framework does not parse the query string.</p>

<p>See the code below taken from latest version of ZF (in Zend_Controller_Request_Http):  parse_str for GET parameters is never run if the URL is set from HTTP_X_REWRITE_URL,  IIS_WasUrlRewritten etc, which makes makes the GET parameters unaccessible within the application.</p>

<p>For example, if the request url is /foo/bar?test=123, $controller-&gt;_request-&gt;test would not be available within a controller action</p>

<pre class="highlight"><code>
    public function setRequestUri($requestUri = null)
    {
        if ($requestUri === null) {
            if (isset($_SERVER['HTTP_X_REWRITE_URL'])) { // check this first so IIS will catch
                $requestUri = $_SERVER['HTTP_X_REWRITE_URL'];
            } elseif (
                // IIS7 with URL Rewrite: make sure we get the unencoded url (double slash problem)
                isset($_SERVER['IIS_WasUrlRewritten'])
                &amp;&amp; $_SERVER['IIS_WasUrlRewritten'] == '1'
                &amp;&amp; isset($_SERVER['UNENCODED_URL'])
                &amp;&amp; $_SERVER['UNENCODED_URL'] != ''
                ) {
                $requestUri = $_SERVER['UNENCODED_URL'];
            } elseif (isset($_SERVER['REQUEST_URI'])) {
                $requestUri = $_SERVER['REQUEST_URI'];
                // Http proxy reqs setup request uri with scheme and host [and port] + the url path, only use url path
                $schemeAndHttpHost = $this-&gt;getScheme() . '://' . $this-&gt;getHttpHost();
                if (strpos($requestUri, $schemeAndHttpHost) === 0) {
                    $requestUri = substr($requestUri, strlen($schemeAndHttpHost));
                }
            } elseif (isset($_SERVER['ORIG_PATH_INFO'])) { // IIS 5.0, PHP as CGI
                $requestUri = $_SERVER['ORIG_PATH_INFO'];
                if (!empty($_SERVER['QUERY_STRING'])) {
                    $requestUri .= '?' . $_SERVER['QUERY_STRING'];
                }
            } else {
                return $this;
            }
        } elseif (!is_string($requestUri)) {
            return $this;
        } else {
            // Set GET items, if available
            if (false !== ($pos = strpos($requestUri, '?'))) {
                // Get key =&gt; value pairs and set $_GET
                $query = substr($requestUri, $pos + 1);
                parse_str($query, $vars);
                $this-&gt;setQuery($vars);
            }
        }

        $this-&gt;_requestUri = $requestUri;
        return $this;
    }

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

