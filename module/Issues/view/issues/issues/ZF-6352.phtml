<h2>ZF-6352: Zend_Cache::save() encoding problem</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-20T01:43:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-01T00:32:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jiri Helmich (teuzz)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using Zend_Cache::start() to save a paginator object, encoding of stored db query result gets broken (originally UTF-8).</p>

<p>if (!$this-&gt;view-&gt;frontPageArticles = $this-&gt;_cache-&gt;load('frontPageArticles'))
{
    $content = new CMS_Model_Content();
    $this-&gt;view-&gt;frontPageArticles = $content-&gt;getFrontpageContent($this-&gt;_params['page']); //gets Zend_Paginator object
    $this-&gt;_cache-&gt;save($this-&gt;view-&gt;frontPageArticles,'frontPageArticles');<br />
}</p>

<p>When the last line of code is commented (and cache purged), everything is ok (chars like ěščř... are displayed correctly).</p>

<p>ZF 1.8</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-04-20T10:51:00.000+0000</p> 
        <div class="body">
            <p>please provide a little piece of code to reproduce the problem because there is already a unit test about UTF8 into cache records and there is no problem about it</p>

<p>I close this issue because I think that you have an HTTP header problem or something like that. With default configuration, Zend_Cache_Frontend_Page does not save the "content-type" http header (but there are some options to do that) and IMHO your problem is here.</p>

<p>If I'm wrong, please reopen this issue with a little piece of code to reproduce your UTF8 problem.</p>

<p>Regards</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jiri Helmich (teuzz) on 2009-04-20T14:56:47.000+0000</p> 
        <div class="body">
            <p>Well, as you can see here: <a href="http://frontend.pctuning.cz/">http://frontend.pctuning.cz/</a> , there isn't a problem with whole page but only with the content touched by Zend_Cache (the main article, which is, I think, clear).</p>

<p>The code:</p>

<p>1) Bootstrap:</p>

<p>$cache = Zend_Cache::factory(
            'Core',
            'File',
            array(
                'lifetime' =&gt; (15*60),
                'automatic_serialization' =&gt; true,
                'caching' =&gt; CACHE_ENABLED
            ),
            array(
                'cache_dir' =&gt; '../store/cache/'
            )
        );
Zend_Registry::set('MainCache',$cache);</p>

<p>2) Controller:</p>

<p>private $_cache;</p>

<pre><code>public function init()
{
    $this-&gt;_params = $this-&gt;getRequest()-&gt;getUserParams();
    $this-&gt;_cache = Zend_Registry::get('MainCache');
}

public function indexAction()
{

    if (!$this-&gt;view-&gt;frontPageArticles = $this-&gt;_cache-&gt;load('frontPageArticles'))
    {
        $content = new CMS_DbTable_Content();
        $this-&gt;view-&gt;frontPageArticles = $content-&gt;getFrontpageContent($this-&gt;_params['page']);
        $this-&gt;_cache-&gt;save($this-&gt;view-&gt;frontPageArticles,'frontPageArticles');                
    } 
}
</code></pre>

<p>3) CMS_DbTable_Content</p>

<p>public function getFrontpageContent($page = 0)
        {</p>

<pre><code>        $select = $this-&gt;select();
        $select-&gt;setIntegrityCheck(false);

        $select-&gt;from('content')
                -&gt;joinInner(
                    'content_frontpage',
                    'content_frontpage.content_id = content.id',
                    array()
                )
                -&gt;order('content.created DESC')
                -&gt;where('content.state = 1');

                $paginator = new Zend_Paginator(new Zend_Paginator_Adapter_DbTableSelect($select));
                $paginator-&gt;setItemCountPerPage(15);
                $paginator-&gt;setCurrentPageNumber($page);

        return $paginator;

    }
</code></pre>

<p>So as you can see, I do not cache whole page but only the returned paginator object - if I'm right, the query is proccessed after calling getCurrentItems(), so I do not really cache any data from database, so that's more weird that the data I get after calling getCurrentItems are broken.</p>

<p>And I did not forget to call set names utf-8 :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-04-21T12:30:58.000+0000</p> 
        <div class="body">
            <p>I don't know. Your code is too complex. I can't reproduce this on my linux box.</p>

<p>Can you try a unit test :
- you save UTF8 chars into a cache record
- you read this cache record</p>

<p>then you compare these two strings</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by TT (tt) on 2009-04-29T18:54:18.000+0000</p> 
        <div class="body">
            <p>I can confirm this issue. If you save a Zend_Paginator object in the cache (I only tested file cache), the result that is loaded from the cache has messed up UTF-8 encoded strings.</p>

<pre class="literal"> 
$frontendOptions = array(
   'caching' =&gt; true,
   'lifetime' =&gt; 7200, 
   'automatic_serialization' =&gt; true
);

$backendOptions = array(
    'cache_dir' =&gt; 'cache/' 
);

$cache = Zend_Cache::factory('Core', 'File', $frontendOptions, $backendOptions);

//Zend_Db_Table_Select object
$select = $this-&gt;select();

$paginator = Zend_Paginator::factory($select );
$paginator-&gt;setItemCountPerPage(10);
$paginator-&gt;setCurrentPageNumber(1);

$cache-&gt;save($paginator, 'a_cache_id');

$cachedPaginator = $cache-&gt;load('a_cache_id');
</pre>

<p>The UTF-8 chars in $paginator are fine, in $cachedPaginator they are messed up.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-04-30T10:58:17.000+0000</p> 
        <div class="body">
            <p>I suppose this is a Zend_Paginator or a Zend_Db_Table_Select or a serialize() issue.</p>

<p>Can you try in your configuration to store UTF8 chars (with automatic_serialization = false) and without other objects (only UTF8 chars !) and to retrieve them from cache ?</p>

<p>thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-04-30T11:00:19.000+0000</p> 
        <div class="body">
            <p>after reading <a href="http://fr.php.net/unserialize">http://fr.php.net/unserialize</a> comments about utf8</p>

<p>I think it's a unserialize() issue</p>

<p>please do the little test I propose in my last comment</p>

<p>and do it also with automatic_serialization = true</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by TT (tt) on 2009-04-30T19:16:41.000+0000</p> 
        <div class="body">
            <p>I did some more testing and it seems to have to do with serialization, probably the Zend_Db_Table_Select and not the Zend_Paginator. I only tested with Zend_Paginator using a  Zend_Db_Table_Select though.</p>

<p>This is strange:</p>

<p>Apparently serializing a Zend_Paginator object that includes a result of a Zend_Db_Table_Select breaks the UTF-8.</p>

<pre class="literal"> 
$paginatorObject = serialize($paginatorObject );    
$paginatorObject = unserialize($paginatorObject );

//broken UTF-8
foreach ($paginatorObject as $result) {
    var_dump($result);
}
</pre>

<p>Now the funny part. If we iterate over the paginator result right before serializing it, the UTF-8 will NOT be broken!</p>

<pre class="literal"> 
//itareate to preserve UTF-8
foreach ($paginatorObject as $result) {
}   

$paginatorObject = serialize($paginatorObject );    
$paginatorObject = unserialize($paginatorObject );

//working UTF-8
foreach ($paginatorObject as $result) {
    var_dump($result);
}
</pre>

<p>Basically this is my dirty quick fix for now. Right before I save the paginator object in the cache, I iterate over it once.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-05-01T00:32:16.000+0000</p> 
        <div class="body">
            <p>So, it is not a Zend_Cache issue.</p>

<p>Maybe open a new one for Zend_Paginator ?</p>

<p>Maybe, try with the latest version of PHP before</p>

        </div>
    </div>
    </div>

