<h2>ZF-11904: Amazon requires AssociateTag for all API queries since 2011-11-01</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-11-21T22:12:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-09T04:01:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Mixu Kastelen (yellowhat)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Enrico Zimuel (zimuel)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Service_Amazon</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Amazon requires an associate tag for all API queries now, see <a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html">https://affiliate-program.amazon.com/gp/…</a>:</p>

<hr /><p>The changes, described below, will help us continue to provide you with relevant and useful features to advertise Amazon products. The following changes to the API will take effect on November 1, 2011:</p>

<ul><li>Associate Tag will be a required and verified input parameter in all requests to the API</li>
</ul><hr /><p>The sample code at <a href="http://framework.zend.com/manual/en/zend.service.amazon.html">http://framework.zend.com/manual/en/…</a> does not work any more:</p>

<hr /><p>$query = new Zend_Service_Amazon_Query('AMAZON_API_KEY', 'US', 'AMAZON_SECRET_KEY');
$query-&gt;category('Books')-&gt;Keywords('PHP');
$results = $query-&gt;search();
foreach ($results as $result) {
  echo $result-&gt;Title . '<br />';
}</p>

<hr /><p>A first step would be to update the documentation to reflect this working usage:</p>

<p>$query -&gt;category('Books') -&gt;AssociateTag('myassociatetag-21') -&gt;Keywords('PHP');</p>

<p>But preferably the constructor would be changed:</p>

<p>$query = new Zend_Service_Amazon_Query('AMAZON_API_KEY', 'US', 'AMAZON_SECRET_KEY', 'myassociatetag-21');</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alex (2ndak) on 2012-03-25T17:34:53.000+0000</p> 
        <div class="body">
            <p>I am running into this problem with API itemSearch(). There is no way (or i am not aware of) to insert the AssociateTag to the request.</p>

<p>I am surprise to see no more people are affected by this. Maybe there isn't that many people using the Zend_Service_Amazon APIs.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Justin Silver (jsilver) on 2012-04-09T04:01:08.000+0000</p> 
        <div class="body">
            <p>I updated my local code to support the Amazon changes. One required change for me was the xpath namespace - all of the instances of "2005-10-05" in the Zend/Service/Amazon/*.php will need to be updated to replace:
    $xpath-&gt;registerNamespace('az', '<a href="http://webservices.amazon.com/AWSECommerceService/2005-10-05">http://webservices.amazon.com/AWSECommerceService/…</a>');
with :
    $xpath-&gt;registerNamespace('az', '<a href="http://webservices.amazon.com/AWSECommerceService/2011-08-01">http://webservices.amazon.com/AWSECommerceService/…</a>');</p>

<p>To modify the constructor as in the example above "$query = new Zend_Service_Amazon_Query('AMAZON_API_KEY', 'US', 'AMAZON_SECRET_KEY', 'myassociatetag-21')" you will need to update Zend/Service/Amazon.php</p>

<p>// Zend/Service/Amazon.php - add property</p>

<pre><code>/**
 * @var string
 */
protected $_associateTag = null;
</code></pre>

<p>// Zend/Service/Amazon.php - update constructor</p>

<pre><code>public function __construct($appId, $countryCode = 'US', $secretKey = null, $associateTag=null)
{
    // ...
    $this-&gt;_associateTag = $associateTag;
    // ...
}
</code></pre>

<p>// Zend/Service/Amazon.php - update _prepareOptions()</p>

<pre><code> protected function _prepareOptions($query, array $options, array $defaultOptions)
{
    // ...
    $options['AssociateTag']   = $this-&gt;_associateTag;
    // ...
}
</code></pre>

<p>Good luck!</p>

        </div>
    </div>
    </div>

