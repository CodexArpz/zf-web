<h2>ZF-8800: Zend_Db_Adapter_Abstract::update() - does not support table alias</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-13T02:17:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Juraj Seffer (jurajseffer)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Adapter_Abstract::update() doesn't seem to currently support alias for the table, e.g:
Zend_Db_Adapter_Abstract::update(array('A' =&gt; 'table_name'), array('field' =&gt; 'value'), array('id = ?' =&gt; 1));</p>

<p>This is useful when using subselects which need to reference the main table that is being updated. I think the adapter should check whether the value passed as $table is an array, if so, treat it similarly as Zend_Db_Select::from(). If it's not an array, just escape it.</p>

<p>Current workaround:
Zend_Db_Adapter_Abstract::update(new Zend_Db_Expr("table_name AS A"), array('field' =&gt; 'value'), array('id = ?' =&gt; 1));</p>

<p>J.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

