<h2>ZF-8087: Error within unit testing with PHPUnit - Zend_Db_Table_Exception: No adapter found for [...]</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-17T12:21:03.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-07-01T10:28:35.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.7 (28/Jul/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Constantin Ehrenstein (skiller)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ramon Henrique Ornelas (ramon)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
            <li>Zend_Db_Table</li>
            <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am using TDD with Zend Framework.</p>

<p>I've set up tests for every component of my application. Within testing, I am using an SQLite database that replaces the live database.</p>

<p>With 1.8.4, all went well.</p>

<p>With 1.9, I am getting random errors during testing, for example the following:</p>

<p>7) ModelTechnologyMapperTest::testFetchAll
Zend_Db_Table_Exception: No adapter found for Default_Model_DbTable_Technologies</p>

<p>/Users/skiller/PHP Projects/skiller/library/Zend/Db/Table/Abstract.php:754
/Users/skiller/PHP Projects/skiller/library/Zend/Db/Table/Abstract.php:739
/Users/skiller/PHP Projects/skiller/library/Zend/Db/Table/Abstract.php:268
/Users/skiller/PHP Projects/skiller/application/models/TechnologyMapper.php:17
/Users/skiller/PHP Projects/skiller/application/models/TechnologyMapper.php:32
/Users/skiller/PHP Projects/skiller/application/models/TechnologyMapper.php:52
/Users/skiller/PHP Projects/skiller/tests/application/models/TechnologyMapperTest.php:86</p>

<p>The strange thing is that other tests for model classes in the same test suite don't yield such errors although they share the exact same database and configuration parameters.</p>

<p>Since some tests work and some don't, I suspect a problem with the correct initiation sequence within the extended ZF/PHPUnit framework.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-10-17T12:29:02.000+0000</p> 
        <div class="body">
            <p>Could you please provide any code with which we can reproduce this problem?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Constantin Ehrenstein (skiller) on 2009-10-17T12:57:35.000+0000</p> 
        <div class="body">
            <p>(I hope this is rendered readably by JIRA)</p>

<p>phpunit.xml (in tests/):</p>

<pre class="highlight"><code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
./../application../application../application/Bootstrap.php../application/controllers/ErrorController.php</code></pre>

<p>in application.ini:</p>

<pre class="highlight"><code>---8&lt;--- snip ---8&lt;---
[production]
phpSettings.display_startup_errors = 0
phpSettings.display_errors = 0
phpSettings.date.default.timezone = "Europe/Vienna"
includePaths.library = APPLICATION_PATH "/../library"
bootstrap.path = APPLICATION_PATH "/Bootstrap.php"
bootstrap.class = "Bootstrap"
resources.frontController.controllerDirectory = APPLICATION_PATH "/controllers"
resources.layout.layoutPath = APPLICATION_PATH "/layouts/scripts"
resources.view[] =
---8&lt;--- snip ---8&lt;---

---8&lt;--- snip ---8&lt;---
[testing : production]
phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.db.adapter = "Pdo_Sqlite"
resources.db.params.dbname = APPLICATION_PATH "/../data/db/sitedata-testing.db"

[development : production]
phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
;resources.db.adapter = "Pdo_Mysql"
;resources.db.params.host = "localhost"
---8&lt;--- snip ---8&lt;---
</code></pre>

<p>in tests/TechnologyMapperTest.php</p>

<pre class="highlight"><code>&lt;?php
class ModelTechnologyMapperTest extends ControllerTestCase {

    /**
     * @var Default_Model_TechnologyMapper
     */
    protected $_mapper;

    public function setUp() {
        $this-&gt;_mapper = new Default_Model_TechnologyMapper();
    }

    public function tearDown() {
        $this-&gt;_mapper-&gt;getDbTable()
            -&gt;delete(array("order_index = ?" =&gt; -101));
        $this-&gt;_mapper-&gt;getDbTable()
            -&gt;delete(array("order_index = ?" =&gt; -100));
    }

    public function testDbTableProperty() {
        $this-&gt;assertClassHasAttribute("_dbTable", "Default_Model_TechnologyMapper");
    }
---8&lt;--- snip ---8&lt;---
</code></pre>

<p>in application/models/TechnologyMapper.php:</p>

<pre class="highlight"><code>&lt;?php
class Default_Model_TechnologyMapper {
    /**
     * The database table object
     *
     * @var Default_Model_DbTable_Technologies
     */
    protected $_dbTable;

    /**
     * Set the table object
     * @param $dbTable
     * @return Default_Model_TechnologyMapper
     */
    public function setDbTable($dbTable) {
        if (is_string ( $dbTable )) {
            $dbTable = new $dbTable ( );
        }
        if (! $dbTable instanceof Zend_Db_Table_Abstract) {
            throw new Exception ( "Invalid table data gateway provider" );
        }
        $this-&gt;_dbTable = $dbTable;
        return $this;
    }

    /**
     * Get the table object
     * @return Default_Model_DbTable_Technologies
     */
    public function getDbTable() {
        if (null === $this-&gt;_dbTable) {
            $this-&gt;setDbTable ( "Default_Model_DbTable_Technologies" );
        }
        return $this-&gt;_dbTable;
    }

    /**
     * Save a technology
     * @param Default_Model_Technology $tech
     * @return Default_Model_TechnologyMapper
     */
    public function save(Default_Model_Technology &amp;$tech) {
        $data = array(
            "id"            =&gt; $tech-&gt;getId(),
            "name"          =&gt; $tech-&gt;getName(),
            "class_name"    =&gt; $tech-&gt;getClassName(),
            "order_index"   =&gt; $tech-&gt;getOrderIndex(),
        );
        if (null === $tech-&gt;getId()) {
            unset($data["id"]);
            $data["created"] = time();
            $tech-&gt;setId($this-&gt;getDbTable()-&gt;insert($data));
        }
        else {
            $data["modified"] = time();
            $this-&gt;getDbTable()-&gt;update($data, array("id = ?" =&gt; $data["id"]));
        }
        return $this;
    }

    public function fetchAll() {
        $resultSet = $this-&gt;getDbTable()
            -&gt;select()
            -&gt;order(array("order_index", "name"))
            -&gt;query()
            -&gt;fetchAll();
        $entries = array();
        foreach ($resultSet as $row) {
            $entry = new Default_Model_Technology();
            $entry-&gt;setId($row["id"])
                -&gt;setName($row["name"])
                -&gt;setClassName($row["class_name"])
                -&gt;setOrderIndex($row["order_index"]);
            $entries[] = $entry;
        }
        return $entries;
    }
}
</code></pre>

<p>in application/models/DbTable/Technologies.php:</p>

<pre class="highlight"><code>&lt;?php
class Default_Model_DbTable_Technologies extends Zend_Db_Table_Abstract {
    /**
     * table name
     * @var strings
     */
    protected $_name = "technologies";
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Constantin Ehrenstein (skiller) on 2009-10-17T13:01:47.000+0000</p> 
        <div class="body">
            <p>tests/application/ControllerTestCase.php:</p>

<pre class="highlight"><code>&lt;?php
class ControllerTestCase extends Zend_Test_PHPUnit_ControllerTestCase {

    /**
     * @var Zend_Application
     */
    protected $_application;

    /**
     * Prepares the environment before running a test.
     */
    public function setUp() {
        $this-&gt;bootstrap = array($this, "appBootstrap" );
        parent::setUp();
    }

    public function appBootstrap() {
        $this-&gt;_application = new Zend_Application( APPLICATION_ENV, APPLICATION_PATH . "/configs/application.ini" );
        $this-&gt;_application-&gt;bootstrap();
    }
}

</code></pre>

<p>Oh, and the tests/application/bootstrap.php file for unit testing:</p>

<pre class="highlight"><code>&lt;?php
error_reporting(E_ALL | E_STRICT);
date_default_timezone_set("Europe/Vienna");

defined("APPLICATION_PATH")
    || define("APPLICATION_PATH", realpath(dirname(__FILE__) . "/../../application"));
defined("APPLICATION_ENV")
    || define("APPLICATION_ENV", (getenv("APPLICATION_ENV") ? getenv("APPLICATION_ENV") : "testing"));
set_include_path(implode(PATH_SEPARATOR, array(
    get_include_path(),
    realpath(APPLICATION_PATH . "/../library"),
    "/usr/local/share/pear",
)));
require_once 'Zend/Loader/Autoloader.php';
require_once 'Zend/Application/Module/Autoloader.php';
/**
 * @var Zend_Application_Module_Autoloader
 */
$autoloader = new Zend_Application_Module_Autoloader(array(
    "namespace" =&gt; "Default",
    "basePath" =&gt; APPLICATION_PATH
));
require_once 'ControllerTestCase.php';</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2010-07-01T10:27:58.000+0000</p> 
        <div class="body">
            <p>@Constantin Ehrenstein</p>

<p>In class ModelTechnologyMapperTest (tests/TechnologyMapperTest.php).
Missing, <em>parent::setUp()</em>.</p>

<pre class="highlight"><code>
&lt;?php
class ModelTechnologyMapperTest extends ControllerTestCase
{

    /**
     * @var Default_Model_TechnologyMapper
     */
    protected $_mapper;

    public function setUp() {
        parent::setUp(); // add
        $this-&gt;_mapper = new Default_Model_TechnologyMapper();
    }

    public function tearDown() {
        $this-&gt;_mapper-&gt;getDbTable()
            -&gt;delete(array("order_index = ?" =&gt; -101));
        $this-&gt;_mapper-&gt;getDbTable()
            -&gt;delete(array("order_index = ?" =&gt; -100));
    }

    public function testDbTableProperty() {
        $this-&gt;assertClassHasAttribute("_dbTable", "Default_Model_TechnologyMapper");
    }
}
</code></pre>

        </div>
    </div>
    </div>

