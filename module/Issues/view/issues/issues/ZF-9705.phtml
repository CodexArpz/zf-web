<h2>ZF-9705: TwoLevels backend doesn't update fast cache if full</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-19T00:28:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-19T12:19:47.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.4 (28/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Niko Sams (nikosams)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13011/test.diff">test.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The TwoLevels backend doesn't correctly update the fast cache, if it's full.
Attached unit test shows the problem.</p>

<p>Two possible solutions:</p>

<ol><li>update fast if entry exists ignoring usage. (Assuming the old and new data will
have similar size)</li>
</ol><pre class="highlight"><code>
Index: Zend/Cache/Backend/TwoLevels.php
===================================================================
--- Zend/Cache/Backend/TwoLevels.php    (revision 21942)
+++ Zend/Cache/Backend/TwoLevels.php    (working copy)
@@ -174,7 +174,7 @@
         $boolFast = true;
         $lifetime = $this-&gt;getLifetime($specificLifetime);
         $preparedData = $this-&gt;_prepareData($data, $lifetime, $priority);
-        if (($priority &gt; 0) &amp;&amp; (10 * $priority &gt;= $usage)) {
+        if ((($priority &gt; 0) &amp;&amp; (10 * $priority &gt;= $usage)) || $this-&gt;_fastBackend-&gt;test($id)) {
             $fastLifetime = $this-&gt;_getFastLifetime($lifetime, $priority);
             $boolFast = $this-&gt;_fastBackend-&gt;save($preparedData, $id, array(), $fastLifetime);
         }
</code></pre>

<ol><li>when updating and an entry exists remove it</li>
</ol><pre class="highlight"><code>
Index: Zend/Cache/Backend/TwoLevels.php
===================================================================
--- Zend/Cache/Backend/TwoLevels.php    (revision 21942)
+++ Zend/Cache/Backend/TwoLevels.php    (working copy)
@@ -177,6 +177,8 @@
         if (($priority &gt; 0) &amp;&amp; (10 * $priority &gt;= $usage)) {
             $fastLifetime = $this-&gt;_getFastLifetime($lifetime, $priority);
             $boolFast = $this-&gt;_fastBackend-&gt;save($preparedData, $id, array(), $fastLifetime);
+        } else if ($this-&gt;_fastBackend-&gt;test($id)) {
+            $this-&gt;_fastBackend-&gt;remove($id);
         }
         $boolSlow = $this-&gt;_slowBackend-&gt;save($preparedData, $id, $tags, $lifetime);
         return ($boolFast &amp;&amp; $boolSlow);
</code></pre>

<p>(Included in the unit test patch is a change to the TwoLevels backend constructor that allows giving
slow and fast backend directly as objects, just like Zend_Cache::factory does. This made it easier
to write the test using a mock object)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Niko Sams (nikosams) on 2010-04-19T00:30:05.000+0000</p> 
        <div class="body">
            <p>unit test</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-04-19T12:19:46.000+0000</p> 
        <div class="body">
            <p>fixed in r21953 (trunk) &amp; r21954 (1.10 branch)</p>

        </div>
    </div>
    </div>

