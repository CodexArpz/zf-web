<h2>ZF-4158: GData Ignores my parameters (max-results, start-index etc) when fetching feeds</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2008-09-01T23:26:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-06T07:51:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.1 (10/Feb/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Prem Pillai (premjg)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Trevor Johns (tjohns)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Gdata</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11513/ZF-4158_v1.patch">ZF-4158_v1.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>GData Ignores my parameters (max-results, start-index etc) when fetching feeds.
No matter what parameter values I add, the GData cbntacts feed always returns the same data set (first 25 entries)</p>

<p>Here's my code:</p>

<p>&lt;?php
session_start();
//header("Content-type: text/xml");</p>

<p>require_once 'Zend/Oauth/Consumer.php';
require_once 'Zend/Crypt/Rsa/Key/Private.php';
require_once 'Zend/Gdata/ClientLogin.php';
require_once 'Zend/Gdata.php';</p>

<p>$users_index = $_SESSION['users_index'];</p>

<p>// my rsa key string. when in production, put this string in an
external file and call it using get_file_contents
$test_cert = &lt;&lt;&lt;_CERT
-----BEGIN RSA PRIVATE KEY-----
sadfdsfsdfdsfsdfsdfsdsdfsdfsdfsdfsdfsd
-----END RSA PRIVATE KEY-----
_CERT;</p>

<p>$options = array(
    'requestScheme' =&gt; Zend_Oauth::REQUEST_SCHEME_QUERYSTRING,
    'version' =&gt; '1.0',
    'signatureMethod' =&gt; 'RSA-SHA1',
    'callbackUrl' =&gt; '<a href="http://www.mydomain.com/act/test">http://www.mydomain.com/act/test</a>', // UPDATE FOR
YOUR DETAILS
    'requestTokenUrl' =&gt; '<a href="https://www.google.com/accounts/">https://www.google.com/accounts/</a>
OAuthGetRequestToken',
    'userAuthorisationUrl' =&gt; '<a href="https://www.google.com/accounts/">https://www.google.com/accounts/</a>
OAuthAuthorizeToken',
    'accessTokenUrl' =&gt; '<a href="https://www.google.com/accounts/">https://www.google.com/accounts/</a>
OAuthGetAccessToken',
    'consumerKey' =&gt; '<a href="www.mydomain.com">www.mydomain.com</a>',  // UPDATE FOR YOUR DETAILS
    'consumerSecret' =&gt; new Zend_Crypt_Rsa_Key_Private($test_cert)
);</p>

<p>/**
 * Example utilises the Google Contacts API
 */</p>

<p>$consumer = new Zend_Oauth_Consumer($options);</p>

<p>if (!isset($_SESSION['ACCESS_TOKEN_GOOGLE'])) {
    if (!empty($_GET)) {
        // Google does not like empty POST bodies - switch to GET
        $token = $consumer-&gt;getAccessToken($_GET,
unserialize($_SESSION['REQUEST_TOKEN_GOOGLE']), Zend_Oauth::GET);
        $_SESSION['ACCESS_TOKEN_GOOGLE'] = serialize($token);
    } else {
        // Default POST works fine here since POST body contains scope
parameter
        $token = $consumer-&gt;getRequestToken(array('scope'=&gt;'http://
<a href="www.google.com/m8/feeds">www.google.com/m8/feeds</a>'), Zend_Oauth::GET);
        $_SESSION['REQUEST_TOKEN_GOOGLE'] = serialize($token);
        $consumer-&gt;redirect();
        exit;
    }
} else {</p>

<pre><code>$token = unserialize($_SESSION['ACCESS_TOKEN_GOOGLE']);
$_SESSION['ACCESS_TOKEN_GOOGLE'] = null;
</code></pre>

<p>}</p>

<p>// OAuth Access Token Retreived; Proceed to query Data API
$client = $token-&gt;getHttpClient($options);
//$client-&gt;setUri('<a href="http://www.google.com/m8/feeds/groups/default/">http://www.google.com/m8/feeds/groups/default/</a>
full');
//$client-&gt;setMethod(Zend_Http_Client::GET);</p>

<p>$contact = new Zend_Gdata($client);</p>

<p>$contact_count =0;</p>

<p>$query = new Zend_Gdata_Query('<a href="http://www.google.com/m8/feeds/contacts/">http://www.google.com/m8/feeds/contacts/</a>
default/full');</p>

<p>$feed = $contact-&gt;getFeed($query);</p>

<p>$name = "";
$email = "";</p>

<p>$db = new db_connect();
$db = $db-&gt;db;</p>

<p>foreach($feed as $entry){
        $name = $entry-&gt;title;</p>

<pre><code>    $parts = $entry-&gt;getExtensionElements();
    foreach($parts as $p){
            $element = $p-&gt;getDOM();
            switch($element-&gt;tagName){
                    case 'email':
                            $email = $element-&gt;getAttribute('address');
                            break;
                    default:
                            continue;
            }
    }
</code></pre>

<p>$data = array(
    'name'      =&gt; "$name",
    'email' =&gt; "$email",
        'users_index' =&gt; $users_index
);</p>

<p>//insert into DB here</p>

<p>$contact_count++;
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Trevor Johns (tjohns) on 2008-09-02T16:36:28.000+0000</p> 
        <div class="body">
            <p>This is being caused by Zend_Oauth_client not preserving query parameters on a GET request.</p>

<p>Attached [^ZF-4158_v1.patch] as a patch to fix this behavior, to be sent to [~padraic] for review.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Cockle (yongfook) on 2009-05-25T21:24:00.000+0000</p> 
        <div class="body">
            <p>I am still seeing this issue with the latest version in the incubator:
<a href="http://framework.zend.com/svn/framework/standard/incubator/library/Zend/">http://framework.zend.com/svn/framework/…</a></p>

<p>and the above patch unfortunately doesn't seem to fix it.</p>

<p>I'm experiencing the same issue - GET params are stripped before sending requests, meaning that using Zend_Oauth for GData doesn't work beyond authentication.</p>

<p>Is there any update on this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Cockle (yongfook) on 2009-05-25T21:37:23.000+0000</p> 
        <div class="body">
            <p>sorry, my mistake.</p>

<p>the patch fixes the issue but you still need to manually set:</p>

<p>$client-&gt;setRequestScheme(Zend_Oauth::REQUEST_SCHEME_QUERYSTRING);</p>

<p>before sending your request.</p>

<p>looks good though.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2010-02-06T07:51:08.000+0000</p> 
        <div class="body">
            <p>Fixed in r20938</p>

        </div>
    </div>
    </div>

