<h2>ZF-4291: Add new Calendar type Such as the Persian, Arabic, Hebrew and ... </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-09-14T13:59:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-17T22:13:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.1 (15/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><i>design a base class for convert any date type such as the Islamic calendar,  Iranian calendar,  Hebrew, and any data type in the world that process by unix time stamp with process the time zone of client side ...</i></p>

<p>in php core doesn't any tool for get all global calendar date type. just have a Hebrew ... but the same function for convert get all data types from the same resouce (the UNIX time stamp) is very great tool for the multi languages and localization of huge portals ...</p>

<blockquote>
  <blockquote>
    <p>SEE : <a href="http://en.wikipedia.org/wiki/List_of_calendars">http://en.wikipedia.org/wiki/List_of_calendars</a></p>
  </blockquote>
</blockquote>

<p>get list of the UTF-8 titles for the days of the week, title of month ... and ....</p>

<p>for example :</p>

&lt;?php

    $myDate = new Zend_Global_Date();
    
    $unixtime = 12035678946;

    echo $myDate-&gt;convertToDate($unixtime, 'Y-m-d', ' Iranian');
    
    /*
    
    OUTPUT IS :
    
        1387-06-14  

    */
?&gt;

<p>It's a useful feature that any framework doesn't it..</p>

<p>good luck and be waiting for the replay </p>

<p>I report this issue but the manegment block it soon and did not understand my mean.</p>

<p>You did not find out my mean.
i know the zend have the localization classes and functions.</p>

<p>i tell the zend have the class and functions to CONVERT the calendar please exacly see my example.</p>

<p>in the many countries the people don't use the GEORGIAN date for example in Iran the people use the Iran calendar, in arab countries the peoples use the islamic date.</p>

<p>for example today is :      2008/09/19
but in iran today is :      1387/06/28
and in the arabic countries :   1429/09/17
and any countries have the any CALENDAR TYPE.
did you find out my mean PLEASE DO NOT CLOSE THE TICKET. :(</p>

<p>if the Zend_Date have the convertor for convert the unix timestamp to the any calendar type and the convert the any date to unix timestamp.</p>

<p>it's the feature that non framework have it.</p>

<p>and do bugzilla for bugdatabase .. it's is the really bad...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-09-14T14:42:45.000+0000</p> 
        <div class="body">
            <p>Localized data can already be retrieved by using Zend_Locale for all from unicode supported calendar formats like arabic, persian, coptic and much more.</p>

<p>Related to calendar format there exists already a proposal for this. Please see there for details.
This is nothing which should be covered by a simple issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-09-17T22:13:12.000+0000</p> 
        <div class="body">
            <p>I did close this ticket because it's not a bug but a feature for which already a proposal exists.
In our proposal section you will find Zend_Calendar which should exactly do what you described here as problem.</p>

<p>It makes no sense to have existing proposals added here as bug or new feature. Please make any comment to the proposal.</p>

        </div>
    </div>
    </div>

