<h2>ZF-1638: Method setPathInfo of class Zend_Controller_Request_Http return empty or bad path info for URL containing  filename of frontcontroler as a substring</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-27T09:54:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-11-19T04:58:58.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Method getPathInfo of class Zend_Controller_Request_Http return empty or bad path info for URL ending with string "index.php".</p>

<p><a href="http://example.com/">http://example.com/</a> - correct "/"
<a href="http://example.com/index">http://example.com/index</a> - correct "/index"
<a href="http://example.com/path">http://example.com/path</a> - correct "/path"
<a href="http://example.com/path/">http://example.com/path/</a> - correct "/path/"
<a href="http://example.com/path/otherfilename.php">http://example.com/path/otherfilename.php</a> - correct "/path/otherfilename.php"</p>

<p><a href="http://example.com/index">http://example.com/index</a> - bad ""
<a href="http://example.com/path/index.php">http://example.com/path/index.php</a> - bad ""
<a href="http://example.com/path/otherfilenamethanindex.php">http://example.com/path/otherfilenamethanindex.php</a> - bad " rfilenamethanindex.php"</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Vaclav Dobsicek (dobsicek) on 2007-06-27T10:12:17.000+0000</p> 
        <div class="body">
            <p>I think, this issue is in conjunction with filename of the front controller - renaming it to something like "7EA6DB75.php" will help (unless you have file /patg/get7EA6DB75.php :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-27T10:32:10.000+0000</p> 
        <div class="body">
            <p>Assign to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-28T15:07:22.000+0000</p> 
        <div class="body">
            <p>Can you try your examples with a checkout of current SVN? I think the issue may have been resolved with fixes committed earlier this week for ZF-1439.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Vaclav Dobsicek (dobsicek) on 2007-07-03T09:26:59.000+0000</p> 
        <div class="body">
            <p>I've made tests with ZF version 1.0.0 from 1.7. (exact version don't remeber) and the problem is still "out of there".
There is something strange in _baseUrl  value of Zend_Controller_Request_Http</p>

<p>system - MS Vista x64
apache httpd 2.2 (32bit)
php 5.2.3 (32bit) as module</p>

<p>virtual
....
        RewriteCond     %{REQUEST_URI} !.(js|ico|gif|jpg|png|css|pdf|swf|txt|flv|jpeg)$ [NC]
    RewriteRule ^(.*)$ <a>d:/web/test/frontController/7EA6DB75.php</a> [L] 
....</p>

<p>content of FC
<code>
$controller = Zend_Controller_Front::getInstance();
$controller-&gt;throwExceptions(true);
$controller-&gt;addModuleDirectory($basePath . 'application/modules');
$controller-&gt;setParam('useDefaultControllerAlways', false);
$request = new Zend_Controller_Request_Http();
$router = $controller-&gt;getRouter();
Zend_Debug::dump($router-&gt;route($request));
die('hard');
</code></p>

<p>case1 - /test/bug/zindex.php [good]
object(Zend_Controller_Request_Http)#55 (13) {
  ["_requestUri:protected"] =&gt; string(20) "/test/bug/zindex.php"
  ["_baseUrl:protected"] =&gt; string(0) ""
  ["_basePath:protected"] =&gt; NULL
  ["_pathInfo:protected"] =&gt; string(20) "/test/bug/zindex.php"
  ["_params:protected"] =&gt; array(3) {
    ["module"] =&gt; string(4) "test"
    ["controller"] =&gt; string(3) "bug"
    ["action"] =&gt; string(10) "zindex.php"
  }
  ["_aliases:protected"] =&gt; array(0) {
  }
  ["_dispatched:protected"] =&gt; bool(false)
  ["_module:protected"] =&gt; string(4) "test"
  ["_moduleKey:protected"] =&gt; string(6) "module"
  ["_controller:protected"] =&gt; string(3) "bug"
  ["_controllerKey:protected"] =&gt; string(10) "controller"
  ["_action:protected"] =&gt; string(10) "zindex.php"
  ["_actionKey:protected"] =&gt; string(6) "action"
}</p>

<p>case 2 - /dfsdf/fsdfsfd/  [good]
object(Zend_Controller_Request_Http)#55 (13) {
  ["_requestUri:protected"] =&gt; string(15) "/dfsdf/fsdfsfd/"
  ["_baseUrl:protected"] =&gt; string(0) ""
  ["_basePath:protected"] =&gt; NULL
  ["_pathInfo:protected"] =&gt; string(15) "/dfsdf/fsdfsfd/"
  ["_params:protected"] =&gt; array(3) {
    ["controller"] =&gt; string(5) "dfsdf"
    ["action"] =&gt; string(7) "fsdfsfd"
    ["module"] =&gt; string(7) "default"
  }
  ["_aliases:protected"] =&gt; array(0) {
  }
  ["_dispatched:protected"] =&gt; bool(false)
  ["_module:protected"] =&gt; string(7) "default"
  ["_moduleKey:protected"] =&gt; string(6) "module"
  ["_controller:protected"] =&gt; string(5) "dfsdf"
  ["_controllerKey:protected"] =&gt; string(10) "controller"
  ["_action:protected"] =&gt; string(7) "fsdfsfd"
  ["_actionKey:protected"] =&gt; string(6) "action"
}</p>

<p>case 3 - /test/bug/zindxxxx7EA6DB75.phpsaaaaa [BAD]
object(Zend_Controller_Request_Http)#55 (13) {
  ["_requestUri:protected"] =&gt; string(36) "/test/bug/zindxxxx7EA6DB75.phpsaaaaa"
  ["_baseUrl:protected"] =&gt; string(13) "/7EA6DB75.php"
  ["_basePath:protected"] =&gt; NULL
  ["_pathInfo:protected"] =&gt; string(23) "dxxxx7EA6DB75.phpsaaaaa"
  ["_params:protected"] =&gt; array(3) {
    ["controller"] =&gt; string(23) "dxxxx7EA6DB75.phpsaaaaa"
    ["action"] =&gt; string(5) "index"
    ["module"] =&gt; string(7) "default"
  }
  ["_aliases:protected"] =&gt; array(0) {
  }
  ["_dispatched:protected"] =&gt; bool(false)
  ["_module:protected"] =&gt; string(7) "default"
  ["_moduleKey:protected"] =&gt; string(6) "module"
  ["_controller:protected"] =&gt; string(23) "dxxxx7EA6DB75.phpsaaaaa"
  ["_controllerKey:protected"] =&gt; string(10) "controller"
  ["_action:protected"] =&gt; string(5) "index"
  ["_actionKey:protected"] =&gt; string(6) "action"
}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-11-16T14:42:12.000+0000</p> 
        <div class="body">
            <p>PATH_INFO is one of two items:</p>

<ul><li>If a script name is found in the URL, the web server will return any path information <em>following</em> the script name as the PATH_INFO. Thus, /foo/index.php/bar/baz will return '/bar/baz' for the PATH_INFO</li>
<li>If no script name is found in the URL, the web server will provide the entire URL string as either the PATH_INFO or REQUEST_URI. </li>
</ul><p>In Zend_Controller_Request_Http, we try to follow the same guidelines. Based on the examples you provided, it's working as it should.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Vaclav Dobsicek (dobsicek) on 2007-11-19T04:56:49.000+0000</p> 
        <div class="body">
            <p>But the problem is, that method getPathInfo returns different results with same URL - only difference is "system file name" of "front controller file"</p>

        </div>
    </div>
    </div>

