<h2>ZF-8793: &quot;Class does not exist&quot; exception thrown when methods have typed parameters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-12T12:47:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_CodeGenerator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12608/reflectionParam.diff">reflectionParam.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm using an extension to zftools based on this articl <a href="http://cmorrell.com/web-development/php-modeling-in-zend-framework-360">http://cmorrell.com/web-development/…</a> to create my own model classes / properties.</p>

<p>Some of my properties have methods whose parameters are typed with other model class names like this</p>

<p>class myClass {
  public function myFunction(Default_Model_Class $param) {
  }
}</p>

<p>When building this class from reflection, it throws the exception "Class Default_Model_Class does not exist".</p>

<p>I thought of either adding the paths to the application classes to zftools, like in the bootstrap (which I'm not sure how to do), or modify the CodeGenerator_Php_Parameter and Reflection_Parameter classes to tolerate class names of classes that don't exist.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Geneviève Bastien (gbastien) on 2010-01-12T12:49:09.000+0000</p> 
        <div class="body">
            <p>Here's a patch to have the parameter tolerant to unexisting classes.</p>

        </div>
    </div>
    </div>

