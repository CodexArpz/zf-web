<h2>ZF-11542: major incompatibility introduced in commit #21893</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-07-08T14:43:56.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-14T16:01:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Martin Minka (k2s)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>At this time the ID creation for HTML tag was changed which has major impact on existing CSS and JavaScript.</p>

<pre class="highlight"><code>
$getId = create_function('$decorator',
                         'return $decorator-&gt;getElement()-&gt;getId()
                                 . "-element";');
</code></pre>

<p>To keep the compatibility this could would need to be used:</p>

<pre class="highlight"><code>
$getId = create_function('$decorator',
                         'return $decorator-&gt;getElement()-&gt;getName()
                                 . "-element";');
</code></pre>

<p>What ever was the reason to change the way the ID is now build it would be great to make it at least possible to keep compatibility for existing projects. My proposal for such way is to add static member variable:</p>

<pre class="highlight"><code>
class Zend_Form_Element implements Zend_Validate_Interface
{
    public static $decoratorIdFunc = 'return $decorator-&gt;getElement()-&gt;getId(). "-element";';
...
        $getId = create_function('$decorator', self::$decoratorIdFunc);
}

// somewhere in Bootstrap for projects depending on old IDs
Zend_Form_Element::$decoratorIdFunc = 'return $decorator-&gt;getElement()-&gt;getName(). "-element";';
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-07-12T19:18:07.000+0000</p> 
        <div class="body">
            <p>In looking at the above, the {{getId() . "-element"}} version is semantically correct; getName(), when used with forms that utilize array notation, will return values such as "contact[foo]" which represent invalid DOM identifiers.</p>

<p>Can you give an example of the output you expected (based on previous versions) vs the output currently generated, and also an example of the JS and/or CSS you were using? This would help me better understand the problem, and whether or not it's something we need to change and/or accommodate within the framework.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Minka (k2s) on 2011-07-28T13:48:30.000+0000</p> 
        <div class="body">
            <p>Sorry for late answer.</p>

<p>The produced difference is:</p>

<p>with getName(): </p>
with getId():   

My opinion is that the problem is:
* ZF is considered to be stable
* if an project uses CSS dependent on this IDs it gets broken by commit #21893
* there is no way to keep compatibility except to rework all CSS or to keep patched Zend_Form_Element in project

I think getId() is more correct, but I would be very thank full if there could exists a way to keep compatibility.

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-14T16:01:02.000+0000</p> 
        <div class="body">
            <p>Is anyone else having the same difficulties that Martin outlined?  Is this something that should be remediated in 1.12?</p>

        </div>
    </div>
    </div>

