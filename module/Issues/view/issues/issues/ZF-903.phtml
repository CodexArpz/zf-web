<h2>ZF-903: After recent changes to Zend_Db_Table save() does not set the new primary key</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-02-13T04:21:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10260/Zend_Db_Table_Row.patch">Zend_Db_Table_Row.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Some recent changes to Zend_Db_Adapter_Abstract-&gt;insert() (which no longer returns the last inserted primary key) caused some breakage in Zend_Db_Table_Row-&gt;save() which expects insert() to return the last inserted ID.</p>

<p>I had to add a call to lastInsertId() to get things working again.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2007-02-13T04:22:08.000+0000</p> 
        <div class="body">
            <p>Quick patch of my fix to the problem - might need to be better adjusted though</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-13T12:34:06.000+0000</p> 
        <div class="body">
            <p>This patch doesn't solve all the cases.  If the table has a natural key and does not use an auto-generated sequence, it gets the wrong result.  Also, the recent changes I made to lastInsertId() require a sequence name as a parameter for PostgreSQL, DB2, and Oracle.  Invoking the function with no parameters will cause an exception to be thrown.  We need a different solution.</p>

<p>In PostgreSQL, one can discover the sequence used for a given table and query its last generated value.<br />
In DB2, even though one can discover the name of the sequence, querying the sequence directly for its last generated value produces an error.
In Oracle, there is no association between the table and the sequence, so there's no way to infer the name of the sequence from the name of the table.</p>

<p>I'll devote some more time to this problem.  One problem that is complicating this development is that there are currently no unit tests for Zend_Db_Table classes.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-16T17:33:19.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 3504.</p>

<p>I backed out the changes I did recently.  Now the Zend_Db_Table::insert() method returns the value of lastInsertId(), which will preserve backward compatibilty with the past behavior.  However, this is still broken for the reasons I gave above.</p>

<p>However, expect this behavior to change in Zend Framework 0.9.  It is not appropriate for Zend_Db_Table to assume that every table has an integer auto-generated key.</p>

<p>I need to write a proposal and work out all the issues so that we have a full solution.</p>

        </div>
    </div>
    </div>

