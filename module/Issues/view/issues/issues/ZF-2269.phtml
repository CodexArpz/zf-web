<h2>ZF-2269: Zend_Filter_Callback</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-12-05T12:46:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-04-16T23:53:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jordan Ryan Moore (jordanryanmoore)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11451/Callback.php">Callback.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This new filter provides the flexibility to not have to write a custom ZF filter when filtering is already available from another function.</p>

<pre class="highlight"><code>
class Zend_Filter_Callback implements Zend_Filter_Interface {
    /**
     * The callback function/method.
     *
     * @var callback
     */
    protected $_callback;

    /**
     * Additional parameters to send to the callback function/method.
     *
     * @var array
     */
    protected $_params = array();

    /**
     * Instantiates the callback filter.
     *
     * @param   $callback   The callback function/method.
     * @param   $params     Additional parameters to be sent to the callback function/method.
     */
    public function __construct($callback, array $params = array()) {
        $this-&gt;setCallback($callback)-&gt;_params = $params;
    }

    /**
     * Sets the callback function/method.
     *
     * @param   callback    $callback
     *
     * @return  Zend_Filter_Callback
     */
    public function setCallback($callback) {
        if (!is_callable($callback)) {
            throw new Zend_Filter_Exception('Invalid callback');
        }

        $this-&gt;_callback = $callback;

        return $this;
    }

    /**
     * Calls the callback function/method.
     *
     * @param   mixed   $value
     *
     * @return  mixed
     */
    public function filter($value) {
        $params = array_merge(array($value), $this-&gt;_params);

        return call_user_func_array($this-&gt;_callback, $params);
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T17:11:46.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize/assign as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jordan Ryan Moore (jordanryanmoore) on 2008-07-30T16:25:05.000+0000</p> 
        <div class="body">
            <p>Attached a new version.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-19T08:08:25.000+0000</p> 
        <div class="body">
            <p>Ralph, can you find a course of action on this issue, please?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-01-19T10:12:26.000+0000</p> 
        <div class="body">
            <p>There is already a small Zend_Filter_Callback implemented but it lacks 2 things which are solved in the above code:</p>

<ul><li>It does not check if the callback can be called</li>
<li>It does not provide default parameters</li>
</ul><p>Both would be a good addition to the existing class.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-04-15T12:29:42.000+0000</p> 
        <div class="body">
            <p>I'd suggest one of the following approaches:</p>

<pre class="highlight"><code>
$params = $this-&gt;_params;
call_user_func_array($this-&gt;_callback, array($value, $params));
</code></pre>

<p>or:</p>

<pre class="highlight"><code>
$params = $this-&gt;_params;
array_unshift($params, $value);
call_user_func_array($this-&gt;_callback, $params);
</code></pre>

<p>with preference going to the latter.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-04-16T23:51:47.000+0000</p> 
        <div class="body">
            <p>The mentioned two improvements have been added to trunk.
Additionally there exists now a chapter in the manual which was missing before.</p>

        </div>
    </div>
    </div>

