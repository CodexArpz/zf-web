<h2>ZF-5033: Zend_Form_Element_Multi HTML validation warning</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2008-11-23T04:17:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-05T07:42:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using form elements that are descendants of Zend_Form_Element_Multi you'll get HTML validation warnings because the label will point to a non-existent ID:</p>

<p>Example warning message:
{quote}Line 116, Column 16: reference to non-existent ID "FACILITIES".
{{</p>Interior facilities:}}
{quote}

<p>My suggestion is to drop generating a {{}} tag for such elements or at least don't give it the {{for}} attribute. Should be a pretty easy fix.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-23T06:34:14.000+0000</p> 
        <div class="body">
            <p>Actually, it's a non-trivial fix, as the Label decorator proxies to the FormLabel view helper - which requires an element name as its first argument. We may be able to pass a flag indicating that the "for" should not be rendered, however.</p>

<p>Which <em>specific</em> multi elements does this apply to? I'm fairly certain that Select and MultiSelect work properly...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Egeberg (daniel0) on 2008-11-23T06:55:55.000+0000</p> 
        <div class="body">
            <p>I only checked using MultiCheckbox, but I assumed that the other Multi descendants were affected by this as well seeing as MultiCheckbox doesn't have any code that specifically deals with the label.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-23T07:03:48.000+0000</p> 
        <div class="body">
            <p>Well, MultiCheckbox and Radio both operate differently than other Multi elements, as they generate labels per input. I think we can put the flag only in the Radio class (from which MultiCheckbox inherits), and work from there.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Kliewe (mkliewe) on 2009-02-26T05:06:58.000+0000</p> 
        <div class="body">
            <p>Are you still working on this?</p>

<p>Invalid HTML Code isn't very nice if you want to put a "W3C Valid HTML" button on your page ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Edouard Cunibil (duael) on 2010-02-10T03:45:04.000+0000</p> 
        <div class="body">
            <p>Solution posted here : <a href="http://framework.zend.com/issues/browse/ZF-3024?focusedCommentId=38384&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_38384">http://framework.zend.com/issues/browse/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-05T07:05:48.000+0000</p> 
        <div class="body">
            <p>Current trunk validates fine with</p>

<pre class="highlight"><code>
$form = new Zend_Form();
$form-&gt;addElement('Radio', 'Woo', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('Select', 'Zaa', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('Multiselect', 'Qua', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('MultiCheckbox', 'Qui', array('MultiOptions' =&gt; array('foo','bar','baz')));
$form-&gt;addElement('submit','submit');
die($form-&gt;render());
</code></pre>

        </div>
    </div>
    </div>

