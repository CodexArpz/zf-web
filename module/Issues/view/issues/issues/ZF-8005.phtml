<h2>ZF-8005: Actionscript function arguments not passed as correct type to Zend_Amf</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-02T13:44:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:33.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Luke Mackenzie (codecowboy)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The Zend_Amf specification states that a Number type returned from flash will map to a float in PHP. That's fine but why does the number 16 get parsed as 6.1026988574311E_320 ? I actually want to pass an integer but even if I do an explicit cast in Actionscript to type:int, Charles Proxy still reports that the value being passed is of type:Number so Zend/Amf sees it as a float.  The number 16 is actually a parameter in a netconnection call from Actionscript so I don't believe it relates to object mapping between Actionscript and Zend_AMF.</p>

<p>As a workaround, I can pass the parameter as a string and this works but I think I should be able to pass it as a true integer.</p>

<p>connection.call("myservice.doSomething()", responder, id); //id is the value in question</p>

<p>I have tried setting the id to int elsewhere in the code and also passing int(16) but the value always arrives as a float in PHP and cannot be cast to an integer (PHP rounds it to zero).</p>

<p>Does anyone know why this is happening? Is it possible there is a bug in Zend_Amf causing it?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gabriel Froehlich (gfroehlich) on 2009-12-07T01:53:48.000+0000</p> 
        <div class="body">
            <p>There is a similar problem with the results sent from PHP to Flex. If an array or object value is a float in PHP, a wrong value arrives in flex. 
e.g. a price from db of 59.56 arrives in Flex as 1.2179606413329341e+43. 
If it's a string on PHP side, it arrives correct.</p>

<p>The same with too big integer values, they are converted to wrong float value.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luke Mackenzie (codecowboy) on 2009-12-07T02:16:43.000+0000</p> 
        <div class="body">
            <p>See this thread re this being an 'endian' problem.</p>

<p><a href="http://stackoverflow.com/questions/1503746/why-is-the-number-16-converted-to-float6-1026988574311e320-by-php-using-zenda">http://stackoverflow.com/questions/1503746/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gabriel Froehlich (gfroehlich) on 2009-12-07T04:48:15.000+0000</p> 
        <div class="body">
            <p>The problem is in the class Zend_Amf_Util_BinaryStream: in the constructor the class variable _bigEndian is fix set to 1. If change this to 0, it's working for me.</p>

<p>My server is an i5 (AS/400) which has PPC architecture. I thought PPC is big endian and x86 is little endian? But it works if _bigEndian is set to false!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:33.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

