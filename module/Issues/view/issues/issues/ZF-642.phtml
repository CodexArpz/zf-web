<h2>ZF-642: Pass front controller instance into other MVC components</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-12-12T21:43:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:33.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As discussed with Martel, modify MVC components to add accessors to set and retrieve a front controller instance. This would eliminate static calls later, and also allow pasing the front controller into the view helpers and filters, giving them access to the entire MVC environment.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-16T21:37:14.000+0000</p> 
        <div class="body">
            <p>Moving to 0.8.0 for fix; need to discuss more.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-25T16:23:50.000+0000</p> 
        <div class="body">
            <p>This has been done for the router and dispatcher in revision 3004; should it also be done for the action controllers?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-29T15:13:34.000+0000</p> 
        <div class="body">
            <p>In discussion with Martel, will also add to response object, plugin broker and plugins, and action controller.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-02-08T08:56:26.000+0000</p> 
        <div class="body">
            <p>Zend_Controller_Front is a singleton class, and, as such, is accessible from any other piece of code via Zend_Controller_Front::getInstance().</p>

<p>Furthermore, because the $_instance property storing the singleton instance is protected, by overriding the getInstance() method, you can effectively extend the class and still maintain access to the singleton via Zend_Controller_Front::getInstance().</p>

<p>As an example:</p>

<pre class="highlight"><code>
class My_Front_Controller extends Zend_Controller_Front
{
    public function getInstance()
    {
        if (null === self::$_instance) {
            self::$_instance = new self();
        }

        return self::$_instance;
    }
}

$front = My_Controller_Front::getInstance();
echo get_class($front); // 'My_Controller_Front'

// later...
$front = Zend_Controller_Front::getInstance();
echo get_class($front); // 'My_Controller_Front'
</code></pre>

<p>One might argue that static methods do not perform as well as object methods; however, the number of calls to retrieve a front controller instance are likely to be very few, and thus would have little impact on performance.</p>

<p>Finally, if desired, one can simply push the front controller instance into the
chain via setParam():</p>

<pre class="highlight"><code>
$front-&gt;setParam('front', $this).
</code></pre>

        </div>
    </div>
    </div>

