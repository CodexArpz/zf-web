<h2>ZF-10839: Subclasses of HeadMeta view helper could implement new meta types more easily by refactoring a single preg_match() pattern into a protected member.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-12-16T23:07:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-13T21:03:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                David Weinraub (papayasoft)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A recent question on StackOverflow asked about how to make the HeadMeta view helper output a tag like:</p>

<p>&lt;meta property="mykey" content="myvalue"&gt;</p>

<p>Essentially, adding a new "property" as a new type of meta key.</p>

<p>The solution - subclassing HeadMeta - is straight-forward enough:</p>

<ol><li>Modify the preg_match pattern used in the __call() method</li>
<li>Override the protected member $_keyTypes</li>
<li>Override the protected method _normalizeType(). </li>
</ol><p>But the preg_match pattern used in Zend_View_Helper_HeadMeta::__call() method is inline. To override it, the subclass ends up duplicating nearly the entire __call method, simply to change the pattern from:</p>

<p>'/^(?Pset|(pre|ap)pend|offsetSet)(?PName|HttpEquiv)$/'</p>

<p>to</p>

<p>'/^(?Pset|(pre|ap)pend|offsetSet)(?PName|HttpEquiv|Property)$/'</p>

<p>It would be easier if this pattern were refactored out into a protected member. Then subclass would only have to override the protected member rather than duplicate so much of the parent's__call() method.</p>

<p>Just a thought...</p>

<p>Thanks and cheers! ;-)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by David Weinraub (papayasoft) on 2010-12-16T23:14:00.000+0000</p> 
        <div class="body">
            <p>I have a patch (based on what I currently see in trunk, r23526) that implements the change:</p>

<h1>This patch file was generated by NetBeans IDE</h1>

<h1>It uses platform neutral UTF-8 encoding and \n newlines.</h1>

<p>--- Base (BASE)
+++ Locally Modified (Based On LOCAL)
@@ -42,6 +42,7 @@
     protected $_typeKeys     = array('name', 'http-equiv', 'charset');
     protected $_requiredKeys = array('content');
     protected $_modifierKeys = array('lang', 'scheme');
+    protected $_callPattern  = '/^(?Pset|(pre|ap)pend|offsetSet)(?PName|HttpEquiv)$/';</p>

<pre><code> /**
  * @var string registry key
</code></pre>

<p>@@ -125,7 +126,7 @@
      */
     public function __call($method, $args)
     {
-        if (preg_match('/^(?Pset|(pre|ap)pend|offsetSet)(?PName|HttpEquiv)$/', $method, $matches)) {
+        if (preg_match($this-&gt;_callPattern, $method, $matches)) {
             $action = $matches['action'];
             $type   = $this-&gt;_normalizeType($matches['type']);
             $argc   = count($args);</p>

<p>But I confess to being such a noob that I'm not sure that I even created/submitted the patch right. And I regret that I do not have unit-testing for the framework all set up on my dev environment. Please be kind. ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Weinraub (papayasoft) on 2010-12-16T23:21:33.000+0000</p> 
        <div class="body">
            <p>I obviously botched the patch submission. Obviously needed some wiki markup. D'oh.</p>

<p>Trying again. As before, patch relative to r23526:</p>

<pre class="literal">
# This patch file was generated by NetBeans IDE
# It uses platform neutral UTF-8 encoding and \n newlines.
--- Base (BASE)
+++ Locally Modified (Based On LOCAL)
@@ -42,6 +42,7 @@
     protected $_typeKeys     = array('name', 'http-equiv', 'charset');
     protected $_requiredKeys = array('content');
     protected $_modifierKeys = array('lang', 'scheme');
+    protected $_callPattern  = '/^(?Pset|(pre|ap)pend|offsetSet)(?PName|HttpEquiv)$/';
 
     /**
      * @var string registry key
@@ -125,7 +126,7 @@
      */
     public function __call($method, $args)
     {
-        if (preg_match('/^(?Pset|(pre|ap)pend|offsetSet)(?PName|HttpEquiv)$/', $method, $matches)) {
+        if (preg_match($this-&gt;_callPattern, $method, $matches)) {
             $action = $matches['action'];
             $type   = $this-&gt;_normalizeType($matches['type']);
             $argc   = count($args);

</pre>

<p>Aaah, well that's a little better. ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Weinraub (papayasoft) on 2010-12-30T21:37:36.000+0000</p> 
        <div class="body">
            <p>Correct spelling error in the title.  (In the title, for crying out loud! I need to be more careful)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Weber Chris (chris.lu) on 2011-02-13T11:44:25.000+0000</p> 
        <div class="body">
            <p>There is a method "appendProperty" in the headMeta helper that could be used for this
Link to documentation that shows an example: <a href="http://framework.zend.com/manual/en/zend.view.helpers.html#zend.view.helpers.initial.headmeta">http://framework.zend.com/manual/en/â€¦</a></p>

<p>Unfotunatly it doesn't work because the helper only allows this for xhtml1_rdfa doctypes, if you want to use it on your html5 website because for example you want to include the facebook iLike button you should extend the headMeta helper and override the _isValid Method</p>

<p>i replaced those lines:</p>

<pre class="highlight"><code>
        //  is only supported with doctype RDFa
        if (!$this-&gt;view-&gt;doctype()-&gt;isRdfa()
            &amp;&amp; $item-&gt;type === 'property') {
            return false;
        }
</code></pre>

<p>with these lines:</p>

<pre class="highlight"><code>
        //  is only supported with doctype RDFa and doctype HTML5
        if (!$this-&gt;view-&gt;doctype()-&gt;isRdfa() &amp;&amp; $item-&gt;type === 'property' &amp;&amp;
            !$this-&gt;view-&gt;doctype()-&gt;isHtml5() &amp;&amp; $item-&gt;type === 'property') {
            return false;
        }
</code></pre>

<p>you could use this code:</p>

<pre class="highlight"><code>

class myHeadMeta extends Zend_View_Helper_HeadMeta {

    /**
     * Determine if item is valid
     *
     * @param  mixed $item
     * @return boolean
     */
    protected function _isValid($item)
    {
        if ((!$item instanceof stdClass)
            || !isset($item-&gt;type)
            || !isset($item-&gt;modifiers))
        {
            return false;
        }

        if (!isset($item-&gt;content)
        &amp;&amp; (! $this-&gt;view-&gt;doctype()-&gt;isHtml5()
        || (! $this-&gt;view-&gt;doctype()-&gt;isHtml5() &amp;&amp; $item-&gt;type !== 'charset'))) {
            return false;
        }

        //  is only supported with doctype RDFa
        if (!$this-&gt;view-&gt;doctype()-&gt;isRdfa() &amp;&amp; $item-&gt;type === 'property' &amp;&amp;
            !$this-&gt;view-&gt;doctype()-&gt;isHtml5() &amp;&amp; $item-&gt;type === 'property') {
            return false;
        }

        return true;
    }

}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Weinraub (papayasoft) on 2011-02-13T21:03:18.000+0000</p> 
        <div class="body">
            <p>Well, I'm clearly a total bonehead. I was looking at an earlier version.</p>

<p>[Side note: Pleased to see that the implementation of "appendProperty()" is pretty much as I was suggesting: per modification of the regex in the "__call()" method.]</p>

<p>Still, I guess this resolves the issue, eh?</p>

<p>Thanks and cheers!</p>

        </div>
    </div>
    </div>

