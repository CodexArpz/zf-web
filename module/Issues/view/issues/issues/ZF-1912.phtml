<h2>ZF-1912: Message concurrency between options notEmptyMessage and  Zend_Validate_Alpha::STRING_EMPTY</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-09-06T04:52:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-18T03:03:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Laurent Melmoux (laurent melmoux)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter_Input</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7034">ZF-7034</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm not sure if it's the correct behavior or not but if you set notEmptyMessage in the options array and you use a validation rule which handle empty message like Zend_Validate_Alpha the "generic" message notEmptyMessage will not be use in favor of  which handle Zend_Validate_Alpha::STRING_EMPTY.</p>

<p>By setting  notEmptyMessage in the options I was expecting to have the same message for all empty value.</p>

<pre class="highlight"><code>
$data = array('title'=&gt;'');

$validators = array(
    'title' =&gt; array('Alpha', 'presence' =&gt; 'required')
);

$options = array(
    'missingMessage'  =&gt; "Le champ '%field%' est manquant",
    'notEmptyMessage' =&gt; "Le champ '%field%' est requis"
);

$input = new Zend_Filter_Input(null, $validators, $data, $options);

print_r($input-&gt;getMessages());
// Output
// Array ( [title] =&gt; Array ( [0] =&gt; '' is an empty string ) ) 

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-10-17T15:28:42.000+0000</p> 
        <div class="body">
            <p>Changing to 'Unassigned'</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:29.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:54.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T16:58:29.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize/assign as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-26T10:50:15.000+0000</p> 
        <div class="body">
            <p>Please evaluate and close this issue as appropriate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2009-05-18T06:15:02.000+0000</p> 
        <div class="body">
            <p>There are actually a set of additional issues:
* Zend_Filter_Input skips ALLOW_EMPTY metacommand processing if any validator is applied to the field - [ZF-6708];
* Zend_Filter_Input doesn't process messages -&gt; validators mapping correctly - [ZF-6709].
* Zend_Filter_Input skips ALLOW_EMPTY metacommand processing if rule refers several fields - [ZF-6711]
* Zend_Filter_Input skips validators processing if ALLOW_EMPTY metacommand is set to true - [ZF-6713]</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2009-05-22T08:13:57.000+0000</p> 
        <div class="body">
            <p>Fixed.</p>

<p>ALLOW_EMPTY overrides other validators processing now. The same behavior is described in the documentation.</p>

<p>Empty fields are never processed by rule validators.
If field is empty and it's allowed, then other validators processing is skipped.
If field is empty and it's not allowed, then corresponding message is set.</p>

        </div>
    </div>
    </div>

