<h2>ZF-8929: Zend_Filter_Compress_Tar has hard dependency on legacy PEAR component.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-25T08:31:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-25T10:40:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Filter_Compress_Tar currently has a hard dependency on the PEAR package Archive_Tar. There are outstanding serious issues with this PEAR package and I also consider it to be a design flaw that a class in Zend Framework would have a hard dependency on legacy PHP4 packages.</p>

<p>In the last three years, I cannot remember a time when the Archive_Tar package worked as expected without one issue or another and in fact on several platforms, and the current release (1.3.5) has issues whereby it will silently exclude files from file sets that contain large amounts of files and directories.</p>

<p>I do not have PEAR bug reports for these issues (although there are some outstanding which may or may not be related); and as Archive_Tar is legacy PHP4 and I have no interest in helping maintain these old packages. It is suffice to say that on three different Linux distributions Archive_Tar silently excludes files where the installed system Tar utility does not.</p>

<p>Zend_Filter_Compress_Tar should not be shipped in it's current form.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-01-25T09:01:22.000+0000</p> 
        <div class="body">
            <p>Many would consider it a "design flaw" to re-implement functionality that has already been created elsewhere (something that, unfortunately, we've done too many times in ZF). As for relying on legacy PHP4 packages, while it's unfortunate, it's not a deal-breaker for us so long as the package does the work as advertised.</p>

<p>Regarding the issues you indicate, I see no issue reports in the PEAR bug tracker detailing anything like what you're reporting; there are several patches for manually specifying files and/or directories to exclude, but no issues indicating that this is happening arbitrarily and in an unwanted fashion.</p>

<p>As such, I see no reason currently not to ship the filter. If issues do occur, we can push them upstream and either put pressure on the Archive_Tar developers to correct them or assist them in the process.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2010-01-25T10:05:43.000+0000</p> 
        <div class="body">
            <p>Or we could implment it properly in ZF (I already wrote a tar writer/reader, so that's really no huge deal, the format is pretty simple and straight forward), which would only take a day or two at max.</p>

<p>I mean, we said once, that we are not going to supply wrappers around native PHP functions in ZF, so why should we write wrappers around other libraries then? Additionally you said, you didn't want to have the refactored Zend_Config_Xml because XMLReader wasn't installed by default. Shouldn't the same reason apply to this issue, as PEAR (specially Archive_Tar) is not installed by default?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-01-25T10:21:47.000+0000</p> 
        <div class="body">
            <p>You're comparing apples to oranges. The "Tar" compression adapter is opt-in, with other adapters available as well, and the requirements are spelled in up front; we have a similar requirement in Zend_Test_PHPUnit (requires PHPUnit in order to work), though that component has no other adapters for you to choose from. Zend_Config, on the other hand, is a standard, default component used by a large number of developers; making a requirement for functionality that may not be present in their PHP installation would make ZF unusable for them. (That said, it's possible we need to reconsider XMLReader support for Zend_Config_Xml, as I've communicated to you privately; it just wasn't slated for the 1.10 timeframe due to the number of other balls I've been juggling the last few weeks.)</p>

<p>If Archive_Tar does prove to be buggy, and the upstream developers are unwilling to work on fixes, we can consider then whether or not we should include a tar de/compression library in ZF; until then, let's see how it works.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-01-25T10:23:08.000+0000</p> 
        <div class="body">
            <p>We can resurrect this issue later if users report problems with Archive_Tar.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-25T10:39:59.000+0000</p> 
        <div class="body">
            <p>As component author and maintainer of Zend_Filter I completly agree.</p>

<p>Before integrating the Tar Adapter I looked at any open issues or problems which have been told to PEAR. As TAR itself is only a adapter, (which means that you can use it when you wish to, but there is no need to install PEAR to use the compression filters), there was no problem first hand.</p>

<p>The TAR archive itself is very simple. I also had in mind to create it manually, but decided against because of unnecessary double work.</p>

<p>As long as there are no big problems in handling and the main reason is to install some pear files I see no problem to use and integrate this adapter.</p>

        </div>
    </div>
    </div>

