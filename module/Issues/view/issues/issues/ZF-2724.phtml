<h2>ZF-2724: Error supression on calls to loadClass across ZF obscuring parse errors</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-24T18:20:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-22T08:45:10.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Mark Maynereid (mim)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2463">ZF-2463</a></li>
            <li><a href="/issues/browse/ZF-2923">ZF-2923</a></li>
            <li><a href="/issues/browse/ZF-2577">ZF-2577</a></li>
            <li><a href="/issues/browse/ZF-3037">ZF-3037</a></li>
            <li><a href="/issues/browse/ZF-2701">ZF-2701</a></li>
            <li><a href="/issues/browse/ZF-2924">ZF-2924</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi this relates to error suppressed calls on loadClass by numerous components. See grep -R "@Zend_Loader::loadClass" trunk|grep -v ".svn" So I thought it best to log it here.</p>

<p>As the grep reveals, there are a number of  "@Zend_Loader::loadClass" calls across the library. I just spent 30 minutes trying to track down why I had a blank page and no error log messages.</p>

<p>After resorting to:
echo "Got this far stabbing in the dark without a  flipping error message" in umpteen files, I finally tracked it down to Zend_Db_Table_Abstract::createRow() in this case which was calling  "@Zend_Loader::loadClass" on my subclassed version of Zend_Db_Table_Row and supressing the message "Parse error: syntax error, unexpected T_VARIABLE, expecting ';' " - something I'd expect to fix in a second not half an hour littering my files with markers to track it down.</p>

<p>Sorry if my tone sounds peeved but I'd previously been burnt by this same practice occurring in Zend_Loader itself, see: <a href="http://framework.zend.com/issues/browse/ZF-2463">http://framework.zend.com/issues/browse/ZF-2463</a></p>

<p>This is really frustrating. It's like some kind of copy/paste propagated virus in ZF :D  I hope this practice <em>specifically</em> on class loading can be stamped out once and for all. I see no reason why parse errors should ever be suppressed.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-02-25T13:33:52.000+0000</p> 
        <div class="body">
            <p>Assigning and unsetting fix version priority until this issue has been reviewed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joakim Nyg√•rd (jokke) on 2008-03-28T16:08:41.000+0000</p> 
        <div class="body">
            <p>I couldn't agree more - a standard library (or framework) should not, ever, silence errors on it's own (unless, possibly, they can be handled gracefully). I spent almost half an hour looking for the culprit, nummerous misplaced @s in Zend_Db_*. It makes it almost impossible to debug.</p>

<p>On top of this, the @ operator slows things down a great deal as this is what really happens:</p>

<p>$old = ini_set("error_reporting", 0); 
...
ini_set("error_reporting", $old);</p>

<p>Since I removed the @s in Zend for my current project, I could easily produce a patch if needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by James Dempster (letssurf) on 2008-04-09T09:49:55.000+0000</p> 
        <div class="body">
            <p>Grr I just spent over an our trying to work out why my script died on $myTable-&gt;createRow($data);</p>

<p>It turns out my _rowClass object had a parse error in it cause I was implementing a interface that didn't quite match fully. But the dam @Zend_Loader::loadClass($this-&gt;_rowClass); on line 1126 of Zend_Db_Table_Abstract stopped me from seeing the parse error!</p>

<p>Hope this will get fixed soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-04-23T10:53:55.000+0000</p> 
        <div class="body">
            <p>I resolved ZF-2985 today.  Please tell me if ZF-2985 causes something wrong.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by James Dempster (letssurf) on 2008-05-07T04:56:07.000+0000</p> 
        <div class="body">
            <p>I'd like to rise the priority of this. I'd personally like to see it raised to blocker but I start with critical.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-22T08:45:10.000+0000</p> 
        <div class="body">
            <p>Resolved in r12770; however, this represents a slight change in behavior, and is also dependent on changes introduced for ZF-2923 committed with r12769, and will not release until 1.8.0.</p>

        </div>
    </div>
    </div>

