<h2>ZF-11502: Zend_Session_Namespace does not work in chrome browser.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-06-22T20:17:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-13T18:51:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Session</li>
            <li>Zend_Session_Namespace</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Session_Namespace does not work in chrome browser. The site is sandbox.oggiedomani.org. The navigation choice is saved in session. It works in Firefox 4 and IE 9. However, Chrome browser doesn't store the session.
I use Zend Session as following</p>

<pre class="highlight"><code>
$restNamespace = new Zend_Session_Namespace('explorenyc');
if(!isset($restNamespace-&gt;boro)){
    $restNamespace-&gt;boro = array();
}
if(!empty($input-&gt;do)){
    if($input-&gt;do=="add" &amp;&amp; !empty($input-&gt;val)){
        if($input-&gt;obj=="cuisine"){
            $restNamespace-&gt;cuisine[$input-&gt;val] = 1;
        }

        else if($input-&gt;obj=="boro"){
            $restNamespace-&gt;boro[$input-&gt;val] = 1;
        }
                            
            
        else if($input-&gt;obj=="neighborhood"){
            $restNamespace-&gt;neighborhood[$input-&gt;val] = 1;
        }
        
    }
    if($input-&gt;do=="clear" &amp;&amp; !empty($input-&gt;val)){
        if($input-&gt;obj=="cuisine"){
            unset($restNamespace-&gt;cuisine[$input-&gt;val]);
        }
        else if($input-&gt;obj=="boro"){
            unset($restNamespace-&gt;boro[$input-&gt;val]);
        }
        else if($input-&gt;obj=="neighborhood"){
            unset($restNamespace-&gt;neighborhood[$input-&gt;val]);
        }
    }
    if($input-&gt;do=="clearall"){
        unset($restNamespace-&gt;cuisine);
        unset($restNamespace-&gt;boro);
        unset($restNamespace-&gt;neighborhood);
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Vlad (vlad.vinnikau) on 2011-06-26T03:45:56.000+0000</p> 
        <div class="body">
            <p>Let me know any suggestions to resolve the problem. The issue is replicated on localhost using wamp. I appreciate your help.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Hausammann (tharkun) on 2011-07-01T14:55:01.000+0000</p> 
        <div class="body">
            <p>This problem also causes Zend_Auth to fail in Chrome under PHP 5.3 only.
Login is possible but Zend_Auth::getInstance()-&gt;hasIdentity() returns false because of the session problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Hausammann (tharkun) on 2011-07-20T11:07:28.000+0000</p> 
        <div class="body">
            <p>Anything going on with this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Vlad Vinnikov (vlad.vinnikov) on 2011-07-20T14:02:40.000+0000</p> 
        <div class="body">
            <p>Zend session doesn't work well with associative arrays. I got it working with indexed array.</p>

<p>&lt;?php</p>

<p>class IndexController extends Zend_Controller_Action
{</p>

<pre><code>public function init()
{
    /* Initialize action controller here */
}

public function indexAction()
{
    // action body
    $test = new Zend_Session_Namespace('test');
    if(!empty($test-&gt;one)){
        $one = $test-&gt;one;
        $one = " abc ".$one;
        $test-&gt;one = $one;
    }
    else{
        $test-&gt;one = "hello";
    }
    $this-&gt;view-&gt;test = $test-&gt;one;

    if(!empty($test-&gt;sal)){
        $sal = $test-&gt;sal;
        $pos = rand(0, 9);
        $sal[$pos] = rand(30000, 170000);
        $test-&gt;sal = $sal;

}
    else{
        $arr = array();
        for($i=0; $i&lt;10; $i++){
            $arr[$i] = 1;
        }
        $test-&gt;sal = $arr;

    }

    $this-&gt;view-&gt;sal = $test-&gt;sal;
}
</code></pre>

<p>}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Hausammann (tharkun) on 2011-07-21T15:06:43.000+0000</p> 
        <div class="body">
            <p>This is actually a bug in PHP, $_REQUEST does not contain $_COOKIE anymore. The php.ini setting request_order = "GPC" fixes the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Hausammann (tharkun) on 2011-07-21T15:09:06.000+0000</p> 
        <div class="body">
            <p>see also <a href="https://bugs.php.net/bug.php?id=51210">https://bugs.php.net/bug.php?id=51210</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Hausammann (tharkun) on 2011-07-22T11:18:31.000+0000</p> 
        <div class="body">
            <p>I was somehow mistaken, the request_order = "GPC" setting does NOT fix the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Vlad Vinnikov (vlad.vinnikov) on 2011-07-22T13:56:44.000+0000</p> 
        <div class="body">
            <p>Another solution is to avoid using session all together. I can pass arguments in the query string instead: <a href="http://example.com/search?find_desc=burger&amp;ns=1&amp;find_loc=Midtown+East%2C+Manhattan%2C+NY">http://example.com/search/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Hausammann (tharkun) on 2011-07-22T14:05:23.000+0000</p> 
        <div class="body">
            <p>Well, if you use Zend_Auth that really doesn't help.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2011-07-26T14:10:42.000+0000</p> 
        <div class="body">
            <p>Set component and auto-reassign.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sebastian Galenski (galenski) on 2011-09-13T15:29:40.000+0000</p> 
        <div class="body">
            <p>heard like a missing favicon.ico. chrome makes a new thread for requesting the favicon.ico. so if you handle 404 requests in a way with updating a session-cookie you will get a new session-id and your visible browser tab session has an other session than the "favicon" request! check your serverlogs and 404 handling.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rowinson Gallego Medina (rowgm) on 2011-11-29T04:50:28.000+0000</p> 
        <div class="body">
            <p>Is there any solution? It's so annoying that all my ZF apps will not work well in Chrome.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rowinson Gallego Medina (rowgm) on 2011-11-29T06:04:28.000+0000</p> 
        <div class="body">
            <p>Yes Sebastian Galenski, I found that problem too. I print the $response object in every preDispatch call in my bootstrap and Chrome always asks for the favicon.ico. Thank you so much!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-03-13T18:51:54.000+0000</p> 
        <div class="body">
            <p>This is not an issue with Zend Framework itself.  It is an issue with how Chrome requests favicon files in parallel with the initial GET request.</p>

        </div>
    </div>
    </div>

