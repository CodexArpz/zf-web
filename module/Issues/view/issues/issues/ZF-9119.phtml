<h2>ZF-9119: Zend_Date::isBetween()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-02-08T23:55:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Would be nice to have Zend_Date::isBetween($start, $end) function, that will return TRUE if $this is between the given dates.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Raphael Dehousse (thymus) on 2010-07-14T23:46:26.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>Indeed, this improvement would be welcomed :)</p>

<p>It would be as simple as that:</p>

<pre class="highlight"><code>
public function isBetween($dateLeft, $dateRight, $part=null, $locale=null)
{
    return $this-&gt;isLater($dateLeft, $part, $locale)
        &amp;&amp; $this-&gt;isEarlier($dateRight, $part, $locale);
}

public function isBetweenIncluding($dateLeft, $dateRight, $part=null, $locale=null)
{
    return $this-&gt;isLaterOrEqual($dateLeft, $part, $locale)
        &amp;&amp; $this-&gt;isEarlierOrEqual($dateRight, $part, $locale);
}

/**
 * Returns if the given date or datepart is earlier or equal
 * For example:
 * 15.May.2000 &lt;-&gt; 13.June.1999 will return true for day, year and date, but not for month
 *
 * @param  string|integer|array|Zend_Date  $date    Date or datepart to compare with
 * @param  string                          $part    OPTIONAL Part of the date to compare, if null the timestamp is used
 * @param  string|Zend_Locale              $locale  OPTIONAL Locale for parsing input
 * @return boolean
 * @throws Zend_Date_Exception
 */
public function isEarlierOrEqual($date, $part = null, $locale = null)
{
    $result = $this-&gt;compare($date, $part, $locale);

    if ($result == -1 || $result == 0) {
        return true;
    }

    return false;
}

/**
 * Returns if the given date or datepart is later or equal
 * For example:
 * 15.May.2000 &lt;-&gt; 13.June.1999 will return true for month but false for day, year and date
 * Returns if the given date is later
 *
 * @param  string|integer|array|Zend_Date  $date    Date or datepart to compare with
 * @param  string                          $part    OPTIONAL Part of the date to compare, if null the timestamp is used
 * @param  string|Zend_Locale              $locale  OPTIONAL Locale for parsing input
 * @return boolean
 * @throws Zend_Date_Exception
 */
public function isLaterOrEqual($date, $part = null, $locale = null)
{
    $result = $this-&gt;compare($date, $part, $locale);

    if ($result == 1 || $result == 0) {
        return true;
    }

    return false;
}
</code></pre>

        </div>
    </div>
    </div>

