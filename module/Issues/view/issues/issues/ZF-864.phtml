<h2>ZF-864: reding index of version 1.9 throws exception &quot;Largest supported segment size (for 32-bit mode) is 2Gb&quot;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-02-07T05:23:04.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-19T14:56:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marc Bennewitz (GIATA mbH) (mben)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10251/index_and_script.zip">index_and_script.zip</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If I create the index with Apache Lucene 1.9 I can not open the the index with your framework:</p>

<pre class="highlight"><code>
exception 'Zend_Search_Lucene_Exception' with message 'Largest supported segment size (for 32-bit mode) is 2Gb' in
:\workspace\GIATA\FlipCat-Vts\library\ZendFramework-trunk\library\Zend\Search\Lucene\Storage\File.php:215
Stack trace:
#0 D:\workspace\GIATA\FlipCat-Vts\library\ZendFramework-trunk\library\Zend\Search\Lucene.php(211): Zend_Search_Lucene_Storage_File-&gt;readLong()
#1 D:\workspace\GIATA\FlipCat-Vts\search.php(22): Zend_Search_Lucene-&gt;__construct('./toptermindex')
#2 {main}
</code></pre>

<p>Filename: ./toptermindex/segments
Filesize: 30
System: Win32</p>

<p>The following information I have found:</p>

<pre class="highlight"><code>
Fields


Field Info

Field names are stored in the field info file, with suffix .fnm.

FieldInfos (.fnm) --&gt; FieldsCount,  FieldsCount

FieldsCount --&gt; VInt

FieldName --&gt; String

FieldBits --&gt; Byte

    * The low-order bit is one for indexed fields, and zero for non-indexed fields.
    * The second lowest-order bit is one for fields that have term vectors stored, and zero for fields without term vectors.

      Lucene &gt;= 1.9:
    * If the third lowest-order bit is set (0x04), term positions are stored with the term vectors.
    * If the fourth lowest-order bit is set (0x08), term offsets are stored with the term vectors.
    * If the fifth lowest-order bit is set (0x10), norms are omitted for the indexed field.

Fields are numbered by their order in this file. Thus field zero is the first field in the file, field one the next, and so on.
Note that, like document numbers, field numbers are segment relative. 
</code></pre>

<p><a href="http://lucene.apache.org/java/docs/fileformats.html#Per-Segment%20Files">Apache Lucene - Index File Formats</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-02-08T10:38:55.000+0000</p> 
        <div class="body">
            <p>Please give a list of index directory with file size.
Is any of index file greater than 2Gb?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2007-02-08T11:10:29.000+0000</p> 
        <div class="body">
            <p>In the attachment is my created index and the script to read this index using ZF.</p>

<p>The index is very small</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-02-11T16:23:44.000+0000</p> 
        <div class="body">
            <p>Fixed.</p>

<p>The problem was caused by large index version numbers (Java Lucene uses current time in milliseconds to initialize index version).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-19T14:56:29.000+0000</p> 
        <div class="body">
            <p>Bookkeeping. Closing old issues and assigning them to the person who ultimately resolved the issue.</p>

        </div>
    </div>
    </div>

