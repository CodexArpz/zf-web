<h2>ZF-8323: self join in FROM method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-11-17T11:37:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-12-19T02:07:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Hans Müller (anno)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ramon Henrique Ornelas (ramon)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I wonder that I can't create a SELF JOIN in FROM method of Zend_Db class.</p>

<p>I use the following code:</p>

<p>$qry_sel = $this-&gt;mdb_conn          -&gt;SELECT()                                          -&gt;FROM(array("n" =&gt; "any_table",
                                                                     "p" =&gt; "any_table"),
                                                         array("n.col1");</p>

<p>After the code</p>

<p>$this-&gt;mdb_conn-&gt;query($qry_sel);</p>

<p>was executed I only can see one alias table in from clause.</p>

<p>I would be very useful to set more than one table in FROM method.</p>

<p>best regards</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2009-11-17T11:48:16.000+0000</p> 
        <div class="body">
            <p>You should be using the join method to join, even if it is to the same table you are selecting from.</p>

<p>Unless there is a use-case for having two alias' for one table in the FROM clause without using JOIN, I think this issue should be closed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Hans Müller (anno) on 2009-11-18T07:06:00.000+0000</p> 
        <div class="body">
            <p>I tried to convert the following sql query but it doesn't work correctly.</p>

<p>SELECT n.name,
         COUNT(*)-1 AS level
    FROM tree AS n,
         tree AS p
   WHERE n.lft BETWEEN p.lft AND p.rgt
GROUP BY n.lft
ORDER BY n.lft;</p>

<p>This is a sql query of "nested sets" method.</p>

<p>I also thing that it should be to complicated to expand this method.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2009-12-05T17:38:00.000+0000</p> 
        <div class="body">
            <p>I agree with Ryan I think this issue should be closed.</p>

<p>Try using the method as mentioned join.</p>

<p><a href="http://framework.zend.com/manual/en/zend.db.select.html">zend_db_select</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Hans Müller (anno) on 2009-12-18T05:05:44.000+0000</p> 
        <div class="body">
            <p>I tested all  these joins but nothing is good enough for it. I think the only way is to expand the from clause of the zend_db class.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2009-12-19T02:04:37.000+0000</p> 
        <div class="body">
            <p>try</p>

<p>$select-&gt;from(array('n' =&gt; 'tree'), array('n.name','COUNT -1 AS level'))
       -&gt;join(array('p' =&gt; 'tree'), 'n.lft = p.lft AND n.lft = p.rgt', array())
       -&gt;group('n.lft')
       -&gt;order('n.lft');</p>

<p>echo $select;</p>

        </div>
    </div>
    </div>

