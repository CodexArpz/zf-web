<h2>ZF-10943: Mysqli: Caching prepared statements fails for inserts</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-01-12T09:48:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-12T09:53:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Following Ryan's advice in ZF-10930 to cache the prepared statement returned by execute(), I did the following:</p>

<p>1) subclass Zend_Db_Adapter_Mysqli and Zend_Db_Adapter_Pdo_Mysql, and implement query() as follows:</p>

<pre class="highlight"><code>
        private $cachePreparedStatement = array();

    public function query($sql, $bind = array())
    {
        if(isset($this-&gt;cachePreparedStatement[$sql]))
        {
            if (!is_array($bind)) {
                $bind = array($bind);
            }

            $stmt = $this-&gt;cachePreparedStatement[$sql];
            $stmt-&gt;execute($bind);
            return $stmt;
        }

        $stmt = parent::query($sql, $bind);
        $this-&gt;cachePreparedStatement[$sql] = $stmt;
        return $stmt;
    }
</code></pre>

<p>I then do something like (pseudo-code):</p>

<pre class="highlight"><code>
    $db-&gt;insert(QUERY1, BIND1);
    $db-&gt;select(...); // read back the values previously inserted (from BIND1)
    $db-&gt;insert(QUERY1, BIND2);
    $db-&gt;select(...); // read back the values previously inserted (from BIND2)
</code></pre>

<p>With Mysqli, the second insert() appears to not execute, because the select fails.</p>

<p>On the other hand, Pdo_Mysql works as expected.  (And both work if I revert this change.)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Anthon Pang, VIP Software Technologies Inc. (vipsoft) on 2011-01-12T09:51:41.000+0000</p> 
        <div class="body">
            <p>Sorry.  Found a similar ticket.  Looks like this is a dupe of ZF-2388.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Anthon Pang, VIP Software Technologies Inc. (vipsoft) on 2011-01-12T09:53:00.000+0000</p> 
        <div class="body">
            <p>ZF-2388</p>

        </div>
    </div>
    </div>

