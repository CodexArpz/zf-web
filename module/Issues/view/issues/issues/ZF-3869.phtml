<h2>ZF-3869:  Document how to test forms which use Zend_Form_Element_Hash</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-06T05:19:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-05T02:53:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.12 (22/Jun/12)</li>
            <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Tobias Schifftner (milchbazi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
            <li>state:patch-ready-for-review</li>
            <li>zf-caretaker-adamlundrigan</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14956/ZF-3869.patch">ZF-3869.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Forms containing a Zend_Form_Element_Hash are not supported by Zend_Test_PHPUnit. The form will not pass as long as you do not send the token as well generated by Zend_Form_Element_Hash. 
See discussion at [<a href="http://www.nabble.com/Zend_Test_PHPUnit-and-hashed-form-elements-td18796568.html">http://nabble.com/Zend_Test_PHPUnit-and-hashed-for…</a>]</p>

<p>A solution might be to retrieve the name of the hash element as well as the hash from Zend_Session and add it by default as $_POST variables:</p>

<p>```
<em>This example is not working.</em> It's just a thought. I'll see whether I can find a working solution.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Stanislav Malyshev (stas) on 2008-11-25T10:02:09.000+0000</p> 
        <div class="body">
            <p>Matthew, what do you think is the best way to handle it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Getelman (dget) on 2010-05-17T09:04:12.000+0000</p> 
        <div class="body">
            <p>Sorry for poor formatting, first time commenting. I was able to solve this by creating a new Zend_Form_Element_Hash object in the test.</p>

<p>Example:</p>

<p>$csrf = new Zend_Form_Element_Hash("csrf");
      $this-&gt;request-&gt;setMethod('POST')-&gt;setPost(
                                 array(
...
                                       'csrf' =&gt; $csrf-&gt;getHash(),
                                       ));</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Getelman (dget) on 2010-05-17T09:30:10.000+0000</p> 
        <div class="body">
            <p>As it turns out, the above didn't actually solve it. I just had another error that masked it.</p>

<p>For reference, the discussion link doesn't work, but <a href="http://zend-framework-community.634137.n4.nabble.com/Zend-Test-PHPUnit-and-hashed-form-elements-td652290.html">http://zend-framework-community.634137.n4.nabble.com/…</a> does.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2011-01-07T05:30:34.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
$csrf = new Zend_Form_Element_Hash("csrf");

$hash = $csrf-&gt;getHash();
$csrf-&gt;initCsrfToken();
$csrf-&gt;initCsrfValidator();

$this-&gt;request-&gt;setMethod('POST')-&gt;setPost(
array(
...
'csrf' =&gt; $hash,
));
</code></pre>

<p>That would work</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-10-18T23:27:13.000+0000</p> 
        <div class="body">
            <p>This is more of a documentation/awareness issue than an issue with {{Zend_Form_Element_Hash}} itself. I suggest updating the manual entry for that component to outline how forms which use it can be unit tested.  Example:</p>

<pre class="highlight"><code>
Index: documentation/manual/en/module_specs/Zend_Form-StandardElements.xml
===================================================================
--- documentation/manual/en/module_specs/Zend_Form-StandardElements.xml (revision 24514)
+++ documentation/manual/en/module_specs/Zend_Form-StandardElements.xml (working copy)
@@ -522,6 +522,37 @@
             The 'formHidden' view helper is used to render the element in the
             form.
         
+
+        
+            Testing forms containing Zend_Form_Element_Hash
+            
+                When unit testing a form containing a Zend_Form_Element_Hash 
+                it is necessary to call initCsrfToken and 
+                initCsrfValidator before attempting to
+                validate the form.  The hash value of the Zend_Form_Element_Hash 
+                element must also be injected into the array of values passed as the
+                argument to Zend_Form::isValid
+            
+            
+                Simple example of testing a CSRF-protected form
+                
+public function testCsrfProtectedForm() 
+{
+    $form = new Zend_Form();
+    $form-&gt;addElement(new Zend_Form_Element_Hash('csrf'));
+
+    $csrf = $form-&gt;getElement('csrf');
+    $csrf-&gt;initCsrfToken();
+    $csrf-&gt;initCsrfValidator();
+
+    $this-&gt;assertTrue($form-&gt;isValid(array(
+        'csrf' =&gt; $csrf-&gt;getHash()
+    )));
+}
+
+            
+        
+        
     
 
     </code></pre>

<p>Thoughts?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-03-10T01:18:39.000+0000</p> 
        <div class="body">
            <p>Attached patch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-05T02:53:07.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk (1.12.0): r24757
Fixed in release-1.11 (1.11.12): r24758</p>

<p>Not applicable to ZF2</p>

        </div>
    </div>
    </div>

