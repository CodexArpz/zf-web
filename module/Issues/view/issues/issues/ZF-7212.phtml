<h2>ZF-7212: ulId to be added similar with ulClass</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-07-07T02:03:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-15T14:29:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Br端ckner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Navigation</li>
            <li>FixForZF1.12</li>
            <li>state:patch-ready-for-review</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10233">ZF-10233</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15117/Navigation.patch">Navigation.patch</a></li>
            <li><a href="/issues/secure/attachment/15118/Navigation.tests.patch">Navigation.tests.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I think we should add an ulId param, not just an ulClass.</p>

<p>In certain situations there is more likely to have the ul identified by ID.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Helder Correia (heldercorreia) on 2010-04-01T09:19:39.000+0000</p> 
        <div class="body">
            <p>I completely agree with you on this. I need it right now.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by PHP4Dev (php4dev) on 2010-04-03T05:07:05.000+0000</p> 
        <div class="body">
            <p>I agree totaly.
The class is declared in Zend/View/Helper/Navigation/Menu.php in line 425.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maurice Bonemeijer (sugoi) on 2010-07-27T02:40:25.000+0000</p> 
        <div class="body">
            <p>I agree as well.</p>

<p>Some situations where an id would be desired:
* in many cases it's more efficient to write css selectors based on id
* certain js menu's out there rely on id</p>

<p>I would expect setting an id on a navigation container would be part of the most basic features.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-01-28T09:51:45.000+0000</p> 
        <div class="body">
            <p>The patch should include the following points:</p>

<ul><li>use <a href="http://framework.zend.com/apidoc/core/Zend_View/Helper/Zend_View_Helper_Navigation_HelperAbstract.html#_htmlAttribs">Zend_View_Helper_Navigation_HelperAbstract::_htmlAttribs()</a></li>
<li>use <a href="http://framework.zend.com/apidoc/core/Zend_View/Helper/Zend_View_Helper_HtmlElement.html#_normalizeId">Zend_View_Helper_HtmlElement::_normalizeId()</a></li>
</ul><pre class="highlight"><code>
// start new ul tag
if ($ulClass &amp;&amp; $depth ==  0) {
    $ulClass = ' class="' . $ulClass . '"';
} else {
    $ulClass = '';
}
$html .= $myIndent . '</code></pre><code>' . self::EOL;
</code>

<pre class="highlight"><code>
$attribs = array();

// start new ul tag
if (0 == $depth) {
    $attribs = array(
        'class' =&gt; $ulClass,
        'id'    =&gt; $ulId,
    );
}

$html .= $myIndent . '</code></pre><code>_htmlAttribs($attribs)
                   . '&gt;'
                   . self::EOL;
</code>

<p>Zend_View_Helper_HtmlElement::_htmlAttribs() uses the method "_normalizeId"!</p>

<pre class="highlight"><code>
protected function _normalizeId($value)
{
    $prefix = get_class($this);
    $prefix = strtolower(trim(substr($prefix, strrpos($prefix, '_')), '_'));

    return $prefix . '-' . $value;
}
</code></pre>

<pre class="highlight"><code>
protected function _normalizeId($value)
{        
    // ... no hard coded prefix (@see ZF-10409)

    return parent::_normalizeId($value);
}
</code></pre>

<p>See also ZF-10409</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sebastian Kors (skors) on 2011-02-25T15:05:12.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>it's easy to use your own view helper which adds an id for example.</p>

<p>just create your own view helper class which extends Zend_View_Helper_Navigation_HelperAbstract or Zend_View_Helper_Navigation_Menu and overwrite or replace the mentioned parts.</p>

<p>use your own view helper as follows:</p>

<p>// in your view- or layout script
&lt;?php echo $this-&gt;navigation()-&gt;findHelper('Navigation_MyOwnMenu')-&gt;myOwnMenu()-&gt;mySetIdMethod('mymenuid')-&gt;setUlClass('fancyclass') ; ?&gt;</p>

<p>dont forget to add your library in application.ini for example, so it finds your own view helper.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-05-26T10:39:59.000+0000</p> 
        <div class="body">
            <p>The patch fixes ZF-7212 and the subtask ZF-10409, because the new function for setting an ID uses the normalization of the ID attribute.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-05-29T20:11:10.000+0000</p> 
        <div class="body">
            <p>I can't get patch to apply to trunk.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Br端ckner (frosch) on 2012-05-29T20:37:51.000+0000</p> 
        <div class="body">
            <p>Hi Rob,
I will look into this and create a new patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Br端ckner (frosch) on 2012-06-01T12:57:15.000+0000</p> 
        <div class="body">
            <p>New patch and more unit tests added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-06-06T13:19:03.000+0000</p> 
        <div class="body">
            <p>Looks good to me...patches apply cleanly and all Navigation and View_Helper tests pass.  As this changes the ID normalization, is there a test in place to ensure that the default normalization result is still the same as it was previously?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Br端ckner (frosch) on 2012-06-06T15:14:34.000+0000</p> 
        <div class="body">
            <p>Hi Adam,
yes: {{testSetPrefixForIdWithNull()}}.</p>

<pre class="highlight"><code>
protected function _normalizeId($value)
{
    $prefix = get_class($this);
    $prefix = strtolower(trim(substr($prefix, strrpos($prefix, '_')), '_'));

    return $prefix . '-' . $value;
}
</code></pre>

<pre class="highlight"><code>
protected $_prefixForId = null;

protected $_skipPrefixForId = false;

public function getPrefixForId()
{
    if (null === $this-&gt;_prefixForId) {
        $prefix             = get_class($this);
        $this-&gt;_prefixForId = strtolower(
            trim(substr($prefix, strrpos($prefix, '_')), '_')
        ) . '-';
    }

    return $this-&gt;_prefixForId;
}

protected function _normalizeId($value)
{        
    if (false === $this-&gt;_skipPrefixForId) {
        $prefix = $this-&gt;getPrefixForId();
 
        if (strlen($prefix)) {
            return $prefix . $value;
        }
    }
    
    return parent::_normalizeId($value);
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-06-13T19:55:24.000+0000</p> 
        <div class="body">
            <p>I can't get patch to apply cleaning. Adam, if you can, feel free to apply it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-06-15T14:29:05.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk (1.12.0): r24962</p>

        </div>
    </div>
    </div>

