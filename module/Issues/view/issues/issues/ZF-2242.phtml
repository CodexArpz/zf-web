<h2>ZF-2242: Zend_View_Helper_Form* should use view scripts instead of PHP generated HTML</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-11-28T03:57:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-14T09:38:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Right now the Zend_View_Helper_Form* all generate HTML from the PHP classes.</p>

<p>I think it would be a lot nicer if it would use a view to do this for the whole MVC structure. HTML should never be generated but read and modified instead.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-14T09:38:16.000+0000</p> 
        <div class="body">
            <p>Zend Framework does not ship with view scripts, nor will it; view scripts are a matter of preference, and due to the fact that they are resolved at runtime based on user configuration, this would be a nightmare to maintain, and in most cases would not provide an out-of-the-box form solution for most ZF users. There is, however, no reason you cannot create a decorator that renders view scripts instead (ZF-2654 proposes just such a decorator for use with Zend_Form, btw).</p>

<p>Furthermore, one primary purpose for view helpers is to take repetitive tasks or tasks requiring substantial logic and wrap them in a method that returns <em>content</em>. That last part is particularly important as view helpers are <em>expected</em> to return content; they are a part of the <em>view</em> layer, after all. Form elements fall into both of these categories, and are thus a perfect fit for view helpers.</p>

        </div>
    </div>
    </div>

