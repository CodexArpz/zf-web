<h2>ZF-9270: Zend_Form_Element __construct()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-25T23:46:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-27T14:26:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Aleksey 'Xerkus' Khudyakov (xerkus)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>__construct causes exception throw when element's name specified only in init() method:</p>

<pre class="highlight"><code>
public function __construct($spec, $options = null)
    {
        //skipped

        if (null === $this-&gt;getName()) {
            require_once 'Zend/Form/Exception.php';
            throw new Zend_Form_Exception('Zend_Form_Element requires each element to have a name');
        }

        /**
         * Extensions
         */
        $this-&gt;init();

        //skipped
    }
</code></pre>

<p>I believe init() call should be before checking element's name:</p>

<pre class="highlight"><code>
public function __construct($spec, $options = null)
    {
        //skipped


        /**
         * Extensions
         */
        $this-&gt;init();

        if (null === $this-&gt;getName()) {
            require_once 'Zend/Form/Exception.php';
            throw new Zend_Form_Exception('Zend_Form_Element requires each element to have a name');
        }

        //skipped
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-02-26T04:52:17.000+0000</p> 
        <div class="body">
            <p>What problem would this solve, exactly? The logic is there to assure that a name is provided at instantiation, and hardcoding via init() would make the element non-reusable (as you would not be able to specify an alternate name).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey 'Xerkus' Khudyakov (xerkus) on 2010-02-27T05:21:15.000+0000</p> 
        <div class="body">
            <p>Elements names bound to parameters names in my model so i assumed hardcoding them in subclass is appropriate way.
I see now where i was wrong. I'm new to OOP and not familiar enough with it's ideology.</p>

<p>This issue can be closed as "not a bug"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-02-27T14:26:11.000+0000</p> 
        <div class="body">
            <p>I can imagine some people do want to hardcode a name. To do so, you can just inherit __construct() and set a name before calling the parent.</p>

        </div>
    </div>
    </div>

