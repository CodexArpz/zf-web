<h2>ZF2-167: unable to get territories list</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-02-19T14:15:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-07-09T15:31:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Maks 3w (maks3w)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\I18n</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF2-161">ZF2-161</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>"territory" is not supported anymore by Zend\Locale\Locale::getTranslationList(), it was working perfectly with ZF1, sample code:</p>

<p>Zend\Locale\Locale::getTranslationList("Territory", get_lang(), 2);</p>

<p>throws an error, simply copying the ZF1 code did not work (I'd have posted the patch otherwise).
Bye</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabrizio Balliano (balliano) on 2012-02-19T19:24:35.000+0000</p> 
        <div class="body">
            <p>sorry the previous code contained a call to a custom function, you could just try:</p>

<p>\Zend\Locale\Locale::getTranslationList("Territory", "en", 2);</p>

<p>ZF1 =&gt; working (except for the different syntax)
ZF2 =&gt; not working (territory not coded in Zend\Locale\Data\Cldr::getList() and getContent())</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-05-08T16:08:30.000+0000</p> 
        <div class="body">
            <p>Finally this will not be fixed because there is a plan to remove this component.</p>

<p>With beta5 a new component will be released to cover this features.</p>

<p>As workaround you can use the functions provided by AbstractLocale (getDisplayLanguage, getDisplayScript, getDisplayRegion)</p>

        </div>
    </div>
    </div>

