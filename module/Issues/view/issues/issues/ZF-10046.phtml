<h2>ZF-10046: Rename Filter not working correctly if abbreviated form used</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-06-24T01:31:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-12T09:25:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Reopened</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.7 (28/Jul/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Julian Pustkuchen (anybody)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Please notice that there seems to be a heavy bug if you try to use the "rename" filter on each file before "receive" (to prevent problems with files being uploaded that have identical the same name (but don't have to be the same file)):</p>

<p>Register a filter object instead of the 3-parameter-style to make it work, as following:</p>

<pre class="highlight"><code>
&lt;?php
[...]

//Dateien individuell umbenennen, sonst gibt es Probleme mit gleichnamigen Dateien.
        $files = $parFileTransfer-&gt;getFileInfo();
        //Achtung, Dateien sind an dieser Stelle noch temporär!
        $i = 0;
        foreach($files as $key =&gt; $fileInfo){   
            if(!$fileInfo['name']==''){
                //Jede Datei in ein eigenes, zufälliges Verzeichnis verschieben um Namenskonflikte zu verhindern.
                $parFileTransfer-&gt;addFilter(
                    new Zend_Filter_File_Rename(
                        array(  'source'    =&gt;  $fileInfo['tmp_name'],
                                'target'    =&gt;  $i.$key)
                    )
                );
                $i++;
            }
        }

[...]
?&gt;
</code></pre>

<p>&lt;-- Result absolutely OK!</p>

<hr /><p>The following did not identify the files correctly, even if it should! Result was, that all files were named the same (identity seems to be set wrong in rename). The rename filters were wrongly applied on all files though.</p>

<p>DO NOT USE (this part):</p>

<pre class="highlight"><code>
&lt;?php
[...]
$parFileTransfer-&gt;addFilter('Rename', $i.$key, $fileInfo['tmp_name']);
[...]
?&gt;
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2010-06-24T01:32:29.000+0000</p> 
        <div class="body">
            <p>Changed code stlyle</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2010-06-24T02:27:09.000+0000</p> 
        <div class="body">
            <p>Well, as I found out, there is another problem:</p>

<p>Zend_File_Transfer_Adapter_Abstract can only handle one filter of each type, which is a problem if you have to act on file basis, not on general upload basis:</p>

<p>In "addFilter" this is being done by: "$this-&gt;_filters[$class] = $filter;"</p>

<p>But it should be a construction like: "$this-&gt;_filters[$class][] = $filter;" to act on file basis.</p>

<p>The current implementation only uses the last added filter, which is not the true meaning of "addFilter", but of "setFilter" or something like this.</p>

<p>As described above you have to fix this with no doubt, because else you are never able to upload files named same!!! (not even using this workaround!!) So I expect this as HIGHLY CRITICAL!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2010-06-24T02:30:30.000+0000</p> 
        <div class="body">
            <p>Changed priority because this bug affects general functionality of uploading same named files and the code doesn't work as expected/documented!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-06-27T07:39:15.000+0000</p> 
        <div class="body">
            <p>Degrading priority.</p>

<p>The given example implies that the used code is wrong.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-06-27T07:46:35.000+0000</p> 
        <div class="body">
            <p>Using the temporary name instead of the file element does not work when you use the code given within the manual. This works only when you have another workflow which is not officially documented.</p>

<p>You did not point out when $parFileTransfer should be.
You did not point out how you create the form.
You did not point out how you receive the files.</p>

<p>The actual example can not be verified. Please add some code which can be reproduced to see where you have problems.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2010-06-27T13:09:44.000+0000</p> 
        <div class="body">
            <p>Firstofall, thank you for your quick reply.</p>

<p>Please give me a working example, how to handle a file upload with files having the same name.
In my oppinion it is just not possible using Zend_File_Transfer and that's really bad, isn't it?</p>

<p>If you were able to add several rename filters on file basis, not just one on upload basis, you could use my workaround, but because only the last rename filter can be used (override in ZF as described above) this doesn't work.</p>

<p>I think it is easier if you try to find a solution for the "same file name"-problem yourself, perhaps you will have the same problems. If not, it would be nice if you could add your solution to the documentation and post ist here, because this is a major problem in my eyes.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-07-12T12:05:49.000+0000</p> 
        <div class="body">
            <p>I think you are misunderstanding what issues are.</p>

<p>Creating an issue does not mean that you get your code fixed and developed an solution because you don't know how it works.</p>

<p>It is not my work to show you how you can reproduce your problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-07-12T12:06:55.000+0000</p> 
        <div class="body">
            <p>Closing as not reproduceable with the given example</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2010-07-12T12:23:59.000+0000</p> 
        <div class="body">
            <p>So just two last questions, which I hope you will answer: 
Don't you think that it is bad, that with this Component you are not able to upload two files with the same name at once?</p>

<p>Don't you think that it is bad, that there can only be one filter for each type even if the function is called addFilter (which is misleading)?</p>

<p>And please don't say I don't know how it works, thats not true. If you had a look yourself, you would know.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by netroby (netroby) on 2012-01-12T09:21:42.000+0000</p> 
        <div class="body">
            <p>following code should work for multiple files upload.</p>

<pre class="highlight"><code>
 $target_path =  '/var/www/uploads/';
            $adapter = new Zend_File_Transfer_Adapter_Http();
            $adapter-&gt;addValidator('Size', false, 102400);
            $adapter-&gt;addValidator('IsImage', false, array(
                    'gif',
                    'jpeg',
                    'png'
            ));

            $files = $adapter-&gt;getFileInfo();
            foreach ($files as $file =&gt; $info) {
                if ($info['name'] != '') {
                    if ($adapter-&gt;isValid($file)) {
                        //generate new filename , you can using random hash filename, output 32acb74d.jpg
                        $newFileName = $this-&gt;_getNewFileName($info);
                        $adapter-&gt;clearFilters()-&gt;addFilter(new Zend_Filter_File_Rename( array(
                                'source' =&gt; $info['tmp_name'],
                                'target' =&gt; $target_path . $newFileName,
                                'overwrite' =&gt; TRUE
                        )));
                        if (!$adapter-&gt;receive($file)) {
                            $this-&gt;_uploadFailed($adapter);
                        }
                        $this-&gt;_addEnvPhoto($this-&gt;_getDisplayUrl() . '/' . $newFileName, $info);
                    }
                }
            }
            Zend_Debug::dump($adapter-&gt;getFileInfo());
            Zend_Debug::dump($adapter-&gt;getFilters());
            exit();

</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by netroby (netroby) on 2012-01-12T09:25:44.000+0000</p> 
        <div class="body">
            <p>This issue like to say :</p>

<p>when using Zend_File_Transfer  handle multiple files uploads, we do not know how to move uploads files to right directory.</p>

<p>by document, seems we could using Zend_Filter_File_Rename , but it seems not working correctly.</p>

<p>would you please show me a short code snippet , handle multiple files upload, move upload files to right target directory?  (using ZendFramwork, Zend_File, Zend_Filter and etc)</p>

        </div>
    </div>
    </div>

