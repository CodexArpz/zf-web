<h2>ZF-2620: Zend_Db_Table_Abstract::fetchAll()  doesn't consider a columns, table name and shema (FROM clause) at formation of the Zend_Db_Table_Select</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-12T04:04:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-04T16:09:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Darby Felton (darby)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11140/Abstract.php">Abstract.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Table_Abstract::fetchAll()  doesn't consider a columns, table name and shema (FROM clause) at formation of the Zend_Db_Table_Select.</p>

<pre class="highlight"><code>
        if (!($where instanceof Zend_Db_Table_Select)) {
            $select = $this-&gt;select();

            if ($where !== null) {
                $this-&gt;_where($select, $where);
            }

            if ($order !== null) {
                $this-&gt;_order($select, $order);
            }

            if ($count !== null || $offset !== null) {
                $select-&gt;limit($count, $offset);
            }

        } else {
            $select = $where;
        }

        $rows = $this-&gt;_fetch($select);
</code></pre>

<p>If the developer will want to specify own fields when building the query (for example in a method _setupMetadata () of his class that extends Zend_Db_Table_Abstract) they will not be considered and instead of this all fields will be fetched.</p>

<p>To fix this, we need to correct a code above:</p>

<pre class="highlight"><code>
        if (!($where instanceof Zend_Db_Table_Select)) {
            $select = $this-&gt;select();

            if ($where !== null) {
                $this-&gt;_where($select, $where);
            }

            if ($order !== null) {
                $this-&gt;_order($select, $order);
            }

            if ($count !== null || $offset !== null) {
                $select-&gt;limit($count, $offset);
            }
           
            // here is changes
            $select-&gt;from($this-&gt;_name, $this-&gt;_cols, $this-&gt;_schema);
        } else {
            $select = $where;
        }

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Denis V. Kozlov (dekoo) on 2008-02-12T05:38:16.000+0000</p> 
        <div class="body">
            <p>Zend_Db_Table_Abstact with the specified changes</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2008-02-16T21:42:50.000+0000</p> 
        <div class="body">
            <p>This isn't really required. How it works is that:-</p>

<ul><li>A $select object is instantiated, as you've noted above</li>
<li>When the __toString() method of the $select object is called, the object checks for a 'FROM' table</li>
<li>If one doesn't exist, it adds it, using the method described above, so any change to _name, _cols or _schema will be automatically added</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2008-03-04T16:09:12.000+0000</p> 
        <div class="body">
            <p>Resolving as not an issue. Please feel free to reopen with additional information regarding the requirement of this patch or further specification of the problem.</p>

        </div>
    </div>
    </div>

