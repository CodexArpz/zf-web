<h2>ZF-6521: Zend_Config_Writer_Ini adds anti-slashes to strings</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-04T09:51:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-12-17T17:52:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Aymeric le Gouvello (kaeran)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config_Writer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12389/NoDoubleQuotes.patch">NoDoubleQuotes.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Config_Writer_Ini adds anti-slashes to strings when it writes data into files the same as does Zend_Config_Writer_Array.
but it encloses the string in " " quotes.</p>

<p>Once you read the file, strings remain escaped with anti-slashes and you have to parse your Zend_Config object.</p>

<p>Workaround : in Zend_Config_Writer_Ini function's _prepareValue(), don't parse strings with addslashes().</p>

<p>Hope report correct and appropriate. its my first.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2009-11-19T11:56:55.000+0000</p> 
        <div class="body">
            <p>When reading an .ini file with parse_ini_file(), all double quotes - escaped or not - are removed: so str"ing becomes string and str\"ing becomes str\ing.</p>

<p>Talked with Ben about this, removing the addslashes() and throwing an Exception when a double quote is inside the stored value.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2009-11-19T12:37:53.000+0000</p> 
        <div class="body">
            <p>Attached the diff which should fix this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2009-11-19T12:51:16.000+0000</p> 
        <div class="body">
            <p>Attached the diff</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2009-11-19T13:10:47.000+0000</p> 
        <div class="body">
            <p>Reassigning to Ben so he can commit the patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ken Chou (kenchou77) on 2009-11-26T00:49:02.000+0000</p> 
        <div class="body">
            <p>double quotes in value may cause .ini file incorrect.</p>

<p>--- reproduct code: ---</p>

<p>require_once 'Zend/Config/Writer/Ini.php';
require_once 'Zend/Config/Ini.php';</p>

<p>$data = array(
  'testKey' =&gt; 'test"quotes',
  'nextKey' =&gt; 'blah,blah,blah...',
);
$file = 'test.ini';</p>

<p>$config = new Zend_Config($data);
// write
$options = array('config' =&gt; $config , 'filename' =&gt; $file);
$writer = new Zend_Config_Writer_Ini($options);
$writer-&gt;write();</p>

<p>// read
$config = new Zend_Config_Ini($file);
var_dump($config-&gt;toArray());</p>

<p>--- expect result ---
array(2) {
  ["testKey"]=&gt;
  string(10) "testquotes"
  ["nextKey"]=&gt;
  string(17) "blah,blah,blah..."
}</p>

<p>--- actual result ---
array(1) {
  ["testKey"]=&gt;
  string(39) "test\quotes
nextKey = blah,blah,blah..."
}</p>

        </div>
    </div>
    </div>

