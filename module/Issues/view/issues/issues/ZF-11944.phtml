<h2>ZF-11944: Zend_Navigation_Page_Mvc::isActive() is broken for forwarded requests</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-12-16T12:00:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-12T14:36:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Grimalovsky (flying)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Navigation</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14988/screen1.png">screen1.png</a></li>
            <li><a href="/issues/secure/attachment/14989/screen2.png">screen2.png</a></li>
            <li><a href="/issues/secure/attachment/14990/screen3.png">screen3.png</a></li>
            <li><a href="/issues/secure/attachment/14976/ZF-11944.patch">ZF-11944.patch</a></li>
            <li><a href="/issues/secure/attachment/14987/zf11944.zip">zf11944.zip</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>{{Zend_Navigation_Page_Mvc::isActive()}} uses {{Zend_Controller_Request_Http::getParams()}} and performs comparison of its properties against received list of parameters. But in a case if controller object uses e.g. {{Zend_Controller_Action::<em>forward()}} during request handling or if module/controller/action are changed somehow else - {{isActive()}} will fail because module/controller/action properties that came from {{getParams()}} are for _initial</em> state of request, not for <em>current</em> state.</p>

<p>Correct code would also take values of module/controller/action properties from corresponding methods of {{Zend_Controller_Request_Http}}.</p>

<p>Most likely this problem is actually aboud {{Zend_Controller_Request}}, not about {{Zend_Navigation}}, but I'm not sure if change of behavior of {{Zend_Controller_Request_Http}} will not break some existing code.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-03-22T11:19:08.000+0000</p> 
        <div class="body">
            <p>Hi Alexander,
do you use the navigation helpers before the {{Zend_Controller_Action::forward}} is called?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-03-22T12:29:28.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>No, navigation helpers are not called. Actual scenario is following:</p>

<p>There is {{FormController}} with {{indexAction()}} that displays form and {{saveAction()}} that performs form submission processing. Navigation page entry is {{Zend_Navigation_Page_Mvc}} that points on {{indexAction()}}. Navigation is initialized in application's bootstrap. Form is being submitted to {{saveAction()}} which validates and saves form contents and then run {{$this-&gt;_forward('index');}} {{indexAction()}} creates form and then view is being rendered in a normal way through {{ViewRenderer}} which in its turn performs navigation rendering.</p>

<p>Point of the problem: you know that {{Zend_Controller_Request_Http}} actually have 2 sets of information about module/controller/action:</p>

<h1>Its member variables that are manageable through {{setModuleName()}}/{{setControllerName()}}/{{setActionName()}} object's methods. These are mean to be valid source of information at any time.</h1>

<h1>"module"/"controller"/"action" parameters that are being generated by routing subsystem and set to request object at a time of front controller initialization.</h1>

<p>Main point is that second set of information in general case is valid only at a time of request object initialization, any subsequent call to {{setModuleName()}}/{{setControllerName()}}/{{setActionName()}} will make second set of information <em>out of sync</em>.</p>

<p>And as you can see in {{Zend_Navigation_Page_Mvc::isActive()}} - it uses second set of information as a source and it leads to the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-03-22T12:30:32.000+0000</p> 
        <div class="body">
            <p>Here is patch for this bug against ZF v1.11.11
It is tested on real application ad works fine for me</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-03-22T13:03:07.000+0000</p> 
        <div class="body">
            <p>{quote}FormController{quote}
The controller name irritates me. This controller handles forms? Or handles the controller some "real" objects like users, customers, products etc.?
{quote}There is FormController with indexAction() that displays form and saveAction() that performs form submission processing. Navigation page entry is Zend_Navigation_Page_Mvc that points on indexAction(). Navigation is initialized in application's bootstrap. Form is being submitted to saveAction() which validates and saves form contents and then run $this-&gt;_forward('index'); indexAction() creates form and then view is being rendered in a normal way through ViewRenderer which in its turn performs navigation rendering.{quote}
Simple workaround: Use only the {{indexAction}}!</p>

<ul><li>create and validate the form</li>
<li>save the data</li>
<li>and redirect (not forward!) to the same action (use the <a href="http://framework.zend.com/manual/en/zend.controller.actionhelpers.html#zend.controller.actionhelpers.redirector">Redirector</a> with (e.g.) {{gotoRouteAndExit}} )</li>
</ul><p>Therefore, no {{saveAction}} is needed.</p>

<p>{quote}It is tested on real application ad works fine for me{quote}
This is your luck, but we need unit tests for this! ;-)</p>

<p>I will look at this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-03-22T13:19:09.000+0000</p> 
        <div class="body">
            <p>Name of controller and other things are just for example and not real, but similar to real.</p>

<p>Yes, I know about usage of indexAction only, thank you.</p>

<p>However, as I wrote above - source of the problem is not in this particular scenario but in wrong information source that is used by Zend_Navigation_Page_Mvc.</p>

<p>About unit tests - I'm not so good in this area yet unfortunately. Will try to improve myself in this area.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-03-22T13:39:23.000+0000</p> 
        <div class="body">
            <p>Another workaround: Before output the navigation, call on all mvc pages in the container {{setActive(false)}}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-03-22T13:59:51.000+0000</p> 
        <div class="body">
            <p>Okay, I have written some unit tests. Your solution brings no improvement if the request object is changed.
At the moment I see no option to check if a {{forward}} is performed or not.</p>

<p>I still think in your application a navigation helper is called too early. Can you create a small package from your application where I can reproduce the problem?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-03-22T14:25:12.000+0000</p> 
        <div class="body">
            <p>Yes, I will try to prepare some test case to reproduce the problem, will let you know</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-04-07T16:04:38.000+0000</p> 
        <div class="body">
            <p>Sorry for delay with this example.</p>

<p>Attached archive contains simple project that demonstrates the problem. Please put Zend Framework in path before usage.</p>

<p>After launching you will see indicator of current page ("This is index page" / "This is test page") and simple menu with 2 items - "Index" and "Test". Bold style indicates active menu item.</p>

<p>I've prepared several screenshots to indicate the problem.</p>

<p>screen1: "Index" page is requested and displayed, active menu item is also "Index", all correct.</p>

<p>screen2: "Test" page is requested. Internally, as can be seen in {{IndexController}} - {{testAction}} forwards control to {{indexAction}} so "Index" became current page. It can be seen in page indicator "This is index page", but as can be seen on screenshot - current menu item is "Test", not "Index" as it should be. And it is the problem, this bug is all about.</p>

<p>screen3: It is behavior of application after applying provided patch. As can be seen - page indicator and current menu item are in sync again.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-04-10T10:58:46.000+0000</p> 
        <div class="body">
            
&lt;?php echo $this-&gt;layout()-&gt;content; ?&gt;
&lt;?php echo $this-&gt;navigation(); ?&gt;
&lt;?php
$front   = Zend_Controller_Front::getInstance();
$request = $front-&gt;getRequest();
var_dump($request-&gt;getParams());
?&gt;

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-04-10T12:58:24.000+0000</p> 
        <div class="body">
            <p>Well, problem is not in {{_forward()}} method itself, I've explained it in details [earlier|#comment-50108]. There is no need to check if {{_forward()}} was called (however it is also possible to do, but just doesn't have any sense), instead navigation should use correct source of information about module/controller/action and it will fix the problem. My patch is just about it.</p>

<p>Of course deeper source of the problem is design flaw of ZF1 routing subsystem, but I don't think that it will be fixed, better to wait for ZF2 for it. This bug have smaller scope and fix is provided.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-04-12T13:18:57.000+0000</p> 
        <div class="body">
            <p>Hi Alexander,
I'm an idiot! Have tested your sample application without your patch and also I forgot the methods „getControllerName“ and „getActionName“ in my last code example. Damn!
You are right when you want to know the last called controller and action name.</p>

<p>But I see another problem: a BC break! Because all current tests within „isActive“ based on the request parameters before a {{_forward()}} is called and with your patch the tests based on the last called module, controller and action name after a {{_forward()}}.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-04-12T14:00:45.000+0000</p> 
        <div class="body">
            <p>I'm glad that we finally understand each other :)</p>

<p>About possible BC break: since current behavior is incorrect in this particular case (and it is proven already) then tests needs to be updated accordingly to take this case under control. However I don't know much about rules of ZF development in this area and my assumption may be wrong.</p>

<p>From outer code point of view there is unlikely to be some BC break since module/controller/action request parameters are not used to control current state of MVC subsystem and their direct change have no practical sense from ZF point of view.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-04-12T14:24:10.000+0000</p> 
        <div class="body">
            <p>I do not know if a running application out there is affected if we change the current behavior.</p>

<p>But I will speak with the community review team, if we can change the behavior and also write a <a href="http://framework.zend.com/manual/en/migration.html">migration note</a> for 1.12.</p>

<p>Would that be a solution for you?</p>

<p>(By the way your patch doesn't break any unit test.)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2012-04-12T14:36:57.000+0000</p> 
        <div class="body">
            <p>Yes, I think it will be good solution, thank you for your work!</p>

        </div>
    </div>
    </div>

