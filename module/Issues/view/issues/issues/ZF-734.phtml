<h2>ZF-734: Several methods accept $gmt or $locale, but never use these parameters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-01-09T20:04:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.7.0 (18/Jan/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The result of many methods do not change, whether the $gmt parameter is unset, false, or true.</p>

<p>If $gmt is not used, why is it a parameter?</p>

<p>I will begin documenting which ones.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-01-10T10:00:44.000+0000</p> 
        <div class="body">
            <p>Constistency... all functions have (almost) the same functionality</p>

<p>And correct results are not easy to mention if you dont have good date/time knowledge. Even I sometimes switch things, but reviewing the result all comes clear.</p>

<p>Example:</p>

<p>getIso supports $gmt:
Setting GMT = TRUE will only have an effect if timestamp and timezone are closely together</p>

<p>Timezone+2, Timestamp 31.12.1999 23:00:00
will have a result of
getIso(TRUE); -&gt; 01.01.2000 01:00:00 +0200</p>

<p>You see in this situation the day, month, year, and hour are switching.
In most situations the useage of $gmt should be avoided if the user does not know how it works... 
All functions were set to a default behaviour of GMT the user expexts.</p>

<p>In general the useage of GMT aviods the coding of following:</p>

<p>$myzone = $date-&gt;getTimeZone();
$date-&gt;setTimeZone('GMT');
$date-&gt;getIso();
$date-&gt;setTimeZone($myzone);</p>

<p>Hope this makes things a little bit clearer.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-01-12T15:39:26.000+0000</p> 
        <div class="body">
            <p>Object support was added to _week, _month, _year, etc. in a previous changeset.</p>

<p>Thus, $gmt now makes sense for certain situations involving methods calling _week, _month, _year, etc.  When an ambiguous date or date part is provided to one of these methods, a timezone is needed to disambiguate the date / date part.  For other values, such as a week number (e.g. the 3rd week of the year), the day of the week actually depends on the timezone, even though the timestamp (GMT/UTC) is the same.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-01-12T15:40:29.000+0000</p> 
        <div class="body">
            <p>The new patch, coming soon, for adding explicit timezone support and removing the $gmt parameter should resolve this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-01-13T13:13:42.000+0000</p> 
        <div class="body">
            <p>The latest API change excluded GMT from all functions.
The new behaviour is like</p>

<pre class="highlight"><code>
$date = new Zend_Date();
$date-&gt;setTimeZone('Europe/Vienna');
$date-&gt;set('10:20:00');
</code></pre>

<p>Related to $locale.
$locale is used for</p>

<ul><li>Parsing localized input</li>
<li>Creating localized output</li>
<li>Creating/Copying a locale object with another locale than the original</li>
</ul><pre class="highlight"><code>
$date = new Zend_Date('de_AT');
$date-&gt;setTimeZone('Europe/Vienna');
$date-&gt;set('JÃ¤nner', Zend_Date::MONTH);
$date-&gt;set('May', Zend_Date::MONTH, 'en');
print "\n".$date-&gt;toString('MMMM');
print "\n".$date-&gt;toString('MMMM', 'en');
$newone = $date-&gt;copy('en');
print "\n".$newone-&gt;toString('MMMM');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-01-13T13:22:28.000+0000</p> 
        <div class="body">
            <p>The new API which was intruduced with SVN 2717 extracted GMT from all functions.
So this issue is no longer raising.</p>

<p>For further information see ZF-744</p>

        </div>
    </div>
    </div>

