<h2>ZF-12035: Zend_Validate_Hostname fails for punycode of IDN that not contain unicode characters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-01-31T15:38:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-17T09:22:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
            <li>validating</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-12003">ZF-12003</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Validate_Hostname always return {{CANNOT_DECODE_PUNYCODE}} for punycode of IDN that not contain unicode characters.</p>

<p>In protected function {{decodePunycode}} uses next code for validating punycode:</p>

<pre class="highlight"><code>
protected function decodePunycode($encoded)
{

// ...

$separator = strrpos($encoded, '-');
if ($separator &gt; 0) {
    for ($x = 0; $x &lt; $separator; ++$x) {
        // prepare decoding matrix
        $decoded[] = ord($encoded[$x]);
    }
} else {
    $this-&gt;_error(self::CANNOT_DECODE_PUNYCODE);
    return false;
}

// ...
}
</code></pre>

<p>As we know from procedure for Punycode encoding ASCII hyphen can be added to the encoded name after basic characters or if it is one of the basic characters. 
However hyphen may not be present in the Punycode(excluding xn--). For example, if the original name did not contain the basic characters:</p>

<p>{{пример.com (ACE: xn--e1afmkfd.com)}}</p>

<p>Thus function contains a bug that prevents the normal validation for multiple hostnames.</p>

<p>The proposed solution:</p>

<p>Fix incorrect part of function {{decodePunycode}}</p>

<pre class="highlight"><code>
protected function decodePunycode($encoded)
{

// ...

$decoded = array();
$separator = strrpos($encoded, '-');
if ($separator &gt; 0) {
    for ($x = 0; $x &lt; $separator; ++$x) {
        // prepare decoding matrix
        $decoded[] = ord($encoded[$x]);
    }
} else {
    $separator = 0;
}

// ...
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

