<h2>ZF-8858: Add search() to Zend_Mail_Storage_Imap</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2010-01-18T07:01:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail_Storage</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There already is a search() function in Zend_Mail_Protocol_Imap, but it is only used for countMessages() at the moment.</p>

<p>It would be nice to have a search() function in Zend_Mail_Storage_Imap, so we can search the current folder for mails.</p>

<p>Should be very easy, for example this does the job:</p>

<pre class="highlight"><code>
/**
 * get IDs by full body search on IMAP server
 *
 * @param string $searchterm
 * @return array
 */
public function search($searchterm)
{
    $params = array('BODY ' . $searchterm);
    return $this-&gt;_protocol-&gt;search($params);
}
</code></pre>

<p>It would be cool to not only do a full BODY search but also search in specific parts, for example build a complex filter (see RFC 3501 <a href="http://tools.ietf.org/html/rfc3501#page-49">http://tools.ietf.org/html/rfc3501#page-49</a> ). Then building a filter similar to Zend_Ldap_Filter would be perfect.</p>

<p>But in the first version just a simple full BODY search would be a beginning.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2010-04-09T09:41:30.000+0000</p> 
        <div class="body">
            <p>My idea was to have a class, let's call it Zend_Mail_Storage_Set, supporting UIDs, ranges, search, sort, ... An instance of a storage class would have a method set(), which returns a set instance (common or specialized for this storage). A couple of features are not IMAP specific and it wouldn't make sense to just add a new method for one storage.</p>

<p>Zend_Mail_Storage_Set would implement an iterator interface and instead of getting just an id or UID you could also fetch the corresponding message. I have an old mail with a couple of use cases.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Kliewe (mkliewe) on 2010-04-09T10:05:02.000+0000</p> 
        <div class="body">
            <p>Sounds good as long as it is fast. For example if you want to retrieve messages with UID 1-5, it should only call one IMAP command and not 5. 
The same for moving messages, deleting messages and so on. See also my other issues ZF-9138 ZF-8513 ZF-8488</p>

        </div>
    </div>
    </div>

