<h2>ZF-1707: Allow other URI's than &quot;http://...&quot;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-07-11T15:14:52.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-24T05:59:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Shahar Evron (shahar)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, when setting an URI for a Zend_Http_Client, it should be a HTTP URI. However, in some cases a Http-client is usefull with other URI's as well. For instance, I tried to connect to a payment service in the Netherlands: iDEAL. This service requires the client to set up a connection with:</p>

<pre class="highlight"><code>
<a>ssl://host:port</a>
</code></pre>

<p>Using this as a URI for the Zend_Http_Client results in an exception since the URI is not a valid HTTP URI. Zend_Uri supports other scheme's than HTTP, therefore it might be usefull to integrate the same kind of multi-scheme support in the Zend_Http_Client as well.</p>

<p>Quote from the documentation:</p>

<p>{quote}
URIs always begin with a scheme, followed by a colon. The construction of the many different schemes varies significantly. The Zend_Uri class provides a factory that returns a subclass of itself which specializes in each scheme. The subclass will be named Zend_Uri_, where  is the scheme lowercased with the first letter capitalized. An exception to this rule is HTTPS, which is also handled by Zend_Uri_Http.
{quote}</p>

<p>Currently this is the only check:</p>

<pre class="highlight"><code>
if (!$uri instanceof Zend_Uri_Http) {
  throw new Zend_Http_Client_Exception('Passed parameter is not a valid HTTP URI.');
}
</code></pre>

<p>Maybe this can be made more dynamic, give the user the responsibility to provide the proper scheme or so...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2007-07-16T04:12:09.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>In your example, you use:</p>

<pre class="highlight"><code>
<a>ssl://host:port</a>
</code></pre>

<p>How is this related to HTTP? Do you send an HTTP request and get an HTTP response back? If so, then you are using HTTPS which we already support.</p>

<p>Honestly I am not sure I understand the request - are you looking to support other protocols than HTTP? If so, it should not be done through the HTTP Client but through some other clients.</p>

<p>More information or a full use case would be helpful.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Menno Holtkamp (holtkamp) on 2007-07-17T12:01:57.000+0000</p> 
        <div class="body">
            <p>MMM,</p>

<p>you are right. I probably should use the supported HTTPS, currently a socket is opened wih fsockopen():</p>

<pre class="highlight"><code>
$fsp = fsockopen("ssl://ideal.secure-ing.com", 443, $errno, $errstr, 300);
</code></pre>

<p>I did not notice the way SSL support is integrated in Zend_Http_Client. After my vacation I will check this suggestion and report back or close this comment.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2007-07-24T05:59:57.000+0000</p> 
        <div class="body">
            <p>Not an issue than.</p>

        </div>
    </div>
    </div>

