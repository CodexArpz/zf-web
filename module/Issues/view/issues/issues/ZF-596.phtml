<h2>ZF-596: Wrong dispatch result if controller does not exist</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-11-25T13:10:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.6.0 (16/Dec/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is the content of a test case bootstrap file (using revision 1861):</p>

<p>&lt;</p>

<p>pre class="highlight"&gt;<code></code></p>

<pre>
&lt;?php
include 'Zend.php';
function __autoload($class) {
  Zend::loadClass($class);
}

$request = new Zend_Controller_Request_Http('<a href="http://example.com/bar/foo">http://example.com/bar/foo</a>');

$controller = Zend_Controller_Front::getInstance();
$controller-&gt;setControllerDirectory('.');
$response = $controller-&gt;dispatch($request);

print_r($response);
</pre>

<p>IndexController.php</p>

<pre class="highlight"><code>
&lt;?php
class IndexController extends Zend_Controller_Action {
  public function indexAction() {
    $this-&gt;getResponse()-&gt;setBody('index/index');
  }
  public function fooAction() {
    $this-&gt;getResponse()-&gt;setBody('index/foo');
  }
}
</code></pre>

<p>BarController.php</p>

<pre class="highlight"><code>
&lt;?php
class BarController extends Zend_Controller_Action {
  public function indexAction() {
    $this-&gt;getResponse()-&gt;setBody('bar/index');
  }
  public function fooAction() {
    $this-&gt;getResponse()-&gt;setBody('bar/foo');
  }
}
</code></pre>

<p>As you can see, the request should be routed to {{bar/foo}}. This will result as expected into a response of</p>

<pre class="highlight"><code>
Zend_Controller_Response_Http Object (
  [_body:protected] =&gt; bar/foo
  ...
</code></pre>

<p>But if someone calls {{baz/foo}} instead of {{bar/foo}} the {{index/foo}} is called. This is because the {{Zend_Controller_Dispatcher}} can't find a {{BazController}} class, so it uses the {{getDefaultController()}}'s return value which is 'index'. But it still leaves the action as provided, not using the {{getDefaultAction()}}'s return value.</p>

<p>Apart from this error, in my opinion the dispatch process should distinguish between calling the default controller in case of a controller instantiation error and calling it in case of a not provided controller's name. Otherwise in {{default/default}} one has to check both the controller's name and action's name against the values in {{getRequest()}} to determine if it is called on purpose or accidentally (to know  whether to return either a 200 or a 404 status to the client).</p>

<p>||controller *)||action *)|| should call||controller||action||
|empty|empty| |default|default|
|controller|empty| |controller|default|
|controller|wrong| |controller|__call|
|wrong|whatever| |error|error|
^*)^ as provided by the router</p>

<p>'default' are the values returned by {{getDefaultController()}} and {{getDefaultAction()}} respectively.
'error' are new variables of the dispatcher, used in case of a non-callable controller. These could default to the {{getDefaultXXX()}}'s values. Alternatively a predefined action name of the default controller could be used (like the former 'noRoute').</p>

<p>Btw. the dispatcher's code ends in cleaning up some variables only used in former versions ($reflection, $method).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-28T17:46:17.000+0000</p> 
        <div class="body">
            <p>Assigning to Matthew, scheduling for possible fix in the 0.6.0 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-28T21:51:37.000+0000</p> 
        <div class="body">
            <p>On reflection (no pun intended), I don't think it makes sense to silently call the default controller if the controller was not found; I'm going to opt to throw an exception in this case. The router can determine if the controller is routable, and use a default if not.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-28T21:59:43.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 1915. Now throws exception if the controller class does not exist.</p>

        </div>
    </div>
    </div>

