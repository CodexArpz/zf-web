<h2>ZF-8615: Twitter geo information not parsed</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-22T11:36:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Darren Lucas (vtwo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Service_Twitter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The geotagging information isn't parsed properly from a tweet with geo information attached.  There is a geo array item returned in the result object but it is empty.</p>

<p>I would guess this is due to the geo information belonging to a different namespace, below is a snippet:</p>

<p>www.georss.org/georss"&gt;
    54.39790844 -1.85352928</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darren Lucas (vtwo) on 2009-12-22T13:28:01.000+0000</p> 
        <div class="body">
            <p>After looking at this further, it seems this issue may actually be a problem with Zend_Rest_Client_Response and SimpleXML needing namespaces to be registered before xpath will read them.</p>

<p>The following code will at least get the coordinates out:</p>

<pre class="highlight"><code>

// Get User Timeline
$twitter = new Zend_Service_Twitter('username','password');
$response = $twitter-&gt;status-&gt;userTimeline();

// Register Namespaces
$simpleXml = $response-&gt;getIterator();
$namespaces = $simpleXml-&gt;getNamespaces(true);
foreach ($namespaces as $prefix =&gt; $ns) {
    $simpleXml-&gt;registerXPathNamespace($prefix, $ns);
}

// Print list of geo tags if they exist
print_r($simpleXml-&gt;xpath('//georss:point'));

</code></pre>

<p>I haven't got as far as trying to patch Zend_Rest_Client_Response to return namespaced elements, but the above code should at least help with demonstrating the problem and / or help someone with implementing a fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darren Lucas (vtwo) on 2009-12-22T13:33:23.000+0000</p> 
        <div class="body">
            <p>^ and when I say Zend_Rest_Client_Response I really mean Zend_Rest_Client_Result</p>

        </div>
    </div>
    </div>

