<h2>ZF-8542: No way to mock a secure request using Zend_Controller_Request_HttpTestCase</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-12-14T09:14:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>While attempting to unit test using Zend_Test_PHPUnit_Controller_TestCase I noticed there is no way to alter the mock request to mimic a secure (HTTPS/SSL) request to my MVC application.</p>

<p>Digging into Zend_Controller_Request_Http I see that isSecure() checks $_SERVER['HTTPS'] to determine whether the accessing request is secure. Using the following:</p>

<pre class="highlight"><code>
class MyControllerTest extends Zend_Test_PHPUnit_Controller_TestCase
{
  public function setUp() {
    $_SERVER['HTTPS'] = 'on'
  }
}
</code></pre>

<p>I can successfully mock a secure request.</p>

<p>I'd rather not alter the super-global $_SERVER and instead would like a publicly accessible function added to Zend_Controller_Request along the lines of:</p>

<pre class="highlight"><code>

public function isSecure()
{
  return $this-&gt;_scheme == 'https';
}

</code></pre>

<pre class="highlight"><code>

protected $_isSecure = false;

public function __construct()
{
  if ($uri-&gt;valid()) {
    $this-&gt;setSecure($uri-&gt;isSecure());
  }
}

public function setRequestUri($requestUri=null)
{
  if (null === $requestUri) {
    $this-&gt;setSecure($this-&gt;getServer('HTTPS') == 'on');
  }
}

public function setSecure($secure=true)
{
  $this-&gt;_isSecure = !!$secure;
  return $this;
}

public function isSecure()
{
  return $this-&gt;_isSecure;
}

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:02.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

