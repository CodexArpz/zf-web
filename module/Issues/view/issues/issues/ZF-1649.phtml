<h2>ZF-1649: Plugin broker should attempt to catch plugin exceptions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-06-28T15:54:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, the plugin broker does no exception handling, which means that if a plugin throws an exception, it escapes the ErrorHandler plugin, thus leading to a possibly broken site.</p>

<p>The proposed solution is to wrap all calls to plugins with try/catch statements:</p>

<pre class="highlight"><code>
foreach ($this-&gt;_plugins as $plugin) {
    try {
        $plugin-&gt;HOOK_NAME();
    } catch (Exception $e) {
        if (Zend_Controller_Front::throwExceptions()) {
            throw $e;
        } else {
            $this-&gt;getResponse()-&gt;setException($e);
        }
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-28T15:56:58.000+0000</p> 
        <div class="body">
            <p>Since some plugins or actions may require the successful completion of a plugin, we will need an API in the request object for retrieving and checking exceptions. The proposed API is:</p>

<pre class="highlight"><code>
    $response-&gt;hasExceptionOfType($type);                                                           
    $response-&gt;hasExceptionOfMessage($message);                                                     
    $response-&gt;hasExceptionOfCode($code);                                                           
    $response-&gt;getExceptionByType($type);                                                           
    $response-&gt;getExceptionByCode($code);                                                           
    $response-&gt;getExceptionByMessage($message);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-29T08:55:50.000+0000</p> 
        <div class="body">
            <p>Resolved in r5499; documentation for response object updated to reflect new API.</p>

        </div>
    </div>
    </div>

