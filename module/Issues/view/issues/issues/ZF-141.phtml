<h2>ZF-141: Possibility to replace placeholders in an existing PDF with form data</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2006-06-23T09:14:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-02-10T16:17:04.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Minor Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12586/setTextField.patch">setTextField.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>PDF standard offers several interactive features. One of them is interactive form processing (sometimes referred to as an AcroForm).</p>

<p>Forms are described by 8.6 section of PDF Reference V1.6</p>

<p>That would be good to have possibility to create PDF form and to fill it.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:26:52.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-05-25T05:49:51.000+0000</p> 
        <div class="body">
            <p>Postponed to post-1.0 period</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:12:05.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Floris Bos (max) on 2010-01-06T19:33:45.000+0000</p> 
        <div class="body">
            <p>I needed this feature, and could not wait, so I added it myself to Zend_Pdf.
Attached my unofficial implementation, for anyone who might find it useful.</p>

<p>Can be used to prepopulate Acroform form fields that already exist in a .pdf, like this:</p>

<p>$pdf = Zend_Pdf::load('input-file-containing-form.pdf');
$pdf-&gt;setTextField('name', 'Someone');
$pdf-&gt;setTextField('address', '1 Main Street');
$pdf-&gt;setTextField('city', 'Cyberspace');
$pdf-&gt;save('outputfile.pdf');</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Xavier Lacot (xavier.lacot) on 2011-02-03T10:10:26.000+0000</p> 
        <div class="body">
            <p>I just added an improved patch based on the one of Floris, which also implements a dummy hasTextField() method</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Xavier Lacot (xavier.lacot) on 2011-02-03T10:14:47.000+0000</p> 
        <div class="body">
            <p>Well, I just seem not to be allowed to post a patch on this ticket...
It is available on demand.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Masten (doobywho) on 2011-06-17T19:47:59.000+0000</p> 
        <div class="body">
            <p>I believe there is something incorrect here somewhere. When trying to use PDFTK to "flatten" the PDF form after filling it in, PDFTK generates a PDF without the form data. However, when creating a FDF file with PHP and filling in the PDF with PDFTK and THEN flattening the file, it works fine.</p>

<p>On a separate note, it would be nice if Zend_PDF could flatten a PDF. I hate having to mess with PDFTK.</p>

        </div>
    </div>
    </div>

