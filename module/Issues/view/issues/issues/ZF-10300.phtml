<h2>ZF-10300: Label gets translated twice</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-12T03:21:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-01T12:26:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8694">ZF-8694</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For Example the message 'my.namespace.country.germany' will translate to 'Deutschland' and then it tries to translate 'Deutschland' again.</p>

<p>As far as I debugged the problem is relativ easy to solve:</p>

<p>Update:
Also Zend_Form_Element_Submit uses the already translated Label</p>

<pre class="highlight"><code>
/**
     * Retrieve element label
     *
     * @return string
     */
    public function getLabel()
    {
        $translator = $this-&gt;getTranslator();
        if (null !== $translator) {
            return $translator-&gt;translate($this-&gt;_label);
        }

        return $this-&gt;_label;
    }
</code></pre>

<pre class="highlight"><code>
/**
     * Get label to render
     *
     * @return void
     */
    public function getLabel()
    {
        if (null === ($element = $this-&gt;getElement())) {
            return '';
        }

        $label = $element-&gt;getLabel();
        $label = trim($label);

        if (empty($label)) {
            return '';
        }

        if (null !== ($translator = $element-&gt;getTranslator())) {
            $label = $translator-&gt;translate($label);
        }

        $optPrefix = $this-&gt;getOptPrefix();
        $optSuffix = $this-&gt;getOptSuffix();
        $reqPrefix = $this-&gt;getReqPrefix();
        $reqSuffix = $this-&gt;getReqSuffix();
        $separator = $this-&gt;getSeparator();

        if (!empty($label)) {
            if ($element-&gt;isRequired()) {
                $label = $reqPrefix . $label . $reqSuffix;
            } else {
                $label = $optPrefix . $label . $optSuffix;
            }
        }

        return $label;
    }
</code></pre>

<pre class="highlight"><code>
    /**
     * Return label
     *
     * If no label is present, returns the currently set name.
     *
     * If a translator is present, returns the translated label.
     *
     * @return string
     */
    public function getLabel()
    {
        $value = parent::getLabel();

        if (null === $value) {
            $value = $this-&gt;getName();
        }

        if (null !== ($translator = $this-&gt;getTranslator())) {
            return $translator-&gt;translate($value);
        }

        return $value;
    }
</code></pre>

<p>As you can see getLabel() from Zend_Form_Element will translate the string and getLabel() from Zend_Form_Element_Decorator translates the already translated string again</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Markus Lanz (stahlstift) on 2010-08-12T03:26:22.000+0000</p> 
        <div class="body">
            <p>A simple fix would be to remove the translation of getLabel() from the decorator, which is also in my opinion a sideeffect.</p>

<p>A fecorator should decorate...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-08-12T04:01:03.000+0000</p> 
        <div class="body">
            <p>Detaching Zend_Translate from the affected components.</p>

<p>The problem is not related to Zend_Translate as it translates whatever Zend_Form gives to be translated. There is no way for Zend_Translate to know if that string, which is given, is already translated, or if it's just an untranslated source string.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Saman Darougheh (excuvator) on 2010-09-27T05:31:56.000+0000</p> 
        <div class="body">
            <p>agree with markus - its simply the decorator that is overtaking irrelevant functions. He should decorate, not <em>change</em> content.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Saman Darougheh (excuvator) on 2010-09-27T05:35:53.000+0000</p> 
        <div class="body">
            <p>as i cannot edit my comment:</p>

<h1>1 remove translating from decorator</h1>

<h1>2 move the conditional translation inside submit-element (ll 80-82 inside the $value === null condition before (ll76-78).</h1>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tobias Stanzel (fctst) on 2010-10-27T05:33:14.000+0000</p> 
        <div class="body">
            <p>i run over the same problem, when i wrote a tool to list all untranslated id for me.</p>

<p>Imho the decorator should not change but decorate the content, so removing the translation from it makes sense. The translation is done by the element allready</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Schroeren (adelius) on 2011-06-16T12:24:01.000+0000</p> 
        <div class="body">
            <p>i stumbled upon this issue while i was writing a custom Zend_Translate_Adapter which is able to organize the translations in my db and uses the logging to collect missing translations.
fixed this issue as described above.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-12-01T12:26:31.000+0000</p> 
        <div class="body">
            <p>Duplicate of ZF-8694.   A fix has been proposed there.</p>

        </div>
    </div>
    </div>

