<h2>ZF-7908: getDateModified() returns incorrect date if RSS feed has near-standard date formatting</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-21T07:05:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-04T06:41:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.3 (22/Sep/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christophe Deliens (cdeliens)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Feed_Reader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7914">ZF-7914</a></li>
            <li><a href="/issues/browse/ZF-8702">ZF-8702</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12243/Rss.patch">Rss.patch</a></li>
            <li><a href="/issues/secure/attachment/12239/Rss.patch">Rss.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have the following date in a RSS feed: 
Sun, 11 Jan 2009 09:55:59 GMT</p>

<p>The getDateModified function in Zend_Feed_Reader_Entry_Rss returns a Zend_Date object corresponding to:
Sun, 01 Nov 2009 09:55:59 +0000</p>

<p>Expected result:
Sun, 11 Jan 2009 09:55:59 +0000</p>

<p>This is a month/day inversion (m-d-Y is US standard, d-m-Y is EU standard).</p>

<p>As it looks like php's builtin strtotime function understands/translates the date string properly, I propose to first try a strtotime conversion before attempting a Zend_Date resolution using RFC standards.</p>

<p>(updated 2009-09-21 16:46 UTC) Proposed working patch for Zend/Feed/Reader/Entry/Rss.php (rev 16966, Zend Framework v1.9.2):</p>

<pre class="highlight"><code>
256a257
&gt;             
257a259,262
&gt;               $dateModifiedParsed = strtotime($dateModified);
&gt;               if ($dateModifiedParsed) {
&gt;                   $date = new Zend_Date($dateModifiedParsed);
&gt;               } else {
277a283
&gt;         }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christophe Deliens (cdeliens) on 2009-09-21T07:06:28.000+0000</p> 
        <div class="body">
            <p>Rss.php patch file</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2009-09-21T08:17:14.000+0000</p> 
        <div class="body">
            <p>Fixed (for given example) in r18340.</p>

<p>Thanks for the report! Give the fix a whirl (in trunk and release-1.9 branch) to see if it checks out for any other dates in the same feed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christophe Deliens (cdeliens) on 2009-09-21T09:41:52.000+0000</p> 
        <div class="body">
            <p>Patch #1 was incorrect... please use this one instead on original file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2009-09-21T10:21:29.000+0000</p> 
        <div class="body">
            <p>Issue is resolved - the example in the description can be parsed using the Zend_Date::RSS option as a second to last resort (really should be RFC 822 or 2822 per the RSS Advisory Standard). So while the patch is not applied, the alternative change does work for the given example.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christophe Deliens (cdeliens) on 2009-09-21T23:34:03.000+0000</p> 
        <div class="body">
            <p>I don't agree Pádraic.</p>

<p>Look closer at the first patch: if "strtotime" can't parse, PHP will return false.
So the variable $dateModified will be FALSE and that value will tried to be parsed by the next "-&gt;set" instructions, which will end in the latest Exception catch and FAIL.</p>

<p>Trust me, I had the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2009-09-22T04:25:49.000+0000</p> 
        <div class="body">
            <p>I'm not sure you're following the logic from the start in how I resolved this. The original issue description includes one example of the problematic parsing. I added a unit test to check the bug exists, using the unit test I added the new parsing set() call, the unit test then passed. Therefore I resolved the issue as fixed. I can't add yet another parsing attempt without a reason to do so, and a unit test to support its application against a date no other step could parse. Is there another date type which requires strtotime()?</p>

        </div>
    </div>
    </div>

