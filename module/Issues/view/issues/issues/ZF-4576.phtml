<h2>ZF-4576: Zend_Session_Namespace::getIterator() returns ArrayObject instead of Iterator</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-12T12:32:07.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-18T14:54:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ryan Korczykowski (theos)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Session</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>IteratorAggregate::getItterator should return instanceof Iterator:  <a href="http://www.php.net/~helly/php/ext/spl/interfaceIteratorAggregate.html">http://php.net/~helly/php/…</a></p>

<p>Namespace returns ArrayObject which does not implement Iterator: <a href="http://www.php.net/~helly/php/ext/spl/classArrayObject.html">http://php.net/~helly/php/…</a></p>

<p>This is moot when using the namespace in a foreach since the foreach calls getItterator on the namespace, and again on the ArrayObject (Im think (?)).</p>

<p>Test:</p>

<pre class="highlight"><code>
Zend_Session::start();
$ns = new Zend_Session_Namespace('test-namespace');
assert($ns-&gt;getIterator() instanceof Iterator);
</code></pre>

<p>Possible Fix:</p>

<pre class="highlight"><code>
Zend_Session_Namespace 182:         return new ArrayIterator(parent::_namespaceGetAll($this-&gt;_namespace));
</code></pre>

<p>Version:
I don't know what version the trunk refers to, here is the @version annotation
$Id: Namespace.php 11003 2008-08-24 14:43:15Z matthew $</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2008-10-15T14:25:30.000+0000</p> 
        <div class="body">
            <p>You are rigth, it's called twice.</p>

<p>However, the patch could break backward compatibility as some users might use specific ArrayObject methods that would raise a fatal error.</p>

        </div>
    </div>
    </div>

