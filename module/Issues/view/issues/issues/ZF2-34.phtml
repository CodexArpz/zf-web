<h2>ZF2-34: Array arguments get flattened when creating Zend\Log\Logger</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-07-13T17:29:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-26T12:35:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Enrico Zimuel (zimuel)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Loader</li>
            <li>bug</li>
            <li>loader</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>App configuration used:</p>

<pre class="highlight"><code>
                 'log'=&gt; array (
            array(
                'writerName' =&gt; 'Stream',
                'writerParams' =&gt; array(
                    'stream' =&gt; APPLICATION_PATH.'/production.log',
                ),
                'formatterName' =&gt; 'Simple',
                'formatterParams' =&gt; array(
                    'format' =&gt; '%timestamp%    %priorityName%  %sessionid% %user%: %message%'.PHP_EOL,
                ),
                'filterName'   =&gt; 'Priority',
                'filterParams' =&gt; array(
                    'priority' =&gt; 4,        // warn
                ),
            ),
        ),
</code></pre>

<p>Result:</p>

<p>{quote}
Fatal error: Uncaught exception 'Zend\Log\Exception\InvalidArgumentException' with message 'Writer must be an instance of Zend\Log\Writer or you should pass a configuration array' in /path/library/Zend/Log/Logger.php on line 484
{quote}</p>

<p>Because Zend\Log\Logger expects and array(array('name'=&gt;'val')) configuration, but PluginBroker flattens the array.
The flattening occurs in Zend/Loader/PluginBroker.php:191</p>

<pre class="highlight"><code>
        } else {
            $r = new \ReflectionClass($class);
            $instance = $r-&gt;newInstanceArgs($options);
        }
</code></pre>

<p>When arriving at this function, $options contains array(array()). Then instance is created with just array() because of ReflectionClass::newInstanceArgs() (see <a href="http://www.php.net/manual/en/reflectionclass.newinstanceargs.php">http://php.net/manual/en/â€¦</a>).</p>

<p>Fix:</p>

<pre class="highlight"><code>
 $instance = $r-&gt;newInstanceArgs(array($options));
</code></pre>

<p>Workaround:
Use a tripple-nested config for log, ie:</p>

<pre class="highlight"><code>
  'log' =&gt; array(array(array('writerName'=&gt; ... ))),
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-05-02T10:36:40.000+0000</p> 
        <div class="body">
            <p>{quote}
Fix:</p>

<pre class="highlight"><code>
$instance = $r-&gt;newInstanceArgs(array($options));
</code></pre>

<p>{quote}</p>

<p>If thats the way to go it's not required to use reflection.
A simple</p>

<pre class="highlight"><code>
$instance = new $class($options);
</code></pre>

<p>should be enough.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-06-06T11:23:27.000+0000</p> 
        <div class="body">
            <p>This is about Zend\Log</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-06-06T11:29:25.000+0000</p> 
        <div class="body">
            <p>Artur, Zend\Log has been recently refactored. Is this still occurs?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-06-26T12:35:27.000+0000</p> 
        <div class="body">
            <p>The code affected by this issue has been refactored and now PluginBroker is not used by Zend\Log</p>

        </div>
    </div>
    </div>

