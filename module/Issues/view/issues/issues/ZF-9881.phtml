<h2>ZF-9881: Allow registration of XPath namespaces in Zend_Test_PHPUnit_ControllerTestCase</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-05-23T16:32:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-25T08:57:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.0 (02/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bradley Holt (bradley.holt)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bradley Holt (bradley.holt)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dom_Query</li>
            <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13106/ZF-9881.patch">ZF-9881.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Using a Controller Test Case, it is currently difficult to test XML responses that contain multiple namespaces. As an example, parts of the following XML response document are untestable as-is:</p>

<pre class="highlight"><code>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
www.w3.org/2007/app"
         xmlns:atom="http://<a href="www.w3.org/2005/Atom">www.w3.org/2005/Atom</a>"&gt;
  My WorkspaceMy Collection</code></pre>

<p>The following test will not work without namespace registration:</p>

<pre class="highlight"><code>
public function testIndexActionResponseContainsCorrectWorkspaceTitle()
{
    $this-&gt;getRequest()-&gt;setMethod('GET');
    $this-&gt;dispatch('/');
    $this-&gt;assertXpathContentContains(
        '/service/workspace[1]/atom:title',
        'My Workspace'
    );
}
</code></pre>

<p>This test will result in the error:</p>

<p>bq. Failed asserting node denoted by /service/workspace[1]/atom:title CONTAINS content "My Workspace"</p>

<p>If I don't use a default namespace in the XML document, then it becomes testable:</p>

<pre class="highlight"><code>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
www.w3.org/2007/app"
             xmlns:atom="http://<a href="www.w3.org/2005/Atom">www.w3.org/2005/Atom</a>"&gt;
  My WorkspaceMy Collection</code></pre>

<p>The following test will now work with that updated XML:</p>

<pre class="highlight"><code>
public function testIndexActionResponseContainsCorrectWorkspaceTitle()
{
    $this-&gt;getRequest()-&gt;setMethod('GET');
    $this-&gt;dispatch('/');
    $this-&gt;assertXpathContentContains(
        '/app:service/app:workspace[1]/atom:title',
        'My Workspace'
    );
 }
</code></pre>

<p>However, I should be able to have a default namespace and still be able to test my responses. If I were using atom feeds (which I am in an application) then, for the most interoperability, it is recommended that the default namespace be '<a href="http://www.w3.org/2005/Atom">http://www.w3.org/2005/Atom</a>'. I shouldn't have to choose between interoperability and testability in this situation.</p>

<p>I will be submitting a patch for review that allows namespace registration within a Controller Test Case, ideally within setUp(), as follows:</p>

<pre class="highlight"><code>
$this-&gt;registerXpathNamespaces(array(
    'app'   =&gt; '<a href="http://www.w3.org/2007/app">http://www.w3.org/2007/app</a>',
    'atom'  =&gt; '<a href="http://www.w3.org/2005/Atom">http://www.w3.org/2005/Atom</a>',
));
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bradley Holt (bradley.holt) on 2010-05-23T16:40:51.000+0000</p> 
        <div class="body">
            <p>Attached is a patch that allows for namespace registration in Controller Tests.</p>

        </div>
    </div>
    </div>

