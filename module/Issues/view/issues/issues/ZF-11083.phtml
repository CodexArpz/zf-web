<h2>ZF-11083: Zend_AMF unable to deserialize multiple AMF3 items</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-02-17T03:22:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-17T03:22:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If an AMF request is received which has (according to Charles Proxy):
AMF Message: Type Message
Header
Body [0]
  Target String Gateway.dostuff
  Response String /3
  Content Array
    [0]   Object .com.main
       language string ABC
       something string def
    [1]
          Object .com.other
       foo string        ghi
       bar string       jkl
       language string reference ABC</p>

<p>with a matching class declaration of
class Wrapper {
 public function dostuff(DTO_Main $main,DTO_other $other) {
 }
}
The then contents of $other (which maps to the second object) will have "language" set to "ghi" instead of "ABC".</p>

<p>Hard to explain in an example, but here's what's happening:
Flash is sending all the strings as reference mappings. So above:
Item 1: "language" from com.main. Store text "ABC" as string 1
Item 2: "something" from com.main. Store text "def" as string 2
Item 3: "foo" from "com.other". Store text "ghi" as string 3
Item 4: "bar" from "com.other". Store text "jkl" as string 4
Item 5: "language" form "com.other". Retrieve string "1" (which returns "ABC").</p>

<p>However, Zend_AMF is treating the two AMF3 objects being returned as totally isolated items. Therefore it is handling the above as:
Item 1: "language" from com.main. Store text "ABC" as string 1
Item 2: "something" from com.main. Store text "def" as string 2
Item 3: "foo" from "com.other". Store text "ghi" as string 1
Item 4: "bar" from "com.other". Store text "jkl" as string 2
Item 5: "language" form "com.other". Retrieve string "1" (which returns "ghi").</p>

<p>Work around:
Modify Zend/Amf/Parse/Amf3:
    protected $_referenceStrings = array();
change to:
    private static $_referenceString = array();
Change all references in that file of:
    $this-&gt;_referenceStrings
to:
    self::$_referenceStrings</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

