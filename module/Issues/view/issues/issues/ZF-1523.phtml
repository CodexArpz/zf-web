<h2>ZF-1523: Zend_Local_Format::getDate() parser returns wrong data</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-08T20:21:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC3 (23/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Till Klampaeckel (till)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is my code:</p>

<pre class="highlight"><code>
    $this-&gt;data['Birthday'] = "19760213T12:00:00";

    $locale    = new Zend_Locale('de_DE');
    $bday_date = Zend_Locale_Format::getDate(
                    $this-&gt;data['Birthday'],
                    array(
                        'date_format' =&gt; 'yyyyMMdd h:m:s', //Zend_Locale_Format::STANDARD,
                        'locale' =&gt; $locale
                    )
    );
</code></pre>

<p>This is the result:</p>

<pre class="highlight"><code>
array(6) {
  ["date_format"] =&gt; string(14) "yyyyMMdd h:m:s"
  ["locale"] =&gt; object(Zend_Locale)#176 (2) {
    ["_Locale:private"] =&gt; string(5) "de_DE"
    ["_Codeset:private"] =&gt; NULL
  }
  ["year"] =&gt; string(8) "19760213"
  ["month"] =&gt; string(2) "12"
  ["day"] =&gt; string(2) "00"
  ["hour"] =&gt; string(2) "00"
}
</code></pre>

<p>I tried all variations in the format part - I can't get it to work.</p>

<p>(As of  "Affects Version" - we are on SVN from 2 days ago.)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2007-06-08T20:22:35.000+0000</p> 
        <div class="body">
            <p>(Typo fixed.)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-06-09T05:48:34.000+0000</p> 
        <div class="body">
            <p>Zend_Locale_Format is not able to normalize non localized dates.</p>

<p>The SQL Format you gave is not a localized date... it's already normalized.
I am  not sure for what you need the output from Zend_Locale_Format for your code, but you should use Zend_Date which is able to work with the SQL format if you are in need to work with this format.</p>

<p>PS: The Zend_Locale_Format::STANDARD is NOT yyyyMMdd h:m:s as mentioned in your example !!!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2007-06-09T07:14:05.000+0000</p> 
        <div class="body">
            <p>Just fyi: I didn't mention anything. I just commented it out and forgot to not copy it over to Jira.</p>

<p>I understand that the date is not a localized date - fine, I am not sure why though I provided an exact string (yyyyMMdd h:m:s) to match/parse and it does not work. Should it not work regardless, or what's the catch here? For sure I'll look into Zend_Date.</p>

<p>The date I provided is not an SQL date, it's supplied by the API of Apple's Addressbook.</p>

<p>Also, did you still implement a fix (1.0.0 RC3)?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-06-10T03:09:42.000+0000</p> 
        <div class="body">
            <p>The reason is simple...</p>

<p>Localized dates always have a sort of seperator within them... a blank, a colon or something else...</p>

<p>yyyyMMdd does not have a seperator nor is it localized.
Zend_Locale_Format::getDate() is not meant to seperate every date string into it's parts. It was created as helper-function for Zend_Date. But Zend_Date has this abilities to seperate automatically.</p>

<p>I tried to make an improvement for this as this is an additional feature and not a problem in my eyes. But it's not that easy... changing it to allow non-seperated localized dates breaks several other tests.</p>

<p>Not sure if this can be solved until RC3.</p>

        </div>
    </div>
    </div>

