<h2>ZF-457: Add ability to specify the lifetime of individual cache entries</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-10-22T19:10:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10113/Zend_Cache_221006_2.diff">Zend_Cache_221006_2.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently the Zend_Cache_Backend_Interface does not allow for the possibility of having per-item lifetimes.  In addition, due to the way directives are set, you cannot retrieve the current lifetime,  change it, and reset it.</p>

<p>By adding in an additional optional variable on calls to save() on the backend, you can allow this feature and not break current usage.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-10-22T19:11:17.000+0000</p> 
        <div class="body">
            <p>Examples of the suggested changes</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Kirsch (alex.kirsch) on 2006-10-27T08:48:42.000+0000</p> 
        <div class="body">
            <p>You got my vote,</p>

<p>Seems like a nice addition to the interface.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:30:37.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Szardenings (bitrockers) on 2006-11-30T13:55:42.000+0000</p> 
        <div class="body">
            <p>I highly recommend this change, because in production enviroments it's often needed set individual lifetimes. With
memcache or APC as backend, there's nothing more to do, because APC/memcache function support lifetime/ttl options, if you
apply the patch by Lee.</p>

<p>When using the File backend, you also should improve the _clean method (Zend_Cache_Backend_File) in a way that 
it cleans the cache records (files) in regard to the specified lifetime. You could do this by either storing the 
lifetime in the file, or adding the lifetime to the filename.</p>

<p>I would suggest the latter option, because you wouldn't have to open each file for finding the desired lifetime. 
Example filename could be cache_$id_$lifeTime.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Szardenings (bitrockers) on 2006-11-30T14:14:59.000+0000</p> 
        <div class="body">
            <p>Sorry, I have to cancel my last suggestion. Storing the lifetime in the cache file is a bad idea, because
the Cache wouldn't know the exact filename (so it would become difficult to open it fast enough). :-)</p>

<p>So there're two other options (if i'm right this time): 
a) store lifetime in the file
b) store lifetimes of cache in extra file</p>

<p>Choosing a) would cause the clean process to last a bit longer (opening the files). The advantage
would be, that the load-method also could delete expired records.</p>

<p>Option b) would allow faster deletion by the the _clean method, but causes a little overhead
when creating the cache file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2006-11-30T17:53:26.000+0000</p> 
        <div class="body">
            <p>I strongly agree with this.  A global lifetime on its own is insufficient for the kinds of things I do, and creating multiple Zend_Cache objects seems superfluous.</p>

<p>To elaborate on Christian's comment, your two options could be:</p>

<ul><li>Prepending each serialized cache file with the expiration UTS ending with some delimiter.  This increases fetch time a small bit because of the string splitting, but probably more than compensates for it by eliminating the need to load a separate file (as the next option does).</li>
<li>Creating a separate file containing a serialized hash of filename =&gt; lifetime values.  Whenever possible, I think the overhead should be shifted to when the cache is created, but this file would quickly become ridiculously large on large applications with dynamic caching.  Besides the extra require_once, the reading of the file itself would become cumbersome.  And if it's deleted somehow, it would invalidate the entire cache.</li>
</ul><p>For those reasons, I'm in favor of embedding the lifetime in the cached file itself.</p>

<p>As far as usage, I would prefer the ability to do something like the following:</p>

<p>```</p>

<p>A global lifetime could still be set, but it would only be a default value.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-11-30T19:02:37.000+0000</p> 
        <div class="body">
            <p>Even though I forgot to make a patch file for or even mention it, this should of course apply to the frontend as well.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2007-02-08T15:34:11.000+0000</p> 
        <div class="body">
            <p>this feature is now in SVN version (you can use a specfic lifetime per cache (fourth argument of the save() method)</p>

        </div>
    </div>
    </div>

