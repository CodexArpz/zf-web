<h2>ZF-6907: Wrong file include when calling the magic method of Zend_Db_Table_Row_Abstract</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-04T14:49:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-05T04:00:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>See example 15.143. <a href="http://framework.zend.com/manual/en/zend.db.table.relationships.html#zend.db.table.relationships.fetching.dependent.example-magic">http://framework.zend.com/manual/en/â€¦</a></p>

<p>The magic method "findBugsByEngineer();" calls the "findDependentRowset()" method and passes the class name as string.
This wil attempt to include the file "Bugs.php" with class "Bugs"</p>

<p>But when using the resource autoloader, our db tables become prefixed with something like "My_Model_DbTable_".</p>

<p>So when you call "findMy_Model_DbTable_BugsByEngineer();" it will include the right file and class.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-06-05T03:59:45.000+0000</p> 
        <div class="body">
            <p>When you use the "findBy()" methods, the dependent table noted must be the full class name as Zend_Db_Table_Row_Abstract does not implement a plugin loader. This is why the last example works but your first does not.</p>

<p>A slightly more readable syntax for those times you have long names is to use findDependentRowset() with the explicit class name and rule.</p>

<p>Marking as won't fix as the component is behaving entirely as designed.</p>

        </div>
    </div>
    </div>

