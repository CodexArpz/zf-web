<h2>ZF-10923: Url action helper adds a slash in front of url</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-01-07T02:03:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-30T12:14:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>FixForZF1.12</li>
            <li>zf-caretaker-adamlundrigan</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10091">ZF-10091</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15114/50a1a8.png">50a1a8.png</a></li>
            <li><a href="/issues/secure/attachment/15115/ZF-10923.patch">ZF-10923.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Controller_Action_Helper_Url always adds a slash in front of generated url. So, if baseUrl is defined. it leads to the incorrect urls:</p>

<p>$this-&gt;_helper-&gt;url('action', 'controller', 'module')</p>

<p>=&gt; '/<a href="http://yourbase.com/module/controller/action">http://yourbase.com/module/controller/action</a>'</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-01-07T04:47:00.000+0000</p> 
        <div class="body">
            <p>Removing the leading slash would break existing applications, as the URLs generated would now be relevant to the current page, not the document root.</p>

<p>How are you defining the baseUrl? Is it being auto-determined for you, or have you set it explicitly? I'm guessing, based on the URL you display above, that you are setting it explicitly. The baseUrl should only contain path information, not the protocol and host -- if you need the protocol and host, you should use the serverUrl() view helper, or grab the information from the request object.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Petrov (can3p) on 2011-01-07T08:50:03.000+0000</p> 
        <div class="body">
            <p>I'm setting baseUrl in application.ini config.</p>

<p>You can look through the class source code. It gets basDir from front controller if availible and adds it to the url. After that it adds the leading slash without any conditions.</p>

<p>The right behavior is if leading slash would be added only if baseUrl was not defined in front controller.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus (rockaut) on 2011-04-26T10:13:30.000+0000</p> 
        <div class="body">
            <p>And hasn't changed since then. Infact i remember two more issue dubles.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-29T16:54:04.000+0000</p> 
        <div class="body">
            <p>Confirmed.  If a fully-qualified baseUrl is supplied to the front controller, then the bug outlined in this ticket manifests itself.  Troublesome code:
!50a1a8.png!</p>

<p>Unit test:</p>

<pre class="highlight"><code>
Index: tests/Zend/Controller/Action/Helper/UrlTest.php
===================================================================
--- tests/Zend/Controller/Action/Helper/UrlTest.php (revision 24820)
+++ tests/Zend/Controller/Action/Helper/UrlTest.php (working copy)
@@ -178,6 +178,21 @@
         $url = $this-&gt;helper-&gt;simple('action', null, null, array('foo' =&gt; 'bar'));
         $this-&gt;assertEquals('/baseurl/module/controller/action/foo/bar', $url);
     }
+
+    /**
+     * @group ZF-10923
+     */
+    public function testFullyQualifiedBaseUrlDoesNotGetSlashPrepended()
+    {
+        $this-&gt;front-&gt;setBaseUrl('<a href="http://example.com">http://example.com</a>');
+
+        $request = $this-&gt;front-&gt;getRequest();
+        $request-&gt;setModuleName('module')
+                -&gt;setControllerName('controller');
+
+        $url = $this-&gt;helper-&gt;simple('action', null, null, array('foo' =&gt; 'bar'));
+        $this-&gt;assertEquals('<a href="http://example.com/module/controller/action/foo/bar">http://example.com/module/controller/…</a>', $url);
+    }
 }
 
 // Call Zend_Controller_Action_Helper_UrlTest::main() if this source file is executed directly.
</code></pre>

<p>And result of running it:</p>

<pre class="highlight"><code>
There was 1 failure:

1) Zend_Controller_Action_Helper_UrlTest::testFullyQualifiedBaseUrlDoesNotGetSlashPrepended
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-<a href="http://example.com/module/controller/action/foo/bar">http://example.com/module/controller/…</a>
+/<a href="http://example.com/module/controller/action/foo/bar">http://example.com/module/controller/…</a>

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-30T12:12:20.000+0000</p> 
        <div class="body">
            <p>After discussing the issue with [~dasprid], this is the intended behavior of {{setBaseUrl}}.  That method's primary purpose is to allow Zend Framework applications to run in sub-folders by specifying the path prefix that should be stripped from the request URI before being processed by the router.  This request URI is an absolute path, not a fully-qualified URI, and so setting the base URL to a fully-qualified URL will break this feature (and the view helper too).</p>

<p>If you need to use the FQDN URL in your view scripts, you can wrap the call to the URL view helper in a call to the {{serverUrl}} helper:</p>

<pre class="highlight"><code>
&lt;?php echo $this-&gt;serverUrl($this-&gt;url(...)); ?&gt;
</code></pre>

<p>Or set the base tag in the header of your HTML page:</p>

<pre class="highlight"><code>
</code></pre>

<p>I've updated the relevant manual pages (SVN r24827) with a note about fully-qualified base URLs not being supported.</p>

        </div>
    </div>
    </div>

