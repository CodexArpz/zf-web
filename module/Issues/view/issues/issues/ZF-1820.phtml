<h2>ZF-1820: CLONE -Zend_Auth_Adapter_DbTable not functional in Oracle Database environment - Same applies to DB2 environment</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-08-06T19:55:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-01-23T12:10:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Auth</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In Zend_Auth_Adapter_DbTable, the following code is used to generate a SQL statement:</p>

<pre class="highlight"><code>$credentialExpression = new Zend_Db_Expr(
            $this-&gt;_zendDb-&gt;quoteInto(
                $this-&gt;_zendDb-&gt;quoteIdentifier($this-&gt;_credentialColumn)
                . ' = ' . $this-&gt;_credentialTreatment, $this-&gt;_credential
                )
            . ' AS zend_auth_credential_match'
            );</code></pre>

<p>which generates the following SQL:</p>

<pre class="highlight"><code>SELECT auth_user.*, pwd  = '[[password hash]]'
AS zend_auth_credential_match
FROM auth_user
WHERE login = 'admin'</code></pre>

<p>Since Oracle does seemingly not support logical expressions in the part of the SELECT statement before WHERE, this query fails in Oracle. In a quick test, Oracle 10g returns the error code ORA-00923 - SQL Invalid. Suggested fix would be the following SQL statement:</p>

<pre class="highlight"><code>SELECT CASE COALESCE(count( * ),0)
WHEN 0 THEN 0
WHEN 1 THEN 1
ELSE 0
END AS zend_auth_credential_match
FROM auth_user
WHERE login = 'admin'
AND pwd = '[[password hash]]'</code></pre>

<p>This is supported by Oracle, DB2 and MySQL; I was not able to test it in a Postges environment since I currently do not have access to one.</p>

<p>Another option would be to do it the "old-fashioned" way using the following SQL:</p>

<pre class="highlight"><code>SELECT auth_user.*
FROM auth_user
WHERE login = 'admin'
AND pwd  = '[[password hash]]'</code></pre>

<p>and then checking if the query returns a row to check if a user with the given name and password exists.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-01-23T12:10:09.000+0000</p> 
        <div class="body">
            <p>Resolved in r7598</p>

        </div>
    </div>
    </div>

