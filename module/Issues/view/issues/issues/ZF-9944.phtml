<h2>ZF-9944: Zend_Form_Element_File loses breakChainOnFailure option if NotEmpty validator is not supplied</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-06-03T07:30:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-06-04T13:20:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.6 (22/Jun/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_Validate</li>
            <li>Zend_Validate_File</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If I create a file upload form element with several validators, setting {{$breakChainOnFailure}} for each of them, the chain doesn't break and several error messages are shown.</p>

<p>I've spent hours to find the reason and I've found it. This is the faulty part of {{Zend_Form_Element_File::isValid()}}'s body:</p>

<pre class="highlight"><code>
if (!$this-&gt;isRequired()) {
    $adapter-&gt;setOptions(array('ignoreNoFile' =&gt; true), $this-&gt;getName());
} else {
    $adapter-&gt;setOptions(array('ignoreNoFile' =&gt; false), $this-&gt;getName());
    if ($this-&gt;autoInsertNotEmptyValidator() and
           !$this-&gt;getValidator('NotEmpty'))
    {
        $validators = $this-&gt;getValidators();
        $notEmpty   = array('validator' =&gt; 'NotEmpty', 'breakChainOnFailure' =&gt; true);
        array_unshift($validators, $notEmpty);
        $this-&gt;setValidators($validators);
    }
}
</code></pre>

<p>As you can see, this code checks if the element is set to be required and if it is and {{NotEmpty}} validator is not supplied, it gets all already set validators, adds {{NotEmpty}} to them, and sets them back. Unfortunately is loses {{$breakChainOnFailure}} option of all those previously set validators during this process.</p>

<p>The temporary workaround to this bug is to explicitly add {{NotEmpty}} validator to the element.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-06-03T10:14:34.000+0000</p> 
        <div class="body">
            <p>Sorry i cannot reproduce this in current trunk and 1.10 release branch with the following setup:</p>

<pre class="highlight"><code>
public function testAction() {                                                                                                                           
         $form = new Zend_Form();
         $form-&gt;addElement('file',
                           'avatar',
                           array('label' =&gt; 'Avatar',
                                 'description' =&gt; 'Avatar Description',
                                 'required' =&gt; true,
                                 'validators' =&gt; array(array('Extension',
                                                             true,
                                                             array(false,
                                                                   'png,jpg,jpeg,gif',
                                                                   'messages' =&gt; array('fileExtensionFalse' =&gt; 'Wrong File Extension'))),
                                                       array('Size',
                                                             true,
                                                             array('max' =&gt; 5242880,
                                                                   'messages' =&gt; array('fileSizeTooBig' =&gt; 'Filesize too big'))))));
         $form-&gt;addElement('submit','submit');

         if ($this-&gt;getRequest()-&gt;isPost()) {
             $form-&gt;isValid($this-&gt;getRequest()-&gt;getParams());
         }
         die($form-&gt;render());
     }
</code></pre>

<p>Could you provide a simple Testcase that does fail for you?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Elnur Abdurrakhimov (elnur) on 2010-06-03T11:54:48.000+0000</p> 
        <div class="body">
            <p>This is the simplified version of my form which is enough to reproduce the bug:</p>

<pre class="highlight"><code>
class Form_User_Avatar extends Zend_Form
{
    public function init()
    {
        $this-&gt;addElement('file', 'avatar', array(
            'label' =&gt; 'Avatar',
            'required' =&gt; true,
            'validators' =&gt; array(
                array('Extension', true, array(
                    false,
                    'png,jpg,jpeg,gif'
                )),
                array('Size', true, array(
                    'max' =&gt; 5242880
                ))
            )
        ));

        $this-&gt;addElement('submit', 'submit');
    }
}
</code></pre>

<p>Try to upload a file which is larger than the size limit of this form (5M) but is smaller {{than post_max_size}} (in my case it's 8M).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-06-03T12:56:12.000+0000</p> 
        <div class="body">
            <p>Assigning to Thomas and updating Components</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-06-04T13:20:12.000+0000</p> 
        <div class="body">
            <p>New feature implemented with r22372</p>

        </div>
    </div>
    </div>

