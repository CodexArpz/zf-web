<h2>ZF-10714: Form validation (Zend_Form_Element_Hash) in Google Chrome</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-11-19T07:11:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-02T04:26:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>zf-caretaker-adamlundrigan</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5182">ZF-5182</a></li>
            <li><a href="/issues/browse/ZF-2915">ZF-2915</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,
i have a problem with element Zend_Form_Element_Hash.
In Google Chrome (7) form validation report me a error : "No token was provided to match against",
but in FF or IE it works fine.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2010-11-19T07:14:25.000+0000</p> 
        <div class="body">
            <p>Could you provide some more information about how to reproduce this error?</p>

<p>I use chrome daily for my development work, and have never had this issue.</p>

<p>If this is a support question, could you direct it to the fw-general mailing list, or to #zftalk on freenode IRC</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dennis Winter (denniswinter) on 2010-11-19T07:30:10.000+0000</p> 
        <div class="body">
            <p>I don't think, this is an issue of ZF!
I've had this and other problems in the past with Google Chrome.
This browser caches so freakin' hard, that it comes to such errors in development!
Please delete all your internet data in chrome and restart at least your browser (if not the whole OS).
That should normally do the job!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2010-11-19T10:33:18.000+0000</p> 
        <div class="body">
            <p>Added issues I think are related to this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2010-12-10T00:51:57.000+0000</p> 
        <div class="body">
            <p>The same issue haunted me in the beginning of the week. However, in my case I had two forms in the site: Feedback and Order. Both of these forms had hash element. In the latest version of Firefox, Feedback form worked but Order form didn't. In Chrome and IE both forms worked. I was unable to track the problem and it seems to be very hard to isolate. The only solution atm. was to remove the hash element from the Order form.</p>

<p>I have had similar problems in ZF-5182, but at this time neither of these forms were placed at the landing page (the first page of the site).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Max Gordon (mgordon) on 2011-01-21T14:40:19.000+0000</p> 
        <div class="body">
            <p>I've had the same problem with the Chrome browser. The issue is not really a bug in ZF but in redirects, in my case the Zend_Auth/Acl code. When Chrome looks for pages to cache and is redirected to the current page the hash fails to validate.</p>

<p>In my code I've found that when I have a redirect to a form, usually the case with login forms I get the token error, I've now changed the redirect to an login error in the ErrorController and that seems to work better.</p>

<p>Below is some scaled down code that I've used when debugging this issue if you want to try it out yourselves:</p>

<pre class="highlight"><code>
class IndexController extends Zend_Controller_Action {
    public function indexAction() {
        $form = new Form_Index_Test();
        if ($this-&gt;getRequest()-&gt;isPost()
                &amp;&amp; $form-&gt;isValid($this-&gt;getRequest()-&gt;getPost())) {
            die("Yes!");
        }

        $this-&gt;view-&gt;form = $form;
    }
}


class LoginController extends Zend_Controller_Action {
    public function userAction() {
        $form = new Form_Login;

        if ($this-&gt;_request-&gt;isPost()) {
            if ($form-&gt;isValid($this-&gt;_request-&gt;getPost())) {
                die("Logged in!");
            }
        }

        $this-&gt;view-&gt;form = $form;
    }

}


class ErrorController extends Zend_Controller_Action
{

    public function errorAction()
    {
    }


    public function privilegesAction()
    {
        die("You lack the privileges!");
    }

    public function loginAction()
    {
        die("Login please!");
    }

}


class Form_Index_Test extends Zend_Form {

    public function __construct($options = null) {
        parent::__construct($options);
        $this-&gt;setName('form_show_dates');

        $this-&gt;addElement('Text', 'test', array('label' =&gt; 'Text'));

        $this-&gt;addElement('hash', 'csrf');

        $this-&gt;addElement('Submit', 'submit', array('label' =&gt; 'Save'));
    }

}


class Form_Login extends Form_Base {

    public function init() {

        $this-&gt;setName('form_login');

        $length_message = 100;
        $el_name = $this-&gt;createElement('ValidationTextBox', 'username')
                        -&gt;setRequired(true)
                        -&gt;setRegexp('[\w\d\s\@]+')
                        -&gt;addValidator('stringLength', true, array('min' =&gt; 2, 'max' =&gt; $length_message))
                        -&gt;addFilter("stringTrim")
                        -&gt;setLabel('Uname');

        $length_message = 255;
        $el_password = $this-&gt;createElement('PasswordTextBox', 'password')
                        -&gt;setRequired(true)
                        -&gt;setRegexp('[\w\d\s\@]+')
                        -&gt;addValidator('stringLength', true, array('min' =&gt; 2, 'max' =&gt; $length_message))
                        -&gt;addFilter("stringTrim")
                        -&gt;setLabel('Pwd');

        $el_submit = $this-&gt;createElement('Submit', 'submit')
                        -&gt;setLabel(__('Save'))
                        -&gt;setOrder(998);

        $this-&gt;addElements(array($el_name, $el_password, $el_submit));
    }
}

abstract class Form_Base extends Zend_Dojo_Form {

    public function __construct($options = null) {
        parent::__construct($options);

        $token_id = "csrf_test_token_4_" . get_called_class();
        $this-&gt;addElement('hash', $token_id);
    }
}


class Plugin_Controller_Auth extends Zend_Controller_Plugin_Abstract {

    /**
     * @var Zend_Auth
     */
    private $_auth;
    /**
     * @var Zend_Acl
     */
    private $_acl;
    private $_noauth = array('module' =&gt; 'default',
        'controller' =&gt; 'error',
        'action' =&gt; 'login');
    private $_noacl = array('module' =&gt; 'default',
        'controller' =&gt; 'error',
        'action' =&gt; 'privileges');

    public function __construct($auth, $acl) {
        $this-&gt;_auth = $auth;
        $this-&gt;_acl = $acl;
    }

    /**
     * Performs the login etc...
     *
     * @param Zend_Controller_Request_Abstract $request
     * @return void
     */
    public function preDispatch($request) {
        if ($this-&gt;_auth-&gt;hasIdentity()) {
            $role = $this-&gt;_auth-&gt;getIdentity()-&gt;getRole();
        } else {
            $role = 'guest';
        }

        $resource = $controller = $request-&gt;controller;
        $action = $request-&gt;action;
        $module = $request-&gt;module;

        $options = $request-&gt;getParams();


        if (!$this-&gt;_acl-&gt;has($resource)) {
            $resource = null;
        }

        if (!$this-&gt;_acl-&gt;isAllowed($role, $resource, $action)) {
            if (!$this-&gt;_auth-&gt;hasIdentity()) {
                $module = $this-&gt;_noauth['module'];
                $controller = $this-&gt;_noauth['controller'];
                $action = $this-&gt;_noauth['action'];
            } else {
                $module = $this-&gt;_noacl['module'];
                $controller = $this-&gt;_noacl['controller'];
                $action = $this-&gt;_noacl['action'];
            }

            $redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
            $redirector-&gt;gotoSimpleAndExit($action, $controller, $module);
        }
    }

}

class Security_Acl extends Zend_Acl {
    public function __construct() {
        $this-&gt;add(new Zend_Acl_Resource('index'));
        $this-&gt;add(new Zend_Acl_Resource('login'));
        $this-&gt;addRole(new Zend_Acl_Role('guest'));
        $this-&gt;allow('guest', 'index');
        $this-&gt;allow('guest', 'login', 'user');
    }
}
</code></pre>

<p>If you want to see the error when logging in use:</p>

<pre class="highlight"><code>
    private $_noauth = array('module' =&gt; 'default',
        'controller' =&gt; 'login',
        'action' =&gt; 'user');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-03-13T19:18:21.000+0000</p> 
        <div class="body">
            <p>Does this problem still persist? If so, is it with the framework or the browser? A lot of these wishy-washy Zend_Session-related bugs appear to be falling into the "concurrent requests returning 404 errors cause competing sessions to be initiated" issue (primarily with Google Chrome)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Patrick McMahon (technoicon) on 2012-04-24T07:50:20.000+0000</p> 
        <div class="body">
            <p>I've having the same issue.
In chrome, if I wait over 5 mins.  i get "No Token was provided to match against"
I can submit again and it works.
If i submit the form straight after loading the page it works fine.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Patrick McMahon (technoicon) on 2012-04-24T07:52:20.000+0000</p> 
        <div class="body">
            <p>with IE.
no need to wait, just get this error: "The two given tokens do not match"
after submitting twice it works.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Patrick McMahon (technoicon) on 2012-05-02T04:26:40.000+0000</p> 
        <div class="body">
            <p>I set the TTL.  via timeout.
I did this and it worked for chrome and IE:</p>

<p>$this-&gt;addElement('hash', 'csrf', array(
            'ignore' =&gt; true,
            'timeout' =&gt; 60000,
        ));</p>

        </div>
    </div>
    </div>

