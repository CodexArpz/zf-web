<h2>ZF-3204: Mysqli dB adapter ignores utf8 connection charset</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-05-06T05:21:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-06-09T17:25:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Mihails Bogdanovs (mihabo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1541">ZF-1541</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have used Zend_dB_Adapter_Mysqli to connect to a MySQL server 5.0.51a. All tables have uftf8 charset for their columns.
UTF8 data entered in forms is saved correctly to the dB. When reading records from the database, only ascii characters were read normaly.
It is also impossible (or I don't know how) to set the correct charset through adapter options.
My workaround was to create my adapter as follows:</p>

<pre class="highlight"><code>
require_once 'Zend/Db/Adapter/Mysqli.php';

class MyMysqliDbAdapter extends Zend_Db_Adapter_Mysqli {
    protected function _connect() {
            if ($this-&gt;_connection) {
                return;
            }
        parent::_connect();
        $this-&gt;_connection -&gt; set_charset('utf8');
    }
}
</code></pre>

<p>This issue need at least to be documented.
A good solution would be to add + document the corresponding option for the adapter.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

