<h2>ZF-4978: Improve error handling on erasing default decorators</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-11-18T12:06:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-28T05:41:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Several form element, specially File and Image use own default decorators.
When a user set's his own decorators with setDecorator and erases the default one it can come to problems.
Therefor the following solution will be implemented:</p>

<ul><li>Create a marker interface per problematic decorator</li>
<li>Problematic decorators implement this marker interfaces</li>
<li>render() method in file element loops through all attached decorators and searches if this marker interface was implemented</li>
<li>When no marker interface was found, raise exception</li>
<li>After checking for decorator call parent::render()</li>
<li>Of course also unit tests and documentation have to be added</li>
</ul>
    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-01-28T05:40:50.000+0000</p> 
        <div class="body">
            <p>Integrated with r13811.</p>

<p>But restricted to the file element.
For all other elements the marker interface will not be used.</p>

<p>There are plans to rework how default decorators work.
So this new feature is just an workaround until the new solution has been integrated.</p>

        </div>
    </div>
    </div>

