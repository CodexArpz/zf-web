<h2>ZF-3979: GET/POST values leak between test cases</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-18T01:40:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-11T06:51:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jani Hartikainen (jhartikainen)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Setting get or post values and not resetting them afterwards will leak the values to subsequent tests. This appears to be because the HttpTestCase request methods set values in $_POST and $_GET, and later on, the new instances of the request load the old values from the superglobals.</p>

<p>I think it would make more sense if the $_POST/$_GET values would not persist between tests. This may also affect $_COOKIE, but I haven't tested that.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Stefan Gehrig (sgehrig) on 2008-09-05T10:32:34.000+0000</p> 
        <div class="body">
            <p>This bug is a real show-stopper if you're running multiple controller test within one run and you must rely on clean request contexts.
For example I'm using a {{preDispatch()}} plugin that loads model entities and persits them inside the request object with {{$request-&gt;setParam('xy', ...)}}. There are cases when there is no model entity to be set (entity not found), so I check for  {{if (!$this-&gt;_getParam('xy'))}}  in my controller to forward to a 404-page. No problem so far.
I also run tests on my authentication controller where I set the request data inside my test method with {{$this-&gt;getRequest()-&gt;setPost(array( [...], 'xy' =&gt; 'someValue', [...]));}}. 'someValue' is no persisted throughout the complete test run inside the {{$_POST}} global array, so the controller test in which the controller uses {{if (!$this-&gt;_getParam('xy'))}} does not work anymore if this test is executed after the authentication tests because the 'xy' param does not contain a model instance but rather the string 'someValue' from a previous test run on an authentication controller test.</p>

<p>Either  {{Zend_Controller_Request_HttpTestCase}} should use an internal array to store  {{$_GET}} and {{$_POST}} data, which could easily be resetted by creating a new request instance, or {{Zend_Test_PHPUnit_ControllerTestCase}} must issue a</p>

<pre class="highlight"><code>
$_GET=array();
$_POST=array();
</code></pre>

<p>in its {{setUp()}} method.</p>

<p>I didn't do any tests with cookies so I cannot comment on if there is a problem with $_COOKIE too.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-09-11T06:51:55.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk and 1.6 release branch; $_GET, $_POST, $_COOKIE, and $_SESSION are all reset during reset() now.</p>

<p>Fix will ship with 1.6.1.</p>

        </div>
    </div>
    </div>

