<h2>ZF-6987: Zend_Date::isDate() cannot parse dates which do not contain separators</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-11T11:15:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5901">ZF-5901</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>// returns true, as expected
$result = Zend_Date::isDate('2009-01-01-01:02:03', 'yyyy-MM-dd-HH:mm:ss');
var_dump($result);</p>

<p>// returns false - but shouldn't this also be 'true' ?
$result = Zend_Date::isDate('20090101-01:02:03', 'yyyyMMdd-HH:mm:ss');
var_dump($result);</p>

<p>This seems to be caused by the way Zend_Locale_Format::_parseDate() (which is called by Zend_Date::isDate()) uses a regular expression to split the digits.  A lack of non-digit separator means that in the "broken" case above, any digits that don't have a non-digit separator are assumed to be a part of the previous format token.  So, the year is interpreted as "20090101" and not "2009" in the broken example.</p>

<p>This is a real pain for validating dates because the only solution seems to be to split the date first and add separator characters before validating.</p>

<p>If I'm not mistaken, the ISO 8601 spec allows both the format YYYY-MM-DD as well as YYYYMMDD - so shouldn't isDate() be capable of parsing these dates?
See <a href="http://en.wikipedia.org/wiki/ISO_8601#Calendar_dates">http://en.wikipedia.org/wiki/ISO_8601/â€¦</a></p>

<p>It is confusing because while the following does get returned as a valid date, I don't think it is validating the whole date due to the problem above:</p>

<p>// returns true - but probably isn't examining each date part as you'd think it would be
$result = Zend_Date::isDate('20090101', 'yyyyMMdd');
var_dump($result);</p>

<p>At the very least, this should be made clear in the documentation that isDate is not capable of parsing dates which do not contain separators between each datepart.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-06-11T11:50:18.000+0000</p> 
        <div class="body">
            <p>Duplicate of ZF-5901</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:46.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

