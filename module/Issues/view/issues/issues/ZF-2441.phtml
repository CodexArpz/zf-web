<h2>ZF-2441: Loader_PluginLoader should allow loading of classes without using any prefix</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-01-15T20:07:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-22T08:57:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.3 (19/Jan/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sebastian Krebs (kingcrunch)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Sometimes it may be useful to not specify a prefix to the path. In my special situation i want to load models with the PluginLoader and I want to follow restrictions made for the Controller, so the Models are name like "Module_BarModel", but for the default-Module it will only called "FooModel". If an empty string is given as prefix _formatPrefix will ever append an underscore</p>

<pre class="highlight"><code>    protected function _formatPrefix($prefix)
    {
        return rtrim($prefix, '_') . '_';
    }</code></pre>

<p>So, if i try to loader "FooModel", it will (at least) search for "_FooModel". It seems to be more useful, if empty strings as prefix will stay empty strings.</p>

<pre class="highlight"><code>    protected function _formatPrefix($prefix)
    {
        return !empty($prefix) ? rtrim($prefix, '_') . '_' : '';
    }</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-31T16:07:17.000+0000</p> 
        <div class="body">
            <p>Please evaluate and assign as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-22T08:57:05.000+0000</p> 
        <div class="body">
            <p>One mission of Zend framework is to establish best practices. One aspect of plugin loading is to promote the idea of namespaced classes that can serve as replacements for existing functionality. These two combined bring us to the recommendation that plugin classes <em>should</em> have class prefixes to prevent naming collisions.</p>

        </div>
    </div>
    </div>

