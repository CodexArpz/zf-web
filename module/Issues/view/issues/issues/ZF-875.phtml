<h2>ZF-875: Produce a RSS/Atom feed with Zend_Feed</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-02-08T09:28:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Olivier Sirven (slaanesh)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Feed</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10287/zend_feed.patch">zend_feed.patch</a></li>
            <li><a href="/issues/secure/attachment/10250/zend_feed.patch">zend_feed.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Feed can consume rss/atom feeds but is lacking the ability to produce them from a custom data source.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-02-08T09:38:07.000+0000</p> 
        <div class="body">
            <p>Here is the patch to add this ability to Zend_Feed.</p>

<p>Then it is very easy to use. You just have to implement Zend_Feed_Interface or to give an appropriate array to Zend_Feed::factory method.</p>

<pre class="highlight"><code>require_once 'Zend/Feed.php';
require_once 'Zend/Feed/Interface.php';

class MyInterface implements Zend_Feed_Interface
{
    public function getFeedData()
    {
        $array = array('title' =&gt; 'A feed produced by the Zend_Feed_Interface',
                       'link' =&gt; '<a href="http://www.example.com">http://www.example.com</a>',
                       'description' =&gt; 'Description of the feed',
                       'author' =&gt; 'Olivier Sirven',
                       'email' =&gt; 'olivier@elma.fr',
                       'charset' =&gt; 'iso-8859-15',
                       'lastUpdate' =&gt; time(),
                       'entries' =&gt; array(array('title' =&gt; 'First article',
                                                'link' =&gt; '<a href="http://www.example.com">http://www.example.com</a>',
                                                'description' =&gt; 'First article description',
                                                'content' =&gt; 'First article <strong>content</strong>',
                                                'lastUpdate' =&gt; time())));

        return $array;
    }
}

// create the input array describing the feed to create
$array = array('title' =&gt; 'Title of the feed',
               'link' =&gt; '<a href="http://www.example.com">http://www.example.com</a>',
               'description' =&gt; 'Description of the feed',
               'author' =&gt; 'Olivier Sirven',
               'email' =&gt; 'olivier@elma.fr',
               'charset' =&gt; 'iso-8859-15',
               'lastUpdate' =&gt; time(),
               'entries' =&gt; array(array('title' =&gt; 'First article',
                                        'link' =&gt; '<a href="http://www.example.com">http://www.example.com</a>',
                                        'description' =&gt; 'First article description',
                                        'content' =&gt; 'First article <strong>content</strong>',
                                        'lastUpdate' =&gt; time())));

// create a Zend_Feed_Atom instance from the array
$feed = Zend_Feed::factory('atom', null, $array);

// create a Zend_Feed_Rss instance from it
// $feed = Zend_Feed::factory('rss', null, $array);

// create a Zend_Feed_Rss instance with Zend_Feed_Interface
// $feed = Zend_Feed::factory('rss', new MyInterface());

// dump the feed to standard output
// print $feed-&gt;saveXML();

// send http headers and dump the feed
$feed-&gt;send();
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-26T12:00:40.000+0000</p> 
        <div class="body">
            <p>Comments:</p>

<p>The Zend_Feed class already has importUri(), importString(), and importFile().  What about using two new static methods:  importArray() and importBuilder() instead of the factory() method you propose.</p>

<p>The importArray() method uses the $data value as you have it above.  The importBuilder() method uses the object of type Zend_Feed_Interface.</p>

<p>I would suggest making the format be the optional second argument, and it defaults to 'atom'.</p>

<pre class="highlight"><code>
$feed = Zend_Feed::importArray($data, 'atom');
</code></pre>

<p>I would suggest changing Zend_Feed_Interface to Zend_Feed_Builder_Interface, and provide a simple reference implementation Zend_Feed_Builder, which takes an array in its constructor, performs some minor validation, and then can be used in the importBuilder() method.</p>

<pre class="highlight"><code>
$builder = new Zend_Feed_Builder($data);
$feed = Zend_Feed::importBuilder($builder, 'atom');
</code></pre>

<p>This plain Builder class is not very interesting, but serves as a concrete implementation to demonstrate the usage.  Users are encouraged to make their own classes to implement Zend_Feed_Builder_Interface.</p>

<p>Why would $data or $builder be optional?  That is, why do you default them to null?  Wouldn't it be better to make them required arguments?</p>

<p>I don't understand the patch to Zend/Http/Client/Adapter/Socket.  Doesn't it duplicate code that exists just a few lines later?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-26T12:01:34.000+0000</p> 
        <div class="body">
            <p>I meant Zend_Feed has a method import(), which takes a URI argument.  It's not called importUri().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-02-27T03:57:57.000+0000</p> 
        <div class="body">
            <p>Here is a new version of the patch taking into account your suggestions.
The new usage is now</p>

<pre class="highlight"><code>
/* create a Zend_Feed_Atom instance from the array */
$feed = Zend_Feed::importArray($array);

/* create a Zend_Feed_Rss instance from it */
$feed = Zend_Feed::importArray($array, 'rss');

/* create a Zend_Feed_Atom instance with Zend_Feed_Builder */
$feed = Zend_Feed::importBuilder(new Zend_Feed_Builder($array));
</code></pre>

<p>Sorry about the patch to Zend/Http/Client/Adapter/Socket. It was an older patch I submited and I forgot the revert the code ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2007-03-05T17:02:22.000+0000</p> 
        <div class="body">
            <p>Thanks for the patch Olivier. I have tried this in an application of mine and it works a treat.</p>

<p>I did have a couple of thoughts/suggestions - this mostly applies to the RSS implementation, as I haven't tried Atom:-</p>

<ul><li>Currently the feed builder assumes 'rss' or 'atom' with a switch statement. For future compatibility, wouldn't it be better to use Zend::loadClass and throw an exception of the class is non-existent rather than limiting it to the switch?</li>
<li>Perhaps some defaults would be good here for building, rather than throwing an exception if feed elements are missing (e.g. lastUpdate defaults to time() if not explicitly mentioned).</li>
<li>The element names don't always correspond to the specifications. For example 'entries'  should be 'items' in the RSS version. An exception should be thrown if 'items' is not set.</li>
<li>'charset' doesn't really belong in the feed element entries. Perhaps the signature of Zend_Feed_Builder could instead be __construct function(array $array, $charset = 'iso-8859-1') so the charset is specified there instead?</li>
<li>The RSS feed didn't allow for enclosures (I was making a podcast so I did miss it a lot!). Perhaps the value for an enclosure can be an array, so we can specify the length, mimetype and url?</li>
<li>The 'guid' element is optional, so shouldn't be created by default.</li>
<li>'source', 'category', 'author' and 'comments' are missing from the items definitions</li>
<li>There are also elements missing from the channel definition (see <a href="http://blogs.law.harvard.edu/tech/rss">http://blogs.law.harvard.edu/tech/rss</a>)</li>
</ul><p>Look forward to seeing this implementation included (hopefully) by 0.9.</p>

<p>Cheers!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-03-06T09:26:41.000+0000</p> 
        <div class="body">
            <p>Thanks for your comment Simon.</p>

<ul><li>I have changed Zend_Feed::importArray and Zend_Feed::importBuilder to use Zend::loadClass instead of a switch statement.</li>
<li>The support of rss and atom format is now (I hope so) complete so you can add your podcast to your rss feed ;)</li>
<li>I have added support for the WFW api too so one can link a rss/atom entry to an associated rss/atom feed</li>
<li>The guid node of a rss item is now only created if an id is specified</li>
<li>About the element names of the builder array, I tried to pick the most speaking word from rss or atom format as this array represent as well a rss feed or an atom feed. That's why the charset value is a key of the array: the array should contains all values needed to generate a feed, whatever the output format is.</li>
</ul><p>Please give a try to the current version located here <a href="http://framework.zend.com/svn/framework/branch/Zend_Feed">http://framework.zend.com/svn/framework/â€¦</a> and tell me what you think.</p>

<p>Regards,</p>

<p>Olivier</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-03-07T06:06:05.000+0000</p> 
        <div class="body">
            <p>I think I am almost done...I have added support for the itunes extension (rss only) and the unit tests have been completed to support the new features
As far as I know I just have to complete the existing Zeed_Feed documentation and I will be done!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-03-13T13:29:13.000+0000</p> 
        <div class="body">
            <p>Before these changes may be merged to core, the unit tests must pass.</p>

<p>I received the following fatal error on PHP 5.1.4 on WinXP. I also have a confirmed report of the same results on PHP 5.1.5 on WinXP:</p>

<pre class="highlight"><code>
Fatal error: Objects used as arrays in post/pre increment/decrement must return values by reference in
...\branch\Zend_Feed\library\Zend\Feed\Rss.php on line 214
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-03-13T14:15:41.000+0000</p> 
        <div class="body">
            <p>Oup's I did not test with php 5.1.x, only with with php 5.2.x :(
I have made some changes in order to make the thing work so I'd like you to test it again ;)
Or maybe you can tell me where I could do it myself without removing my current php installation ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-03-14T12:58:40.000+0000</p> 
        <div class="body">
            <p>Sorry for the delay; I see that the tests pass now, and I'll continue review pursuant to merging it to core. Thanks, Olivier, for these great new features! :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-03-14T13:03:25.000+0000</p> 
        <div class="body">
            <p>My pleasure ;)
Let me know if you need me to do something else</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-03-14T16:39:16.000+0000</p> 
        <div class="body">
            <p>Branch merged to core with SVN <a href="http://framework.zend.com/fisheye/changelog/Zend_Framework/?cs=3941">r3941</a>. Thanks, Olivier! :)</p>

        </div>
    </div>
    </div>

