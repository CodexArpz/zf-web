<h2>ZF-4759: Default row values are not saved to the database</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-31T03:28:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-01T06:10:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Stanislav Anisimov (satanistlav)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9061">ZF-9061</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When saving new table row to the database default values are filtered and not saved to the database.
IMHO, we should not check for modified fields when inserting a new row
Replacing two lines</p>

<pre class="highlight"><code>
$data = array_intersect_key($this-&gt;_data, $this-&gt;_modifiedFields);
$primaryKey = $this-&gt;_getTable()-&gt;insert($data);
</code></pre>

<p>with</p>

<pre class="highlight"><code>
$primaryKey = $this-&gt;_getTable()-&gt;insert($this-&gt;_data);
</code></pre>

<p>should fix the problem</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michelangelo van Dam (dragonbe) on 2008-11-08T06:00:48.000+0000</p> 
        <div class="body">
            <p>fix bug for #bughuntday</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stanislav Anisimov (satanistlav) on 2008-12-02T04:49:10.000+0000</p> 
        <div class="body">
            <p>As I see the issue is not resolved yet.
To avoid the problem I followed this way.
I put this lines in pre-insert logic</p>

<pre class="highlight"><code>
protected function _insert()
{
    foreach ($this-&gt;_table-&gt;getDefaultValues() as $k=&gt;$v) {
        $this-&gt;_modifiedFields[$k] = true;
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by sebastien crocquesel (cortex) on 2009-02-15T12:43:27.000+0000</p> 
        <div class="body">
            <p>I think that the issue comes when defaultSource is set to self::DEFAULT_CLASS. Then, the default value must be passed to the insert statement and thus, must be touched to become a modifiedFields.</p>

<p>In the Zend_Db_Table_Abstract::createRow, i would merge the $data from argument with the defaults value before the call to SetFromArray</p>

<p>Change:</p>

<p>} elseif ($defaultSource == self::DEFAULT_CLASS &amp;&amp; $this-&gt;_defaultValues) {</p>

<pre><code>        foreach ($this-&gt;_defaultValues as $defaultName =&gt; $defaultValue) {
            if (array_key_exists($defaultName, $defaults)) {
                $defaults[$defaultName] = $defaultValue;
            }
        }
</code></pre>

<p>}</p>

<p>with something like</p>

<p>} elseif ($defaultSource == self::DEFAULT_CLASS &amp;&amp; $this-&gt;_defaultValues) {</p>

<pre><code>        foreach ($this-&gt;_defaultValues as $defaultName =&gt; $defaultValue) {
            if (array_key_exists($defaultName, $defaults)) {
                $defaults[$defaultName] = $defaultValue;
            }
        }
       // add the defaults value to the data, values specified in $data override defaults one 
       $data = array_merge($defaults, $data);
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by sebastien crocquesel (cortex) on 2009-02-19T05:22:14.000+0000</p> 
        <div class="body">
            <p>Be aware that with this fix, you can no longer mix default value from the database and from the class. But I think it's not really recommended and was not the purpose of this functionnality.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sergei Izvorean (uniqueculture) on 2009-04-21T12:10:53.000+0000</p> 
        <div class="body">
            <p>The problem occurs due to default values aren't flagged in $_modifiedFields array. They are just assigned to $_data. Other fields that you change go through __set method and 'true' is set for each changed field in $_modifiedFields.</p>

<p>I would create a method to set initial data:</p>

<p>protected function _setData(array $data) 
{
$this-&gt;_data = $data;
$this-&gt;_modifiedFields = array_combine(array_keys($data), array_fill(0, count($data), true));
}</p>

<p>thanks.</p>

        </div>
    </div>
    </div>

