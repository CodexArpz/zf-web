<h2>ZF-1121: Zend_Db_Select: warning when using Zend_Db_Expr in order()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-03-23T14:02:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.2 (06/Apr/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When I use a Zend_Db_Expr in the order method of a Zend_Db_Select, a warning is showing up :</p>

<pre class="highlight"><code>
Warning: preg_match() expects parameter 2 to be string, object given in ZendFramework-HEAD\Zend\Db\Select.php on line 687
</code></pre>

<p>I'm using PDO_MYSQL as the abstraction layer.</p>

<p>Example :</p>

<pre class="highlight"><code>
$select = $db-&gt;select();
$select-&gt;from('filehistory', array('created',
                       new Zend_Db_Expr('substring_index(file, \'/\', -1) as file'),
                       new Zend_Db_Expr('substring_index(substring(file, ' . $len . '), \'/\', 1) as project'),
                       new Zend_Db_Expr('replace(substr(file, ' . $len . '), substring_index(file, \'/\', -1), \'\') as path'),
                       'userid'));

$select-&gt;order(new Zend_Db_Expr('4 DESC');     &lt;-- WARNING HERE.
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-23T14:13:56.000+0000</p> 
        <div class="body">
            <p>Reformatted description and summary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-23T14:19:42.000+0000</p> 
        <div class="body">
            <p>I'll try to resolve the warnings, but for what it's worth, you don't have to use Zend_Db_Expr so much as you did in ZF 0.8.0.  We improved the logic in Zend_Db_Select to recognize some patterns and do the expected things with them.  So you can use "AS" for column aliases.  Also you can use expressions as long as they contain parentheses, and they will be treated as expressions instead of identifiers.
The order() method also recognizes the "ASC" and "DESC" words.</p>

<p>You should be able to do the above query in the following way:</p>

<pre class="highlight"><code>
$select = $db-&gt;select();
$select-&gt;from('filehistory', array('created',
                       'substring_index(file, \'/\', -1) as file',
                       'substring_index(substring(file, ' . $len . '), \'/\', 1) as project',
                       'replace(substr(file, ' . $len . '), substring_index(file, \'/\', -1), \'\') as path',
                       'userid'));
$select-&gt;order('4 DESC');
</code></pre>

<p>If there is a conflict between the "as" notation and the expressions, try this alternative notiation for column aliases that it now supported in Zend_Db_Select:</p>

<pre class="highlight"><code>
$select = $db-&gt;select();
$select-&gt;from('filehistory', array('created',
                       'file' =&gt; 'substring_index(file, \'/\', -1)',
                       'project' =&gt; 'substring_index(substring(file, ' . $len . '), \'/\', 1)',
                       'path' =&gt; 'replace(substr(file, ' . $len . '), substring_index(file, \'/\', -1), \'\')',
                       'userid'));
$select-&gt;order('4 DESC');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Yan Bilodeau (idybil) on 2007-03-30T14:21:06.000+0000</p> 
        <div class="body">
            <p>Hi Bill,</p>

<p>Thanks for you anwser,  I have updated my FROM wihout using the Zend_Db_Expr and it works very well.</p>

<p>But in my Zend_Db_Select::order() I need to use the Zend_Db_Expr because I do not specify the table field name but the position of it.</p>

<p>example :</p>

<pre class="highlight"><code>
SELECT fieldA, fieldB, fieldC, fieldD FROM myTable ORDER BY 3  -&gt; 3 represent the fieldC of my query.
</code></pre>

<p>When I do not use the Zend_Db_Expr in my order, it throws me this exception : Uncaught exception 'Zend_Db_Adapter_Exception' with message 'SQLSTATE[42S22]: Column not found:</p>

<p>This exception is true, because column 3 does not exists in my query.</p>

<p>So I turn out using the Zend_Db_Expr which work well, but it show me the warning I post in the issue.</p>

<p>Is there any other ways to do what I need to do ?  or do you think this will be fixed in future version of the Framework ?</p>

<p>As of now, I have modified the Zend_Db_Select::order() method to fix my problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-04-03T15:21:00.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 4336.</p>

        </div>
    </div>
    </div>

