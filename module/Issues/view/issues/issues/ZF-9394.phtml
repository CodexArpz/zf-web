<h2>ZF-9394: Zend_Wildfire_Plugin_FirePhp tries to log every param passed to a method in stacktrace</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-10T10:47:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-10-09T17:24:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christian Heinrich (shurakai)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Christoph Dorn (cadorn)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Wildfire</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As stated above, the firephp logger tries to log every param passed to a method in the stacktrace.</p>

<p>Using for example Doctrine 2, however, will result in FirePhp eating up more than 128 MB of memory because when the EntityManager - which is the object that contains references to the unit of work etc. - is passed as an argument, the EntityManager will be encoded. (cf. line 409, line 620)</p>

<p>Any important information will be lost in that case.</p>

<p>PS: I think the codes' formatting could need improvement. Does the ZF accept contributions that mostly change a codes' cosmetic?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2010-03-10T13:31:25.000+0000</p> 
        <div class="body">
            <p>There is an undocumented feature to filter class members.</p>

<pre class="highlight"><code>
$firephp = Zend_Wildfire_Plugin_FirePhp::getInstance();
$firephp-&gt;setObjectFilter("Class_Name", array("member1", "member2"));
</code></pre>

<p>Please give that a shot to see if it will reduce the size of your stack traces.</p>

<p>I am contemplating a feature that will filter class members based on doc-block annotations:</p>

<pre class="highlight"><code>
/**
 * @insight filter = On
 */
protected $variable = null;
</code></pre>

<p>I already have working code. It's a matter of merging it but we need to get an idea from the community if this is desirable first.</p>

<p>Ideally we would define a standard for @insight annotations that filter class members based on different criteria to be able to selectively include some members for specific logging calls.</p>

<p>Feel free to create a new ticket and post cosmetic patches. I would be happy to apply them.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2010-10-09T17:24:42.000+0000</p> 
        <div class="body">
            <p>Parameter filtering is outside the scope of the implementation at this time.</p>

        </div>
    </div>
    </div>

