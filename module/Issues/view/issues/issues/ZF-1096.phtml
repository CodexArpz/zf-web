<h2>ZF-1096: Add autoechoing function</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-03-20T17:32:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:58.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.1 (23/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1116">ZF-1116</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For simplication we could add a auto-print function...</p>

<pre class="highlight"><code>
    public function print($messageId, $locale = null, array $parameters)
    {
        sprintf ($this-&gt;_adapter-&gt;translate($messageId, $locale), $parameters);
    }
</code></pre>

<p>So a user would have a simplification of it's view:</p>

<pre class="highlight"><code>
// old
print $translate-&gt;translate('mystring', $locale);
sprintf( $translate-&gt;translate('mystring', $locale), $firstparam, $secondparam, $thirdparam);

// new
$translate-&gt;print('mystring', $locale);
$translate-&gt;print('mystring', $locale, $parameters);
</code></pre>

<p>Less code to write for the user and simplification as also much more readability.
Ideas, Thoughts, to implement until which version ??</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-22T06:06:00.000+0000</p> 
        <div class="body">
            <p>I don't think print() should be added to translate functionality.</p>

<p>Zend_Translate knows nothing about output method we use in our application. It may be HTML/WML/XML/plain text/... 
It also may be View part of MVC paradigm offered by in ZF.</p>

<p>I don't think we have to distinguish this one output method.</p>

<p>From the other side userland code simplification is important goal for the framework.
Such simplification may be also done in userland and it may be a good example for Zend_Translate documentation ("How to use" example):</p>

<pre class="highlight"><code>
class OutputGenerator {
    /**
     * Translate object
     *
     * @var Zend_Translate
     */
    private $_translate;
    
    /**
     * Translate object
     *
     * @param Zend_Translate $translate
     */
    public function __construct(Zend_Translate $translate)
    {
        $this-&gt;_translate = $translate;
    }
    
    /**
     * Print translated message
     *
     * @param string $messageId
     * @param string|Zend_Locale $locale
     */
    public function tprint($messageId, $locale = null)
    {
        print $this-&gt;_translate-&gt;translate($messageId, $locale);
    }

    ...
}

...

$ug = new OutputGenerator($translator);

...

$ug-&gt;tprint($msg);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-03-22T07:46:57.000+0000</p> 
        <div class="body">
            
    &lt;?php $translate-&gt;print('My translated string', $locale); ?&gt;

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-03-22T08:23:51.000+0000</p> 
        <div class="body">
            <p>{quote}
But this is no problem...
 Zend_Translate only prints the translated string. And within the translated content there is never a html / xml or whatever tag.
{quote}
Zend_Translate can not just print the translated string as it may need to be escaped first (again think about html rendering of the string "my stuff &gt; your stuff").
You have to allow the user to decide how to ouput the string...
so I think a solution would be something like this:</p>

<pre class="highlight"><code>
class Zend_Translate
{
    /**
     * The callback to use when displaying a string
     *
     * @var $_output_callback
     */
    private $_output_callback = 'echo';

    /**
     * Define the callback to use when displaying a string
     *
     * @param  callback $callback
     * @throws Zend_Translate_Exception
     */
    public function setOutput($callback)
    {
        if (!is_callable($callback)) {
            throw new Zend_Translate_Exception('a valid callback is expected');
        }

        $this-&gt;_output_callback = $callback;
    }

    /**
     * Translate a string and display it
     *
     * @param  string              $messageId  Original to translate
     * @param  string|Zend_Locale  $locale     OPTIONAL locale/language to translate to
     */
    public function output($messageId, $locale = null)
    {
        call_user_func($this-&gt;_output_callback,
                       $this-&gt;translate($messageId, $locale));
    }

    ...
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-03-22T08:32:36.000+0000</p> 
        <div class="body">
            <p>That is logical oliver... but we should first decide IF such a functionality should be added before going into details.</p>

<p>And for now I only received contras and no pros...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-03-22T10:57:22.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
&lt;?php $translate-&gt;print('My translated string', $locale); ?&gt;</code></pre>

<p>May generate invalid XML if translate output contains '&lt;', '&amp;' and so on.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-03-22T11:06:52.000+0000</p> 
        <div class="body">
            <p>This has already been pointed two comments before yours, Alexander...
But these are details which can be solved later on.</p>

<p>The general question which I want to have solved is if we want to add such functionality or not.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Olivier Sirven (slaanesh) on 2007-03-22T11:20:20.000+0000</p> 
        <div class="body">
            <p>Anyway I think the rendering should not be done within Zend_Translate as it is not its job...I'd rather use the display method of my rendering engine....</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2007-03-22T12:52:49.000+0000</p> 
        <div class="body">
            <p>{quote}
This has already been pointed two comments before yours, Alexander...
But these are details which can be solved later on.</p>

<p>The general question which I want to have solved is if we want to add such functionality or not.
{quote}</p>

<p>Issues like the one he pointed out are directly relevant as to whether functionality like this should be included or not.  I really don't feel it's necessary or desirable to have {{Zend_Translate}} printing out strings.</p>

<p>Instead, the method signature of {{translate()}} should be changed to make it easier to use.</p>

<p>Instead of this:</p>

<pre class="highlight"><code>
print $translate-&gt;translate('my string', $locale);
sprintf( $translate-&gt;translate('my string', $locale), $param1, $param2, $param3);
</code></pre>

<p>It could be this:</p>

<pre class="highlight"><code>
print $translator-&gt;translate('my string', $locale);
print $translator-&gt;translate('my string', $locale, array($param1, $param2, $param3));
</code></pre>

<p>Users really should never have to touch {{sprintf()}} to use {{Zend_Translate}}.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-03-22T13:39:19.000+0000</p> 
        <div class="body">
            <p>The described functionallity was not accepted and as the idea proposed here got only negative feedback and not one positive I am closing this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-03-22T13:53:30.000+0000</p> 
        <div class="body">
            <p>I would like to share my opinion in hopes of helping answer [~thomas]'s question:</p>

<p>I tend to agree that although such convenience code is attractive and useful, it appears to be more appropriate for userland. Including such an example in the documentation is a fine idea, provided that it encourages good PHP practices.</p>

<p>I feel that having the component write directly to STDOUT seems to unnecessarily couple the component to the view. Put another way, it would seem to be best practice to decouple the component from the responsibility of writing output and to allow the view logic to perform this, especially considering various output strategies, formats, and filtering requirements.</p>

<p>In summary, I would recommend against adding this to {{Zend_Translate}} proper.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-03-23T03:01:07.000+0000</p> 
        <div class="body">
            <p>{quote}Instead, the method signature of translate() should be changed to make it easier to use.
Users really should never have to touch sprintf() to use Zend_Translate.{quote}</p>

<p>I already had made this change but it was not accepted by the devteam, so I had to revert it to the old behaviour.</p>

        </div>
    </div>
    </div>

