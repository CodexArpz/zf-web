<h2>ZF-10896: Avoid waisting retrieved information at Zend_Service_Amazon_S3::getObjectsByBucket()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-01-03T11:12:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-03T11:12:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Gonzalo Martinez (gmartine)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Service_Amazon</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>While working to retrieve object's information for a set of files stored in an Amazon S3 bucket, I realized that the "Zend_Service_Amazon_S3::getObjectsByBucket()" method, retrieves but chooses to ignore most of the data that the xml request retrieves.</p>

<p>I performed some minor lines changes in the method to avoid this, and I thought that you might want to give it a look and see if the change can be considered to patch the current version;</p>

<p>My version of the method;</p>

<pre class="highlight"><code>
    public function getObjectsByBucket($bucket, $params = array())
    {
        $response = $this-&gt;_makeRequest('GET', $bucket, $params);

        if ($response-&gt;getStatus() != 200) {
            return false;
        }

        $xml = new SimpleXMLElement($response-&gt;getBody());

        $objects = array();
        if (isset($xml-&gt;Contents)) {
            $i = 0;
            foreach ($xml-&gt;Contents as $contents) {
                foreach ($contents-&gt;Key as $object) {
                    $objects[$i]["name"] = (string)$object;
                }
                foreach ($contents-&gt;LastModified as $object) {
                    $objects[$i]["mtime"] = strtotime((string)$object);
                }
                foreach ($contents-&gt;Size as $object) {
                    $objects[$i]["size"] = (int)$object;
                }
                foreach ($contents-&gt;ETag as $object) {
                    $objects[$i]["etag"] = (string)$object;
                }
            ++$i;
            }
        }

        return $objects;
    }
</code></pre>

<p>This works much better for me (quicker/simpler) in order to get all information of requested objects stored at Amazon S3, instead of having to retrieve it one by one using the "getInfo()" method on each one.</p>

<p>I am probably missing something and this can be achieved differently/better without having to mess with the ZF original code, if so, I would appreciate if you could indicate me how.</p>

<p>Best regards,
Gonzalo.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

