<h2>ZF-1800: Zend_Auth_Adapter_DbSelect filename inconsistent with class name</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-08-02T09:11:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-10-05T13:26:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Long (phareous)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Auth</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1801">ZF-1801</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For the incubator file Zend/Auth/Adapter/DbSelect.php</p>

<p>While the filename is DbSelect.php, the class name is Zend_Auth_Adapter_DbTable_Select</p>

<p>This is inconsistent with the filename and causes issue with Zend_Loader::loadClass</p>

<p>The class name should be changed to Zend_Auth_Adapter_DbSelect</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-08-02T09:46:27.000+0000</p> 
        <div class="body">
            <p>Assigning to [~ralph].</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2007-08-02T15:12:55.000+0000</p> 
        <div class="body">
            <p>This component was a Proof Of Concept for Auth using Db and since DbTable better suites the needs of the ZF, I (and core) think its probably best to remove it from the incubator since it has no chance of becoming "core" worthy.</p>

<p>The simple fact is that while it attempted to accomplish giving the developer a more abstract approach to authentication with a database, it actually went TOO FAR, and its goals are too wide ranging to be part of the Zend_Auth_Adapter_* family of adapters.</p>

<p>There exist the possibility that I'll host this offsite as a 3rd party solution, but as for core, its not going in :)</p>

<p>(ill remove from svn later today)</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Long (phareous) on 2007-08-02T15:27:41.000+0000</p> 
        <div class="body">
            <p>Well in my case, the username is in one table, and the password is in another, with a unique id (customernumber) between then. How else could I use Zend Auth to work in this situation without having to write my own extending class against Zend_Auth_DbTable?  It seems Zend_Auth_DbTable is very specific and simple in what it expects and if your database doesn't satisfy that criteria, you are out of luck?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2007-08-04T11:45:35.000+0000</p> 
        <div class="body">
            <p>I'm gonna bounce this to Darby, but I think the answer is going to be you need to subclass, or, create your own authentication adapter.</p>

<p>DbTable fits the 80/20 rule for implementation, and generally speaking, you dont see identities and credentials spit across multiple tables very often.</p>

<p>Darby? any word? (when i close this issue Ill remove the DbSelect file from incubator)</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-08-06T07:38:44.000+0000</p> 
        <div class="body">
            <p>Yes, that's correct, Ralph. The DbTable adapter is quite specific, but the generic DbSelect adapter was too flexible to be a reliable authentication mechanism for our user base. Michael should either subclass the DbTable adapter or write his own adapter that fits whatever schema he has employed. The existing adapter classes should be good examples on which Michael can base his custom adapter code.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2007-10-05T13:26:03.000+0000</p> 
        <div class="body">
            <p>Files removed from svn</p>

        </div>
    </div>
    </div>

