<h2>ZF-7791: Zend_Form doesn't handle PUT/DELETE requests.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-07T06:41:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-02-13T16:50:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alex Zinchenko (admloki)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Luke Barton (lbarton)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2718">ZF-2718</a></li>
            <li><a href="/issues/browse/ZF-7765">ZF-7765</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Good day.</p>

<p>Since 1.9 and Zend_Rest_Route/Zend_Rest_Controller PUT/DELETE methods was added in Zend_Form.
But i founded Zend_Form doesn't handle them as expected. It just changes 'method' form param to PUT/DELETE, instead of creating a hidden '_method' field with necessary values.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Luke Barton (lbarton) on 2009-09-22T13:28:55.000+0000</p> 
        <div class="body">
            <p>I'm interested in opinions on this. Is this a problem we should be solving at all?</p>

<p>Rewriting the Form decorator doesn't really work since the Form decorator is on the end of the decorator stack; decorating with a form field (either in Zend_View_Helper_Form or the Form decorator itself) is a) repeating ourselves to output a form element and b) ignoring any other elements named _method, thus potentially rendering 2 html elements with the same name.</p>

<p>A more elegant solution may be to add an additional decorator to the begining of the default decorator stack; which adds the element and modifies the submission method, letting the existing decorators handle rendering the element in it's own right. This decorator could be removed via removeDecorator() to return handling of 'put' and 'delete' methods to the unhandled way. It would be possible to make this decorator configurable beyond defaults, so the user can alter the type and name of the element so it is not only compatible with the Zend_Rest_Route-style handling. I'd prefer explicitly adding this decorator however adding the decorator would require clearing the stack and re-adding the default decorators, since it's currently not possible to prepend a decorator to the stack. This would make adding the decorator more effort than adding manual handling.</p>

<p>Opinions welcome, I'll reconsider the course of action on Friday 25th of September.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luke Barton (lbarton) on 2009-09-25T11:09:49.000+0000</p> 
        <div class="body">
            <p>I'll extend coments for another week.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Br√ºckner (frosch) on 2013-02-13T16:50:41.000+0000</p> 
        <div class="body">
            <p>A task for ZF2.</p>

        </div>
    </div>
    </div>

