<h2>ZF-10936: CookieJar doesn't allow to disable encoding of cookies.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-01-11T03:03:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-31T08:50:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alwin Garside (yogarine)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Shahar Evron (shahar)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_CookieJar</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When cookies are added normally througt Zend_Http_Client, (e.g. Zend_Http_Client::setCookie()) then Zend_Http_Client::fromString() is used which offers the option to disable encoding through the $encodeValue parameter.</p>

<p>However, when a Zend_Http_CookieJar is used, cookies are set through Zend_Http_CookieJar::addCookie(), which doesn't offer the option. The result being that if you use a CookieJar, you have no control over whether or not the cookies are encoded. This is a problem since CookieJar::addCookiesFromResponse() sets cookies from strings using Zend_Http_CookieJar::addCookie().</p>

<p>This can be fixed in a backwards compatible manner by giving addCookie() an extra optional parameters that allows to define whether the value should be encoded.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

