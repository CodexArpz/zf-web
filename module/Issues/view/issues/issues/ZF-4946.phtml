<h2>ZF-4946: Refactor Zend_Json to add expression support</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-11-14T02:50:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-26T04:27:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-4588">ZF-4588</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Add the possibility of including functions and native javascripts expressions to be encoded by Zend_Json, generating right syntax in the outputted json. The main idea is follow the Zend_Db_Expr pattern, so to include a Javascript Expression to be encoded in an object/array, will be enough to uses something similar to Zend_Json_Expr('javascript expression').</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-03-20T07:51:21.000+0000</p> 
        <div class="body">
            <p>Moved from incubator to trunk in r14399, scheduled for 1.8 release</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oscar Reales (oreales) on 2009-03-20T10:17:33.000+0000</p> 
        <div class="body">
            <p>Benjamin, checking the actual implementation of this, I find the next problem:</p>

<p>Using Zend_Action_Helper_Json, or Zend_View_Helper_Json it is not possible to pass the $options['enableJsonExprFinder'=&gt;true] up to Zend_Json::encode method, making this Helpers unuseful if you want to encode expressions. I mean, I am using the Zend_Action_Helper_Json::sendJson method because it is quite direct way of sending Json as response to an Ajax frontend. This Helpers chain the next actions until arrives to Zend_Json:</p>

<p>1.- Zend_Action_Helper_Json::sendJson($data, $keeplayouts)  this calls to -&gt;
2.- Zend_Action_Helper_Json::encodeJson($data, $keepLayouts) this calls to -&gt;
3.- Zend_View_Helper_Json::json($data, $keepLayouts) this-&gt;calls to -&gt;
4.- Zend_Json::encode($data) without other params as cycleCheck and options for encode method.</p>

<p>It would be useful to allow enabling Json Expr Finder from Helpers. I find 2 ways of doing this:</p>

<p>1.- Including an optional 3rd param in the Helpers: Zend_Action_Helper_Json::sendJson($data, $keepLayouts, $optionsForEncodeMethod)  and the same in Zend_View_Helper_Json, so Zend_Json::encode can receive it. This will suppose to change a few methods and classes</p>

<p>2.- Doing enableJsonExprFinder a static prop in Zend_Json, so before using Helpers, if you want to enable Expr Finder, can include Zend_Json::enableExprFinder = true</p>

<p>What do you think?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-03-20T10:42:41.000+0000</p> 
        <div class="body">
            <p>Let's go with option one. I'd change this slightly, however, and overload the second parameter to the helper. If a boolean, then it sets the keepLayouts flag; if an array, then it uses that array to set options (and allows passing the keepLayouts option via that array).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oscar Reales (oreales) on 2009-03-26T04:27:31.000+0000</p> 
        <div class="body">
            <p>Time Worked: 1 hour</p>

<p>Recode of Zend_Controller_Action_Helper_Json and Zend_View_Helper_Json to allow pass options up to Zend_Json::encode (as enableJsonExprFinder=&gt;true) is done.</p>

<p>I have tried to do a Test of it, but including Zend_View_Helper_Json "breaks" my unitTesting, so I couldnÂ´t do it.</p>

        </div>
    </div>
    </div>

