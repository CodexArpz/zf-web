<h2>ZF-329: Removal of loadInterface() Method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-08-21T19:46:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-21T08:12:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.7.0 (18/Jan/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Art Hundiak (cerad)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-410">ZF-410</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There has been confusion over the loadInterface() method in Zend.php.  We believe loadInterface() is not needed, and developers should either use require() or require_once() when including files defining interfaces.</p>

<p>Thus loadInterface() is deprecated and will be removed from Zend.php, unless somone provides practical reasons to keep it.   Documentation must also be updated to reflect this change.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2006-08-22T09:21:57.000+0000</p> 
        <div class="body">
            <p>Are we also removing loadClass(), then? Of course, loadClass() cannot load interface classes because it uses class_exists().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-08-22T12:03:23.000+0000</p> 
        <div class="body">
            <p>{quote}Are we also removing loadClass(), then? Of course, loadClass() cannot load interface classes because it uses class_exists().{quote}</p>

<p>No. Zend::loadClass() serves a valid purpose by providing a mechanism for factory methods to load classes, but throw exceptions on error conditions.</p>

<p>Loading interfaces is different, since the class using the interfaces should simply use "require_once()" directly in the file containing the source code for the class.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-09-27T16:33:03.000+0000</p> 
        <div class="body">
            <p>I would think that keeping Zend::loadInterface makes more sense.</p>

<p>Since ZF has a concept of namespaces, and Zend::loadClass understands that, it seems logical to maintain a similar loading system for interfaces.</p>

<p>Basically, if I call:</p>

<pre class="highlight"><code>
Zend::loadClass('Zend_Controller_Router');
</code></pre>

<p>it seems logical that I should also be able to call:</p>

<pre class="highlight"><code>
Zend::loadInterface('Zend_Controller_Router_Interface');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-09-27T16:41:28.000+0000</p> 
        <div class="body">
            <p>Why use loadInterface() instead of require_once?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-09-27T16:43:38.000+0000</p> 
        <div class="body">
            <p>Well, why use loadClass()?</p>

<p>If you are abstracting the actual file and using a namespace for your classes, then wouldn't it make more sense to do the same for interfaces?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-09-27T16:55:38.000+0000</p> 
        <div class="body">
            <p>Sorry if i sounded gruff on my last comment, wasn't intended.</p>

<p>I just think that a common method for utilizing namespaces for classes and interfaces should remain.
The fact that Zend::loadInterface() knows how to translate the name into an actual file exactly like loadClass() seems more coherent.</p>

<p>barring the fact that Zend.php couldn't use that method, every other class in the ZF could use it to load needed interfaces and classes.  Although currently the ZF classes seem to use require_once for interfaces instead.  Is there a significant speed difference?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-09-27T16:58:48.000+0000</p> 
        <div class="body">
            <p>{quote}Well, why use loadClass()?</p>

<p>If you are abstracting the actual file and using a namespace for your classes, then wouldn't it make more sense to do the same for interfaces?
{quote}</p>

<p>No. This question was answered in my response above on 22/Aug/06.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-09-27T17:12:52.000+0000</p> 
        <div class="body">
            <p>Ok,  I'll admit, I must be confused.  I have read your comments and you seem to say that Zend::loadClass() is really just for factory methods, yet in tutorials on usign ZF they commonly use:</p>

<pre class="highlight"><code>
Zend::loadClass('Zend_Controller_Front');
</code></pre>

<p>Now, if I understand what you are saying, we should really just use:</p>

<pre class="highlight"><code>
require_once('Zend/Controller/Front.php');
</code></pre>

<p>And leave Zend::loadClass() to the factory methods?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-09-27T18:16:44.000+0000</p> 
        <div class="body">
            <p>See the last section on <a href="http://framework.zend.com/wiki/x/PQ">this page</a>.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-09-27T18:26:40.000+0000</p> 
        <div class="body">
            <p>Cute. ;)
I notice you just added that.<br />
Shouldn't things like Coding Standards be discussed, or are you the final judge on the standards?
And if I disagree with that standard, what would be the correct forum for discussion?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-09-27T22:04:56.000+0000</p> 
        <div class="body">
            <p>Yes, by chance the ZF team just discussed that section and agreed to it before your posting.</p>

<p>Coding standards are always open for discussion.  In fact we specifically moved them to the wiki to encourage improvement and discussion within the community (see numerous past emails on the topic in fw-general).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christopher Thompson (christopher) on 2006-09-28T20:59:22.000+0000</p> 
        <div class="body">
            <p>I don't think the arguement "No. Zend::loadClass() serves a valid purpose by providing a mechanism for factory methods to load classes, but throw exceptions on error conditions." is exactly valid.</p>

<p>loadClass and the other load classes do a little more than just support factory methods. They convert names to paths and verify that the file and contents are what are being requested. None of them are needed as they are convenience methods.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-09-28T21:15:17.000+0000</p> 
        <div class="body">
            <p>Hmmm .. in what way is the statement not valid? Is it not true? The statement provides the key reason why loadClass() is needed and should not be removed.  Using PHP's require_once statement does allow an error to be thrown.  Thus, a key reason exists for using loadClass().  The other reasons are weaker.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Ratzloff (mratzloff) on 2006-10-01T11:26:01.000+0000</p> 
        <div class="body">
            <p>I don't understand why this an issue.  Is Zend::loadInterface() really detracting from the Zend base class?</p>

<p>I prefer the function over require_once simply because it matches loadClass and does additional error checking.  If it didn't exist I would write it myself.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2006-10-02T02:25:15.000+0000</p> 
        <div class="body">
            <p>IMHO if Zend::loadInterface() is needed by some developers, then loadClass can be extended, for example like this:
```</p>

<p>In Zend classes I think we have to use require_once (not loadClass or loadInterface), because loadClass for me is an external tool. So in project I use require_once only once :) when calling <em>require_once 'Zend.php';</em> then I use only Zend::loadClass().</p>

<p>Anyway if some of developers are using loadInterface, why not to leave it? I thought framework developed to make a unified tool or a wraper to frequently used functions :)</p>

<p>And the main reason, why I post comment is my idea of improvement of Zend::loadClass(), described in ZF-410.
Some child classes are optional. The example is <em>Zend_Config</em> and <em>Zend_Config_Array</em>.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-10-02T11:06:55.000+0000</p> 
        <div class="body">
            <p>BTW, loadClass() is not IDE/tool friendly, while {{require_once}} can be auto-completed by tools, thus providing immediate "code-time" feedback about spelling errors, unlike the runtime exceptions resulting when using {{loadClass()}} with a spelling error in its argument.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2006-10-03T03:22:34.000+0000</p> 
        <div class="body">
            <p>Well. Maybe you're right.
But I gues there are a lot of developers who still be using loadClass and loadInterface...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:13:46.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-12-18T11:42:21.000+0000</p> 
        <div class="body">
            <p>Fixed in changeset 2387.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by nike shox (nike shox) on 2012-11-21T08:12:42.000+0000</p> 
        <div class="body">
            <p>There are in svart, Grønt and gult <a href="http://www.nikeshoxsko.biz">http://www.nikeshoxsko.biz</a> Farge, they have høye and Lave Topper are built with environmentally skinn, kork sockliners, resirkulert <a href="http://www.nikeshoxsko.biz">http://www.nikeshoxsko.biz</a> Skum last and slipes gummi outsoles.Support PUMA pågående environmentally <a href="http://www.nikeshoxsko.biz">http://www.nikeshoxsko.biz</a> friendly tiltaket and Stolt representere fargene Jamaica at the å plukke opp Bolten ny <a href="http://www.nikeshoxsko.biz">http://www.nikeshoxsko.biz</a> future joggesko i løbet af on Shinzo and Provocacao.</p>

        </div>
    </div>
    </div>

