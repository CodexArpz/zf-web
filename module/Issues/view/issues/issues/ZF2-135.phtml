<h2>ZF2-135: CLONE - Memcache Semaphore Keys</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2012-01-09T19:32:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-09T19:36:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>While using the memcached backend there's no way to specify that a save should not occur if there is already a value in the cache thereby indirectly causing race conditions when adding a semaphore. By implementing an option to specify semaphoreIds this can be avoided.</p>

<pre class="literal">
        if (!(array_key_exists($id, $this-&gt;_options['semaphoreIds']))) {
            // ZF-8856: using set because add needs a second request if item already exists
            $result = @$this-&gt;_memcache-&gt;set($id, array($data, time(), $lifetime), $flag, $lifetime);
        } else {
            $result = $this-&gt;_memcache-&gt;add($id, array($data, time(), $lifetime), $flag, $lifetime);
        }
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-01-09T19:36:18.000+0000</p> 
        <div class="body">
            <p>fixed</p>

<p>Now there are the methods defined on interface:
 - setItem(s) - replace or add one or more items
 - addItem(s) - only add one or more items
 - replaceItem(s) - replace one or more existing items</p>

        </div>
    </div>
    </div>

