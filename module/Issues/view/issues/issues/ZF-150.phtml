<h2>ZF-150: Error in driver selection</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-27T00:07:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.1.5 (11/Jul/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When trying to use 'pdo_mysql' it throws exceptions that it can't find Zend_Db_Adapter_Pdo__Mysql
Error is on line: 166
$adapterName = 'Zend_Db_Adapter_Pdo_' . substr($adapterName, 3);</p>

<p>To fix it it must be replaced with:
$adapterName = 'Zend_Db_Adapter_Pdo_' . substr($adapterName, 4);</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-06-27T00:38:59.000+0000</p> 
        <div class="body">
            <p>This problem has been reported multiple times on the mail list.
The current solution:   use 'pdomysql' instead of 'pdo_mysql'</p>

<p>However, the current code's inflexibility towards '_' and capitalization is not "user-friendly".</p>

<p>Untested solution follows:</p>

<pre class="highlight"><code>$ svn diff
Index: Db.php
===================================================================
--- Db.php      (revision 698)
+++ Db.php      (working copy)
@@ -165,8 +165,12 @@
             throw new Zend_Db_Exception('Configuration must be an array');
         }

-        if (substr($adapterName, 0, 3) == 'pdo') {
-            $adapterName = 'Zend_Db_Adapter_Pdo_' . substr($adapterName, 3);
+        $adapterName = strtolower($adapterName); # normalize input
+        if (substr($adapterName, 0, 3) === 'pdo') {
+            $adapterName = 'Zend_Db_Adapter_Pdo_' .
+                           str_replace(' ',
+                                       '_' ,
+                                       ucfirst(ltrim(substr($adapterName, 3),'_')));
         } else {
             $adapterName = 'Zend_Db_Adapter_' .
                            str_replace(' ',
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2006-06-27T22:16:17.000+0000</p> 
        <div class="body">
            <p>Sorry, didn't found any reports on such topic. Well, I'm not very clear of how to use this issue tracker and other things on this project :( that's why I've reported. By the way, where I can find unreleased versions? I haven't found any links on them.</p>

<p>Both versions, yours and mine will work, but imho my version is easier. Maybe I'm wrong. :) Because your version is more universally.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-06-28T10:55:58.000+0000</p> 
        <div class="body">
            <p>First, thank you for creating an issue for this problem.  Problems get solved because people have patience to report them using our issue tracker.</p>

<blockquote>
  <p>By the way, where I can find unreleased versions?</p>
</blockquote>

<p>I was just about to discuss this with the dev team.
The link isn't as obvious as it could be, especially since the unreleased, development version often is "superior" to the 0.1.x build.  Please look here:
<a href="http://framework.zend.com/wiki/display/ZFDEV/Zend+Framework+Subversion+%28SVN%29+Standards">Developer Version of ZF</a></p>

<p>Your version will break all existing, working ZF apps that use pdomysql instead of pdo_mysql.
I don't like how much code my patch uses, but it allows:
* pdomysql
* pdoMysql
* pdo_mysql
* pdo_MySQL
* PDO_mysql
* etc.</p>

<p>Our goal:  make ZF easy to use.  Since we don't want developers to study the relationship between "pdo&lt;name of PDO adapter" and our file naming structure for these subcomponents, we choose to make the code more forgiving of capitalization variances and make the '_' optional.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aleksey V. Zapparov (ixti) on 2006-06-29T00:11:17.000+0000</p> 
        <div class="body">
            <p>Thank you for your responses.</p>

<p>I agree with you about pdo... Even totally agree.
About downloading other versions, I have to note that it's very hard to find where i can download.
Link that you gave - I saw, but even this fact doesn't help me to find what I'm looking for :)
Anyway I'll try to understand where I should look for :)</p>

<blockquote>
  <p>Our goal: make ZF easy to use. 
  IMHO, it's would be beter if people can choose, what brach they want to look for, 0.1.3, 0.1.5 or 0.2.0,
  So they can download latest snapshot of framework and try it. I guess it can accelerate bug discovering.
  And it will also raise usability :)</p>
</blockquote>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-07-03T17:44:09.000+0000</p> 
        <div class="body">
            <p>Fixed.  Click the FishEye link above for more information.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-07-11T13:21:12.000+0000</p> 
        <div class="body">
            <p>Note:  There were numerous commits repeatedly fixing and breaking this issue (by breaking support for 'pdomysql'), but release 0.1.5 will support both 'pdo_mysql' and 'pdomysql'.  Release 0.2 will <em>not</em> support 'pdomysql'.  The use of underscores is now deprecated.</p>

        </div>
    </div>
    </div>

