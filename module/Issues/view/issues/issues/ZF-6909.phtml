<h2>ZF-6909: Disabling a form element should prevent it from accepting a new value</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-04T19:43:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-25T19:19:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10056">ZF-10056</a></li>
            <li><a href="/issues/browse/ZF-12020">ZF-12020</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If a Zend Form element is disabled (server-side), it should not accept a value, even if one is posted.</p>

<p>For example, given the following form with "text" element "my_text_field"</p>

<pre class="highlight"><code>
$form-&gt;my_text_field-&gt;disabled = 'disabled';
if ($form-&gt;isValid($_POST)) {
    // ...
}
</code></pre>

<p>If a value is sent for "my_text_field" in $_POST, the element's value is still updated via the Zend_Form::isValid() call.</p>

<p>I would consider this sort of validation to be on par with a "select" element's default ability to only accept values from its "option" list.</p>

<p>Before you ask "how is a value submitted if the field is disabled", consider how easy client-side manipulation is.</p>

<p>Cheers</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-06-04T19:58:02.000+0000</p> 
        <div class="body">
            <p>Against what data would you Zend_Form want to check if it was updated?</p>

<p>{quote}Before you ask "how is a value submitted if the field is disabled", consider how easy client-side manipulation is.{quote}</p>

<p>Though that is true, 'disabled' fields are occasionally also used to be changed by javascript, so client-side "manipulation" cannot automatically be assumed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Phil Brown (philbrown) on 2009-06-04T20:06:33.000+0000</p> 
        <div class="body">
            <p>bq. Against what data would you Zend_Form want to check if it was updated?</p>

<p>It wouldn't have to. What I would propose is some checking in Zend_Form_Element::setValue() or Zend_Form_Element::isValid().</p>

<p>bq. changed by javascript</p>

<p>"select" elements may also have their option list altered client-side. I'd consider handling disabled fields in the same ballpark as handling selects in regards to the submitted data they will or will not accept by default.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-06-05T05:11:20.000+0000</p> 
        <div class="body">
            <p>Simply mark the element as ignored in addition to disabled; Zend_Form will then not return its value when you request it, nor will it attempt to validate it (which means the value will not be overwritten).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Phil Brown (philbrown) on 2009-09-29T19:20:27.000+0000</p> 
        <div class="body">
            <p>Further on this, if the element is disabled, when validated its value is set to null / empty as disabled form fields are not included in the submission. Setting the ignore flag appears to do nothing as I can't see it used in either Zend_Form::isValid() or Zend_Form_Element::isValid().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Edouard Cunibil (duael) on 2010-01-28T07:26:44.000+0000</p> 
        <div class="body">
            <p>I have the same issue than Phil Brown. 
I use disabled fields to show contextual data but when the isValid method is called, each one is cleared. I don't really understand the purpose of the current behavior so I hope it could be changed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-03-09T02:30:09.000+0000</p> 
        <div class="body">
            <p>Matthew, while your Statement is true for getValue(s), in the current implementation ZF-ver-1.10.2, ignored is not honored when validating form data.</p>

<p>What would be the expected behaviour when validating an ignored Element?</p>

<p>1.) Validate true, but do not setValue,
2.) Validate false and do not setValue</p>

<p>When 1.) some might think posted Data is save to process further.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Havens (misbehavens) on 2010-03-24T11:21:04.000+0000</p> 
        <div class="body">
            <p>I have been running into the same issue for a while, but I think I just found a solution: use {{isValidPartial()}} instead of {{isValid()}}.</p>

<pre class="literal">
$form-&gt;populate($originalData);
$form-&gt;my_text_field-&gt;disabled = 'disabled';
if ($form-&gt;isValid($_POST)) {
    //form is not valid
    //since my_text_field is disabled, it doesn't get submitted in the request
    //isValid() will clear the disabled field value, so now we have to repopulate the field
    $form-&gt;my_text_field-&gt;value($originalData['my_text_field']);
    $this-&gt;view-&gt;form = $form;
    return;
}

// if the form is valid, and we call $form-&gt;getValues() to save the data, our disabled field value has been cleared!


//...however, if we use isValidPartial()...

$form-&gt;populate($originalData);
$form-&gt;my_text_field-&gt;disabled = 'disabled';
if ($form-&gt;isValidPartial($_POST)) {
    //isValidPartial() will NOT clear the disabled field value, so we don't have to repopulate the field!!!
    $this-&gt;view-&gt;form = $form;
    return;
}

// now if we call $form-&gt;getValues(), our data is as we expect
</pre>

<p>Now that I have found a solution, I am far less frustrated, although I would agree that it doesn't seem right that {{isValid()}} would clear a disabled field's value.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Havens (misbehavens) on 2010-03-24T11:25:25.000+0000</p> 
        <div class="body">
            <p>Oops, my code sample was supposed to say</p>

<p>{{if (!$form-&gt;isValid($_POST)) { //not valid}}</p>

<p>not</p>

<p>{{if ($form-&gt;isValid($_POST)) {}}</p>

<p>and I can't figure out how to edit my comment. Sorry.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Derek Gray (dgray90) on 2012-01-23T17:52:21.000+0000</p> 
        <div class="body">
            <p>In response to Matt:</p>

<p>"Simply mark the element as ignored in addition to disabled; Zend_Form will then not return its value when you request it, nor will it attempt to validate it (which means the value will not be overwritten)."</p>

<p>IsValid does not appear to ignore the elements that are flagged to be ignored. Why is this? You clearly think this is how it is supposed to work (and I agree tremendously) but that is not how it behaves.</p>

        </div>
    </div>
    </div>

