<h2>ZF-2624: Message-ID getter/setter</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-02-12T11:31:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-28T02:16:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.3 (19/Jan/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Satoru Yoshida (satoruyoshida)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11487/ZF-2624.patch">ZF-2624.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm evaluating moving Mantis issue tracker code (<a href="http://www.mantisbt.org">http://www.mantisbt.org</a>) from phpmailer to Zend::Mail.<br />
When notification mails are sent from a mantis installation, the Message-ID is set in such a way that subsequent mails coming from the same issue are threaded properly by email readers.</p>

<p>Right now, I can not find (neither in 1.5PR) any method for setting and getting the value of the Message-ID header, so this is clearly a blocker, at least in my use case.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T15:48:53.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize/assign as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-04-19T03:03:33.000+0000</p> 
        <div class="body">
            <p>Will, I guess your comment is not addressed to me?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-08-04T08:17:33.000+0000</p> 
        <div class="body">
            <p>No. I was addressing Nico, who is the lead for the Zend_Mail component.
Would you like to fix this one yourself?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-08-20T00:43:28.000+0000</p> 
        <div class="body">
            <p>The attached patch provides the required functions.</p>

<p>I am not sure if the setMessageId() method needs the same "sanitization" as you do in other header setters like setSubject(); that would be trivial to add though</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-08-20T13:30:35.000+0000</p> 
        <div class="body">
            <p>Will, Nico, are there any chances this could be reviewed/pushed to SVN in time for 1.6 gold?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-09-09T07:34:45.000+0000</p> 
        <div class="body">
            <p>Ok, now that 1.6 is released, are you able to assign a target version to this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2008-09-12T12:48:30.000+0000</p> 
        <div class="body">
            <p>Hadn't much time lately, but my current target for most mail issues is 1.7.</p>

<p>One question about this. You say you want the mails to be in the correct thread. Wouldn't it be more correct to add a message-id to the references header? I don't know how you decide to which thread a message belongs, but it seems like you'd sending several messages with the same message-id, which is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-09-13T07:59:47.000+0000</p> 
        <div class="body">
            <p>Yes, re-reading the description I realize the wording was not really clear.</p>

<p>Basically, the first mail we send on bug creation has a Message-ID composed from some unique data about the bug (ID, creation timestamp, etc).</p>

<p>When notes are added or other events trigger a mail to be sent, we are able to set a "In-Reply-To" header with the original Message-ID, and threading works as expected.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-11-12T14:27:32.000+0000</p> 
        <div class="body">
            <p>Anything more I can do here?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2008-12-13T08:56:55.000+0000</p> 
        <div class="body">
            <p>ping...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-01-03T07:30:52.000+0000</p> 
        <div class="body">
            <p>I think following is better.</p>

<p>1) At first , user calls enableMessageId() function that enables creating id before sending message.
for example,</p>

<p>public function enableMessageId($flag)
{
  $this-&gt;_useMessageId = (boolean) $flag;
}</p>

<p>2)At second, user calls send method without calling creating id method.</p>

<p>send() method has creating message id  logic,</p>

<p>if ($this-&gt;_useMessageId === true) {
         //Here is logic that creates message id. 
    }</p>

<p>3) Thus, each time own id will be created without forgetting change value.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2009-01-03T18:23:36.000+0000</p> 
        <div class="body">
            <p>We can support both. Make it {{public function setMessageId($id = true)}}
If $id is null or false no message-id header is added, if it's true a new id is generated, else the given one is taken.
I didn't had the time to really look into the format for message-ids, but we already have to generate unique ids for writing to maildir. If we could reuse the functionality (making it a static method in Zend_Mail), that would be great.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2009-01-05T09:41:50.000+0000</p> 
        <div class="body">
            <p>Nico, I guess you did not notice my patch?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-01-05T23:29:45.000+0000</p> 
        <div class="body">
            <p>Hi,  Gianluca Sforna .
I will try to update this issue in next holiday ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gianluca Sforna (giallu) on 2009-01-06T00:58:13.000+0000</p> 
        <div class="body">
            <p>Hi Satoru (I guess that's your first name... mine is Gianluca); nice to see some activity here!</p>

<p>I just hope the next holiday where you live is not next Christmas ;)</p>

<p>Feel free to let me know if/how my patch should be revised and I can provide you an updated one.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-01-08T08:50:47.000+0000</p> 
        <div class="body">
            <p>Solved in SVN r13555</p>

<p>I added 4 methods.</p>

<p>setMessageId,  getMessageId,  clearMessageId,  createMessageId.</p>

<p>Hi, Gianluca
Thank you for your kindness, but never mind.
I am not in the Orthodox church, a Buddhist :-)</p>

<p>I will be happy if you try new functions!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-01-14T21:29:30.000+0000</p> 
        <div class="body">
            <p>Additional Fix in SVN r13643.</p>

<p>Message-Id should be error on addHeader() function.</p>

        </div>
    </div>
    </div>

