<h2>ZF-1993: Font Width for 14 standard fonts</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2007-09-25T11:51:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-31T16:12:01.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Logan Buesching (ljbuesch)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-313">ZF-313</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10830/ZendFontWidthPatch.txt">ZendFontWidthPatch.txt</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When looking through the Zend_Pdf library, I noticed that the font width's for glyphs used synthetic numbers and not the actual widths.  I recently looked up the numbers on Adobe's site: <a href="http://www.adobe.com/devnet/font/">http://www.adobe.com/devnet/font/</a> (In particular I used the UNIX specs), and changed the values accordingly.  This aids in doing things such as centering and positioning text.</p>

<p>Attached is the corresponding patch.</p>

<p>This patch is against Zend Framework Release 1.0.1 (build 5906).</p>

<p>Thanks,
Logan Buesching</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Logan Buesching (ljbuesch) on 2007-09-25T11:52:32.000+0000</p> 
        <div class="body">
            <p>Corresponding patch which updates the glyph width values.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Logan Buesching (ljbuesch) on 2007-09-25T11:53:40.000+0000</p> 
        <div class="body">
            <p>Attached file</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Willie Alberty (willie) on 2007-09-25T16:15:24.000+0000</p> 
        <div class="body">
            <p>The glyph widths themselves are not synthetic -- they are taken directly from the same Adobe core 14 AFM (Adobe Font Metrics) files you were looking at.</p>

<p>What is synthesized are the glyph <em>numbers</em>. If you look a bit farther down in these classes, you'll see an array called {{$cmapData}}, which is the character code-to-glyph mapping array. This array translates Unicode code points (characters) to the appropriate glyph numbers for the font.</p>

<p>For custom fonts (currently only OpenType, though Type 1 support is on the roadmap), the glyph widths and character-to-glyph map are read from the font itself. These metrics data are then included in the generated PDF document.</p>

<p>Since every PDF viewer is required to support the standard 14 PDF fonts (Helvetica, Times, Courier, Symbol, and Zapf Dingbats), none of the metrics data needs to be written to the PDF, so the glyph numbers that are used by the framework are for internal-use only and so the specific numbers used are not important.</p>

<p>Look at the {{$cmapData}} values: you will see that <em>character code</em> U+0020 SPACE ({{0x20}}) is mapped to <em>glyph number</em> {{0x01}}, which has a width is {{0x0116}}. <em>Character code</em> U+003F QUESTION MARK {{0x3f}} is mapped to <em>glpyh number</em> {{0x20}}, with a width of {{0x0263}}.</p>

<p>You were probably getting incorrect width calculations because you were asking for the wrong widths. In your patch, you have confused character codes with glyph numbers. Characters and glyphs are related, but totally distinct concepts. A good primer can be found here: <a href="http://developer.apple.com/documentation/Cocoa/Conceptual/TextArchitecture/Concepts/TextSystemFeatures.html">http://developer.apple.com/documentation/Cocoa/â€¦</a></p>

<p>Calculating the width of a string requires two steps. You must first convert the abstract characters to concrete glyphs (the typesetting phase), then calculate the widths of those glyphs. There is a function in ZF-313 which shows you how to do this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-31T16:12:00.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize as necessary.</p>

        </div>
    </div>
    </div>

