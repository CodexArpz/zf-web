<h2>ZF-6654: Chaining routes with wildcard (*) does not work</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-14T08:29:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-12-17T17:41:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8515">ZF-8515</a></li>
            <li><a href="/issues/browse/ZF-7399">ZF-7399</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Reproduce code:</p>

<pre class="highlight"><code>
$userRoute = new Zend_Controller_Router_Route_Hostname(':nickname..'.$configuration-&gt;general-&gt;domain,
                    array('controller'=&gt;'profile', 'action'=&gt;'view'));

$userActionsRoute = new  Zend_Controller_Router_Route(':action/*',
                    array('action'=&gt;'view'));
$router-&gt;addRoute('uActionsRoute', $userRoute-&gt;chain($userActionsRoute));
</code></pre>

<p>This have the simple purpose to have URLs like:
username.domain.com/action/*, for example john.domain.com/image/id/76</p>

<p>but in ZF 1.8.1 the above route 'uActionsRoute' does not match such URLs. This is because in Controller/Router/Route.php there is a bug in match() method - when matching wildcard variables, $matchedPath is not updated.</p>

<p>Proposed fix:</p>

<pre class="highlight"><code>
                // Path is longer than a route, it's not a match
                if (!array_key_exists($pos, $this-&gt;_parts)) {
                    if ($partial) {
                        break;
                    } else {
                        return false;
                    }
                }                               
                
                // If it's a wildcard, get the rest of URL as wildcard data and stop matching
                if ($this-&gt;_parts[$pos] == '*') {
                    $count = count($path);
                    for($i = $pos; $i &lt; $count; $i+=2) {
                        $var = urldecode($path[$i]);                        
                        //start fix:
                        $matchedPath .= $path[$i] . $this-&gt;_urlDelimiter;
                        if (isset ($path[$i+1]))
                        {
                            $matchedPath .= $path[$i+1] . $this-&gt;_urlDelimiter;
                        }
                        //end fix

                        if (!isset($this-&gt;_wildcardData[$var]) &amp;&amp; !isset($this-&gt;_defaults[$var]) &amp;&amp; !isset($values[$var])) {
                            $this-&gt;_wildcardData[$var] = (isset($path[$i+1])) ? urldecode($path[$i+1]) : null;
                        }
                    }
                    break;
                }

                //fix: moved this after the above IF block
                $matchedPath .= $pathPart . $this-&gt;_urlDelimiter;
                //end fix

                $name     = isset($this-&gt;_variables[$pos]) ? $this-&gt;_variables[$pos] : null;
                $pathPart = urldecode($pathPart);
// and so on...
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-14T09:15:38.000+0000</p> 
        <div class="body">
            <p>Assigning to Ben to triage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrei Nikolov (viperx) on 2009-05-15T04:09:44.000+0000</p> 
        <div class="body">
            <p>Sorry, wrong fix.. here is fix of the fix :)</p>

<p>//start fix:
$matchedPath .= $path[$i] . $this-&gt;_urlDelimiter;
if (isset ($path[$i+1]))
{
    $matchedPath .= $path[$i+1] . $this-&gt;_urlDelimiter;
}
//end fix</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrei Nikolov (viperx) on 2009-07-20T15:16:17.000+0000</p> 
        <div class="body">
            <p>Whats going on with this issue? Reported 2 months ago, provided you with the patch code, and still not fixed.. This is just not serious attention..</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc van de Geijn (bhosted) on 2009-07-22T04:45:30.000+0000</p> 
        <div class="body">
            <p>I ran into this issue also and it took me a day to find the problem. It would be very nice if this is fixed in the next release of the Framework.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc van de Geijn (bhosted) on 2009-07-22T04:52:58.000+0000</p> 
        <div class="body">
            <p>I checked, but this issue is still present in the 1.9 preview release.</p>

<p>Unfortunatly I'm not allowed to change the affected versions for this issue. Is it an option to clone this issue and change the affected version?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc van de Geijn (bhosted) on 2009-07-22T05:07:31.000+0000</p> 
        <div class="body">
            <p>Last comment from me on this issue. I've fixed it another way:</p>

<pre><code>            // If it's a wildcard, get the rest of URL as wildcard data and stop matching
            if ($this-&gt;_parts[$pos] == '*') {
                $count = count($path);
                for($i = $pos; $i &lt; $count; $i+=2) {
                    $var = urldecode($path[$i]);
                    if (!isset($this-&gt;_wildcardData[$var]) &amp;&amp; !isset($this-&gt;_defaults[$var]) &amp;&amp; !isset($values[$var])) {
                        $this-&gt;_wildcardData[$var] = (isset($path[$i+1])) ? urldecode($path[$i+1]) : null;
                    }
                }
                $matchedPath = implode( $this-&gt;_urlDelimiter, $path );
                break;
            }
</code></pre>

<p>I think it's safe to implode the $path array and assign it to $matchedPath, as the wildcard for loop is processing the full path.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jason Webster (jasonistaken) on 2009-08-13T17:12:06.000+0000</p> 
        <div class="body">
            <p>Cleaned up formatting in report.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stéphane (stephane) on 2009-08-18T06:22:02.000+0000</p> 
        <div class="body">
            <p>Well, I also encountered this issue today and lost quite some time. Hopefully, the fix proposed by Andrei just did it. I hope this patch will make its way to the next minor release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stéphane (stephane) on 2009-08-18T07:04:54.000+0000</p> 
        <div class="body">
            <p>Just a little update. I finally had to use Marc's fix as there was a variable scope issue with the one provided by Andrei. I am using ZF 1.9.1.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michiel Thalen (chielsen) on 2009-10-12T20:58:29.000+0000</p> 
        <div class="body">
            <p>About time this gets fixed, very annoying this does not work and you are trying to figure out how the routing works.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Artur Bodera (joust) on 2009-10-13T10:57:39.000+0000</p> 
        <div class="body">
            <p>It is a close one to the one I've stumbled upon when using chains and ``'' (empty) static routes: ZF-7848</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jeroen Weustink (j.weustink) on 2009-10-20T06:13:51.000+0000</p> 
        <div class="body">
            <p>Just updated to 1.9.4 and issue still isn't fixed..?????</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Young (kyoung) on 2009-10-28T13:58:18.000+0000</p> 
        <div class="body">
            <p>This issue still persists with 1.9.5.</p>

<p>Marc van de Geijn's fix solved the problem for me.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc van de Geijn (bhosted) on 2009-11-30T04:38:05.000+0000</p> 
        <div class="body">
            <p>This issue still persists with 1.9.6.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sune Kibsgaard Pedersen (kibs) on 2009-12-10T05:04:02.000+0000</p> 
        <div class="body">
            <p>Will this be fixed in 1.9.7?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by chaoshu sha (shachaoshu@gmail.com) on 2009-12-10T05:34:07.000+0000</p> 
        <div class="body">
            <p>this below maybe another fix,</p>

<h1>Index: Route.php</h1>

<p>--- Route.php   (revision 1324)
+++ Route.php   (working copy)
@@ -239,6 +239,7 @@
                         $var = urldecode($path[$i]);
                         if (!isset($this-&gt;_wildcardData[$var]) &amp;&amp; !isset($this-&gt;_defaults[$var]) &amp;&amp; !isset($values[$var])) {
                             $this-&gt;_wildcardData[$var] = (isset($path[$i+1])) ? urldecode($path[$i+1]) : null;
+                            $matchedPath .= $this-&gt;_wildcardData[$var] . $this-&gt;_urlDelimiter;
                         }
                     }
                     break;</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-12-17T08:33:43.000+0000</p> 
        <div class="body">
            <p>This doesn't seems to get fixed even now, on 1.9.7...</p>

<p>Lot of unfixed bugs on core ZF components :(</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrei Nikolov (viperx) on 2009-12-17T08:45:22.000+0000</p> 
        <div class="body">
            <p>well, why fixing this bug, when we can just go and manually fix it every time when we upgrade ZF version.. really no need to fix it</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-12-17T09:31:41.000+0000</p> 
        <div class="body">
            <p>I have made my own route class based on your fix, but of course, this is also a problem at any Route.php update, we loose the updates to the match function...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-12-17T09:46:48.000+0000</p> 
        <div class="body">
            <p>Actually i don't understand why there is planned a 2.0 release if doesn't seems to be 1.x branch usable without lot of manual fixes. I have quite lot of "fix" classes taken from the Jira, just to cleanup the bugs from framework...</p>

<p>I guess for a very small project - newbies like - is possible that you won't find any bugs, but even for small-medium projects is impossible to develop without tons of classes to fix the bugs...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Artur Bodera (joust) on 2009-12-17T11:29:03.000+0000</p> 
        <div class="body">
            <p>I concur. I've got a pack of diff/patches to fix the holes, but it's ridiculous.</p>

<p>For example, the bug reported by me (ZF-7848) and related to static routes has a test scenario taken directly from ZF documentation examples! So something that is given in docs as an example is broken dead.</p>

<p>What is even more puzzling is that I've already devised a fix and posted it here, but none cares to use it :-)</p>

        </div>
    </div>
    </div>

