<h2>ZF-834: Zend_Date's setDst() method will always fail</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-01-31T13:33:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It looks like an extra "else" was forgotten in the Zend_Date setDst() method.  Whatever the parameter is, the exception will always be thrown.</p>

<p>Here's a suggested fix:</p>

<pre class="highlight"><code>   /**
     * Sets a new DST value
     *   NULL  = Default behavior
     *   FALSE = Do not use summer/wintertime
     *   TRUE  = Use summer/wintertime
     */
    public function setDst($dst = null)
    {
        if ($dst === null) {
            $this-&gt;_DST = -1;
        } else if ($dst === false) {
            $this-&gt;_DST = 0;
        } else if ($dst === true) {
            $this-&gt;_DST = 1;
        } else {
            throw new Zend_Date_Exception("dst ($dst) has to be boolean or null", $dst);
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-01-31T14:04:50.000+0000</p> 
        <div class="body">
            <p>The useage of DST is depreciated as with PHP 5.1 (see the PHP documentation for details).</p>

<p>It is therefor deleted for the new 0.8 branch.
For details use the actual branch I18N-pre0.8 from SVN.</p>

<p>No DST or GMT functions are avaiable anymore...
Instead timezones have to be used as this is the new PHP behaviour.</p>

        </div>
    </div>
    </div>

