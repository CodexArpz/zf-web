<h2>ZF-3519: Multiple filters not working</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-26T08:37:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-23T10:59:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Eddo Rotman (karnaf)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If we want only log two specific level, we will do something like:
{quote}
        $filter1 = new Zend_Log_Filter_Priority(Zend_Log::ERR,'eq');
        $writer-&gt;addFilter($filter1);</p>

<pre><code>    $filter2 = new Zend_Log_Filter_Priority(Zend_Log::ALERT,'eq');
    $writer-&gt;addFilter($filter2);
</code></pre>

<p>{quote}
This will only log Zend_Log::ERR because in the writer, it will be return if we send an event Zend_Log::ALERT, because the loop will return at the first false match and will not test the second filter.
{quote}
        foreach ($this-&gt;_filters as $filter) {
            if (! $filter-&gt;accept($event)) {
                return;
            }
        }
{quote}
A possible solution could be:
{quote}
$accepted= false;
        foreach ($this-&gt;_filters as $filter) {
            $accepted= $accepted|| $filter-&gt;accept($event);
        }</p>

<p>if (!$accepted)
{
    return;
}
{quote}</p>

<p>Avoiding a workaround like:
{quote}
        $filter1 = new Zend_Log_Filter_Priority(Zend_Log::ERR);
        $writer-&gt;addFilter($filter1);</p>

<pre><code>    $filter2 = new Zend_Log_Filter_Priority(Zend_Log::CRIT,'ne');
    $writer-&gt;addFilter($filter2);

    $filter3 = new Zend_Log_Filter_Priority(Zend_Log::EMERG,'ne');
    $writer-&gt;addFilter($filter3);
</code></pre>

<p>{quote}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-26T09:29:00.000+0000</p> 
        <div class="body">
            <p>This is indeed unintended behavior. I'll leave this open so that it will be corrected soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Rehbein (tech13) on 2010-02-23T10:59:25.000+0000</p> 
        <div class="body">
            <p>As per: <a href="http://framework.zend.com/manual/en/zend.log.filters.html">http://framework.zend.com/manual/en/â€¦</a>
{quote}
When you add one or more Filters to the Log object, the message must pass through all of the Filters before any Writers receives it. 
{quote}</p>

<p>Therefore, when you filter the way you did, the error must both be Zend_Log::EMERG and Zend_Log::ALERT at the same time.</p>

<p>Currently, Zend_Log_Filter doesn't support an "Or" filter.</p>

<p>Another way to handle it is to filter for all the priorities you do not want.</p>

        </div>
    </div>
    </div>

