<h2>ZF-6687: Zend_Tool_Framework_Loader_Abstract class is raised lots of warnings in load method. (Zend_Tool_Framework_Loader_Abstract::load)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-16T07:20:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-16T22:25:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Tool</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12094/zf-6687.patch">zf-6687.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>To reproduce this bug install the zf from zfcampus.org by using pear installer.</p>

<p>Then just run a zf command which is the cause of tons of warnings.</p>

<p>Warnings is generated by include_once function in Zend_Tool_Framework_Loader_Abstract::load method when it tries to include all the files it find in include_path.</p>

<p>To avoid this problems: just set @ before the include_once function, but probably framework developers should pay more attention to this problems.</p>

<p>Affected code fragment with fixed error:</p>

<pre class="highlight"><code>
        // loop through files and find the classes declared by loading the file
        foreach ($this-&gt;_retrievedFiles as $file) {
            $classesLoadedBefore = get_declared_classes();
            $oldLevel = error_reporting(E_ALL | ~E_STRICT); // remove strict so that other packages wont throw warnings
            // should we lint the files here? i think so
@            include_once $file;
            error_reporting($oldLevel); // restore old error level
            $classesLoadedAfter = get_declared_classes();
            $loadedClasses = array_merge($loadedClasses, array_diff($classesLoadedAfter, $classesLoadedBefore));
        }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-06-28T16:19:56.000+0000</p> 
        <div class="body">
            <p>Can you provide the warnings produced in a comment here?</p>

<p>Thanks, Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-07-22T00:32:20.000+0000</p> 
        <div class="body">
            <p>I get the same type of error repeated many times. I am on php 5.3.0 however.</p>

<p>Warning: include_once(): Failed opening '/usr/local/lib/php/PHPUnit/TextUI' for inclusion (include_path='/media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/library:.:/usr/local/lib/php') in /media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/library/Zend/Tool/Framework/Loader/Abstract.php on line 90</p>

<p>Call Stack:
    0.0005     335828   1. {main}() /media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/bin/zf.php:0
    0.0169     829996   2. Zend_Tool_Framework_Client_Console::main() /media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/bin/zf.php:77
    0.0170     830600   3. Zend_Tool_Framework_Client_Abstract-&gt;dispatch() /media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/library/Zend/Tool/Framework/Client/Console.php:86
    0.0170     830600   4. Zend_Tool_Framework_Client_Abstract-&gt;initialize() /media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/library/Zend/Tool/Framework/Client/Abstract.php:192
    0.0198     944160   5. Zend_Tool_Framework_Loader_Abstract-&gt;load() /media/sdb1/giorgio/vendor/ZendFramework-1.8.4PL1/library/Zend/Tool/Framework/Client/Abstract.php:101</p>

<p>This stack trace is repeated for every subdirectory in my include_path, /usr/local/lib/php. It seems that the IncludePathLoader/RecursiveFilterIterator class is correctly filtering out phpunit files but not directories.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-07-22T01:04:08.000+0000</p> 
        <div class="body">
            <p>Quick fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-07-22T01:06:09.000+0000</p> 
        <div class="body">
            <p>IncludePathLoader::_getFiles() returns the directories from the Pear installation. I attached a quick fix to exclude all directories not filtered since it is not possible to include_once a directory.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gordon Forsythe (baohx) on 2009-07-30T14:34:36.000+0000</p> 
        <div class="body">
            <p>Having this issue as well.  PHP5.3.  The patch works.  Hopefully this will go into 1.9 soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Grover Manuel Campos Ancajima (gmanuel) on 2009-09-02T14:59:20.000+0000</p> 
        <div class="body">
            <p>I think the solution is other, in load method:</p>

<p>Change this line:</p>

<pre class="highlight"><code>
      $oldLevel = error_reporting(E_ALL | ~E_STRICT); // remove strict so that other packages wont throw warnings
</code></pre>

<p>For this:</p>

<pre class="highlight"><code>
            $oldLevel = ini_get('error_reporting'); // remove strict so that other packages wont throw warnings
</code></pre>

<p>In order get the error_reporting of php.ini and don't setup an arbitrary error_reporting code.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-10-16T22:25:38.000+0000</p> 
        <div class="body">
            <p>Marking as not an issue.  In 1.10, the behavior will be to NOT use the includePathLoader which has been causing all sorts of issues.</p>

<p>IN this issue, the problem is that the current user does not have the correct permissions to traverse directories, and as such, directories are being returned to be incldued (which is bad behavior).</p>

<p>In 1.10, we willl default to what is called the "BasicLoader" (this is already in incubator and working).  This is a better approach as it will only load what it is told to load.  Developers will be able to extend Zend_Tool via the config (ini) file for Zend_Tool, another featuer that is part of 1.10.</p>

        </div>
    </div>
    </div>

