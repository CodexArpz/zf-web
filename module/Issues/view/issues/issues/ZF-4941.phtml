<h2>ZF-4941: Broken ViewRenderer inflections for   :controller with custom dispatcher.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-13T12:57:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-21T05:00:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Colin Guthrie (coling)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11637/ViewRenderer-Fix-Broken-Controller-Formatting.patch">ViewRenderer-Fix-Broken-Controller-Formatting.patch</a></li>
            <li><a href="/issues/secure/attachment/11649/ViewRenderer-Fix-Broken-Controller-Formatting2.patch">ViewRenderer-Fix-Broken-Controller-Formatting2.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have a custom dispatcher which changes the class structure of the controllers to better suit my file layout and autoloading infrastructure. Therefor my dispatcher::formatControllerName function does not return strings that end in "Controller" as per the default.</p>

<p>In the ViewRenderer.php file there is the function:</p>

<pre class="highlight"><code>
 protected function _translateSpec(array $vars = array())
 {
   ...
   $controller = substr($dispatcher-&gt;formatControllerName($request-&gt;getControllerName()), 0, -10);
   ...
 }
</code></pre>

<p>Obviously this code is assuming the normal "Controller" suffix on controller names, but with a custom dispatcher this may not be the case.</p>

<p>In my code I have a controller name of "Controller_Index", this is converted to "Contro", by the above line, and ultimately to "contro" later on.</p>

<p>This assumption is not documented in the:
<a href="http://www.framework.zend.com/manual/en/zend.controller.actionhelpers.html#zend.controller.actionhelpers.viewrenderer">http://framework.zend.com/manual/en/…</a></p>

<p>which talks about the conventions surrounding the automatic conversions:</p>

<p>{quote}
:controller: MixedCase and camelCasedWords are separated by dashes; underscores are converted to directory separators, and the entire string cast to lower case. Examples: "FooBar" becomes "foo-bar"; "FooBar_Admin" becomes "foo-bar/admin".</p>

<p>Internally, the inflector uses the filters Zend_Filter_Word_CamelCaseToDash, Zend_Filter_Word_UnderscoreToSeparator, and Zend_Filter_StringToLower.
{quote}</p>

<p>Perhaps the dispatcher should have another method called:
formatControllerNameForManipulation() that (by default) does not append the "Controller" suffix that formatControllerName does. This would avoid the need for the substr(..., 0, -10) and is a something that could be controlled in a custom dispatcher?</p>

<p>I need to implement a solution here, so I'd like to know the right approach to take, so the patch can go upstream. I'll attach my first stab at a fix in a moment, and I'd really appreciate feedback.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Colin Guthrie (coling) on 2008-11-13T13:00:38.000+0000</p> 
        <div class="body">
            <p>Here is a patch that adds a new method to the Dispatcher interface and the abstract implementation. This should be mostly backwards compatible. For those who have defined a custom dispatcher, it may have some impact if they implement a creative formatControllerName method and use</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Colin Guthrie (coling) on 2008-11-13T13:11:11.000+0000</p> 
        <div class="body">
            <p>Forgot to say that I've not yet filled in the contributor agreement thing... I'm falling behind on such things.... I'll do it shortly but rest assured you can use the patch attached however you see fit :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Colin Guthrie (coling) on 2008-11-20T06:47:14.000+0000</p> 
        <div class="body">
            <p>I found another occurrence of the same assumption in ViewRenderer. This updated patch addresses this.</p>

<p>I also removed the removal of the redundant call that I mentioned in my last patch as this is a different issue and I don't want to cloud the real issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-20T12:37:32.000+0000</p> 
        <div class="body">
            <p>This is a backwards incompatible patch as it adds a new method to an existing interface -- this would be an API break for anybody implementing the interface currently.</p>

<p>The real issue here is that we pull the controller name from the dispatcher, which, in the standard implementation, returns the class name (i.e., 'index' gets returned as IndexController). What should likely happen instead is that we pull it via the request object. I will work on a fix immediately.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-20T12:56:59.000+0000</p> 
        <div class="body">
            <p>Fix applied in trunk for the formatControllerName() issue (no longer uses it; instead, pulls directly from the request object). Use the ViewRenderer's inflector to format the name accordingly for view script mapping.</p>

<p>(Fix applied to trunk in r12725 and 1.7 release branch in r12726)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Colin Guthrie (coling) on 2008-11-21T04:19:30.000+0000</p> 
        <div class="body">
            <p>Awesome, thanks Matthew.</p>

<p>Forgive me for being a tool, but I can find your first commit fine (<a href="http://framework.zend.com/code/rdiff/Zend_Framework?csid=12725&amp;u&amp;N">http://framework.zend.com/code/rdiff/…</a>) but wanted to copy the patch of your second one to my 1.7 version and cannot for the life of me find it.</p>

<p>It doesn't seems to be in either Zend_Framework or Standard_Library that I can see :s If you could direct me (more for future reference as I'm sure the patch still applies) that would be great.</p>

<p>Also should I close this issue our you? Not quite sure of the workflow here....</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-21T05:00:07.000+0000</p> 
        <div class="body">
            <p>The two revisions are the same -- the first was simply applied against trunk, the second against the 1.7 release branch (so that it will be picked up in future 1.7.x releases). You can use the one you linked to to apply against your install.</p>

<p>Typically the person fixing the issue closes it; I'll do so.</p>

        </div>
    </div>
    </div>

