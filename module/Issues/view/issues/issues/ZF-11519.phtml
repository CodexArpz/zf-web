<h2>ZF-11519: Zend_Dojo doesn't take into account https with the CDN</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-07-01T09:05:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-09T19:54:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dojo</li>
            <li>state:patch-ready-for-review</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14727/ZF-11519-combined.patch">ZF-11519-combined.patch</a></li>
            <li><a href="/issues/secure/attachment/14644/ZF-11519-tests.diff">ZF-11519-tests.diff</a></li>
            <li><a href="/issues/secure/attachment/14621/ZF-11519-tests.diff">ZF-11519-tests.diff</a></li>
            <li><a href="/issues/secure/attachment/14643/ZF-11519.diff">ZF-11519.diff</a></li>
            <li><a href="/issues/secure/attachment/14620/ZF-11519.diff">ZF-11519.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Dojo only contains the http url for the Google CDN, 
If someone wanted to use a https connection for their application they will receive the "unsecure elements" message in the browser while using the CDN.</p>

<p>ZendX_JQuery has implemented a mechanism for switching to the https connection on the Google CDN
There should be comparable functionality available in Zend_Dojo.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2011-08-26T07:54:48.000+0000</p> 
        <div class="body">
            <p>Will work on this over the weekend.</p>

<p>I noticed that AOL doesn't have an SSL version of the CDN, so I'll implement it for Google only.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2011-08-26T13:31:25.000+0000</p> 
        <div class="body">
            <p>Patch + tests attached.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Basic (robertbasic) on 2011-08-26T13:32:29.000+0000</p> 
        <div class="body">
            <p>Reassigning to Matthew to review the patch and tests.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by PÃ¡draic Brady (padraic) on 2011-08-28T10:28:28.000+0000</p> 
        <div class="body">
            <p>I've reviewed the patch and confirm it operates as intended. Recommend committing to trunk and merging to release branch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Paul Verhoeven (paul verhoeven) on 2011-08-29T08:35:28.000+0000</p> 
        <div class="body">
            <p>Please don't commit to trunk. The patch works, but it only loads the dojo.js file over SSL. It then xhrloads the rest of default modulepaths (/dojo, /dijit &amp; /dojox) and any additional module-namespaces over non SSL connection. This could be fixed by including the right paths through registerModulePath() but it wouldn't solve the main problem.</p>

<p>SSL should always work. ATM it also doesn't work when Dojo's hosted locally, which should be first priority. Also Google and AOL both support SSL for their CDN's (only AOL's unsigned). There's also a new CDN for Dojo (Yandex) which supports signed SSL, so SSL should work for any CDN. Fixing this problem by hardcoding the scheme into the class is not the way to go. There would need to be some kind of scheme detection, either through inspecting $_SERVER['HTTPS'] or $request-&gt;isSecure(). A correct fix opens up a whole can of worms, some of which i've already addressed but i needed to break BC and can in the light of ZF2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Paul Verhoeven (paul verhoeven) on 2011-09-14T12:05:41.000+0000</p> 
        <div class="body">
            <p>Reworked my solution intented for ZF2 to not break ZF1. Setting of scheme is now applies to all dojo assets: base, source, layer, module and stylesheetpaths. Setting of scheme is per default based on $_SERVER['HTTPS'] but can be forced through setting resources.dojo.secure = true/false or api setSecure(true/false). Added tests to confirm behaviour. Please comment and/or review.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-11-08T13:27:54.000+0000</p> 
        <div class="body">
            <p>Reformatted and applied Paul's patches ({{ZF-11519-combined.patch}}).  The Dojo suite ran (after adding it to Zend_AllTests) without any issues related to the dojo view helper itself, though I did get three failures in other view helpers due to encoding of attribute values (see ZF-11875).</p>

        </div>
    </div>
    </div>

