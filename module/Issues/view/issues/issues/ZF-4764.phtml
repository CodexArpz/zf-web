<h2>ZF-4764: Zend_Server_Abstract changed breaking backwards compability</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-01T03:03:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-13T14:10:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Server_Reflection</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Why did the Zend_Server_Abstract have to change? I know this is part of performance issue fixing, but this shouldn't change the backwards compability of the abstract class!</p>

<p>Rather create a new Abstract class that inherits from the old one.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-11-01T03:11:06.000+0000</p> 
        <div class="body">
            <p>additionally the change also removed that strange lower() static function in the abstract class which is not used by any Zend component anymore but nevertheless COULD be used by a 3rd party. It has to readded to the class until 2.0 for BC reasons!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-02T07:00:45.000+0000</p> 
        <div class="body">
            <p>I will re-instate the missing public methods to Zend_Server_Abstract. However, a couple of notes:</p>

<ul><li>Prior to the recent refactoring, the only class that extended it from within ZF was Zend_Rest_Server. All functionality present in it was specific to that implementation.</li>
<li>The currently coded functionality actually <em>is</em> shared now, between both the XmlRpc and Json server implementations. I plan to refactor Zend_Rest_Server to make use of it in the future</li>
<li>All old methods and properties that have been removed will be marked as deprecated, and the methods will now trigger an error (E_USER_NOTICE) noting this.</li>
</ul><p>Honestly, I've heard of <em>nobody</em> building on Zend_Server_Abstract, and I suspect it's because it simply had no value previously.</p>

<p>BTW, the new implementation offers the ability to create Zend_Server_Definition objects -- which make it trivial to perform the actual implementation of servers, as well as to share server definitions between different protocols.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-11-02T07:14:13.000+0000</p> 
        <div class="body">
            <p>I havent heard of anyone building on Zend_Server_Abstract either.</p>

<p>Due to no obvious reason Zend_Soap_AutoDiscover extends Zend_Server_Abstract. I want to change that but will wait for the 2.0 release to make that BC change.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-05T07:44:39.000+0000</p> 
        <div class="body">
            <p>$magic_methods protected member and lowerCase() static method re-added as of r12300, but marked as deprecated.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:25.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

