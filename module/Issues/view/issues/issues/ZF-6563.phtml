<h2>ZF-6563: Rendering a Zend_Form in a dojo enabled view (with parseOnLoad set to true) parses widgets twice and throws js 'widget already registered' exception</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-05-06T15:24:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-20T11:57:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jesse Meek (waigani)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dojo</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5929">ZF-5929</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Problem:</p>

<p>Rendering a Zend_Form in a dojo enabled view adds the following javascript to addOnLoad:</p>

<pre class="highlight"><code>
dojo.forEach(zendDijits, function(info) {
        var n = dojo.byId(info.id);
        if (null != n) {
            dojo.attr(n, dojo.mixin({ id: info.id }, info.params));
        }
    });
    dojo.parser.parse();
</code></pre>

<p>If dojo is set to parseOnLoad, then all dojo widgets get parsed twice, throwing exceptions like the following: "Tried to register widget with id==widgetId but that id is already registered";</p>

<p>Solution:</p>

<p>The offending line is dojo.parser.parse(); which parses the entire DOM. Only the zendDijits in the foreach should be parsed.</p>

<p>Patch:</p>

<p>Lines 778 - 797 in Zend_Dojo_View_Helper_Dojo_Container.</p>

<pre class="highlight"><code>
    public function registerDijitLoader()
    {
        if (!$this-&gt;_dijitLoaderRegistered) {
            $js =&lt;&lt;requireModule('dojo.parser');
            $this-&gt;prependOnLoad($js);
            $this-&gt;addJavascript('var zendDijits = ' . $this-&gt;dijitsToJson() . ';');
            $this-&gt;_dijitLoaderRegistered = true;
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mark (lightflowmark) on 2009-05-20T06:02:44.000+0000</p> 
        <div class="body">
            <p>The proposed patch does not quite work.</p>

<p>While it appears to solve the problem, for some reason it does not parse the actual form element as a dijit.  Thus, for a form like
</p>
if you use the patch, then 
dijit.byId('someID'); is undefined (whereas dojo.byId('someID) returns the form object).

<p>This prevents you doing many interesting things with the form object, such as validating it and passing it to the xhr* functions.</p>

<p>However, a workaround seems to be using the declarative form of Dojo rather than the programmatic by calling Zend_Dojo_View_Helper_Dojo::setUseDeclarative();</p>

<p>This excludes the troublesome 
dojo.parser.parse();
entirely, and therefore solves the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-11-20T11:56:39.000+0000</p> 
        <div class="body">
            <p>dojo.parser.parse() should be provided the parent element of one or more elements that it should parse; you cannot point it to the element itself.</p>

<p>The easy solution to this is: don't set the parseOnLoad djConfig value to true manually when using ZF. When we do programmatic execution, dojo.parser.parse() will be called for you during an onLoad event; when we do declarative, the parseOnLoad djConfig option will be set for you.</p>

        </div>
    </div>
    </div>

