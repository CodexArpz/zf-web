<h2>ZF-9017: Zend_Db_Select does not prepend the schema name to the table name following the SELECT clause</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-29T13:49:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-02T18:18:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Justus Weber (justusw)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I've personally only tried this when querying a MS SQL Server 2005 database.</p>

<p>Zend_Db_Select fails to add the schema name to the table name when querying a table in the database that has a schema other than the default.  So, the following code:</p>

<p>$select = $db-&gt;select()-&gt;from('my_schema.my_table_name');
$stmt = $select-&gt;query();
$result = $stmt-&gt;fetchAll();</p>

<p>Will have generated a SQL string that looks something like:</p>

<p>SELECT "my_table_name".* FROM "my_schema"."my_table_name"</p>

<p>rather than:</p>

<p>SELECT <em>"my_schema"</em>."my_table_name".* FROM "my_schema"."my_table_name"</p>

<p>As it currently stands the SQL Server returns an error, and an exception gets thrown.  I've been able to update Zend_Db_Select::_renderColumns such that the schema name is prepended to the table name after the SELECT clause, and it works for my purposes, though I am not familiar enough with the code to know if it will work for everyone all the time.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Andrew Keller (akeller) on 2012-08-02T18:18:43.000+0000</p> 
        <div class="body">
            <p>I know this is an old issue, but I work with Justus Weber and can clarify this problem.  Although the database in question is hosted on a SQL Server 2005 server, the database compatibility level is set to SQL Server 2000 (80).  The compatibility level was probably the result of a 2000-&gt;2005 server upgrade.  Before SQL Server 2005, the <a href="http://social.msdn.microsoft.com/Forums/en/transactsql/thread/1b4e3ccc-25c2-4e66-939f-51e97aca580e#b3cac9e8-5c6d-48dd-b050-bdd6d1baa8e7">schema name is required on column names</a>.</p>

<p>If someone is stuck with a SQL Server 2000 database or compatibility level, you can still use Zend_Db_Select by setting aliases.</p>

<p>Example:</p>

<pre class="literal">
$select = $db-&gt;select()
             -&gt;from(array('alias' =&gt; 'my_schema.my_table_name'))
             -&gt;joinInner(array('alias2' =&gt; 'my_schema.my_table_name2'),
                         'alias.ID = alias2.ID');
</pre>

<p>If you want to reference another database with a three-part name, you probably need to use the optional schema parameter of the from() and join*() methods.  Presumably this works with four-part names as well but I haven't tried.</p>

<p>Example:</p>

<pre class="literal">
$select = $db-&gt;select()
             -&gt;from(array('alias' =&gt; 'my_table_name'),
                    array(),
                    'my_database.my_schema')
             -&gt;joinLeft(array('alias2' =&gt; 'my_table_name2'),
                        'alias.ID = alias2.ID',
                        array(),
                        'my_database.my_schema');
</pre>

<p>Using this approach, I have been able to query SQL Server 2000 compatibility level databases with Zend_Db_Select and Zend_Paginator.  I have tested on pristine copies of the 1.10.7 and 1.11.12 Zend Frameworks.</p>

<p>So the query syntax of SQL 2000 definitely doesn't work well with Zend_Db_Select, but with some tricks it does work.</p>

        </div>
    </div>
    </div>

