<h2>ZF-10148: Zend_Config_Ini does not properly nest array properties</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-07-13T11:39:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-27T09:00:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-11612">ZF-11612</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Config_Ini does not properly nest when array properties are present.  When given a config file like this:</p>

<p>property.one.value = foo
property.two.value = bar
property.array.value[] = foo
property.array.value[] = bar</p>

<p>I can do this:</p>

<p>echo $cfg-&gt;property-&gt;one-&gt;value; // prints foo</p>

<p>I would expect to be able to do the following:</p>

<p>$array = $cfg-&gt;property-&gt;array-&gt;value-&gt;toArray(); // returns a 2-element array with "foo" and "bar"</p>

<p>but that fails.  Inspecting the data of the Zend_Config_Ini object, the key for the array entries is "property.array.value", not "property" with subkey "array" and sub-subkey "value".</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2010-07-15T13:00:45.000+0000</p> 
        <div class="body">
            <p>For an ini file like this:</p>

<pre class="highlight"><code>
[production]
property.one.value = foo
property.two.value = bar
property.array.value[] = foo
property.array.value[] = bar
</code></pre>

<p>Loaded like this:</p>

<pre class="highlight"><code>
$config = new Zend_Config_Ini($filename, 'production');
Zend_Debug::dump($config-&gt;property-&gt;array-&gt;value-&gt;toArray());
</code></pre>

<p>I get this:</p>

<pre class="highlight"><code>
array(2) {
  [0] =&gt; string(3) "foo"
  [1] =&gt; string(3) "bar"
}
</code></pre>

<p>However, something goes wrong if you don't have a section defined.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2010-07-15T13:29:11.000+0000</p> 
        <div class="body">
            <p>I don't think this is fixable.</p>

<p>For an ini file of"</p>

<pre class="highlight"><code>
property.one.value = foo
property.two.value = bar
property.array.value[] = foo
property.array.value[] = bar

[test.value]
a = b
c = d
</code></pre>

<p>parse_ini_file() will give this array:</p>

<pre class="highlight"><code>
array(4) {
  ["property.one.value"] =&gt; string(3) "foo"
  ["property.two.value"] =&gt; string(3) "bar"
  ["property.array.value"] =&gt; array(2) {
    [0] =&gt; string(3) "foo"
    [1] =&gt; string(3) "bar"
  }
  ["test.value"] =&gt; array(2) {
    ["a"] =&gt; string(1) "b"
    ["c"] =&gt; string(1) "d"
  }
}
</code></pre>

<p>There's no way to determine the difference between "property.array.value" which is a key and "test.value" which is a section heading. Therefore we assume that they are both section headings which is why you get the behaviour you do.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2010-07-16T01:28:40.000+0000</p> 
        <div class="body">
            <p>Another way to do this is for your ini file to look like this:</p>

<pre class="highlight"><code>
property.one.value = foo
property.two.value = bar
property.array.value.0 = foo
property.array.value.1 = bar
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2010-07-16T01:29:54.000+0000</p> 
        <div class="body">
            <p>Resolved as "Won't Fix" as it is not possible to fix it whilst we depend on parse_ini_file()</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-07-16T17:17:37.000+0000</p> 
        <div class="body">
            <p>Let me note once more that for ZF2 we should evaluate if we still want to be dependent on parse_ini_file() since we've run across quite a lot of limitations in this seemingly simple function.</p>

        </div>
    </div>
    </div>

