<h2>ZF-5721: Annoying to debug test cases, Zend_Test_PHPUnit::dispatch() never throws FC exceptions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-02-10T03:36:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-10T04:04:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Test_PHPUnit::dispatch() will always set the FC throw exceptions flag to false, this makes debugging test cases slightly more annoying and lengthy. Allowing the front controller to throw exceptions when using this method would help when tracking down any bugs in the text cases and/or the bootstraping required for testing controllers.</p>

<p>Here's a diff with a trivial fix</p>

<p>diff --git a/library/Zend/Test/PHPUnit/ControllerTestCase.php b/library/Zend/Test/PHPUnit/ControllerTestCase.php
index 3885e00..67ecf76 100644
--- a/library/Zend/Test/PHPUnit/ControllerTestCase.php
+++ b/library/Zend/Test/PHPUnit/ControllerTestCase.php
@@ -146,7 +146,7 @@ abstract class Zend_Test_PHPUnit_ControllerTestCase extends PHPUnit_Framework_Te
      * @param  string|null $url
      * @return void
      */
-    public function dispatch($url = null)
+    public function dispatch($url = null, $throwExceptions = false)
     {
         // redirector should not exit
         $redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
@@ -165,7 +165,7 @@ abstract class Zend_Test_PHPUnit_ControllerTestCase extends PHPUnit_Framework_Te
         $this-&gt;frontController
              -&gt;setRequest($request)
              -&gt;setResponse($this-&gt;getResponse())
-             -&gt;throwExceptions(false)
+             -&gt;throwExceptions($throwExceptions)
              -&gt;returnResponse(false);
         $this-&gt;frontController-&gt;dispatch();
     }</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Graham Anderson (gnanderson) on 2009-02-10T03:38:47.000+0000</p> 
        <div class="body">
            <p>oops, wikified version of the diff</p>

<pre class="literal">

diff --git a/library/Zend/Test/PHPUnit/ControllerTestCase.php b/library/Zend/Test/PHPUnit/ControllerTestCase.php
index 3885e00..67ecf76 100644
--- a/library/Zend/Test/PHPUnit/ControllerTestCase.php
+++ b/library/Zend/Test/PHPUnit/ControllerTestCase.php
@@ -146,7 +146,7 @@ abstract class Zend_Test_PHPUnit_ControllerTestCase extends PHPUnit_Framework_Te
      * @param  string|null $url
      * @return void
      */
-    public function dispatch($url = null)
+    public function dispatch($url = null, $throwExceptions = false)
     {
         // redirector should not exit
         $redirector = Zend_Controller_Action_HelperBroker::getStaticHelper('redirector');
@@ -165,7 +165,7 @@ abstract class Zend_Test_PHPUnit_ControllerTestCase extends PHPUnit_Framework_Te
         $this-&gt;frontController
              -&gt;setRequest($request)
              -&gt;setResponse($this-&gt;getResponse())
-             -&gt;throwExceptions(false)
+             -&gt;throwExceptions($throwExceptions)
              -&gt;returnResponse(false);
         $this-&gt;frontController-&gt;dispatch();
     }
</pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-02-17T08:22:19.000+0000</p> 
        <div class="body">
            <p>I also had the same problem. IMHO the throwExceptions argument might be true by default. Test are executed in a command line environment, so there's no point is wrapping an exception in a error controller or similar one.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-02-17T09:13:26.000+0000</p> 
        <div class="body">
            <p>You know that you can always check the request object for the error_handler parameter, and pull the exception from that object, right? ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-02-24T00:40:13.000+0000</p> 
        <div class="body">
            <p>...OK (127 tests, 331 assertions)
I have many integration tests and I just want to know quickly is something has exploded and front controller is serving a beatiful page (with menu and header and a nice formatted 40+ rows stacktrace in the middle) instead of the correct page. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mike Rheinheimer (rott) on 2009-04-18T20:59:21.000+0000</p> 
        <div class="body">
            <p>I threw in my vote for this issue too.  I had a view partial that was trying to load a partialLoop file that was unable to be found:</p>

<pre><code>echo $this-&gt;partialLoop('viewPartialLoop.phtml', $this-&gt;publicCats);
</code></pre>

<p>The directory where viewPartialLoop.phtml is located was not in my include path.  The exception I should have recieved was:</p>

<pre><code>Fatal error: Uncaught exception 'Zend_View_Exception' with message 'script 'viewPartialLoop.phtml' not found in path ...
</code></pre>

<p>My testcase was only doing this:</p>

<pre><code>    $this-&gt;dispatch('/Categories/view');
    $this-&gt;assertQueryContentContains( 'dd', 'bridals' );
</code></pre>

<p>The error I got was much more obscure, because ControllerTestCase sets frontController-&gt;throwExceptions(false):</p>

<pre><code>    Zend_Dom_Exception: Error parsing document (type == docHtml)
    &lt;path&gt;ZendFramework-1.7.7\library\Zend\Dom\Query.php:190
</code></pre>

<p>This problem turned out to be very difficult to debug.  I had to fire up a server, and point my config, etc, to the proper databases, and hit that controller/action to see the real problem.  Alternatively, I could have just modified ControllerTestCase just long enough to see the real issue.</p>

<p>I think there are three possible solutions:</p>

<p>1)  do as Matthew says and check the request object for the error_handler param and pull any exceptions (for EVERY controller dispatch test, ugh)
2)  extend the ControllerTestCase class and override the dispatch function (again, ugh -- because ControllerTestCase-&gt;dispatch could change in the future)
3)  ControllerTestCase should allow users to specify the 'throwExceptions" for the frontController object (PREFERRED -- and this is what I was trying to do in various ways until I finally looked at the ControllerTestCase-&gt;dispatch function)</p>

<p>That's my 2 cents.  Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mike Rheinheimer (rott) on 2009-04-18T21:46:24.000+0000</p> 
        <div class="body">
            <p>The ideal solution is to perhaps let me do this:</p>

<pre class="highlight"><code>
class MyControllerTestCase extends Zend_Test_PHPUnit_ControllerTestCase
{

    /**
     * I use this setUp method so make sure the front controller has the right default module configured,
     * as well as preventing the error handler from getting called.
     */
    // override
    public function setUp()
    {
        parent::setUp();
        $config = Zend_Registry::get('config');
        $this-&gt;frontController-&gt;setControllerDirectory(array(
                'default' =&gt; $config-&gt;document_root . '/../application/default/controllers'
                ));
        // TODO: ideally, I'd like to be able to do the next three lines, but until <a href="http://framework.zend.com/issues/browse/ZF-5721">http://framework.zend.com/issues/browse/ZF-5721</a> is fixed,
        // these are meaningless because Zend_Test_PHPUnit_ControllerTestCase-&gt;dispatch sets these every time:
        $this-&gt;frontController-&gt;setParam('noErrorHandler', true);
        $this-&gt;frontController-&gt;throwExceptions(true);
        $this-&gt;frontController-&gt;returnResponse(true);
    }

}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-09-18T01:17:11.000+0000</p> 
        <div class="body">
            <p>@Matthew:</p>

<p>how about adding a second parameter:</p>

<pre class="highlight"><code>
public function dispatch($url, $throwExceptions=false)
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michelangelo van Dam (dragonbe) on 2010-07-17T12:31:44.000+0000</p> 
        <div class="body">
            <p>For as long as I've been using ZF, I always have my testing environment report, log errors and throw exceptions.</p>

<p>The minimum I have set up in my "testing" section of my application.ini is the following:</p>

<pre class="highlight"><code>
[testing : production]
phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.frontController.params.displayExceptions = 1
</code></pre>

<p>One point of mentioning is that I use PHPUnit on CLI or within a CI system, but that shouldn't make a difference since tests are tests, no matter where they're run.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aaron S. Hawley (ashawley) on 2011-02-11T08:22:08.000+0000</p> 
        <div class="body">
            <p>I agree that this should be fixed.  Why not just let the user decide.</p>

<pre class="literal">
Index: library/Zend/Test/PHPUnit/ControllerTestCase.php
===================================================================
--- library/Zend/Test/PHPUnit/ControllerTestCase.php    (revision 23692)
+++ library/Zend/Test/PHPUnit/ControllerTestCase.php    (working copy)
@@ -196,7 +196,6 @@
         $this-&gt;frontController
              -&gt;setRequest($request)
              -&gt;setResponse($this-&gt;getResponse())
-             -&gt;throwExceptions(false)
              -&gt;returnResponse(false);
 
         if ($this-&gt;bootstrap instanceof Zend_Application) {
</pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andras Gyomrey (andras) on 2011-04-06T20:13:18.000+0000</p> 
        <div class="body">
            <p>Please, this isn't a huge change. Even the patch is provided. When is it going to be commited?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matt Makins (makiemoo) on 2012-06-08T10:47:42.000+0000</p> 
        <div class="body">
            <p>Like Matthew Weier O'Phinney states use the error_handler param for debugging.</p>

<p>This works in my tests:</p>

<p>// get the errors
$errors = $this-&gt;request-&gt;getParam('error_handler');
// throw the exception so it is apparent on cli when running tests
throw new Zend_Exception($errors-&gt;exception);</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aaron S. Hawley (ashawley) on 2012-06-10T04:04:28.000+0000</p> 
        <div class="body">
            <p>Adding two-lines of code to unit tests is just an admission that this is indeed broken.</p>

<p>I want to use the config file as [~dragonbe] suggests, not add two-lines of code to every unit test or worse have to have maintain a base class that my unit tests inherit from.</p>

        </div>
    </div>
    </div>

