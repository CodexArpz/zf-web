<h2>ZF-1024: Response - named segments</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-03-08T13:53:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1023">ZF-1023</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I suggest considering the possibility of supporting named body segments in the Response object.
This would allow manipulation of specific physical segments in the response, such as prepending a doctype based on the results of an action, then inserting or appending an inline CSS </p>

<p>For example:</p>

<pre class="highlight"><code>
// insert a "header" segment before the "body" segment
$response-&gt;insert('header', 'body', $view-&gt;render($header));
// insert a "doctype" segment at the beginning of the "response"
$response-&gt;prepend('doctype', 'header', $doctype));
// append content to the "header" segment
$response-&gt;appendBody('header', $view-&gt;render('metatags.tpl.php'));
</code></pre>

<p>There are many possible variations of inserting, removing, prepending, appending, and setting segments in this ordered sequence data structure.    Hopefully this Jira issue will prove useful to collect feedback and ideas into a single location for easy reviewing.</p>

<p>An obvious alternative exists using getBody() and setBody(), where all management of "segments" is done in userland.  However, the current implementation of getBody() does not provide access to the {{$_body}} array, and various inefficiencies arise as a result.  Adding support for getting and setting {{$_body}} as an array yields another alternative.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Shaun Rowe (shakie) on 2007-03-12T06:11:44.000+0000</p> 
        <div class="body">
            <p>This is a very cool idea. I'm not too happy with my current header/footer solution and this sounds like a great improvement and something I could really make use of.</p>

<p>Gets my vote.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-03-12T11:35:05.000+0000</p> 
        <div class="body">
            <p>I needed this years ago in order to properly prioritize segments for portal-like websites, where "view panes" were dynamically selected and organized based on user preferences and other input.  Javascript, CSS, and the DOM sometimes requires careful organization of "parts".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shaun Rowe (shakie) on 2007-03-14T08:10:44.000+0000</p> 
        <div class="body">
            <p>I see these changes are in th svn trunk now. Good work guys. can't wait to start playing around with it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-15T13:33:18.000+0000</p> 
        <div class="body">
            <p>Assign Zend_Controller issues to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-03-15T13:38:00.000+0000</p> 
        <div class="body">
            <p>I believe this issue is resolved and the committed patch works as asked for :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shaun Rowe (shakie) on 2007-03-15T13:43:01.000+0000</p> 
        <div class="body">
            <p>I can confirm that ;)</p>

        </div>
    </div>
    </div>

