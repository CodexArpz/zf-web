<h2>ZF-9138: Add sort() to Zend_Mail_Storage_Imap</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2010-02-11T02:36:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail_Storage</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It should be possible to get a list of sequence numbers sorted by a criterion. This is only supported by imap servers that provide the SORT capability.</p>

<p>In Storage_Imap there should be something like this:</p>

<pre class="highlight"><code>/**
 * get sequence ids sorted by a criterion
 *
 * @param string $sortBy
 * @return array
 */
public function listSorted($sortBy = null)
{
    $params = array($sortBy, 'utf-8', 'ALL');
    return $this-&gt;_protocol-&gt;sort($params);
}</code></pre>

<p>In Protocol_Imap then</p>

<pre class="highlight"><code>/**
 * do a sort request
 *
 * @internal
 * @return array message sequence ids
 */
public function sort(array $params)
{
    $response = $this-&gt;requestAndResponse('SORT', $params);
    if (!$response) {
        return $response;
    }
        foreach ($response as $ids) {
        if ($ids[0] == 'SORT') {
            array_shift($ids);
            return $ids;
        }
    }
    return array();
}</code></pre>

<p>This should do the trick.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

