<h2>ZF-1440: Binding parameters and results to PHP variables is broken</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-05-27T18:10:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC2 (08/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1475">ZF-1475</a></li>
            <li><a href="/issues/browse/ZF-1476">ZF-1476</a></li>
            <li><a href="/issues/browse/ZF-1477">ZF-1477</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The function bindParam(), bindValue(), and bindColumn() need some bugfixing.  These are not working with any Zend_Db adapters currently.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jeffrey Sambells (jeffrey) on 2007-05-29T12:10:04.000+0000</p> 
        <div class="body">
            <p>From my testing this seems to be an issue with PDO and the way the execute wrapper is defined:</p>

&lt;?
    /**
     * Executes a prepared statement.
     *
     * @param array $params OPTIONAL Values to bind to parameter placeholders.
     * @return bool
     * @throws Zend_Db_Statement_Exception
     */
    public function execute(array $params = array())
    {
        try {
            return $this-&gt;_stmt-&gt;execute($params);
        } catch (PDOException $e) {
            require_once 'Zend/Db/Statement/Exception.php';
            throw new Zend_Db_Statement_Exception($e-&gt;getMessage());
        }
    }
?&gt;

<p>if you execute the object without any parameters to the Zend execute method:</p>

<p>$stmt-&gt;execute()</p>

<p>$params is assigned an empty array. PDO them seems to use this empty array rather than the parameters from bindParam etc. if you change the function declaration to:</p>

<p>public function execute(array $params = null)</p>

<p>everything begins to work again as without an input it now passes NULL to the PDO execute method rather than an empty array.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jeffrey Sambells (jeffrey) on 2007-05-29T12:25:19.000+0000</p> 
        <div class="body">
            <p>Also, the default NULL values for $type in bindValue() (and possibly others) is also causing issues:</p>

<p>public function bindValue($parameter, $value, $type = null)</p>

<p>If you bind a value without specifying the $type with a PDO::PARAM_* value then the value becomes null when executed.</p>

<p>I suggest changing it to:</p>

<p>public function bindValue($parameter, $value, $type = null)
  {
      if (is_string($parameter) &amp;&amp; $parameter[0] != ':') {
          $parameter = ":$parameter";
      }
      try {
          if(is_null($type)) { return $this-&gt;_stmt-&gt;bindValue($parameter, $value); }
          return $this-&gt;_stmt-&gt;bindValue($parameter, $value, $type);
      } catch (PDOException $e) {
          require_once 'Zend/Db/Statement/Exception.php';
          throw new Zend_Db_Statement_Exception($e-&gt;getMessage());
      }
  }</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-05-29T13:36:35.000+0000</p> 
        <div class="body">
            <p>Thanks for the help debugging, Jeffrey!  That did it -- at least for PDO adapters.</p>

<p>The fixes you suggest have been committed in revision 5048.</p>

<p>I'm going to leave this issue open for now, because I'd like to get it working across all adapters.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-08T20:58:41.000+0000</p> 
        <div class="body">
            <p>This fix was included in 1.0.0 RC2, at least for PDO adapters.</p>

<p>I have opened ZF-1475, ZF-1476, ZF-1477 for these binding features in IBM DB2, Oracle, and Mysqli.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-08T20:59:04.000+0000</p> 
        <div class="body">
            <p>Link to ZF-1475.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-08T20:59:18.000+0000</p> 
        <div class="body">
            <p>Link to ZF-1476.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-08T20:59:30.000+0000</p> 
        <div class="body">
            <p>Link to ZF-1477.</p>

        </div>
    </div>
    </div>

