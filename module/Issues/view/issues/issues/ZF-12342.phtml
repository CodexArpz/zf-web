<h2>ZF-12342: Zend_Config-&gt;merge() does not behave as expected on numerically indexed arrays</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-07-20T10:54:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-12-22T12:35:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Maybe this behavior is somehow justified, however, it was not what I was expecting. When I merge configs containing numerically indexed arrays, the items from one array overwrite, in the other array, the items that have the same numerical index. I would have expected it to work more like PHP {{array_merge()}}, whose documentation reads:</p>

<p>| If the input arrays have the same string keys, then the later value for that key will overwrite the previous one. If, however, the arrays contain numeric keys, the later value will not overwrite the original value, but will be appended.</p>

<p>Here is a code snippet to reproduce the issue:</p>

<p>| $config1 = new Zend_Config(array('item1', 'item2'), true);
  $config2 = new Zend_Config(array('item3'));
  $configMerged = $config1-&gt;merge($config2);
  var_dump($configMerged-&gt;toArray());</p>

<p>The result:</p>

<p>| array (size=2)
  0 =&gt; string 'item3' (length=5)
  1 =&gt; string 'item2' (length=5)</p>

<p>I was expecting:</p>

<p>| array (size=3)
  0 =&gt; string 'item1' (length=5)
  1 =&gt; string 'item2' (length=5)
  2 =&gt; string 'item3' (length=5)</p>

<p>This issue affects at least 1.10.6.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Joshua Stoutenburg (jehoshua02) on 2012-07-20T11:11:11.000+0000</p> 
        <div class="body">
            <p>While waiting, I came up with a cute work around:</p>

<p>| $config1 = new Zend_Config(array('item1', 'item2'), true);
  $config2 = new Zend_Config(array('item3'));
  $configMerged = new Zend_Config(array_merge($config1-&gt;toArray(), $config2-&gt;toArray()));
  var_dump($configMerged);</p>

<p>Result:</p>

<p>| array (size=3)
  0 =&gt; string 'item1' (length=5)
  1 =&gt; string 'item2' (length=5)
  2 =&gt; string 'item3' (length=5)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joshua Stoutenburg (jehoshua02) on 2012-07-27T22:11:17.000+0000</p> 
        <div class="body">
            <p>Turns out my workaround is deficient. Due to the behavior of array_merge(), the indexes are overwritten rather than actually merged.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-12-22T12:35:37.000+0000</p> 
        <div class="body">
            <p>The behaviour that you report is as expected as otherwise, there would be no way to override the first element in an array from a child section.</p>

        </div>
    </div>
    </div>

