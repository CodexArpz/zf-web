<h2>ZF-3389: Zend_Db_Adapter_Pdo_Mysql::_quote() (possibly others) improperly handles null values.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-04T13:29:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-09-23T15:22:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Adapter_Pdo_Abstract::_quote(NULL) returns an empty string instead of the unquoted string NULL.</p>

<p>This is important when inserting/updating data in a column that allows NULLs. 
Its especially important when the column is part of a foreign key relation and inserting an empty string instead of NULL results in a SQL error.
Other adapters may be affected by this as well, I only use PDO_MYSQL.</p>

<p>A fix is to insert the following code into the Zend_Db_Adapter_Pdo_Abstract class:</p>

<p>protected function _quote($value)
{
    if ($value === NULL) {
        return 'NULL';
    }
    return parent::_quote($value);
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by David Rogers (al_the_x) on 2008-06-11T13:35:27.000+0000</p> 
        <div class="body">
            <p>Actually, the proposed solution is insufficient to fix this problem as this will still generate an invalid query:</p>

<p>(<code>field</code> = NULL) â‰  (<code>field</code> IS NULL)</p>

<p>At least in MySQL &gt; 5.1.x, I can attest. In our projects we have overridden the WHERE clause builder in Zend_Db_Table_Abstract to produce the correct query strings for set values, such that PHP's NULL value produces SQL's "IS NULL" expression, PHP arrays produce SQL "IN()" expressions, etc.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-12-21T12:59:57.000+0000</p> 
        <div class="body">
            <p>I am not sure how we'd go about fixing this, you are making the assumption that the database driver contextually understand what you mean by _quote(null).</p>

<p>Perhaps this is a "Won't Fix"?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2011-02-17T15:27:29.000+0000</p> 
        <div class="body">
            <p>Will attempt to address this API inconsistency in ZF2</p>

        </div>
    </div>
    </div>

