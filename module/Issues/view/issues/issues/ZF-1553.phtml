<h2>ZF-1553: ViewRenderer by postdispatch not disabled by controller level invokeArgs setting</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-12T10:56:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The Zend_Controller_Action docs (in the wiki) state that you can turn off the ViewRenderer helper at the Controller level by setting an invoke argument 'noViewRenderer', ie:</p>

<pre class="highlight"><code>
public function init()
{
        // Local to this controller only: 
        $this-&gt;_invokeArgs['noViewRenderer'] = true; 
}
</code></pre>

<p>but this appears to only work if you run the ActionController initView, render or renderView methods. It does not appear to be disabling the helper postDispatch call to render the view.</p>

<p>Here is a  suggested patch to the ViewRenderer init and postDispatch methods to resolve this issue.
Patch:</p>

<pre class="literal">--- Zend/Controller/Action/Helper/ViewRenderer.php      (revision 5261)
+++ Zend/Controller/Action/Helper/ViewRenderer.php      (working copy)
@@ -329,7 +329,8 @@
      */
     public function init()
     {
-        if ($this-&gt;getFrontController()-&gt;getParam('noViewRenderer')) {
+        if ($this-&gt;getFrontController()-&gt;getParam('noViewRenderer')
+         || $this-&gt;_actionController-&gt;getInvokeArg('noViewRenderer')) {
             return;
         }

@@ -763,7 +764,7 @@
         }

         if (!$this-&gt;_noRender
-            &amp;&amp; (null !== $this-&gt;_actionController)
+            &amp;&amp; (null !== $this-&gt;_actionController &amp;&amp; !$this-&gt;_actionController-&gt;getInvokeArg('noViewRenderer'))
             &amp;&amp; $this-&gt;getRequest()-&gt;isDispatched()
             &amp;&amp; !$this-&gt;getResponse()-&gt;isRedirect())
         {
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-12T17:55:59.000+0000</p> 
        <div class="body">
            <p>Assign to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-14T21:49:47.000+0000</p> 
        <div class="body">
            <p>This was a documentation issue, and required no code changes. Instead of setting the appropriate invokeArg (which the poster rightly notes will not work, as the ViewRenderer checks against the front controller), the better method is to simply call setNoRender() via init():</p>

<pre class="highlight"><code>
public function init()
{
    $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender(true);
}
</code></pre>

<p>Updated docs with r5337.</p>

        </div>
    </div>
    </div>

