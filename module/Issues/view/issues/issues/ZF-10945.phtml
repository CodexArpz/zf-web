<h2>ZF-10945: new Zend_Application('ENV', array('config' =&gt; 'path/to/conf')) does not load externally references configuration files</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-01-13T11:31:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-05T02:07:26.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bas K (bas)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9391">ZF-9391</a></li>
            <li><a href="/issues/browse/ZF-10548">ZF-10548</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13594/zf-10945.diff">zf-10945.diff</a></li>
            <li><a href="/issues/secure/attachment/15127/ZF-10945_adamlundrigan.patch">ZF-10945_adamlundrigan.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When passing constructor options to Zend_Application the option exists to feed an array with an config key. This key can either contain a string an an array with strings. This is useful because it allows to feed additional configuration from an external file, overruling the other configuration options that are fed into Zend_Application. A side effect of this is that one can break it configuration into multiple files and have one referencing the other by specifying either an config = path/to/other/config/file (as string) or config[] = path/to/other/config/file (as array) inside the application.ini</p>

<p>However there is a problem with the way Zend_Application handles these cases, resulting that referenced configuration options aren't read.</p>

<p>You can load configuration files in three different ways.</p>

<ol><li>new Zend_Application('ENV', 'path/to/conf');</li>
<li>new Zend_Application('ENV', array('config' =&gt; 'path/to/conf'));</li>
<li>new Zend_Application('ENV', array('config' =&gt; array('path/to/conf', 'path/to/yet/another/conf')));</li>
</ol><p>The problem is with variant 2; only configuration options inside path/to/conf are read. Any references to other configuration files are omitted.
I ran into this problem, because I have my configuration option split among several files. one application.ini that references several resource files. Zend_Tool uses an the second version to get an instance of Zend_Application, resulting that not my complete set of options was available.</p>

<p>Affected version are for sure 1.10.8 till 1.11.2 but presumably earlier ones.</p>

<p>Lead developers stated the following:
"It was never really intended. The reason we have it at all was because of a particular use case where developers wanted to provide some defaults via the initial Zend_Application initialization, but still utilize a config file We never intended to allow nesting of configs, to be honest -- that's something I'm hoping we can build into Zend_Config for ZF2 (instead of emulating within Zend_Application)."</p>

<p>However i would really like to see this improvement materialize, so an attached patch adds this capability. It makes sure circular references aren't followed. The order in which the configuration files are loaded stay the same (options read in earlier files aren't overridden by one loaded later. Included in the patch is a unit test. All other tests still run fine.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bas K (bas) on 2011-05-10T17:49:45.000+0000</p> 
        <div class="body">
            <p>This issue is related to <a href="http://framework.zend.com/issues/browse/ZF-10548">http://framework.zend.com/issues/browse/ZF-10548</a> . But it was suggested the encountered problem does not arise Zend_Tool but in Zend_Application.</p>

<p>However since Zend_Application is unlikely to get modified (because it might have unforeseen consequences) I would rather have this issue closed and 10548 reopened... If the patch mentioned there is applied we can safely work around the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-06-05T02:07:26.000+0000</p> 
        <div class="body">
            <p>Attached a fixed version of the OP's patch (was not generated from trunk directory)</p>

        </div>
    </div>
    </div>

