<h2>ZF-4624: Conditions with Zend_Form</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-10-17T06:14:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-02-12T17:02:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>!<a href="http://www.nabble.com/file/p19177733/example_form.png%7Cwidth=300,height=158">http://nabble.com/file/p19177733/…</a>!</p>

<p>While trying to do some conditions with Zend_Form I figured out that this is actually not possible.  The idea was to have two different Subforms. The main form containing only one element, two radio buttons. When the first radio button is selected, only the first Subform should be validated and the second ignored. When the second radio button is selected, it should be just the other way around. The major reason why this was not possible is that you cannot display the radio buttons between Subforms (as they are one element).  The only way I see you can achieve this is by doing it hardcoded in a ViewScript but then it cannot be validated.</p>

<p>Radio buttons containing none Subform should also be allowed and it should work with other elements as well, for example a dropdown list. Later on dojo could be used to display only the selected Subform.</p>

<p>Forum thread for this issue: <a href="http://www.nabble.com/-Zend-Form--Conditional-SubForms-td19177733.html">http://nabble.com/-Zend-Form--Conditional-SubForms…</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-05-25T15:54:00.000+0000</p> 
        <div class="body">
            <p>{quote}The major reason why this was not possible is that you cannot display the radio buttons between Subforms (as they are one element). The only way I see you can achieve this is by doing it hardcoded in a ViewScript but then it cannot be validated.{quote}
You can:</p>

<pre class="highlight"><code>
class Foo extends Zend_Form
{
    public function init()
    {
        // Radio button
        $this-&gt;addElement(
            'radio',
            'first',
            array(
                'name'         =&gt; 'switch',
                'multiOptions' =&gt; array(
                    1 =&gt; 'First',
                ),
            )
        );
        
        // First subform
        $subform1 = new Zend_Form_SubForm();
        $subform1-&gt;addElement(
            'text',
            'qux',
            array(
                'label'    =&gt; 'Qux',
                'required' =&gt; true,
            )
        );
        $this-&gt;addSubForm($subform1, 'subform1');
        
        // Radio button
        $this-&gt;addElement(
            'radio',
            'second',
            array(
                'name'         =&gt; 'switch',
                'multiOptions' =&gt; array(
                    2 =&gt; 'Second',
                ),
            )
        );      
        
        // Second subform
        $subform2 = new Zend_Form_SubForm();
        $subform2-&gt;addElement(
            'text',
            'qux',
            array(
                'label'    =&gt; 'Qux',
                'required' =&gt; true,
            )
        );
        $this-&gt;addSubForm($subform2, 'subform2');
        
        // Submit button
        $this-&gt;addElement(
            'submit',
            'submit',
            array(
                'label'   =&gt; 'Send',
                'irgnore' =&gt; true,
            )
        );
    }
    
    public function isValid($data)
    {
        if (isset($data['switch']) &amp;&amp; 1 == $data['switch']) {
            foreach ($this-&gt;getSubForm('subform2') as $element) {
                if ($element instanceof Zend_Form_Element) {
                    $element-&gt;setRequired(false);
                }
            }
        }
        if (isset($data['switch']) &amp;&amp; 2 == $data['switch']) {
            foreach ($this-&gt;getSubForm('subform1') as $element) {
                if ($element instanceof Zend_Form_Element) {
                    $element-&gt;setRequired(false);
                }
            }
            $this-&gt;getElement('second')-&gt;setValue('1');
        }
        
        $result = parent::isValid($data);
        
        // Workaround to set values for the checkboxes (element name != name attribute)
        if (isset($data['switch']) &amp;&amp; 1 == $data['switch']) {
            $this-&gt;getElement('first')-&gt;setValue('1');
        }
        if (isset($data['switch']) &amp;&amp; 2 == $data['switch']) {
            $this-&gt;getElement('second')-&gt;setValue('2');
        }
        
        return $result;
    }
}
</code></pre>

        </div>
    </div>
    </div>

