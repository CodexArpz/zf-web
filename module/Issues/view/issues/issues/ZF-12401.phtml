<h2>ZF-12401: Introduce a way to customize some of the (elements) decorators either at form level or element level</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2012-09-03T08:44:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-09-04T07:36:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Cristian Bichis (avantis)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>Currently trying to set just a minor config for one of the decorators (as escape=&gt;false or tag=&gt;span) for elements using config is a nightmare. This can be only done without hassle using code:</p>

<p>We must overwrite all the decorators if we try to set just a minor config for one of decorators. Basically I think the issue is when config is processed is not taken into consideration the loadDefaultDecorators value but rather all the decorators are overwrite. The desired behavior is to overwrite just the setting mentioned in config.</p>

<p>More details about the issue here:</p>

<p><a href="http://zend-framework-community.634137.n4.nabble.com/Setting-decorators-options-for-form-elements-in-config-td4656613.html">http://zend-framework-community.634137.n4.nabble.com/…</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-09-03T09:40:43.000+0000</p> 
        <div class="body">
            <p>Simple workaround: Create an array with the decorators and use names for the keys. Now you can use {{array_merge}}.</p>

<pre class="highlight"><code>
$elementDecorators = array(
    'ViewHelper'  =&gt; 'ViewHelper',
    'Description' =&gt; 'Description',
);

return array(
    // Elements
    // …
    'decorators' =&gt; array_merge($elementDecorators, array('Description' =&gt; array('Description', array('escape' =&gt; false)))),
);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2012-09-03T10:22:37.000+0000</p> 
        <div class="body">
            <p>OK, Frank.</p>

<p>But I guess on $elementDecorators I need to put full decorators specs, and not just the list of decorators... Which is almost impossible to do from config if I am true (HtmlTag id part been the issue):</p>

<pre><code>        $this-&gt;addDecorator('ViewHelper')
             -&gt;addDecorator('Errors')
             -&gt;addDecorator('Description', array('tag' =&gt; 'p', 'class' =&gt; 'description'))
             -&gt;addDecorator('HtmlTag', array(
                 'tag' =&gt; 'dd',
                 'id'  =&gt; array('callback' =&gt; array(get_class($this), 'resolveElementId'))
             ))
             -&gt;addDecorator('Label', array('tag' =&gt; 'dt'));
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-09-03T11:17:06.000+0000</p> 
        <div class="body">
            <p>{quote}But I guess on $elementDecorators I need to put full decorators specs, and not just the list of decorators... {quote}
Sure, the full specs!</p>

<p>The value for the "id" can you set with a custom "HtmlTag" decorator:</p>

<pre class="highlight"><code>
class My_Form_Decorator_HtmlTag extends Zend_Form_Decorator_HtmlTag
{
    // …
    
    public function render($content)
    {
        // …

        $attribs = $this-&gt;getOptions();
        if (!array_key_exists($attribs['id'])) {
            $attribs['id'] = Zend_Form_Element::resolveElementId($this);
        }

        // …
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2012-09-03T11:20:06.000+0000</p> 
        <div class="body">
            <p>Thanks Frank. I'll do it this way for now.</p>

<p>But I still think a way to overwrite a simple config would be better ;) So I am maintaining the proposal for a new improvement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-09-03T11:35:26.000+0000</p> 
        <div class="body">
            <p>Can you write unit tests and the implementation? The component maintainer [~alab] no longer works for the ZF project.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2012-09-03T11:45:01.000+0000</p> 
        <div class="body">
            <p>I am not sure Frank, I am a long term ZF bug hunter (since 0.2!) and suggested new features but actually contributing (I even signed the CLA) hasn't been successfully.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-09-04T07:35:49.000+0000</p> 
        <div class="body">
            <p>I'm going to quote [~matthew]:
{quote}…at this time, there will be no new features in ZF1.{quote}
See also: ZF-12402</p>

        </div>
    </div>
    </div>

