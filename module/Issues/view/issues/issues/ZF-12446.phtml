<h2>ZF-12446: \Zend\Form receives error for empty value in validator</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-10-18T14:43:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-10-18T15:55:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Bartłomiej Kiełbasa (kabanek)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I wrote simple register form:</p>

<pre class="highlight"><code>&lt;?php

namespace User\Form;

use Zend\Form\Form;

class RegisterForm extends Form
{
    public function __construct($name = null)
    {
        parent::__construct('register');
        
        $this-&gt;setAttribute('method', 'post');
        
        $this-&gt;add(array(
                'name' =&gt; 'username',
                'attributes' =&gt; array(
                        'type'  =&gt; 'text',
                ),
                
                'options' =&gt; array(
                        'label' =&gt; 'Username',
                ),
        ));
        
        $this-&gt;add(array(
                'name' =&gt; 'email',
                'attributes' =&gt; array(
                        'type'  =&gt; 'email',
                ),
        
                'options' =&gt; array(
                        'label' =&gt; 'You email',
                ),
        ));
        
        $this-&gt;add(array(
                'name' =&gt; 'password',
                'attributes' =&gt; array(
                        'type'  =&gt; 'password',
                ),
        
                'options' =&gt; array(
                        'label' =&gt; 'Password',
                ),
        ));
        
        $this-&gt;add(array(
                'name' =&gt; 'confirm_password',
                'attributes' =&gt; array(
                        'type'  =&gt; 'password',
                ),
        
                'options' =&gt; array(
                        'label' =&gt; 'Confirm password',
                ),
        ));
        
        $this-&gt;add(array(
                'name' =&gt; 'submit',
                'attributes' =&gt; array(
                        'type'  =&gt; 'submit',
                        'value' =&gt; 'Register',
                        'id' =&gt; 'submitbutton',
                ),
        ));
    }
}</code></pre>

<p>for this input filter:</p>

<pre class="highlight"><code>   public function getRegisterInputFilter($adapter)
    {
        $inputFilter = new InputFilter();
        $factory     = new InputFactory();
        
        $inputFilter-&gt;add($factory-&gt;createInput(array(
            'name'     =&gt; 'username',
            'required' =&gt; true,
            'filters'  =&gt; array(
                array('name' =&gt; 'StripTags'),
                array('name' =&gt; 'StringTrim'),
            ),
            'validators' =&gt; array(
                array(
                    'name'    =&gt; 'StringLength',
                    'options' =&gt; array(
                        'encoding' =&gt; 'UTF-8',
                        'min'      =&gt; 4,
                        'max'      =&gt; 64,
                    ),
                ),
                array(
                    'name'    =&gt; 'Db\NoRecordExists',
                    'options' =&gt; array(
                        'table' =&gt; 'user',
                        'field' =&gt; 'username',
                        'adapter' =&gt; $adapter,
                    ),
                ),
            ),
        )));
        
        $inputFilter-&gt;add($factory-&gt;createInput(array(
                'name'     =&gt; 'password',
                'required' =&gt; true,
                'filters'  =&gt; array(
                        array('name' =&gt; 'StripTags'),
                        array('name' =&gt; 'StringTrim'),
                ),
                'validators' =&gt; array(
                        array(
                                'name'    =&gt; 'StringLength',
                                'options' =&gt; array(
                                        'encoding' =&gt; 'UTF-8',
                                        'min'      =&gt; 4,
                                        'max'      =&gt; 64,
                                ),
                        ),
                ),
        )));
        
        $inputFilter-&gt;add($factory-&gt;createInput(array(
                'required' =&gt; true,
                'validators' =&gt; array(
                        array(
                                'name' =&gt; 'identical', 
                                'options' =&gt; array('token' =&gt; 'password')
                        )
                ),
        )));
        
        $inputFilter-&gt;add($factory-&gt;createInput(array(
                'name'     =&gt; 'email',
                'required' =&gt; true,
                'filters'  =&gt; array(
                        array('name' =&gt; 'StripTags'),
                        array('name' =&gt; 'StringTrim'),
                ),
                'validators' =&gt; array(
                        array(
                                'name'    =&gt; 'EmailAddress'
                        ),
                        array(
                                'name'    =&gt; 'Db\NoRecordExists',
                                'options' =&gt; array(
                                        'table' =&gt; 'user',
                                        'field' =&gt; 'email',
                                        'adapter' =&gt; $adapter,
                                ),
                        ),
                ),
        )));
        
        return $inputFilter;
    }</code></pre>

<p>then when I want to validate this form for correct data I got that form is invalid, but method $form-&gt;getMessages() returned empty array. No messages = no idea what's wrong.</p>

<p>I noticed that in \Zend\Form\Form::isValid() messages are copied from filter to form. Filter returns</p>

<pre class="highlight"><code>array (size=1)
  '' =&gt; 
    array (size=1)
      'isEmpty' =&gt; string 'Value is required and can't be empty' (length=36)</code></pre>

<p>but in form the message does not exists. No messages for empty parameter are copied to form messages, so I did not get any in my controller.</p>

<p>Is it e bug in validator or in form or is it my mistake?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-10-18T15:55:14.000+0000</p> 
        <div class="body">
            <p>Please report ZF2 issues at <a href="https://github.com/zendframework/zf2/issues">https://github.com/zendframework/zf2/issues</a></p>

        </div>
    </div>
    </div>

