<h2>ZF-6786: When encoding an non-associative array with a Zend_Json_Expr the result is the magic key: ____0</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-23T02:57:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-02T06:22:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Markus Thielen (mthielen)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Oscar Reales (oreales)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11953/Json.php">Json.php</a></li>
            <li><a href="/issues/secure/attachment/11943/Json.php">Json.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This code:</p>

<pre class="highlight"><code>$values = array();
$values['plugins'] = 
  array(
    new Zend_Json_Expr(
      'new Ext.ux.PageSizePlugin()'
    )
  );

return Zend_Json::encode(   $values,
                    false,
                    array('enableJsonExprFinder' =&gt; true));</code></pre>

<p>returns</p>

<pre class="highlight"><code>

what is obviously wrong.

I created a fix in zend/Json.php for this case. line 135:
</code></pre>

<p>if ($key == '') {
    $encodedResult = str_replace(
        '"' . $magicKey . '"',
        $value,
        $encodedResult
    );
} else {
    $encodedResult = str_replace(
        '"' . $key . '":"' . $magicKey . '"',
        '"' . $key . '":' . $value,
        $encodedResult
    );
}```</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Markus Thielen (mthielen) on 2009-05-23T02:59:18.000+0000</p> 
        <div class="body">
            <p>patches Json.php file</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-25T18:34:43.000+0000</p> 
        <div class="body">
            <p>Assigning to Oscar.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-05-25T18:37:41.000+0000</p> 
        <div class="body">
            <p>I encountered this behaviour too this week... confirmed ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oscar Reales (oreales) on 2009-05-27T03:16:26.000+0000</p> 
        <div class="body">
            <p>working on it!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oscar Reales (oreales) on 2009-05-27T07:51:15.000+0000</p> 
        <div class="body">
            <p>Ok this is what I get:</p>

<p>1.- In the pre-encoding call to _recursiveJsonExprFinder function, when a non-assoc array is passed, the "key" is setted to "null". This happen because the function Zend_Json_Encoder::encodeUnicodeString returns null when an integer is passed as param.</p>

<p>2.- Because of that, the after encoding replacing fails.</p>

<p>It could be fixed with the next patch mentioned before:</p>

<pre class="highlight"><code>
if ($key == '') {
    $encodedResult = str_replace(
        '"' . $magicKey . '"',
        $value,
        $encodedResult
    );
} else {
    $encodedResult = str_replace(
        '"' . $key . '":"' . $magicKey . '"',
        '"' . $key . '":' . $value,
        $encodedResult
    );
}
</code></pre>

<p>but it nis not neccessary because with the actual code "key" is not neccesary anymore. It is enough replacing "magicKey" by its correspondant "value":</p>

<pre class="highlight"><code>
        //only do post-proccessing to revert back the Zend_Json_Expr if any.
        if (count($javascriptExpressions) &gt; 0) {
            $count = count($javascriptExpressions);
            for($i = 0; $i &lt; $count; $i++) {
                //$key      = $javascriptExpressions[$i]['key'];//key is not neccesary
                $magicKey = $javascriptExpressions[$i]['magicKey'];
                $value    = $javascriptExpressions[$i]['value'];

                $encodedResult = str_replace(
                //instead of replacing "key:magicKey", we replace directly magicKey by value because "key" never changes.
                // '"' . $key . '":"' . $magicKey . '"',
                //'"' . $key . '":' . $value,
               
                    '"' . $magicKey . '"',
                    $value,
                    $encodedResult
                );
            }
        }
</code></pre>

<p>Anyway, to avoid unneccesary function calls when the "currentKey" is an integer (non associative array) I changed also this code:</p>

<pre class="highlight"><code>
  "magicKey" =&gt;  Zend_Json_Encoder::encodeUnicodeString($magicKey),
</code></pre>

<p>for this:</p>

<pre class="highlight"><code>
  "magicKey" =&gt; (is_int($currentKey)) ? $magicKey : Zend_Json_Encoder::encodeUnicodeString($magicKey),
</code></pre>

<p>I have re-code "Zend_Json" and added a test to JsonTest.php to testing this bug. Test is OK now.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oscar Reales (oreales) on 2009-05-27T08:01:07.000+0000</p> 
        <div class="body">
            <p>Re-coded Zend_Json to fix issue, and avoid unnecessary calls to Zend_Json_Encoder::encodeUnicodeString();
comments on changes included (clean old code and comments in final version).</p>

        </div>
    </div>
    </div>

