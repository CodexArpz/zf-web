<h2>ZF-6905: Zend_OpenID need support for OpenId Specification 2.0 final</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-06-04T13:19:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-24T22:41:58.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_OpenId</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5242">ZF-5242</a></li>
            <li><a href="/issues/browse/ZF-8294">ZF-8294</a></li>
            <li><a href="/issues/browse/ZF-3187">ZF-3187</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13240/Consumer.php">Consumer.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>We need the final spec implemented to use openid with yahoo and google accounts!!!
Here we found a hack for zend, perhaps this is a solution:
<a href="http://stackoverflow.com/questions/741345/how-do-i-implement-direct-identity-based-openid-authentication-with-zend-openid">http://stackoverflow.com/questions/741345/…</a></p>

<p>From the link:
Little late to the game but I was able to get this working with some hacks I found around the interwebs.</p>

<p>First. Yahoo. To get Yahoo working all I had to do was change the JavaScript to use me.yahoo.com instead of just yahoo.com and it worked perfectly with the version of the Zend Framework I'm using. Unfortunately Google still wasn't, so some hacking was in order.</p>

<p>All of these changes go in Zend/OpenId/Consumer.php</p>

<p>First, in the _discovery method add the following on the series of preg_match checks that starts at around line 740.</p>

<pre class="highlight"><code>
} else if (preg_match('/([^&lt;]+)&lt;\/URI&gt;/i', $response, $r)) {
  $version = 2.0;
  $server = $r[1];
</code></pre>

<p>I added this right before the return false; statement that's in the else {} block.</p>

<p>Second, in the _checkId method you'll need to add 3 new blocks (I haven't dug around enough to know what causes each of these three cases to be called, so I covered all to be on the safe side.</p>

<p>Inside the $version &lt;= 2.0 block, you'll find an if/else if/else block. In the first if statement ($this-&gt;_session !== null) add this to the end:</p>

<pre class="highlight"><code>
if ($server == '<a href="https://www.google.com/accounts/o8/ud">https://www.google.com/accounts/o8/ud</a>') {
  $this-&gt;_session-&gt;identity = '<a href="http://specs.openid.net/auth/2.0/identifier_select">http://specs.openid.net/auth/2.0/identifier_select</a>';
  $this-&gt;_session-&gt;claimed_id = '<a href="http://specs.openid.net/auth/2.0/identifier_select">http://specs.openid.net/auth/2.0/identifier_select</a>';
}
</code></pre>

<p>In the else if (defined('SID') block add this to the end:</p>

<pre class="highlight"><code>
if ($server == '<a href="https://www.google.com/accounts/o8/ud">https://www.google.com/accounts/o8/ud</a>') {
  $_SESSION['zend_openid']['identity'] = '<a href="http://specs.openid.net/auth/2.0/identifier_select">http://specs.openid.net/auth/2.0/identifier_select</a>';
  $_SESSION['zend_openid']['claimed_id'] = '<a href="http://specs.openid.net/auth/2.0/identifier_select">http://specs.openid.net/auth/2.0/identifier_select</a>';
}
</code></pre>

<p>And then after the else block (so outside the if/else if/else block all together, but still inside the $version &lt;= 2.0 block) add this:</p>

<pre class="highlight"><code>
if ($server == '<a href="https://www.google.com/accounts/o8/ud">https://www.google.com/accounts/o8/ud</a>') {
  $params['openid.identity'] = '<a href="http://specs.openid.net/auth/2.0/identifier_select">http://specs.openid.net/auth/2.0/identifier_select</a>';
  $params['openid.claimed_id'] = '<a href="http://specs.openid.net/auth/2.0/identifier_select">http://specs.openid.net/auth/2.0/identifier_select</a>';
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alfredo Artiles (aartiles) on 2009-06-28T05:18:23.000+0000</p> 
        <div class="body">
            <p>I have tried this patch and didn't work for me. I am using 1.8.4. I hope to see a solution to authenticate with google and yahoo soon</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris (chris.bisnett) on 2009-07-20T15:51:47.000+0000</p> 
        <div class="body">
            <p>I have found this patch to work for version 1.8.4p1.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2009-08-03T19:18:38.000+0000</p> 
        <div class="body">
            <p>add code tag</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Igor (urn) on 2009-09-24T04:00:17.000+0000</p> 
        <div class="body">
            <p>Thanks for the hack.
We definately need official support of 2.0 version of OpenId.
When will it be..?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Niek Bosch (eekhoorn13) on 2010-08-11T09:26:48.000+0000</p> 
        <div class="body">
            <p>I've done this for my own website. It's probably not conform all Zend Framework standards and it lacks unit testing and all that. Nevertheless, it will probably help you a great deal. When I'm more at home in this contributing thing, I'll do more work myself. For now it supports:</p>

<ul><li>XRI (not tested in this version)</li>
<li>Yadis discovery</li>
<li>XRDS document parsing (as is needed for XRI and Yadis)</li>
<li>HTML discovery (not changed)</li>
</ul><p>It works with google and with myopenid.com</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Torio Farazdagi (torio) on 2010-08-11T10:17:31.000+0000</p> 
        <div class="body">
            <p>Thanks Niek! Will look into the supplied code and accommodate for ZF standards + UTs.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by DJ (cloakedninjas) on 2010-08-16T04:22:20.000+0000</p> 
        <div class="body">
            <p>While the attached script does allow for authentication with Google, Yahoo - or any other v2.0 provider still won't.</p>

<p>I've had to ditch ZF in favour of a complete working solution. I'm now using an implementatation from Janrain : <a href="http://www.janrain.com/openid-enabled">http://www.janrain.com/openid-enabled</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Carlos Rodrigues (carlos.vini) on 2011-07-21T20:12:11.000+0000</p> 
        <div class="body">
            <p>The changes suggested worked for me. But there is a problem when you use a Google Apps domain as the identifier, like this: 
*<a href="https://www.google.com/accounts/o8/site-xrds?hd=example.com">https://google.com/accounts/o8/…</a></p>

<p>The login() method works fine, but in this case the verify() method is unable to discover the data because Google sends back the identity in a format similar to this:
* <a href="http://example.com/openid/123456789">http://example.com/openid/123456789</a></p>

<p>I don't know if its a Google problem, or a Zend problem. But i had to comment the lines below to ignore the discovery on verify().</p>

<p>/*
                    } else if (!$this-&gt;_discovery($id, $discovered_server, $discovered_version)) {
                        $this-&gt;_setError("Discovery failed: " . $this-&gt;getError());
                        return false;</p>

<pre><code>                } else if ((!empty($params['openid_identity']) &amp;&amp;
                            $params["openid_identity"] != $id) ||
                           (!empty($params['openid_op_endpoint']) &amp;&amp;
                            $params['openid_op_endpoint'] != $discovered_server) ||
                           $discovered_version != $version) {
                    $this-&gt;_setError("Discovery information verification failed");
                    return false;
                */ 
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-02-24T22:41:58.000+0000</p> 
        <div class="body">
            <p>Closing as "Needs Proposal". If someone wants to step up and implement this for v1.12 please draft an RFC.</p>

        </div>
    </div>
    </div>

