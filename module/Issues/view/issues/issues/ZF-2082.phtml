<h2>ZF-2082: Zend_Cache_Backend_File's &quot;save&quot; method returns if cache_dir doesn't exist or cannot be written</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-10-17T06:36:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Deniz Adrian (deniz.adrian)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10891/File.php.diff">File.php.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Cache_Backend_File logs an error when the target cache directory doesn't exist or cannot be written, but still continues execution, where it tries to "fopen", and maybe "mkdir" and "chmod".</p>

<p>Correct me if I'm wrong, but if the target directory cannot be accessed, this function can savely immediately "return false"!?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Deniz Adrian (deniz.adrian) on 2007-10-17T06:36:36.000+0000</p> 
        <div class="body">
            <p>can we pre-format here? ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Deniz Adrian (deniz.adrian) on 2007-10-17T06:40:46.000+0000</p> 
        <div class="body">
            <p>attaching a diff</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2007-10-24T13:30:13.000+0000</p> 
        <div class="body">
            <p>fixed with a refactoring</p>

        </div>
    </div>
    </div>

