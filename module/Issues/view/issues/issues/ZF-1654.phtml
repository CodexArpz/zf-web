<h2>ZF-1654: ViewRenderer and finding view scripts</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-29T12:13:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-08-08T15:56:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When given the following url:</p>

<p>/foo/myBar/a/b/c/d (given in :controller/:action/*)</p>

<p>myBar will dispatch both FooController::myBarAction() and FooController::mybarAction.  This means that the implied url would dispatch the correct action, but not be able to find the correct view.</p>

<p>In the perfect world, any dispatched action would be able to render a view by an obtainable name (by some convention).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-29T12:16:11.000+0000</p> 
        <div class="body">
            <p>Actually, clarification: /foo/myBar dispatches FooController::mybarAction() (not myBarAction). The point, though, is that it should then map to the view script foo/mybar.phtml; right now, /foo/myBar will map to foo/myBar.phtml, while /foo/mybar will map to foo/mybar.phtml.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-29T12:28:11.000+0000</p> 
        <div class="body">
            <p>Another case provided was '/foo/bar__baz'  getting mapped to the view foo/bar--baz.phtml instead of foo/bar-baz.phtml.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-29T12:59:38.000+0000</p> 
        <div class="body">
            <p>Another case: /foo_bar/baz-bat maps to Foo_BarController in Foo/BarController.php -- so, to keep the directory hierarchies mapped the same, the view should be foo/bar/baz-bat.phtml.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-29T14:27:48.000+0000</p> 
        <div class="body">
            <p>Resolved in r5505.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Seth Thornberry (stm) on 2007-08-08T15:56:57.000+0000</p> 
        <div class="body">
            <p>Why would you want to normalize the view script names? You then force the developer to have to look up the normalization you used in order to create their scripts.. I ran across this issue where our modules are case sensitive (ie <a href="/Foo/">http://.../Foo/</a> equates to moduleDir/Foo) and now it appears we would have to rename all of our module directories to be all lowercase..? That doesn't even seem to match the convention the framework uses for it's own modules .. (ie, Zend_Controller is Zend/Controller.php, not zend/controller.php)</p>

        </div>
    </div>
    </div>

