<h2>ZF-7153: Add array handling to all validators and filters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-06-28T11:55:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-10-26T02:39:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
            <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8768">ZF-8768</a></li>
            <li><a href="/issues/browse/ZF-9127">ZF-9127</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The constructor of all filters and validators have to be reworked to use one single array as input.</p>

<p>This allows the usage of ini files without the need of keeping care of the order of the parameters.
Additionally this unifies the usage for all validators and filters as it is then easily possible to extend them with new parameters without changing the API.</p>

<p>Example:
new Zend_Validate_StringLength($min, $max);</p>

<p>Switched parameters makes problems when using INI or Zend_Form.</p>

<p>New behaviour:
new Zend_Validate_StringLength(array('min' =&gt; $min, 'max' =&gt; $max));</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-08T13:57:54.000+0000</p> 
        <div class="body">
            <p>r18028 implements array and Zend_Config support to all validators.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-11T15:02:37.000+0000</p> 
        <div class="body">
            <p>Added support also to all filters.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2009-09-19T05:40:41.000+0000</p> 
        <div class="body">
            <p>I looked into <a href="http://framework.zend.com/code/browse/~raw,r=18028/Zend_Framework/standard/trunk/library/Zend/Validate/StringLength.php">http://framework.zend.com/code/browse/â€¦</a>, because i had the idea of implementing an ConstraintsTemplate array into Zend_Validate_Abstract, which seemed problematic because of missing this Array Argument Support.</p>

<p>Now i saw just another possible improvement:
Wouldn't it be more economical to implement the __construct() method within Zend_Validate_Abstract, setting the values based on existance of an appropriate Setter Method in the individual Validators, and based on the StringLength example above move any Requirement Logic into the isValid() Method?</p>

<p>With Requirement Logic i mean this:</p>

<p>if (!array_key_exists('min', $options)) {
  $options['min'] = 0;
}</p>

<p>That would also lead to an easy extensibility of Zend_Validate_Abstract like setting constraintTemplates through the config when instantiating any Validator and fetching them afterwards with a getConstraints() implemented in Zend_Validate_Abstract.</p>

<p>Please forgive if this was not the right place to put it in.</p>

        </div>
    </div>
    </div>

