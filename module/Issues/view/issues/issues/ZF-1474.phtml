<h2>ZF-1474: Configuration option for identifier quoting </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-06-01T13:56:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-19T17:14:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC2 (08/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Salvador Ledezma (ledezma)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10518/Db.zip">Db.zip</a></li>
            <li><a href="/issues/secure/attachment/10517/TestCommon.php">TestCommon.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Although automatically quoting SQL identifiers makes usage of Zend_Db most flexible when SQL identifiers might contain special characters or SQL reserved words, it has the unwanted side effect that SQL identifiers become case-sensitive.</p>

<p>This causes difficulty in the cases of IBM DB2 and Oracle, which map unquoted identifiers to uppercase instead of truly doing case-insensitive matching.  That is, when one does {{CREATE TABLE}} to define table names and column names, the unquoted identifiers are mapped to uppercase and stored that way.  Subsequently, running queries with quoted lowercase identifiers fails to match the identifiers in the schema.</p>

<p>So this is a feature request to make it a configurable option in Zend_Db_Adapter_Abstract to turn off the automatic quoting functionality.</p>

<p>It should remain the default that adapters quote everything they can.</p>

<p>I suggest the option name 'quoteIdentifiers' in Zend_Db_Adapter_Abstract.  The default should be {{true}}.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Salvador Ledezma (ledezma) on 2007-06-01T19:10:56.000+0000</p> 
        <div class="body">
            <p>unit tests added for automatic quoting property</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Salvador Ledezma (ledezma) on 2007-06-01T19:16:31.000+0000</p> 
        <div class="body">
            <p>Please review the new property defined in the Zend_Db component.   At object construction, the property is set.  If true, all identifiers are automatically quoted.  If false, they are not.  The default is true.</p>

<p>most changes are made here in the abstract class.  The API quoteIdentifierAutomatically() is defined here.
Every call to quoteIdentifier() calls this new API.  If the call is made internally, a check of the property _alwaysQuoteIdentifiers is done.  if true, the identifier is quoted, otherwise it is left alone.  Some other methods had some api changes made as well to support the new API.
An external call to quoteIdentifier() behaves as previously, the identifier is quoted.
Files changed include
lib/Zend/Db/Adapter/Abstract.php
lib/Zend/Db/Adapter/Db2.php</p>

<p>constant ALWAYS_QUOTE_IDENTIFIERS is defined here
Zend/Db.php</p>

<p>new API had to be called here
lib/Zend/Db/Select.php
lib/Zend/Db/Table/Abstract.php
lib/Zend/Db/Table/Row/Abstract.php</p>

<p>unit tests added (at the end of the file).  These show how the configuration property can be used.  There are no other changes to external APIs.
tests/Zend/Db/Adapter/TestCommon.php</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-04T14:08:37.000+0000</p> 
        <div class="body">
            <p>Thanks very much for the patch and doing the work, Salvador.  I have updated it a little bit and I committed it with support and tests for all the Zend_Db adapters.</p>

<p>I made the following functional changes relative to your patch:
- Zend_Db::AUTO_QUOTE_IDENTIFIERS is the name of the const naming the option
- No need to make a new function {{quoteIdentifierAutomatically()}}.  Instead, I added an optional param to the usual {{quoteIdentifier()}} method.  If the second parameter is {{true}}, the method uses the current setting of the autoQuoteIdentifer config.  Otherwise the parameter defaults to {{false}} and it means to explicitly return a quoted identifier.
- Restructured unit tests to utilize the adapter's TestUtil class.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-04T14:08:58.000+0000</p> 
        <div class="body">
            <p>Implementation, tests, and docs committed in revision 5100.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2008-02-19T17:14:05.000+0000</p> 
        <div class="body">
            <p>I need support to deactivate auto qoting if the configuration option Zend_Db::AUTO_QUOTE_IDENTIFIERS is set to true.</p>

<pre class="highlight"><code>
// current
$mysql-&gt;quoteIdentifier('my.table.as.column');   // `my`.`table`.`as`.`column`
$mysql-&gt;quoteIdentifier('my.table.as.column', true);   // `my`.`table`.`as`.`column`
$mysql-&gt;quoteIdentifier('my.table.as.column', false);   // `my`.`table`.`as`.`column`

// need
$mysql-&gt;quoteIdentifier('my.table.as.column');   // `my`.`table`.`as`.`column`
$mysql-&gt;quoteIdentifier('my.table.as.column', true);   // `my`.`table`.`as`.`column`
$mysql-&gt;quoteIdentifier('my.table.as.column', false);   // `my.table.as.column`
</code></pre>

<p>set the default value of the second argment in quoteIdentifier to NULL
if $auto === null then use Zend_Db::AUTO_QUOTE_IDENTIFIERS
else use the $auto</p>

        </div>
    </div>
    </div>

