<h2>ZF-8012: The example code of Zend_Validate_Db_NoRecordExists does not work</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Problem</dd>

    <dt>Created:</dt>
    <dd>2009-10-04T06:55:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-28T13:41:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi. The example code of '59.2.8.2. Excluding records' does not work.
See <a href="http://framework.zend.com/manual/en/zend.validate.set.html#zend.validate.db.excluding-records">http://framework.zend.com/manual/en/â€¦</a></p>

<h2>This code does not work.</h2>

<pre class="highlight"><code>
$validator = new Zend_Validate_Db_NoRecordExists(
    array(
        'table' =&gt; 'users',
        'field' =&gt; 'username',
        'exclude' =&gt; array(
            'field' =&gt; 'id',
            'value' =&gt; $user_id
        )
    )
);
</code></pre>

<h2>This one works fine.</h2>

<pre class="highlight"><code>
$validator = new Zend_Validate_Db_NoRecordExists(
    'users',
    'username',
    array(
        'field' =&gt; 'id',
        'value' =&gt; $user_id
    )
);
</code></pre>

<p>Regards.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2009-10-05T01:09:20.000+0000</p> 
        <div class="body">
            <p>Are you working from trunk? Thomas recently made a change to the validator which means the DB validators now work with an options array, instead of a bunch of parameters.
The notation is correct for trunk, which the docs are built from. This is a BC break, and so should not be changed in a release until 1.10</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shinya Ohyanagi (heavenshell) on 2009-10-05T07:13:28.000+0000</p> 
        <div class="body">
            <p>Thank you for comment.
I'm not working on trunk(just a released version) and I understand docs for trunk.</p>

<p>Regards.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-05T11:44:22.000+0000</p> 
        <div class="body">
            <p>Ryan:
No, this is no BC break.
With 1.10 both notations are accepted. So you can use Zend_Config as with 1.10, which is now not possible. It's a new feature, no BC break as the old notation is still accepted.</p>

<p>Related to docu.
Normally the manual is build from trunk but only for the minor release. It seems as the build process is broken and the manual is build from trunk even for mini releases and even as we commit related docu changes to branch.</p>

<p>This is a problem of the build process, and not the manual. The dev-team has already been pointed to the problem, but it needs some time to fix the process.</p>

<p>It would be interesting if the packaged manual is identical with the manual from the homepage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-05T11:46:51.000+0000</p> 
        <div class="body">
            <p>Closing as "non-issue" for the above noted reasons.
Needs a fix for the build process by the dev-team.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Klaus Potzesny (klawipos) on 2011-11-28T13:41:12.000+0000</p> 
        <div class="body">
            <p>The following code causes an error at the first line, because the constructor expects an array with table and field name. I think this is no expectable code behavior. You should make the class throw an error when validating, not in the constructor.</p>

<pre class="highlight"><code>
$validator = new Zend_Validate_Db_NoRecordExists();
$validator-&gt;setTable('user');
$validator-&gt;setField('username');
</code></pre>

        </div>
    </div>
    </div>

