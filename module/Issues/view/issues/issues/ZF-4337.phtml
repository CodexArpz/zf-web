<h2>ZF-4337: Zend_Translate_Adapter::__construct(): Auto locale detection overwrites Zend_Registry::get('Zend_Locale')</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-09-20T03:18:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-20T05:03:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If the automatically detected locale would be 'en_US' then the following code would print 'en_US' and not as expected 'de_AT'.</p>

<pre class="highlight"><code>
// In der Bootstrap Datei
$locale = new Zend_Locale('de_AT');
Zend_Registry::set('Zend_Locale', $locale);

// Im Modell oder dem Controller
$translate = new Zend_Translate('csv',
                                'languages',
                                null,
                                array('scan' =&gt; Zend_Translate::LOCALE_DIRECTORY));
echo $translate-&gt;getLocale();
</code></pre>

<p>This is because of the Zend_Translate_Adapter::__construct() function:</p>

<pre class="highlight"><code>
    public function __construct($data, $locale = null, array $options = array())
    {
        [...]

        $this-&gt;addTranslation($data, $locale, $options);
            // this sets the locale to 'de_AT' by using the Zend_Locale object from the registry

        $this-&gt;setLocale($locale);
            // this sets the locale back to 'en_US', because $locale is null and the auto detection is used
    }
</code></pre>

<p>Please see code comments.</p>

<p>This issue affects the trunk version.</p>

<p>{quote}
But you can use all new features already when you are using the trunk.</p>

<p>What has been changed until now for the I18N core:
* I integrated an application wide locale... all I18N components can reuse an instance of Zend_Locale when registered in Zend_Registry.
{quote}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-09-20T04:27:59.000+0000</p> 
        <div class="body">
            <p>Application wide locales are not supported with 1.6.1. Please read the manual.</p>

        </div>
    </div>
    </div>

