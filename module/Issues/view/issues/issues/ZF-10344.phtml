<h2>ZF-10344: Zend_Oauth_Client does not urldecode custom parameters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-19T15:37:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-10-10T13:20:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.1 (30/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Oauth</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If I choose Zend_Oauth::REQUEST_SCHEME_QUERYSTRING to be request scheme for my instance of Zend_Oauth_Client, so here is what happens (Zend/Oauth/Client.php lines 266-284):</p>

<pre class="highlight"><code>
            $params = array();
            $query = $this-&gt;getUri()-&gt;getQuery();
            if ($query) {
                $queryParts = explode('&amp;', $this-&gt;getUri()-&gt;getQuery());
                foreach ($queryParts as $queryPart) {
                    $kvTuple = explode('=', $queryPart);
                    $params[$kvTuple[0]] = 
                        (array_key_exists(1, $kvTuple) ? $kvTuple[1] : NULL);
                }
            }
            if (!empty($this-&gt;paramsPost)) {
                $params = array_merge($params, $this-&gt;paramsPost);
                $query  = $this-&gt;getToken()-&gt;toQueryString(
                    $this-&gt;getUri(true), $this-&gt;_config, $params
                );
            }
            $query = $this-&gt;getToken()-&gt;toQueryString(
                $this-&gt;getUri(true), $this-&gt;_config, $params
            );
</code></pre>

<p>This code takes <em>already prepared uri with all parameters urlendcoded</em> and splits them back into the array of parameters. Then it adds oAuth parameters and composes the new uri. The problem here is that custom parameters from the original uri get urlencoded again, so they become "double urlencoded".</p>

<p>This bug is the only thing that makes it really impossible to use Zend_Oauth along with Zend_Gdata to access Google Api using oAuth authentication. To fix it, simply use urldecode() for both parameter name and parameter value when breaking an url to parameters array.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2010-10-10T13:20:36.000+0000</p> 
        <div class="body">
            <p>Fixed in r23074 in trunk. Reopen this issue if there are any problems with this.</p>

        </div>
    </div>
    </div>

