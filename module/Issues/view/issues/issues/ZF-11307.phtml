<h2>ZF-11307: Reset sequence number when truncating table during PHPUnit test -&gt; only for PostgreSQL</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-04-19T13:11:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-04-19T13:28:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>During a Zend_Test_PHPUnit_DatabaseTestCase setup phase the tables from getDataSet() will be truncated.
If PostgreSQL is the backend, the truncate operation is done by the following command:</p>

<p>'TRUNCATE '.$tableName.' CASCADE' (line 109, Zend_Test_PHPUnit_Db_Operation_Truncate)</p>

<p>PostgreSQL has the possibility to reset the sequence numbers during truncate. This is described in <a href="http://www.postgresql.org/docs/8.4/static/sql-truncate.html">http://postgresql.org/docs/8.4/â€¦</a> .</p>

<p>IMHO it makes sense to extend the truncate command for PostgreSQL like this.</p>

<p>$db-&gt;query('TRUNCATE '.$tableName.' RESTART IDENTITY CASCADE');</p>

<p>This command resets the sequence number of the primary key.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-04-19T13:28:34.000+0000</p> 
        <div class="body">
            <p>Assigning to Ralph</p>

        </div>
    </div>
    </div>

