<h2>ZF-5638: Add methods to get defined roles, ressources, rules</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Community Driven Feature</dd>

    <dt>Created:</dt>
    <dd>2009-01-27T06:01:52.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-19T04:52:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.3 (22/Sep/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Sudheer Satyanarayana (bonaparte)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Acl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1356">ZF-1356</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12225/acl-get-roles-patch.tar.gz">acl-get-roles-patch.tar.gz</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I haven't found a method to get the defined roles (or ressources or rules for that matter). The use case I need it for is quite simple.</p>

<p>Very early in the request we setup a Zend_Acl instance with some roles, predefined ressources and rules. We also have a database with users and their assigned ACL role. Now what we want to do is creating a simple form with all the defined roles, so one of them can be assigned to a specific user.</p>

<p>But all roles defined earlier are hidden in the protected variable _roles and having to store them in an extra variable, just to be able to use them in one form, doesn't seem to be right.</p>

<p>At least for roles it should be quite easy to add a method like this to Zend_Acl_Role_Registry:
public function getRoles()
{
    return array_keys($this-&gt;_roles);
}</p>

<p>As ressources and rules seems to be hidden too, there also should be an easy way to access them.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by James Green (jgreen_so) on 2009-02-17T09:06:11.000+0000</p> 
        <div class="body">
            <p>Just hit upon this very matter myself. Clearly it would be trivial to implement as an extended class, butshould this feature be included within Zend_Acl for shipping?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by James Green (jgreen_so) on 2009-02-17T09:31:38.000+0000</p> 
        <div class="body">
            <p>To do this Zend_Acl_Role_Registry requires a new method:</p>

<p>public function getRoles()
{
    return $this-&gt;_roles;
}</p>

<p>Then Zend_Acl requires a new method:</p>

<p>public function getRegisteredRoles()
{
    return $this-&gt;_getRoleRegistry()-&gt;getRoles();
}</p>

<p>You may then iterate over the list returned by Zend_Acl::getRegisteredRoles(). The keys will be the role ID.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-09-10T08:49:32.000+0000</p> 
        <div class="body">
            <p>While this is a worthwhile feature, the ZF team will not develop this feature, but if a community member would like to pick up and develop it, they may make an assignment of it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sudheer Satyanarayana (bonaparte) on 2009-09-18T09:02:18.000+0000</p> 
        <div class="body">
            <p>Like the other commenter said, it appears trivial to add getRegisteredRoles() method. I have added the methods in Acl.php and Acl_Role_Registry.php with unit test method.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-09-18T13:05:38.000+0000</p> 
        <div class="body">
            <p>Patch applied; allowing to add to 1.9 release branch as well.</p>

        </div>
    </div>
    </div>

