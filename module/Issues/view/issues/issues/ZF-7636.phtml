<h2>ZF-7636: Decoding folder name</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-08-19T07:09:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sébastien MALOT (wazzameleon)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail_Storage</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Folder name have to be decoded when they contents accents :</p>

<p>"Messages envoy&amp;AOk-s" =&gt; "Messages envoyés"</p>

<p>In my application I have overloaded the class 'Zend_Mail_Storage_Folder' with this code :</p>

<pre class="literal">
class Mail_Storage_Folder extends Zend_Mail_Storage_Folder {

    protected static $_decode = array('&amp;-' =&gt; '&amp;',
                                    '&amp;AOk-' =&gt; 'é',
                                    '&amp;AOI-' =&gt; 'â',
                                    '&amp;AOA-' =&gt; 'à',
                                    '&amp;AOg-' =&gt; 'è',
                                    '&amp;AOc-' =&gt; 'ç',
                                    '&amp;APk-' =&gt; 'ù',
                                    '&amp;AOo-' =&gt; 'ê',
                                    '&amp;AO4-' =&gt; 'î',
                                    '&amp;APM-' =&gt; 'ó',
                                    '&amp;APE-' =&gt; 'ñ',
                                    '&amp;AOE-' =&gt; 'á',
                                    '&amp;APQ-' =&gt; 'ô',
                                    '&amp;AMk-' =&gt; 'É',
                                    '&amp;AOs-' =&gt; 'ë');

    /**
     * get local name
     *
     * @return string local name
     */
    public function getLocalName()
    {
        return self::decode($this-&gt;_localName);
    }

    /**
     * get global name
     *
     * @return string global name
     */
    public function getGlobalName()
    {
        return self::decode($this-&gt;_globalName);
    }

    protected static function decode($value){
        return str_replace(array_keys(self::$_decode), array_values(self::$_decode), $value);
    }
}
</pre>

<p>I don't  what's the real encoding, so I couldn't made a generic method.</p>

<p>I hope I could help you,
Bye</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:17.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

