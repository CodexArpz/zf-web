<h2>ZF-6512: Allow alternative value description on the messages and a way to format message variables in Zend_Validate classes</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-05-03T18:11:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-19T11:52:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6772">ZF-6772</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Regarding the usability, messages like "'1001' is not between '0' and '1000', inclusively" are not enough informative, because, in this case, in many registration forms, users have to search by values, instead field labels. Most often, we want see messages like "'Number' is not between '0' and '1,000', inclusively" in Zend_Validate_Between, or "'Password' do not match 'Confirm Password'", in Zend_Validate_Identical (this will be possible when ZF-6511 is fixed). So, my request is to add the possibility to define alternative description to value (or values, in case of Zend_Validate_Identical) on the messages, and the possibility to format the message variables, maybe by passing locale, or filters, to Zend_Validate.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-03T20:11:45.000+0000</p> 
        <div class="body">
            <p>This is already possible, using the validator's setMessage() method, which allows you to specify the message key (an error constant in the validator class) and the message to associate with it. These messages allow you to specify a placeholder for the value, and, if any additional values are defined in the class, for those values.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Leandro Rodrigues Chaves (leandrorc) on 2009-05-05T17:37:47.000+0000</p> 
        <div class="body">
            <p>So are you suggesting something as follows?</p>

<pre><code>    $min = 0;
    $max = 10000.10;
    $numberValidator = new Zend_Validate_Between(0, $min, $max);
    $numberValidator-&gt;setMessage("'%field%' is not between '%formatedMin%' and '%formatedMax%'!", Zend_Validate_Between::NOT_BETWEEN);

    if (!$numberValidator -&gt;isValid(11000)) {
        $messages = $numberValidator-&gt;getMessages();
        $messages[Zend_Validate_Between::NOT_BETWEEN] = str_replace(array('%field%', '%formatedMin%', '%formatedMax%'), array($translate-&gt;translate('Number'), $min,       Zend_Locale_Format::toNumber($max, array('locale'=&gt;$locale, 'precision'=&gt;2))), $messages[Zend_Validate_Between::NOT_BETWEEN]);
        die($messages[Zend_Validate_Between::NOT_BETWEEN]);
    }
</code></pre>

<p>I think we could just to do something like (in order to create custom messages):</p>

<pre><code>    $min = 0;
    $max = 10000.10;
    $numberValidator = new Zend_Validate_Between(0, $min, $max);
    $numberValidator-&gt;setMessage("'%field%' is not between '%formatedMin%' and '%formatedMax%'!", Zend_Validate_Between::NOT_BETWEEN);
    $formatedMax = Zend_Locale_Format::toNumber($max, array('locale'=&gt;$locale, 'precision'=&gt;2));
    $numberValidator-&gt;setMessageVariables(array('field', 'formatedMin', 'formatedMax'), array('$translate-&gt;translate('Number')', 0, $formatedMax);
    if (!$numberValidator -&gt;isValid(11000)) {
        die($messages[Zend_Validate_Between::NOT_BETWEEN]);
    }
</code></pre>

<p>Or even easier (in order to use default message, but just to define the value description and locale, to format numbers):
        $min = 0;
        $max = 10000.10;
        $numberValidator = new Zend_Validate_Between(0, $min, $max);
        $numberValidator-&gt;setValueDescription($translate-&gt;translate('Number')); // Or maybe just 'Number', if translator is passed to validator
        $numberValidator-&gt;setLocale($locale); // used to show formated min and max in the messages
        if (!$numberValidator -&gt;isValid(11000)) {
            die($messages[Zend_Validate_Between::NOT_BETWEEN]);
        }</p>

<p>We could to define this facilities to Zend_Filter_Input too.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Leandro Rodrigues Chaves (leandrorc) on 2009-05-16T11:34:22.000+0000</p> 
        <div class="body">
            <p>Please, review this issue!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-05-21T18:27:47.000+0000</p> 
        <div class="body">
            <p>Reopened on request.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Leandro Rodrigues Chaves (leandrorc) on 2009-05-21T18:37:36.000+0000</p> 
        <div class="body">
            <p>Explaning better:
The question is: we can use setMessage() to do what i want, but i'm just requesting something that will be a lot useful for everyone. So, we can use the actual validators' messages like id in our translation scheme. What i suggest is like the following example shows:</p>

<pre class="highlight"><code>
$min = 0;
$max = 10000.10;
$numberValidator = new Zend_Validate_Between(0, $min, $max);
$numberValidator-&gt;setValueDescription($translate-&gt;translate('Number')); // Or just 'Number', if translator is passed to validator
$numberValidator-&gt;setLocale($locale); // It will be used to show formated min and max in the messages
if (!$numberValidator -&gt;isValid(11000)) { 
   echo $messages[Zend_Validate_Between::NOT_BETWEEN]; // "Number' is not between '0' and '10,000.10', inclusively"
}
</code></pre>

<p>As you can see, the message '"Number' is not between '0' and '10,000.10', inclusively"' is just a well presented form of "'11000' is not between '0' and '10000,10', inclusively"
In addition, i can use the standard message "'%value%' is not between '%min%' and '%max%', inclusively" as the id in my translation scheme and translate it to "'%value%' must be between '%min%' and '%max%', inclusively" if i want, for example. I think it's easy to implement and will be a lot useful! Why use setMessage() all the times when we can simplify? Using setMessage() will be like this:</p>

<pre class="highlight"><code>
$min = 0;
$max = 10000.10;
$numberValidator = new Zend_Validate_Between(0, $min, $max);
$numberValidator-&gt;setMessage("'%field%' is not between '%formatedMin%' and '%formatedMax%'!", Zend_Validate_Between::NOT_BETWEEN);
if (!$numberValidator -&gt;isValid(11000)) { 
     $messages = $numberValidator-&gt;getMessages(); 
     $messages[Zend_Validate_Between::NOT_BETWEEN] = str_replace(array('%field%', '%formatedMin%', '%formatedMax%'),
            array($translate-&gt;translate('Number'), $min, Zend_Locale_Format::toNumber($max, array('locale'=&gt;$locale, 'precision'=&gt;2))),
           $messages[Zend_Validate_Between::NOT_BETWEEN]); 
      echo $messages[Zend_Validate_Between::NOT_BETWEEN]) 
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-18T14:08:12.000+0000</p> 
        <div class="body">
            <p>I just reviewed the examples and see no missing features.
All what is noted can easily be archived with translation.</p>

<pre class="highlight"><code>
'%value%' is not between '%min%' and '%max%', inclusively 
=&gt;
'Number' is not between '%min%' and '%max%', inclusively

// or as noted afterwards
=&gt;
'%value%' must be between '%min%' and '%max%', inclusively
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Leandro Rodrigues Chaves (leandrorc) on 2009-10-18T14:36:07.000+0000</p> 
        <div class="body">
            <p>I can't understand in your example how i can easily do it with translation.</p>

<p>I didn't say there are missing features. That's just a improvement request! Look my examples: what i'm suggesting will allow less coding.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-19T11:51:23.000+0000</p> 
        <div class="body">
            <p>Please look into the basics of translation.
It is already possible to archive the above examples.</p>

<p>Regarding changing the class constants:
We will not integrate such behaviour. It would introduce an additional level and result in a more complicated behaviour for users. Additionally it would make searching for problems more problematic.
There is no reason why the value the user gives should be filtered as the user knows what he has entered, and it should be displayed to him unchanged. A localization makes no sense in this case.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-19T11:52:02.000+0000</p> 
        <div class="body">
            <p>Closing as won't fix.</p>

        </div>
    </div>
    </div>

