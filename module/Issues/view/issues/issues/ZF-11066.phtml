<h2>ZF-11066: Inconsistent use of __get() in ControllerTestCase</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2011-02-11T08:17:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-29T15:39:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Reopened</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Aaron S. Hawley (ashawley)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15111/ZF-11066.patch">ZF-11066.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It is hard to read parts of this class because some parts of it use the {{__get()}} method to access members, and some sections use accessor methods.  I suggest that Zend Framework avoid using {{__get()}} internally of a class since at first glance, {{$this-&gt;frontController}} appears to be a typo for {{$this-&gt;_frontController}} to the novice.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Aaron S. Hawley (ashawley) on 2011-02-11T08:19:33.000+0000</p> 
        <div class="body">
            <pre class="literal">
Index: library/Zend/Test/PHPUnit/ControllerTestCase.php
===================================================================
--- library/Zend/Test/PHPUnit/ControllerTestCase.php    (revision 23692)
+++ library/Zend/Test/PHPUnit/ControllerTestCase.php    (working copy)
@@ -160,7 +160,7 @@
                 }
             }
         }
-        $this-&gt;frontController
+        $this-&gt;getFrontController()
              -&gt;setRequest($this-&gt;getRequest())
              -&gt;setResponse($this-&gt;getResponse());
     }
@@ -193,7 +193,7 @@
         $request-&gt;setPathInfo(null);
 
         $controller = $this-&gt;getFrontController();
-        $this-&gt;frontController
+        $this-&gt;getFrontController()
              -&gt;setRequest($request)
              -&gt;setResponse($this-&gt;getResponse())
              -&gt;throwExceptions(false)
@@ -202,7 +202,7 @@
         if ($this-&gt;bootstrap instanceof Zend_Application) {
             $this-&gt;bootstrap-&gt;run();
         } else {
-            $this-&gt;frontController-&gt;dispatch();
+            $this-&gt;getFrontController()-&gt;dispatch();
         }
     }
 
@@ -225,7 +225,7 @@
         $this-&gt;resetResponse();
         Zend_Layout::resetMvcInstance();
         Zend_Controller_Action_HelperBroker::resetHelpers();
-        $this-&gt;frontController-&gt;resetInstance();
+        $this-&gt;getFrontController()-&gt;resetInstance();
         Zend_Session::$_unitTestEnabled = true;
     }
 
@@ -292,7 +292,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -310,7 +310,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -329,7 +329,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $match)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -348,7 +348,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $match)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -367,7 +367,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $pattern)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -386,7 +386,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $pattern)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -405,7 +405,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -424,7 +424,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -443,7 +443,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -462,7 +462,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -492,7 +492,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -511,7 +511,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -531,7 +531,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $match)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -551,7 +551,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $match)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -571,7 +571,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $pattern)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -591,7 +591,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $pattern)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -611,7 +611,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -631,7 +631,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -651,7 +651,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -671,7 +671,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/DomQuery.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_DomQuery($path);
         $constraint-&gt;registerXpathNamespaces($this-&gt;_xpathNamespaces);
-        $content    = $this-&gt;response-&gt;outputBody();
+        $content    = $this-&gt;getResponse()-&gt;outputBody();
         if (!$constraint-&gt;evaluate($content, __FUNCTION__, $count)) {
             $constraint-&gt;fail($path, $message);
         }
@@ -688,7 +688,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/Redirect.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -705,7 +705,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/Redirect.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -723,7 +723,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/Redirect.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $url)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -741,7 +741,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/Redirect.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $url)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -759,7 +759,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/Redirect.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $pattern)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -777,7 +777,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/Redirect.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_Redirect();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $pattern)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -795,7 +795,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $code)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -814,7 +814,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
         $constraint-&gt;setNegate(true);
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $code)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -832,7 +832,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $header)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -851,7 +851,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
         $constraint-&gt;setNegate(true);
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $header)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -870,7 +870,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $header, $match)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -890,7 +890,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
         $constraint-&gt;setNegate(true);
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $header, $match)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -909,7 +909,7 @@
         $this-&gt;_incrementAssertionCount();
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $header, $pattern)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -929,7 +929,7 @@
         require_once 'Zend/Test/PHPUnit/Constraint/ResponseHeader.php';
         $constraint = new Zend_Test_PHPUnit_Constraint_ResponseHeader();
         $constraint-&gt;setNegate(true);
-        $response   = $this-&gt;response;
+        $response   = $this-&gt;getResponse();
         if (!$constraint-&gt;evaluate($response, __FUNCTION__, $header, $pattern)) {
             $constraint-&gt;fail($response, $message);
         }
@@ -945,9 +945,9 @@
     public function assertModule($module, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        if ($module != $this-&gt;request-&gt;getModuleName()) {
+        if ($module != $this-&gt;getRequest()-&gt;getModuleName()) {
             $msg = sprintf('Failed asserting last module used &lt;"%s"&gt; was "%s"',
-                $this-&gt;request-&gt;getModuleName(),
+                $this-&gt;getRequest()-&gt;getModuleName(),
                 $module
             );
             if (!empty($message)) {
@@ -967,7 +967,7 @@
     public function assertNotModule($module, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        if ($module == $this-&gt;request-&gt;getModuleName()) {
+        if ($module == $this-&gt;getRequest()-&gt;getModuleName()) {
             $msg = sprintf('Failed asserting last module used was NOT "%s"', $module);
             if (!empty($message)) {
                 $msg = $message . "\n" . $msg;
@@ -986,9 +986,9 @@
     public function assertController($controller, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        if ($controller != $this-&gt;request-&gt;getControllerName()) {
+        if ($controller != $this-&gt;getRequest()-&gt;getControllerName()) {
             $msg = sprintf('Failed asserting last controller used &lt;"%s"&gt; was "%s"',
-                $this-&gt;request-&gt;getControllerName(),
+                $this-&gt;getRequest()-&gt;getControllerName(),
                 $controller
             );
             if (!empty($message)) {
@@ -1008,9 +1008,9 @@
     public function assertNotController($controller, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        if ($controller == $this-&gt;request-&gt;getControllerName()) {
+        if ($controller == $this-&gt;getRequest()-&gt;getControllerName()) {
             $msg = sprintf('Failed asserting last controller used &lt;"%s"&gt; was NOT "%s"',
-                $this-&gt;request-&gt;getControllerName(),
+                $this-&gt;getRequest()-&gt;getControllerName(),
                 $controller
             );
             if (!empty($message)) {
@@ -1030,8 +1030,8 @@
     public function assertAction($action, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        if ($action != $this-&gt;request-&gt;getActionName()) {
-            $msg = sprintf('Failed asserting last action used &lt;"%s"&gt; was "%s"', $this-&gt;request-&gt;getActionName(), $action);
+        if ($action != $this-&gt;getRequest()-&gt;getActionName()) {
+            $msg = sprintf('Failed asserting last action used &lt;"%s"&gt; was "%s"', $this-&gt;getRequest()-&gt;getActionName(), $action);
             if (!empty($message)) {
                 $msg = $message . "\n" . $msg;
             }
@@ -1049,8 +1049,8 @@
     public function assertNotAction($action, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        if ($action == $this-&gt;request-&gt;getActionName()) {
-            $msg = sprintf('Failed asserting last action used &lt;"%s"&gt; was NOT "%s"', $this-&gt;request-&gt;getActionName(), $action);
+        if ($action == $this-&gt;getRequest()-&gt;getActionName()) {
+            $msg = sprintf('Failed asserting last action used &lt;"%s"&gt; was NOT "%s"', $this-&gt;getRequest()-&gt;getActionName(), $action);
             if (!empty($message)) {
                 $msg = $message . "\n" . $msg;
             }
@@ -1068,7 +1068,7 @@
     public function assertRoute($route, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        $router = $this-&gt;frontController-&gt;getRouter();
+        $router = $this-&gt;getFrontController()-&gt;getRouter();
         if ($route != $router-&gt;getCurrentRouteName()) {
             $msg = sprintf('Failed asserting matched route was "%s", actual route is %s',
                 $route,
@@ -1091,7 +1091,7 @@
     public function assertNotRoute($route, $message = '')
     {
         $this-&gt;_incrementAssertionCount();
-        $router = $this-&gt;frontController-&gt;getRouter();
+        $router = $this-&gt;getFrontController()-&gt;getRouter();
         if ($route == $router-&gt;getCurrentRouteName()) {
             $msg = sprintf('Failed asserting route matched was NOT "%s"', $route);
             if (!empty($message)) {

</pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-04-24T19:27:45.000+0000</p> 
        <div class="body">
            <p>I have wondered this too so the fix gets my vote.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-04-25T13:42:13.000+0000</p> 
        <div class="body">
            <p>Changing this in ZF1 is a no-go as it would create a backwards compatibility break. In ZF2, from the prototypes I've been doing, we may not even need ControllerTestCase anymore. As such, I'm going to close this as "won't fix".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aaron S. Hawley (ashawley) on 2011-04-25T16:34:25.000+0000</p> 
        <div class="body">
            <p>Huh?  The patch shouldn't break anything externally since it is an internal change with no semantic difference.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-04-25T22:17:59.000+0000</p> 
        <div class="body">
            <p>Sorry -- I was looking more at the "do not use __get()" as a request to remove it entirely.</p>

<p>I'll look into the patch this week.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Aaron S. Hawley (ashawley) on 2011-05-02T16:35:06.000+0000</p> 
        <div class="body">
            <p>No worries.</p>

<p>I ran the tests for this particular file and they succeeded.  I hadn't done so before.</p>

<p>{{monospaced}}
OK (42 tests, 77 assertions)
{{monospaced}}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-29T15:37:07.000+0000</p> 
        <div class="body">
            <p>I have applied the suggested patch and the {{Zend_Test}} test suite still passes.  Attached a patch file which should apply cleanly against trunk.</p>

        </div>
    </div>
    </div>

