<h2>ZF-10041: Incorrect digit grouping for Japanese numbers</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-06-23T07:40:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-06-23T12:21:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.7 (28/Jul/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alex Dean (alexatkeplar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Locale_Format::toNumber incorrectly groups the digits of Japanese numbers:</p>

<p>$currency = Zend_Locale_Format::toNumber(12345.67, array(
                                                                'precision' =&gt; 2,
                                                                'locale' =&gt; 'ja_JP' // or equally just 'ja'
                                                               )
        );
print $currency // prints 12,345.67 instead of 1,2345.67</p>

<p>See <a href="http://en.wikipedia.org/wiki/Japanese_numerals">http://en.wikipedia.org/wiki/Japanese_numerals</a> for confirmation of the requirement.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-06-23T12:21:02.000+0000</p> 
        <div class="body">
            <p>According to Unicode the numbering for japanese numbers is
"#,##0.###". Decimal is "." and grouping is ",".</p>

<p>This means that a number like "1234567.89" has to be displayed like</p>

<p>"1,234,567.89"</p>

<p>If this is not correct, then please add an issue to Unicode/CLDR (<a href="http://www.unicode.com/cldr">http://www.unicode.com/cldr</a>) as Zend Framework as also several other frameworks like Java are using CLDR as source for I18n handling.</p>

<p>Therefor closing as non-issue for ZF.</p>

<p>PS: Note that we are not allowed/will not change the content of CLDR within ZF.</p>

        </div>
    </div>
    </div>

