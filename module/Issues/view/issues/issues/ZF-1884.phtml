<h2>ZF-1884: Caching Zend_Locale_Data::getContent() results</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-08-27T11:07:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-11-15T14:43:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.2 (25/Sep/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi there,</p>

<p>I use Zend_Locale in a professional project and a really good work was done.</p>

<p>However, the time execution is very fat due to the many xpath queries in big xml documents.
A profiling with XDebug shows me that a simple cache on  Zend_Locale_Data::getContent() improves significantly the performance.</p>

<p>So here is a solution i implemented quickly. The idea is to set a Zend_Cache_Core via a static method Zend_Locale_Data::setCache().</p>

<pre class="highlight"><code>
/**
 * @category   Zend
 * @package    Zend_Locale
 * @subpackage Data
 * @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (<a href="http://www.zend.com">http://www.zend.com</a>)
 * @license    <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>     New BSD License
 */
class Zend_Locale_Data
{
    [...]

    private static $cache;
    
    /**
     * Sets a cache to save getContent() results
     *
     * @param  string $locale
     * @access public
     */
    public static function setCache( Zend_Cache_Core $cache )
    {
        self::$cache = $cache;
    }


    /**
     * Read the LDML file, get a single path defined value
     *
     * @param  string $locale
     * @param  string $path
     * @param  string $value
     * @return array of string
     * @access public
     */
    public static function getContent($locale, $path, $value = false)
    {
        
        if(isset(self::$cache))
        {
            $cache_id = 'zend_locale_data_'.implode('_', array($locale,$path,$value));
            
            if($res = self::$cache-&gt;load($cache_id))
                return unserialize($res);
        }

        [...]
        
        if(isset(self::$cache))
        {
            self::$cache-&gt;save( serialize(self::$_list), $cache_id );
        }
        
        return self::$_list;
    }
}
</code></pre>

<p>Maybe it's not perfect but it works fine !</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-08T17:27:22.000+0000</p> 
        <div class="body">
            <p>Added caching for all I18N classes which use localization and normalization with SVN 6269</p>

        </div>
    </div>
    </div>

