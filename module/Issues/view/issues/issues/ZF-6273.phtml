<h2>ZF-6273: Zend_Controller_Plugin_ErrorHandler record 2 times in Zend_Controller_Plugin_Broker</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-11T10:47:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-14T08:18:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Marco Kaiser (bate)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>1.
The plugin Zend_Controller_Plugin_ErrorHandler record 2 times</p>

<p>index.php
...
$frontController = Zend_Controller_Front::getInstance();
$frontController-&gt;registerPlugin(new Initialisation() );
$frontController-&gt;dispatch();</p>

<p>Initialisation.php
...
        $plugin = new Zend_Controller_Plugin_ErrorHandler();
        $plugin-&gt;setErrorHandlerModule('commun')
               -&gt;setErrorHandlerController('error')
               -&gt;setErrorHandlerAction('error');
        $this-&gt;_front-&gt;registerPlugin($plugin);
...</p>

<p>The method registerPlugin of Zend_Controller_Plugin_Broker is called 4 times.
1 - registerPlugin(Initialization, null)
2 - registerPlugin(Zend_Controller_Plugin_ErrorHandler, 100)
3 - registerPlugin(Zend_Layout_Controller_Plugin_Layout, 99)
4 - registerPlugin(Zend_Controller_Plugin_ErrorHandler, null)</p>

<p>In the Zend_Controller_Plugin_Broker array_search (line 54) return false if want to register
the second time Zend_Controller_Plugin_ErrorHandler.</p>

<p>When there is a problem (Example: no controller), my controller error (common module)
is not known but rather uses ZF module by default.</p>

<p>Dump after the fourth call (Zend_Debug:: dump ($ this-&gt; getPlugins ())):</p>

<p>array(4) {
  [0] =&gt; object(Initialisation)#4 (13) {
    ["_config:private"] =&gt; object(Zend_Config_Ini)#5 (9) {
      ["_nestSeparator:protected"] =&gt; string(1) "."
      ["_skipExtends:protected"] =&gt; bool(false)
      ["_allowModifications:protected"] =&gt; bool(false)
      ["_index:protected"] =&gt; int(0)
      ["_count:protected"] =&gt; int(7)
    .....
  [99] =&gt; object(Zend_Layout_Controller_Plugin_Layout)#27 (4) {
    ["_layoutActionHelper:protected"] =&gt; object(Zend_Layout_Controller_Action_Helper_Layout)#28 (4) {
      ["_frontController:protected"] =&gt; object(Zend_Controller_Front)#1 (11) {
        ["_baseUrl:protected"] =&gt; NULL
        ["_controllerDir:protected"] =&gt; NULL
        ["_dispatcher:protected"] =&gt; object(Zend_Controller_Dispatcher_Standard)#16 (11) {
    .....
  [100] =&gt; object(Zend_Controller_Plugin_ErrorHandler)#10 (7) {
    ["_errorModule:protected"] =&gt; NULL
    ["_errorController:protected"] =&gt; string(5) "error"
    ["_errorAction:protected"] =&gt; string(5) "error"
    ["_isInsideErrorHandlerLoop:protected"] =&gt; bool(false)
    ["_exceptionCountAtFirstEncounter:protected"] =&gt; int(0)
    ["_request:protected"] =&gt; object(Zend_Controller_Request_Http)#13 (14) {
      ["_paramSources:protected"] =&gt; array(2) {
        [0] =&gt; string(4) "_GET"
        [1] =&gt; string(5) "_POST"
      }
      ["_requestUri:protected"] =&gt; string(56) "...."
      ["_baseUrl:protected"] =&gt; NULL
      ["_basePath:protected"] =&gt; NULL
      ["_pathInfo:protected"] =&gt; string(0) ""
      ["_params:protected"] =&gt; array(0) {
      }
      ["_aliases:protected"] =&gt; array(0) {
      }
      ["_dispatched:protected"] =&gt; bool(false)
      ["_module:protected"] =&gt; NULL
      ["_moduleKey:protected"] =&gt; string(6) "module"
      ["_controller:protected"] =&gt; NULL
      ["_controllerKey:protected"] =&gt; string(10) "controller"
      ["_action:protected"] =&gt; NULL
      ["_actionKey:protected"] =&gt; string(6) "action"
    }
    ["_response:protected"] =&gt; object(Zend_Controller_Response_Http)#14 (8) {
      ["_body:protected"] =&gt; array(0) {
      }
      ["_exceptions:protected"] =&gt; array(0) {
      }
      ["_headers:protected"] =&gt; array(0) {
      }
      ["_headersRaw:protected"] =&gt; array(0) {
      }
      ["_httpResponseCode:protected"] =&gt; int(200)
      ["_isRedirect:protected"] =&gt; bool(false)
      ["_renderExceptions:protected"] =&gt; bool(false)
      ["headersSentThrowsException"] =&gt; bool(true)
    }
  }
  [3] =&gt; object(Zend_Controller_Plugin_ErrorHandler)#32 (7) {
    ["_errorModule:protected"] =&gt; string(6) "commun"
    ["_errorController:protected"] =&gt; string(5) "error"
    ["_errorAction:protected"] =&gt; string(5) "error"
    ["_isInsideErrorHandlerLoop:protected"] =&gt; bool(false)
    ["_exceptionCountAtFirstEncounter:protected"] =&gt; int(0)
    ["_request:protected"] =&gt; NULL
    ["_response:protected"] =&gt; NULL
  }
}</p>

<hr /><p>2.
It works when I put the plugin Zend_Controller_Plugin_ErrorHandler in
my index.php and that I removed in initialisation.php</p>

<p>The method registerPlugin of Zend_Controller_Plugin_Broker is called 3 times.
1 - registerPlugin (Zend_Controller_Plugin_ErrorHandler, null)
2 - registerPlugin (Initialization, null)
3 - registerPlugin (Zend_Layout_Controller_Plugin_Layout, 99)</p>

<p>index.php
...
$frontController = Zend_Controller_Front::getInstance();</p>

<p>$plugin = new Zend_Controller_Plugin_ErrorHandler();
$plugin-&gt;setErrorHandlerModule('commun')
           -&gt;setErrorHandlerController('error')
           -&gt;setErrorHandlerAction('error');
$frontController-&gt;registerPlugin($plugin);</p>

<p>$frontController-&gt;registerPlugin(new Initialisation() );
$frontController-&gt;dispatch();</p>

<p>I want to be able to register the plugin Zend_Controller_Plugin_ErrorHandler
in my plugin initialization and not be forced to put it in index.php</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-04-11T13:18:01.000+0000</p> 
        <div class="body">
            <p>My French is rusty; would it be possible to get an English translation so I can be sure I understand the issue report correctly?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dri Tremblay (woow) on 2009-04-13T06:08:40.000+0000</p> 
        <div class="body">
            <p>My English is not very good. I tried to translate into English this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marco Kaiser (bate) on 2011-07-14T08:18:22.000+0000</p> 
        <div class="body">
            <p>this should be possible with application.ini and all features available in 1.11</p>

        </div>
    </div>
    </div>

