<h2>ZF-5697: Zend_Loader::loadclass fails silently if syntax errors in file.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-02-05T06:23:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-08T06:38:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2463">ZF-2463</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm finding that Zend Framework fails silently somehow when I have a syntax error in my model files.  Specifically (although I don't think this is relevant), in my classes extending Zend_Db_Table_Row_Abstract.</p>

<p>I think I've tracked this down to Zend_Loader::loadclass.</p>

<p>I find that my PHPUnit tests crash (i.e. back to command prompt with no errors), my webpages are returned blank (with no errors), and there's nothing in the logs  I've got all errors being reported.</p>

<p>It makes life a little tricky when debugging sometimes!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mark (lightflowmark) on 2009-02-05T06:29:26.000+0000</p> 
        <div class="body">
            <p>Sorry about that!  Issue duplicated and apparently fixed in 1.8.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-01-08T06:38:09.000+0000</p> 
        <div class="body">
            <p>This has been resolved since 1.8. Zend_Loader::loadClass() no longer uses a suppression operator prior to the include() call, allowing parse errors to be reported.</p>

        </div>
    </div>
    </div>

