<h2>ZF-7770: '_initCipher' Method overwrites key</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-03T23:01:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-04T11:10:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <hr /><p>[condition]</p>

<p>algorithm:blowfish</p>

<h2>mode:cbc</h2>

<p>[code]</p>

<pre><code>protected function _initCipher($cipher)
{
    $key = $this-&gt;_encryption['key'];

    $keysizes = mcrypt_enc_get_supported_key_sizes($cipher);
    if (empty($keysizes) || ($this-&gt;_encryption['salt'] == true)) {
        srand();
        $keysize = mcrypt_enc_get_key_size($cipher);
        $key     = substr(md5($key), 0, $keysize);
    } else if (!in_array(strlen($key), $keysizes)) {
        require_once 'Zend/Filter/Exception.php';
        throw new Zend_Filter_Exception('The given key has a wrong size for the set algorithm');
    }

    $result = mcrypt_generic_init($cipher, $key, $this-&gt;_encryption['vector']);
    if ($result &lt; 0) {
        require_once 'Zend/Filter/Exception.php';
        throw new Zend_Filter_Exception('Mcrypt could not be initialize with the given setting');
    }

    return $this;
</code></pre>

<h2>    }</h2>

<p>[problem]</p>

<pre><code>        srand();
        $keysize = mcrypt_enc_get_key_size($cipher);
</code></pre>

<h2>            $key     = substr(md5($key), 0, $keysize);</h2>

<p>'_initCipher' Method overwrites $key.so non-ZendFramework Application can't decrypt under same key.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-03T23:58:17.000+0000</p> 
        <div class="body">
            <p>No it does not...</p>

<pre class="highlight"><code>
        if (empty($keysizes) || ($this-&gt;_encryption['salt'] == true)) {
            srand();
            $keysize = mcrypt_enc_get_key_size($cipher);
            $key     = substr(md5($key), 0, $keysize);
</code></pre>

<p>Only when you set "salt" to get a automatic key instead of setting one yourself it will generate a key for you.
But the manual mentiones that you need to store the key yourself to be able to decrypt the content again.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-04T11:10:28.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue due to non-response</p>

        </div>
    </div>
    </div>

