<h2>ZF-5640: Zend_Db_Statement_Mysqli returns corrupted result with date and text type fields</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-27T07:26:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-18T07:33:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,</p>

<p>With Zend 1.7.3, when I execute a sql query on a table which has a date field and a text field then the returned date is corrupted. When I change the text field to a varchar field, it works fine.
If I copy Zend_Db_Statement_Mysqli.php from Zend 1.5.0 to Zend 1.7.3 then it works fine.</p>

<p>Here is a test scenario:
Create the database named "space" with a single table in it:</p>

<pre class="highlight"><code>
CREATE TABLE `test_table` (
  `id` int(7) NOT NULL auto_increment,
  `login` varchar(20) NOT NULL default '',
  `birthdate` date default NULL,
  `abc` text NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;
INSERT INTO `test_table` VALUES(1, 'atm', '2009-01-06', '');
</code></pre>

<p>With this small piece of code:</p>

<pre class="highlight"><code>
&lt;?
require_once '/var/www/zend/library/Zend/Loader.php';
Zend_Loader::registerAutoload();

      $params = array('host'=&gt;'localhost', 'username'=&gt;'test', 'password'=&gt;'test, 'dbname'=&gt;'space');
      $db = Zend_Db::factory('Mysqli', $params);

      $select = $db-&gt;select()-&gt;from('test_table')-&gt;where('login=?', 'atm');
      $stmt = $db-&gt;query($select);
      $result = $stmt-&gt;fetchAll();
      Zend_Debug::dump($result);
?&gt;
</code></pre>

<p>We can see that the "birthdate" field is corrupted. The output of the php code is:</p>

<pre class="highlight"><code>
array(1) {
  [0] =&gt; array(4) {
    ["id"] =&gt; int(1)
    ["login"] =&gt; string(3) "atm"
    ["birthdate"] =&gt; string(10) "2-@n"
    ["abc"] =&gt; string(0) ""
  }
}

zend_mm_heap corrupted
</code></pre>

<p>Here is my PHP and MySQL versions:
PHP 5.2.3 (cli) (built: Dec  5 2007 17:14:53)
Copyright (c) 1997-2007 The PHP Group
Zend Engine v2.2.0, Copyright (c) 1998-2007 Zend Technologies</p>

<p>mysql  Ver 14.7 Distrib 4.1.7, for pc-linux (i686)
Copyright (C) 2002 MySQL AB</p>

<p>I have also tested with PHP 5.2.8 and I get the same behavior.</p>

<p>Maybe I have done something wrong ? Can you please give us your opinion ?</p>

<p>Thanks,
Anh Tuan.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Josh Butts (jimbojsb) on 2009-08-17T19:12:37.000+0000</p> 
        <div class="body">
            <p>Tested with ZF Trunk, PHP 5.2.3 and Mysql 4.1 in a 32 bit Linux VM and could not reproduce this.  The fact that a zend_mm_heap_corrupted is reported is indicative of a segmentation fault or similar issue that would be near-impossible to reproduce from system to system unless the issue is at the language level rather than the framework level.  The fact that changing from a text to a varchar solved the problem at that point further illustrates the point, as the difference there at the driver level could easily push it in or out of segfault range.  A quick scan of of the PHP bug tracker didn't reveal anything relevant or related.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-18T07:33:19.000+0000</p> 
        <div class="body">
            <p>Similar issues have been raised with PHP itself with various vendor databases in the past.</p>

<p><a href="http://bugs.php.net/bug.php?id=42776">http://bugs.php.net/bug.php?id=42776</a>
<a href="http://bugs.php.net/bug.php?id=34623">http://bugs.php.net/bug.php?id=34623</a>
<a href="http://bugs.php.net/bug.php?id=39134">http://bugs.php.net/bug.php?id=39134</a></p>

<p>Ideally, you can produce a PHP only reproduction for the PHP team and they can look into it.</p>

<p>Thanks!
-ralph</p>

        </div>
    </div>
    </div>

