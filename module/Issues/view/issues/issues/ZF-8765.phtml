<h2>ZF-8765: Autoload implicitly required?</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Coding Standards Violation</dd>

    <dt>Created:</dt>
    <dd>2010-01-10T05:48:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-10T07:30:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Dolf Schimmel (Freeaqingme) (freak)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Autoloading is surely useful, but not every project uses it. ZF seems to recognize this, in that most ZF classes in the framework/library do not depend upon it.</p>

<p>For example, when throwing an exception, most ZF classes do something like:</p>

<pre class="literal">
require_once 'Zend/SomePackage/Exception.php';
throw new Zend_SomePackage_Exception('Invalid foo');
</pre>

<p>However, there are several places in Zend_Application where it seems that autoloading is implicitly assumed.</p>

<p>For example:</p>

<pre class="literal">
    protected function _loadConfig($file)
    {
        $environment = $this-&gt;getEnvironment();
        $suffix      = strtolower(pathinfo($file, PATHINFO_EXTENSION));

        switch ($suffix) {
            case 'ini':
                $config = new Zend_Config_Ini($file, $environment);
                break;

            case 'xml':
                $config = new Zend_Config_Xml($file, $environment);
                break;

            case 'php':
            case 'inc':
                $config = include $file;
                if (!is_array($config)) {
                    throw new Zend_Application_Exception('Invalid configuration file provided; PHP file does not return array value');
                }
                return $config;
                break;

            default:
                throw new Zend_Application_Exception('Invalid configuration file provided; unknown config type');
        }

        return $config-&gt;toArray();
    }
</pre>

<p>Note that the object instantiations and the exception throws do <em>not</em> require/include the relevant files before use. They seem to assume autoloading, right? Zend_Application itself does not extend from any other class, so we cannot assume that there is some parent taking care of it for us.</p>

<p>Not sure if this qualifies as an issue, but wanted to bring it up. Love the framework so I'd like to do what I can to help. As a total n00b with ZF and with modern tools like SVN, I probably can't help by actually fixing anything - yet! - but hopefully little stuff like this helps at least somewhat.</p>

<p>Cheers!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-01-10T07:20:54.000+0000</p> 
        <div class="body">
            <p>From the reference guide:</p>

<p>{quote}4.1. Introduction</p>

<p>Zend_Application provides a bootstrapping facility for applications which provides reusable resources, common- and module-based bootstrap classes and dependency checking. It also takes care of setting up the PHP environment and introduces autoloading by default.{quote}</p>

<p>Because Zend_App can take care of setting up autoloading, and does so by default, it's been decided to make zend_app entirely reliant on autoloading. Therefore, I'm closing this issue as not an issue. Feel free to comment if you have any further questions.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Weinraub (papayasoft) on 2010-01-10T07:30:05.000+0000</p> 
        <div class="body">
            <p>@Dolf: Thanks for the pointer to the Zend_Application introduction. I missed that. Sorry.</p>

<p>Sure, if the decision has been made to make Zend_Application reliant on autoloading, then there is no issue here. Just thought I had caught something that had slipped through the cracks.</p>

<p>Cheers!</p>

        </div>
    </div>
    </div>

