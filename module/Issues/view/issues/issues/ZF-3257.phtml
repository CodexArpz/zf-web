<h2>ZF-3257: Attributes or character data lost in Zend_Json::fromXml() in specific circumstances</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-05-14T01:43:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-26T23:38:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.7 (02/Jun/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Enrico Zimuel (zimuel)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5417">ZF-5417</a></li>
            <li><a href="/issues/browse/ZF-11385">ZF-11385</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><em>Example 1 - loss of character data</em></p>

<p>When a node's children are a mixture of character data and xml nodes, the character data is lost</p>

<p>$xml = '<a><b></b>bar</a>';
echo Zend_Json::fromXml($xml, false);</p>

<p>Output: {"a":{"b":{"@attributes":{"id":"foo"}}}}</p>

<p><em>Example 2 - loss of attribute data</em></p>

<p>When a node has a single character data child, any attributes are lost</p>

<p>$xml = '<a><b>bar</b></a>';
echo Zend_Json::fromXml($xml, false);</p>

<p>Output: {"a":{"b":"bar"}}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-09T12:38:44.000+0000</p> 
        <div class="body">
            <p>Please evaluate and fix/categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Eric Johnson (edjoon) on 2008-11-21T08:53:18.000+0000</p> 
        <div class="body">
            <p>What's the status on this? Seems like a pretty major problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stanislav Malyshev (stas) on 2009-06-17T15:33:51.000+0000</p> 
        <div class="body">
            <p>What output would you expect in this case?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Edwards (spcmky) on 2009-10-13T17:18:56.000+0000</p> 
        <div class="body">
            <p>I dunno what the output should be, however I would suspect that the conversion should not loose any data. This is a pretty major issue and there needs to be a resolution.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-14T05:10:20.000+0000</p> 
        <div class="body">
            <p>Stas: In Example 1, note that the value of the "b" element, "bar", is not in the JSON representation. In Example2, the attribute "id" found in element "b" is not represented in the JSON.</p>

<p>I'm not entirely sure how you represent an XML element that has both attributes and values, but surely we need to be able to do so.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Edwards (spcmky) on 2009-10-14T09:15:44.000+0000</p> 
        <div class="body">
            <p>One example would be to create a special array index called "name" or"value" or etc. that would contain the element's info.  This way it can coexist with the attributes index.  This changes the data structure though but it's a special case and would need to be handled when converting back to xml.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Enrico Zimuel (zimuel) on 2011-04-29T07:34:44.000+0000</p> 
        <div class="body">
            <p>My suggestion is to store the text value of a XML element using the key "@text" in the JSON format.
The idea is to use the same logic of the @attributes JSON element.
For instance, the following XML:
<a><b></b>bar</a>
can be represented in this JSON structure:
{"a":{"b":{"@attributes":{"id":"foo"}},"@text":"bar"}}
This should be the behaviour only in presence of "complex" XML elements (that means elements with attributes or sub-elements).
For instance the following simple XML:
<a>foo</a>
will continue to be represented with the JSON string: {"a":"foo"}, instead of {"a":{"@text":"foo"}}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Enrico Zimuel (zimuel) on 2011-05-03T16:35:23.000+0000</p> 
        <div class="body">
            <p>Resolved in branches/release-1.11 (commit 23971 and 23973)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Stücher (billomat) on 2011-05-16T15:26:20.000+0000</p> 
        <div class="body">
            <p>With your changes in rev23915 $recursionDepth from _processXml is not recursion depth but the number of root-child-elements!
Therefore you are not able to process a xml with more than 25 elements!
The old one hat a additional $recursionDepth--; in line 331 which is missing in revision 23915</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Enrico Zimuel (zimuel) on 2011-05-16T16:42:18.000+0000</p> 
        <div class="body">
            <p>Simon thanks for the feedback. I used a $recursionDepth++ instead of $recursionDepth+1 in the recursive call (line 280).
Resolved in trunk (commit 24039). Please test it and let me know, thanks.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Stücher (billomat) on 2011-05-17T08:08:58.000+0000</p> 
        <div class="body">
            <p>Thanks for the very quick response and bugfix, Enrico! Now it works as expected.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Enrico Zimuel (zimuel) on 2011-05-17T09:05:40.000+0000</p> 
        <div class="body">
            <p>Resolved in branches/release-1.11 (commit 24040)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-08-26T23:38:02.000+0000</p> 
        <div class="body">
            <p>Issued ZF2 pull request <a href="https://github.com/zendframework/zf2/pull/356">PR-356</a> to have changes pulled forward</p>

        </div>
    </div>
    </div>

