<h2>ZF-1156: Table_Row should be able to store dependent/parent rowsets</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-03-29T02:10:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>I think that a great improvement for table relationship would be to store and be able to access to the dependent rows within parent row object.</p>

<p>with the example of the manual we could have :</p>

<pre class="highlight"><code>
$tableAccount = new Accounts();
$anAccount = $tableAcount-&gt;find(1)-&gt;current();
</code></pre>

<p>and have in the Zend_Db_Table_Row object a detection of accessor like following that would fetch and store the dependent rows on the first call (and maybe also with a refresh method) :</p>

<pre class="highlight"><code>

same idea with parent rows :
</code></pre>

<p>in a second time we could imagine to be able to update dependent rows not only for primary key changes if using the where clause generated from the referenceMap (already implemented in the findDependantRowset).
For example we would be able to add a dependent row for a parent row object :</p>

<pre class="highlight"><code>
$newBug = $tableBugs-&gt;fetchNew();
$newBug-&gt;bug_description = 'a description';
$newBug-&gt;bug_status = 'OPEN';
...
$aProduct-&gt;dependentBugs-&gt;add($newBug); 
</code></pre>

<p>This last call could set the product_id value in $newBug if Zend_Db_Table_Rowset had stored the where clause used to fetch it (so with primary key value of the parent row)</p>

<p>Then
```
would add the new bug for this product;</p>

<p>I'm aware that it implies quite major modifications but I think this is really a must have functionality.</p>

<p>Wandrille</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-29T13:50:11.000+0000</p> 
        <div class="body">
            <p>This is a pretty fancy new feature.  I have changed the issue type to 'new feature'.</p>

<p>This is part of being an object-relational mapping (ORM), and Zend_Db_Table has a long way to go to provide that functionality.  The scope of work for Zend_Db_Table is to provide the Table Data Gateway and Row Data Gateway patterns, not a fully features ORM.</p>

<p>That would be a really great product, but we cannot do this in the short term with Zend_Db.  I will leave the issue open though and perhaps someday we will do it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:55.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-04T13:17:30.000+0000</p> 
        <div class="body">
            <p>Reassigning to Ralph since he's the new maintainer of Zend_Db</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:11.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

