<h2>ZF-11356: Zend_Json_Encoder fails to encode namespaced class names properly</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-05-10T16:25:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-09-01T00:25:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.8 (07/Jul/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14339/ZF-11356.patch">ZF-11356.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm using ZF with Doctrine which is using PHP 5.3 Namespaces.
I want to encode an object using Zend_Json's embedded encoder. This encoder adds a '__classname' to every object which contains the get_class() value of the object. This results in malformed JSON because the backslashes aren't encoded properly.</p>

<p>Example: Encoding a class A\Entity\Foo is saved as {"__classname":"A\Entity\Foo"} without encoded backslashes. The correct encoding is {"__classname":"A\Entity\Foo"}.</p>

<p>My local workaround is a str_replace('\', '\\', get_class($value)) around the get_class() call.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-06-01T11:43:08.000+0000</p> 
        <div class="body">
            <p>I've attached a fix implementation and unit test to cover it.</p>

<p>I wasn't sure what the proper procedure was for using namespaced classes inside of ZF.  What I did was create a new PHP file tests/Zend/Json/_files/Zf11356-NamespacedClass.php with this code:</p>

<pre class="highlight"><code>
namespace Zend\JsonTest\Zf11356;
class NamespacedClass extends \ArrayIterator
{}
</code></pre>

<p>Then tested the PHP version in the unit test, and if it was &gt;=5.3 require_once'd the above file and carried on with the test.</p>

<p>Is this a good approach?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-06-24T15:23:24.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk r24151
Merged to release-1.11 in r24152</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-09-01T00:25:45.000+0000</p> 
        <div class="body">
            <p>Issued pull request against {{zendframework/zf2}} branch {{master}}
<a href="https://github.com/zendframework/zf2/pull/371">https://github.com/zendframework/zf2/pull/371</a></p>

        </div>
    </div>
    </div>

