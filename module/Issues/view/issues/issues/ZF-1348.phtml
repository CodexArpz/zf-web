<h2>ZF-1348: Add a isTranslated() method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-05-05T15:03:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC1 (28/May/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently the Zend_Translate component do not have method to know if a sentence is translated in a language or not, translate() just return the source sentence.</p>

<p>A isTranslated() method can be added to correct this missing feature.</p>

<p>Here a possible implementation of the method :</p>

<pre class="highlight"><code>
    public function isTranslated($messageId, $locale = null)
    {
        if ($locale === null) {
            $locale = $this-&gt;_locale;
        } else {
            if (!$locale = Zend_Locale::isLocale($locale)) {
                // language does not exist, return false
                return false;
            }
        }

        if (array_key_exists($locale, $this-&gt;_translate)) {
           if (array_key_exists($messageId, $this-&gt;_translate[$locale])) {
                // translation exist, return true
                return true;
           }
        } else if (strlen($locale) != 2) {
            // faster than creating a new locale and separate the leading part
            $locale = substr($locale, 0, -strlen(strrchr($locale, '_')));

            if (array_key_exists($locale, $this-&gt;_translate)) {
                if (array_key_exists($messageId, $this-&gt;_translate[$locale])) {
                    // translation exist, return true
                    return true;
                }
            }
        }
        // no translation found, return false
        return false;
    }
</code></pre>

<p>As you can see the method is very similar to the translate() method, so it can be a simple option to add to the translate() method who make it return false when the sentence to translate was not found.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-05-05T15:31:48.000+0000</p> 
        <div class="body">
            <p>First:
Your description and the sourcecode do not work together... the sourcecode returns true even if the string is not avaiable in the source language but only in the deferred one.</p>

<p>Second:
All major languages do NOT give such functionality because translation should not be computed.  We are normaly here within the view, where such logic should not be integrated.</p>

<p>Third:
As this is a feature-request I will need feedback from the dev-team if this feature should be integrated or not. The core library is almost ready for 1.0 and new feature have to be integrated very carefully.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Yannick Croissant (country) on 2007-05-05T15:56:40.000+0000</p> 
        <div class="body">
            <p>Correction of the description</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-05-17T14:50:08.000+0000</p> 
        <div class="body">
            <p>Integrated with SVN 4844.
Docu and tests also added.</p>

        </div>
    </div>
    </div>

