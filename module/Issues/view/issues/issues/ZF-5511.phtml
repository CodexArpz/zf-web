<h2>ZF-5511: avoid unnecessary update queries</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-01-10T09:08:03.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-17T16:19:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Let's say I retrieve a Row from db with $row-&gt;prop set to 'prop1'; (ie. 'prop1' is stored in $row-&gt;_cleanData).
At this point, if I do $row-&gt;save(), no sql update query gets executed (no data was changed)</p>

<p>Now if I do: $row-&gt;prop = 'prop1'; $row-&gt;save();
In this case an update query gets executed when in fact it's not necessary.</p>

<p>To avoid this, my suggestion would be to update Zend_Db_Table_Row_Abstract::__set, replacing the following:</p>

<pre class="highlight"><code>$this-&gt;_data[$columnName] = $value;
$this-&gt;_modifiedFields[$columnName] = true;</code></pre>

<p>with the following:</p>

<pre class="highlight"><code>
$this-&gt;_data[$columnName] = $value;
if (isset($this-&gt;_cleanData[$columnName]) &amp;&amp; $this-&gt;_cleanData[$columnName] === $value) {
  @unset($this-&gt;_modifiedFields[$columnName]);
} else {
  $this-&gt;_modifiedFields[$columnName] = true;
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-07-17T16:08:47.000+0000</p> 
        <div class="body">
            <p>I am inclined to close this as Not An Issue, here is my reasoning:</p>

<p>Databases have lots of features across all vendors.  Typically, you could see a stored procedure, trigger or any other number of (on UPDATE / on INSERT) type of data mutations when in fact the data on the application side is still very much the same.  I dont think that silent determination is a good idea.  Also, the type of functionality you are talking about is very easy to implement if you add the logic to the methods of a Zend_Db_Table_Row_Abstract extended class.</p>

<p>Please reopen and bring to the mailing list if you feel differently.</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-07-17T16:19:14.000+0000</p> 
        <div class="body">
            <p>It would be interesting to see what the impact of such a feature would be in terms of speed and number of queries in an average application. If it would provide a significant performance increase it would be worth adding this as an opt-in feature. Metrics will tell : )</p>

        </div>
    </div>
    </div>

