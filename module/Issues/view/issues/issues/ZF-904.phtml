<h2>ZF-904: Suggestion: Support Phrase Translation for Error messages</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-02-13T12:41:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-19T12:53:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1331">ZF-1331</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>-------- Original Message --------
Subject:    [fw-i18n] Re: [fw-core] Zend_Filter &amp; Zend_Validate
Date:   Thu, 08 Feb 2007 10:36:53 -0800
From:   Gavin Vess <a href="mailto:gavin@zend.com">gavin@zend.com</a></p>

<p>I will make a suggestion to consider the use of Zend_Translate and the use of "translatable strings".
Since documentation is not done, the idea behind "translatable strings" is documented clearly below:
<a href="http://www.gnu.org/software/gettext/manual/html_mono/gettext.html#SEC15">http://gnu.org/software/gettext/â€¦</a></p>

<p>If the messages below were returned as "translatable strings", then Ralf could use Zend_Translate to accomplish what he wants to do.</p>

<p>Cheers,
Gavin</p>

<p>Darby Felton wrote:</p>

<blockquote>
  <p>Hi Ralf,</p>
  
  <p>The problem of user defined error/exception messages is not specific to
  Zend_Validate. To my knowledge, we do not have direct support within
  Zend Framework components for changing the messages that the components
  emit upon errors/exceptions.</p>
  
  <p>That said, there is indirect support for defining applications-specific
  messages through catching exceptions, extending classes, and, often,
  wrapping what the components make available through their members.</p>
  
  <p>For Zend_Validate_EmailAddress, you could do something like:</p>
  
  <p>$emailAddress = 'bbb@aa.-123';
  $validator = new Zend_Validate_EmailAddress();
  if (!$validator-&gt;isValid($emailAddress)) {
      $myMessage = MyApp::getUserMessage('email.invalid');
  }</p>
  
  <p>This is untested and incomplete, but the idea is that you do not care
  what $validator returns through getMessages(), and you simply define
  your own messages. If you want to get fancier, you could examine the
  messages returned from getMessages() and change your user-defined error
  message to be dependent on these.</p>
  
  <p>Hope this helps!</p>
  
  <p>Best regards,
  Darby</p>
  
  <p>Ralf Eggert wrote:</p>
  
  <blockquote>
    <p>Hi Darby,</p>
    
    <p>I just started to test Zend_Validate and it looks quite nice so far.</p>
    
    <p>But unfortunately, I don't really know where to start if I want to
    change the default messages. For example, Zend_Validate_EmailAddress
    passes back a message like such:</p>
    
    <p>'aa.-123' is not a valid hostname for email address 'bbb@aa.-123'</p>
    
    <p>What can I do to get German error messages for example?</p>
    
    <p>Thanks for your help and Best Regards,</p>
    
    <p>Ralf</p>
  </blockquote>
</blockquote>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-02-15T13:31:58.000+0000</p> 
        <div class="body">
            <p>Related to this issue there are three major problems...</p>

<p>1.) The user needs a list of messages, probably an array or an file, where he can find all messages which he needs to translate. And this is relevant for all classes of the framework.</p>

<p>2.) Related the "translatable" messages we also have the problem that exceptions have none parameters or one or two or even three which also have to be returned or even more...</p>

<p>3.) The messages also have to be viewable if Zend Translate is not avaiable because the user works only with some classes and deleted the rest.</p>

<p>Greetings
Thomas, Zend_Translate-Master :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-02-15T15:46:43.000+0000</p> 
        <div class="body">
            <p>I agree.   For example, we would need to replace the variable portions out of the message strings with place holders and bundle the values of the placeholders as lists with each message returned.</p>

<p>Also, we should carefully distinguish between error messages intended for the developer of the ZF app, and error messages that are intended for reading by the users of the ZF app.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-03-13T16:06:34.000+0000</p> 
        <div class="body">
            <p>Changing to unassigned; need more feedback and action plan before assigning to appropriate persons.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-03-13T21:37:51.000+0000</p> 
        <div class="body">
            <p>See also: <a href="http://framework.zend.com/wiki/x/dlY">http://framework.zend.com/wiki/x/dlY</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-15T13:41:28.000+0000</p> 
        <div class="body">
            <p>Resolving this issue as "Incomplete" because it is more appropriate to use the proposal process than a JIRA issue to track this feature request.  It applies to all components in Zend Framework.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-19T12:53:00.000+0000</p> 
        <div class="body">
            <p>Bookkeeping. Closing old issues and assigning them to the person who ultimately resolved the issue.</p>

        </div>
    </div>
    </div>

