<h2>ZF-8523: Zend_Controller_Plugins_ErrorHandler uses layout script twice</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-11T09:04:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                boris (jer)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This bug shows when you have 2+ actions in stack and first runs ok and any subsequent produces error:</p>

<pre class="highlight"><code>
class IndexController extends Zend_Controller_Action
{
    public function indexAction()
    {
        $this-&gt;view-&gt;message = 'run ok';
        $this-&gt;_helper-&gt;actionStack('nonExistentAction', 'nonExistentController');
    }

}
</code></pre>

<p>As far as I debugged this - layout plugin's postDispatch() wraps content twice with layout script, didn't look deeper to find why.</p>

<p>Of cause adding non-existent actions into stack is just for example. Actually I move user request to second action and my first action does some stuff that must precede any processing. And if request goes to non-existent controller - user sees such a 'beautiful' thing.</p>

<p>As workaround:</p>

<pre class="highlight"><code>
class ErrorController extends Zend_Controller_Action
{
    public function errorAction()
    {
        $this-&gt;getResponse()-&gt;clearBody();
        .....
    }
}

</code></pre>

<p><em>P.S. Bug is trivial - by default Zend_Layout_Controller_Plugin_Layout is registered at index 99, Zend_Controller_Plugin_ErrorHandler at index 100. In postDispatch() layout plugin finds that request is dispatched and runs its actions, then error handler's postDispatch() adds another request and layout plugin finds another dispathed request and runs again. Changing register order solves the problem.</em></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-12-11T09:27:49.000+0000</p> 
        <div class="body">
            <p>Assigning to Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:32.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

