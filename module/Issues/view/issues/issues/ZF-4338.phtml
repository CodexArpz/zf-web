<h2>ZF-4338: Add parentheses around UNION'ed selects</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-09-20T08:20:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-10-28T14:22:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jaka Jancar (jaka)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Pádraic Brady (padraic)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-11392">ZF-11392</a></li>
            <li><a href="/issues/browse/ZF-11852">ZF-11852</a></li>
            <li><a href="/issues/browse/ZF-7592">ZF-7592</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12102/Select.php.patch">Select.php.patch</a></li>
            <li><a href="/issues/secure/attachment/12101/Select.php.patch">Select.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>MySQL manual says:</p>

<p>{quote}
To use an ORDER BY or LIMIT clause to sort or limit the entire UNION result, parenthesize the individual SELECT statements and place the ORDER BY or LIMIT after the last one. The following example uses both clauses:</p>

<pre class="highlight"><code>
(SELECT a FROM t1 WHERE a=10 AND B=1)
UNION
(SELECT a FROM t2 WHERE a=11 AND B=2)
ORDER BY a LIMIT 10;
</code></pre>

<p>[...]
To apply ORDER BY or LIMIT to an individual SELECT, place the clause inside the parentheses that enclose the SELECT:</p>

<pre class="highlight"><code>
(SELECT a FROM t1 WHERE a=10 AND B=1 ORDER BY a LIMIT 10)
UNION
(SELECT a FROM t2 WHERE a=11 AND B=2 ORDER BY a LIMIT 10);
</code></pre>

<p>{quote}</p>

<p>Zend_Db_Select::_renderUnion() doesn't add parentheses around selects so ORDER BY is ambiguous.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Martin Panel (xorax) on 2009-02-10T03:02:59.000+0000</p> 
        <div class="body">
            <p>Is so difficult to implement it ???
That affect all version after 1.6.0 and extends Zend_Db_Select is not easy !</p>

<pre class="highlight"><code>
protected function _renderUnion($sql)
{
    if ($this-&gt;_parts[self::UNION]) {
        $parts = count($this-&gt;_parts[self::UNION]);
        foreach ($this-&gt;_parts[self::UNION] as $cnt =&gt; $union) {
            list($target, $type) = $union;
            if ($target instanceof Zend_Db_Select) {
                $target = $target-&gt;assemble();
            }
            $sql .= ' ( '.$target.' ) ';
            if ($cnt &lt; $parts - 1) {
                $sql .= ' ' . $type . ' ';
            }
        }
    }
     return $sql;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Petre Balau (coditza) on 2009-02-26T09:17:00.000+0000</p> 
        <div class="body">
            <p>To get the parentheses around the individual selects, use something like this:</p>

<pre class="highlight"><code>
$select_1 = $db-&gt;select()-&gt;...;
$select_2 = $db-&gt;select()-&gt;...;

$main_select = $db-&gt;select()-&gt;union( array(  '('.$select_1.')',  '('.$select_2.')' ) );
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jaka Jancar (jaka) on 2009-02-26T10:41:34.000+0000</p> 
        <div class="body">
            <p>That's a workaround, of course.</p>

<p>But that's not the point. This should be done inside Zend_Db_Select, otherwise it produces ambiguous SQL.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marco (p0l0) on 2009-07-23T22:34:07.000+0000</p> 
        <div class="body">
            <p>I have made this patch on latest version, I don't think it breaks anything if each Union uses parentheses.</p>

<p>Without parentheses we can not use LIMIT or ORDER BY, except if we use the union( array(  '('.$select_1.')',  '('.$select_2.')' ) ); workaround, which is not very "Zend"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marco (p0l0) on 2009-07-23T22:41:57.000+0000</p> 
        <div class="body">
            <p>Sorry, this is the correct patch file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pierre-Yves Beaudouin (pybeaudouin) on 2010-02-18T07:47:13.000+0000</p> 
        <div class="body">
            <p>Marco, thank you for your patch ! Unfortunately it does not seem to work with Framework 10.1, I get another error:</p>

<p>No table has been specified for the FROM clause</p>

<p>I can not add parenthesis around my selects because it will convert them as strings and I need them as objects. Maybe your patch work on an older version of the framework ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pierre-Yves Beaudouin (pybeaudouin) on 2010-02-19T00:22:43.000+0000</p> 
        <div class="body">
            <p>Sorry for the spam - this bug is for ZF 1.7.5. Your patch works well with ZF 1.10.1.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Roensch (croensch) on 2011-05-26T22:24:23.000+0000</p> 
        <div class="body">
            <p>I <a href="http://stackoverflow.com/questions/4653124">believe</a> this is non-standard SQL, because of that it cannot be included in Zend_Db_Select.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2011-08-14T12:07:11.000+0000</p> 
        <div class="body">
            <p>Marked as Won't Fix on the basis of:</p>

<ol><li>This is not standard SQL and is MySQL specific</li>
<li>A known workaround exists and the fix would breach backwards compatibility.</li>
</ol><p>Reporters and Assignee are recommended to fix in ZF2 if still a problem - or open a ZF2 issue in its respect.</p>

        </div>
    </div>
    </div>

