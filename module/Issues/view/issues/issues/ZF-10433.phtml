<h2>ZF-10433: db_table update convert $_primary to array</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-09-08T03:28:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-10-25T19:22:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                DooBie (doobie)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>By using the update method in Zend_Db_Table class and having declared the variable as protected $_primary = 'id'; the update method, transforms it into an array, which needs to be used this way, $this-&gt;_primary[1] instead of the normal $this-&gt;_primary.</p>

<p>The marked exception is this:</p>

<pre class="highlight"><code>
Exception information:

Message: SQLSTATE [42S22]: Column Not found: 1054 Unknown column 'Array' in 'where clause'
</code></pre>

<p>The Model (Db_Table)</p>

<pre class="highlight"><code>
class Application_Model_DbTable_Categories extends Zend_Db_Table_Abstract
{
    protected $_name = 'tbl_categories';
    protected $_primary = 'id_category';

    public function getCategory($id)
    {
      // With $this-&gt;_primary as string, correctly
      $row = $this-&gt;fetchRow($this-&gt;_primary . ' = '. (int)$id);
      if (!$row) return null;
      return $row-&gt;toArray();
    }
    
    public function addCategory($data)
    {
      if (is_array($data)) {
        if ($this-&gt;_getCategoryByName($data['name_category'])) return ROW_EXISTS;
        return $this-&gt;insert($data);
      }
    }
    
    public function updateCategory($data, $id)
    {
      if (is_array($data))
        // As array, Why?
        return $this-&gt;update($data, $this-&gt;_primary[1] . ' = ' . (int)$id);
    }
    
    public function deleteCategory($id)
    {
      // As string, correctly
      return $this-&gt;delete($this-&gt;_primary . ' = ' . (int)$id);
    }
}
</code></pre>

<p>The controller:</p>

<pre class="highlight"><code>
class CategoriesController extends Zend_Controller_Action
{
    protected $_categories;

    public function init()
    {
      // Instance of Db_Table 'Categories'
      $this-&gt;_categories = new Application_Model_DbTable_Categories();
    }

    public function indexAction()
    {
      // some code
    }

    public function addAction()
    {
      // some code
    }

    public function editAction()
    {
      // some code

      $id = (int)$this-&gt;_form-&gt;getValue('id_category');
      $data['name_category'] = $this-&gt;_form-&gt;getValue('name_category');
      $data['description_category'] = $this-&gt;_form-&gt;getValue('description_category');

      if ($this-&gt;_categories-&gt;updateCategory($data, $id) &gt; 0) {  // Jump the exception!!!!

      // some code
    }

    public function deleteAction()
    {
      // some code
    }

}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Beno√Æt Durand (intiilapa) on 2010-09-08T10:08:58.000+0000</p> 
        <div class="body">
            <p>This is not an issue, and would break the compatibility. Don't use directly $this-&gt;_primary, but $this-&gt;getInfo(self::PRIMARY).</p>

<p>To find out why, read the code of the method Zend_Db_Table_Abstract::_setupPrimaryKey().</p>

        </div>
    </div>
    </div>

