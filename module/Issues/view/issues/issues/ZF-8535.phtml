<h2>ZF-8535: Improving performance of Zend_DB caching</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-12-12T22:44:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                thing2b (thing2b)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>From my understanding of <a href="http://framework.zend.com/manual/en/zend.db.table.html#zend.db.table.metadata.caching.hardcoding">http://framework.zend.com/manual/en/â€¦</a> there is a performance increase if you Hardcode Table Metadata (when a fast cache system is not available). The problem is that this takes a while to hardcode. A tool is needed that can be pointed at a database and generate the needed Hardcoded Table Metadata. This could then be stored as a php file (or files). As databases do not change often, this tool could be run during development and re-run after every database change.</p>

<p>What could be wrong with improving performance AND saving developers time?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:23.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

