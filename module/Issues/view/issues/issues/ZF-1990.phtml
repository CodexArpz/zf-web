<h2>ZF-1990: Time specified in Zend_Date::__construct assumed to be GMT-time</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-09-24T16:00:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-11-15T14:05:51.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.3 (30/Nov/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When you're using an array of data as the argument for the constructor when creating a Zend_Date object in it's constructor it assumes that time to be GMT-time as can be seen in this code:</p>

<pre class="highlight"><code>
return $this-&gt;_assign($calc, $this-&gt;mktime($hours, $minutes, $seconds, $months, $days, $years, true),
     $this-&gt;mktime($hour,  $minute,  $second,  $month,  $day,  $year,  true), $hour);
</code></pre>

<p>When I execute this code from the manual I get a Zend_Date object with the hour set to 13...</p>

<pre class="highlight"><code>
$datearray = array('year' =&gt; 2006, 'month' =&gt; 4, 'day' =&gt; 18, 'hour' =&gt; 12, 'minute' =&gt; 3, 'second' =&gt; 10);
$date = new Zend_Date($datearray);
</code></pre>

<p>By instead specifying each part of the time separately, like in the following code, I will get a correct hour of 12 instead.</p>

<pre class="highlight"><code>
$show = new Zend_Date($input-&gt;show_yyyy, Zend_Date::YEAR);
$show-&gt;setMonth ($input-&gt;show_mm);
$show-&gt;setDay   ($input-&gt;show_dd);
$show-&gt;setHour  ($input-&gt;show_hh);
$show-&gt;setMinute($input-&gt;show_min);
</code></pre>

<p>I've tracked it down to the choice between the PHP functions gmmktime and mktime that is made within the Zend objects own mktime function. If I would be able to specify that the array isn't GMT-time so that the mktime would be used instead of the gmmktime - then the Zend_Date constructor would deliver the time I expect it to deliver.</p>

<p>It would perhaps also be wise to have GMT turned off by default in the constructor - making the constructor behave the same way as the separate functions.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-24T16:51:10.000+0000</p> 
        <div class="body">
            <p>I'm sorry to say that again and again...</p>

<p>But the code doesn't work the way you think.
Time and Date always depend on the timezone, the date and dst.
And not on GMT or CET alone.</p>

<p>The problem you are seeing seems to be related to timezone and dst.</p>

<p>Please give us your 
* timezone
* locale
* used SVN version
* OS
for detailed reproduction.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pelle Wessman (voxpelli) on 2007-09-24T17:17:14.000+0000</p> 
        <div class="body">
            <p>Oh, seems like I left out which timezone I'm in. Of course that matters to determine why this error occur - because I'm getting what the time is in my timezone when the time specified occurs at GMT 0.</p>

<p>To clarify what I want: I want Zend_Date to contain the same value that I specify and not to expect that I'm giving it a GMT time and I want it to be consistent and contain the very same value no matter if I define it as an array in the constructor or as separate function calls.</p>

<h1>timezone</h1>

<p>+1 GMT I think it is, I'm not the best at timezones so perhaps +2 now during summertime or something.</p>

<pre class="highlight"><code>

# locale
</code></pre>

<p>setlocale(LC_ALL, array('sve', 'swe'));
Zend_Locale_Format::setOptions(array('locale' =&gt; 'sv_SE'));
```</p>

<h1>used SVN version</h1>

<p>Hmm, well I'm using the 1.0.1 release. I hope it's okay to submit issues anyway - I checked and didn't see any existing issue about this matter now r in the past.</p>

<h1>OS</h1>

<p>Swedish XP SP2 under wish I'm running a rather new version of XAMPP with new versions of both Apache and PHP although not the newest.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-25T08:10:19.000+0000</p> 
        <div class="body">
            <p>I was able to reproduce a misinterpreted behaviour with the data you provided related to CET instead of CEST set.</p>

<p>Please check out SVN 6511 where this error is fixed and give us response.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pelle Wessman (voxpelli) on 2007-09-28T06:17:18.000+0000</p> 
        <div class="body">
            <p>I have tried that revision of Zend_Date and it worked correctly.</p>

<p>I don't understand what "related to CET instead of CEST set." really is meaning but I can tell for the record that now when I tested this it gave the same errors with the old file no matter if I set the timezone in my php-file or not. It worked correctly with this new file also no matter if I specified it in my php-file. On the other hand - it might be that those settings I make in the php-files alreade are made by default because of the language of my OS or something - I don't know, I'm just telling what I see.</p>

<p>Good job solving this so fast btw. I'm sorry I couldn't test it earlier!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-09-28T10:48:21.000+0000</p> 
        <div class="body">
            <p>Fixed with SVN 6511</p>

        </div>
    </div>
    </div>

