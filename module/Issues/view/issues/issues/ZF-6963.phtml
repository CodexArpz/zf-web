<h2>ZF-6963: Zend_Search_Lucene::addDocument() fails with invalid file permissions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-09T05:42:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-09T02:14:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If I use following construct to create and use an index:
        $file =  "/generated/search/index";
        if (!file_exists($file)) {
            self::$_index = Zend_Search_Lucene::create($file);
        } else {
            self::$_index = Zend_Search_Lucene::open($file);
        }</p>

<p>And a later call to</p>

<p>self::$_index-&gt;addDocument($document);</p>

<h2>scenario 1 - no index exists</h2>

<p>If I delete the index directory, the 'Zend_Search_Lucene::create($file)' gets called and the document appears to get indexed except I get a
Fatal error: Exception thrown without a stack frame in Unknown on line 0</p>

<p>Reading documentation I added 
self::$_index-&gt;commit();
after the addDocument() but this doesn't make any difference (i.e. same error).</p>

<p>the index directory and its components (AFAIK) are created.</p>

<h2>scenario 2 - index directory exists (after previous call as per scenario 1)</h2>

<p>fails with 
Uncaught 0, code:
Message: fopen(/generated/search/index/write.lock.file) [<a href="function.fopen">function.fopen</a>]: failed to open stream: Permission denied</p>

<p>I checked file permissions and they are:</p>

<p>--w--wx-wT 1 nobody webdev  732 Jun  9 13:25 _0.cfs
--w--wx-wT 1 nobody webdev    0 Jun  9 13:25 optimization.lock.file
-rw-rw-rw- 1 nobody webdev    0 Jun  9 13:27 read.lock.file
-rw-rw-rw- 1 nobody webdev   20 Jun  9 13:25 segments_1
-rw-rw-rw- 1 nobody webdev   20 Jun  9 13:25 segments.gen
--w--wx-wT 1 nobody webdev    0 Jun  9 13:25 write.lock.file</p>

<p>My system details:
OS = Red Hat RHEL5 64bit
PHP Version     5.2.4
Server Software     Apache/2.2.4</p>

<p>I've searched across the issue tracker and the only thing that seems to crop up is that the system is 64bit and there have been some problems in that area. Is this one of them?  Are there other checks I can make to try and determine if this is a bug?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gerrit Kamp (gkamp) on 2009-06-29T15:22:50.000+0000</p> 
        <div class="body">
            <p>Hi, I have the same problem. Funny thing is that it works fine in one folder with one owner and it does not work in another folder with another owner so it cannot be the OS or the 64bit. Issue is serious for me because one site with paying customers now don't have search... ;-(. Please let me know how I can help to resolve this asap. Cheers, Gerrit</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gerrit Kamp (gkamp) on 2009-06-29T17:47:50.000+0000</p> 
        <div class="body">
            <p>I have some info that may help. As explained, I run the same reindex script from two different user accounts. First one:
/home/user1/public_html/var/search_index/
Start with emtpy var/search_index folder.
Run 'reindex' script.
Creates:
1 segments_xx file
set of .cfs files
optimization.lock.file (0 bytes)
read.lock.file (0 b)
write.lock.file (0 b)
segments.gen (20 b)
set of .sti files</p>

<p>Owner of all files is user_1, owner of the folders in which the script is run. File rights in var/search_index/ are all 0666. Folder rights are 0755.</p>

<p>Precisely script for user_2, same script, same data.
Start with empty var/search_index folder.
Run 'reindex' script.
Creates:
1 segments_1 file
read.lock.file (0b)
write.lock.file (0b)
segments.gen (20b)</p>

<p>Nothing more, no error stack, script hangs (white screen).</p>

<p>Owner of all files and folders is user_2</p>

<p>Now, I create the full index on a local machine and then copy it to the var/search_index folder for user_2, as user_2.
Then, of course, the search works. But still cannot reindex.
Chown 666 (was 664)
Run 'reindex' script.
An extra segments_xy file is added, size 20b, the older segments_xx file is not removed. Index is not updated.
Run 'reindex' script again: an extra segments_xz file is added, size 20b, the older segment_xx and xy files are not removed. Index not updated.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gerrit Kamp (gkamp) on 2009-07-05T11:35:16.000+0000</p> 
        <div class="body">
            <p>Hi guys,
You can ignore my comments, I have solved it for me. Turns out that one of the classes of the Zend Framework was not copied to my 2nd instance which caused the error. Had nothing to do with the permissions.</p>

        </div>
    </div>
    </div>

