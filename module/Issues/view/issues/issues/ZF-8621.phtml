<h2>ZF-8621: Zend_Db_Table_Row_Abstract functions for (improvement of) working with references</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-12-23T03:06:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michael Croes (mycroes)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12536/Abstract.php">Abstract.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>For use in our company product I've developed some additional features for Zend_Db_Table_Row_Abstract (or an extending class). Currently they live in an extended class in our code, but I think they might be useful for other people too.</p>

<p>Here's a short overview of the functions:
{{_getReference($ruleKey)}}:
Get reference (part from reference map) for $ruleKey.</p>

<p>{{_tableToReference(Zend_Db_Table_Abstract $table)}}:
Return the string reference to the table so it can be used in functions requiring the string reference.</p>

<p>{{isValidReference()}}:
Check if this row can be used as a valid reference (I.e. saved and PK not modified).</p>

<p>{{setReference(Zend_Db_Table_Row_Abstract $row, $ruleKey = null)}}:
Modify columns in this so they reference $row according to $ruleKey.</p>

<p>{{unsetReference($table, $ruleKey = null)}}:
Inverse behaviour of setReference.</p>

<p>{{createDependentRow($table, $ruleKey = null)}}:
Create a new row from the dependent table, set references to $this and return the row.</p>

<p>{{createDependentRowByRule($ruleKey)}}:
Same as above, except that it only needs a ruleKey.</p>

<p>{{findParentRowByRule($rule)}}:
Find parent row by rule instead of by table (rule is always unique).</p>

<p>Some of these functions could easily be used from within __call, making references between tables even easier than they were. Also, the functions that only use $ruleKey instead of a table class or definition identifier will make it easier for people to rename table classes as long as the rule keys stay the same, or move between table classes and table definitions.</p>

<p>I will attach my abstract class implementing these functions.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michael Croes (mycroes) on 2009-12-23T03:08:13.000+0000</p> 
        <div class="body">
            <p>Abstract row class implementing discussed functions.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:12.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

