<h2>ZF-4648: Invalid use of 'switch' command</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Coding Standards Violation</dd>

    <dt>Created:</dt>
    <dd>2008-10-20T08:37:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-10-20T10:03:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The switch command is used the following way in several places (e.g. Zend_Form-&gt;addSubForms(), and addDisplayGroups()</p>

<p>$argc = count($spec);
                switch ($argc) {
                    case 0: 
                        continue;
                    case (1 &lt;= $argc):
                        $subForm = array_shift($spec);
                    case (2 &lt;= $argc):
                        $name  = array_shift($spec);
                    case (3 &lt;= $argc):
                        $order = array_shift($spec);
                    default:
                        $this-&gt;addSubForm($subForm, $name, $order);
                }</p>

<p>which is a misunderstanding of the switch command. For $argc having value greater or equal than one, Cases will be evaluated first, so (1 &lt;= $argc)  evaluates to true; After that $argc will be converted to boolean for comparison (having true value since not equals 0 ). As result the first case will always match, shifting null values to some variables. Suggested solution:</p>

<p>$argc = count($spec);
if (0 &lt;= $argc) {
    if ( 1&lt;= $argc) {
        if (2 &lt;= $argc) {
            if  (3 &lt;= $argc) {
                $order = array_shift($spec);
           }
           $name  = array_shift($spec);
       }
       $subForm = array_shift($spec);
    }
    $this-&gt;addSubForm($subForm, $name, $order);
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-10-20T08:41:42.000+0000</p> 
        <div class="body">
            <p>Can you give an example when a null value is actually shifted to a variable? I'm not going to change working, tested code unless there's an actual reproducible issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Zsolt Gyöngyösi (gyongyeee) on 2008-10-20T09:34:37.000+0000</p> 
        <div class="body">
            <p>I see your point, it is not easy to find good examples (like  $form-&gt;addSubForms(array('name' =&gt; array($subform)));  which can be reformulated to $form-&gt;addSubForms(array('name' =&gt; $subForm)); or $form-&gt;addSubForms(array(array($subForm, 'name')));  )
So I change the issue type.</p>

<p>However this coding practice is wrong and should be avoided.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-10-20T10:03:01.000+0000</p> 
        <div class="body">
            <p>This is not a violation of our coding standards, and is, in fact, a perfectly valid way of using switch/case. I'm closing the issue.</p>

        </div>
    </div>
    </div>

