<h2>ZF-5074: notifyPreDispatch on a non-object</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-26T06:11:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-26T07:52:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,</p>

<p>I'm using Zend_Controller in a specific way : executing one action specific (I'm using it as a CLI) and an error is raised : 
Fatal error: Call to a member function notifyPreDispatch() on a non-object in /usr/share/pear/Zend/Controller/Action.php on line 490</p>

<p>Here is atomic PHP code used (I removed everything unnecessary) :</p>

<pre class="highlight"><code> 
&lt;?php

define('CWD', realpath(dirname(__FILE__).'/../').'/');
set_include_path (CWD.'library' . PATH_SEPARATOR . get_include_path());

require_once "Zend/Loader.php";
Zend_Loader::registerAutoload();

$front = Zend_Controller_Front::getInstance();
$req = new Zend_Controller_Request_Simple(null,'Convert'); //Calling application/ConvertController.php
$front-&gt;setRequest($req);
$front-&gt;setRouter(new Crons_Controller_Router_Cli());
$front-&gt;setControllerDirectory(CWD.'application');
$front-&gt;dispatch();

class Crons_Controller_Router_Cli extends Zend_Controller_Router_Abstract implements Zend_Controller_Router_Interface {
    public function assemble($userParams, $name = null, $reset = false, $encode = true) {    }
    public function route(Zend_Controller_Request_Abstract $dispatcher) { }
}

</code></pre>

<p>In line 490, Zend_Controller_Action is calling  $this-&gt;_helper-&gt;notifyPreDispatch(); As there is no helper, fatal error occured.
Same thing with $this-&gt;getRequest()-&gt;isDispatched(), because getRequest is not an object too.</p>

<p>So : 
- Fatal error is bad, we should have an exception that something is missing (if it is the case)
- Second, if I made something wrong in my example, what is it ? I have no need of helpers, and I don't know why $this-&gt;getRequest() does not return an object.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-26T07:52:28.000+0000</p> 
        <div class="body">
            <p>$_helper is initialized in the action controller's constructor, and should be an instance of Zend_Controller_Action_HelperBroker. The only reason it would not exist is if you have created a base action controller class, overridden the constructor, and not called parent::__construct(). I'm guessing this is the case, as that is where the request object is injected into the action controller as well, which would explain why $this-&gt;getRequest() does not work.</p>

<p>When extending Zend_Controller_Action, use the init() method to perform custom object initialization to ensure that all necessary objects are registered correctly.</p>

        </div>
    </div>
    </div>

