<h2>ZF-8372: Zend_File_Transfer_Adapter_Abstract::getMimeType throws exception File '' does not exist</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-11-23T07:37:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-24T12:52:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have a multi file form element with 3 optional file upload elements, when only 1 or 2 of them are filled by the user, the method Zend_File_Transfer_Adapter_Abstract::getMimeType() will throw a "File '' does not exist" exception on the not filled file elements. The correct behavior should be (as with getFileName and getValue (on the form element) to return an array with just 1 or 2 elements.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Erwin Derksen (erwind) on 2009-11-23T07:46:43.000+0000</p> 
        <div class="body">
            <p>The solution should be to wrap all code within the foreach statement into an if statement:</p>

<pre class="highlight"><code>
foreach($files as $key =&gt; $value) {
    if (!empty($value['name'])) {
        ...
        original code
        ...
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-11-23T07:58:36.000+0000</p> 
        <div class="body">
            <p>When you are calling getMimeType() for 3 elements, then all elements will be checked. When there is no file available but you still requested it, it's definetly an error. The exception is in this case the correct behaviour.</p>

<p>Note that an upload could also have no 'name' assigned. There would be no way to differ between an upload without the 'name' attribute or an empty form field.</p>

<p>Note that Zend_File has no connection to Zend_Form. There is no way to recognise if this element is optional or not.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Erwin Derksen (erwind) on 2009-11-23T08:54:03.000+0000</p> 
        <div class="body">
            <p>Situation;
I have a multi file form element.</p>

<pre class="highlight"><code>
$this-&gt;addElement('file', 'attachments', array(
    'label'      =&gt; 'Attachment(s) (max. 400KB each)',
    'required'   =&gt; false,
    'validators' =&gt; array(
        array('count', false, array('max' =&gt; 3)),
        array('size', false, 400*1024)),
    'maxFileSize' =&gt; 400*1024,
    'multiFile' =&gt; 3,
    'destination' =&gt; WEBSITE_PATH . 'upload',
));
</code></pre>

<p>The user fills in 2 out of 3 available file uploads. During processing the form, I call the methods form the file transfer object via the file form element methods:</p>

<pre class="highlight"><code>
$element = $this-&gt;getElement('attachments');
$pathNames = $element-&gt;getFileName();
$fileNames = $element-&gt;getValue();
$mimeTypes = $element-&gt;getMimeType();
</code></pre>

<p>getFileName() and getValue() return an array with 2 values, but getMimeType() throws an error. This definitely is an error, either in Zend_Form or in Zend_File_Transfer. If Zend_File_Transfer_Adapter_Abstract handles empty names correctly (Zend_File_Transfer_Adapter_Abstract::getFileName() returns just an array of 2 elements) then Zend_File_Transfer_Adapter_Abstract::getMimeType should do the same. So I opt for an error in Zend_File_Transfer_Adapter_Abstract.</p>

<p>Yet another solution would then be to take 'type', 'size' and/or 'tmp_name' into account as well, something like:</p>

<pre class="highlight"><code>
foreach($files as $key =&gt; $value) {
    if (!empty($value['type']) {
       $result[$key] = $value['type'];
    }
    else if (!empty($value['name']) || !empty($value['tmp_name']) || $value['size'] &gt; 0)) {
        ...
        original code
        ...
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Erwin Derksen (erwind) on 2009-11-23T09:08:17.000+0000</p> 
        <div class="body">
            <p>Having had yet another look at the code, I think that taking the 'ignoreNoFile' option into account might even be better to decide whether to ignore this entry or not.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-11-24T12:52:46.000+0000</p> 
        <div class="body">
            <p>New feature implemented with r19216</p>

        </div>
    </div>
    </div>

