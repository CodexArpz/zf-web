<h2>ZF-3021: PHP 5.1.6 and string conversion issue</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-04-02T08:48:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-19T13:07:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.3 (28/Jul/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Robert Castley (rcastley)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
            <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am testing my application on both PHP 5.1.6 and PHP 5.2.5, the docs state a min requirement of PHP 5.1.4.</p>

<p>Example Zend_Locale code:</p>

<pre class="highlight"><code>
        $locale = new Zend_Locale();
        .....
        setcookie('lang', $locale, null, '/');
        Zend_Registry::set('locale', substr($locale, 0, 2));
        .....
</code></pre>

<p>Under PHP 5.1.6 the result is:</p>

<pre class="highlight"><code>
Warning: setcookie() expects parameter 2 to be string, object given in /var/www/Magik/library/Magik/Plugin/Language.php on line 29

Notice: Object of class Zend_Locale to string conversion in /var/www/Magik/library/Magik/Plugin/Language.php on line 31
</code></pre>

<p>PHP 5.2.5 works without issue</p>

<p>I can fix my local code by using the (string) cast but I am expecting ZF to handle this for me</p>

<p>Example Zend_Db_Table_Select code:</p>

<pre class="highlight"><code>
        $sql = $this-&gt;select()
        -&gt;from($this-&gt;_name,array('uid', 'public', 'auth', 'name'))
        -&gt;where('uid = ?', $uid)
        -&gt;orWhere('public = 1')
        -&gt;order('name');

        return $this-&gt;getAdapter()-&gt;fetchAll($sql);
</code></pre>

<p>Under PHP 5.1.6 the result is:</p>

<pre class="highlight"><code>
Notice: Object of class Zend_Db_Table_Select to string conversion in /var/www/ZendFramework/library/Zend/Db/Statement/Pdo.php on line 232
</code></pre>

<p>Under PHP 5.2.5 there are no issues.</p>

<p>I can fix this in my code by change the variable $sql to read:</p>

<pre class="highlight"><code>
        $sql = $this-&gt;getAdapter()-&gt;select()
        -&gt;from($this-&gt;_name,array('uid', 'public', 'auth', 'name'))
        -&gt;where('uid = ?', $uid)
        -&gt;orWhere('public = 1')
        -&gt;order('name')
        -&gt;__toString();
</code></pre>

<p>Again, I am expecting ZF to handle this for me.</p>

<p>Am I wrong, or do I have to code for PHP versions 5.1.4 or should the framework handle all this for me?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-02T12:53:31.000+0000</p> 
        <div class="body">
            <p>If you think that this warning/notice is an error I am sure that you also have a resolution for this problem. :-)</p>

<p>Zend_Locale provides an __toString() method which should be called by PHP when an object is forced to an value.
PHP does this but throws an warning at conversion time.</p>

<p>I don't see an ZF problem. Also PHP states that a __toString() method is all what is needed.</p>

<p>And also to mention:
There is no failure or exception. There is only a Warning/Notice.</p>

<p>You can simply revert your problem when you typecast the object to an string.
As you forget to do this, PHP returns you a warning.</p>

<p>I can't say for the Db classes but in my opinion the reason is the same.</p>

<p>Greetings
Thomas, I18N Team Leader</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Castley (rcastley) on 2008-04-02T14:14:42.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>I think you missed my point, when developing an application using ZF then I should be able to code for all version of PHP 5.1.4 or above (this is in the min. version).  I mostly develop on 5.2.5 but always test on a 5.1.6 version (Ubuntu 6).</p>

<p>The problem with my code in the above is that instead of getting a value back of e.g. en or fr I get Ob (because I strip back to 2 chars).  So my javascript language string looks like lang.Ob.js instead of lang.en.js.  Obviously this leads to a failure in my application as no such file exists!</p>

<p>When developing and running on 5.2.5 I don't need to cast, but if I run on 5.1.6 then I need to modify my code with the cast.</p>

<p>My question is should I always cast and not rely upon ZF?  In an ideal world I think that ZF should handle this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-04-02T14:42:56.000+0000</p> 
        <div class="body">
            <p>My opinon is still that this is no problem of ZF.</p>

<p>The behaviour of cast has been changed by PHP in newer versions. And your code is problematic.</p>

<p>You are trying to do a automated object to string conversion within a function which generates a warning with PHP versions lower than 5.2.
And you do not want to change your code so it works for all versions of PHP.</p>

<p>Also you are setting a value by giving a function which should autoconvert a object. Same problem as above.
Also to mention that your code is wrong and will not work for 1/3 of all locales.
When you do not want to use the proper methods (-&gt;getLanguage) and you say ZF makes problems because PHP gives you a warning when autoconverting object to string I still say it's not a ZF problem because PHP does not call __toString without throwing a warning.</p>

<p>I must also mention that your warning is thrown at line 29 which is the setcookie line and the notice on line 31 which is not available as you only gave us the lines 29 and 30.</p>

<p>You should eighter fix your code, or use the right methods or ignore the warning.
You are free to reopen this issue as needed or start a discussion in the mailing list.</p>

<p>Greetings Thomas</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robert Castley (rcastley) on 2008-04-02T15:28:26.000+0000</p> 
        <div class="body">
            <p>Hi (again!)</p>

<p>I admit I am not the greatest PHP coder in the world and I really appreciate you even taking the time to respond, but the logic doesn't seem to sink in for me.</p>

<p>I have created a working example of code:</p>

<pre class="highlight"><code>
&lt;?php
error_reporting(E_ALL|E_STRICT);

/**
 *  Define directory/path separators
 */
define ('DS', DIRECTORY_SEPARATOR);
define ('PS', PATH_SEPARATOR);
define ('ROOT', dirname(__FILE__));

/**
 * Set the PHP include path
 */
ini_set('include_path', ini_get('include_path')
. PS . 'ZendFramework' . DS . 'library'
);

/**
 * Autoload required Zend Framework classes
 */
require_once 'Zend/Loader.php';
Zend_Loader::registerAutoload();


$locale = new Zend_Locale();
print_r ($locale);
echo "\nsetting: setcooke(lang, $locale, null, /)\n";
setcookie('lang', $locale, null, '/');

?&gt;
</code></pre>

<p>When the above is run under PHP 5.1.6 I get:</p>

<pre class="highlight"><code>
Zend_Locale Object ( [_Locale:private] =&gt; en [_Codeset:private] =&gt; ) Setting: setcooke(lang, Object id #1, null, /)
Warning: setcookie() expects parameter 2 to be string, object given in /var/www/example.php on line 28
</code></pre>

<p>When I run the exact same code under PHP 5.2.5 I get:</p>

<pre class="highlight"><code>
Zend_Locale Object ( [_Locale:private] =&gt; en [_Codeset:private] =&gt; ) setting: setcooke(lang, en, null, /)
</code></pre>

<p>So, in order to get x-version compatibility do I need to use:</p>

<pre class="highlight"><code>
$locale-&gt;toString()
</code></pre>

<p>Many thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joe Chen (guishoudaoge) on 2010-01-19T03:42:04.000+0000</p> 
        <div class="body">
            <p><a href="http://us3.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring">http://us3.php.net/manual/en/â€¦</a></p>

<p>before PHP 5.2.0 the __toString method was only called when it was directly combined with echo() or print().</p>

<p>It is PHP 5.1.6 problem,  not support &lt;? $example = "-" . $object . "-"; ?&gt;, and other ways.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-19T13:07:02.000+0000</p> 
        <div class="body">
            <p>As said 2 years ago...
When you use a object as parameter and a PHP version which does not use __toString() there is NO WAY for ZF to correct this behaviour.</p>

<p>This is a PHP version dependend PHP behaviour. And when the user says that he is not able to use $object-&gt;toString() when he already knows that this is a PHP problem, there is nothing more to say than closing the issue as non-issue.</p>

        </div>
    </div>
    </div>

