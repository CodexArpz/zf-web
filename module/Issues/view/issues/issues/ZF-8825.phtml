<h2>ZF-8825: Zend_Auth_Adapter_Http::authenticate() looks for 'Authorization' header when 'authorization' is also valid</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-14T14:42:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-01-10T20:19:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bradley Holt (bradley.holt)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A customer of ours was trying to authenticate to our app using basic authentication and python httplib2.  It turns out that httplib2 lowercases headers before sending (which appears to be valid).  From the HTTP/1.1 spec:
{quote}
4.2 Message Headers</p>

<p>HTTP header fields, which include general-header (section 4.5),
   request-header (section 5.3), response-header (section 6.2), and
   entity-header (section 7.1) fields, follow the same generic format as
   that given in Section 3.1 of RFC 822 [9]. Each header field consists
   of a name followed by a colon (":") and the field value. Field names
   are case-insensitive.
...
{quote}
This would affect both basic and digest auth.</p>

<p>In looking at Zend_Controller_Request_Http::getHeader() one can see that the first attempt to find the header is a look at the $<em>SERVER superglobal which has all uppercase keys for HTTP</em>* headers.  Since the 'authorization' header is not in the $_SERVER array, the apache_request_headers() response is then searched.</p>

<p>My first thought would be to alter the fallback in Zend_Controller_Request_Http::getHeader() to strtoupper() the apache_request_headers() resulting array keys.  This would match the _SERVER style.</p>

<p>Here's a diff:</p>

<p>&lt;             if (!empty($headers[$header])) {</p>

<h2>&lt;                 return $headers[$header];</h2>

<blockquote>
<pre><code>    $headers = array_change_key_case($headers, CASE_UPPER);
        if (!empty($headers[strtoupper($header)])) {
            return $headers[strtoupper($header)];
</code></pre>
</blockquote>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Natalia Bartol (natalia.b) on 2012-11-14T18:25:04.000+0000</p> 
        <div class="body">
            <p>I also bumped into this issue when using CordovaJS library, see: <a href="https://issues.apache.org/jira/browse/CB-1455">https://issues.apache.org/jira/browse/CB-1455</a></p>

<p>In Zend\Http\PhpEnvironment\Request::setServer you check for 'Authorization' with capital 'A' only:</p>

<p>// This seems to be the only way to get the Authorization header on Apache
        if (function_exists('apache_request_headers')) {
            $apacheRequestHeaders = apache_request_headers();
            if (!isset($this-&gt;serverParams['HTTP_AUTHORIZATION'])
                &amp;&amp; isset($apacheRequestHeaders['Authorization'])
            ) {
                $this-&gt;serverParams-&gt;set('HTTP_AUTHORIZATION', $apacheRequestHeaders['Authorization']);
            }
        }</p>

<p>Looks like a quick fix :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2013-01-10T20:18:43.000+0000</p> 
        <div class="body">
            <p>From what I can see, this is fixed on current trunk, and was fixed with r22212 (by Bradley Holt, on 20 May 2010, and available since 1.10.5), which implemented case-insensitive lookups for headers.</p>

        </div>
    </div>
    </div>

