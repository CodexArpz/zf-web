<h2>ZF-778: _redirect() needs to use absolute URIs?</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-01-21T02:09:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alex Adriaanse (alexadriaanse)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>According to section 14.30 in RFC 2616 when specifying the "Location" response header it should contain an absolute URI.  When _redirect() in Zend_Controller_Action prepends the base URI to the redirect URI it only adds the absolute path, not the schema/hostname/etc.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-25T09:05:18.000+0000</p> 
        <div class="body">
            <p>Assign to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-29T11:00:06.000+0000</p> 
        <div class="body">
            <p>While I appreciate the 'why' behind this request, I'm wondering about the necessity. Server's send back a Host header as part of the response, which is why most clients can redirect using relative URLs. Additionally, I'm not entirely certain that we can rely on $_SERVER['HTTP_HOST']/$_SERVER['SERVER_NAME'] and $_SERVER['HTTPS'] to assemble the FQDN -- these may be tampered with, or left unpopulated by a given SAPI implementation.</p>

<p>If you can provide details on instances when a relative URL redirect does not work, I'll definitely reconsider.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2007-01-29T11:37:16.000+0000</p> 
        <div class="body">
            <p>I don't remember any practical problems caused by this, so if you decide not to worry about this then that's fine with me.  I am just reporting this from a correctness standpoint.  If I do come across actual problems I will post more information here.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-29T14:38:18.000+0000</p> 
        <div class="body">
            <p>Great. I'm going to resolve the issue as 'not an issue', but I won't close it yet. I had some discussion with a few of my colleagues, and there are some definite issues with implementing this cleanly cross-platform, so unless we see a clear use case, we'd rather not delve into those issues quite yet.</p>

<p>Thanks for the report!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marek Augustyn (maug) on 2007-04-13T15:06:15.000+0000</p> 
        <div class="body">
            <p>I have problems using _redirect() on server provided by home.pl (hosting company in Poland). They use their custom http server and emulate mod_rewrite for it. Things works perfectly until I use mod_rewrite to redirect all requests to bootstrap file, and then try to redirect to different path using _redirect() - default behavior with ZendFramework.
When server receives relative redirect request from php, it resolves its target (being still the same bootstrap index.php file because of rewriting) and send internally request to this file again without changing the path in the uri - the server doesn't send header "Location" to the browser.
The unwanted result of this action is unchanged path in URI, ie. when I redirect from /test/of/redirect/ to /test using header "Location: /test/", after redirection the script still gets the old path "/test/of/redirect/".
When I use redirection using absolute URI, redirection works right.</p>

<p>To make things work i did a dirty hack in metod _redirect() of Zend_Controller_Action (0.9.1):</p>

<pre class="highlight"><code>
        // If relative URL, decide if we should prepend base URL
        if ($prependBase &amp;&amp; !preg_match('|^[a-z]+://|', $url)) {
            $request = $this-&gt;getRequest();
            if ($request instanceof Zend_Controller_Request_Http) {
                $base = $request-&gt;getBaseUrl();
                if (('/' != substr($base, -1)) &amp;&amp; ('/' != substr($url, 0, 1))) {
                    $url = $base . '/' . $url;
                } else {
                    $url = $base . $url;
                }
                # THE HACK:
                $url = '<a href="">http://'.$this</a>-&gt;getRequest()-&gt;getServer('HTTP_HOST').$url;
            }
        }
</code></pre>

<p>I asked my hosting company about that and I received an answer:
{quote}
Please consider that server behaviour is correct, that is, location is passed in the right way.
If you want to change location (URI), please use absolute redirections (301, 302)
{quote}</p>

<p>Considering RFC 2616 mentioned above, they are perfectly right.</p>

<p>Is there a better way than the dirty hack to make absolute redirections using _redirect()?</p>

<p>Will this issue be considered in future versions od ZendFramework?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bart Blaszczyk (bartblaszczyk) on 2007-06-07T16:28:15.000+0000</p> 
        <div class="body">
            <p>This issue hasn't been resolved yet... It makes the Redirector helper useless without some hacks for servers with such redirection implementation as in home.pl. Why don't you modify the Redirector so that it always uses absolute redirects finding the protocol and server name dynamically and prepending them to the destination URL?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-19T08:37:46.000+0000</p> 
        <div class="body">
            <p>Re-opening per user requests</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-19T08:40:13.000+0000</p> 
        <div class="body">
            <p>I've added an option to the Redirector, _useAbsoluteUri, that will attempt to create an absolute URI from the URI path created via the various redirect methods in the Redirector. Turn it on with:</p>

<pre class="highlight"><code>
$this-&gt;_helper-&gt;redirector-&gt;setUseAbsoluteUri(true);
</code></pre>

<p>It uses $_SERVER['HTTP_HOST'], $_SERVER['SERVER_PORT'], and $_SERVER['HTTPS'] to create the absolute URI.</p>

<p>I'm not turning it on by default as HTTP_HOST is not always set, and could cause odd behaviour for some installations.</p>

<p>Please test, and let me know if it resolves the issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-22T10:28:32.000+0000</p> 
        <div class="body">
            <p>No feedback from users; marking as fixed.</p>

        </div>
    </div>
    </div>

