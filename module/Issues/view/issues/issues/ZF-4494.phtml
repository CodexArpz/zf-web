<h2>ZF-4494: propose AutoCompleteDojoExt  id=table id for example and label=name</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-10-05T13:44:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>if you have data from a DB table groepen</p>

<p>groepen [id,name]</p>

<p>name is what you want to show the user, id is what you need</p>

<p>I have a table offices
offices [id, name, groepen_id]</p>

<p>groepen_id is a FK tot groepen</p>

<p>with my function you can place a filterselect for offices that shows all the groepen by name.
when I save to the offices table I just use the id instead of the group name.</p>

<pre><code>    &lt;select dojoType="dijit.form.FilteringSelect"
    name="state3"
    autocomplete="false"
    value="CA"&gt;
            &lt;option value="1" selected="selected"&gt;California&lt;/option&gt;
            &lt;option value="2" &gt;Illinois&lt;/option&gt;
            &lt;option value="3" &gt;New York&lt;/option&gt;
            &lt;option value="4" &gt;Texas&lt;/option&gt;
    &lt;/select&gt;
</code></pre>

<p>id is the value in this case, name is the text the user sees.
When the user clicks submit we can get the value (id) of the record the user selected.</p>

<p>solutions:</p>

<p>Groepen is a Zend_Db_Table and has id and name column</p>

<p>$groepen = new Groepen();
$this-&gt;_helper-&gt;autoCompleteDojoExt($groepen-&gt;fetchAll()-&gt;toArray());</p>

<p>&lt;?php
/**
 * Zend Framework
 *
 * LICENSE
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@zend.com so we can send you a copy immediately.
 *
 * @category   Zend
 * @package    Zend_Controller
 * @subpackage Zend_Controller_Action_Helper
 * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (<a href="http://www.zend.com">http://www.zend.com</a>)
 * @license    <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>     New BSD License
 * @version    $Id: AutoCompleteDojo.php 9098 2008-03-30 19:29:10Z thomas $
 */</p>

<p>/**
 * @see Zend_Controller_Action_Helper_AutoComplete_Abstract
 */
require_once 'Zend/Controller/Action/Helper/AutoComplete/Abstract.php';</p>

<p>/**
 * Create and send Dojo-compatible autocompletion lists
 *
 * @uses       Zend_Controller_Action_Helper_AutoComplete_Abstract
 * @category   Zend
 * @package    Zend_Controller
 * @subpackage Zend_Controller_Action_Helper
 * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (<a href="http://www.zend.com">http://www.zend.com</a>)
 * @license    <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>     New BSD License
 */
class Zend_Controller_Action_Helper_AutoCompleteDojoExt extends Zend_Controller_Action_Helper_AutoComplete_Abstract
{
    /**
     * Validate data for autocompletion
     * 
     * @param  mixed $data 
     * @return boolean
     */
    public function validateData($data)
    {
        if (is_array($data) &amp;&amp; isset($data['items']) &amp;&amp; is_array($data['items'])) {
            return true;
        }</p>

<pre><code>    return false;
}

/**
 * Prepare data for autocompletion
 * 
 * @param  mixed   $data 
 * @param  boolean $keepLayouts 
 * @return string
 */
public function prepareAutoCompletion($data, $keepLayouts = false)
{
    $items = array();
    foreach ($data as $value) {
        $items[] = array('label' =&gt; array_pop($value), 'name' =&gt; array_pop($value));
    }
    $final = array(
        'identifier' =&gt; 'name',
        'items'      =&gt; $items,
    );
    return $this-&gt;encodeJson($final, $keepLayouts);
}
</code></pre>

<p>}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-10-07T07:47:00.000+0000</p> 
        <div class="body">
            <p>How is this different than the current Dojo AutoComplete action helper? Can you summarize? I'd rather modify that to be more general than to add additional helpers that muddy the waters with more variants.</p>

<p>For the record, we plan to update the Dojo autocomplete action helper to utilize Zend_Dojo_Data, which will also give more flexibility. I'm also thinking that a flag and/or setters for specifying either FilteringSelect or ComboBox would help make it more useful.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Vansant (lupus) on 2008-10-07T08:15:34.000+0000</p> 
        <div class="body">
            <p>controller:</p>

<p>Schoolgemeenschappen table [id, name]</p>

<pre><code>public function schoolgemeenschapAction() {

    $schoolgemeenschappen = new Schoolgemeenschappen();

    $this-&gt;_helper-&gt;autoCompleteDojoExt($schoolgemeenschappen-&gt;fetchAll()-&gt;toArray());

}
</code></pre>

<p>in form:</p>

<pre><code>    $this-&gt;addElement(
    'FilteringSelect',
    'scholengemeenschap_id',
    array(
        'label'=&gt; 'Scholengemeenschap',
        'storeId'=&gt; 'stateStore1',
        'storeType'=&gt;'dojo.data.ItemFileReadStore',
        'storeParams'=&gt; array('url' =&gt; '/studiegids/school/schoolgemeenschap'),
        'dijitParams' =&gt; array('searchAttr' =&gt; 'label',
        'required' =&gt; 'true', ),)
    );
</code></pre>

<p>in add and change record</p>

<p>$row-&gt;scholengemeenschap_id = $form-&gt;getValue('scholengemeenschap_id');</p>

<p>do you understand now?</p>

<p>with my new function you get:</p>

<p>{"identifier":"name","items":[{"label":"CLB-Kempen","name":"1"},{"label":"CLB-1 AMI","name":"2"}]}</p>

<p>with the current you get</p>

<p>{"identifier":"name","items":[{"label":"CLB-Kempen","name":"CLB-Kempen"},{"label":"CLB-1 AMI","name":"CLB-1 AMI"}]}</p>

<p>because of this code:</p>

<pre><code>    foreach ($data as $key =&gt; $value) {
        $items[] = array('label' =&gt; $value, 'name' =&gt; $value);
    }
    $final = array(
        'identifier' =&gt; 'name',
        'items'      =&gt; $items,
    );
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Vansant (lupus) on 2008-10-07T09:00:54.000+0000</p> 
        <div class="body">
            <p>this function keeps the old one working
if one array is given id and name are the same (the old functionality)
when you use a multidimensional array it will use my code.</p>

&lt;?php
/**
 * Zend Framework
 *
 * LICENSE
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@zend.com so we can send you a copy immediately.
 *
 * @category   Zend
 * @package    Zend_Controller
 * @subpackage Zend_Controller_Action_Helper
 * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (<a href="http://www.zend.com">http://www.zend.com</a>)
 * @license    <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>     New BSD License
 * @version    $Id: AutoCompleteDojo.php 9098 2008-03-30 19:29:10Z thomas $
 */

/**
 * @see Zend_Controller_Action_Helper_AutoComplete_Abstract
 */
require_once 'Zend/Controller/Action/Helper/AutoComplete/Abstract.php';

/**
 * Create and send Dojo-compatible autocompletion lists
 *
 * @uses       Zend_Controller_Action_Helper_AutoComplete_Abstract
 * @category   Zend
 * @package    Zend_Controller
 * @subpackage Zend_Controller_Action_Helper
 * @copyright  Copyright (c) 2005-2008 Zend Technologies USA Inc. (<a href="http://www.zend.com">http://www.zend.com</a>)
 * @license    <a href="http://framework.zend.com/license/new-bsd">http://framework.zend.com/license/new-bsd</a>     New BSD License
 */
class Zend_Controller_Action_Helper_AutoCompleteDojo extends Zend_Controller_Action_Helper_AutoComplete_Abstract
{
    /**
     * Validate data for autocompletion
     * 
     * @param  mixed $data 
     * @return boolean
     */
    public function validateData($data)
    {
        if (is_array($data) &amp;&amp; isset($data['items']) &amp;&amp; is_array($data['items'])) {
            return true;
        }

        return false;
    }

    /**
     * Prepare data for autocompletion
     * 
     * @param  mixed   $data 
     * @param  boolean $keepLayouts 
     * @return string
     */
    public function prepareAutoCompletion($data, $keepLayouts = false)
    {
        
        $items = array();
        if(count($data)===count($data, COUNT_RECURSIVE)){
        
            foreach ($data as $key =&gt; $value) {
                $items[] = array('label' =&gt; $value, 'name' =&gt; $value);
            }
        
        }else{

            foreach ($data as $value) {
                $items[] = array('label' =&gt; array_pop($value), 'name' =&gt; array_pop($value));
            }   
            
        }
        
        $final = array(
            'identifier' =&gt; 'name',
            'items'      =&gt; $items,
        );
        
        return $this-&gt;encodeJson($final, $keepLayouts);
    }
    
}
?&gt;

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Vansant (lupus) on 2008-10-07T09:19:29.000+0000</p> 
        <div class="body">
            <p>old json output:</p>

<p>{"identifier":"name","items":[{"label":{"id":"1","vestigingnaam":"Geel"},"name":{"id":"1","vestigingnaam":"Geel"}},{"label":{"id":"2","vestigingnaam":"Mol"},"name":{"id":"2","vestigingnaam":"Mol"}},{"label":{"id":"3","vestigingnaam":"Westerlo"},"name":{"id":"3","vestigingnaam":"Westerlo"}},{"label":{"id":"4","vestigingnaam":"Vorselaar"},"name":{"id":"4","vestigingnaam":"Vorselaar"}},{"label":{"id":"5","vestigingnaam":"Turnhout"},"name":{"id":"5","vestigingnaam":"Turnhout"}},{"label":{"id":"6","vestigingnaam":"Zoersel"},"name":{"id":"6","vestigingnaam":"Zoersel"}},{"label":{"id":"7","vestigingnaam":"Hoogstraten"},"name":{"id":"7","vestigingnaam":"Hoogstraten"}},{"label":{"id":"8","vestigingnaam":"Herentals"},"name":{"id":"8","vestigingnaam":"Herentals"}}]}</p>

<p>mine json output:</p>

<p>{"identifier":"name","items":[{"label":"Geel","name":"1"},{"label":"Mol","name":"2"},{"label":"Westerlo","name":"3"},{"label":"Vorselaar","name":"4"},{"label":"Turnhout","name":"5"},{"label":"Zoersel","name":"6"},{"label":"Hoogstraten","name":"7"},{"label":"Herentals","name":"8"}]}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Vansant (lupus) on 2008-10-24T00:33:11.000+0000</p> 
        <div class="body">
            <p>There is an issue with my multi column detection
when only one row is given the detection uses the old dojo generation code even if it should use mine.</p>

<p>So don't use the code which I proposed.</p>

<p>Matthew if you need a tester for your code, let me know I'm happy to beta test it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Regis Leroy (regilero) on 2008-10-25T14:49:59.000+0000</p> 
        <div class="body">
            <p>Personnally I just changed 2 few things to get this autocompleteDojo working:</p>

<p>{quote}
    public function prepareAutoCompletion($data, $keepLayouts = false)
    {<br />
        $items = array();
        foreach ($data as $key =&gt; $value) {
            $items[] = array('label' =&gt; $value, 'name' =&gt; $value{color:red}, 'key' =&gt; $key{color});
        }
        $final = array( 
            'identifier' =&gt; {color:red}'key',{color}
            'items'      =&gt; $items,
        );
        return $this-&gt;encodeJson($final, $keepLayouts);
    }
{quote}
--&gt; added key in the line and changed the 'identifier from 'name' to 'key'</p>

<p>Then with this HTML code I get my autocomplete working, showing names and using Id on my form destination:
{quote}</p>


 <div></div>
Recherchez un nom:
<span class="formelement">
</span>
<span class="actionbuttons"></span>


<p>{quote}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Regis Leroy (regilero) on 2008-10-25T14:51:38.000+0000</p> 
        <div class="body">
            <p>one more point, for your sub-array detection why don't you use is_array($value) ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Vansant (lupus) on 2008-10-25T19:12:25.000+0000</p> 
        <div class="body">
            <p>your probably right :)</p>

<p>how would you do following code?</p>

<p>'onChange'=&gt; "stateStore2 = new dojo.data.ItemFileReadStore({url: '/studiegids/overzichtschool/studierichting/onderwijsvormid/'+ dijit.byId('onderwijsvorm_id').getValue() }); dijit.byId('studierichting_id').store = stateStore2; dijit.byId('studierichting_id').setDisplayedValue('');",
b
adding this will requery statestore2. Because it passes an id, the query will give other results. Because of this the dojo datastore gets other values.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Regis Leroy (regilero) on 2008-10-27T00:36:29.000+0000</p> 
        <div class="body">
            <p>I'm not sure of what you're asking for. But I think that if you want to re-query your store you should use soething based on QueryReadStore instead. I wrote an example here:
<a href="http://www.makina-corpus.org/2008/10/26/autocomplete-ajax-search-with-dojo-and-zend-framework/">http://makina-corpus.org/2008/10/…</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christopher Weldon (neraath) on 2009-03-14T16:39:11.000+0000</p> 
        <div class="body">
            <p>What's the status of this? This gets to be particularly problematic for things such as trying to do State Code =&gt; State name mapping with either a ComboBox or FilteringSelect and the only thing being outputted to the screen is just the State name...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-03-15T04:32:25.000+0000</p> 
        <div class="body">
            <p>The Dojo autocomplete action helper was converted to Zend_Dojo_Data in 1.7.0, released in November 2008. It can either create a Zend_Dojo_Data object, or consume one. If you need to specify different keys for the identifier and/or label, pass your data to a new instance of Zend_Dojo_Data, and then pass that to the helper:</p>

<pre class="highlight"><code>
// Use "id" as the identifier, "name" as the label:
$data = new Zend_Dojo_Data('id', $items, "name");
$this-&gt;_helper-&gt;autoCompleteDojo($data);
</code></pre>

<p>If I do not hear any feedback one way or the other on whether or not the above solution addresses this issue (at this point, I'm not even entirely certain what issue is actually being reported), I will close the bug.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:28.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

