<h2>ZF-3861: set default encoding for Zend_Pdf_Page::drawText</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-05T18:37:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Michal Vrchota (techi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>typing same encoding in every method-call is annoying. There should be setDefaultEncoding method for Zend_Pdf_Page and Zend_Pdf
If i set default encoding for Zend_Pdf -&gt; all new pages should also have this encoding by default</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2008-08-06T05:15:05.000+0000</p> 
        <div class="body">
            <p>The default encoding is defined by current locale.</p>

<p>Do you see it's useful to have an option to set it to something different?</p>

<p>Yeah.
That may be good to have something like setDefaultEncoding($encodeng) where null means 'encoding defined by current locale' and any other value is converted to string and used as encoding.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Vrchota (techi) on 2008-08-06T06:53:46.000+0000</p> 
        <div class="body">
            <p>I disagree.</p>

<p>Encoding and locale are 2 separated things. Locale i.e. is czech, russian or german. But encoding is i.e. UTF-8. If you look at declaration of drawString() - you will see it calls Zend_Pdf_Resource_Font::encodeString() which is wrapper for iconv()
That means encoding is the first param for iconv() function. So there is no way to convert locale to encoding</p>

<p>Anyway alternatively you can use native iconv_set_encoding() to set default encoding. Unluckily there is no reference in documentation about such behaviour.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2008-08-06T11:27:08.000+0000</p> 
        <div class="body">
            <p>Current locale may contain encoding information, ex:</p>

<pre class="highlight"><code>
setlocale(LC_ALL, 'cs_CZ.ISO-8859-2');
setlocale(LC_ALL, 'cs_CZ.UTF-8');
setlocale(LC_ALL, 'de_DE.ISO-8859-1);
</code></pre>

<p>iconv() uses it if empty string is provided as 'to' or 'from' encoding.</p>

<p>On the other hand I definitely agree, it should be described in the documentation more clear, probably in addition to the adding setDefaultEncoding() method.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michal Vrchota (techi) on 2008-08-06T11:33:43.000+0000</p> 
        <div class="body">
            <p>OK i see. I thought u mean Zend_Locale. I agree the documentation should be more clear. That is the main reason for creating this issue</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:49.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

