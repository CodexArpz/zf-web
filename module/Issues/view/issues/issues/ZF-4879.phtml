<h2>ZF-4879: Multiple equal option values to Zend Form Select elements</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-11-08T11:01:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-27T15:45:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, it's not possible to use addMultiOptions to pass an array with equal option values to a Select/MultiSelect form element, because the value has to be stored as the key of the multiOptions array.</p>

<p>in a similar manner to the addMultiOptions option of specifically setting key and value, formSelect should be enhanced to support an array of key/value pairs.</p>

<p>Because I needed a solution now, I created my own ViewHelper to take into account for the same value in different optgroups, like this:</p>

<pre class="highlight"><code>
                    $list[] = $this-&gt;_build($val, $lab, $value, $disable);
</code></pre>

<p>is replaced by</p>

<pre class="highlight"><code>
                    if (is_array($lab) 
                        &amp;&amp; array_key_exists('key', $lab)
                        &amp;&amp; array_key_exists('value', $lab)
                    ) { 
                        $list[] = $this-&gt;_build($lab['key'], $lab['value'], $value, $disable);
                    } else {
                        $list[] = $this-&gt;_build($val, $lab, $value, $disable);
                    }
</code></pre>

<p>which requires to prepare the array passed to the viewhelper like ````</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gerhard Eriksson (drone82) on 2011-07-12T08:46:59.000+0000</p> 
        <div class="body">
            <p>My project is hanging on this, and programming around it is a pain for me.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gerhard Eriksson (drone82) on 2011-07-12T11:34:51.000+0000</p> 
        <div class="body">
            <p>And I can't use this solution because I don't use opt grouping. But I must have this solution applied so I can use same value with different labels. So the users selects right foreign key-number in a database relation with a barcode scan. Why I have this problem is that HP's product number vary up to 3 times on same product, and all labelscans must match to that 1 product.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Linus R (silverquick) on 2012-04-27T15:45:11.000+0000</p> 
        <div class="body">
            <p>What about changing how {{Zend_Form_Element_Multi}} stores options? Instead of storing them as one array, it can store the keys as one array and the labels as a separate array. It could also have an {{$_allowDuplicateKeys}} option, perhaps defaulting to false for backwards-compat.</p>

<p>Then {{Zend_View_Helper_FormSelect::formSelect()}} would also have to be refactored slightly, but it's not as straightforward if one wants to avoid changing the method signature. The $options param can't simply be an array($arrayOfKeys, $arrayOfLabels), because currently if an $options element is itself an array, it triggers the ing. Of course one could just add another param on the end, {{array $optionLabels = null}}, and if it's set, $options is interpreted as just the keys, but then it's weird that $listsep is between them. I'll try to think more about this...</p>

        </div>
    </div>
    </div>

