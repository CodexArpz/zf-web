<h2>ZF-10097: Memcache Semaphore Keys</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-07-02T07:19:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-09T19:38:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Petrus Rademeyer (axisk)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13198/zf-10097.diff">zf-10097.diff</a></li>
            <li><a href="/issues/secure/attachment/13185/zf-10097.diff">zf-10097.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>While using the memcached backend there's no way to specify that a save should not occur if there is already a value in the cache thereby indirectly causing race conditions when adding a semaphore. By implementing an option to specify semaphoreIds this can be avoided.</p>

<pre class="literal">
        if (!(array_key_exists($id, $this-&gt;_options['semaphoreIds']))) {
            // ZF-8856: using set because add needs a second request if item already exists
            $result = @$this-&gt;_memcache-&gt;set($id, array($data, time(), $lifetime), $flag, $lifetime);
        } else {
            $result = $this-&gt;_memcache-&gt;add($id, array($data, time(), $lifetime), $flag, $lifetime);
        }
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Petrus Rademeyer (axisk) on 2010-07-02T07:34:53.000+0000</p> 
        <div class="body">
            <p>Diff file for proposed improvement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-07-02T08:58:29.000+0000</p> 
        <div class="body">
            <p>This will be solved within ZF 2.0.
Please read my proposal: <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend+Cache+2.0+-+Marc+Bennewitz">http://framework.zend.com/wiki/display/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-01-09T19:38:13.000+0000</p> 
        <div class="body">
            <p>This won't be fixed in ZF1.
-&gt; fixed in ZF2-135</p>

        </div>
    </div>
    </div>

