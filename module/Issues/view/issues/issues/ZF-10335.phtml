<h2>ZF-10335: assertXpathContentContains fails on matched '0'</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-18T14:27:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>tried to do something like this in my tests</p>

<p>$this-&gt;assertXpathContentContains('//form/p', '0');</p>

<p>and it fails test, even if '//form/p' contains exactly '0'</p>

<p>found method in Zend_Test_PHPUnit_Constraint_DomQuery
    /**
     * Check to see if content is matched in selected nodes
     *
     * @param  Zend_Dom_Query_Result $result
     * @param  string $match Content to match
     * @return bool
     */
    protected function _matchContent($result, $match)
    {
        if (0 == count($result)) {
            return false;
        }</p>

<pre><code>    foreach ($result as $node) {
        $content = $this-&gt;_getNodeContent($node);
        if (strstr($content, $match)) {
            return true;
        }
    }

    return false;
}
</code></pre>

<p>looks like this line</p>

<p>if (strstr($content, $match))</p>

<p>should be</p>

<p>if (strstr($content, $match) !== false)</p>

<p>becouse strstr('0', '0') return string '0', that is equals bool false...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dan Chase (cdchase) on 2010-11-14T15:54:59.000+0000</p> 
        <div class="body">
            <p>I can confirm this is still an issue. I wanted to add that it also is true for the related CSS version: assertQueryContentContains.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dan Chase (cdchase) on 2010-11-15T07:49:30.000+0000</p> 
        <div class="body">
            <p>Doing some additional testing, I find that assertXpathCount (and assertQueryCount) work as expected. Assuming these functions maintain DRY... :-) it appears the Zend_Dom_Query portion of the code is working, and the problem is related specifically to the node or string matching being used.</p>

        </div>
    </div>
    </div>

