<h2>ZF-5262: Bad performance of Zend_Db_Table_Abstract::find with Oracle (and in general with Zend_Db_Table_Abstract::_fetch)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-12-15T02:27:56.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Mickael Perraud (mikaelkael)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6463">ZF-6463</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>All fetch's method of Zend_Db_Table_Abstract (fetchAll, fetchRow) don't allow to bind parameters. This is a problem with Oracle (and perhaps with others RDBMS).
Example:</p>

<pre class="highlight"><code>
// $table is instance of Zend_Db_Table_Abstract
$table-&gt;find(1);
// generate: SELECT foo.* FROM foo WHERE (((foo.bar = '1')))
$table-&gt;find(2);
// generate: SELECT foo.* FROM foo WHERE (((foo.bar = '2')))
</code></pre>

<p>For Oracle, this corresponds to 2 completely differents requests. So it needs 2 parsing and 2 executions.</p>

<p>If we allow parameters binding, we could obtain 1 single request:</p>

<pre class="highlight"><code>
SELECT foo.* FROM foo WHERE (((foo.bar = :baz)))
</code></pre>

<h2>The first time, we have parsing and execution but each next time, we will have just the execution without any parsing.</h2>

<p>I think this could be change without any BC breaks. We can change internal process of Zend_Db_Table_Abstract:
- the method find() calls fetchAll().
- fetchAll could be called by 2 ways:
-- fetchAll($where = null, $order = null, $count = null, $offset = null)
-- fetchAll(Zend_Db_Table_Select $where)
- in case of second way, the other parameters are ignored ($order, $count, $offset )</p>

<p>My proposition:
- during find() method: creation of binding array
- end of find() method: creation of Zend_Db_Table_Select instance
- and calling of fetchAll like this: fetchAll(Zend_Db_Table_Select $where, $bind)
- in fetchAll method, retrieve $bind in case of where is a  Zend_Db_Table_Select instance otherwise null
- and calling _fetch() with new optional $bind parameter
- in _fetch() call db adapter query() method with $bind</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:43.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

