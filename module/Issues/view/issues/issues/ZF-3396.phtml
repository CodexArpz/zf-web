<h2>ZF-3396: Zend_Cache - Zend_Log - When using the php://output stream</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-05T10:03:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-09T09:53:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Helgi Hrafn Halldórsson (harabanar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11629/zend_log_writer_stream_testcase.php">zend_log_writer_stream_testcase.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>My coworkers and I found this out the VERY hard way .. but here it comes.</p>

<p>When using <em>logging</em> with Zend_Cache but not setting the <em>logger</em> option. Zend_Cache uses Zend_Log_Writer_Stream('<a>php://output</a>') as default logger. This can cause some trouble. Because on destruction the Zend_Log_Writer_Stream does a <em>fclose</em> on its stream. So if the Zend_Cache is destroyed, no more output can be sent. In our opinion the <a>_php://output</a>_ should never be closed. This can therefor be thought of as a bug in PHP (hmm :D). But as a fix for the ZendFramework we suggest this patch ..</p>

<pre class="highlight"><code>
Index: Log/Writer/Stream.php
===================================================================
--- Log/Writer/Stream.php   (revision 9612)
+++ Log/Writer/Stream.php   (working copy)
@@ -43,6 +43,13 @@
     protected $_stream = null;
 
     /**
+     * Is the stream the <a>php://output</a> or not
+     *
+     * @var bool
+     */
+    protected $_isPhpOutput = false;
+
+    /**
      * Class Constructor
      *
      * @param  streamOrUrl     Stream or URL to open as a stream
@@ -61,6 +68,7 @@
 
             $this-&gt;_stream = $streamOrUrl;
         } else {
+            if($streamOrUrl == "php://output") $this-&gt;_isPhpOutput = true;
             if (! $this-&gt;_stream = @fopen($streamOrUrl, $mode, false)) {
                 $msg = "\"$streamOrUrl\" cannot be opened with mode \"$mode\"";
                 throw new Zend_Log_Exception($msg);
@@ -77,7 +85,7 @@
      */
     public function shutdown()
     {
-        if (is_resource($this-&gt;_stream)) {
+        if (is_resource($this-&gt;_stream) &amp;&amp; !$this-&gt;_isPhpOutput) {
             fclose($this-&gt;_stream);
         }
     }
</code></pre>

<p><a href="http://us.php.net/wrappers.php">http://us.php.net/wrappers.php</a>
<a href="http://bugs.php.net/bug.php?id=40429">http://bugs.php.net/bug.php?id=40429</a>
<a href="http://bugs.php.net/bug.php?id=42473">http://bugs.php.net/bug.php?id=42473</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-06-06T12:17:36.000+0000</p> 
        <div class="body">
            <p>doesn't seem to be a Zend_Cache problem, so I remove the "Zend_Cache component" tag</p>

<p>please, correct if I didn't understand</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-11-07T05:16:02.000+0000</p> 
        <div class="body">
            <p>{quote}    /**
     * @group ZF-3396
     */
    public function testShutdownDoesNotClosePhpOutputStreamResource()
    {
        $writer = new Zend_Log_Writer_Stream('<a>php://output</a>', 'w+');</p>

<pre><code>    ob_start();
    $writer-&gt;write(array('message' =&gt; 'this write should succeed'));
    ob_end_clean();

    $writer-&gt;shutdown();

    ob_start();
    echo "TEST";
    $output = ob_get_contents();
    ob_end_clean();
    $this-&gt;assertEquals("TEST", $output);

    $fp = fopen('&lt;a rel="nofollow" href="php://output"&gt;php://output&lt;/a&gt;', 'w+');
    ob_start();
    fwrite($fp, "TEST");
    $output = ob_get_contents();
    ob_end_clean();

    $this-&gt;assertEquals("TEST", $output);
}{quote}
</code></pre>

<p>This works for me even WITHOUT your patch. Can you give a test-case were your bug applies and it fails?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-11-07T05:17:53.000+0000</p> 
        <div class="body">
            <p>Hm wiki markup sucks. I have attached a file with the testcase. Please Review and give a better failure case.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Helgi Hrafn Halldórsson (harabanar) on 2008-11-07T05:55:06.000+0000</p> 
        <div class="body">
            <p>Hi again ..</p>

<p>We will come with a better description on how we got this error.</p>

<p>Thank you for your time, so far :D</p>

        </div>
    </div>
    </div>

