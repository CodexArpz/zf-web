<h2>ZF-2592: Invalid realm causing BAD_REQUEST result from provider</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-06T17:24:03.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-15T10:17:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Kevin Schroeder (kschroeder)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Dmitry Stogov (dmitry)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_OpenId</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When doing an authorization with Zend_OpenId_Consumer the realm gets mangled due to the use of dirname() in $this-&gt;_checkId() if I do not explicitly define a root when calling $consumer-&gt;login('', 'return_to', 'root').  I don't entirely know why dirname() is being called on line 729</p>

<pre><code>    if (empty($root)) {
        $root = dirname(Zend_OpenId::selfUrl());
    }
</code></pre>

<p>but when I remove the dirname(), the consumer auto-discovers the URL just fine and I'm able to validate the login request.  Otherwise I get a BAD_REQUEST response back from the OpenId provider.</p>

<p>This is being done with an MVC-based test application</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-12T11:34:38.000+0000</p> 
        <div class="body">
            <p>Sorry, but I'm not able to reproduce the issue.
The demo MVC application "demo/Zend/OpenId/mvc_auth" works fine.
The bug is probably already fixed some time ago (svn diff -r 6835:7023 library/Zend/OpenId.php).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Schroeder (kschroeder) on 2008-02-12T12:31:35.000+0000</p> 
        <div class="body">
            <p>In the MVC example it uses Zend_Auth_Adapter_OpenId whereas I had used the code from the manual:</p>

<p>[code]
$status = "";
if (isset($_POST['openid_action']) &amp;&amp;
    $_POST['openid_action'] == "login" &amp;&amp;
    !empty($_POST['openid_identifier'])) {</p>

<pre><code>$consumer = new Zend_OpenId_Consumer();
if (!$consumer-&gt;login($_POST['openid_identifier'])) {
    $status = "OpenID login failed.&lt;br&gt;";
}
</code></pre>

<p>} else if (isset($_GET['openid_mode'])) {
    if ($_GET['openid_mode'] == "id_res") {
        $consumer = new Zend_OpenId_Consumer();
        if ($consumer-&gt;verify($_GET, $id)) {
            $status = "VALID $id";
        } else {
            $status = "INVALID $id";
        }
    } else if ($_GET['openid_mode'] == "cancel") {
        $status = "CANCELED";
    }
}</p>

<p>[/code]</p>

<p>Is Zend_Auth_Adapter_OpenId the only method for using it in MVC applications?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-15T02:04:44.000+0000</p> 
        <div class="body">
            <p>Of course Zend_Auth_Adapter_OpenId is not the only case, it just simpler.</p>

<p>Could you please attach the complete MVC example?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Schroeder (kschroeder) on 2008-02-15T07:34:53.000+0000</p> 
        <div class="body">
            

OpenID Login


<p></p>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-15T08:32:15.000+0000</p> 
        <div class="body">
            <p>At first you example says nothing in case of success. I've modified it a bit. In the controller I substituted $status with $this-&gt;view-&gt;status, and in the view I added &lt;?php echo $this-&gt;staus; ?&gt;
Then I tested the example with myopenid.com and pip.verisignlabs.com and both worked fine.</p>

<p>I assume the bug was already fixed in SVN and you use latest release or old snapshot.</p>

<p>Thank you anyway. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Schroeder (kschroeder) on 2008-02-15T09:08:17.000+0000</p> 
        <div class="body">
            <p>I'm still getting the error.  I checked out the latest revision from SVN, did a symbolic link to it so it replaced the other version.  The URL I am forwarded to is</p>

<p><a href="http://pip.verisignlabs.com/server?openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.mode=checkid_setup&amp;openid.identity=http%3A%2F%2Fkschroeder.pip.verisignlabs.com%2F&amp;openid.claimed_id=http%3A%2F%2Fkschroeder.pip.verisignlabs.com%2F&amp;openid.assoc_handle=c1b035a0-dbd5-11dc-83c8-51f194f14af5&amp;openid.return_to=http%3A%2F%2Ftest.corp.mirageworks.com%2F&amp;openid.realm=http%3A">http://pip.verisignlabs.com/server/…</a></p>

<p>As you can see, the realm has been chopped off.   The URL I receive back is</p>

<p><a href="http://test.corp.mirageworks.com/?openid.ns=http://openid.net/signon/2.0&amp;openid.mode=error&amp;openid.error=BAD_REQUEST">http://test.corp.mirageworks.com//…</a></p>

<p>This is using the most up-to-date revision from <a href="http://framework.zend.com/svn/framework/trunk">http://framework.zend.com/svn/framework/trunk</a> (8026).  Or is the anonymous SVN at <a href="http://framework.zend.com/svn/framework/trunk">http://framework.zend.com/svn/framework/trunk</a> not current?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-02-15T10:17:37.000+0000</p> 
        <div class="body">
            <p>Thank you for your persistence.
Now I reproduced the bug and fixed it.</p>

        </div>
    </div>
    </div>

