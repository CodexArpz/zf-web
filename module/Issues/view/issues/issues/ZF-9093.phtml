<h2>ZF-9093: Zend_Date setMilliseconds/addMilliseconds</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-05T06:58:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-08T06:23:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.1 (10/Feb/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chris Beck (cbeck)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Date will never return the milliseconds if you run setMiliscond(Null);</p>

<p>If you take the intval of the microseconds frim microtime() you will always get 0 as it is a decimal number.</p>

<p>list($milli, $time) = explode(" ", microtime());
 $milli = intval($milli);</p>

<p>I have tried to run the following to get a timestamp in DB2 format but it still is not correct.</p>

<p>list( $decimalMilliseconds, $uts ) = split( ' ', microtime());
$Date = new Zend_Date();
$Date-&gt;setFractionalPrecision(6);
$milli = intval($decimalMilliseconds * 1000000);
$Date-&gt;setMilliSecond($milli, 6);
echo("Current: " . str_pad($Date-&gt;get('yyyy-MM-dd-H.mm.ss.S'), 25, "0") . "<br />");</p>

<p>Yet this still does not work as it drops the leading zero from the milliseconds. For example I should get this: 2010-02-05-08.41.14.032065 but I end up and get 2010-02-05-8.41.14.320650</p>

<p>This makes if very hard to use Zend_Date to get a DB2 Timestamp basically worthless.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-05T12:55:02.000+0000</p> 
        <div class="body">
            <p>Running your test-code on ZF 1.10 I get</p>

<pre class="highlight"><code>
Current: 2010-02-05-21.52.03.093342
</code></pre>

<p>which is correct as you defined a precision of 6.
Therefor closing as not reproducable.</p>

<p>Note that when you give NULL as milliseconds, you will only then get correct milliseconds in return when your OS supports this.</p>

<p>Note from PHP's manual:
{quote}
microtime() returns the current Unix timestamp with microseconds. This function is only available on operating systems that support the gettimeofday() system call. 
{quote}</p>

<p>I tested this with Windows and Linux with equal results.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Beck (cbeck) on 2010-02-08T06:23:05.000+0000</p> 
        <div class="body">
            <p>My OS does support gettimeofday(): <a href="http://publib.boulder.ibm.com/infocenter/iseries/v6r1m0/index.jsp?topic=/apis/gettod.htm">http://publib.boulder.ibm.com/infocenter/iseries/â€¦</a></p>

<p>Yes my test code does return the microseconds, but it does so impropperly by dropping the leading zero, and yet again I should not have to write 6 lines of code to get what should be returned by just calling setMilliSecond with null.</p>

        </div>
    </div>
    </div>

