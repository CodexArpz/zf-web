<h2>ZF2-227: Add Backslashes to core function and constants calls</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Performance Improvement</dd>

    <dt>Created:</dt>
    <dd>2012-03-18T16:38:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-10-08T20:15:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Maksym Sliesarenko (sm)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Replace all code like:</p>

<pre class="literal"> 
namespace 'Zend\Blabla';
...
$time = time();

...

echo PHP_EOL;

...
</pre>

<p>to this way</p>

<pre class="literal"> 
namespace 'Zend\Blabla';
...
$time = \time();

...

echo \PHP_EOL;

...
</pre>

<p>It will increase the performance and security. Because php first looks for function in current namespace.</p>

<p>Function overloading example:</p>

<pre class="literal"> 

namespace Zend\Date {
    function is_object($date) {
        echo "Zend Date constructor is called with param {$date}";exit;
    }
}


namespace Foo {

require_once 'zf2/library/Zend/Loader/AutoloaderFactory.php';
\Zend\Loader\AutoloaderFactory::factory(array('Zend\Loader\StandardAutoloader' =&gt; array()));

$date = new \Zend\Date\Date('2012-03-18');

}
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Denis Portnov (denix) on 2012-03-20T00:59:14.000+0000</p> 
        <div class="body">
            <p>h6.on performance
I did simple benchmark, and it shows up to 8% improvement when calling global functions with slash
whether it's a significant improvement is up to discussion</p>

<p>h6.on security
Not sure it's a framework responsibility to address such "hacks"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sascha-Oliver Prolic (prolic) on 2012-07-09T10:06:48.000+0000</p> 
        <div class="body">
            <p>I would close this issue. This is on the todo-list of the php-dev-team. We should not change the code here.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-07-09T11:04:56.000+0000</p> 
        <div class="body">
            <p>This could be done by a script as we don't define functions or global constants in ZF</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2012-10-08T20:15:23.000+0000</p> 
        <div class="body">
            <p>This issue has been closed on Jira and moved to GitHub for issue tracking.  To continue following the resolution of this issues, please visit: <a href="https://github.com/zendframework/zf2/issues/2465">https://github.com/zendframework/zf2/issues/2465</a></p>

        </div>
    </div>
    </div>

