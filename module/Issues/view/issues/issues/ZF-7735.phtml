<h2>ZF-7735: Lost database connection after running one process unix</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-08-31T07:51:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-09T12:14:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>ZendX_Console_Process_Unix</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I create many process unix with the library ZendX_Console_Process_Unix. When the first one is running, I loose the database connection. 
Indeed, when I access the DB before running the first thread, there is no problem but after I launch the first one this problem occurs : SQLSTATE[HY000]: General error: 2006 MySQL server has gone away</p>

<p>Perhaps when the child process is killed, the connection object is also destruct.</p>

<p>Do you have any ideas where the problem come from ?</p>

<p>Thank you for you consideration.</p>

<p>Matthieu</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Andrew Stoltz (andyl56) on 2009-11-09T12:14:22.000+0000</p> 
        <div class="body">
            <p>This actually is not a bug within ZF. See the comments on <a href="http://us.php.net/manual/en/function.pcntl-fork.php#70721">http://us.php.net/manual/en/â€¦</a>. Within the _run() function, you need to initialize a new connection to the db since MySQL doesn't like everything sharing the same connection. In the app where I encountered this issue, I'm using Doctrine. To resolve this, I just reran the connect with a different connection name.</p>

<pre class="highlight"><code>
        $options = $GLOBALS['application']-&gt;getBootstrap()-&gt;getOptions();
        $dbOptions = $options['resources']['db']['params'];
        Doctrine_Manager::connection(
            $options['resources']['db']['doctrineAdapter'] .
            '://' .
            $dbOptions['username'] .
            ':' .
            $dbOptions['password'] .
            '@' .
            $dbOptions['host'] .
            '/' .
            $dbOptions['dbname'],
            'cron' . $this-&gt;getVariable('cronjobId')
        );
</code></pre>

<p>I imagine using Zend_Db would work much the same way.</p>

        </div>
    </div>
    </div>

