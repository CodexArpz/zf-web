<h2>ZF-10968: When using setResultLimit you get not top rated results</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-01-20T00:44:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-20T00:44:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Search with $index-&gt;setResultSetLimit(4); and without gives different results.
Most top (and that right) result in full search does not list at all in limited resultset.
Didn't actually test, but as i can see there is still that problem in repo.
Problem located in Zend/Search/Lucene.php, sorting is later than fetching limit, so it gets not top hits, but random one.</p>

<p>{{
foreach ($query-&gt;matchedDocs() as $id =&gt; $num) {
    $docScore = $query-&gt;score($id, $this);
    if( $docScore != 0 ) {
        $hit = new Zend_Search_Lucene_Search_QueryHit($this);
        $hit-&gt;id = $id;
        $hit-&gt;score = $docScore;</p>

<pre><code>    $hits[]   = $hit;
    $ids[]    = $id;
    $scores[] = $docScore;

    if ($docScore &gt; $topScore) {
        $topScore = $docScore;
    }
}
</code></pre>

<p>// LIMIT IS HERE
    if (self::$_resultSetLimit != 0  &amp;&amp;  count($hits) &gt;= self::$_resultSetLimit) {
        break;
    }
}</p>

<p>if (count($hits) == 0) {
    // skip sorting, which may cause a error on empty index
    return array();
}</p>

<p>if ($topScore &gt; 1) {
    foreach ($hits as $hit) {
        $hit-&gt;score /= $topScore;
    }
}
//SORTING IS HERE
if (func_num_args() == 1) {
    // sort by scores
    array_multisort($scores, SORT_DESC, SORT_NUMERIC,
                    $ids,    SORT_ASC,  SORT_NUMERIC,
                    $hits);
}}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

