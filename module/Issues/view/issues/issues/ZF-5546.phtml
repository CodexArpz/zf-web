<h2>ZF-5546: CLONE -CLONE -Zend_Db-&gt;query() silently dies after I try to insert text with length about 10 kilobytes. I'm using ZF 1.5.2 on Unix. I don't observe this problem on the same version on Windows</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-14T06:38:52.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-14T08:30:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Angelos Katsaris (akat)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>by inserting an large text (greater than 5484 chars in ut8 charset, we uses "a's" as test character) into a database field Zend_Db_Statement causes an Apache segmentation fault
the script dies in line 187 of Zend_Db_Statement without any exception to be caught</p>

<pre><code>    // remove 'foo\'bar'
    $sql = preg_replace("/$q($qe|[^$q])*$q/", '', $sql);
</code></pre>

<p>We are using php 5.4.2 and apache 2.0 and apache 2.2 versions, and all versions are affected even if we use Zend Core php</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Angelos Katsaris (akat) on 2009-01-14T06:49:19.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>I have the same problem, I have create a class to store html content at mysql. I can't store more than 5484 chars at utf-8 and i am getting back  white screen with no errors. The only thing i can see is at the error log at apache (segmentation fault(11)). I am getting this error only at linux not on windows and i have test it on 3 linux servers with the same results.</p>

<p>I have try this at many php versions and nothing happen. Please Help!!!</p>

<p>a part of my class...</p>

<pre><code>$this-&gt;dbconnect();
        try {

                $sql = "INSERT INTO categories
                                         (catID,
                                          catTitle,
                                          lang,
                                          catDescription,
                                          catContent,
                                          catKeywords,
                                          catGoogleDesc,
                                          catOrder,
                                          catActive,
                                          catHomeActive,
                                          catHomeSection,
                                          catOpenActive,
                                          catHasContents
                                          )
                                  VALUES (
                                          ".$this-&gt;lastID.",
                                          '".$titlos."',
                                          ".$lang.",
                                          '".$description."',
                                          '".$fullcontent."',
                                          '".$googleKeywords."',
                                          '".$googleDesc."',
                                          ".$order.",
                                          ".$active.",
                                          ".$home_active.",
                                          ".$home_section.",
                                          ".$childs.",
                                          ".$has_contents."
                                          )";


                $this-&gt;db-&gt;query($sql);
            }
            $this-&gt;db-&gt;commit();
        } catch (Exception $e) {
            $this-&gt;db-&gt;rollBack();
            $this-&gt;db-&gt;delete('cat_tree', 'catID ='.$this-&gt;lastID);
            $this-&gt;error = true;
            $this-&gt;errorMessage = $e-&gt;getMessage();
            cal_public_baseFunctions::logErrors('Query Exception when i try to Add new Page :: storePages.php Class'.$e-&gt;getMessage());
            cal_public_baseFunctions::logErrors('Query Exception when i try to Add new Page :: Query '.$sql);
        }


    $this-&gt;dbclose();
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-14T07:16:59.000+0000</p> 
        <div class="body">
            <p>Is that a 64 bit machine?</p>

<p>Also, you could try using the adapter insert method with placeholders, instead of crafting the query yourself:</p>

<pre class="highlight"><code>
$dbAdapter-&gt;insert('categories', array(
  'catID' =&gt; $this-&gt;lastID,
  'catTitle' =&gt; $titlos,
  ...
));
</code></pre>

<p>This would then only quote the sql statement, and bind the parameters afterwards.  Let me know if that helps.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Angelos Katsaris (akat) on 2009-01-14T07:49:24.000+0000</p> 
        <div class="body">
            <p>Thanks that solve my problem!!!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Angelos Katsaris (akat) on 2009-01-14T08:16:17.000+0000</p> 
        <div class="body">
            <p>Also if you want to avoid this way you can just execute the query like this.</p>

<p>$sql ="Insert into categories....";
$adapter-&gt;getConnection()-&gt;exec($sql);</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-14T08:30:09.000+0000</p> 
        <div class="body">
            <p>This is a known issue with preg_* functions on 64bit platforms.  The workaround is to use the adapter with bound parameters instead of passing large unbound queries into the query() method.</p>

<p>And yes, by passing the adapter itself is definitely an option, but would result in decreasing the inherit benefits of using Zend_Db in the first place.</p>

<p>Thanks!</p>

        </div>
    </div>
    </div>

