<h2>ZF-10713: Zend_Search_Lucene_Document_Html should be able to ignore some code</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2010-11-19T06:39:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-09T15:29:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,</p>

<p>I need to index more than 3000 pages of documentation with Zend Lucene. 
Each page has a menu on the left. This menu contains references to other functions.</p>

<p>During the search, it causes many unrelated pages to pop up.</p>

<p>It would be nice if Zend Lucene could ignore some portions of the HTML code.
For example:</p>

<p>
Menu item 1
Menu item 2
Menu item 3
</p>

<p>Menu item * would not be indexed at the end.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Sylvestre Ledru (sylvestre) on 2010-11-20T15:18:18.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>The following patch (developed against the SVN) implements this feature.
If you agree on adding this feature, I can update the documentation and unitary tests (I haven't done it yet in case you refuse this feature).</p>

<h1>Index: library/Zend/Search/Lucene/Document/Html.php</h1>

<p>--- library/Zend/Search/Lucene/Document/Html.php    (rÃ©vision 23417)
+++ library/Zend/Search/Lucene/Document/Html.php    (copie de travail)
@@ -67,6 +67,30 @@
      */
     private static $_excludeNoFollowLinks = false;</p>

<ul><li>/**</li>
<li>
<ul><li>Defines if the current analysis should be indexed or not</li>
</ul></li>
<li>*</li>
<li>
<ul><li>@var boolean if true, skip the current indexation</li>
</ul></li>
<li>*/ </li>
<li>private $skipIndex = false;</li>
<li></li>
<li>/** </li>
<li>
<ul><li>Defines the beginning tag which starts the blocking of the indexation</li>
</ul></li>
<li>
<ul><li>of some section of the code</li>
</ul></li>
<li>* </li>
<li>
<ul><li>@var string</li>
</ul></li>
<li>*/</li>
<li>private $skipTagBegin = "LUCENE IGNORE";</li>
<li></li>
<li>/** </li>
<li>
<ul><li>Defines the ending tag which ends the blocking of the indexation</li>
</ul></li>
<li>
<ul><li>of some section of the code</li>
</ul></li>
<li>* </li>
<li>
<ul><li>@var string</li>
</ul></li>
<li>*/</li>
<li>private $skipTagEnd = "//LUCENE IGNORE";</li>
<li></li>
<li><p>/**
  *</p>

<ul><li><p>List of inline tags
@@ -186,6 +210,29 @@
}</p>

<p>/**</p></li>
</ul></li>
<li>
<ul><li>Set the beginning skip Tag </li>
</ul></li>
<li>
<ul><li>Default: LUCENE IGNORE</li>
</ul></li>
<li>* </li>
<li>
<ul><li>@param boolean $newValue</li>
</ul></li>
<li>*/</li>
<li>public static function setSkipTagBegin($newValue)</li>
<li>{</li>
<li>$this-&gt;setSkipTagBegin=$newValue;</li>
<li>}</li>
<li></li>
<li>/**</li>
<li>
<ul><li>Set the ending skip Tag </li>
</ul></li>
<li>
<ul><li>Default: //LUCENE IGNORE</li>
</ul></li>
<li>* </li>
<li>
<ul><li>@param boolean $newValue</li>
</ul></li>
<li>*/</li>
<li>public static function setSkipTagEnd($newValue)</li>
<li>{</li>
<li>$this-&gt;setSkipTagEnd=$newValue;</li>
<li>}</li>
<li></li>
<li></li>
<li>/**

<ul><li>Set exclude nofollow links flag</li>
<li></li>
<li>@param boolean $newValue
@@ -215,12 +262,23 @@
*/
private function _retrieveNodeText(DOMNode $node, &amp;$text)
{</li>
</ul></li>
<li>if ($node-&gt;nodeType == XML_TEXT_NODE) {</li>
<li>if ($node-&gt;nodeName=="#comment" &amp;&amp; (strpos($node-&gt;nodeValue,$this-&gt;skipTagBegin) || strpos($node-&gt;nodeValue,$this-&gt;skipTagEnd))) {</li>
<li></li>
<li>if (strpos($node-&gt;nodeValue,$this-&gt;skipTagBegin)) {</li>
<li>/* Start to ignore */</li>
<li>$this-&gt;skipIndex = true;</li>
<li>} else {</li>
<li>/* Stop the ignore */</li>
<li>$this-&gt;skipIndex = false;</li>
<li>}</li>
<li>}</li>
<li></li>
<li>if ($node-&gt;nodeType == XML_TEXT_NODE &amp;&amp; $this-&gt;skipIndex != true) {
         $text .= $node-&gt;nodeValue;
         if(!in_array($node-&gt;parentNode-&gt;tagName, $this-&gt;_inlineTags)) {
             $text .= ' ';
         }</li>
<li>} else if ($node-&gt;nodeType == XML_ELEMENT_NODE  &amp;&amp;  $node-&gt;nodeName != 'script') {</li>
<li>} else if ($node-&gt;nodeType == XML_ELEMENT_NODE  &amp;&amp;  $node-&gt;nodeName != 'script' &amp;&amp; $this-&gt;skipIndex != true) {
         foreach ($node-&gt;childNodes as $childNode) {
             $this-&gt;_retrieveNodeText($childNode, $text);
         }</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sylvestre Ledru (sylvestre) on 2010-12-09T08:41:44.000+0000</p> 
        <div class="body">
            <p>Is there any chance this patch / features could be accepted ?</p>

<p>Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sylvestre Ledru (sylvestre) on 2011-08-09T15:29:20.000+0000</p> 
        <div class="body">
            <p>ping ?</p>

        </div>
    </div>
    </div>

