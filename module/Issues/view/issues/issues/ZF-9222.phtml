<h2>ZF-9222: Zend_Rest_Route also routes non-REST URIs</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-21T08:11:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Moritz Mertinkat (maurice)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Route</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12779/route-fix-zf-9222.patch">route-fix-zf-9222.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When Zend_Rest_Route is used as an additional route (see below) it also matches URIs that are not registered as responders. To be clear: It does not set the REST actions but the route's match() method returns true.</p>

<p>In most cases this will not lead to any errors because Zend_Rest_Route behaves just like Zend_Controller_Router_Route_Module (which is extends), but as soon as you're relying on automatic URL building using the ::assemble method from the current route you might end up with the wrong URL.</p>

<p>Sample:</p>

<pre class="highlight"><code> 
$router = $front_controller-&gt;getRouter();
$router-&gt;addRoute('rest', new Zend_Rest_Route($front_controller, array(), array('api' =&gt; array('product'))));
</code></pre>

<pre class="literal">
URI                            Route matched
================================================
/                              ===&gt; rest (ERROR)
/index                         ===&gt; default (OK)
/index/index                   ===&gt; default (OK)
/?a=1&amp;b=2                      ===&gt; rest (ERROR)
/index?a=1&amp;b=2                 ===&gt; default (OK)
/index/?a=1&amp;b=2                ===&gt; default (OK)
/api/supplier                  ===&gt; default (OK)
/api/supplier/2                ===&gt; default (OK)
/api/product                   ===&gt; rest (OK)
/api/product/                  ===&gt; rest (OK)
/api/product/1337              ===&gt; rest (OK)
/api/product/?supplier=2       ===&gt; rest (OK)
</pre>

<p>The problem occurs within the last lines in Zend_Rest_Route::match (btw, there should be some braces after the 'if' statement according to the coding guidelines):</p>

<pre class="highlight"><code>
$this-&gt;_values = $values + $params;

$result = $this-&gt;_values + $this-&gt;_defaults;

if ($partial &amp;&amp; $result)
    $this-&gt;setMatchedPath($request-&gt;getPathInfo());

return $result;
</code></pre>

<p>These lines should be executed only if {{$path}} (from line 137) is not empty or {{$this-&gt;_allRestful()}} is true. Otherwise Zend_Rest_Route should return false.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Moritz Mertinkat (maurice) on 2010-02-21T11:08:09.000+0000</p> 
        <div class="body">
            <p>Zend_Rest_Route patch against 1.10.1</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Moritz Mertinkat (maurice) on 2010-02-21T11:28:47.000+0000</p> 
        <div class="body">
            <p>Just noticed that Zend_Rest_Route does not work on "/" URIs (even though it accidentally matched them). Is this intentional?</p>

<p>{{curl -X POST -d "a=1&amp;b=2" "http://api.mydomain.com/"}} does not trigger the {{postAction}} of {{IndexController}}.</p>

        </div>
    </div>
    </div>

