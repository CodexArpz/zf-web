<h2>ZF-2296: Zend_Locale::getQuestion() does not return yesexpr and noexpr</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-12-12T04:55:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:35.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Fabrizio Balliano (balliano)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>in this doc:
<a href="http://framework.zend.com/manual/en/zend.locale.functions.html#zend.locale.getquestion">http://framework.zend.com/manual/en/…</a>
you say that the getQuestion method returns the regular expressions for matching "yes" and "no" strings but this is not true</p>

<p>running getQuestion('en_US') returns:
Array
(
    [yes] =&gt; yes
    [no] =&gt; no
    [yesabbr] =&gt; y
    [noabbr] =&gt; n
)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-12-12T07:28:13.000+0000</p> 
        <div class="body">
            <p>The documentation reads:</p>

<pre class="highlight"><code>
Use getQuestion() to obtain an array containing the correct word(s) or regex strings to use for prompting the user
</code></pre>

<p>It is not said that you will get regex strings for sure because the underlaying data is provided from the cldr repository. Some languages and versions provide regex strings, and some not.</p>

<p>Therefor the documentation states "OR"...
But if you receive Strings it should be very simple to use them within an regex, or even to ask them plain.</p>

<p>If the new CLDR version does no longer provide regex strings we will rewrite the docu, because this is nothing we could do per code for all languages.</p>

<p>Therefor this issue is closed because we will check this with our unittests and the new cldr version which we are awaiting until christmas.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-12-12T08:23:37.000+0000</p> 
        <div class="body">
            <p>I've just seen that this data is no longer supported and depreciated since CLDR 1.4
It is now recommended to self create the regex string which has been integrated with SVN 7090.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabrizio Balliano (balliano) on 2007-12-13T03:23:01.000+0000</p> 
        <div class="body">
            <p>yeah that's great and thank you for the speed!</p>

<p>anyway i can see a problem in svn version of locale.php, problem comes with non-english languages, for example in italian the word "yes" is translated into "sì", well... the generated regexp seems to be something like</p>

<p>[s|S][ì|ì]</p>

<p>but the problem is that we should also add the ì char without the accent, to have something like</p>

<p>[s|S][i|I|ì|ì]</p>

<p>you think it's possible?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabrizio Balliano (balliano) on 2007-12-13T03:32:19.000+0000</p> 
        <div class="body">
            <p>reading the CLDR xml files i found an interesting part</p>

<pre><code>&lt;posix&gt;
    &lt;messages&gt;
        &lt;yesstr&gt;sì:si:s&lt;/yesstr&gt;
    &lt;/messages&gt;
&lt;/posix&gt;
</code></pre>

<p>that "yesstr" (think also nostr exists) contains the full match for yes (separated by ":") thus this should be used to generate the regex, maybe simply using the "case insensitive" modificator</p>

<p>$yes = "sì:si:s";
$regex = str_replace(':', '|', $yes);
$regex = "/($regex)/i";</p>

<p>what do you think?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-12-15T13:42:00.000+0000</p> 
        <div class="body">
            <p>That's not possible because several locales do not contain the abbreviation and read only</p>

<pre class="highlight"><code>
nein</code></pre>

<p>This would then produce failures.</p>

<p>The colon ':' is just an option which can be avaiable but it's not recommended as per definition of the cldr standard.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-12-15T14:25:41.000+0000</p> 
        <div class="body">
            <p>Integrated with SVN-7141.</p>

<p>See the new docu and the changed array informations.</p>

        </div>
    </div>
    </div>

