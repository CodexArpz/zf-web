<h2>ZF-1739: Allowed memory size of 16777216 bytes exhausted</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-07-18T08:18:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-08-01T03:23:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
            <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When I run this simple code:</p>

<pre class="highlight"><code>$mBio = new Litra_Model_Biography(); // extends Zend_Db_Table_Abstract

for ($i = 0; $i &lt; 10000000; $i++) 
{
  $mBio-&gt;insert(array('content' =&gt; time(), 'id_writer' =&gt; 1));
}</code></pre>

<p>after some numbers of iterations script dies with this fatal error:
??Fatal error: Allowed memory size of 16777216 bytes exhausted (tried to allocate 1464 bytes) in E:\web\lib\zendframework\Zend\Db\Adapter\Pdo\Abstract.php on line 585??</p>

<p>Database type: PDO_MYSQL
MySQL version: 5.0.24a-community</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-27T18:05:51.000+0000</p> 
        <div class="body">
            <p>By the way, inserting so much data in this manner is very inefficient.  Most RDBMS brands have some special facility for bulk loading of large quantities of rows.  MySQL has the {{LOAD DATA INFILE}} statement, which is about 20 times faster than using a loop of a large number of {{INSERT}} operations.</p>

<p>At the very least, you should wrap the loop in a single transaction so you don't incur overhead for committing each row separately, and you should also use multi-row {{INSERT}} syntax.  But it is very preferable to use {{LOAD DATA INFILE}}.</p>

<p>See <a href="http://dev.mysql.com/doc/refman/5.0/en/load-data.html">http://dev.mysql.com/doc/refman/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Roman (batoon) on 2007-07-28T01:00:05.000+0000</p> 
        <div class="body">
            <p>Thank you Bill. I will take all of your recommendations, but the overhead is still...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-31T18:42:15.000+0000</p> 
        <div class="body">
            <p>I have written a unit test in /tests/Zend/Db/Table/TestCommon.php, function {{testTableInsertMemoryUsageZf1739()}}.  This test is pretty slow, so I have marked it skipped by default, but if you want to run it just comment out the line in the test that calls {{markTestSkipped()}}.</p>

<p>It shows that the growth in memory from inserting 100000 rows is only about 512 bytes.  I don't think this growth continues, either.  That is, the memory increase levels off, and it is not proportional to the number of rows inserted.</p>

<p>I assume your application is already running other code that makes its memory usage very close to the maximum declared in the {{memory_limit}} value in your php.ini file.  Then when you insert a lot of rows, it is just too much.  So try increasing the {{memory_limit}}.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Roman (batoon) on 2007-08-01T03:23:42.000+0000</p> 
        <div class="body">
            <p>I found what the problem was. I was activated Zend_Db_Profiler... Thanks ;)</p>

        </div>
    </div>
    </div>

