<h2>ZF-8373: Zend_Reflection_Docblock_Tag_Return and _Param do not recognize arrays</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-11-23T08:05:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-26T17:36:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.11 (29/Sep/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Reflection</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12420/regex.patch">regex.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It's common (at least to me) to specify arrays in docblocks in either one of two ways:</p>

<pre class="highlight"><code>
/**
 * @param string[] $bar description
 */
function foo ($bar)
{}
</code></pre>

<pre class="highlight"><code>
/**
 * @param array(string) $bar description
 */
function foo ($bar)
{}
</code></pre>

<p>The actual implementation of Zend_Reflection_Docblock_Tag_Return and Zend_Reflection_Docblock_Tag_Param does not recognize these array specifications (but Zend_Server_Reflection does at least the first). Worse, if using one of these array specifications, neither the correct type nor the description are parsed correctly.</p>

<p>In case 1 the reflection would contain:
type =&gt; "string"
description =&gt; NULL</p>

<p>In case 2 the reflection would contain:
type =&gt; "array"
description =&gt; NULL</p>

<p>The regex used are</p>

<pre class="literal">
@param      ^@(\w+)\s+([\w|\\\]+)(?:\s+(\$\S+))?(?:\s+(.*))?
@return     ^@(\w+)\s+([\w|\\\]+)(?:\s+(.*))?
</pre>

<p>With the following regexes at least all components will be matched, whereas I don't know if it's sufficient.</p>

<pre class="literal">
@param      ^@(\w+)\s+([^\s]+)(?:\s+(\$\S+))?(?:\s+(.*))?
@return     ^@(\w+)\s+([^\s]+)(?:\s+(.*))?
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Daniel Kreuer (dkreuer) on 2009-11-23T08:09:28.000+0000</p> 
        <div class="body">
            <p>Patch file for described changes</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2011-08-26T17:36:28.000+0000</p> 
        <div class="body">
            <p>Fixed in r24405 of release branch 1.11 and in r24404 of trunk</p>

        </div>
    </div>
    </div>

