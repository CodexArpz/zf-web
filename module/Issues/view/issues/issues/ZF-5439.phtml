<h2>ZF-5439: Zend_Amf_Server::addFunction() throws exception when passed callback of object instance method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-09T10:44:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-14T18:59:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Amf_Server of ZF version 1.7.2 throws an exception when the addFunction() method is called with a callback containing an object instance method as in the following:</p>

<pre class="highlight"><code>
$server = new Zend_Amf_Server();
$server-&gt;addFunction(array($object, 'somePublicAMFResponderMethod'));
</code></pre>

<p>The exception message is simply "Unable to attach function".</p>

<p>It's clear within the addFunction() body why this occurs (for the first array element of $function, $func is an object, not a string or function):</p>

<pre class="highlight"><code>
        $function = (array) $function;
        foreach ($function as $func) {
            if (!is_string($func) || !function_exists($func)) {
                require_once 'Zend/Amf/Server/Exception.php';
                throw new Zend_Amf_Server_Exception('Unable to attach function');
            }
            $this-&gt;_methods[] = Zend_Server_Reflection::reflectFunction($func, $argv, $namespace);
        }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-04-03T23:32:24.000+0000</p> 
        <div class="body">
            <p>Hi, Darby.</p>

<p>Do you mean each message should be  different  one? 
For example, 
 the parameter is not string nor array,
 the parameter is not function name... etc</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2009-04-06T05:01:55.000+0000</p> 
        <div class="body">
            <p>No, I wasn't meaning that the exception message should be different based on the type of callback sent. The problem to which I refer in the description is that the addFunction() method claims to be able to accept a valid callback, but an essential callback form is not supported by the current code base. If a user supplies a valid callback using an object instance's method (e.g., {{array($object, 'somePublicMethod')}}), then Zend_Amf_Server throws an exception, because {{$object}} will pass neither the {{is_string()}} test nor the {{function_exists()}} test in the {{addFunction()}} body.</p>

        </div>
    </div>
    </div>

