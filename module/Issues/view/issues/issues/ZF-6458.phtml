<h2>ZF-6458: Zend_Application_Resource_Frontcontroller overwrites multiple controller directories</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-28T18:55:25.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-06T05:50:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.1 (12/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ken Stanley (dohpaz)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11921/patch">patch</a></li>
            <li><a href="/issues/secure/attachment/11902/Zend_Application_Resource_Frontcontroller.patch">Zend_Application_Resource_Frontcontroller.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is in reference to ticket ZF-6244, which I believe was misunderstood. Because Zend_Controller_Front::setControllerDirectory() clears any existing controller directories every time that it is invoked, using the foreach loop in Zend_Application_Resource_Frontcontroller:54, only the last directory in the array of controller directories will remain set, regardless of the uniqueness of the module =&gt; directory pairs you pass in. The solution that I see for this issue is to remove the foreach loop in the front controller resource, and just pass in the array (setControllerDirectory() accepts an array by default). I am using revision 15243 (1.8.0dev)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ken Stanley (dohpaz) on 2009-04-28T18:58:37.000+0000</p> 
        <div class="body">
            <p>This is a patch removes the condition check for if $value is a string and just passes $value to Zend_Controller_Front::setControllerDirectory().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-04-29T05:56:16.000+0000</p> 
        <div class="body">
            <p>What's odd is that setControllerDirectory() is not written such that it should overwrite -- and yet I just verified that it does.</p>

<p>As a workaround until this is fixed, I'd recommend keeping your modules under a common directory, and using the moduleDirectory configuration key instead of controllerDirectory.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ken Stanley (dohpaz) on 2009-04-29T06:09:50.000+0000</p> 
        <div class="body">
            <p>I was mistaken when I first made the report. It's not in Zend_Controller_Front::setControllerDirectory(). It's actually in Zend_Controller_Dispatcher_Standard::setControllerDirectory(). It's the first line of the method, and it assigns an empty array to $this-&gt;_controllerDirectory. Apologies for the confusion. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Lindeman (mightymax) on 2009-05-06T01:18:25.000+0000</p> 
        <div class="body">
            <p>IMHO this is a very high priority bug: for existing ZF based applications with multiple modules it's nearly impossible to upgrade to the 1.8 release.</p>

<p>To make the problem even more clear: using the new Zend_Application, if you create an .ini file with these lines:</p>

<p>{{[production]}}
{{includePaths.library = APPLICATION_PATH "/../library"}}
{{bootstrap.path = APPLICATION_PATH "/Bootstrap.php"}}
{{bootstrap.class = "Bootstrap"}}
{{resources.frontController.controllerDirectory.default = APPLICATION_PATH "/default/controllers"}}
{{resources.frontController.controllerDirectory.module1 = APPLICATION_PATH "/module1/controllers"}}</p>

<p>than the <em>Application_Resource_Frontcontroller</em> invokes the Frontcontroller's  <em>setControllerDirectory</em> which in turn invokes the  Dispatcher method <em>setControllerDirectory</em> which resets the internal __controllerDirectory_ array each time it's called.</p>

<p>The solution is really simple: Application_Resource_Frontcontroller should use <em>addControllerDirectory</em> in stead of <em>setControllerDirectory</em>. For your convenience I've attached a patch file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-06T05:50:54.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk and 1.8 release branch.</p>

        </div>
    </div>
    </div>

