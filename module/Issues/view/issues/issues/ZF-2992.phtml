<h2>ZF-2992: Label decorator sets provided class for label tag instead of block level tag</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-03-28T13:48:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-09-23T13:40:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Wojciech Naruniec (wojciech)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When option 'tag' is specified for Label decorator wraps label in that block level tag and if the 'class' option is provided it should set 'class' parameter for this block level tag. It doesn't work properly because it sets class for label element.</p>

<p>Sample code:</p>

<pre class="highlight"><code>
        $this-&gt;setElementDecorators(array(
            array('ViewHelper'),
            array('HtmlTag', array('tag' =&gt; 'dd', 'class' =&gt; 'half')),
            array('Label', array('tag'=&gt; 'dt', 'class' =&gt; 'half')),
        ));
</code></pre>

<p>It should generate:</p>

<pre class="highlight"><code>
name

</code></pre>

<p>instead of:</p>

<pre class="highlight"><code>
name

</code></pre>

<p>It's documented in <a href="http://framework.zend.com/manual/en/zend.form.standardDecorators.html#zend.form.standardDecorators.label">http://framework.zend.com/manual/en/…</a> docs.</p>

<p>Fix:</p>

<pre class="highlight"><code>
Index: Zend/Form/Decorator/Label.php
===================================================================
--- Zend/Form/Decorator/Label.php   (revision 9083)
+++ Zend/Form/Decorator/Label.php   (working copy)
@@ -296,14 +296,13 @@
         }
 
         if (!empty($label)) {
-            $options['class'] = $class;
             $label = $view-&gt;formLabel($element-&gt;getName(), trim($label), $options); 
         }
 
         if (null !== $tag) {
             require_once 'Zend/Form/Decorator/HtmlTag.php';
             $decorator = new Zend_Form_Decorator_HtmlTag();
-            $decorator-&gt;setOptions(array('tag' =&gt; $tag));
+            $decorator-&gt;setOptions(array('tag' =&gt; $tag, 'class' =&gt; $class));
             $label = $decorator-&gt;render($label);
         }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-31T15:27:02.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T11:31:59.000+0000</p> 
        <div class="body">
            <p>That makes no sense. The Label tag can be generated without a wrapping HTML tag, and your patch would remove the class in such a situation.</p>

<p>The class associated with the label decorator should, and does, associate the provided class with the label tag itself.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jean Rumeau (rumeau) on 2008-05-17T13:22:48.000+0000</p> 
        <div class="body">
            <p>im on this situation too, and as same as the element case i think this should be an option to the label too, because when setting HtmlTag on an element, i can set the class attribute to the new block wich contains the element, but i cant do the same with the label, maybe the Label decorator should provide a solution like HtmlTag does.</p>

<p>im aware that the fix posted here removes the option of setting the class on the label but as the label decorator makes use of the HtmlTag decorator, it should be possible to pass the class to the HtmlTag as an option right?</p>

<p>i think that would be a good solution..</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laura Dean (ldean) on 2009-06-15T11:37:55.000+0000</p> 
        <div class="body">
            <p>I'm in this situation, too, of wanting to add a class to the tag wrapping the label.  As the OP metioned, the documentation implies that this is possible:</p>

<p>You may optionally specify a 'tag' option; if provided, it wraps the label in that block-level tag. If the 'tag' option is present, and no label present, the tag is rendered with no content. You can specify the class to use with the tag with the 'class' option or by calling setClass().</p>

<p>If this is not possible, at least change the documentation...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Devoir Nicolas (nicolasd) on 2010-08-09T23:35:46.000+0000</p> 
        <div class="body">
            <p>Hello 
I would like a precision on one part of the code.
I m working on i18n and I ve got a problem when this decorator is translated :</p>

<pre class="highlight"><code>
public function getLabel()
    {
        if (null === ($element = $this-&gt;getElement())) {
            return '';
        }

        $label = $element-&gt;getLabel();
        $label = trim($label);

        if (empty($label)) {
            return '';
        }

        if (null !== ($translator = $element-&gt;getTranslator())) {
            $label = $translator-&gt;translate($label);
        }

        $optPrefix = $this-&gt;getOptPrefix();
        $optSuffix = $this-&gt;getOptSuffix();
        $reqPrefix = $this-&gt;getReqPrefix();
        $reqSuffix = $this-&gt;getReqSuffix();
        $separator = $this-&gt;getSeparator();

        if (!empty($label)) {
            if ($element-&gt;isRequired()) {
                $label = $reqPrefix . $label . $reqSuffix;
            } else {
                $label = $optPrefix . $label . $optSuffix;
            }
        }

        return $label;
    }
</code></pre>

<pre class="highlight"><code>
$label = $element-&gt;getLabel();
</code></pre>

<p>=&gt; this returns the tranlated value of the label</p>

<p>then</p>

<pre class="highlight"><code> 
if (null !== ($translator = $element-&gt;getTranslator())) {
    $label = $translator-&gt;translate($label);
}
</code></pre>

<p>=&gt; this returns the translation of the translated value of the label</p>

<p>Did I miss something or do I have got a double translation ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Toby Davis (tdavis) on 2011-09-23T13:25:13.000+0000</p> 
        <div class="body">
            <p>This continues to be an issue in version 1.11, is there a work around for adding attributes to the tag wrapped around the label?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-09-23T13:40:38.000+0000</p> 
        <div class="body">
            <p>@Toby
Use <a href="http://framework.zend.com/apidoc/core/_Form_Decorator_Label.html#%5CZend_Form_Decorator_Label::setTagClass()">Zend_Form_Decorator_Label::setTagClass()</a> or <a href="">www.zfforum.de/showthread.php?t=7813</a>" rel="nofollow"&gt;this tutorial in German.</p>

        </div>
    </div>
    </div>

