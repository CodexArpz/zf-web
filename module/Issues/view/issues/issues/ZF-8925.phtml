<h2>ZF-8925: Zend_Application. Invalid load order for $options['config']</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-25T05:13:07.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-25T11:45:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>now: $options = $this-&gt;mergeOptions($this-&gt;_loadConfig($options['config'], $options));</p>

<p>should be: $options = $this-&gt;mergeOptions($options, $this-&gt;_loadConfig($options['config']));</p>

<p>The same problem with array loader.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-01-25T11:44:51.000+0000</p> 
        <div class="body">
            <p>Actually, options passed in via the constructor <em>should</em> have precedence over those found in the configuration file, as they represent the greatest level of specificity. This is no different than applications that run on the CLI; options in the dotfile would be overridden by options passed via the CLI; in this case, the dotfile is our config file and the CLI is the script invoking Zend_Application.</p>

        </div>
    </div>
    </div>

