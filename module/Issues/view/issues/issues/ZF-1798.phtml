<h2>ZF-1798: Zend_Controller_Request_Http too liberal when retrieving parameter sources</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-08-01T13:16:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>_GET and _POST should not be consulted when retrieving request parameters in a front-controller, routed system.</p>

<p>@see <a href="http://www.nabble.com/Params-and-Post-vars-tf4075463.html#a11582825">http://nabble.com/Params-and-Post-vars-tf4075463.hâ€¦</a></p>

<p>I have a proposed fix:</p>

<pre class="highlight"><code>
In http request:
    protected $_paramSources = array('_GET', '_POST');
    
    public function setParamSources(Array $paramSources = array())
    {
        $this-&gt;_paramSources = $paramSources;
        return $this;
    }

    ... 

    // changes to getParams getParam
    public function getParam($key, $default = null)
    {
        $keyName = (null !== ($alias = $this-&gt;getAlias($key))) ? $alias : $key;

        if (isset($this-&gt;_params[$keyName])) {
            return $this-&gt;_params[$keyName];
        } elseif (in_array('_GET', $this-&gt;_paramSources) &amp;&amp; (isset($_GET[$keyName]))) {
            return $_GET[$keyName];
        } elseif (in_array('_POST', $this-&gt;_paramSources) &amp;&amp; (isset($_POST[$keyName]))) {
            return $_POST[$keyName];
        }

        return $default;
    }

    public function getParams()
    {
        $return = $this-&gt;_params;
        if (isset($_GET) &amp;&amp; is_array($_GET) &amp;&amp; in_array('_GET', $this-&gt;_paramSources)) {
            $return += $_GET;
        }
        if (isset($_POST) &amp;&amp; is_array($_POST) &amp;&amp; in_array('_POST', $this-&gt;_paramSources)) {
            $return += $_POST;
        }
        return $return;
    }

</code></pre>

<p>This also needs to be set as a FrontController parameter, since request creation happens at dispatch time.</p>

<p>But i think you know what to do.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-09-14T12:10:58.000+0000</p> 
        <div class="body">
            <p>The reason the request object pulls from $_GET and $_POST is so that if mod_rewrite (or a similar solution) is unavailable, requests may still be routed. Honoring your request would break this feature. Unless I can get a patch that addresses such a situation, I can't include this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2007-09-19T13:30:54.000+0000</p> 
        <div class="body">
            <p>Actually, its quite the opposite.  It behaves as it does now by default, but you have the option to remove specific param sources if you opt to, as i do ;)</p>

<p>So basically, in the bootstrap, i should be able to set an option to remove Get &amp; Post, and optionally, i can dig down in to the request object an specifically call $request-&gt;setParamSources(null);</p>

<p>This would not break BC, and, it is something I would suggest people do for security purposes.</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-11-16T14:44:29.000+0000</p> 
        <div class="body">
            <p>Scheduling for 1.1.0</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-20T22:27:51.000+0000</p> 
        <div class="body">
            <p>Committed to trunk.</p>

        </div>
    </div>
    </div>

