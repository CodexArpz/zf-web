<h2>ZF-4167: Zend_Db_Table_Row_Abstract does not properly rely on autoloading</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-09-02T19:46:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-14T05:44:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.2 (27/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Grady Kuhnline (heygrady2)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3991">ZF-3991</a></li>
            <li><a href="/issues/browse/ZF-6611">ZF-6611</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11736/Db_Table.diff">Db_Table.diff</a></li>
            <li><a href="/issues/secure/attachment/11783/zf-4167.diff">zf-4167.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Table_Row_Abstract-&gt;findDependentRowset() and Zend_Db_Table_Row_Abstract-&gt;findParentRow() rely on Zend_loader::loadClass() for loading dependent and parent tables. This makes it impossible to use autoloading to find these classes and forces the developer to add all paths that may contain DB Table class to be added to the include_path.</p>

<p>In my application I have a custom loader which I registered with Zend_Loader::registerAutoload('My_Model_Loader'). However this loader never gets fired when working with dependent and parent tables because autoloading is not used within Zend_Db_Table_Row_Abstract.</p>

<p>Autoloading should be used before directly trying to load a class. With the <a href="http://framework.zend.com/manual/en/zend.controller.modular.html">proposed MVC filder structure</a> there would be a model folders for each application module. Adding each model folder as an include path is less than ideal. Following a pattern similar to controller actions, it would be reasonable that someone would want to load a model from a specific module.</p>

<p>I'm able to get my application to work just fine by commenting out the try...catch that tries to load the class.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2009-01-23T00:14:49.000+0000</p> 
        <div class="body">
            <p>Linking these issue as they report the same problem</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2009-01-23T00:21:27.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>I would really like to see this included, also I believe this could become a blocker to <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Loader_Autoloader_Resource+-+Matthew+Weier+O%27Phinney">Matthews Resource Autoloader proposal </a> as this uses the autoloader.</p>

<p>Thx</p>

<p>Keith</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2009-02-07T09:40:36.000+0000</p> 
        <div class="body">
            <p>Attaching a patch for this issue, this is just a proof of concept for now and therefore no unit tests etc. This may be a good temporary fix until all the class loading problems have been sorted out.</p>

<p><em>Patch Purpose</em></p>

<p>Remove Zend_Loader dependency</p>

<p><em>Patch Details</em></p>

<ul><li>Added new protected static property $_loader</li>
<li>Added new public static method setLoader()</li>
<li>Added new public static method loadClass()</li>
<li>Added new public static method getLoader()</li>
<li>Added new protected static method _setupLoader()</li>
</ul><p><em>Patched From std trunk</em></p>

<p>The idea is that it works in a similar way to the setDefaultAdpater, the loader is either null (use autoloader) or a valid callback array. All the Zend_Db_Table classes then use Zend_Db_Table_Abstract::loadClass() to load their classes.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2009-03-04T04:46:47.000+0000</p> 
        <div class="body">
            <p>I am currently creating a new patch which is simpler after talking to Matthew about it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2009-03-05T05:15:39.000+0000</p> 
        <div class="body">
            <p>Right here is my second attempt at patching this issue :)</p>

<p>I have simplified by just wrapping the Zend_Loader class in class_exists that use the autoloader.</p>

<p>Patch is from the 1.7.6 release and includes:</p>

<p>Patched Db Table files
Unit tests
Documentation</p>

<p>Hopefully I have got it right, see what you think.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jamal Fanaian (jamal) on 2009-04-13T10:19:08.000+0000</p> 
        <div class="body">
            <p>This issue affects the use of the Zend_Application_Module_Autoloader in ZF 1.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Keith Pope (mute) on 2009-04-13T13:01:58.000+0000</p> 
        <div class="body">
            <p>The easiest way to fix this is to change the following in Loader.php</p>

<p>if (class_exists($class, false) || interface_exists($class, false)) {</p>

<p>to</p>

<p>if (class_exists($class) || interface_exists($class)) {</p>

<p>any ideas why it does not check the autoloader by default?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-05-14T05:44:49.000+0000</p> 
        <div class="body">
            <p>Resolved in trunk and 1.8 release branch</p>

        </div>
    </div>
    </div>

