<h2>ZF-10320: Ability to extends Zend_Db_Adapter_Abstract and subsequents classes (_Mysqli, _Oracle, etc.)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-08-16T06:47:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Claude Duvergier (cduv)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It would be great to be able to add some features (methods and members) to {{Zend_Db_Adapter_Abstract}} and to use it on derived classes such as {{Zend_Db_Adapter_Mysqli}}, {{Zend_Db_Adapter_Oracle}}, {{Zend_Db_Adapter_Pdo_Ibm}}, {{Zend_Db_Adapter_Pdo_Oracle}}, {{Zend_Db_Adapter_Pdo_Mysqli}}, ...</p>

<p>If I ever dare to extends {{Zend_Db_Adapter_Abstract}} by doing:</p>

<pre class="highlight"><code>
abstract class Cduv_Db_Adapter_Abstract extends Zend_Db_Adapter_Abstract
{
    public function myMethod ($arg)
    {
        //some work
    }
}
</code></pre>

<p>I can't use the method {{myMethod()}} because I cannot have an instance of {{Cduv_Db_Adapter_Abstract}} unless I create a class deriving from it (let's say {{Cduv_Db_Adapter}}), but this would leave me no choice to implements all abstract methods of {{Zend_Db_Adapter_Abstract}} (by an awful copy/paste).</p>

<p>It seems every components of the {{Zend_Db_Adapter}} package are too tied altogether.</p>

<p>I don't know if it's still the case in Zend Framework 2.0 models but if a solution exists for 1.x: I didn't succeeded to find it.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-09-16T14:01:48.000+0000</p> 
        <div class="body">
            <p>I am not sure where to start here.</p>

<p>Generally, if you want to add vendor specific functionality to an adapter, you'd extend the actual adapter.  So, Your_Db_Adapter_Mysqli would extends Zend_Db_Adapter_Mysqli and you'd instantiate that type.  What you are asking for here is not possible in PHP (or Java, or any language that follows a multiple interface, single inheritance class/type/object model).</p>

<p>In ZF 2.0, there will be a "plugin" architecture where you'll be able to hook into events that happen at specific times, for example pre-query and post-query time.</p>

<p>My question to you is this: what do you need the abstract adapter to do that it currently does not do?  And, is the functionality you are seeking within the domain of the problem that the Adapter is attempting to solve?</p>

<p>I am inclined to close as not-an-issue.</p>

        </div>
    </div>
    </div>

