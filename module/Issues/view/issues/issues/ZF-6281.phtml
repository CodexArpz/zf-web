<h2>ZF-6281: Zend_Dom_Query::_getNodeList() mishandles query arrays</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-04-12T21:21:17.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-21T09:46:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dom_Query</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6280">ZF-6280</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Dom_Query::query() calls Zend_Dom_Query_Css2XPath::transform(), which can return an array. It passes this as $xpathQuery to Zend_Dom_Query::queryXPath(), which passes it to Zend_Dom_Query::_getNodeList(). According to the docblock for this method, $xpathQuery may be a string or an array. However, this method explicitly casts $xpathQuery to a string, which results in that variable being equal to the string "Array" if the original value for $xpathQuery is an array.</p>

<p>In my opinion, it would be best for the sake of consistency to restrict $xpathQuery to be a string for both queryXPath() and _getNodeList() and to modify Zend_Dom_Query_Css2XPath::transform() so that it only ever returns a string.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2009-07-29T19:37:25.000+0000</p> 
        <div class="body">
            <p>Is it still alive after ZF-6280 fix?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2009-07-29T19:54:04.000+0000</p> 
        <div class="body">
            <p>Yes, this issue is still applicable. ZF-6280 only corrected API docblocks. This deals with corresponding source code. The reason that the two issues are related is because the fix from ZF-6280 (updating the API docblocks to reflect that the parameter/return types could be string or array) affects how this issue should be handled.</p>

<p>If both strings and arrays are to be allowed, line 207 of Zend/Dom/Query.php in trunk (in _getNodeList() where $xpathQuery is typecasted to a string) needs to be modified to handle actually allowing arrays rather than assigning the string 'Array' to $xpathQuery.</p>

<p>As a side note, it seems odd that _getNodeList() is even separated from queryXpath(), as the latter is the only thing that calls the former.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Victor Gryshko (hohol) on 2009-10-06T02:50:53.000+0000</p> 
        <div class="body">
            <p>I've resolved this issue on my end (ZF version 1.9.3) by using the following line in Css2Xpath.php (line 52)</p>

<p>return implode(' | ', $expressions);</p>

<p>instead of</p>

<p>return $expressions;</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-01-21T09:46:28.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk and 1.10 release branch</p>

        </div>
    </div>
    </div>

