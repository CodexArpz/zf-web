<h2>ZF-3715: Add an internal cache</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-07-22T12:40:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-24T22:12:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Till Klampaeckel (till)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_XmlRpc_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Quoting Matthew's email:
{quote}
A colleague of mine in a different division at Zend extended
Zend_XmlRpc_Server_Request to add caching ability. IIRC, he
created a map of methods that were cacheable, and would introspect the
request to see if the requested method matched; if so, he could either
return a cached response, or after the service was complete cache the
result.</p>

<p>The fun part is that this can actually be done <em>before</em> you instantiate
the server and attach classes, which can have tremendous performance
benefits.
{quote}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Till Klampaeckel (till) on 2009-10-24T20:22:54.000+0000</p> 
        <div class="body">
            <p>No update? ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-24T22:12:14.000+0000</p> 
        <div class="body">
            <p>Nope, no update. Unfortunately, the code was never conveyed to me.</p>

<p>Changes to the rpc classes make this easier -- the addition of Zend_Server_Definition makes it possible to theoretically provide this type of hinting. However, we would need to introduce some sort of plugin/observer system to the server class as well to accomodate it. Honestly, it's a big enough endeavor to warrant a proposal at this time.</p>

        </div>
    </div>
    </div>

