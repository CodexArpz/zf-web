<h2>ZF-11973: Zend_Db_Statement execute alters variables</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-01-05T20:46:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-08T15:45:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                The Lone Coder (loconut)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is tested in a ZF 1.11.10 app on Ubuntu 10.04 LTS (with stock PHP and zend-framework package, not Zend Server/CE)</p>

<pre class="highlight"><code>
    public function bugTestAction()
    {
        $this-&gt;_helper-&gt;layout-&gt;disableLayout();
        $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender();
        header('Content-type: text/plain');
        echo 'Zend Framework version: ' . Zend_Version::VERSION . PHP_EOL;
        $foo = (int)3;
        echo 'Type before stmt: ' . gettype($foo) . PHP_EOL;
        $db = new Application_Model_DbTable_Clients();
        $stmt = $db-&gt;getAdapter()-&gt;prepare('SELECT * FROM `client` WHERE 3 = :bound');
        $stmt-&gt;bindParam(':bound', $foo);
        echo 'Type after bind: '  . gettype($foo) . PHP_EOL;
        $stmt-&gt;execute();
        echo 'Type after execute: '  . gettype($foo) . PHP_EOL;
    }

output:
Zend Framework version: 1.11.10
Type before stmt: integer
Type after bind: integer
Type after execute: string
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by The Lone Coder (loconut) on 2012-01-05T20:56:33.000+0000</p> 
        <div class="body">
            <p>While I realize it is passed by reference (perhaps to save copying/memory), I'm not sure I understand why the variable needs to be altered, especially to change types.</p>

<p>In the case I ran into this- I have a variable that if you pass in an integer it uses a fixed record id, and if you pass in a string it does a fuzzy search. After doing -&gt;execute and -&gt;fetchAll, if we did a fixed id, we're only going to get one record so rather than return the array of one result, I'd return the one result. To do this I checked again whether the variable was still is_int and of course it no longer was. In practice, I could probably replace is_int with is_numeric, but I'm left curious about the variable being altered.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by The Lone Coder (loconut) on 2012-01-05T20:58:11.000+0000</p> 
        <div class="body">
            <p>from the PDO manual "Most parameters are input parameters, that is, parameters that are used in a read-only fashion to build up the query. Some drivers support the invocation of stored procedures that return data as output parameters, and some also as input/output parameters that both send in data and are updated to receive it."</p>

<p>This seems to imply it should be read only as in this case it is not receiving data?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by The Lone Coder (loconut) on 2012-01-05T20:59:39.000+0000</p> 
        <div class="body">
            <p>I guess this is a PDO "Bug" noted at least 3 years back.
<a href="http://www.php.net/manual/en/pdostatement.bindparam.php#94711">http://php.net/manual/en/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by The Lone Coder (loconut) on 2012-01-05T21:10:03.000+0000</p> 
        <div class="body">
            <p>Even manually specifying the type as int does not help.</p>

<pre><code>public function bugTestAction()
{
    $this-&gt;_helper-&gt;layout-&gt;disableLayout();
    $this-&gt;_helper-&gt;viewRenderer-&gt;setNoRender();
    header('Content-type: text/plain');
    echo 'Zend Framework version: ' . Zend_Version::VERSION . PHP_EOL;
    $foo = (int)3;
    echo 'Type before stmt: ' . gettype($foo) . PHP_EOL;
    $db = new Application_Model_DbTable_Clients();
    $stmt = $db-&gt;getAdapter()-&gt;prepare('SELECT * FROM `client` WHERE 3 = :bound');
    $stmt-&gt;bindParam(':bound', $foo, PDO::PARAM_INT);
    echo 'Type after bind: '  . gettype($foo) . PHP_EOL;
    $stmt-&gt;execute(); // $foo becomes string!
    echo 'Type after execute: '  . gettype($foo) . PHP_EOL;
}
</code></pre>

<p>Zend Framework version: 1.11.10
Type before stmt: integer
Type after bind: integer
Type after execute: string</p>

        </div>
    </div>
    </div>

