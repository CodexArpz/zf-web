<h2>ZF-3178: Two more Standard Validator needed</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-04-25T14:17:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-31T23:50:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.1 (12/May/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jason Qi (jason qi)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When validating register form, two validations are always needed:</p>

<p>1) Check user name availability
2) Check password and re enter password(or emails) matching</p>

<p>Christer has done 2) in his blog:
<a href="http://cogo.wordpress.com/2008/04/16/custom-validators-for-zend_form_element/">http://cogo.wordpress.com/2008/04/â€¦</a></p>

<p>I have done 1) in my project as a custom validator.</p>

<p>But I think it is nice that these two validators could be ship with ZF as standard validator.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Christer Edvartsen (cogo) on 2008-04-26T02:40:19.000+0000</p> 
        <div class="body">
            <p>To implement 1) you would need to have some sort of interface that the end users of ZF would have to implement though. It's impossible to make a generic validator for that since pretty much everyone has their own setup regarding user accounts.</p>

<p>I have implemented something like that but the class I have written will only work for my setup. If you could make a generic validator along with a small interface with a single method:</p>

<p>public function isTaken($userName);</p>

<p>or something like that, I guess it could be more simple to use. But 2) would be great to have in ZF I think.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jason Qi (jason qi) on 2008-04-26T14:38:41.000+0000</p> 
        <div class="body">
            <p>For 1), What I did is writing a custom validator, similar with other validators.</p>

<p>The end user can use it without any difference to other validators. i.g. AddValidator('CheckAvailability' , false, array('user', 'username')). Where the 'user' is the table name and 'username' is the field name in the table.</p>

<p>In isValid($value) function, just check if there is a record in table 'user' and the value of field 'username' match $value.</p>

<p>And you are right, this is just for "DB Table Adapter", but I believe there should be a solution to combine other adapters together.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-09T12:42:07.000+0000</p> 
        <div class="body">
            <p>Please evaluate and fix/categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-03-31T23:49:27.000+0000</p> 
        <div class="body">
            <p>For DB there is a validator within the incubator almost finished and probably ready for 1.8.
For the second "password" matching you should eighter use the Identical (incubator) or InArray validator.
Both can compare form element values with a given string.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-03-31T23:50:47.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue as for both already solution are ready or almost finished and independently proposed.</p>

        </div>
    </div>
    </div>

