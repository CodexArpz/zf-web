<h2>ZF-7038: wrong post parameter generation on uploading file(s)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-17T23:09:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-20T14:33:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Shahar Evron (shahar)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you upload a file using Zend_Http_Client::setFileUpload multi-dimensional post parameter will de wrong generated</p>

<p>testcode:</p>

<pre class="highlight"><code>
require_once 'Zend/Http/Client.php';
$httpClient = new Zend_Http_Client('<a href="http://google.de">http://google.de</a>');

$postArr = array(
    'v0.1',
    'v0.2',
    'k1' =&gt; 'v1.0',
    'k2' =&gt; array(
        'v2.1',
        'k2.1' =&gt; 'v2.1.0'
    )
);
$httpClient-&gt;setParameterPost(
    'test',
    $postArr
);
$httpClient-&gt;setFileUpload(__FILE__, 'file');
$httpClient-&gt;request('POST');
var_dump($httpClient-&gt;getLastRequest());
</code></pre>

<p>expected request</p>

<pre class="highlight"><code>
...
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[]"

v0.1
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[]"

v0.2
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[k1]"

v1.0
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[k2][]"

v2.1
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[k2][k2.1]"

v2.1.0
..
</code></pre>

<p>actual request:</p>

<pre class="highlight"><code>
...
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[]"

v0.1
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[]"

v0.2
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[]"                   &lt;----- WRONG

v1.0
-----ZENDHTTPCLIENT-22ee54bc98cf014e123099996fef9a4d
Content-Disposition: form-data; name="test[]"                   &lt;----- WRONG

Array                                                           &lt;----- WRONG
...
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2009-06-18T01:23:41.000+0000</p> 
        <div class="body">
            <p>Patch for Zend_Http_Client::getParametersRecursive</p>

<pre class="highlight"><code>
    protected function _getParametersRecursive($parray, $urlencode = false)
    {
        if (!is_array($parray)) {
            return $parray;
        }

        $parameters = array();
        $query = http_build_query($parray, '', '&amp;');
        foreach (explode('&amp;', $query) as $qpart) {
            list($pname, $pval) = explode('=', $qpart);
            if (!$urlencode) {
                $pname = urldecode($pname);
                $pval  = urldecode($pval);
            }
            $parameters[] = array($pname, $pval);
        }

        return $parameters;
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2009-07-20T14:32:15.000+0000</p> 
        <div class="body">
            <p>Resolved in CS-16898</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2009-07-20T14:33:41.000+0000</p> 
        <div class="body">
            <p>Thanks for reporting and for the patch. I didn't use it because http_build_query() improperly adds numeric keys to the query string, which might cause conflicts for some web servers.</p>

        </div>
    </div>
    </div>

