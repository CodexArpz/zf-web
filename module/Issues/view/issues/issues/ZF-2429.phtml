<h2>ZF-2429: Controller Module Bug</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-01-13T20:44:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-20T11:07:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                wangbo (wangbo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1808">ZF-1808</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I use Controller Module: article, blog and so on. but no default module. because I don't want to use default controller.</p>

<p>when I request a url like '<a href="http://www.foobar.com/article/contents/add">http://www.foobar.com/article/contents/add</a>', I get some error messenge:</p>

<p>Notice: Undefined index: default in C:\web\zend\library\Zend\Controller\Dispatcher\Standard.php on line 330</p>

<p>I think that default module should be optional.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michal Minicki (martel) on 2008-01-14T06:31:20.000+0000</p> 
        <div class="body">
            <p>If you don't use a "default" module, then you should point to a module that is default for you (the one you're accessing by root '/') because that's how the framework works at the moment. For instance:</p>

<pre class="highlight"><code>
$dispatcher-&gt;setDefaultModule('blog');
</code></pre>

<p>But after looking at the code, I guess Dispatcher would be a good candidate for refactoring. The method which throws an error does too much in my opinion. It's name and signature - getControllerClass(Zend_Controller_Request_Abstract $request) - suggests it returns controller class using Request object. But in fact, it does a lot more (and shouldn't). It could return a class name mid way and what follows should be refactored into more appropriate places.</p>

<p>This shouldn't be happening there:</p>

<pre class="highlight"><code>
        $controllerDirs      = $this-&gt;getControllerDirectory();
        $this-&gt;_curModule    = $this-&gt;_defaultModule;
        $this-&gt;_curDirectory = $controllerDirs[$this-&gt;_defaultModule];
        $module = $request-&gt;getModuleName();
        if ($this-&gt;isValidModule($module)) {
            $this-&gt;_curModule    = $module;
            $this-&gt;_curDirectory = $controllerDirs[$module];
        } else {
            $request-&gt;setModuleName($this-&gt;_curModule);
        }
</code></pre>

<p>Matthew, I could give this class a revamp. Making sure it works as expected and passes all the unit tests. Everything I need is just a green light from you.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by wangbo (wangbo) on 2008-01-14T19:14:29.000+0000</p> 
        <div class="body">
            <p>I have a question.</p>

<p>if I code: $dispatcher-&gt;setDefaultModule('blog');</p>

<p>then the controller name will be IndexController, not be Blog_IndexController</p>

<p>I think that above two names should be allowed for more consistency.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-01-29T12:42:38.000+0000</p> 
        <div class="body">
            <p>Duplicates ZF-1808.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-20T11:07:30.000+0000</p> 
        <div class="body">
            <p>Resolved in trunk. Passing the front controller or dispatcher parameter 'prefixDefaultModule' will ensure the controllers in the default module are namespaced.</p>

        </div>
    </div>
    </div>

