<h2>ZF-900: Zend_Db_Expr: class to hold fragments of SQL</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-02-09T15:25:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.2 (06/Apr/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-278">ZF-278</a></li>
            <li><a href="/issues/browse/ZF-139">ZF-139</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Feature request for a way to represent fragments of SQL including expressions.</p>

<p>The issue is that in contexts like quoteInto(), insert(), update(), delete(), and several methods of Zend_Db_Select, there is no way to reliably distinguish between a strings that should be quoted from strings that should not be quoted.</p>

<p>For example, in Zend_Db_Select::from(), one can name the columns to query.  Column names should be quoted as delimited identifers, and prepended with the correlation name.</p>

<pre class="highlight"><code>
$select-&gt;from( array('tablename' =&gt; 't1), array('columnName') );
</code></pre>

<p>Results in</p>

<pre class="highlight"><code>
SELECT t1."columnName"
FROM "tablename" t1
</code></pre>

<p>(assuming "" is the standard delimited identifier quoting)</p>

<p>But there are cases where an expression is given, which should not be quoted or prepended with a correlation name:</p>

<pre class="highlight"><code>
$select-&gt;from( array('tablename' =&gt; 't1), array('columnName', 'COUNT(*)') );
</code></pre>

<p>Should result in</p>

<pre class="highlight"><code>
SELECT t1."columnName", COUNT(*)
FROM "tablename" t1
</code></pre>

<p>To make the distinction, it is requested to implement a simple class {{Zend_Db_Expr}} that contains a single string.  Methods in Zend_Db classes should distinguish between this class and simple string values.  Usage would be as follows:</p>

<pre class="highlight"><code>
$select-&gt;from( array('tablename' =&gt; 't1), array('columnName', new Zend_Db_Expr('COUNT(*)')) );
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-16T17:35:19.000+0000</p> 
        <div class="body">
            <p>Changed class name from Zend_Db_Expression to Zend_Db_Expr.</p>

<p>Implemented class and starting to use it in Zend Framework 0.8.
However, there should be more support for it in other classes and methods, so I'm not counting this issue as resolved until later.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-04-04T14:05:29.000+0000</p> 
        <div class="body">
            <p>As of ZF 0.9.2, the chief usage of Zend_Db_Expr is in place.</p>

        </div>
    </div>
    </div>

