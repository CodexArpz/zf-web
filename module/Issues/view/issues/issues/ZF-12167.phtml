<h2>ZF-12167: Backport to ZF 1.x</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2012-04-23T02:37:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-23T14:07:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Gabriel Schuster (g.schuster)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A backport to ZF 1.x would be very helpful as for now one has to overload all adapters to use the fallback routing with plurals.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-04-23T13:44:49.000+0000</p> 
        <div class="body">
            <p>There are no plans to do this, in large part due to the fact that the support required BC breaks in order to implement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gabriel Schuster (g.schuster) on 2012-04-23T14:07:22.000+0000</p> 
        <div class="body">
            <p>Well, there could be a simple solution: make it dependent on a static variable.
When the variable is set to TRUE it useses the BC-breaking correct $origMsgId, otherwise it behaves as currently expected.
Currently it is an undesirable situation where one has to copy <em>all</em> adapters to his own lib just to override the translate() method with the fixed version whereas my suggested fix would be as simple as calling Zend_Translate::useFixForBug11173(TRUE);</p>

<p>Without fixing or copying all adapters one has to check in <em>every</em> call to translate (with plurals) if the returned value is a string or an array.
A real show-stopper for any new (bigger) project.</p>

<p>Implementation code for the fix:</p>

<p>117: protected $_translate = array();
+<br />
+    protected static $_useFixForBug11173 = FALSE;
+<br />
+    public static function useFixForBug11173($useFix = FALSE) {
+        self::$_useFixForBug11173 = (bool)$useFix;
+    }
+<br />
+    public static function getFixForBug11173() {
+        return self::$_useFixForBug11173;
+    }</p>

<p>705: - $plural = null;
705: + $plural            = NULL;
+      $originalMessageId = $messageId;</p>

<p>732: - return $this-&gt;translate($messageId, $this-&gt;_options['route'][$locale]);
732: + return $this-&gt;translate(self::$_useFixForBug11173 ? $originalMessageId : $messageId, $this-&gt;_options['route'][$locale]);</p>

<p>790: - return $this-&gt;translate($messageId, $this-&gt;_options['route'][$locale]);
790: + return $this-&gt;translate(self::$_useFixForBug11173 ? $originalMessageId : $messageId, $this-&gt;_options['route'][$locale]);</p>

        </div>
    </div>
    </div>

