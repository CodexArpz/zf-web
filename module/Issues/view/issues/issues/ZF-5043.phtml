<h2>ZF-5043: problem supporting array form on ZendX_JQuery_Form_Element_DatePicker </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-11-24T07:32:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-12-14T07:08:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jean Rumeau (rumeau)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>ZendX_JQuery</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_JQuery_Form_Element_DatePicker seems to have problem with array ID's.</p>

<p>As Zend_Form_Subform are by default treated as array, any element inside the subform will be an element of the array subform</p>

<pre class="highlight"><code>
</code></pre>

<p>This cause the datepicker to not work in the above element.</p>

<p>This can be solved disabling the form as array</p>

<pre class="highlight"><code>
Zend_Form::setIsArray(false);
</code></pre>

<p>Wich suppress the array style:</p>

<pre class="highlight"><code>
</code></pre>

<p>Making the datepicker to work correctly.</p>

<p>But i think this must be supported by the form element, as someone would like to keep using the array notation in the forms, to separate subforms.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-11-25T07:58:53.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>i need more input on this. I have a subform example <a href="http://www.beberlei.de/jquery/demo/formdemo.php">http://www.beberlei.de/jquery/demo/formdemo.php</a>
which doesnt automatically create form arrays.</p>

<p>Can you help me to reproduce it?</p>

<p>I know why it fails when going with subarrays though. You should post me the javascript errors that are generated and i can confirm that jQuery maybe does not like $("#subform1[element1]")</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jean Rumeau (rumeau) on 2008-12-13T09:16:51.000+0000</p> 
        <div class="body">
            <p>The array notation is eliminated when definig the id in the form, but if you create the form element as is, within a subform, it will set the id automatically to subform[elementid]</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-01-05T05:42:35.000+0000</p> 
        <div class="body">
            <p>Relaying a comment for someone who can't comment... same error goes for the slider as well.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-01-07T14:43:31.000+0000</p> 
        <div class="body">
            <p>I am very sorry, i cannot get it to work such that this problem does appear.</p>

<p>Could you please provide a simple test-case that produces array notation using ZendX_JQuery_Form? That would be very nice. I try some more...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-01-07T14:56:46.000+0000</p> 
        <div class="body">
            <p>I know have a testcase of the following sort:</p>

<pre class="highlight"><code>
    /**
     * @group ZF-5043
     */
    public function testFormWithoutIdButSubformsProducesArrayNotationWhichWontWork()
    {
        $view = new Zend_View();
        $form = new ZendX_JQuery_Form();

        $datePicker = new ZendX_JQuery_Form_Element_DatePicker("dp1");

        $subform = new Zend_Form_SubForm();
        $subform-&gt;addElement($datePicker);

        $form-&gt;addSubForm($subform, "sf1");
        $form-&gt;setIsArray(true);

        var_dump($form-&gt;render($view));
        var_dump($view-&gt;jQuery()-&gt;__toString());
    }
</code></pre>

<p>it produces the following output:</p>

<pre class="highlight"><code>
</code></pre><code> </code><code> 

"
string(353) "
</code>

<p>It does produce the sf1-dp1 ID and talks to it correctly in the jQuery helper output. It works in Firefox for me. For me this issue is closed unless a clear testcase is provided that makes this bug reproducable.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2010-12-14T07:06:56.000+0000</p> 
        <div class="body">
            <p>(I came across this issue when trying to solve the problem of using jQueryUI Date Picker with an array field name, so I thought I would add my solution for posterity)</p>

<p>You can fix this problem and still keep the array syntax for the field name (ie: for a date+time picker combination element) by overriding the ID attribute:</p>

<pre class="highlight"><code>
// Method 1: Direct Creation
$datePicker = new ZendX_JQuery_Form_Element_DatePicker("MyCompoundElement[date]");
$datePicker-&gt;setAttrib('id', "MyCompoundElement-DatePicker");
echo $datePicker-&gt;render();

// Method 2: Using ZendX_JQuery_View_Helper_DatePicker
// (from within a view script)
echo $this-&gt;datePicker("MyCompoundElement[date]", 0, array(), array('id'=&gt;"MyCompoundElement-DatePicker"))
</code></pre>

<p>This will create the following HTML output:</p>

<pre class="highlight"><code>
 

</code></pre>

<p>and (assuming the jQuery helper is set up properly) the following javascript in the document header:</p>

<pre class="highlight"><code>
$(document).ready(function() {
    $("#MyCompoundElement-DatePicker").datepicker({});
});
</code></pre>

<p>Hope this helps,</p>

        </div>
    </div>
    </div>

