<h2>ZF-1471: Zend_Search_Lucene::open() throws fatal error if index does not exist</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-05-31T22:32:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC2 (08/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When attempting to open a Zend_Search_Lucene index that does not exist a PHP fatal error is thrown instead of an exception.</p>

<p>I am attempting to retrieve an index, first by trying to open it and then by trying to create it, throwing and catching Zend_Search_Lucene exceptions in the process.</p>

<pre class="highlight"><code>
protected function getIndex()
{
    try {
        $index = Zend_Search_Lucene::open($this-&gt;_indexPath);
   } catch (Zend_Search_Lucene_Exception $e) {
       try {
    $index = Zend_Search_Lucene::create($this-&gt;_indexPath);
       } catch(Zend_Search_Lucene_Exception $e) {
    $index = false;
       }
   }
   return $index;
}
</code></pre>

<p>However, the ::open method throws a fatal error, making such try and catch tactics futile.</p>

<p>The fatal error is actually thrown by the Zend_Search_Lucene_Proxy::close() method from the class destructor, which tries to commit the index on script end. Since the index does not exist a fatal error is thrown:</p>

<pre class="highlight"><code>
<b>Fatal error</b>:  Call to a member function close() on a non-object in <b>C:\Server\htdocs\Octabox

\library\Zend\Search\Lucene\Proxy.php</b> on line <b>71</b>
</code></pre>

<p>I tried to overcome the fatal error by throwing an exception if the index is not set in the Zend_Search_Lucene_Proxy::close() method, changing the method to:</p>

<pre class="highlight"><code>
if(isset($this -&gt; _index)){
        $this-&gt;_index-&gt;close();
        $this-&gt;_index = null;
 } else {
        throw new Zend_Search_Lucene_Exception('Index is null');
 }
</code></pre>

<p>But then a different fatal error is thrown... :</p>

<pre class="highlight"><code>
<b>Fatal error</b>:  Ignoring exception from Zend_Search_Lucene_Proxy::__destruct() while an exception

 is already active (Uncaught Zend_Search_Lucene_Exception in C:\Server\htdocs\Octabox\library\Zend\Search

\Lucene\Storage\File\Filesystem.php on line 63) in <b>C:\Server\htdocs\Octabox\library\Zend\Search\Lucene

.php</b> on line <b>166</b><br /></code></pre>

<p>So for now I removed the exception throwing, leaving the isset check in place. This seems to work, but its a very temporary solution.
Could you offer a different method to gracefully open/create an index until you resolve this issue?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-07T11:27:32.000+0000</p> 
        <div class="body">
            <p>Assign to Alexander.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2007-06-07T12:23:00.000+0000</p> 
        <div class="body">
            <p>This problem is already fixed with <a href="http://framework.zend.com/fisheye/changelog/Zend_Framework?cs=5122">Changeset 5122</a> as a part of <a href="http://framework.zend.com/issues/browse/ZF-1492">ZF-1492</a>.</p>

<p>Please try current SVN version or wait for v1.0 RC2.</p>

        </div>
    </div>
    </div>

