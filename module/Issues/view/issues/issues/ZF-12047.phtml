<h2>ZF-12047: Zend_Cache_Backend_File cache_file_umask and hashed_directory_umask are not umasks but octal permissions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-02-09T11:55:28.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-12T21:31:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Benoit Dubertret (benoitdub)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
            <li>zf-caretaker-adamlundrigan</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-11633">ZF-11633</a></li>
            <li><a href="/issues/browse/ZF-320">ZF-320</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14958/ZF-12047.patch">ZF-12047.patch</a></li>
            <li><a href="/issues/secure/attachment/14939/ZF-12047.patch">ZF-12047.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The documentation and class uses the name "umask" for what is not an umask (see umask(2) man page for the definition : "umask()  sets  the calling process's file mode creation mask (umask) to mask &amp; 0777"). Rather, the Zend_Cache_Backend_File uses the option "cache_file_umask" to chmod  (<a href="http://php.net/chmod">http://php.net/chmod</a>) the file. In effect this is an octal permission definition rather than a umask.</p>

<p>This is quite misleading.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-02-22T23:29:04.000+0000</p> 
        <div class="body">
            <p>Indeed.  I've updated the documentation (inline and manual) to make note of the fact that the option name contains 'umask' but intent is actually octal file mode:</p>

<pre class="highlight"><code>

Index: library/Zend/Cache/Backend/File.php
===================================================================
--- library/Zend/Cache/Backend/File.php (revision 24626)
+++ library/Zend/Cache/Backend/File.php (working copy)
@@ -71,7 +71,8 @@
      * for you. Maybe, 1 or 2 is a good start.
      *
      * =====&gt; (int) hashed_directory_umask :
-     * - Umask for hashed directory structure
+     * - Mode to chmod hashed directory structure to
+     *   NOTE: ensure you use an octal file mode (chmod) and not a umask value
      *
      * =====&gt; (string) file_name_prefix :
      * - prefix for cache files
@@ -79,7 +80,8 @@
      *   (like /tmp) can cause disasters when cleaning the cache
      *
      * =====&gt; (int) cache_file_umask :
-     * - Umask for cache files
+     * - Mode to chmod cache files to
+     *   NOTE: ensure you use an octal file mode (chmod) and not a umask value
      *
      * =====&gt; (int) metatadatas_array_max_size :
      * - max size for the metadatas array (don't change this value unless you
Index: documentation/manual/en/module_specs/Zend_Cache-Backends.xml
===================================================================
--- documentation/manual/en/module_specs/Zend_Cache-Backends.xml        (revision 24626)
+++ documentation/manual/en/module_specs/Zend_Cache-Backends.xml        (working copy)
@@ -95,7 +95,7 @@
                         hashed_directory_umaskInteger0700
-                        Umask for the hashed directory structure
+                        Mode that directories in the hashed directory structure are chmoded to
@@ -115,7 +115,7 @@
                         cache_file_umaskInteger0600
-                        umask for cache files
+                        Mode that cache files are chmoded to
@@ -131,6 +131,13 @@
                 
             
         
+
+        
+            A note about cache_file_umask and hashed_directory_umask
+            
+                Despite having 'umask' in their names, these options set the octal file mode which will be passed to the chmod PHP function.  Be aware that you are not mistakenly passing a umask value, which is the inverse of the file mode.  The file mode defines the permissions to grant, whereas umask defines the permissions not to grant.
+            
+        </code></pre>

<p>Thoughts?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-03-10T10:05:02.000+0000</p> 
        <div class="body">
            <p>moved to Zend_Cache</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-03-10T10:59:22.000+0000</p> 
        <div class="body">
            <p>Added patch:
 - added *_perm options
 - *_umask triggers E_USER_DEPRECATED error
   and move value to *_perm options</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-03-12T21:29:37.000+0000</p> 
        <div class="body">
            <p>fixed for 1.12 in r24677 (trunk)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-03-12T21:31:00.000+0000</p> 
        <div class="body">
            <p>note: triggers E_USER_NOTICE instead of E_USER_DEPRECATED because E_USER_DEPRECATED doesn't exist on PHP &lt; 5.3</p>

        </div>
    </div>
    </div>

