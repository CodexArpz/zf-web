<h2>ZF-11432: Provide a mechanism to load library code that works with filenames in the same way as classes are loaded.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-06-03T11:56:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-07T15:14:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello.</p>

<p>If you have classes and a library of functions, you may file them in the same directory structure.</p>

<p>e.g.</p>

<p>For an abstract class called Util_TypedArray and its Util_TypedArray_Exception class:</p>

<pre class="highlight"><code>
/Util/TypedArray.php
/Util/TypedArray/Exception.php
</code></pre>

<p>For generic string and array function libraries:</p>

<pre class="highlight"><code>
/Util/Library/Array.php
/Util/Library/String.php
</code></pre>

<p>Internally, Zend_Loader converts Util_TypedArray into /Util/TypedArray.php.</p>

<p>My patch (<a href="http://framework.zend.com/code/diff.php?repname=Zend+Framework&amp;path=%2Ftrunk%2Flibrary%2FZend%2FLoader.php">http://framework.zend.com/code/diff.php/â€¦</a>&amp;) exposes this conversion as a public static method.</p>

<p>This allows me to code something like this ...</p>

<pre class="highlight"><code>
&lt;?php
// $Id: arrayColumnExtract.php,v 1.0.4 2011-05-04T14:09:43+01:00 RichardQ $

require_once 'Zend/Loader/Autoloader.php';
$o_ZendLoaderAutoLoader = Zend_Loader_Autoloader::getInstance();

/**
 * Include the Array library.
 */
include_once Zend_Loader::standardiseFile('Util_Library_Array');}}
</code></pre>

<p>Allowing the same userland naming convention/structure of classes and libraries.</p>

<p>How do I get this code part of the next release?</p>

<p>Regards,</p>

<p>Richard Quadling.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Richard Quadling (rquadling) on 2011-08-07T15:14:00.000+0000</p> 
        <div class="body">
            <p>I'm wondering if the method should be called normaliseFile() (or normalizeFile() depending upon consensus).</p>

<p>With the various ongoing discussions on autoloading functions in the PHP Internals mailing list, a normalize method could be used for all things being autoloaded (interfaces, traits, classes and potentially functions, as well as libraries as I've demonstrated here).</p>

        </div>
    </div>
    </div>

