<h2>ZF-316: Zend_Config - add helper function for returning type value</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-08-12T06:41:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Uros (sekundek)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10091/library.diff">library.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I've created some helper functions getFloat, getBoolean,getString,getInteger to get values from config with right type.</p>

<p>For example</p>

<p>$config-&gt;getBoolean('database.debug');</p>

<p>I also add second parameter, where you can specify value in case it's missing in config (like some sort of default value)</p>

<p>I can add patch for Zend_Config in case this would get into trunk. If not It can always be extendable in your own class if such function is needed.</p>

<p>regards</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2006-08-12T15:21:51.000+0000</p> 
        <div class="body">
            <p>Isn't it just easier to cast after the retrieval for the few times you need to worry about it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andries Seutens (andries) on 2006-08-14T04:25:34.000+0000</p> 
        <div class="body">
            <p>Agreed. Casting is the way to go here...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Uros (sekundek) on 2006-08-16T04:28:46.000+0000</p> 
        <div class="body">
            <p>What about default value? Many app have option to just override what you need.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2006-08-16T04:34:55.000+0000</p> 
        <div class="body">
            <p>There is certainly an argument for a getWithDefault() type function. That's not this Issue though.</p>

<p>I've added it to the Zend_Config enhancements wiki page (<a href="http://framework.zend.com/wiki/display/ZFDEV/Zend_Config">http://framework.zend.com/wiki/display/â€¦</a>) but I can't think of a good interface at the moment.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Uros (sekundek) on 2006-08-16T05:26:46.000+0000</p> 
        <div class="body">
            <p>With default values I add this get*** methods and while I was writing this I add those helper functions.</p>

<p>I know this is maybe two different things here. But casting every thime I get some data from config. I know it's cleaner way to use jutst
(string)$config-&gt;some-&gt;config. But I use config from Java and I thought that Zend_Config could use such helper functions.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2006-08-16T05:32:13.000+0000</p> 
        <div class="body">
            <p>The thing is, you rarely need to cast in PHP: it'll sort out the type appropriately for the situation.</p>

<p>e.g.</p>

<p>config.ini:
    [general]
    debug = 1</p>

<p>$config = new Zend_Config(new Zend_Config_Ini('config.ini', 'general'));</p>

<p>$debug = $config-&gt;debug;</p>

<p>if($debug == true)
{
   // we end up in here as string of "1" is converted to true by PHP
}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Uros (sekundek) on 2006-08-17T01:21:38.000+0000</p> 
        <div class="body">
            <p>What about just get function?</p>

<p>public function get($name,$default=null)</p>

<p>Here you can use defaults.</p>

        </div>
    </div>
    </div>

