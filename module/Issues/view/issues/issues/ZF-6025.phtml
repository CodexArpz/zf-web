<h2>ZF-6025: Redirector Helper contains hardcoded action/module/controller parameters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-03-13T09:47:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-02T20:21:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.6 (05/May/11)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Kim Blomqvist (kblomqvist)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13840/Redirector.patch">Redirector.patch</a></li>
            <li><a href="/issues/secure/attachment/13843/RedirectorTest.patch">RedirectorTest.patch</a></li>
            <li><a href="/issues/secure/attachment/13841/RedirectorTest.patch">RedirectorTest.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have implemented a custom routing and my action parameter isn't "action" but something different. This is all handled inside my routing stuff and works just fine. Unfortunately the redirector helper is hardcoded to "action" in setGotoSimple().</p>

<p>The following patch fixes it for me:</p>

<pre class="highlight"><code>
--- a/wcp/3rd/Zend/Controller/Action/Helper/Redirector.php
+++ b/wcp/3rd/Zend/Controller/Action/Helper/Redirector.php
@@ -269,9 +269,9 @@ class Zend_Controller_Action_Helper_Redirector extends Zend_Controller_Action_He
             }
         }

-        $params['module']     = $module;
-        $params['controller'] = $controller;
-        $params['action']     = $action;
+        $params[Zend_Controller_Front::getInstance()-&gt;getRequest()-&gt;getModuleKey()]     = $module;
+        $params[Zend_Controller_Front::getInstance()-&gt;getRequest()-&gt;getControllerKey()] = $controller;
+        $params[Zend_Controller_Front::getInstance()-&gt;getRequest()-&gt;getActionKey()]     = $action;

         $router = $this-&gt;getFrontController()-&gt;getRouter();
         $url    = $router-&gt;assemble($params, 'default', true);
</code></pre>

<p>I just started with Zend Framework and this might not be the best fix but it works for me ;) But i am sure you get the problem i am facing.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-03-16T01:24:35.000+0000</p> 
        <div class="body">
            <p>Good one, I think the patch looks good.
Perhaps FC should'nt come from the singleton but from the Controller.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andreas Streichardt (mop) on 2011-04-20T15:03:46.000+0000</p> 
        <div class="body">
            <p>this (quite easyly fixable) bug is in here since 2 years and i still have to apply my fix for every ZF Update. Could somebody please fix that? :|</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-04-22T11:11:36.000+0000</p> 
        <div class="body">
            <p>Add patch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-04-29T14:16:44.000+0000</p> 
        <div class="body">
            <p>Seems like a good, straightforward fix to me.  My only reservation is that it changes the expected behavior of that function, so I would like to see a member of the ZF team comment on the change.  That said, in my eyes, it's an internal process that applications built upon ZF shouldn't be depending directly on, so I don't see possibility of a BC break here.</p>

<p>One suggestion:  Use $this-&gt;getFrontController() instead of Zend_Controller_Front::getInstance() to maintain consistency with the rest of the class.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-04-29T14:21:56.000+0000</p> 
        <div class="body">
            <p>bq. One suggestion: Use $this-&gt;getFrontController() instead of Zend_Controller_Front::getInstance() to maintain consistency with the rest of the class.</p>

<p>The patch does not call Zend_Controller_Front::getInstance(). The Request object is already available there and it has been used to get module, controller, action key names.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-05-02T18:11:52.000+0000</p> 
        <div class="body">
            <p>@Kim:
Apologies.  I was looking at the bug description, not the attached patch file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-05-02T20:21:18.000+0000</p> 
        <div class="body">
            <p>Patch reviewed and applied to trunk and 1.11 release branch.</p>

        </div>
    </div>
    </div>

