<h2>ZF-5072: Java cannot handle &lt;part name=&quot;getStaticStringReturn&quot; type=&quot;xsd:string&quot; /&gt;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-26T03:17:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-02-16T14:06:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Soap_Wsdl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11659/ZF-5046.diff">ZF-5046.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I created a soap service with Zend_Soap_Server and Zend_Soap_AutoDiscover to provide my functionality to non-php-applications. We couldn´t get it working for Java so we searched for the problem and created the same service in java and created a wsdl definition from this java service. We compared both wsdl definitions and changed all differences in wsdl definition created by Zend_Soap_AutoDiscover until we found the problem.</p>

<p>Java seems to cannot handle this:</p>

<pre class="highlight"><code>
So we changed it to: </code></pre>

<p>After we´ve changed it we could consume my soap service without any problems. Don´t know why java has problems with "getStaticStringReturn". We found many different name-attribute values and no definition that it <em>must</em> be "return". We also tested the modified wsdl definition with Zend_Soap_Client and it works fine.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jan Pieper (jpieper) on 2008-11-26T03:18:18.000+0000</p> 
        <div class="body">
            <p>Added diff to solve problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-11-26T21:43:46.000+0000</p> 
        <div class="body">
            <p>What do you mean by "java seems to cannot handle this". Which particular WSDL to Java Generators did you test?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jan Pieper (jpieper) on 2008-11-27T08:52:26.000+0000</p> 
        <div class="body">
            <p>We created java classes with wsimport (<a href="https://jax-ws.dev.java.net/jax-ws-ea3/docs/wsimport.html">https://jax-ws.dev.java.net/jax-ws-ea3/docs/…</a>) from our wsdl definition what was created by Zend_Soap_AutoDiscover. After we could not consume data with the created java classes (we were clueless why at this moment), we setup the same soap service in java and created a wsdl definition by jax-ws. After that we compared both wsdl definitions and the main difference between these both definitions was the change I mentioned above.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-12-11T06:28:17.000+0000</p> 
        <div class="body">
            <p>Implemented a new function setResponseMessageReturnNameCompability, which calls all return message parts "return" when set to true.</p>

<p>This "hackish" implementation is needed for backwards compability reasons, since we cannot prove that it still works for all other cases. This is madness sadly, but steems from the problematic AutoDiscover implementation in the first place.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-02-16T14:05:58.000+0000</p> 
        <div class="body">
            <p>Implemented a simpler bugfix that acknoweldges that "return" is the SOAP/WSDL Standard, whereas other naming schemas are to be handled as "bug".</p>

        </div>
    </div>
    </div>

