<h2>ZF-8028: Get the YoutubeUser from ClientLogin</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-10-07T09:49:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Gdata</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12298/youtube-internal-username.diff">youtube-internal-username.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently Youtube api provides authentication by [youtube-username, password] or by [gmail-useremail, gmail-password].
That's good, but sometimes makes troubles. Let's consider example:
I logged in through ClientLogin by gmail-useremail and gmail-password. But further to deal with api I need specify youtube-username instead  gmail-useremail.
For instance, retrieving own videos  Youtube api expects only youtube-username, not gmail-useremail. How can I get that youtube-username logging  in by gmail account? I know the Youtube.com in this case returns YouTubeUser with Auth token ( see Zend_Gdata_ClientLogin::getHttpClient 146-153 ). But how can I get it in my code? It seems to me patching the ZF a little ( to save the YouTuberUser also with Auth token) is that way.</p>

<p>Thanks</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Eugene (smileua) on 2009-10-12T06:46:47.000+0000</p> 
        <div class="body">
            <p>This patch allows to retrieve the internal Youtube username from auth requests (in case you are registered by gmail account and authenticated by gmail email/password).</p>

<p>There are couple notices here:
 - Retrieving ClientLogin instance you have to provide to Zend_Gdata_ClientLogin::getHttpClient  $loginUri as ''<a href="https://www.google.com/youtube/accounts/ClientLogin">https://google.com/youtube/accounts/â€¦</a>'' instead of ''<a href="https://www.google.com/accounts/ClientLogin">https://www.google.com/accounts/ClientLogin</a>'' (the otherwise Youtube will not provide internal username)
 - Also in Zend_Gdata_ClientLogin::getHttpClient you have to provide $client as instance of Zend_Gdata_YoutubeHttpClient (instances of Zend_Gdata_HttpClient don't know how to get internal youtube username) or to leave as null (in this case Zend_Gdata_ClientLogin::getHttpClient automatically creates required client type)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Eugene (smileua) on 2009-10-13T02:19:10.000+0000</p> 
        <div class="body">
            <p>I've attached patch that can fetch Youtube internal username, let's see an example</p>

<pre class="highlight"><code>

// IMPORTANT!!!
$authenticationURL = "https://<a href="www.google.com/youtube/accounts/ClientLogin">www.google.com/youtube/accounts/ClientLogin</a>";
$client = new Zend_Gdata_YoutubeHttpClient();

$httpClient = Zend_Gdata_ClientLogin::getHttpClient(
                                         "user@gmail.com", $password,
                                         $service = "youtube",
                                         $client,
                                         $source, 
                                         $loginToken = null,
                                         $loginCaptcha = null,
                                         $authenticationURL
                                                                                );
if ( $httpClient instanceof Zend_Gdata_YoutubeHttpClient ){
   $internalYoutubeUsername = $httpClient-&gt;getActualYoutubeUsername();
   // $internalYoutubeUsername is something like 'youtubeuser', so you can do
   $api = new Zend_Gdata_YouTube( $httpClient, $applicationId, $clientId, $developerKey );
   $api-&gt;getUserUploads ( $internalYoutubeUsername );
   // though last is same as $api-&gt;getUserUploads ( 'default' );
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:38.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

