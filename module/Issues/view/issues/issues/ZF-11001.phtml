<h2>ZF-11001: Better UTF-16 support for PDF Metadata stored in Document Information Dictionary (DID)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-01-27T00:30:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-27T00:49:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently in the DID, Zend_Pdf treats certain metadata properties specially. Namely: Title, Author, Subject, Keywords, Creator, Producer, ModDate, CreationDate. The non-date fields will be re-encoded as UTF-16 if they should be. However, the PDF standard specifies <em>all</em> metadata should be in either ASCII or UTF-16.</p>

<p>If you are managing metadata with Zend_Pdf, it is confusing (and should not be necessary) to have to treat your custom metadata fields separately from the Zend-handled fields listed above. Further, custom data should adhere to the PDF standard (whether or not the user knows it). For consistency and standards, Zend_Pdf should encode all data that needs to be as UTF-16.</p>

<p>Attaching patches that accomplish this. Feedback welcome.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Chris Hiestand (dimmer) on 2011-01-27T00:37:14.000+0000</p> 
        <div class="body">
            <p>How does one attach files? I can't find the option. So I'm attaching patches inline to this comment.</p>

<p>--- Pdf.orig.php    2011-01-26 23:18:21.000000000 -0800
+++ Pdf.php 2011-01-26 23:59:57.000000000 -0800
@@ -1226,12 +1226,6 @@
                     case 'Creator':
                         // break intentionally omitted
                     case 'Producer':
-                        if (extension_loaded('mbstring') === true) {
-                            $detected = mb_detect_encoding($value);
-                            if ($detected !== 'ASCII') {
-                                $value = "\xfe\xff" . mb_convert_encoding($value, 'UTF-16', $detected);
-                            }
-                        }
                         $docInfo-&gt;$key = new Zend_Pdf_Element_String((string)$value);
                         break;</p>

<p>--- String.orig.php 2011-01-26 23:18:39.000000000 -0800
+++ String.php  2011-01-27 00:05:27.000000000 -0800
@@ -70,7 +70,15 @@
      */
     public function toString($factory = null)
     {
-        return '(' . self::escape((string)$this-&gt;value) . ')';
+      $value = $this-&gt;value;
+      if (extension_loaded('mbstring') === true) {
+          $detected = mb_detect_encoding($value);
+          if (!empty($detected) and $detected !== 'ASCII') {
+              $value = "\xfe\xff" . mb_convert_encoding($value, 'UTF-16', $detected);
+          }
+      }
+<br />
+        return '(' . self::escape((string)$value) . ')';
     }</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Hiestand (dimmer) on 2011-01-27T00:49:38.000+0000</p> 
        <div class="body">
            <p>I couldn't escape all the wiki formatting characters, but you get the point here...</p>

<p>--- Pdf.orig.php   2011-01-26 23:18:21.000000000 -0800
+++ Pdf.php 2011-01-26 23:59:57.000000000 -0800
@@ -1226,12 +1226,6 @@
                     case 'Creator':
                         // break intentionally omitted
                     case 'Producer':
-                        if (extension_loaded('mbstring') === true) {
-                            $detected = mb_detect_encoding($value);
-                            if ($detected !== 'ASCII') {
-                                $value = "\xfe\xff" . mb_convert_encoding($value, 'UTF-16', $detected);
-                            }
-                        }
                         $docInfo-&gt;$key = new Zend_Pdf_Element_String((string)$value);
                         break;</p>

<p>--- String.orig.php    2011-01-26 23:18:39.000000000 -0800
+++ String.php  2011-01-27 00:05:27.000000000 -0800
@@ -70,7 +70,15 @@
      */
     public function toString($factory = null)
     {
-        return '(' . self::escape((string)$this-&gt;value) . ')';
+      $value = $this-&gt;value;
+      if (extension_loaded('mbstring') === true) {
+          $detected = mb_detect_encoding($value);
+          if (!empty($detected) and $detected !== 'ASCII') {
+              $value = "\xfe\xff" . mb_convert_encoding($value, 'UTF-16', $detected);
+          }
+      }
+<br />
+        return '(' . self::escape((string)$value) . ')';
     }</p>

        </div>
    </div>
    </div>

