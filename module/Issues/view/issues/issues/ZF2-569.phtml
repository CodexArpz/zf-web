<h2>ZF2-569: Validate error with ,0 in I18n\Float</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-09-18T13:05:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-09-20T09:31:51.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>2.0.0 (06/Sep/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Leandro Silva (lansoweb)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\I18n</li>
            <li>locale</li>
            <li>validating</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The float validator works as expected with numbers endind with ,x where x&gt;0, but with ,0 (or ,00 ,000 so on) it fails. With the following diff on FloatTest.php the test fails:
83c83</p>

<h2>&lt;         $this-&gt;assertEquals(true, $this-&gt;validator-&gt;isValid('10,5'));</h2>

<blockquote>
<pre><code>    $this-&gt;assertEquals(true, $this-&gt;validator-&gt;isValid('10,0'));
</code></pre>
</blockquote>

<p>That's because the following line 113 in Zend\I18n\Validator\Float.php returns 10 and not 10.0
        $parsedFloat = $format-&gt;parse($value, NumberFormatter::TYPE_DOUBLE);</p>

<p>So the comparison in the line 128
        if (strval($parsedFloat) !== $valueFiltered) {</p>

<p>fails because 10 !== 10.0</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Philipp Dobrigkeit (pdobrigkeit) on 2012-09-19T10:13:20.000+0000</p> 
        <div class="body">
            <p>This is very annoying. Experienced it myself. Wrote a Unit-Test, but have no idea which would be the best way to fix it. Hoping for some feedback on github.</p>

<p><a href="https://github.com/zendframework/zf2/pull/2386">https://github.com/zendframework/zf2/pull/2386</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Leandro Silva (lansoweb) on 2012-09-19T12:53:35.000+0000</p> 
        <div class="body">
            <p>I added the following code in Zend\I18n\Validator\Float.php and now all tests works as expected, including 
125a126,130</p>

<blockquote>
<pre><code>    while (strpos($valueFiltered,'.') !== false &amp;&amp; ($valueFiltered[strlen($valueFiltered)-1] == '0' || $valueFiltered[strlen($valueFiltered)-1] == '.'))
    {
        $valueFiltered = substr($valueFiltered, 0, strlen($valueFiltered)-1);
    }
</code></pre>
</blockquote>

<p>I made a pull request with this proposed fix:
<a href="https://github.com/zendframework/zf2/pull/2388">https://github.com/zendframework/zf2/pull/2388</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Leandro Silva (lansoweb) on 2012-09-20T09:31:51.000+0000</p> 
        <div class="body">
            <p>Fixed and already merged into master and develop: <a href="https://github.com/zendframework/zf2/pull/2388">https://github.com/zendframework/zf2/pull/2388</a></p>

        </div>
    </div>
    </div>

