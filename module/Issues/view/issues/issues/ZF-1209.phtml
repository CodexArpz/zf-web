<h2>ZF-1209: use my own adapter in Zend_Translate</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-04-05T11:05:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.2 (06/Apr/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Philippe Le Van (philippe.levan)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'd like to use my own adapter with Zend_Translate but in Zend_Translate. I can't because Zend_Translate instanciates itself the adapter class.</p>

<p>Is it possible to add a function for dependency injection which allows me to use my own adapter ? something like :</p>

<pre class="highlight"><code>
function setCustomAdapter(Zend_Translate_Adapter $customAdapter)
{
    $this-&gt;_adapter = $customAdapter;
}
</code></pre>

<p>Then I can use my own adapter with this code :</p>

<pre class="highlight"><code>
$myAdapter = new MyAdapter('path/to/mytranslation.csv', 'fr');
$translate = new Zend_Translate();
$translate-&gt;setCustomAdapter($myAdapter);
</code></pre>

<p>Is it possible to add this kind of mecanism ?
Regards, Philippe</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Philippe Le Van (philippe.levan) on 2007-04-05T11:20:03.000+0000</p> 
        <div class="body">
            <p>Actually, I believe the better would be to change the api and say that we can use Zend translate with this kind of code :</p>

<pre class="highlight"><code>
$translate = new Zend_Translate(new Zend_Translate_Adapter_Csv('path/to/mytranslation.csv', 'de'));
</code></pre>

<p>Best regards, Philippe</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-04-05T14:30:55.000+0000</p> 
        <div class="body">
            <p>Actualy we are supporting all needed adapters and plan to add 3-4 additionaly. See the proposals page.</p>

<p>There is no known other common adapter. If you are in need of additional propritary adapters you can extend Zend_Translate yourself and implement them this way.</p>

<p>The intention is that all users can use all known adapters. It would be nonsense if adapters have to be created by the users.</p>

<p>Related to your second comment... this was discussed by the devteam and it was decided to use the actual way. What you mentioned is not tool friendly. Within the I18N API there is no class which acts like this way. We also have to look to be consistency with existing code/API.</p>

<p>And you can use the Adapter directly without the base translation class. This works already.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-04-05T14:41:55.000+0000</p> 
        <div class="body">
            <p>The class can be extended very easily.</p>

        </div>
    </div>
    </div>

