<h2>ZF-2547: Validator displays password for field types of 'password'</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-01T14:53:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-11T11:16:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Kevin Schroeder (kschroeder)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Creating a form with a password field that has a validator will cause the password to be printed on the screen in an error message if the password supplied fails validation.</p>

<p>Form from Config
[default]
action=/
method=post
elements.username.type = "text"
elements.username.options.label = "Username"
elements.username.options.validators.alnum.validator = "alnum"
elements.username.options.validators.regex.validator = "regex"
elements.username.options.validators.regex.options.pattern = "/^[a-z]/i"
elements.username.options.validators.strlen.validator = "StringLength"
elements.username.options.validators.strlen.options.min = "6"
elements.username.options.validators.strlen.options.max = "20"
elements.username.options.required = true
elements.username.options.filters.lower.filter = "StringToLower"
elements.password.type = "password"
elements.password.options.label = "Password"
elements.password.options.validators.strlen.validator = "StringLength"
elements.password.options.validators.strlen.options.min = "6"
elements.password.options.validators.strlen.options.max = "20"
elements.password.options.required = true
elements.submit.type="submit"</p>

<p>IndexController::indexAction()
        $formConfig = new Zend_Config_Ini('form.login.ini', 'default');</p>

<pre><code>    $form = new Zend_Form($formConfig);
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        echo $form-&gt;isValid($_POST)?'Valid':'Not Valid';
    }
    $this-&gt;view-&gt;form = $form;
</code></pre>

<p>If the password is entered as "asdf" the error prints out as</p>

<p>'asdf' is less than 6 characters long</p>

<p>This can (and should) be viewed as a security risk.  The password should be left blank if a validator is used for a password field.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-01T15:08:41.000+0000</p> 
        <div class="body">
            <p>Updating to include the Zend_Validate component, as this isn't specific to Zend_Form.</p>

<p>A number of validators include the original value passed to them when creating error messages. We should likely have a way to suppress such functionality on demand; if we did, the Password form element could set this on validators prior to running isValid().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-01T16:02:05.000+0000</p> 
        <div class="body">
            <p>One possibility is to modify Zend_Form_Element_Password::getMessages() to strip out the value:</p>

<pre class="highlight"><code>
// use raw value, as that is what is sent to validator
$value    = $this-&gt;getRawValue();
$messages = array();
foreach ($this-&gt;_messages as $key =&gt; $message) {
    $messages[$key] =&gt; str_replace($value, '', $message);
}
return $messages;
</code></pre>

<p>While not an ideal solution, it would likely only be used once per request. It is prone to potential error.</p>

<p>For now, you can very easily modify the messages by passing a 'messages' option to the validator options, with key value pairs of error codes =&gt; messages (this can be done from a config, as well).</p>

<p>Additionally, you can use a Zend_Translate_Adapter to translate error codes to messages; when you attach a translate adapter to a form, it will then translate the error messages accordingly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Schroeder (kschroeder) on 2008-02-01T16:09:49.000+0000</p> 
        <div class="body">
            <p>Yeah, I've used my own code to work around that with deployable code, but now that it's being merged with what will probably be a very popular module (Building forms from a config file = brilliant)  I think it would be a good idea to have a way to hide the password.  I can help out with that, of course, but I think it would be prudent to have it added before 1.5 goes GA.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by James Scherer (jscherer26) on 2008-02-04T16:56:38.000+0000</p> 
        <div class="body">
            <p>I would suggest substituting *'s for each character in the $value string as the default. Seeing</p>

<p>'****' is less then 6 characters long</p>

<p>seems more intuitively understandable for the user then</p>

<p>'' is less then 6 characters long</p>

<p>which suggests a programming problem in my opinion.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-11T11:16:32.000+0000</p> 
        <div class="body">
            <p>Done as of r7916.</p>

        </div>
    </div>
    </div>

