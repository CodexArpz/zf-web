<h2>ZF-1846: New function: Zend_Mail_Part::getHeaderField()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2007-08-13T21:28:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-01-23T18:28:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.2 (25/Sep/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Willie Alberty (willie)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Nico Edtinger (nico)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This patch adds a new convenience function to Zend_Mail_Part for extracting header fields, eliminating the need to manually parse headers. Examples:</p>

<pre class="highlight"><code>
// instead of:
$contentType = strtok($message-&gt;contentType, ';');

// use this:
$contentType = $message-&gt;getHeaderField('content-type');
$charSet = $message-&gt;getHeaderField('content-type', 'charset');
</code></pre>

<pre class="highlight"><code>
// get attachment filename
$fileName = $part-&gt;getHeaderField('content-disposition', 'filename');
</code></pre>

<pre class="literal">
Index: tests/Zend/Mail/MessageTest.php
===================================================================
--- tests/Zend/Mail/MessageTest.php (revision 6075)
+++ tests/Zend/Mail/MessageTest.php (working copy)
@@ -67,6 +67,41 @@
         $this-&gt;assertEquals($message-&gt;subject, 'multipart');
     }
 
+    public function testGetHeaderFieldSingle()
+    {
+        $message = new Zend_Mail_Message(array('file' =&gt; $this-&gt;_file));
+        $this-&gt;assertEquals($message-&gt;getHeaderField('subject'), 'multipart');        
+    }
+
+    public function testGetHeaderFieldDefault()
+    {
+        $message = new Zend_Mail_Message(array('file' =&gt; $this-&gt;_file));
+        $this-&gt;assertEquals($message-&gt;getHeaderField('content-type'), 'multipart/alternative');        
+    }
+
+    public function testGetHeaderFieldNamed()
+    {
+        $message = new Zend_Mail_Message(array('file' =&gt; $this-&gt;_file));
+        $this-&gt;assertEquals($message-&gt;getHeaderField('content-type', 'boundary'), 'crazy-multipart');        
+    }
+
+    public function testGetHeaderFieldMissing()
+    {
+        $message = new Zend_Mail_Message(array('file' =&gt; $this-&gt;_file));
+        $this-&gt;assertNull($message-&gt;getHeaderField('content-type', 'foo'));        
+    }
+
+    public function testGetHeaderFieldInvalid()
+    {
+        $message = new Zend_Mail_Message(array('file' =&gt; $this-&gt;_file));
+        try {
+            $message-&gt;getHeaderField('fake-header-name', 'foo');
+        } catch (Zend_Mail_Exception $e) {
+            return;
+        }
+        $this-&gt;fail('No exception thrown while requesting invalid field name');
+    }
+
     public function testGetDecodedHeader()
     {
         $message = new Zend_Mail_Message(array('file' =&gt; $this-&gt;_file));
Index: library/Zend/Mail/Part.php
===================================================================
--- library/Zend/Mail/Part.php  (revision 6075)
+++ library/Zend/Mail/Part.php  (working copy)
@@ -317,6 +317,30 @@
 
         return $header;
     }
+    
+    /**
+     * Get a specific field from a header.
+     *
+     * If the header occurs more than once, only the value from the first header
+     * is returned.
+     *
+     * Throws a Zend_Mail_Exception if the requested header does not exist. If
+     * the specific header field does not exist, returns null.
+     *
+     * @param  string $headerName
+     * @param  string $fieldName  (optional) If empty or omitted, returns the
+     *   value of the primary field (the first, unnamed field).
+     * @return string
+     * @throws Zend_Mail_Exception
+     */
+    public function getHeaderField($headerName, $fieldName = '')
+    {
+        $headers = $this-&gt;getHeader($headerName, 'array');
+        if (empty($fieldName)) {
+            $fieldName = '__ZEND__PRIMARY__FIELD__NAME__';  // use an unlikely string
+        }
+        return Zend_Mime_Decode::splitHeaderField($headers[0], $fieldName, '__ZEND__PRIMARY__FIELD__NAME__');
+    }
 
 
     /**
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Willie Alberty (willie) on 2007-08-13T22:00:52.000+0000</p> 
        <div class="body">
            <p>Included tests in patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-08-14T00:18:14.000+0000</p> 
        <div class="body">
            <p>Assigned to Nico</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Nico Edtinger (nico) on 2007-08-26T13:07:06.000+0000</p> 
        <div class="body">
            <p>The default name for the first part is the same as in splitHeaderField(): 0. It's already a very unlikely field name.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-01-23T18:28:49.000+0000</p> 
        <div class="body">
            <p>Updating Fix Version to follow issue tracker conventions.</p>

        </div>
    </div>
    </div>

