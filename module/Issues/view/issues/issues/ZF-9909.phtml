<h2>ZF-9909:  Statement containing both parentheses and AS clause</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-05-28T12:33:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Example SELECT statement is like this:</p>

<p>SELECT CAST(column_name AS UNSIGNED) FROM table1</p>

<p>Code I used was:</p>

<ol><li>$select = $db-&gt;select()</li>
<li>-&gt;from(array('table1'),</li>
<li>array('CAST(column_name AS UNSIGNED)',</li>
<li>);</li>
</ol><p>which did not work - error returned, was: Could not find "table1.CAST(column_name" field. As we know, if there is a parentheses inside the clause, it is considered to be a Zend_Db_Expr. But on the other hand, the existence of "AS" clause messes things up, making it think we have a field-name-alias here, which we don't. Its just CAST function's syntax. Of course I overcame the problem by explicitly telling it we are having Zend_Db_Expr with this code which worked:</p>

<ol><li>$select = $db-&gt;select()</li>
<li>-&gt;from(array('table1'),</li>
<li>array('column_name' =&gt; new Zend_Db_Expr('CAST(column_name AS UNSIGNED)'))                 </li>
<li>);</li>
</ol><p>Question for developers of ZF is: Shouldn't you guys not touch any clauses, including AS clause, inside the statement which contains parentheses - the same way you do with Zend_Db_Expr objects? Statements with parentheses are considered to be Zend_Db_Expr objects, but at the same time they are not...</p>

<p>Shehi</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Artem Stepin (nemesis2010) on 2010-05-28T13:15:27.000+0000</p> 
        <div class="body">
            <p>If you add 'as column_name' in the column definition, it should work also without Zend_Db_Expr</p>

<pre class="highlight"><code>
$select = $db-&gt;select()-&gt;from(
    array('table1'),
    array('CAST(column_name AS UNSIGNED) as column_name')
);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahriyar Imanov (shehriyari) on 2010-05-28T16:43:05.000+0000</p> 
        <div class="body">
            <p>Dorogoy Artyom, then why on Earth would I use Zend_Db at all?! Didn't you know that AS column_name does not work in most RDBMS's, including MSSQL? The main reason for me in using Zend_Db is because it abstracts Db management via Factory pattern, it keeps the code clean and it makes sure devs never write SQL/query, instead they model/design it.</p>

<p>Anyway, I believe your solution is very wrong and misleading when it comes to Zend Db.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Artem Stepin (nemesis2010) on 2010-05-29T01:53:07.000+0000</p> 
        <div class="body">
            <p>Ok, I didn't know that. I only tried to use different Zend_Db_Adapter's and those given me a similar output.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahriyar Imanov (shehriyari) on 2010-05-29T12:59:53.000+0000</p> 
        <div class="body">
            <p>Oh thats ok brother, sorry I bashed on you like this :) Guess I was tired of long day's work... Thanks for your feedback nevertheless!</p>

        </div>
    </div>
    </div>

