<h2>ZF-1512: loadClass() fails when $dirs contains '.'</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-06-07T11:37:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Very minor bug, it can happen if zend framework is in the include path and when using (.) in the directories that loader will have to search.</p>

<p>Please ignore if you consider it as not important.</p>

<h2>Example :</h2>

<p>Put framework in your include path</p>

<pre class="highlight"><code>
$zend_path   = '/home/seb/lib';
ini_set('include_path', ini_get('include_path') . PATH_SEPARATOR . $zend_path);
</code></pre>

<p>Just add to the array of directories a . (point meaning current dir).</p>

<p>Zend framework is in {{/home/seb/lib/Zend}}</p>

<pre class="highlight"><code>
$dirs = array('.', '/home/seb/lib');      &lt;=== current directory : '.' at the beginning.
Zend_Loader::loadClass('Zend_Db', $dirs);
</code></pre>

<p>-----&gt;  warning : Zend_Loader::include_once('./Zend/Db.php') : failed to open stream: No such file or directory...
   ----&gt;  Fails with  Exception("File DB.php was loaded but class \"$class\" was not found in the file");</p>

<p>but? that  works :</p>

<pre class="highlight"><code>
$dirs = array('/home/seb/lib', '.');         &lt;=== current directory : '.' at the end.
Zend_Loader::loadClass('Zend_Db', $dirs);
</code></pre>

<p>Reason the method {{Zend_Loader::loadClass()}} will try first to test the existence of the first possible file.  For this it relies on {{Zend_Loader::isReadable()}}</p>

<p>Look at the code in loadFile method:</p>

<pre class="highlight"><code>
foreach ($dirs as $dir) {
    $filespec = rtrim($dir, '\\/') . DIRECTORY_SEPARATOR . $filename;
    if (self::isReadable($filespec)) {
        return self::_includeFile($filespec, $once);
    }
}

</code></pre>

<p>In the first example, the first dir that will be tested is</p>

<pre class="highlight"><code>
self::isReadable('./Zend/Db.php'); 
</code></pre>

<p>Does it exists? No, but the method isReadable will answer yes which is not expected.</p>

<p>Look at the code of {{Zend_Loader::isReadable('./Zend/Db.php')}}</p>

<pre class="highlight"><code>
$path = get_include_path();
$dirs = explode(PATH_SEPARATOR, $path);

foreach ($dirs as $dir) {
    if ('.' == $dir) {
        continue;
    }
    if (is_readable($dir . DIRECTORY_SEPARATOR . $filename)) {
        return true;
    }
}

</code></pre>

<p>Because of Zend Framework is in include_path, the file will be added to ZF path like :</p>

<pre class="highlight"><code>
is_readable( '/home/seb/lib' . DIRECTORY_SEPARATOR . './Zend/Db.php') ---&gt; Yes !!!
</code></pre>

<p>And the method {{isReadable('./Zend/Db.php')}}  answers yes but {{include_once('./Zend/Db.php') }}will fail !!!.</p>

<pre class="highlight"><code>
include_once('./Zend/Db.php');
</code></pre>

<p>When it tests</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-07T13:14:00.000+0000</p> 
        <div class="body">
            <p>Reformat description.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-28T19:04:49.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 5488.</p>

        </div>
    </div>
    </div>

