<h2>ZF-8709: Change label on radio button from explicit to implicit</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-05T01:40:04.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-09-06T14:18:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
            <li>FixForZF1.12</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15071/FormRadio.php.patch">FormRadio.php.patch</a></li>
            <li><a href="/issues/secure/attachment/15072/FormRadioTest.php.patch">FormRadioTest.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Current default output doesn't work in IE6:
My button</p>

<p>Correct output:
My button</p>

<p>Suggested fix: 
Change default label placement from 'append' to 'prepend' (in /library/Zend/View/Helper/FormRadio.php)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marco Kaiser (bate) on 2010-01-05T01:47:53.000+0000</p> 
        <div class="body">
            <p>What document type do you use?</p>

<p>Btw. IE6 sucks and should not be supported in any way.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Gilbert (jon.gilbert@net-entwicklung.de) on 2010-01-05T03:01:19.000+0000</p> 
        <div class="body">
            <p>I agree that IE6 sucks, but that's another story ;-) Document type is XHTML 1.0 Transitional but that should also be irrelevant. In the current output the label includes the element it is labelling which seems to me to be semantically wrong. There's a simple example on <a href="http://www.w3schools.com/tags/tag_label.asp">http://www.w3schools.com/tags/tag_label.asp</a> - it is irrelevant where the label is in relation to the radio button, but they should be two distinct elements, not nested.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marco Kaiser (bate) on 2010-01-05T03:10:45.000+0000</p> 
        <div class="body">
            <p>The Label helper produces different html for different doctypes. Do you use in your layout/view the $this-&gt;doctype() helper?
If not try with. I think this isnt a bug. :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Gilbert (jon.gilbert@net-entwicklung.de) on 2010-01-05T07:17:26.000+0000</p> 
        <div class="body">
            <p>Doctype is hardcoded in the layout template, but I disagree that this is relevant. doctype affects the closing tag:</p>

<pre><code>    $endTag = ' /&gt;';
    if (($this-&gt;view instanceof Zend_View_Abstract) &amp;&amp; !$this-&gt;view-&gt;doctype()-&gt;isXhtml()) {
        $endTag= '&gt;';
    }
</code></pre>

<p>but building the button and label does not depend on it:
            // Wrap the radios in labels
            $radio = '&lt;label'
                    . $this-&gt;_htmlAttribs($label_attribs) . ' for="' . $optId . '"&gt;'
                    . (('prepend' == $labelPlacement) ? $opt_label : '')
                    . '_htmlAttribs($attribs)
                    . $endTag
                    . (('append' == $labelPlacement) ? $opt_label : '')
                    . '';</p>

<p>However, I agree that $labelPlacement is actually irrelevant - not sure what I was thinking about there ;-) The code that actually needs fixing is the above definition of $radio. Here's my solution:</p>

<pre><code>        // create radio button and label and put them together in the required order
        $label = '&lt;label'
                . $this-&gt;_htmlAttribs($label_attribs) . ' for="' . $optId . '"&gt;'
                . $opt_label
                . '&lt;/label&gt;';
        $radio =  '&lt;input type="' . $this-&gt;_inputType . '"'
                . ' name="' . $name . '"'
                . ' id="' . $optId . '"'
                . ' value="' . $this-&gt;view-&gt;escape($opt_value) . '"'
                . $checked
                . $disabled
                . $this-&gt;_htmlAttribs($attribs)
                . $endTag;
        if ('prepend' == $labelPlacement) {
            $radio = $label . $radio;
        } else {
            $radio .= $label;
        }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by James Boykin (jfm) on 2010-07-24T15:59:35.000+0000</p> 
        <div class="body">
            <p>Yes this bug makes it difficult to use many jquery plugins. Would love to see this fixed! Manual patching for now...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Hwan (ihwan) on 2010-08-20T03:30:49.000+0000</p> 
        <div class="body">
            <p>This bug makes it difficult to use many jquery plugins. 
For example, jquery ui radio buttons has this problem.  <a href="http://jqueryui.com/demos/button/radio.html">http://jqueryui.com/demos/button/radio.html</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Zahariev (daniel.zahariev) on 2011-03-08T02:50:24.000+0000</p> 
        <div class="body">
            <p>Hi all, i had the same issue with this in terms of jQuery usage and used the following code for reordering:
$('input[type="radio"]', 'some scope').each(function(){
  var radio = $(this), label = elem.parent();
  radio.detach();
  label.before(radio);
});
Hope this helps someone.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-03-08T04:10:54.000+0000</p> 
        <div class="body">
            <p>Please read the HTML specification carefully! This is valid HTML and XHTML! 
These are "implicit labels": <a href="">www.w3.org/TR/html401/interact/forms.html#h-17.9.1</a>" rel="nofollow"&gt;HTML 4: 17 Forms - 17.9.1 The LABEL element</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Gilbert (jon.gilbert@net-entwicklung.de) on 2011-03-08T23:54:07.000+0000</p> 
        <div class="body">
            <p>No, those aren't implicit labels. Implicit labels don't have a "for" attribute - that makes them explicit</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-03-09T02:33:27.000+0000</p> 
        <div class="body">
            <p>{quote}No, those aren't implicit labels. Implicit labels don't have a "for" attribute - that makes them explicit{quote}
Right! The "for" attribute is not needed and makes here also no sense.</p>

<pre class="highlight"><code>
// Wrap the radios in labels
$radio = '_htmlAttribs($label_attribs) . ' for="' . $optId . '"&gt;' // "for" can be removed!
        . (('prepend' == $labelPlacement) ? $opt_label : '')
        . '_htmlAttribs($attribs)
        . $endTag
        . (('append' == $labelPlacement) ? $opt_label : '')
        . '';
</code></pre>

<p><a href="">www.w3.org/TR/html4/interact/forms.html#adef-for</a>" rel="nofollow"&gt;HTML 4: 17 Forms - 17.9.1 The LABEL element - for</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-05-09T16:37:08.000+0000</p> 
        <div class="body">
            <p>Patch and unit test added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-31T14:15:17.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk (1.12.0): r24840</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bernd Matzner (bmatzner) on 2012-09-06T14:18:22.000+0000</p> 
        <div class="body">
            <p>While reasonable, this fix does break existing javascript applications that rely on the for attribute to be available.</p>

<p>I would at least expect a migration note that the view helper output has changed.</p>

<p>Finding out the hard way that some generated HTML code has changed is unpleasant.</p>

        </div>
    </div>
    </div>

