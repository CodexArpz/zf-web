<h2>ZF-2465: New method 'isClicked()' for Zend_Form_Element_(Submit | Button | Image )</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-01-22T15:20:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-29T01:00:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>An additional feature that would be helpful would be a 'isClicked()' method associated with :</p>

<ul><li>Zend_Form_Element_Button</li>
<li>Zend_Form_Element_Image</li>
<li>Zend_Form_Element_Submit</li>
</ul><p>The gist of it would be that the method would look into the Request GET and POST parameter collections to see if the keys associated with that element existed or not. For instance, if your submit buttons name was 'submit', it would use array_key_exists() on both GET and POST. If that returned successfully, we know the button was clicked.</p>

<p>I often have more than one submit button on a form, each invoking different functionality on the back end. I tend to name them with the array format like so:</p>

<p>submit[update]
submit[save]
submit[delete]</p>

<p>In this case if the 'Update' button was clicked, 'isClicked()' would first check if the 'submit' key existed, and then if the 'update' key existed within the 'submit' collection:</p>

<p>if ($form-&gt;getElement('submit[update]')-&gt;isClicked()) {
    // Update my content
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-01-29T14:35:51.000+0000</p> 
        <div class="body">
            <p>First off, Zend_Form currently and will always remain agnostic of the request mechanism; you must pass in the data to be validated, plain and simple.</p>

<p>To implement an isClick() type of functionality <em>now</em>, simply use this code:</p>

<pre class="highlight"><code>
$form-&gt;populate($_POST);
if (null !== $form-&gt;getElement('update')-&gt;getValue()) {
}
</code></pre>

<p>I'm not convinced that an isClicked() method makes a lot of sense knowing that the above will work, but I will continue considering this addition.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-19T09:51:40.000+0000</p> 
        <div class="body">
            <p>Added this functionality on Monday, 18 Feb 2008 in trunk. You can now populate the form and check what was clicked:</p>

<pre class="highlight"><code>
$form-&gt;populate($data);
if ($form-&gt;save-&gt;isClicked()) {
    // 'save' submit was clicked
}
</code></pre>

<p>or check it after evaluating:</p>

<pre class="highlight"><code>
if ($form-&gt;isValid($data)) {
   if ($form-&gt;save-&gt;isClicked()) {
   }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sasa Stamenkovic (umpirsky) on 2009-11-28T11:42:18.000+0000</p> 
        <div class="body">
            <p>I get:</p>

<p>Zend_Form_Element_Exception: Method isClicked does not exist</p>

<p>thrown in Zend\Form\Element.php on line 931</p>

<p>with 1.9.5 version.</p>

<p>isClicked is not implemented at all?!?</p>

<p>Is there any other way to check clicked?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-11-28T13:33:40.000+0000</p> 
        <div class="body">
            <p>The comments are wrong -- it's actually "isChecked()". The method name was chosen to be consistent with the API of the radio and checkbox elements.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sasa Stamenkovic (umpirsky) on 2009-11-29T01:00:13.000+0000</p> 
        <div class="body">
            <p>Two things:</p>

<ol><li>I need to set value and label to have same value:</li>
</ol><p>)-&gt;addElement(
            'button',
            'trash',
            array(
                'label' =&gt; '<span class="ui-icon ui-icon-trash"> </span>Trash',
                'value' =&gt; '<span class="ui-icon ui-icon-trash"> </span>Trash'
            )
        );</p>

<ol><li>isChecked returns false when button is clicked, and true if it's not!?!?</li>
</ol>
        </div>
    </div>
    </div>

