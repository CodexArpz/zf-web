<h2>ZF-8779: Unexpected Results - Zend_Gdata_Gapps -&gt; retrieveUser</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-11T12:14:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Gdata</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The Zend_GData_GApps::retrieveUser method returns undocumented (and possibly erroneous behavior).  If an empty string is provided as an argument, then the method returns the first user's object in the domain (aaappleseed).  This can prove to be quite tricky and downright ugly when an account is unexpectedly modified.</p>

<p>(semi-pseudo code)</p>

<p>$g = new Zend_GData_Gapps;
$u = $g-&gt;retrieveUser('BOGUSBOGUS');</p>

<p><em>returns NULL</em> (expected)</p>

<p>$g = new Zend_GData_Gapps;
$u = $g-&gt;retrieveUser('jaappleseed');</p>

<p><em>returns Johnny Appleseed's user object</em> (expected)</p>

<p>$g = new Zend_GData_Gapps;
$u = $g-&gt;retrieveUser('');</p>

<p><em>returns first user in domain, alphabetically ex. "Amy A. Appleseed (aaappleseed)"</em> (unexpected)
<em>expected NULL</em></p>

<p>Thanks,
Richie Foreman
Mesa Public Schools</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Trevor Johns (tjohns) on 2010-01-14T14:17:14.000+0000</p> 
        <div class="body">
            <p>Downgrading to minor, since there's an easy workaround for this: Just avoid passing an empty string as an argument.</p>

        </div>
    </div>
    </div>

