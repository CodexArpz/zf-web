<h2>ZF-3344: Leftover variable assignment in Zend_Db_Table_Row_Abstract causes E_NOTICE error</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-05-28T14:05:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-07-25T13:59:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.3 (28/Jul/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>On line 976 of Zend_Db_Table_Row_Abstract (revision 9565), the variable $matchColumnName is assigned.  However, it is never used anywhere else in the class, which leads me to believe it's a leftover of some earlier version of this procedure.</p>

<p>Ordinarily this would not be a problem; however, occasionally it produces an E_NOTICE-level error which, given careless error-reporting settings, could expose potentially sensitive information to the end user about the location of the ZF installation on the server.</p>

<p>This situation arises when two tables are related by a third intersection table; the caller table is related to the intersection table via two of its columns, while the match table is related to the intersection table via only one of its columns.  E.g.,</p>

<pre class="highlight"><code>
class CallerTable extends Zend_Db_Table_Abstract
{
    protected $_primary = array('pk1', 'pk2');
    protected $_sequence = false;
}

class MatchTable extends Zend_Db_Table_Abstract
{
    protected $_primary = 'pk';
}

class InterTable extends Zend_Db_Table_Abstract
{
    protected $_primary = array('match_pk', 'caller_pk1', 'caller_pk2');
    protected $_sequence = false;
    
    protected $_referenceMap = array(
        'Match' =&gt; array(
            'columns'         =&gt; 'match_pk',
            'refTableClass'   =&gt; 'MatchTable',
            'refTableColumns' =&gt; 'pk'
        ),
        'Caller' =&gt; array(
            'columns'         =&gt; array('caller_pk1', 'caller_pk2'),
            'refTableClass'   =&gt; 'CallerTable',
            'refTableColumns' =&gt; array('pk1', 'pk2')
        )
    );
}

$callerTable = new CallerTable();
$callerRow = $callerTable-&gt;find('first-part-of-key', 'second-part')-&gt;current();
$matches = $callerRow-&gt;findManyToManyRowset('MatchTable', 'InterTable');
</code></pre>

<p>Although the $matches variable is correctly populated, the following E_NOTICE error is emitted: "Notice: Undefined offset: 1 in /path/to/Zend/Db/Table/Row/Abstract.php on line 976"</p>

<p>This issue could be easily resolved by removing line 976 of Zend_Db_Table_Row_Abstract.  Since the variable assigned on that line is never used, the only result of this will be that the E_NOTICE error is no longer emitted.</p>

<p>Thanks!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-05T18:09:42.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize/fix as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-07-25T09:27:22.000+0000</p> 
        <div class="body">
            <p>Fixed in r10407</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-07-25T13:59:25.000+0000</p> 
        <div class="body">
            <p>Fixed for 1.5.3 at revision 10433</p>

        </div>
    </div>
    </div>

