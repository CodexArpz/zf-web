<h2>ZF-9664: ByteArray does not serialize to Zend_Amf_Value_ByteArray. Instead a string is given</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-12T14:53:40.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-12T17:28:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Josh Jensen (captaincode)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12989/ByteArrayTest.mxml">ByteArrayTest.mxml</a></li>
            <li><a href="/issues/secure/attachment/12990/ComplexBARequest.as">ComplexBARequest.as</a></li>
            <li><a href="/issues/secure/attachment/12992/ComplexBARequest.php">ComplexBARequest.php</a></li>
            <li><a href="/issues/secure/attachment/13081/Deserializer.php">Deserializer.php</a></li>
            <li><a href="/issues/secure/attachment/12993/gateway.php">gateway.php</a></li>
            <li><a href="/issues/secure/attachment/12991/j-cubed-flames2.jpg">j-cubed-flames2.jpg</a></li>
            <li><a href="/issues/secure/attachment/12994/TestService.php">TestService.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am attempting to write a flash.utils.ByteArray to a database. However, I am unable to get the ByteArray into php. All I get is a String. See the example code provided for an example. In the example I have provided, I am attempting to write an encoded jpg to a database by sending the ByteArray from flash to PHP. I have two separate functions in my service file that you can call by pressing the buttons (labels match service functions). The first savePhoto attempts to send only the ByteArray. The second (the methodology I was using when I discovered this issue) uses a custom data type that encapsulates the ByteArray as a property.</p>

<p>Either methodology results in a string in place of the ByteArray in PHP. The first function will completely fail because I have told it to expect Zend_Amf_Value_ByteArray. The second function will fail with an error about trying to access the getData() method on a non-object (because it thinks it is a string).</p>

<p><em>Update</em>
Loooking through the code a bit more, it appears that in Zend/Amf/Parse/Deserializer.php the case for Zend_Amf_Constants::AMF3_BYTEARRAY is returning $this-&gt;readString();
Which seems to explain why strings are being returned to the php functions. Prior to revision 11731 it seems to be that case called a function that no longer exists. It used to call "return $this-&gt;readByteArray();". Perhaps this might be an accidental injection as the notes on that revision seem to only be about converting Dates.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Josh Jensen (captaincode) on 2010-04-12T14:55:47.000+0000</p> 
        <div class="body">
            <p>The AS class for the custom object, the MXML file for the test application, and the image (place in a folder called assets in the root of the project folder)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Jensen (captaincode) on 2010-04-12T14:56:38.000+0000</p> 
        <div class="body">
            <p>The matching datatype to map the complex object to, the gateway, and also the service file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Jensen (captaincode) on 2010-04-12T15:18:01.000+0000</p> 
        <div class="body">
            <p>Provided more clarification after some additional research.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andy Bennett (steamshift) on 2010-05-17T08:00:34.000+0000</p> 
        <div class="body">
            <p>I have added a readByteArray function;its just really just a copy of the readString method but wrapping wrapping the data in a Zend_Amf_Value_ByteArray object. It seems to work correctly ...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Roberto Frias (rcfrias) on 2012-01-12T17:28:32.000+0000</p> 
        <div class="body">
            <p>Is there any workaround for this issue?, I am having the same problem.  There is the "Deserializer.php" file, but what should be done?, override another file or make some kind of reference or place it somewhere?</p>

        </div>
    </div>
    </div>

