<h2>ZF-3960: Zend_Log_Writer_Firebug breaks CLI app</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-15T11:47:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Martin Hujer (mhujer)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Christoph Dorn (cadorn)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
            <li>Zend_Wildfire</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When running this code from command line (on Windows)</p>

<pre class="highlight"><code>
&lt;?php
require_once "Zend/Loader.php";
Zend_Loader::registerAutoload();

$log = new Zend_Log();
$writerFirebug = new Zend_Log_Writer_Firebug();
$log-&gt;addWriter($writerFirebug);
$log-&gt;log('hi', 2);
</code></pre>

<p>It dies with:
{quote}Catchable fatal error: Argument 1 passed to Zend_Controller_Plugin_Abstract::setResponse() must be an instance of Zend_Controller_Response_Abstract, null given, called in \library\Zend\Wildfire\Channel\HttpHeaders.php on line 248 and defined in \library\Zend\Controller\Plugin\Abstract.php on line 75{quote}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Martin Hujer (mhujer) on 2008-08-20T12:41:57.000+0000</p> 
        <div class="body">
            <p>To make it completely clear:</p>

<p>I have general Log class (writers - Db, Firebug) used in webapp. And I need to run some cron import scripts which should report errors in the Log.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-20T13:08:35.000+0000</p> 
        <div class="body">
            <p>What should likely happen is that if the response object is null, the channel writer should not attempt to instantiate the plugin.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-22T15:02:17.000+0000</p> 
        <div class="body">
            <p>Scheduling for RC3; Christoph, please see my previous comment for a solution.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2008-08-24T00:01:22.000+0000</p> 
        <div class="body">
            <p>I can fix the error described, however the intent is to throw an exception if the response object is not initialized to make it clear to the developer that the logged data will not make it into the response likely due to improper initialization. This is the intended behavior for WEB apps.</p>

<p>We have several options to solve this issue:</p>

<p>1) Make it the developer's responsibility to disable the Zend_Wildfire_Plugin_FirePhp component when running in CLI mode</p>

<pre class="highlight"><code>
Zend_Wildfire_Plugin_FirePhp::getInstance()-&gt;setEnabled(false);
</code></pre>

<p>2) Automatically disable the Zend_Wildfire_Plugin_FirePhp component when running in CLI mode</p>

<p>3) Removing the exception altogether to not provide any feedback if the Zend_Wildfire_Plugin_FirePhp component is not properly initialized.</p>

<p>My preference would be option 2.</p>

<p>Any comments?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-08-24T13:32:55.000+0000</p> 
        <div class="body">
            <p>(2) sounds good to me as well. However, how do you plan on determining that you're running from the CLI?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2008-08-24T13:50:47.000+0000</p> 
        <div class="body">
            <p>I was hoping there was a ZF component for that, but I guess not.</p>

<p>How about</p>

<pre class="highlight"><code>
(php_sapi_name()=='cli')
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christoph Dorn (cadorn) on 2008-08-24T17:47:20.000+0000</p> 
        <div class="body">
            <p>Zend_Log_Writer_Firebug is now disabled by default when run from the command line.</p>

<p>If you want to enable it you must use:</p>

<pre class="highlight"><code>
$writer = new Zend_Log_Writer_Firebug();
$writer-&gt;setEnabled(true);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:46.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

