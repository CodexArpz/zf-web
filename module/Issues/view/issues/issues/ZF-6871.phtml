<h2>ZF-6871: Zend_Form_Decorator_Label: Unable to manually define ID, setID/setOption('id') does nothing</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2009-06-01T02:45:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-21T12:57:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.0 (02/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Christian Albrecht (alab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Current <em>Zend_Form_Decorator_Label</em> does not allow to manually define ID to the label, as it currently sets the ID to elements name with a "-label" suffix.</p>

<pre class="highlight"><code>
$decorator = $element-&gt;getDecorator('Label');
$decorator-&gt;setId('testLabelWhateverID');            // Does nothing
$decorator-&gt;setOption('id', 'testLabelWhateverID');  // Does nothing
</code></pre>

<p>The following modification would allow the override of the ID when specified and still retain auto generation of the ID from the element name.</p>

<pre class="highlight"><code>
    public function render($content)
    {
        $element = $this-&gt;getElement();
        $view    = $element-&gt;getView();
        if (null === $view) {
            return $content;
        }

        $label     = $this-&gt;getLabel();
        $separator = $this-&gt;getSeparator();
        $placement = $this-&gt;getPlacement();
        $tag       = $this-&gt;getTag();
//      $id        = $this-&gt;getId();
        $id        = $this-&gt;getId() ? $this-&gt;getId() : $element-&gt;getName() . '-label';
        $class     = $this-&gt;getClass();
        $options   = $this-&gt;getOptions();


        if (empty($label) &amp;&amp; empty($tag)) {
            return $content;
        }

        if (!empty($label)) {
            $options['class'] = $class;
            $label = $view-&gt;formLabel($element-&gt;getFullyQualifiedName(), trim($label), $options);
        } else {
            $label = 'Â ';
        }

        if (null !== $tag) {
            require_once 'Zend/Form/Decorator/HtmlTag.php';
            $decorator = new Zend_Form_Decorator_HtmlTag();
//          $decorator-&gt;setOptions(array('tag' =&gt; $tag,
//                                       'id'  =&gt; $this-&gt;getElement()-&gt;getName() . '-label'));
            $decorator-&gt;setOptions(array('tag' =&gt; $tag,
                                         'id'  =&gt; $id));

            $label = $decorator-&gt;render($label);
        }

        switch ($placement) {
            case self::APPEND:
                return $content . $separator . $label;
            case self::PREPEND:
                return $label . $separator . $content;
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Eugene Song (bakadesu) on 2009-07-12T15:17:38.000+0000</p> 
        <div class="body">
            <p>Easier to just use custom decorators.   Although would be nice to have in the documentation that certain options/attributes don't work in various form decorators.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-21T11:27:07.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk r21961 and 1.10 release branch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Christian Albrecht (alab) on 2010-04-21T12:22:21.000+0000</p> 
        <div class="body">
            <p>Reverted release-1.10 merge r21962, and sheduling for next minor release.</p>

        </div>
    </div>
    </div>

