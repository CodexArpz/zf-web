<h2>ZF-8090: Using addDecorator/Decorators block default form decorators to be loaded</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-10-18T07:23:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-05T14:42:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14334/ZF-8090.patch">ZF-8090.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The example code blocks default form decorators to be loaded because form decorator array isn't empty anymore. Instead of checking emptiness of $_decorators array, setter functions could set $_disableLoadDefaultDecorators var to true?</p>

<pre class="highlight"><code>
Class My_Form extends Zend_Form {
    public function init() {
        // Want to add div. Note that setter isn't used and
        // default decorators are mentioned to use (dwim)
        $this-&gt;addDecorator(array('mytag' =&gt; 'HtmlTag'), array('tag' =&gt; 'div'));
}
</code></pre>

<pre class="highlight"><code>
    public function loadDefaultDecorators()
    {
        if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
            return;
        }

--&gt;     $decorators = $this-&gt;getDecorators();
--&gt;     if (empty($decorators)) {
            $this-&gt;addDecorator('FormElements')
                 -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dl', 'class' =&gt; 'zend_form'))
                 -&gt;addDecorator('Form');
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-05-28T14:08:54.000+0000</p> 
        <div class="body">
            <p>The frak I was trying to say here was that default decorators should have been set at the first call of {{addDecorator()}} if they weren't disabled. So instead of doing this ...</p>

<pre class="highlight"><code>
// class extended from Zend_Form
public function init()
{
    $this-&gt;loadDefaultDecorators()-&gt;addDecorator(array('mytag' =&gt; 'HtmlTag'), array('tag' =&gt; 'div'));
}
</code></pre>

<p>... I could have done that</p>

<pre class="highlight"><code>
// class extended from Zend_Form
public function init()
{
    $this-&gt;addDecorator(array('mytag' =&gt; 'HtmlTag'), array('tag' =&gt; 'div'));
}
</code></pre>

<p>I tried to fix this by calling {{loadDefaultDecorators()}} in {{addDecorator()}} but end up into infinite loop - of course. To get this work a phantom decorator something like this had to be added, making the code bad looking?</p>

<pre class="highlight"><code>
public function loadDefaultDecorators()
{
    if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
        return $this;
    }

    $decorators = $this-&gt;getDecorators();
    if (empty($decorators)) {
--&gt;     $this-&gt;_decorators['phantom'] = null; // protect against infinite loop of adding decorators
        $this-&gt;addDecorator('FormElements')
             -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dl', 'class' =&gt; 'zend_form'))
             -&gt;addDecorator('Form');
--&gt;     unset($this-&gt;_decorators['phantom']);
    }
    return $this;
}

public function addDecorator($decorator, $options = null)
{

   ...

--&gt; if (empty($this-&gt;_decorators)) {
--&gt;     $this-&gt;loadDefaultDecorators();
--&gt; }
    $this-&gt;_decorators[$name] = $decorator;

    return $this;
}
</code></pre>

<p>Matthew - it's your call to commit the patch or not. I can live with the both.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-06-17T05:10:37.000+0000</p> 
        <div class="body">
            <p>Decided to make the decision by myself - won't fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-07-05T14:42:07.000+0000</p> 
        <div class="body">
            <p>Just wanted to note: this behavior is by design. It's to allow configuration-driven forms; without this behavior, it's difficult to provide a custom list of decorators to use <em>instead of</em> the defaults. While there <em>is</em> the "loadDefaultDecoratorsIsDisabled" flag, a change such as you suggest would break existing forms that did not set this but <em>did</em> expect that the configuration would override defaults.</p>

        </div>
    </div>
    </div>

