<h2>ZF2-47: Classmap generator doesn't work if you use -l switch and -o to store the file in another folder</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-08-10T08:40:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-21T22:17:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When in library/ folder run this command:</p>

<pre class="highlight"><code>
php /zf2/bin/classmap_generator.php -l ./App/ -o .classmap.php -w
</code></pre>

<p>This all generates a .classmap.php file in library containing the following:</p>

<pre class="highlight"><code>
&lt;?php
return array (
  'App\\Mvc\\Route\\RegexRoute' =&gt; __DIR__ . DIRECTORY_SEPARATOR . 'Mvc' . DIRECTORY_SEPARATOR . 'Route' . DIRECTORY_SEPARATOR . 'RegexRoute.php',
);
</code></pre>

<p>This class map is unusable as the path to RegexRoute.php is missing the App directory name and so the autoloader cannot find the folder as the path it has created is relative to the App folder, not the folder where the .classmap.php file actually is.</p>

<p>Update:
The same thing happens with this command when run from the App/ directory directly:</p>

<pre class="highlight"><code>
php /zf2/bin/classmap_generator.php  -o ../.classmap.php -w
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2011-08-10T20:33:04.000+0000</p> 
        <div class="body">
            <p>Looking into this, I think that the first case is the one worth looking at as if symlink'd directories are involved using relative paths with -o causes a world of complexity.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2011-08-10T21:41:39.000+0000</p> 
        <div class="body">
            <p>Pull request 336 solves common use-case.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Evan Coury (evan.pro) on 2011-12-21T22:17:20.000+0000</p> 
        <div class="body">
            <p>This seems to be resolved now.</p>

        </div>
    </div>
    </div>

