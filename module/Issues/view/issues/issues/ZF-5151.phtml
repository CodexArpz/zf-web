<h2>ZF-5151: Zend_File_Transfer_Http:: receive() and not required file</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-12-03T09:28:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-05T03:47:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Laurent Melmoux (laurent melmoux)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>With the current implementation of  Zend_File_Transfer_Http:: receive() in the case of a <strong>not require file</strong> there is <strong>no way to know</strong> if the move of the temporary file to its destination have succeed or not.</p>

<p>This can happen for example when there is no write access on the destination folder.</p>

<p>Here is a possible patch :</p>

<pre class="highlight"><code>



// Check for empty file
if (empty($content['tmp_name'])) {
    if ($content['options']['ignoreNoFile']) {
        $this-&gt;_files[$file]['received'] = true;
        $this-&gt;_files[$file]['filtered'] = true;
    } else {
        $this-&gt;_files[$file]['received'] = false;
        return false;
    }
} // Should never return false when it's tested by the upload validator
elseif (! move_uploaded_file($content['tmp_name'], ($directory . $content['name']))) {
    $this-&gt;_files[$file]['received'] = false;
    return false;
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-12-03T10:43:23.000+0000</p> 
        <div class="body">
            <p>If there is no access to the temporary directory you will get an exception when you set the destination or the rename filter.</p>

<p>And if the file has succeeded can be detected with the isUploaded / isValid / isReceived / isFiltered methods.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent Melmoux (laurent melmoux) on 2008-12-04T00:42:37.000+0000</p> 
        <div class="body">
            <p>With the last stable release 1.7.1 my files aren't saved and no exception is thrown when my save directory have no write access.
I'm using</p>

<pre class="highlight"><code>
$this-&gt;_form-&gt;getElement('photo')-&gt;setDestination($_SERVER['DOCUMENT_ROOT'] . 'medias/news/photos');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent Melmoux (laurent melmoux) on 2008-12-04T01:12:23.000+0000</p> 
        <div class="body">
            <p>The problem still remains:
if a file with ['ignoreNoFile'] == true  is submitted and <em>move_uploaded_file</em> fails it will be consider received anyway :(</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent Melmoux (laurent melmoux) on 2008-12-04T02:41:06.000+0000</p> 
        <div class="body">
            <p>Thomas I don't want to bother you ;-),</p>

<p>but in Zend_File_Transfer_Adapter_Abstract::setDestination()
in conjunction to is_dir() you could had a check to see if the directory have write access</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-12-04T10:46:56.000+0000</p> 
        <div class="body">
            <p>And what has this to do with receive and not required files ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-12-04T10:58:20.000+0000</p> 
        <div class="body">
            <p>Provocant question:
Why do you manually set a directory when you do not have write access to it ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent Melmoux (laurent melmoux) on 2008-12-04T23:45:43.000+0000</p> 
        <div class="body">
            <p>{quote}Why do you manually set a directory when you do not have write access to it ? {quote}</p>

<p>Usually this happen when you go on production and forgot to chmod the directory. But a better place for this check is setDestination()</p>

<p>{quote}And what has this to do with receive and not required files ? {quote}</p>

<p>Well with the current implementation if my file have the option 'ignoreNoFile'  and even if I did submit one, if submit move_uploaded_file failed the file will be set at received</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent Melmoux (laurent melmoux) on 2008-12-05T03:47:23.000+0000</p> 
        <div class="body">
            <p>There is an error in my code above it shoud be : \ \</p>

<pre class="highlight"><code>
           // Check for empty file
            if (empty($content['tmp_name'])) {
                if ($content['options']['ignoreNoFile']) {
                    $this-&gt;_files[$file]['received'] = true;
                    $this-&gt;_files[$file]['filtered'] = true;
                    return true;
                } else {
                    $this-&gt;_files[$file]['received'] = false;
                    return false;
                }
            } 

            // Should never return false when it's tested by the upload validator
            if (! move_uploaded_file($content['tmp_name'], ($directory . $content['name']))) {
                $this-&gt;_files[$file]['received'] = false;
                return false;
            }
</code></pre>

        </div>
    </div>
    </div>

