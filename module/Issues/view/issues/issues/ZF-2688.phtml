<h2>ZF-2688: Zend_View_Abstract not handling URI style paths</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-02-19T08:02:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-31T09:14:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Lee Saferite (lsaferite)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In all (most?) of the path handling routines in Zend_View, it is assumed that paths are in the form of /some/path for unix and C:\some\path for windows.  There are not allowances for using URI stlye paths.  (file:// or mystreamhandler://)</p>

<p>In my code I have a custom stream handler that provides the view templates and I found a way to force Zend_View to work with it while on a Unix based system, since DIRECTORY_SEPARATOR = / on those systems.  Now that I have a windows based dev box, the fact that DIRECTORY_SEPARATOR = \ is causing my code to no longer work.  This is not a case of bad programming on my part though.  Zend_View just assumes that you will never use URI style paths, but that is the only way to get access to my custom stream handler.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-19T08:39:48.000+0000</p> 
        <div class="body">
            <p>Internally, Zend_View simply uses include() to pull in a view script, after first resolving it to one of the paths in its internal stack. As such, it should be able to handle any of the URL fopen wrappers... but only if we support those for the registered paths.</p>

<p>I see this as an edge case, however; most developers will be working with paths in the local filesystem and not require stream wrappers. Unless you're willing to provide a patch showing a proof-of-concept or the issue receives many votes, we likely will not implement it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-19T08:40:22.000+0000</p> 
        <div class="body">
            <p>Modified from bug to feature request.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2008-02-19T10:37:18.000+0000</p> 
        <div class="body">
            <p>I have to say that is a very disappointing response.</p>

<p>Using any valid file path shouldn't be a feature request, it should be expected behavior.  If I can send it to the include function, then the internal Zend_View functions should handle it.</p>

<p>I have patched Zend_View_Abstract to simply always use the unix style separator, as a simple stop-gap solution.  However, since it is not a 'real' solution I will not submit it as a patch.</p>

<p>I stand by my earlier classification, this is a BUG not a feature request.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-03-06T09:51:44.000+0000</p> 
        <div class="body">
            <p>Nobody else has commented on this issue, and there are no watchers or votes on it. I've seen no related bugs come through the issue tracker.</p>

<p>For the 1.6.0 release, I already have plans to modify Zend_View_Abstract to utilize Zend_Loader_PluginLoader and Zend_Filter_Inflector for resolving helper/filter paths and classes -- primarily so that we do not have multiple solutions to a standard framework issue (plugins). This will likely resolve any issues you are seeing.</p>

<p>I'm marking this as an <em>improvement</em>, not a bug, as you are not providing reproduce code and as the behaviour you're describing was never an intended behaviour of Zend_View.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:33:29.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:51.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-04-22T10:30:52.000+0000</p> 
        <div class="body">
            <p>Updating project management info.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:19:02.000+0000</p> 
        <div class="body">
            <p>At current, Zend_View_Abstract is very much tied to the filesystem, i am gonna mark as postponed, and reassign to matthew.  This might be something to consider at 2.0 time.</p>

        </div>
    </div>
    </div>

