<h2>ZF-7390: Zend_Config_Xml top-level attributes</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-07-26T13:14:25.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-27T02:27:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Keno Fischer (loladiro)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When having attributes in the topmost element of an xml file, they are not parsed by Zend_Config_Xml (ZF 1.9 beta1)
e.g.:</p>

<pre class="literal">
$string = &lt;&lt;
EOT;
$config = new Zend_Config_Xml($string);
var_dump($config-&gt;toArray());
</pre>

<p>would output</p>

<pre class="literal">
array
  'someconfig' =&gt; 
    array
      'webhost' =&gt; string '<a href="www.example.com">www.example.com</a>' (length=15)
  'anotherconfig' =&gt; 
    array
      'webhost' =&gt; string '<a href="www.example.com">www.example.com</a>' (length=15)
</pre>

<p>instead of</p>

<pre class="literal">
array
  'someconfig' =&gt; 
    array
      'webhost' =&gt; string '<a href="www.example.com">www.example.com</a>' (length=15)
  'anotherconfig' =&gt; 
    array
      'webhost' =&gt; string '<a href="www.example.com">www.example.com</a>' (length=15)
  'test' =&gt; string 'test' (length=4)
</pre>

<p>I think the simplest way to solve this would be adding the following after line 106:</p>

<pre class="literal">
            foreach ($config-&gt;attributes() as $name =&gt; $value)
            {
                $dataArray[$name] = (string) $value;
            }
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-07-26T15:04:24.000+0000</p> 
        <div class="body">
            <p>I'm fairly certain this is an issue due to how PHP's DOM library handles the root node of an XML file, but I'll leave the final resolution to Rob and/or Ben.</p>

<p>It's more reliable to simply have a child node with that value.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2009-07-26T16:18:38.000+0000</p> 
        <div class="body">
            <p>No, actually this would be possible, tho at the moment, Zend_Config_Xml always assumes the first level nodes (within the root node) to be sections, and a section cannot be a string value but a parent of nodes. I have to see if I will find a way around that when refactoring Zend_Config_Xml.</p>

<p>But seriously, according to this example, sections are used here, so I don't see a reason for a text-section.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Keno Fischer (loladiro) on 2009-07-27T00:53:59.000+0000</p> 
        <div class="body">
            <p>Well, this only is a problem when you have config files that don't make use of sections. Another problem (for me) is that "$thisSection  = $element-&gt;$section;" at line 156 always refers to the same element even if there are multiple elements with this name in the section.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2011-05-27T02:27:30.000+0000</p> 
        <div class="body">
            <p>Not a supported use case. Top level keys in Zend_Config_Xml are sections.</p>

        </div>
    </div>
    </div>

