<h2>ZF-5067: Zend_Auth_Adapter_Http should not be an Zend_Auth adapter but a layer above !</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-11-26T00:20:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Auth</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm searching a way to use Zend_Auth_Adapter_Http with Database or Ldap.
It seems that I must made Zend_Auth_Adapter_Http_Resolver.</p>

<p>What is not very logical is that Zend_Auth_Adapter_Http  should not be an adapter but only a layer above
Zend_Auth_Adapter objects. By this way it will be possible to use  any of the existing adapters like Db, OpenId or Ldap.</p>

<p>I've tried to create Zend_Auth_Adapter_Http_Resolver_DbTable  extending Zend_Auth_Adapter_DbTable.
It's dirty and doesn't works because in my Db password are MD5 encoded so  resolve Method can't  return password properly</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-19T08:18:10.000+0000</p> 
        <div class="body">
            <p>Matthew, I'm having a hard time seeing the issue that the reporter is having. Can you find a course of action on this one?
Reporter: please provide more details and exactly how you intend to use HTTP authentication if possible.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bryce Lohr (gearhead) on 2009-02-07T09:11:19.000+0000</p> 
        <div class="body">
            <p>I completely agree with the issue reporter on this. When I originally wrote the Digest adapter, I realized this problem. It's not a simple issue, however, due to the way the HTTP authentication process works. The most common DB-table based authentication designs store a username and password hash in the DB, yet that cannot work with HTTP authentication, since the password equality comparison cannot easily be done in an SQL Where clause. Digest authentication, in particular, must process the password hash along with several other variables in order to determine if the credentials are valid, so this requires the data to be returned to the adapter instead of the adapter sending the data to the DB in a query.</p>

<p>Really, HTTP authentication is just one authentication <em>strategy</em>, a peer to form-and-session based authentication. However, Zend_Auth was designed as if forms based authentication were the only strategy. DbTable, Ldap, OpenId, etc. are all actually specific ways to carry out forms authentication. There are two levels here that aren't being acknowledged: 1) the authentication protocol between the server and client, and 2) the validation mechanism the server employs to check the credentials (which may involve communication with 3rd party servers).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:11.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

