<h2>ZF-2536: Arbitrary segfault or glibc crash on Red Hat 4 (RHEL4)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-01-31T09:34:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-22T07:16:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Dale Liszka (daleatecho)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am using the Zend Framework on a Red Hat Enterprise Linux 4 server with apache 1.3 and php 5.2.3 (cli).  I have a script that uses Zend_Rest_Client to connect to a service (UPS, specifically) to query data.  The rest client object instantiates without problem, when perform the $obj-&gt;restPost() I will get a segfault or glibc error about 80% of the time.  The other 20% the call will go through fine.  The same code with the same Zend framework version works fine on an Ubuntu 7.10 setup with apache 2.  I have replicated this crash on 3 separate RHEL4 boxes.</p>

<p>I know there is much troubleshooting to do after this and I am happy to help.  However these RHEL boxes are in production and we are not able to do extensive changes to them.  Below are some of the errors, I get some combination of these if I run the script several times back to back:</p>

<pre class="literal"> 
--------Works fine-------------
 [web1: programs]$ php -f Ups_Api_Track.php
 tracking 207638
Array
(
    [EtaDate] =&gt; 2007-12-12
    [TrackingNumber] =&gt; 1Z4923FR03xxxxxxxxx
    [ShipDate] =&gt; 2007-12-10
)
--------glibc error-------------
[web1: programs]$ php -f Ups_Api_Track.php
 *** glibc detected *** double free or corruption (!prev): 0x00000000011864e0 ***
[web1: programs]$ php -f Ups_Api_Track.php
*** glibc detected *** free(): invalid pointer: 0x0000003afb831938 ***
--------segfault-------------
[web1: programs]$ php -f Ups_Api_Track.php 
 tracking 207638
Segmentation fault
[programs]$ tail /var/log/messages |grep php
Dec 13 13:04:40 web1 kernel: php[10687]: segfault at 0000003a0000001f rip 0000003aff3ad91d rsp 0000007fbfff69a0 error 4
Dec 13 13:05:12 web1 kernel: php[10779]: segfault at 0000003a0000001f rip 0000003aff3ad91d rsp 0000007fbfff6980 error 4
Dec 13 13:05:38 web1 kernel: php[10802]: segfault at 0000003a0000001f rip 0000003aff3ad91d rsp 0000007fbfff6980 error 4
</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dale Liszka (daleatecho) on 2008-01-31T09:38:41.000+0000</p> 
        <div class="body">
            <p>This was closed previously as ZF-2307 resolution "not an issue".  As suggested by Will Sinclair I went to post it to PHP even though it is clearly a Zend problem.  Right on the bugs.php.net submit page is:</p>

<p>Always disable any Zend or other 3rd party extensions (Turck MMCache, ionCube loader, Xdebug, APC) before submitting a <em>PHP</em> bug.</p>

<p>So I'm back.  And this segfault is too.  I've already worked around this issue but I'm hoping to get this one at least acknowledged in case anyone in the future encounters the same problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-06-08T06:17:28.000+0000</p> 
        <div class="body">
            <p>Dale, Zend has several products, including Zend Framework. I don't believe they are referring to Zend Framework on bugs.php.net. In any case, I'm assigning this to Matthew in case he can provide a workaround.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-22T07:16:36.000+0000</p> 
        <div class="body">
            <p>I cannot determine a way to reproduce this issue.</p>

        </div>
    </div>
    </div>

