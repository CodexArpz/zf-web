<h2>ZF-7765: Zend_Rest_Route maps actions, but not request methods.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-03T02:51:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alex Zinchenko (admloki)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>Zend_Rest_Route</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7791">ZF-7791</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Rest_Route maps REST actions to request, bases on "_server" hidden field/X-HTTP-Method-Override, but not request methods.
In that case, Zend_Controller_Request_Http::isPut() and Zend_Controller_Request_Http::isDelete() methods will return false.</p>

<p>Also, Zend_Rest_Route doesn't map a DELETE request method, so deleteAction() will never be invoked.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alex Zinchenko (admloki) on 2009-09-03T05:10:20.000+0000</p> 
        <div class="body">
            <p>There are several solutions to solve this issue.
First is a 'dirty' patch for Zend_Rest_Route, second patch is both for Zend_Rest_Route and Zend_Controller_Request_Http.</p>

<p>I can provide these patches.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-09-03T05:36:41.000+0000</p> 
        <div class="body">
            <p>I have not experienced this at all. I've been using Dojo's JsonRestStore with Zend_Rest_Route extensively, and all PUT and DELETE requests are routed accordingly; the X-HTTP-Method-Override header is not present in these requests, either, indicating that the routing is being done exclusively based on the actual request method (as it should).</p>

<p>Can you provide some example code that displays the issue?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Zinchenko (admloki) on 2009-09-03T06:21:46.000+0000</p> 
        <div class="body">
            <p>Sorry, my bad - i just noticed DELETE-actions works fine, but only if uses with _method field :</p>

<pre class="highlight"><code>
$this-&gt;addElement('hidden', '_method', array(
            'value' =&gt; 'delete',
));
</code></pre>

<p>I also found Zend_Form handles PUT/DELETE as GET methods.
Is it a bug, or feature? Need i create a new ticket for this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Zinchenko (admloki) on 2009-09-03T06:43:00.000+0000</p> 
        <div class="body">
            <p>I mean, maybe will be better for Zend_Form to check setted method and add a hidden '_method' field automatically?
In other case i don't see a point why PUT/DELETE methods were added to Zend_Form.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luke Crouch (lcrouch) on 2009-09-03T08:02:58.000+0000</p> 
        <div class="body">
            <p>I don't know much about how Zend_Form works, but it's something we could/should investigate to make sure the two components work well together.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Zinchenko (admloki) on 2009-09-03T08:45:07.000+0000</p> 
        <div class="body">
            <p>Luke, as i found since 1.9 in Zend_Form was implemented new request methods, PUT and DELETE, for REST complatiblity.
As i guess, when using this request methods, Zend_Form should generate additional hidden field named '_method' with related value for route matching.
Also, Zend_Form should always set POST request method in rendered HTML for REST method tunneling.
In fact, Zend_Form doesn't fulfill it.</p>

<p>I think it can be repaired in two ways:
1. Additional form decorator(no matter if it will work even without REST routing enabled).
2. Rewriting of Zend_Form_Decorator_Form.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luke Crouch (lcrouch) on 2009-09-07T06:29:13.000+0000</p> 
        <div class="body">
            <p>So it sounds like this one is a problem in Zend_Form, not Zend_Rest_Route ? Is there a Zend_Form ticket to which I can associate this one, and then mark this one as duplicate?</p>

<p>thanks,
-L</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Zinchenko (admloki) on 2009-09-07T06:42:39.000+0000</p> 
        <div class="body">
            <p>Good day, Luke. Thank you for help with ZF-7771.
Yes, i created a ticket: ZF-7791.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-09-07T12:24:01.000+0000</p> 
        <div class="body">
            <p>Quick info : W3C's HTML 5 provide a text for adding PUT and DELETE capabilities to</p>

<p>&lt;</p>

<p>form&gt; elements
More infos can be found here : <a href="http://www.w3.org/TR/html5/forms.html#form-submission-0">http://w3.org/TR/html5/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:07.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

