<h2>ZF-9063: Clarify and rename 'resource', 'plugin', and 'pluginresource' in Zend_Application_Bootstrap</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-02-02T11:24:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-29T12:51:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Andy Fowler (andyfowler)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application_Resource</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Application_Bootstrap_BootstrapAbstract is a bit inscrutable in its variable naming of plugins, resources and pluginresources. Discussed this with Dolf in IRC and he asked for a ticket.</p>

<p>I'd also vote that "classResources" actually seem to imply the <em>opposite</em> of what they actually mean. Zend_Application_Bootstrap uses this term for Bootstrap::_init*() resources, but I inferred that it meant concrete Zend_Application_Resources. Perhaps methodResources? initResources?</p>

<p>(If this ticket turns into a larger-scale refactoring of Zend_Application_Bootstrap, it's also a bit unintuitive that hasPluginResource() actually  <em>loads</em> all pluginResources, but there may be important reasons for this.)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-29T12:51:17.000+0000</p> 
        <div class="body">
            <p>This cannot be accomplished in ZFv1 without breaking backwards-compatibility.  {{Zend_Application}} has been removed from ZF2 (similar functionality provided by Module+Mvc), and so this issue does not apply there.</p>

        </div>
    </div>
    </div>

