<h2>ZF-3732: Enable json-comment-filtered for the Dojo view helper</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-07-23T22:27:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-05T08:03:35.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>Zend_Dojo</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It would be nice to have the option to send json-comment-filtered (meaning between /* and */) when using $this-&gt;_helper-&gt;autoCompleteDojo($data).   I had this message from Dojo: "please consider using a mimetype of text/json-comment-filtered to avoid potential security issues with JSON endpoints (use djConfig.usePlainJson=true to turn off this message)" as described here: 
<a href="http://dojotoolkit.org/forum/dijit-dijit-0-9/dijit-support/text-json-comment-filtered#comment-5853">http://dojotoolkit.org/forum/dijit-dijit-0-9/â€¦</a>.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Roy Ganor (royganor) on 2008-08-30T01:06:47.000+0000</p> 
        <div class="body">
            <p>this issue should relate also to the json view/action helpers as most of the work with the json format in dojo must / should be commented out.</p>

<p>I fixed the action helper as follows (still it needs to be done in the view helper not in the action helper)</p>

<p><code>
require_once 'Zend/Loader/PluginLoader.php';
require_once 'Zend/Controller/Action/Helper/Abstract.php';</code></p>

<p>/**
 * Dojojson Action Helper 
 * 
 * @uses actionHelper Zend_Controller_Action_Helper
 */
class Zend_Controller_Action_Helper_Dojojson extends Zend_Controller_Action_Helper_Abstract {
    /**
     * Suppress exit when sendJson() called
     * @var boolean
     */
    public $suppressExit = false;</p>

<pre><code>/**
 * Create JSON response
 *
 * Encodes and returns data to JSON. Content-Type header set to 
 * 'application/json', and disables layouts and viewRenderer (if being 
 * used).
 *
 * @param  mixed   $data
 * @param  boolean $keepLayouts
 * @throws Zend_Controller_Action_Helper_Json
 * @return string
 */
public function encodeJson($data, $keepLayouts = false, $comment = true)
{
    /**
     * @see Zend_View_Helper_Json
     */
    require_once 'Zend/View/Helper/Json.php';
    $jsonHelper = new Zend_View_Helper_Json();
    $data = $jsonHelper-&gt;json($data, $keepLayouts);

    if (!$keepLayouts) {
        /**
         * @see Zend_Controller_Action_HelperBroker
         */
        require_once 'Zend/Controller/Action/HelperBroker.php';
        Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer')-&gt;setNoRender(true);
    }

    return $comment ? '/*' . $data . '*/' : $data;
}

/**
 * Encode JSON response and immediately send
 * 
 * @param  mixed   $data 
 * @param  boolean $keepLayouts 
 * @return string|void
 */
public function sendJson($data, $keepLayouts = false, $comment = true)
{
    $data = $this-&gt;encodeJson($data, $keepLayouts, $comment);
    $response = $this-&gt;getResponse();
    $response-&gt;setBody($data);

    if (!$this-&gt;suppressExit) {
        $response-&gt;sendResponse();
        exit;
    }

    return $data;
}

/**
 * Strategy pattern: call helper as helper broker method
 *
 * Allows encoding JSON. If $sendNow is true, immediately sends JSON 
 * response. 
 * 
 * @param  mixed   $data 
 * @param  boolean $sendNow 
 * @param  boolean $keepLayouts 
 * @return string|void
 */
public function direct($data, $sendNow = true, $keepLayouts = false, $comment = true)
{
    if ($sendNow) {
        return $this-&gt;sendJson($data, $keepLayouts, $comment);
    }
    return $this-&gt;encodeJson($data, $keepLayouts, $comment);
}
</code></pre>

<p>}
</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-09-09T12:36:59.000+0000</p> 
        <div class="body">
            <p>Actually, I'm a little reluctant to support this; Dojo 1.2 actually gets rid of comment filtered JSON support.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-05T08:03:35.000+0000</p> 
        <div class="body">
            <p>ZF 1.7.0 will add support for Dojo 1.2.x -- which no longer requires comment filtered JSON.</p>

        </div>
    </div>
    </div>

