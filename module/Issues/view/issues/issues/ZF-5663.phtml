<h2>ZF-5663: Statement doesn't get deallocated after preparation and execution</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-30T16:03:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello</p>

<p>In a relatively large transaction using Zend_Db_Adapter_Pdo_Pgsql the PostgreSQL Database suddenly (and somewhat randomly) terminates this transaction with the error:</p>

<p>{{ERROR:  42P05: prepared statement "pdo_pgsql_stmt_0a0d3ba8" already exists}}</p>

<p>Based on a quick look at "prepare.c" (in the PostgreSQL source code), the presence of the prepared statement is checked by its name and not its post-parse-analysis tree. I assume the name is set by PDO and is in this special case "pdo_pgsql_stmt_0a0d3ba8". Please correct me if I'm wrong.</p>

<p>I think the problem relies in Zend/Db/Adapter/Abstract.php, e.g.</p>

<pre class="highlight"><code>
        $stmt = $this-&gt;query($sql, $bind);
        $result = $stmt-&gt;fetchAll($fetchMode);
        return $result;
</code></pre>

<p>Here this $stmt is not cleared after execution and in the case of a large transaction the statement relies in a prepared state in the database. I think this sometimes gets garbage collected by php, but as it seems not at the right time. In a method like "fetchAll(...)" or "fetchOne(...)" or similar "one-shot" methods, this statement can't be reused. In this case a prepared statement doesn't make sense, but this is discussed in <a href="http://framework.zend.com/issues/browse/ZF-1398">another report</a> already.</p>

<p>Isn't it a bad idea not to close a resource which isn't reused later in the code?</p>

<p>Either I'm totally wrong and royally fucked up my database or this is really a problem with Zend_Db_Adapter_Pdo_Pgsql and/or PDO. But I think not closing a resource which is not used in the later process is bad practice and should be fixed.</p>

<p>Could someone shed a little more light on this? This would be great :)</p>

<p>PostgreSQL Version:</p>

<pre class="highlight"><code>
SELECT version();
                                          version                                           
--------------------------------------------------------------------------------------------
 PostgreSQL 8.3.5 on i486-pc-linux-gnu, compiled by GCC gcc-4.3.real (Debian 4.3.2-1) 4.3.2
(1 row)
</code></pre>

<p>Please tell me if you need more information about this problem (exact statements, php version, phpinfo() ...). Thx.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:43.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

