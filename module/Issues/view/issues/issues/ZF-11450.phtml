<h2>ZF-11450: Extending Zend_Log_Writer and their factory-methods</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-06-07T13:46:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-06-23T17:09:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Beno√Æt Durand (intiilapa)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF2-18">ZF2-18</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If there is any need to extend a writer, for example Firebug to add functionality from FirePHP, you can set a writerNamespace property, e.g.</p>

<p>in an ini-property file:</p>

<p>firebug.writerNamespace = "My_Log_Writer"
firebug.writerName = "Firebug"</p>

<p>The Zend_Log::getClassName method works fine, it will recognize the namespace given in $config array, but then call_user_func calls the factory method from Zend_Log_Writer_Firebug and the code there:</p>

<p>public static function factory() {
   return  new self();
}</p>

<p>returns a Zend_Log_Writer_Firebug instance instead of My_Log_Writer_Firebug.</p>

<p>So the factory method must be overridden to take some effect.</p>

<p>solution for php5.3 compatibility is to use return new static, for php5.2 support there is no potential but override the factory method.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

