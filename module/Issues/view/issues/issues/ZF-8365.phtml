<h2>ZF-8365: Zend_Log_Writer_Db fails on MySQL</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-11-20T19:09:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-01-09T18:22:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.0 (02/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sander Bol (tubularbell)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ramon Henrique Ornelas (ramon)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Log</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Log_Writer_Db fails on MySQL due to an incorrect date format being used.</p>

<p>Zend_Log creates timestamps in an ISO-8601 format including the timezone, using date('c').</p>

<p>MySQL can not write this data to a datetime field:</p>

<p>Input: 2009-11-21T03:35:13+01:00
Output: Zend_Db_Exception with text: SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect datetime value: '2009-11-21T03:56:33+01:00' for column 'timestamp' at row 1</p>

<p>Problem seems to be with the timezone; MySQL manual makes no mention of the timezone at all, and removing it from the input renders it valid to MySQL.</p>

<p>Current Zend_Log_Writer_Db is unusable with MySQL in its default state (no column mapping), so considering this a major issue.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2010-03-26T20:37:31.000+0000</p> 
        <div class="body">
            <p>use method Zend_Log:&gt;setEventItem();</p>

<pre class="highlight"><code>
$log-&gt;setEventItem('timestamp', $date);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sander Bol (tubularbell) on 2010-03-27T00:53:23.000+0000</p> 
        <div class="body">
            <p>The proposed workaround-solution is not sufficient, as it sets the timestamp to a fixed value, instead of an up-to-date value for every log event being written.</p>

<p>Also, while I appreciate that it is possible to work around this problem, I believe the component should work properly, instead of having each and every programmer that wants to use it solve this issue themselves.</p>

<p>Because of this, I'm reopening the issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2010-03-27T04:37:09.000+0000</p> 
        <div class="body">
            <p>@Sander
In ZF 1.10.0 was added to the parameter $ extras in Zend_Log::log().
<a href="http://framework.zend.com/code/viewrep/Zend_Framework/standard/trunk/library/Zend/Log.php?r1=17687&amp;r2=19493">http://framework.zend.com/code/viewrep/â€¦</a></p>

<pre class="highlight"><code>
$log-&gt;info('Message', array('timestamp' =&gt; $date));
$log-&gt;log('Message', Zend_Log::INFO, array('timestamp' =&gt; $date));
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sander Bol (tubularbell) on 2010-03-27T08:13:00.000+0000</p> 
        <div class="body">
            <p>Thanks Ramon! That's the workaround I initially used, but it breaks when other people had to work with the code as they didn't know about having to make this special exception just because we use Zend_Log_Writer_Db in combination with MySQL.</p>

<p>I am working on my own implementation of <a href="http://framework.zend.com/issues/browse/ZF-181">http://framework.zend.com/issues/browse/ZF-181</a> to help solve this issue, by having Zend_Log_Writer_Db pass a Zend_Date or PHP Date object to the log writer, and enabling the DB adapter to accept that, but it's not moving along very much.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2011-01-09T18:22:31.000+0000</p> 
        <div class="body">
            <p>With ZF-1.11.x was added Zend_Log::setTimestampFormat() 
or if you want working Zend_Date you can extend the class "Zend_Log" and override Zend_Log::_packEvent().</p>

        </div>
    </div>
    </div>

