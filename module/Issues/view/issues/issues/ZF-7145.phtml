<h2>ZF-7145: Zend_Pdf_Page::drawText() with multi-line text</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-06-27T16:49:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Pdf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1254">ZF-1254</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>currently Zend_Pdf_Page::drawText() renders provided text within single line, whether provided text is multi-line or not.
It would be great if it could handle multi-line text natively.</p>

<p>I quickly implemented it trhough by subclassing drawText() method with following code:</p>

<pre class="highlight"><code>
foreach (explode(PHP_EOL, $text) as $i =&gt; $line) {
    $page-&gt;drawText($line, $x, $y - $i * $page-&gt;getFontSize(), $encoding);
}</code></pre>

<p>We could go further and increase flexibility by adding a line-height property on Zend_Pdf_Page and use this value as a line height to center text too.</p>

<p>Regards,
Remy</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Peter Moolenaar (petermoolenaar) on 2010-01-22T03:55:41.000+0000</p> 
        <div class="body">
            <p>I think multi-line issues are handled in another bug quite extensively</p>

        </div>
    </div>
    </div>

