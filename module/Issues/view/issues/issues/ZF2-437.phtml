<h2>ZF2-437: Router HTTP Segment does not handle defaults correctly when matching</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-08-01T10:32:49.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-01T11:46:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Mvc\Router</li>
            <li>defaults</li>
            <li>routing</li>
            <li>segment</li>
            <li>url</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF2-408">ZF2-408</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This might be same problem as (ZF2-408), but didn't want to piggyback in case it isn't.</p>

<p>When reassembling a URL from a routematch that contains defaults, it does not reconstruct the URL properly.
My router config:</p>

<pre class="literal">
'media' =&gt; array (
    'type' =&gt; 'Zend\Mvc\Router\Http\Segment',
    'options' =&gt; array (
        'route' =&gt; '/media[/:title][/:mediatype][/:item][/]',
        'constraints' =&gt; array (
            'mediatype' =&gt; ('videos|screenshots'),
            'title' =&gt; ('shakespeare|pinter')
        ),
        'defaults' =&gt; array (
            'mediatype' =&gt; '',
            'action' =&gt; 'index',
            'controller' =&gt; 'MyModule\Controller\MediaController',
        ),
    ),
),
</pre>

<p>If I enter a url of {{/media/videos/}}, my RouteMatch looks like this:</p>

<pre class="literal">
object(Zend\Mvc\Router\Http\RouteMatch)[190]
  protected 'length' =&gt; int 25
  protected 'params' =&gt; 
    array
      'subpage' =&gt; string 'videos' (length=11)
      'action' =&gt; string 'index' (length=5)
      'controller' =&gt; string 'MyModule\Controller\MediaController' (length=35)
      'title' =&gt; string '' (length=0)
  protected 'matchedRouteName' =&gt; null
</pre>

<p>This URL works and is accessible. However, if I am assembling this URL using this RouteMatch object, i.e. for a redirect, e.g.:</p>

<pre class="literal">
$router = $event-&gt;getRouter();
$params = $routeMatch-&gt;getParams();
$redirectUrl = $router-&gt;assemble($params, array(
   'name' =&gt; $routeMatch-&gt;getMatchedRouteName()
));
</pre>

<p>$redirectUrl ends up looking like: {{/media//videos/}}. This is because title is present as an empty string instead of being null or not present at all. I have tried setting title =&gt; null in the defaults config, but this doesn't do anything. Nor do I want to be explicit in the redirector because it serves as a sitewide redirector.</p>

<p>Having looked at the source, it looks to me like the problem lies with the array_merge in match() when it's building the RouteMatch object (see <a href="https://github.com/zendframework/zf2/blob/master/library/Zend/Mvc/Router/Http/Segment.php">https://github.com/zendframework/zf2/â€¦</a> line 337). The regexp returns this:</p>

<pre class="literal">
array
  0 =&gt; string '/media/videos/' (length=15)
  'param1' =&gt; string '' (length=0)
  1 =&gt; string '' (length=0)
  'param2' =&gt; string 'videos' (length=6)
  2 =&gt; string 'videos' (length=6)
</pre>

<p>So you get empty strings for the optional parameters when they're not found. These are then combined with the defaults and unfortunately override the defaults, so in the case above the "title" parameter will be empty string. To give the arguments that "optional" feel, if the regexp returns an empty string it should unset or return null in the RouteMatch that it builds.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ben Scholzen (dasprid) on 2012-08-01T11:46:27.000+0000</p> 
        <div class="body">
            <p>It is in fact the same issue.</p>

        </div>
    </div>
    </div>

