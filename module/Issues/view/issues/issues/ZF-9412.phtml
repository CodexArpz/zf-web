<h2>ZF-9412: 1. Accessing a value is a bug or a feature? 2. escapeFilter option is a bug or a feature? </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-11T19:23:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-14T14:09:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.3 (01/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter_Input</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This is a test code:
&lt;?php
require_once('Zend/Filter/Input.php');

$options = array(
                    'escapeFilter' =&gt; array('StringTrim'),
                    'breakChainOnFailure' =&gt; true,
                    'presence' =&gt; 'required'
                );

$filters = array('account' =&gt; 'StringToUpper');
$validators = array('account' =&gt; 'Alpha');

$data['account'] = 'sdfgsdgGRDW';
$input = new Zend_Filter_Input($filters, $validators, $data, $options);

if ($input-&gt;isValid()) {
    var_dump('Hooray');
    for($i = 0; $i &lt; 5; $i++){
        var_dump($input-&gt;account);
    }
} else {
    var_dump('Not valid');
}
?&gt;</p>

<ol><li><p>Just did run the Zend_Filter_Input througt the Xdebug and found that accessing the value($input-&gt;account) generate a getEscaped() functionality by default which was done when you access the isValid(). My opinion it should use the "getUnescaped()" by default if you used the isValid().</p></li>
<li><p>if a value of $data['account'] is ' sdfgsdgGRDW', has the white spaces, it returns the 'Not valid' result. It does not care that my 'escapeFilter' is the 'StringTrim'. Should it go through the Filters first and then Validations?</p></li>
</ol><p>Cheers</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-12T15:16:45.000+0000</p> 
        <div class="body">
            <p>to 1.)
When calling __get (also explicit) getEscaped() is correct.
For security reasons Zend_Filter_Input will always return a value which conforms the security.</p>

<p>to 2.)
According to the manual the espaceFilters are processed AFTER validation (different than the other filters). Returning a FALSE is correct within the given examples.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-13T01:33:23.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oleg Demeshev (01eg) on 2010-03-14T12:59:56.000+0000</p> 
        <div class="body">
            <p>to 2.) Then the Zend_Filter_Input (espaceFilters(StringTriom) documentation is wrong, isn't it? Cause it will never work. This code is basically from documentation:</p>

&lt;?php
require_once('Zend/Filter/Input.php');

$options = array('escapeFilter' =&gt; array('StringTrim'));
$filters = array('account' =&gt; 'StringToUpper');
$validators = array('account' =&gt; 'Alpha');

$data['account'] = '  sdfgsdgGRDW  ';
$input = new Zend_Filter_Input($filters, $validators, $data, $options);

if ($input-&gt;isValid()) { var_dump('Valid');}
else { var_dump('Not valid'); }
?&gt;

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-03-14T13:21:21.000+0000</p> 
        <div class="body">
            <p>Why should the example not work?
The examples within manual are very clear.</p>

<p>And directly below the example you are referring to you can read:
{quote}
Filters to escape output should be run in this way, to make sure they run after validation. Other filters you declare in the array of filter rules are applied to input data before data are validated. If escaping filters were run before validation, the process of validation would be more complex, and it would be harder to provide both escaped and unescaped versions of the data. So it is recommended to declare filters to escape output using setDefaultEscapeFilter(), not in the $filters array. 
{quote}</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oleg Demeshev (01eg) on 2010-03-14T14:09:19.000+0000</p> 
        <div class="body">
            <p>Sorry, somehow lost this part.</p>

        </div>
    </div>
    </div>

