<h2>ZF-10812: Zend_Uri_Http's getUri-method should not return the port</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-12-12T00:19:18.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-04-28T21:41:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Patrick Günther (patrickg)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Uri</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13543/ZF-10812.patch">ZF-10812.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Uri_Http's getUri-method should not return the port if the scheme is http and port is 80, or if the scheme is https and port is 443.</p>

<p>To fix it, change Zend/Uri/Http.php on line 256 to:
```</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2010-12-17T11:43:13.000+0000</p> 
        <div class="body">
            <p>I've attached a patch which includes the suggested modification, plus four test cases to reproduce the issue.
PHPUnit testdox output:
 [x] Should not return port when scheme is http and port is 80
 [x] Should not return port when scheme is https and port is 443
 [x] Should return port when scheme is http and port is not 80
 [x] Should return port when scheme is https and port is not 443</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2010-12-19T19:24:20.000+0000</p> 
        <div class="body">
            <p>Some other components do appear to rely on this behavior, such as Zend_Oauth:</p>

<pre class="highlight"><code>
1) Zend_OauthTest::testGetHttpClientResetsParameters
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-<a href="http://www.example.com">http://www.example.com:80</a>
+<a href="http://www.example.com">http://www.example.com</a>
</code></pre>

<p>Unfortunately, the change you've requested will most likely cause a bc break, and so will not be accepted in 1.x.  I think this should be pushed up to 2.x for fixing (if the issue also exists there).</p>

<p>It may be a simple matter of correcting the tests, but I would like someone with more experience with this component (Zend_Uri) to comment on that.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Patrick Günther (patrickg) on 2010-12-19T22:23:04.000+0000</p> 
        <div class="body">
            <p>Okay. Here's my workaround for people who want to avoid this problem.</p>

<pre class="highlight"><code>if (('http' == $uri-&gt;getScheme() &amp;&amp; 80 == $uri-&gt;getPort()) ||
    ('https' == $uri-&gt;getScheme() &amp;&amp; 443 == $uri-&gt;getPort())
) {
    $uri-&gt;setPort('');
}</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-04-28T12:04:23.000+0000</p> 
        <div class="body">
            <p>Could a member of the Zend Framework development team comment on this issue? Would changing this behavior be considered a BC break?  After applying my patch, Zend_OauthTest::testGetHttpClientResetsParameters fails as it relies on the "broken" behavior (see my earlier comment above).  The test in question specifically tests for that case:</p>

<pre class="highlight"><code>
public function testGetHttpClientResetsParameters()
{
    $client = new Test_Http_Client_19485876();
    $client-&gt;setParameterGet(array('key'=&gt;'value'));
    Zend_Oauth::setHttpClient($client);
    $resetClient = Zend_Oauth::getHttpClient();
    $resetClient-&gt;setUri('<a href="http://www.example.com">http://www.example.com</a>');
    $this-&gt;assertEquals('<a href="http://www.example.com">http://www.example.com:80</a>', $resetClient-&gt;getUri(true));
}
</code></pre>

<p>Notice that it calls setUri('<a href="http://www.example.com">http://www.example.com</a>') but asserts for <a href="http://www.example.com">http://www.example.com:80</a></p>

<p>Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2011-04-28T13:10:10.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>The fact that this breaks some tests is good, because this is a BC breakage and I would not introduce such a change until ZF 2.0 unless there is a good reason to do so. This bug is marked as "Minor" and I do not see any reason stated why this is causing real problems - I agree it's not pretty but is it really causing issues?</p>

<p>This issue is already addresses in the design of Zend\Uri for 2.0 - If you want you are welcome to take a peek at the proposal (it actually points to a partial implementation you can checkout using git) at <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Uri+2.0+-+Shahar+Evron">http://framework.zend.com/wiki/display/…</a></p>

<p>If you think there is a reason for BC breakage before 2.0, please elaborate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-04-28T21:40:21.000+0000</p> 
        <div class="body">
            <p>Shahar,</p>

<p>I completely agree.  It is more of an annoyance than an issue, and I can't think of any meaningful cases where having the default port number specified for http/https would cause an issue, as it is still a valid URI.  I've closed the issue, as you point out that it's been fixed in ZF2's Zend\Uri.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2011-04-28T21:41:08.000+0000</p> 
        <div class="body">
            <p>Change would cause BC break.  Issue has been resolved in ZF2 Zend\Uri</p>

        </div>
    </div>
    </div>

