<h2>ZF-1865: Declare param in find() function to match docblock @param</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-08-20T12:14:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-01-23T18:28:46.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.2 (25/Sep/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1866">ZF-1866</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>cbijlsma writes:</p>

<p>I have a class that extends Zend_Db_Table_Abstract. Just before calling the {{parent::__construct()}} method, I make a call to {{Zend_Server_Reflection::reflectClass(get_class($this))}}.</p>

<p>When I do so, I get</p>

<pre class="highlight"><code>
fatal error: Fatal error: Call to a member function isOptional() on a non-object 
in /opt/zf/library/Zend/Server/Reflection/Function/Abstract.php on line 348 
</code></pre>

<p>It appears that this happens when the function {{Zend_Db_Table_Abstract::find()}} is evaluated by the {{_reflect()}} method in the class above. While looking for a solution I found this message on the ZF Issue Tracker, but it doesn't seem to be the exact same case. Further looking on any forum doesn't give me any helpful results, too.</p>

<p>FYI: I'm using the ZF 1.0.1 in combination with PHP 5.2.3-1+b1. Below this the code I think is relevant.</p>

<pre class="highlight"><code>
class My_Db_Table extends Zend_Db_Table_Abstract { 
    public function __construct($config = null){
        echo("My_Db_Table::__construct()");

    $refClass = Zend_Server_Reflection::reflectClass(get_class($this));

        if($config == null){
            parent::__construct();
        }else{
            parent::__construct($config);
        }
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-08-20T12:21:33.000+0000</p> 
        <div class="body">
            <p>Okay, I see what's going on.  The declaration of Zend_Db_Table_Abstract::find() is as follows:</p>

<pre class="highlight"><code>
/*
 * @param  mixed                         The value(s) of the primary key.
 * @return Zend_Db_Table_Rowset_Abstract Row(s) matching the criteria.
 * @throws Zend_Db_Table_Exception
 */
public function find()
{
    ...
}
</code></pre>

<p>It is documented that a function can declare an empty parameter list, but read its parameters with {{func_get_args()}}.  See code example at <a href="http://php.net/func-get-args">http://php.net/func-get-args</a></p>

<p>However, Zend_Server_Reflection has some logic that inspects the docblock and assumes that every {{@param}} tag corresponds to a parameter that is declared in the function signature, and therefore represented in the reflection object.</p>

<p>So we must solve this with one of the following solutions:</p>

<ol><li><p>Declare parameters in function signatures.  For functions with variable number of parameters, make sure that at least the {{@param}} tags in the docblock match the declared function parameters.</p></li>
<li><p>Remove {{@param}} tags from docblocks of functions with variable arguments.</p></li>
<li><p>Change the logic in Zend_Server_Reflection to double-check that the parameter is encoded in the reflection data before trying to dereference it.</p></li>
</ol><p>I'd prefer solution #1, and it wouldn't hurt to do the double-checking as well (#3).</p>

<p>I grepped through the ZF library for other cases where the docblock documents a {{@param}} but the function prototype doesn't declare any params.  There is only one other such case, in {{Zend_View_Helper_DeclareVars::declareVars()}}.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-08-20T18:28:54.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 6162.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-01-23T18:28:46.000+0000</p> 
        <div class="body">
            <p>Updating Fix Version to follow issue tracker conventions.</p>

        </div>
    </div>
    </div>

