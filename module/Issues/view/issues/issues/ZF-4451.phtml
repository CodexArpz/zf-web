<h2>ZF-4451: Zend_Config with a strict mode</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-10-02T04:47:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-12T00:48:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A strict mode in Zend_Config to throw an exception when an item was not found in a configuration file.
Perhaps, it is already proposed or already implemented but I see it like that :</p>

<p>class Zend_Config[Ini|Xml]{
 public function __construct($filename, $section = null, $allowModifications = false, $strict = false){}
}</p>

<p>class Zend_Config{</p>

<p>private $_strict;</p>

<p>public function __construct(array $array, $allowModifications = false, $strict = false){
       $this-&gt;_strict = $strict;
}</p>

<p>public function get($name, $default = null){
        $result = $default;
        if (array_key_exists($name, $this-&gt;_data)) {
            $result = $this-&gt;_data[$name];
        }else{
             if($this-&gt;_strict === true){
                  throw new Zend_Config_Exception("....");
             }
        return $result;
    }</p>

<p>}</p>

<p>Best regards</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2008-12-05T02:15:04.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>Can you provide a use-case for this idea please?  I'm not sure what the benefit is.</p>

<p>Regards,</p>

<p>Rob...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by axel dahl (whisperstream) on 2008-12-08T21:13:59.000+0000</p> 
        <div class="body">
            <p>I'm also trying to do this in a project.  My method was to override the Zend_Config class and create a getRequired($key) method.</p>

<p>If the key exists the value is returned if the key is not found then an exception is thrown.  I think that I will have to find some other way as Zend_Config doesn't allow it self to be sub classes very easily, since the constructor uses "new self()" when to add a subsection. So that means if I override the class, then any sub sections will still be Zend_Config instances and not my subclass instance :(</p>

<p>My use case is that, in the payment system code, I want to require that certain elements like the following exist:
* payment system id
* payment system password
* default currency
* supported currencies</p>

<p>I could at an if statement before each value and then throw an exception, but I feel it's neater to just write</p>

<p>$config-&gt;getRequired('site_name');
$config-&gt;payment-&gt;getRequired('supported_currencies');
$config-&gt;payment-&gt;get('some_optional_value', 'default value');</p>

<p>Anyway those are my reasons, is there a better way to do this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by coco (coco54) on 2008-12-11T09:42:38.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>What's happening if the item "payment" was not defined in your configuration file ?
You will get an php error. We can convert a php error to an exception but this is not the subject.</p>

<p>I want to use required values in my models, my controllers, my views.
I want to be sure what the administrator has defined this values in the configuration file.</p>

<p>For example, my ini config looks like :</p>

<p>view.doctype                = XHTML1_STRICT
view.escape                 = htmlentities
view.encoding               = utf-8</p>

<p>My config file is loaded in the Zend_Registry.</p>

<p>If somewhere in my application I call Zend_Registry::get('config')-&gt;view-&gt;escape. Zend_Config must to throw an exception if the item was not found. The request will be forwarded to the ErrorController because an "internal error" was not catched.</p>

<p>Best Regards,</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2008-12-11T12:23:33.000+0000</p> 
        <div class="body">
            <p>This is not needed in Zend_Config as you can trivially do:</p>

<pre class="highlight"><code>
$siteName = $config-&gt;site_name;
if(!$siteName) {
    thrown new Exception ('please set your config');
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by coco (coco54) on 2008-12-12T00:48:32.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>I can't understand why it is not the Zend_Config's job to throw this exception. If I have defined many parameters in a configuration, sure it's required by my application.
It is not my job to check each time if the parameter is defined.</p>

<p>Best Regards,</p>

        </div>
    </div>
    </div>

