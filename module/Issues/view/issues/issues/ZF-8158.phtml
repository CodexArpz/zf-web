<h2>ZF-8158: Autoload bug with class_exists</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-27T05:14:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-03T11:08:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.7 (28/Jul/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marcus Bointon (synchro)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Shahar Evron (shahar)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Cookie</li>
            <li>Zend_Http_CookieJar</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13192/ZF-8158.diff">ZF-8158.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In several places (I've only inidicated ones I've run into), class_exists() is called prior to calling Zend_Loader, however, it's called without overriding the default autoload behaviour, and is thus likely to interfere with autoload behaviour happening outside the framework and disable the internal use of Zend_Loader for Zend components. This was introduced in Zend framework 1.8.2. Various instances of this approach have since been fixed as bugs, such as <a href="http://framework.zend.com/issues/browse/ZF-6660">http://framework.zend.com/issues/browse/ZF-6660</a> and <a href="http://zendframework.com/issues/browse/ZF-6591">http://zendframework.com/issues/browse/ZF-6591</a> so I think these should be fixed too.</p>

<p>I suspect that all uses of class_exists should be checked.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marcus Bointon (synchro) on 2010-06-30T09:29:47.000+0000</p> 
        <div class="body">
            <p>Yes, this is still present in 1.10.6 and it means I can't use ZF at all!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marcus Bointon (synchro) on 2010-06-30T10:10:29.000+0000</p> 
        <div class="body">
            <p>A quick grep finds me 97 instances of class_exists without a 'false' second parameter (though I'm not trying to resurrect #10053 here). I don't know if it's worth me generating what would be a pretty huge patch for all of them, plus I don't know ZF well enough to be able to fix all of them sensibly - are partial patches welcome?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Anthon Pang, VIP Software Technologies Inc. (vipsoft) on 2010-07-06T22:50:48.000+0000</p> 
        <div class="body">
            <p>(I've deleted my earlier comment as it was off-topic.)</p>

<p>ZF-6660 and ZF-6591 were special cases.  In general, we want class_exists() without the second parameter (false) whenever it precedes a loadClass(), because it allows other autoloaders to execute.</p>

<p>If you've implemented your own autoloader, just make sure it doesn't throw an exception when the file/class is not found.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marcus Bointon (synchro) on 2010-07-07T00:20:59.000+0000</p> 
        <div class="body">
            <p>It's a shame you deleted your comment as it contained two of the instances that I'd run into! I'm calling Zend_Feed:import, which correctly uses Zend_Loader to load Zend_Http_Client, which correctly uses Zend_Loader to load Zend_Uri, but unfortunately that doesn't use Zend_Loader and calls class_exists before trying to load Zend_Uri_Http and thus breaks. Consistency is the key here, and your previously posted fix works perfectly in this case.  "allowing other autoloaders to execute" is precisely what's breaking ZF; my autoloader is not compatible with ZF, nor should it need to be, and it's why Zend_Loader exists. Zend_Loader DOES call class_exists without the second param, so we should be using it everywhere, and not clumsily circumventing it randomly. As it stands it renders ZF unusable as a component library; if I can't load a component and call a function in it without breaking my app, it's broken.
I'll post a patch for just this specific case rather than trying to fix anything bigger.
Given that ZF2 has a very clear aim of doing <em>everything</em> with Zend_Loader via autoload, it seems silly not to head in vaguely the same direction in 1.x.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marcus Bointon (synchro) on 2010-07-07T13:57:00.000+0000</p> 
        <div class="body">
            <p>Diff against 1.10.6 to fix a couple of the mentioned instances of this problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2010-07-08T04:54:49.000+0000</p> 
        <div class="body">
            <p>Fixed for Zend_Http_Client in trunk rev.22537 (also noticed one more place where class_exists was used)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2010-07-08T05:01:32.000+0000</p> 
        <div class="body">
            <p>Fixed for Zend_Uri in trunk rev.22538</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shahar Evron (shahar) on 2010-07-08T05:48:54.000+0000</p> 
        <div class="body">
            <p>Fixes for Zend_Uri and Zend_Http_Client merged to release branch in 22539.
Thanks for the patch!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2011-05-03T11:08:47.000+0000</p> 
        <div class="body">
            <p>marking this issue as resolved in 1.10.7</p>

        </div>
    </div>
    </div>

