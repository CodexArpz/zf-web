<h2>ZF-774: function isLengthBetween (for strings)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-01-20T00:41:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Darby Felton (darby)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>
/**
* Returns TRUE if the length of a string is within the specified range.
* Range is inclusive by default.
*
* @param string $value
* @param integer $min
* @param integer $max
* @param bool $inc
* @return bool
**/
public static function isLengthBetween($value, $min, $max, $inc = TRUE)
{
    $length = strlen($value);

    if ($inc)
        return (bool) ( $length &gt;= $min &amp;&amp; $length &lt;= $max );

    return (bool) ( $length &gt; $min &amp;&amp; $length &lt; $max );
}
</code></pre>

<p>I find myself patching Filter.php with this function on each new release.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-01-20T07:59:55.000+0000</p> 
        <div class="body">
            <p><a href="http://framework.zend.com/fisheye/browse/Zend_Framework/trunk/incubator/library/Zend/Validate/StringLength.php">Zend_Validate_StringLength</a> is now available in the incubator for providing this functionality.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Roy Laurie (kylratix) on 2007-01-20T15:11:48.000+0000</p> 
        <div class="body">
            <p>I didn't catch Zend::Validate before. It looks very promising.</p>

<p>Shouldn't this functionality be part of Zend::Filter as well? As is alnum, alpha, etc. Or is Validate meant to replace Filter?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-01-22T08:54:13.000+0000</p> 
        <div class="body">
            <p>Good question. The Zend_Validate component is meant for validation, and currently contains classes for the functions of the current Zend_Filter class that perform validation (e.g., isAlpha()). The new Zend_Filter component contains classes for the functions of the current Zend_Filter class that perform filtering (e.g., noTags()). Though filtering and validation are very often used in conjunction, the concrete implementation of filters differs slightly from validators. Whereas a filter generally returns some transformation of its input (e.g., string), a validator returns a boolean of whether the input passed the validation criteria. A validator should also provide information about why the input failed validation, so the Zend_Validate_Interface provides a getMessages() method for this purpose when a particular validation should fail. For more information, you might see the <a href="http://framework.zend.com/wiki/x/Wi8">Zend_Filter design proposal</a>.</p>

        </div>
    </div>
    </div>

