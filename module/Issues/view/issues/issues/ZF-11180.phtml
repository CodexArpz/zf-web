<h2>ZF-11180: Zend_Json_Server generates invalid return type in a case of multiple method prototypes</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-03-16T07:09:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-23T12:21:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Grimalovsky (flying)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14920/Server.patch">Server.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When class method or function registered with Zend_Json_Server have variable types for its parameters and return type - Zend_Server_Reflection generates multiple prototypes for this method.</p>

<p>However when method definition is registered in Zend_Json_Server - it doesn't takes in mind a fact that in this case each return type is duplicated. Zend_Json_Server::_getReturnType() just runs over list of method prototypes and returns list of them while correct behavior will be to also check for duplicates in this list or use array_unique().</p>

<p>Example to demonstrate the problem:</p>

<p>class A
{
    /**
     * Sum two numbers
     *
     * @param int|float $a    First parameter
     * @param int|float $b    Second parameter
     * @return int|float
     */
    public function sum($a,$b)
    {
        return($a+$b);
    }
}</p>

<p>$server = new Zend_Json_Server();
$server-&gt;setClass('A')
       -&gt;setTarget('/')
       -&gt;setEnvelope(Zend_Json_Server_Smd::ENV_JSONRPC_2);
$smd = $server-&gt;getServiceMap();
header('Content-Type: application/json');
echo $smd;</p>

<p>Resulted response will be:</p>

<p>{"transport":"POST","envelope":"JSON-RPC-2.0","contentType":"application\/json","SMDVersion":"2.0","target":"\/","services":{"sum":{"envelope":"JSON-RPC-2.0","transport":"POST","parameters":[{"type":["integer","float"],"name":"a","optional":false},{"type":["integer","float"],"name":"b","optional":false}],"returns":["integer","integer","integer","integer","float","float","float","float"]}},"methods":{"sum":{"envelope":"JSON-RPC-2.0","transport":"POST","parameters":[{"type":["integer","float"],"name":"a","optional":false},{"type":["integer","float"],"name":"b","optional":false}],"returns":["integer","integer","integer","integer","float","float","float","float"]}}}</p>

<p>Notice 8 results for result type instead of expected 2 results:</p>

<p>"returns":["integer","integer","integer","integer","float","float","float","float"]</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Grimalovsky (flying) on 2011-12-23T12:21:20.000+0000</p> 
        <div class="body">
            <p>Patch for issue for version 1.11.11</p>

        </div>
    </div>
    </div>

