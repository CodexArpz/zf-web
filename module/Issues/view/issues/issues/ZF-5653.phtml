<h2>ZF-5653: Zend_Validate::is($value, 'InArray', array(1,2,3)) fails </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-01-29T06:49:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-03-27T16:18:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.8 (30/Mar/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Validate::is($value, 'InArray', array(1,2,3)) gives the following error (the array dump is the output of a print_r($args) just before $object = $class-&gt;newInstanceArgs($args); on line 153 of Zend/Validate.php):</p>

<p>Array
(
    [0] =&gt; 1
    [1] =&gt; 2
    [2] =&gt; 3
)
<br /><b>Catchable fatal error</b>:  Argument 1 passed to Zend_Validate_InArray::__construct() must be an array
, integer given in <b>/path/to/library/Zend/Validate/InArray.php
</b> on line <b>69</b><br /></p>

<p>After temporarly removing the array type hinting from line 69 of Zend/Validate/InArray.php i dumped the $haystack parameter and got "(int) 1" (the first element) as the output.</p>

<p>PHP is 5.2.4 on Linux. (a friend also reproduced the issue on PHP 5.2.6)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-03-27T16:16:57.000+0000</p> 
        <div class="body">
            <p>The is method expects all options to be given concated as array...
This means when the validator expects $min, $max you would have to give "array($min, $max);</p>

<p>But as the array validator accepts only ONE option, and you gave three, the notation you gave is not correct.</p>

<p>To give an array as input you will have to give:</p>

<pre class="highlight"><code>
Zend_Validate::is($value, 'InArray', array(array(1,2,3)));
</code></pre>

<p>because your notation said
Zend_Validate_InArray(1, 2, 3);
which can not work for the InArray validator.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-03-27T16:18:22.000+0000</p> 
        <div class="body">
            <p>Closing due to false handling... no bug</p>

        </div>
    </div>
    </div>

