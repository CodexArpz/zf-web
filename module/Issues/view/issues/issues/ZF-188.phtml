<h2>ZF-188: SQL debug</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-07-03T02:43:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It is very usefull to call some method before and after every SQL query, which would count how long every query took. 
Now the only way to do this is to edit Zend_Db_Adapter_Abstract -&gt; query method but this is not very comfortable, because after every framework update you would have to copy&amp;paste PHP code.</p>

<p>Something like this could be done in Zend_Db_Adapter_Abstract:
Zend_Db_Adapter_Abstract.onBeforeQuery = null;
Zend_Db_Adapter_Abstract.onAfterQuery = null;
Zend_Db_Adapter_Abstract  -&gt; setOnBeforeQuery (callable function/method)
Zend_Db_Adapter_Abstract  -&gt; setOnAfterQuery (callable function/method)</p>

<p>Zend_Db_Adapter_Abstract -&gt; query would look like this:
public function query($sql, $bind = array()){
    if($this-&gt;onBeforeQuery !== null){
        call_user_func($this-&gt;onBeforeQuery, $sql);
    }
    ... 
    if($this-&gt;onAfterQuery !== null){
        call_user_func($this-&gt;onAfterQuery , $sql);
    }
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-07-03T16:54:21.000+0000</p> 
        <div class="body">
            <p>Would you please describe the advantages of the suggestions above compared to the existing Zend_Db_Profiler?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tautvydas Andrikys (esminis) on 2006-07-04T23:57:18.000+0000</p> 
        <div class="body">
            <p>Sorry missed that Zend_Db has profiler, which does the same.
You can close this ticket.</p>

        </div>
    </div>
    </div>

