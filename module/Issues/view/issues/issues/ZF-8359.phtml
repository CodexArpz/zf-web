<h2>ZF-8359: Quoting New Lines</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-11-20T07:33:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christian R (antiphp)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Oracle</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When quoting values with new lines, the result will not be found in an Oracle database (10g) anymore. I guess quoting new lines is not the correct way:</p>

<p>Reproduce:</p>

<pre class="highlight"><code>
        $db = $this-&gt;_getDatabaseAdapter(); // Zend_Db_Adapter_Oracle
        $db-&gt;query("DROP TABLE " . $db-&gt;quoteIdentifier("TEST_TABLE")); // optional
        $create = &lt;&lt;query($create);
        $db-&gt;insert("TEST_TABLE", array("IDA" =&gt; 2, "TEST_VALUE" =&gt; $value));

        $valueSlash     = addcslashes($value, "\r\n");

        $select         = $db-&gt;select()-&gt;from("TEST_TABLE", "TEST_VALUE");
        $valueSelected1 = $db-&gt;fetchOne($select);
        $valueQuoted    = $db-&gt;quote($valueSelected1);

        // not working
        $where  = $db-&gt;quoteIdentifier("TEST_VALUE") . " = "
                . $valueQuoted;
        $select = $db-&gt;select()-&gt;from("TEST_TABLE", "IDA")-&gt;where($where);
        $valueSelected2 = $db-&gt;fetchAll($select);

        // working
        $where  = $db-&gt;quoteIdentifier("TEST_VALUE") . " = "
                . "'" . $value . "'";
        $select = $db-&gt;select()-&gt;from("TEST_TABLE", "IDA")-&gt;where($where);
        $valueSelected3 = $db-&gt;fetchAll($select);

        // not working
        $select = $db-&gt;select()-&gt;from("TEST_TABLE", "IDA")-&gt;where("TEST_VALUE = ?", $value);
        $valueSelected4 = $db-&gt;fetchAll($select);

        var_dump(compact("value", "valueSlash", "valueQuoted", "valueSelected1", "valueSelected2", "valueSelected3", "valueSelected4"));
        exit;
</code></pre>

<p>The result is this one:</p>

<pre class="highlight"><code>
array(7) {
  ["value"]=&gt;
  string(13) "Straf-
taten"
  ["valueSlash"]=&gt;
  string(15) "Straf-\r\ntaten"
  ["valueQuoted"]=&gt;
  string(17) "'Straf-\r\ntaten'"
  ["valueSelected1"]=&gt;
  string(13) "Straf-
taten"
  ["valueSelected2"]=&gt;
  array(0) {
  }
  ["valueSelected3"]=&gt;
  array(1) {
    [0]=&gt;
    array(1) {
      ["IDA"]=&gt;
      string(1) "2"
    }
  }
  ["valueSelected4"]=&gt;
  array(0) {
  }
}
</code></pre>

<p>$valueSelected2 and $valueSelected4 do not return anything.</p>

<p>This is due to wrong (?) escaping. Maybe this is an Oracle configuration failure, but then it should be possible to add or remove characters from the escape list:
return "'" . addcslashes($value, "\000\n\r\\032") . "'";</p>

<p>Zend/Db/Adapter/Oracle.php:231 -&gt; _quote()</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2009-11-20T15:31:26.000+0000</p> 
        <div class="body">
            <p>I correct code tag in the description :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:21.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

