<h2>ZF-4218: Chinese Traditional (Hong Kong) language strings not showing</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-09-07T07:43:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-07T09:02:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                philip andrew (philip142au)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>I have ZF1.5 and today I upgraded to ZF1.6.</p>

<p>Note I have two servers, server A is my mac osx10.5.4 has PHP version 5.2.5.
server B is my unix server is centos with PHP version 5.1.6.</p>

<p>I have language strings in language CSV files in English and (note this is Cantonese) Chinese Traditional.</p>

<p>This is what works, server A and B work with ZF1.5 with the language strings. Server A also works with ZF1.6 with the language strings.
This is what does not work, server B with ZF1.6.</p>

<p>Specifically what does not work is that if the string starts with the cantonese character it does not get through to display on the page. When a non-cantonese character exists, it starts printing strings.</p>

<p>Talking about the problem case - only ZF1.6 on server B
form.volunteer.phone.day;聯絡電話 (日間) 852
The above line shows (日間) 852 on the form
form.volunteer.emailaddress;電郵地址
The above line shows nothing.</p>

<p>Here is how I bootstrap:
        // Zend Translate
        $translationFileEn = ROOT_DIR . '/application/languages/en/lang.csv';
        $translationFileZh = ROOT_DIR . '/application/languages/zh/lang.csv';
        $translateEn = new Zend_Translate('csv', $translationFileEn, 'en');
        $translateZh = new Zend_Translate('csv', $translationFileZh, 'zh');
        Zend_Registry::set('translateEn', $translateEn);
        Zend_Registry::set('translateZh', $translateZh);</p>

<p>Update&gt;&gt;</p>

<p>The problem must be localized in Zend_Translate as I copied ZF1.6 to my server B, I deleted Translate.php and Translate folder, I copied the 1.5 Translate.php and Translate folder into my 1.6ZF on server B and it works fine now.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-09-07T09:01:59.000+0000</p> 
        <div class="body">
            <p>This is not an issue.</p>

<p>Note that, regarding to the manual, the CSV adapter is NOT locale unaware... this is due to restrictions of PHP itself. As the community has decided that the CSV adapter must use fgetcsv for performance reasons, we have also the restrictions of that native function.</p>

<p>Simple solution: Switch your servers locale to UTF-8 and use also UTF-8 for storing the csv files and you will have no problems at all with the benefit that al languages will work.</p>

        </div>
    </div>
    </div>

