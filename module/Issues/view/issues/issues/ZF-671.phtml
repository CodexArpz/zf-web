<h2>ZF-671: No baseUrl/pathInfo auto-detection in Zend_Controller_Request_Http</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2006-12-20T02:06:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:35.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.7.0 (18/Jan/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alex Adriaanse (alexadriaanse)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10191/zend_controller_request_http_null_defaults.patch">zend_controller_request_http_null_defaults.patch</a></li>
            <li><a href="/issues/secure/attachment/10200/zend_controller_request_http_setbaseurl_fix.patch">zend_controller_request_http_setbaseurl_fix.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The default values that are returned when calling getPathInfo(), getBaseUrl(), etc. from Zend_Controller_Request_Http are empty strings rather than being auto-detected based on the actual request.  This causes Zend_Controller_RewriteRouter-&gt;route() to try to match based on an incorrect value for $pathInfo.  The attached patch fixes this.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-12-28T06:49:21.000+0000</p> 
        <div class="body">
            <p>Actually, the attached patch makes most tests fail, which means the fix is much more involved. I'll update once I get closer to a solution.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-12-29T15:39:01.000+0000</p> 
        <div class="body">
            <p>Resolved with revision 2552</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2007-01-02T23:46:48.000+0000</p> 
        <div class="body">
            <p>Thanks for fixing this.  I have reviewed r2552 and while this seems to mostly fix this problem, it does seem to introduce a new problem in setBaseUrl(): it always sets $_baseUrl to an empty string.</p>

<p>I have attached a patch that fixes this.  I hope my understanding of what the existing code is supposed to do is correct.  I have not run any of the tests with this patch yet so I'm not sure if it'd break anything.  Note that I removed the strlen() and (false !== $pos) comparisons since the (0 === $pos) check makes them redundant.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-03T11:28:39.000+0000</p> 
        <div class="body">
            <p>What behaviour breaks by having $_baseUrl be an empty string? I'm not sure that the fix you propose is needed, because I don't know what problem it fixes... (This isn't to bash you -- I just need more information)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2007-01-03T17:14:44.000+0000</p> 
        <div class="body">
            <p>If getBaseUrl() returns an empty string then getPathInfo() returns will contain the complete request URI.  This means that, for instance, if you have a URI of /dir/action and mod_rewrite passes this on to /dir/index.php, then getBaseUrl() returns "" and consequently getPathInfo() returns "/dir/action" instead of "/action".  This does not seem right to me, and it causes Zend_Controller routes to break unless I manually override $_baseUrl.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-04T10:44:58.000+0000</p> 
        <div class="body">
            <p>What I'm seeing here is that your baseUrl should be set to '/dir'. What OS and web server are you running? It looks like Apache, so this should be autodetected. I'm going to write a few more tests to see if I can reproduce it or not.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2007-01-04T11:37:02.000+0000</p> 
        <div class="body">
            <p>I'm running Apache 2.0.52 with PHP 5.2.0 on Debian Linux 3.1.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-04T20:21:51.000+0000</p> 
        <div class="body">
            <p>Okay, I can reproduce this with the following test case:</p>

<pre class="highlight"><code>
    public function testBasePathAutoDiscoveryWithPhpFile()
    {
        $_SERVER['REQUEST_URI']     = '/dir/action';
        $_SERVER['PHP_SELF']        = '/dir/index.php';
        $_SERVER['SCRIPT_FILENAME'] = '/var/web/dir/index.php';
        $request = new Zend_Controller_Request_Http();

        $this-&gt;assertEquals('/dir', $request-&gt;getBasePath(), $request-&gt;getBaseUrl());
    }
</code></pre>

<p>I'll be attempting to fix this. In the meantime, you can always use setBaseUrl() manually to set the base URL properly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-04T21:12:49.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 2616.  There were some subtle errors in the autodiscovery logic. Fixed this, and added an additional test for URLs of the form /dir/controller that resolve to /dir/index.php.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2007-01-21T01:24:37.000+0000</p> 
        <div class="body">
            <p>I've verified the fix in version 0.7.0 and it works fine now.  Thanks a lot for getting this resolved!</p>

        </div>
    </div>
    </div>

