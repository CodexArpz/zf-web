<h2>ZF-9613: The dispatch function does not seem to respect modules.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-04-04T10:58:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ethan Brooks (ebr00ks)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The dispatch function does not seem to respect modules.</p>

<p>Has anyone seen this issues?  Can this be true? I was unable to find any examples online that used multiple modules.</p>

<p>class Tests_CalculatorControllerTest extends Tests_ControllerTestCase
{
//This works because the default module is default
    public function testDefaultShouldInvokeFileAction()
    {
        $this-&gt;dispatch('/default/file');
        $this-&gt;assertModule('default');
        $this-&gt;assertController('file');
        $this-&gt;assertAction('index');
    }
    // so does this
    public function testDefaultShouldInvokeIndexAction()
    {
        $this-&gt;dispatch('/');
        $this-&gt;assertModule('default');
        $this-&gt;assertController('index');
        $this-&gt;assertAction('index');
    }</p>

<p>//This fails because the skeleton module is not default
    public function testSkeletonShouldInvokeIndexAction()
    {</p>

<pre><code>    $this-&gt;dispatch('/skeleton');
    $this-&gt;assertModule('/skeleton');
    $this-&gt;assertController('index');
    $this-&gt;assertAction('index');
}
// same problem here
public function testSkeletonShouldInvokeCalculatorAction()
{
    $this-&gt;dispatch('/skeleton/calculator');
    $this-&gt;assertModule('skeleton');
    $this-&gt;assertController('calculator');
    $this-&gt;assertAction('index');
}
</code></pre>

<p>}</p>

<p>PHPUnit 3.4.11 by Sebastian Bergmann.</p>

<p>.FF...</p>

<p>Time: 13 seconds, Memory: 18.50Mb</p>

<p>There were 2 failures:</p>

<p>1) Tests_CalculatorControllerTest::testSkeletonShouldInvokeIndexAction
Failed asserting last module used &lt;"default"&gt; was "skeleton"</p>

<p>C:\htdocs\php_library\zendframework\library\Zend\Test\PHPUnit\ControllerTestCase.php:929
C:\htdocs\Root\modules\skeleton\tests\CalculatorControllerTest.php:18</p>

<p>2) Tests_CalculatorControllerTest::testSkeletonShouldInvokeCalculatorAction
Failed asserting last module used &lt;"default"&gt; was "skeleton"</p>

<p>C:\htdocs\php_library\zendframework\library\Zend\Test\PHPUnit\ControllerTestCase
.php:929
C:\htdocs\Root\modules\skeleton\tests\CalculatorControllerTest.php:26</p>

<p>FAILURES!
Tests: 6, Assertions: 10, Failures: 2.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by mosta (crow) on 2010-06-15T16:10:13.000+0000</p> 
        <div class="body">
            <p>I have the same problem</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by mosta (crow) on 2010-06-16T06:03:16.000+0000</p> 
        <div class="body">
            <p>in your test directory , did you create skeleton repertory like application/module/skeleton/controllers</p>

<p>I resolve the probleme by having the same structure in the application and the test</p>

        </div>
    </div>
    </div>

