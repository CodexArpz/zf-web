<h2>ZF-5957: Expose underlying Zend_Db_Select for Zend_Auth_Adapter_DbTable</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-03-06T10:24:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-04-14T12:43:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Auth</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently the underling DB Select object used for db-table auth is not exposed through a getter method.</p>

<p>Suggest changing:</p>

<pre><code>    $dbSelect = $this-&gt;_zendDb-&gt;select();
</code></pre>

<p>To $dbSelect =  $this-&gt;getSelect();</p>

<p>and adding a getSelect public method.</p>

<p>Purpose: to add additional clauses/predicates to the authentication -- eg an enabled true/false.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-03-06T10:44:31.000+0000</p> 
        <div class="body">
            <p>Can you add the proposed use case code?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin McArthur (kevin) on 2009-03-06T10:59:26.000+0000</p> 
        <div class="body">
            <pre class="highlight"><code>
$adapter = new Zend_Auth_Adapter_DbTable(
                   $db,
                   'users',
                   'username',
                   'password',
                   'md5(?)'
                 );

$adapter-&gt;setIdentity($params-&gt;username)
                -&gt;setCredential($params-&gt;password);

$adapter-&gt;getSelect()-&gt;where('enabled = ?', true);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-04-14T09:15:55.000+0000</p> 
        <div class="body">
            <p>Added in r14892 to trunk</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-04-14T12:33:11.000+0000</p> 
        <div class="body">
            <p>The added method name is getPreauthenticationDbSelect(), its been asked to shorten it to getDbSelect(), ... there are a couple of reasons for the length and conciseness of name:
* this method name spells out that the select object is provided pre-authentication time and will not contain any of the identity and credential information
* on subsequent retrieval of this object (Even after an authenticate() call), the object will retain the same state that it had prior to any of the previous authenticate() calls
* this method is considered <em>advanced</em> usage, and developers should fully understand it before using it.  the longevity of the name is an attempt at discouraging "drive-by" usage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-04-14T12:43:47.000+0000</p> 
        <div class="body">
            <p>Why not "getDbAuthSelect()"?</p>

        </div>
    </div>
    </div>

