<h2>ZF-2348: Zend_View_Helper_Paragraph</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-12-22T10:33:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-02-08T03:02:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>A new view helper, intended to replace nl2br() - ease and propagate the use of the semantically meaningful</p>

<p>&lt;</p>

<p>p&gt; element instead of <br />.</p>

<p>Details:</p>

<ul><li>trim()-s the supplied text.</li>
<li>Deletes all carriage returns</li>
<li>Searches for all (possibly multiple) newlines, and replaces them with a closing and an opening p element (using preg_replace()).</li>
<li>Wraps the result into an opening and a closing p tag and returns.</li>
</ul><p>Code:</p>

<pre class="highlight"><code>class Zend_View_Helper_Paragraph
{
    public function paragraph($text)
    {
        return '</code></pre><p><code>' . preg_replace('/[\r\n]+(\h+[\r\n]+)?/', '</code></p><code></code><p><code>', trim($text)) . '</code></p><code>';
    }
}</code>

<p>Usage:</p>

<p>In your view:</p>

<pre class="highlight"><code>
echo $this-&gt;paragraph($this-&gt;text);
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2007-12-26T20:23:36.000+0000</p> 
        <div class="body">
            <p>Fixing a bug by eliminating carriage returns.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-01-07T18:17:35.000+0000</p> 
        <div class="body">
            <p>What about something like this?</p>

<pre class="highlight"><code>function wpautop($pee, $br = 1) {
    $pee = $pee . "\n"; // just to make things a little easier, pad the end
    $pee = preg_replace('|<br />\s*<br />|', "\n\n", $pee);
    // Space things out a little
    $allblocks = '(?:table|thead|tfoot|caption|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|select|form|map|area|blockquote|address|math|style|input|p|h[1-6]|hr)';
    $pee = preg_replace('!(&lt;' . $allblocks . '[^&gt;]*&gt;)!', "\n$1", $pee);
    $pee = preg_replace('!(' . $allblocks . '&gt;)!', "$1\n\n", $pee);
    $pee = str_replace(array("\r\n", "\r"), "\n", $pee); // cross-platform newlines
    $pee = preg_replace("/\n\n+/", "\n\n", $pee); // take care of duplicates
    $pee = preg_replace('/\n?(.+?)(?:\n\s*\n|\z)/s', "</code></pre><p><code>$1</code></p><code>\n", $pee); // make paragraphs, including one at the end
    $pee = preg_replace('|</code><p><code>\s*?</code></p><code>|', '', $pee); // under certain strange conditions it could create a P of entirely whitespace
    $pee = preg_replace('!</code><p><code>([^&lt;]+)\s*?((?:div|address|form)[^&gt;]*&gt;)!', "</code></p><code></code><p><code>$1</code></p><code>$2", $pee);
    $pee = preg_replace( '|</code><p><code>|', "$1</code></p><code></code><p><code>", $pee );
    $pee = preg_replace('!</code></p><code></code><p><code>\s*(?' . $allblocks . '[^&gt;]*&gt;)\s*</code></p><code>!', "$1", $pee); // don't pee all over a tag
    $pee = preg_replace("|</code><p><code>(</code></p><code>|", "$1", $pee); // problem with nested lists
    $pee = preg_replace('|</code><p><code></code></p><code></code><blockquote><code>]*)&gt;|i', "</code><blockquote><code></code><p><code>", $pee);
    $pee = str_replace('</code></p><code></code></blockquote><code>', '</code></blockquote><code>', $pee);
    $pee = preg_replace('!</code><p><code>\s*(?' . $allblocks . '[^&gt;]*&gt;)!', "$1", $pee);
    $pee = preg_replace('!(?' . $allblocks . '[^&gt;]*&gt;)\s*</code></p><code>!', "$1", $pee);
    if ($br) {
        $pee = preg_replace('/&lt;(script|style).*?&lt;\/\\1&gt;/se', 'str_replace("\n", "", "\\0")', $pee);
        $pee = preg_replace('|(?)\s*\n|', "<br />\n", $pee); // optionally make line breaks
        $pee = str_replace('', "\n", $pee);
    }
    $pee = preg_replace('!(?' . $allblocks . '[^&gt;]*&gt;)\s*<br />!', "$1", $pee);
    $pee = preg_replace('!<br />(\s*?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^&gt;]*&gt;)!', '$1', $pee);
    if (strpos($pee, '</code><pre><code>)(.*?)</code></pre><code>!is', 'clean_pre', $pee );
    $pee = preg_replace( "|\n$|", '', $pee );

    return $pee;
}
</code>

<p>I use it and I created a helper in my application for it but there is an explication of it. <a href="http://photomatt.net/scripts/autop/">http://photomatt.net/scripts/autop/</a></p>

<p>It's part of Word Press so I'm not sure about the whole thing with the cla but if people are supportive of it I will gladly contact him to see if he has  a problem signing one to share the code.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-01-08T14:17:57.000+0000</p> 
        <div class="body">
            <p>Thank you for the advice. I'm thinking about the advantages of handling the block level elements, but I don't want to bloat the function.
In the meantime, I have improved the regex to avoid generating paragraphs containing only white-space.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-01-08T14:25:24.000+0000</p> 
        <div class="body">
            <p>Refactoring a bit: using smarter regex to deal with carriage returns instead of str_replace().</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-01-10T21:56:31.000+0000</p> 
        <div class="body">
            <p>I just received an email back from Matt and he said the code is public domain + MIT + GPL so if we go with the more advanced function if we still need Matt to submit a CLA</p>

<p>I think that if you are going to do a paragraph class it should support block level elements and such as if I were to use this I would want to pass in text that I have stored in my db for say a news story or something to this function to normalize the paragraphs which is what I created my helper for.</p>

<p>while I do see your point in a simple function I think the advanced one would fit the 80/20 rule better.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-01-11T12:10:19.000+0000</p> 
        <div class="body">
            <p>I've thinked about it, you're right, will be added block-level-awareness.
I don't want to copy-paste Matt's code, rather write own, so licensing won't be a problem.</p>

<p>Look back for upgrades in a few days.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-14T09:25:50.000+0000</p> 
        <div class="body">
            <p>On reviewing the comments, I feel that this needs to include block-level awareness before it can be included with ZF. Unless Ádám can complete it by next Wednesday (22 Feb 2008), we'll need to postpone its inclusion until after that release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:33:30.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-03-26T11:06:43.000+0000</p> 
        <div class="body">
            <p>Hey all, whats the status of this?</p>

<p>Is there code in the incubator for this helper? Is this a Jira based proposal?</p>

<p>Can we get this to Proposal like standards? Tests, docs, etc?</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-03-26T17:52:29.000+0000</p> 
        <div class="body">
            <p>Ralph: I would like to implement block level awareness as soon as possible, but I was and will be a bit busy in the next ~month because of my work and exams...
There's no code in the incubator yet. And yes, something like that :)
Should I write a standard proposal for this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-05-09T12:38:50.000+0000</p> 
        <div class="body">
            <p>Scheduling for next minor release. Adam, please coordinate with Ralph, and indicate status of block-level awareness.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-10-28T15:10:42.000+0000</p> 
        <div class="body">
            <p>What's the status of this?? Should it be moved to the proposals and done that way?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-10-29T02:45:03.000+0000</p> 
        <div class="body">
            <p>I intend to create a proposal for this. I have an almost working code for months now, but there some scurvy bug, which I had no time fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2008-12-05T06:50:05.000+0000</p> 
        <div class="body">
            <p>If you create the proposal and post the code I would be happy to help you find any bugs that exist in the code by writing unittests and such.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:03:21.000+0000</p> 
        <div class="body">
            <p>Is there a proposal for this?  If not, I am inclined to close this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jon Whitcraft (sidhighwind) on 2009-02-06T10:03:02.000+0000</p> 
        <div class="body">
            <p>Joó can you post your sample code.  I will create the proposal and get this running if you don't have time.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2009-02-08T03:02:02.000+0000</p> 
        <div class="body">
            <p>Jon, I would be glad if you could help me with this. More on this in email.
Issue is closed, proposal coming.</p>

        </div>
    </div>
    </div>

