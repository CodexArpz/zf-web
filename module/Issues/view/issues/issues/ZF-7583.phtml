<h2>ZF-7583: Zend_Date::isDate accepts invalid dates</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-08-13T08:57:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-17T02:23:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
            <li>zf-caretaker-adamlundrigan</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6369">ZF-6369</a></li>
            <li><a href="/issues/browse/ZF-8654">ZF-8654</a></li>
            <li><a href="/issues/browse/ZF-10030">ZF-10030</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>isDate('1111',NULL,'de_DE'): true
isDate('11',NULL,'de_DE'): false</p>

<p>isDate('1111','dd.MM.yyyy','de_DE'): true
isDate('11','dd.MM.yyyy','de_DE'): false</p>

<p>how can 1111 be TRUE (which is wrong, couse its not in the specified format) and then again 11 is false ?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-08-13T09:30:38.000+0000</p> 
        <div class="body">
            <p>1111 is recognised as 1.1.11 -&gt; 01. Jan.2011 and therefor true</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ludwig Ruderstaller (rufinus) on 2009-08-13T13:11:45.000+0000</p> 
        <div class="body">
            <p>Thomas, for what can i specify a format if it doesnt matter. 
Sorry for me this makes no sense. 
Maybe its ok for isDate alone, but Zend_Form_Validator_Date uses isDate for validation, and in this case this is pointless.</p>

<p>btw. 111 is true too, what would this be ? 01.01.0001 | 1901 | 2001 ? :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-08-13T13:25:27.000+0000</p> 
        <div class="body">
            <p>I did not say that this behaviour is correct nor did I close the issue.
Actually seperators are not detected.</p>

<p>Regarding 111, this depends on the used format.</p>

<p>ddMMYY will recognise it as 01.Jan.2001
ddMMYYYY will recognise it as 01.Jan0001</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ludwig Ruderstaller (rufinus) on 2009-08-13T13:56:15.000+0000</p> 
        <div class="body">
            <p>sorry if my wording came out a bit rude :)</p>

<p>just to be sure i understand it correctly:</p>

<p>shouldnt a format of ddMM imply a string length of 4 ?</p>

<p>eg.
ddMM == 0108 (01.08. )
ddMM != 108 (1.08)</p>

<p>couse  if not  112   could mean 1.12 or 11.2</p>

<p>the convertPhpToIsoFormat is used, which "normalize" the format string
ddMM stays untouched but dM would be transformed to ddMMM
and know it comes jM would be dMMM</p>

<p>the example with 112:
dM == ddMMM 11.2
ddM == ddMMM  11.2
jM == dMMM  1.12</p>

<p>so as i see it, the code takes the format right. if dd the day "must" have a strlen of 2, if j the day "must" have a strlen of 1</p>

<p>but maybe i missunderstand the whole class , would be probably better I go to bed :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-08-13T14:26:37.000+0000</p> 
        <div class="body">
            <p>No, MM could also be the localized month representation (f.e. Jan).
The convertPhpToIso method is not called except you explicitly set the GNU format manually which you did not according to the given format examples.</p>

<p>d does not mean strlen 1, as it is not the date as string but it's the format.
d as defined by ISO means a day representation with MINIMUM one digit.
This means "1" is acceptable as also "01" or "10</p>

<p>But this has no information for the issue nor does it add any benefit for it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven George (sg) on 2009-10-06T19:44:29.000+0000</p> 
        <div class="body">
            <p>I can't see what use the isDate function has.  Thomas Weidner said on 23/Feb/09 02:48 PM in relation to ZF-5869 that "Leading and following parts are stripped".  The above post alludes that virtually arbritrary numbers are recognised as dates (eg 1111 is recognised as 1.1.11 -&gt; 01. Jan.2011).</p>

<p>So, isDate returns true for the string "Yesterday, I ate 1111 hamburgers"??</p>

<p>isDate conveniently strips the last "9" from 20090199 to produce 09.Jan.2009??</p>

<p>That defeats the purpose of checking a date!!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-03-29T10:31:45.000+0000</p> 
        <div class="body">
            <p>{quote}1111 is recognised as 1.1.11 -&gt; 01. Jan.2011 and therefor true{quote}</p>

<p>And therefore this is a bug: 1111 is not a date, if it's recognized as such, it's wrong. (reference <a href="http://en.wikipedia.org/wiki/Calendar_date">http://en.wikipedia.org/wiki/Calendar_date</a> and <a href="http://de.wikipedia.org/wiki/Kalenderdatum">http://de.wikipedia.org/wiki/Kalenderdatum</a> ). My birthday is on AHEQ316; now it's for Zend_Date to recognize it the way I meant...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ilya Biryukov (ibiryukov) on 2010-06-23T08:32:15.000+0000</p> 
        <div class="body">
            <p>Is there any solution planned for this? The issue is almost a year (!) old.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-06-23T11:47:20.000+0000</p> 
        <div class="body">
            <p>If not this issue would already have been closed as won't fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Muir (dmuir) on 2010-09-13T01:06:16.000+0000</p> 
        <div class="body">
            <p>The problem isn't just with dates. Invalid times also pass validation.</p>

<p>Zend_Date::isDate('10.45', 'HH:mm'); //true
Zend_Date::isDate('1:1', 'HH:mm'); //true
Zend_Date::isDate('1045', 'HH:mm'); //true
Zend_Date::isDate('1000000045', 'HH:mm'); //true</p>

<p>I just had a situation where a time was entered as per the first example, which then got saved to the database as 00:00:10 (MySQL interprets 10.45 as 10.45 seconds).</p>

<p>On further inspection, it seems to me that the problem is with Zend_Locale_Format::getDate(), and not with Zend_Date per se.</p>

<p>Shouldn't fix_date being set to false prevent this from validating?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2010-11-09T01:31:18.000+0000</p> 
        <div class="body">
            <p>I'm having the same issue and in my oppinion this is a real problem because isDate makes no sense for me though.</p>

<p>My Example:</p>

<p>Zend_Date::isDate('0811', 'dd.MM.YYYY'); //Returns true, but false would be correct!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kim Blomqvist (kblomqvist) on 2011-05-01T16:05:11.000+0000</p> 
        <div class="body">
            <p>I'm sure that Zend_Date's validation problems will be solved in ZF2, but in the meanwhile I did a validator which solves the problems addressed here. Feel free to use it, <a href="https://github.com/kblomqvist/kblom-zf1/blob/master/library/Kblom/Validate/Datetime.php">Kblom_Validate_Datetime</a>. It has a little bit different API than Zend_Date, but it should be useful in forms etc.</p>

        </div>
    </div>
    </div>

