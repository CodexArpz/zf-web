<h2>ZF-3300: Wrong comparison operator used in Zend_Date addMillisecond method results in an inaccurate timestamp</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-05-20T10:56:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:26.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Metagamer (metagaming)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If the current millisecond precision of the Zend_Date class is set to 3 the local $max variable will evaluate to 1000,
but you will need to add 1001 millisecond to get it to add a whole second to the timestamp instead of 1000.</p>

<p>Instead of the $this-&gt;_Fractional &gt; $max condition, it should be changed to $this-&gt;_Fractional &gt;= $max</p>

<p>Between lines 4420 and 4427 of Zend/Date.php</p>

<pre><code>    $max = pow(10, $this-&gt;_Precision);
    // milli includes seconds
    if ($this-&gt;_Fractional &gt; $max) {
        while ($this-&gt;_Fractional &gt; $max) {
            $this-&gt;addSecond(1);
            $this-&gt;_Fractional -= $max;
        }
    }
</code></pre>

<p>should be</p>

<pre><code>    $max = pow(10, $this-&gt;_Precision);
    // milli includes seconds
    if ($this-&gt;_Fractional &gt;= $max) {
        while ($this-&gt;_Fractional &gt;= $max) {
            $this-&gt;addSecond(1);
            $this-&gt;_Fractional -= $max;
        }
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-05-20T11:39:15.000+0000</p> 
        <div class="body">
            <p>Please give example code for reproduction</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Metagamer (metagaming) on 2008-05-20T12:11:42.000+0000</p> 
        <div class="body">
            <p>Quick sample code and you can see the improper seconds. Changing the (&gt;) to (&gt;=) fixes the issue</p>

<pre class="highlight"><code>
&lt;?php

set_include_path(get_include_path() . PATH_SEPARATOR . '../library/Zend');

require_once 'Zend/Date.php';

$date = new Zend_Date();


// pick a timestamp any time stamp will do
$date-&gt;setTimestamp(1234567890);
// Have a look at the date and note how many seconds
echo "Date set: " . $date-&gt;getTime() . "<br />\n";
// Zend_Date defaults to 0 milliseconds
echo "Milliseconds: " . $date-&gt;getMillisecond() . "<br />\n";
// Get the current millisecond precision
echo "Millisecond Precison: " . $date-&gt;getFractionalPrecision() . "<br />\n";
// By default Zend_Date has 3 digit precison for milliseconds
// which would mean 1000 = 1 second so lets add 1000 and check the date
$date-&gt;addMilliSecond(1000);
echo "New Date set: " . $date-&gt;getTime() . "<br />\n";
// Zend_Date defaults to 0 milliseconds
echo "New Milliseconds: " . $date-&gt;getMillisecond() . "<br />\n";
// Oops! we have 1000 milliseconds but havent added a new second to the timestamp
// lets add 1 more millisecond for a total of 1001 milliseconds
$date-&gt;addMilliSecond(1);
echo "New Date set: " . $date-&gt;getTime() . "<br />\n";
// Zend_Date defaults to 0 milliseconds
echo "New Milliseconds: " . $date-&gt;getMillisecond() . "<br />\n";
// Now it rolled over and added a new second
?&gt;
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Metagamer (metagaming) on 2008-05-20T12:19:55.000+0000</p> 
        <div class="body">
            <p>Please forgive the extra comment lines and typos. First bug in a major project I've been the first to find and fix :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Metagamer (metagaming) on 2008-05-20T12:26:31.000+0000</p> 
        <div class="body">
            <p>typo fix...</p>

<p>precision of the Zend_Date class is set to 2
changed to
precision of the Zend_Date class is set to 3</p>

<p>since precision of 2 would evaluate to 100 not 1000</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-05-25T07:54:34.000+0000</p> 
        <div class="body">
            <p>Fixed with r9523.</p>

<p>Thanks for the example code and the outlined patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:26.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

