<h2>ZF-11369: Zend_Test_PHPUnit_Db_Metadata_Generic getTableDescription() possible table name collision</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-05-12T18:30:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-12T18:32:03.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Test_PHPUnit</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I ran across a table name collision problem when using Zend_Test_PHPUnit tools with an oracle database.
The metadata pulled from the db by calling Zend_Test_PHPUnit_Db_Metadata_Generic::getTableDescription() can be faulty if the user has access to several tables with the same name.</p>

<p>I believe this could be fixed by passing the schema name in the call to describeTable():</p>

<pre class="highlight"><code>
protected function getTableDescription($tableName)
{
    if(!isset($this-&gt;_tableMetadata[$tableName])) {
        $this-&gt;_tableMetadata[$tableName] = $this-&gt;_connection-&gt;describeTable($tableName, $this-&gt;_schema);
    }
    return $this-&gt;_tableMetadata[$tableName];
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

