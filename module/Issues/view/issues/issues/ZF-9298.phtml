<h2>ZF-9298: When accidentally entering an array as the second parameter in db-&gt;delete it deletes the whole table</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-01T07:13:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-24T10:04:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3571">ZF-3571</a></li>
            <li><a href="/issues/browse/ZF-10740">ZF-10740</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>$this-&gt;_db-&gt;delete('order', array('id'=&gt;$orderId));</p>

<p>When running the above code, Zend creates the following SQL:</p>

<p>DELETE FROM <code>order</code> WHERE (36468)</p>

<p>(36468 being an existing order id)</p>

<p>And this subsequently deletes the entire MySQL table, having the same effect as TRUNCATE TABLE.</p>

<p>Although this only happens when using an incorrect type for the parameter, considering the data loss implecations there should be a safety check within delete() to make sure that the whole table isn't deleted should an array be accidentally passed as the second parameter.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2010-03-01T07:23:00.000+0000</p> 
        <div class="body">
            <p>This is not a big. You have simply missed something.
$this-&gt;_db-&gt;delete('order', array('id = ?' =&gt; $orderId)); as detailed in the manual will produce the desired result.</p>

<p>I am closing this as not an issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Seb Woolford (sebwoolford) on 2010-03-01T07:42:00.000+0000</p> 
        <div class="body">
            <p>One of our employees, we do not know who, created this faulty code, and it has taken us a lot of time and resources to find out what was causing the order table to be deleted, as a first glance at the code did't look like it had anything wrong with it. If this happened to us, there is a good chance it could happen to someone else, and therefore it is worth addressing. It wouldn't exactly take a long time to address.</p>

<p>I do agree that following the instructions from the manual would produce the desired result, but should any of Zend's database functions be able to unintentionally delete an entire database table?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-03-01T08:19:06.000+0000</p> 
        <div class="body">
            <p>Yes.</p>

<p>Actually it's the same as plain sql:
DELETE FROM tableName
DELETE FROM tableName WHERE id = </p>

<p>( to be replaced with something decent)</p>

<p>Any decent RDBMS will actually delete more once your query is shorter. Hence it wouldn't make sense for zend_db to differentiate from that.</p>

        </div>
    </div>
    </div>

