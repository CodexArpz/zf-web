<h2>ZF-12274: Better support for _errorMessage Zend AMF</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2012-06-10T15:45:28.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-10T15:45:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sylvain Lecoy (ether)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The actual implementation of $server-&gt;_errorMessage($objectEncoding, $message, $description, $detail, $code, $line) give very poor control to override. This is not really usable for framework integration (such as Drupal for instance).</p>

<p>I have a FormException, which contain custom data (e.g. 'username' field is required, 'password' field is required). This can be returned back to the Flex application with the $extendedData property on Zend_Amf_Value_Messaging_ErrorMessage.</p>

<p>However, this can be achieved only if the method _errorMessage provides full access to the exception thrown: by refactoring to the following signature $server-&gt;_errorMessage($objectEncoding, $exception).</p>

<p>In a specialized class (extends Zend_Amf_Server), you can then overrides easily the _errorMessage method and adds your custom data.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

