<h2>ZF-2976: Zend_View_Helper_FormRadio have no unique ids for javascript access</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-03-26T15:47:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-03-14T10:29:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.3 (28/Jul/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                jaap vstr (jaapvstr)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2937">ZF-2937</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As an inconstancy with other view helpers, formRadio doesn't give the radio buttons a unique id.</p>

<p>I came by this error while using Zend_Form, which depends on this View_Helper class</p>

<p>Zend_Form_Decorator_ViewHelper eventually calls the helper with something like seen below:</p>

<pre class="highlight"><code>
formRadio('subfrm', 'true', array('options' =&gt; array('true' =&gt; '', 'false' =&gt; ''), 'listsep' =&gt; ''));
</code></pre>

<p>This results in:</p>

<pre class="highlight"><code>


<br />

</code></pre>

<p>While the expected result would be something like:</p>

<pre class="highlight"><code>


<br />

</code></pre>

<p>A suggested fix would be:</p>

<pre class="highlight"><code>
// Wrap the radios in labels
            $radio = '_htmlAttribs($label_attribs) . '&gt;'
                    . (('prepend' == $labelPlacement) ? $opt_label : '')
                    . '_htmlAttribs($attribs) 
                    . $endTag
                    . (('append' == $labelPlacement) ? $opt_label : '')
                    . '';
</code></pre>

<p>The preg replace is there to also address names with brackets. So subfrm[0] with value true would be converted to subfrm-0-true. It was copied from Zend_Form_Decorator_ViewHelper, so i think it's safe, but didn't create it.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by jaap vstr (jaapvstr) on 2008-03-26T15:49:09.000+0000</p> 
        <div class="body">
            <p>Linked to ZF-2937, since that was the original filed bug report. However this bug should be categorized with Zend_View instead.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-31T16:10:03.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Anders Petersen (anpeters) on 2008-05-02T12:11:52.000+0000</p> 
        <div class="body">
            <p>The suggested fix does not work on names like "mainProducts[]" (to submit arrays when using Zend_View_Helper_FormMultiCheckbox). It would generate an id like "mainProducts[]-product1", which is invalid according to W3C. I used this instead:
\
\</p>

<pre class="literal">
                    . ' id="' . rtrim(preg_replace('/\[([^\]]*)\]/', '-$1', $name), '-') .'-'. $this-&gt;view-&gt;escape($opt_value) . '"' //add this line
</pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-05-09T12:50:07.000+0000</p> 
        <div class="body">
            <p>Scheduling for next mini release. Fix is non trivial, so have scheduled a good time alotment for dealing with it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-07-25T09:09:44.000+0000</p> 
        <div class="body">
            <p>Resolved in trunk and 1.5 and 1.6 release branches.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bernd Matzner (bmatzner) on 2008-09-28T14:41:13.000+0000</p> 
        <div class="body">
            <p>Using the option value to concatenate to element name as in the current implementation (1.6.1) may result in invalid option IDs, when using a non-ascii value (e.g. äöü as the option value results in )
I'd suggest using an option counter and add a option count number instead of the option value, which is just as useful, but avoids possible problems.</p>

<p>in FormRadio, instead of
// generate ID
$optId = $id . '-' . $filter-&gt;filter($opt_value);</p>

<p>this could be simply
// generate ID
$optNo ++;
$optId = $id . '-' . $optNo;
avoiding the need for an additional filter, which will always lead to unpredictable results.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2011-02-17T14:59:09.000+0000</p> 
        <div class="body">
            <p>At this point, changing the id name of a formradio element would produce a BC break. We will address this at 2.0 time.</p>

        </div>
    </div>
    </div>

