<h2>ZF-6328: Zend_Cache_Backend_File too many file reads</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Performance Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-04-16T13:23:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-04-24T12:53:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Aleksandr (sanjakl)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If cache is using files, each time cache entry is required, two requests to file system are performed (is_file and fopen).
When I added caching to Locale, number of requests was enormous and server CPU load was unacceptable.</p>

<p>The solution I used:
1. in class Zend_Cache_Backend_File I added
        private static $ FILE_CACHE = array ();
2. in method _fileGetContents I added at the very beginning
        if (isset (self:: $ FILE_CACHE [$ file]) &amp; &amp; self:: $ FILE_CACHE [$ file])) {
            return self:: $ FILE_CACHE [$ file];
        }
3. before the return of this method I added
        self:: $ FILE_CACHE [$ file] = $ result;</p>

<p>I am new to Zend Framework and just want to share my experience.</p>

<p>Is this solution good / bad? Should it be added to Zend Framework?</p>

<p>If someone is interested in complete story, please see <a href="http://sanjakl.blogspot.com/2009/04/zend-framework-optimization.html#english">http://sanjakl.blogspot.com/2009/04/â€¦</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-04-24T12:53:00.000+0000</p> 
        <div class="body">
            <p>I don't like to have a big array which will grow without limit</p>

<p>If you have a loop which plays with thousands of cache files...</p>

<p>By the way, if you have performance issues, use Apc or Memcache backend</p>

        </div>
    </div>
    </div>

