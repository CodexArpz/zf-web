<h2>ZF-1493: when using modules, default controller class name is different from controller class name used for specific modules</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-06-05T07:53:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 (30/Jun/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>simple boostrap with modules enabled</p>

<p><code>
$frontController = Zend_Controller_Front::getInstance();
$frontController-&gt;addModuleDirectory('.');
$frontController-&gt;dispatch();
</code></p>

<p>when calling url (global controller)</p>

<p>/index =&gt; file ./default/controllers/indexController.php is read, and class IndexController is loaded</p>

<p>but when calling :</p>

<p>/module1/index =&gt; file ./module1/controllers/indexController.php is read, and class Module1_IndexController is loaded</p>

<p>Don't know if this is the wanted behaviour, but I find it misleading as we would expect the class name to follow the same
naming rules indepently of the selected module (or global).</p>

<p>If this behaviour, is the correct one, maybe documentation (<a href="http://framework.zend.com/manual/en/zend.controller.modular.html">http://framework.zend.com/manual/en/â€¦</a>)
 needs to draw attention on this particularity (with a note for example).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-06-07T11:22:05.000+0000</p> 
        <div class="body">
            <p>Assigning to Matthew.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-12T22:11:06.000+0000</p> 
        <div class="body">
            <p>This is by design. The basic use case is that you only need a single directory for controllers, and that these do not need namespacing: NewsController, BlogController, etc. Namespace prefixing is only needed for encapsulated modules, which typically group application functionality into multiple controllers.</p>

<p>I'll mark this as a documentation enhancement, and make sure that this is clear in the conventional modular documentation chapter.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-06-14T07:24:57.000+0000</p> 
        <div class="body">
            <p>Resolved in r5300. Added the following note:</p>

<p>Note that in the default module, controllers do not need a namespace prefix. Thus, in the example above, the controllers in the default module do not need a prefix of 'Default_' -- they are simply dispatched according to their base controller name: 'IndexController' and 'FooController'. A namespace prefix is used in all other modules, however.</p>

        </div>
    </div>
    </div>

