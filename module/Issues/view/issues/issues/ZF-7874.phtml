<h2>ZF-7874: Zend_Mail_Transport should not add charset parameter to multipart Content-Type header</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-17T12:32:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-31T06:13:22.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.6 (24/Nov/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                O Gray (ovgray)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Satoru Yoshida (satoruyoshida)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When generating a multipart (text and html) message, Zend_Mail includes the following in the headers:</p>

<pre class="highlight"><code>
Content-Type: multipart/alternative; charset=iso-8859-1;
 boundary="=--whatever--"
</code></pre>

<p>As far as I can tell, the charset parameter is not appropriate to a multipart/alternative Content-Type declaration.</p>

<p>from RFC 2045, p. 10:</p>

<p>For example, the "charset" parameter is applicable to any subtype of
   "text", while the "boundary" parameter is required for any subtype of
   the "multipart" media type.</p>

<p>At <a href="http://www-01.ibm.com/support/docview.wss?rs=180&amp;uid=swg1PK48897">http://www-01.ibm.com/support/docview.wss/â€¦</a> I found this:</p>

<p>The
charset parameter isn't valid in the headers
 of ANY multipart type.  Neither the
multipart/related specification nor any
example in any specification suggests that
 it should be allowed.  It only applies to
text and to text-related formats such as
application/xml.  The body of a
multipart/related document is not text so it
 cannot have a charset.  It is a collection
of parts which are required to consist of
valid 7-bit ASCII headers combined with data
 in whatever encoding is specified in the
content-type and content-encoding headers
for the relevant part.</p>

<p>The inclusion of the charset parameter causes at least one webmail client (UebiMiau 2.7.10) to choke on the message.</p>

<p>modifying the _getHeaders() fucntion in Zend/Mail/Transport/Abstract.php to change this:</p>

<pre class="highlight"><code>
          $this-&gt;_headers['Content-Type'] = array(
                $type . '; charset=' . $this-&gt;_mail-&gt;getCharset() . ';'
                . $this-&gt;EOL
                . " " . 'boundary="' . $boundary . '"'
            );
</code></pre>

<p>to this</p>

<pre class="highlight"><code>
           $this-&gt;_headers['Content-Type'] = array(
                $type . ';'
                . $this-&gt;EOL
                . " " . 'boundary="' . $boundary . '"'
            );
            $this-&gt;boundary = $boundary;
        } 
</code></pre>

<p>Solved the problem with the web client</p>

<p>Also, if a message generated by the existing code is run through message lint at <a href="http://www.apps.ietf.org/node/11">http://www.apps.ietf.org/node/11</a>, it warns: "WARNING: Unexpected parameter 'charset' in header 'Content-Type'"</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Oliver Baltz (dewoob) on 2009-10-06T03:40:36.000+0000</p> 
        <div class="body">
            <p>This fix seems to work for me:</p>

<p>protected function _getHeaders($boundary)
    {
        if (null !== $boundary) {
            // Build multipart mail
            $type = $this-&gt;_mail-&gt;getType();
            if (!$type) {
                if ($this-&gt;_mail-&gt;hasAttachments) {
                    $type = Zend_Mime::MULTIPART_MIXED;
                } elseif ($this-&gt;_mail-&gt;getBodyText() &amp;&amp; $this-&gt;_mail-&gt;getBodyHtml()) {
                    $type = Zend_Mime::MULTIPART_ALTERNATIVE;
                } else {
                    $type = Zend_Mime::MULTIPART_MIXED;
                }
            }</p>

<pre><code>        $addCharset = !in_array($type, array( 
            Zend_Mime::MULTIPART_MIXED,
            Zend_Mime::MULTIPART_ALTERNATIVE,
            Zend_Mime::MULTIPART_MIXED  
        ));

        $this-&gt;_headers['Content-Type'] = array(
            $type . ( $addCharset ? ( '; charset=' . $this-&gt;_mail-&gt;getCharset() ) : "" ) . ';'
            . $this-&gt;EOL
            . " " . 'boundary="' . $boundary . '"'
        );
        $this-&gt;boundary = $boundary;
    }

    $this-&gt;_headers['MIME-Version'] = array('1.0');

    return $this-&gt;_headers;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by O Gray (ovgray) on 2009-10-06T05:08:42.000+0000</p> 
        <div class="body">
            <p>Mr. Baltz's proposed fix assumes that there is some Multipart type for which charset is a valid header parameter. The reference I quoted from the IBM site is categorical that this is not so. Is there some authority to the contrary?</p>

<p>Zend_Mime only contemplates three multipart types: MULTIPART_ALTERNATIVE, MULTIPART_MIXED and MULTIPART_RELATED. Zend_Mail only permits those three types (see Zend_Mail::setType). Thus, this fix would permit a charset header parameter for the MULTIPART_RELATED type only. That type is defined in <a href="http://tools.ietf.org/html/rfc2387">http://tools.ietf.org/html/rfc2387</a>. Nothing in that definition suggests that charset is a valid header parameter for that type.</p>

<p>It seems odd that Zend_Mime::MULTIPART_MIXED is mentioned twice in this part of the  _getHeaders function (this is presumably why Mr. Baltz includes Zend_Mime::MULTIPART_MIXED twice in the array his code adds):</p>

<p>if (!$type) {
if ($this-&gt;_mail-&gt;hasAttachments) { 
$type = Zend_Mime::MULTIPART_MIXED; 
} elseif ($this-&gt;_mail-&gt;getBodyText() &amp;&amp; $this-&gt;_mail-&gt;getBodyHtml()) { 
$type = Zend_Mime::MULTIPART_ALTERNATIVE; 
} else { 
$type = Zend_Mime::MULTIPART_MIXED; 
}
}</p>

<p>I wonder if the code I have just quoted should have been:</p>

<p>if (!$type) {
if ($this-&gt;_mail-&gt;hasAttachments) { 
$type = Zend_Mime::MULTIPART_MIXED; 
} elseif ($this-&gt;_mail-&gt;getBodyText() &amp;&amp; $this-&gt;_mail-&gt;getBodyHtml()) { 
$type = Zend_Mime::MULTIPART_ALTERNATIVE; 
} else { 
$type = Zend_Mime::MULTIPART_RELATED; 
}
}</p>

<p>In any event, if charset is not a valid parameter in the header of any multipart type (as opposed to the header of a part), then its seems better (and simpler) just to eliminate it from the _getHeaders() function altogether.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2009-10-06T20:40:17.000+0000</p> 
        <div class="body">
            <p>Thank you for the suggestions, Oliver Baltz and O Gray .  I'm working now, and I'll be happy if you give me several weeks, Thanks ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Satoru Yoshida (satoruyoshida) on 2009-10-31T06:13:19.000+0000</p> 
        <div class="body">
            <p>Solved in SVN r18759 of trunk, r18760 of 1.9 branch.</p>

<p>But 2 Zend_Mime::MULTIPART_MIXEDs seem to be correct.</p>

<p>I think 2nd Zend_Mime::MULTIPART_MIXED is default value if script can not set the type automatically.</p>

        </div>
    </div>
    </div>

