<h2>ZF-2914: gettext, empty string translates to the gettext file header information</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-03-18T11:37:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-24T09:04:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.3 (28/Jul/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                EV (evalder)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11184/nb.mo">nb.mo</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Problem:
When using the gettext adapter, an empty string ('') translates to the gettext file header information.
When compared to the PHP native gettext functions I see that they do not have the same behaviour (empty string translates to empty string), and I'm assuming that the zend_translate behaviour is wrong.</p>

<p>I do not really want to translate an empty string, but stumbled upon this issue because of another bug in Zend_Form (ZF-2913) - I was a bit surprised to see the gettext file headers in my form. ;-)</p>

<p>Reproduction code:</p>

<pre class="highlight"><code>
require_once 'Zend/Translate.php';
$translate = new Zend_Translate('gettext', './nb.mo');
var_dump($translate-&gt;_(''));
</code></pre>

<p>.po-file (generated with poEdit):</p>

<pre class="highlight"><code>
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"Language-Team: \n"
"PO-Revision-Date: 2008-03-18 15:24+0100\n"
"Last-Translator: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "hello"
msgstr "hei"


</code></pre>

<p>My suggestion for a solution (please consider that I don't know how gettext .mo-files are supposed to be parsed, so I don't know if the following really is the right thing to do):
zend/translate/adapter/gettext.php
line 134:</p>

<pre class="highlight"><code>
                $original = '';
</code></pre>

<p>replace with:</p>

<pre class="highlight"><code>
                $this-&gt;_translate[$locale][''] = '';
                $this-&gt;_gettextHeader = fread($this-&gt;_file, $transtemp[$count * 2 + 1]);
                continue;
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-03-18T14:29:34.000+0000</p> 
        <div class="body">
            <p>Please attach the mo file for detailed reproduction. How they are generated depends on the OS, and the used compiler. This has nothing to do with poEdit.</p>

<p>Generally ALL contents has to be parsed. The implementation from Zend uses the standard as defined by GNU and does not use PHP's implementation because it is problematic and has failures.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-03-24T09:04:35.000+0000</p> 
        <div class="body">
            <p>Ok... looking through your provided file and the original gettext GNU specification I can say that this behaviour is not a bug.</p>

<p>The empty string is translated into systems information as described in the GNU gettext specification as you can read here: <a href="http://www.gnu.org/software/gettext/manual/gettext.html#MO-Files">http://gnu.org/software/gettext/â€¦</a></p>

<p>"This also has another advantage, as the empty string in a PO file GNU gettext is usually translated into some system information attached to that particular MO file, and the empty string necessarily becomes the first in both the original and translated tables, making the system information very easy to find."</p>

<p>This means for us that this is not a bug, this is a undocumented feature ;-)</p>

        </div>
    </div>
    </div>

