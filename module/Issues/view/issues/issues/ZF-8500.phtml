<h2>ZF-8500: Mysql does not support nested transactions, code ignitor specifically supports this, zend does not (yet)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-12-08T15:19:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Josh Ribakoff (josh.ribakoff@gmail.com)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12469/transaction_emulation.patch">transaction_emulation.patch</a></li>
            <li><a href="/issues/secure/attachment/12471/transaction_emulation2.patch">transaction_emulation2.patch</a></li>
            <li><a href="/issues/secure/attachment/12472/transaction_emulation3.patch">transaction_emulation3.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I noticed if you nest transactions, if the inner transaction commits but the outer transaction rolls back, the changes take effect and ZF does not throw any exceptions or handle that nicely. It appears from this thread (<a href="http://codeigniter.com/forums/viewthread/82771/">http://codeigniter.com/forums/viewthread/82771/</a>) that CI has a feature that makes it so only the outer commit/rollback takes effect.</p>

<p>This prevented me from testing code that uses Zend_Db &amp; transactions, because my test itself needed to rollback any changes that happened during the test. But the code I was testing had it's own beginTransaction() and commit()</p>

<p>I guess in code ignitor that inner commit() would be ignored.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (josh.ribakoff@gmail.com) on 2009-12-08T15:48:31.000+0000</p> 
        <div class="body">
            <p>Possible patch is attached. The $_should_emulate_nesting flag which defaults to false will retain it's current behavior. Setting the flag to true mimics code ignitor's feature (which makes my green bar happy)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (josh.ribakoff@gmail.com) on 2009-12-08T16:46:49.000+0000</p> 
        <div class="body">
            <p>Fixed isNested() method (see patch2)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (josh.ribakoff@gmail.com) on 2009-12-08T17:27:19.000+0000</p> 
        <div class="body">
            <p>After trying it out in some more unit tests, it appears patch 3 would hold the correct logic.</p>

<p>It should be noted 1 caveat of using this patch, and enabling the flag, would be that extraneous calls to commit would put the transaction counter of sync. But this is good enough for my own development (I wrapped the adapter seeing as you may not desire to use this functionality in the zend core)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (jshpro2) on 2010-09-24T23:19:22.000+0000</p> 
        <div class="body">
            <p>On PDO you get an exception when you call beginTransaction() more than once, so I augmented the code like this:</p>

<p>function beginTransaction()
     {
        $this-&gt;_transaction_depth++;
        if( $this-&gt;_transaction_depth &gt; 0 )
        {
            return;
        }
        return parent::beginTransaction();
     }</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (jshpro2) on 2010-09-24T23:23:10.000+0000</p> 
        <div class="body">
            <p>I should also note, this specific behavior (how it works now) is detrimental to unit testing. If you have a piece of code that uses the database, the standard unit testing practice is to wrap the unit test method in a transaction itself. However if the SUT tries to start it's own transaction, or commit it's "inner" transaction - you either crash your tests - or worse yet the "inner" transaction would be committed, leaving global state for the next unit test method.</p>

<p>As you can see, the way it works now is completely contrary to best practices. (in regards to this one issue - the rest of the component is terrific)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (josh.ribakoff@gmail.com) on 2010-11-10T11:45:38.000+0000</p> 
        <div class="body">
            <p>One pitfall to this I discovered over the months, you'd have to make the 'nest' count a public property, and the user should remember to reset it to -1 when catching exceptions.</p>

        </div>
    </div>
    </div>

