<h2>ZF-8695: Zend_Db_Select-&gt;where to accept array key value pairs as argument</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-03T08:07:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Guy Halford-Thompson (guyht)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It would be nice if Zend_Db_Select-&gt;where could accept an array as its argument.</p>

<p>For example, $select = $dbTable-&gt;select()-&gt;where(array('id' =&gt; 5, 'active' =&gt; 1));</p>

<p>I dont think this would be too hard to implement, as far as I can see, the function would be modified to something like this:</p>

<p>public function where($cond, $value = null, $type = null)
    {
        if(is_array($cond) {
                foreach($cond as $key =&gt; $var) {
                      $this-&gt;_parts[self::WHERE][] = $this-&gt;_where($key, $var, null, true);
                 }
        } else {
        $this-&gt;_parts[self::WHERE][] = $this-&gt;_where($cond, $value, $type, true);
        }</p>

<pre><code>    return $this;
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

