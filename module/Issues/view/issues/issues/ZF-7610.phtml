<h2>ZF-7610: Zend_Amf_Server is hard-coded to AMF0</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-08-16T09:05:07.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12600/Main.mxml">Main.mxml</a></li>
            <li><a href="/issues/secure/attachment/12599/server.php">server.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The Request.php and Response.php used by the Zend_Amf_Server are hard-coded to use the Amf0 serializer. This serializer does not support the Zend_Amf_Value_ByteArray class. Therefore, we have no way to return a ByteArray using the Zend_Amf_Server.</p>

<p>Is there some immediate workaround that lets us return a ByteArray using the present Zend_Amf_Server code?
Can Zend_Amf_Server chose the serialization according to the objectEncoding member of the NetConnection object created on the client side?
Is there some way to cast a string to a ByteArray in ActionScript3?</p>

<p>I'm using the mcrypt library in PHP and attempting to return encrypted strings to the client.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Brannon B. King (brannon) on 2009-08-17T06:46:11.000+0000</p> 
        <div class="body">
            <p>Sweet. I was able to make this work by modifying the Request.php file's _objectEncoding to 3. Do we just need some public function to set that near the server declaration?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wade Arnold (wadearnold) on 2009-08-17T20:03:53.000+0000</p> 
        <div class="body">
            <p>All AMF requests are AMFO by default. They transfer to AMF3 for the rest of the serialization and deserilization process after they encounter and AMF3 object data type for the first time. That's why the default value is AMF0 but is updates after it changes object types to 3. Can you post a simple bytearray test that showcases the bug? I use it all the time and it works just fine.</p>

<p>Wade</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Brannon B. King (brannon) on 2010-01-11T21:42:04.000+0000</p> 
        <div class="body">
            <p>I attempted tonight to make a simple test case for this issue. However, I can't even get any data back tonight (using trunk code 20213). I don't know what the deal is. I'll attach my two test files.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Brannon B. King (brannon) on 2010-01-11T21:43:44.000+0000</p> 
        <div class="body">
            <p>These files make up a basic return-a-ByteArray test.</p>

        </div>
    </div>
    </div>

