<h2>ZF-7912: Bug introduced in Zend Date 18093 following ZF-7833 correction.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2009-09-21T08:55:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-30T13:46:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Date</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>But in 1.7.8 and earlier version, the get method take into account the option format_type. So 1.78 and earlier was wrong. It is a strong change wich should be mentionned in documentation for migration. As all people working with zend_date in php format in 1.7.8 will have to migrate code for 1.8+ versions.</p>

<p>New problem:
I find a new bug, wich appear only with the Date.php available in the trunk directory (version Id: Date.php 18093 2009-09-13 11:35:01Z thomas) with the patch you have done for my previous problem. With the original 1.9.2 Date.php, this bug in not here, so I guess it comes from your modifications.</p>

<p>IsLater and IsEarlier method for zend_date object send strange return value.
Exemple:</p>

<p>Zend_Loader::loadClass('Zend_Date');
Zend_Date::setOptions(array('format_type' =&gt; 'php')); // This bug appears only when php format is actived, with the trunck Date.php version Id: Date.php 18093 2009-09-13 11:35:01Z thomas
$date1 = new Zend_Date();
$date2 = clone $date1;
$date2-&gt;add(1, Zend_Date::DAY);</p>

<p>echo "Is date1 earlier than date2:".$date1-&gt;isEarlier($date2, Zend_Date::DATES)."<br />"; // return false
echo "Is date2 earlier than date1:".$date2-&gt;isEarlier($date1, Zend_Date::DATES)."<br />"; // return false
echo "Is date1 later than date2:".$date1-&gt;isLater($date2, Zend_Date::DATES)."<br />"; // return true
echo "Is date2 later than que date1:".$date2-&gt;isLater($date1, Zend_Date::DATES)."<br />"; // return true</p>

<p>Results are not possible.
So maybe you need to check better the correction made previously as it impacts "isEarlier" and "isLater" method which rely on "compare" / "_calculate" methods.</p>

<p>Thanks again.
Cheers,
Thomas.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-30T13:46:37.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue.</p>

<p>Note that Zend_Date's constants are using ISO notation.
When you set Zend_Date to use GNU notation, you can no longer use Zend_Date's constants but must set formats manually.</p>

<p>There is no benefit to set GNU format but use ISO instead (would be nonsense).</p>

<p>A warning has been added to the manual.</p>

        </div>
    </div>
    </div>

