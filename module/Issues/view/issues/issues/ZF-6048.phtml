<h2>ZF-6048: JQuery Slider reset to 0 with the default change event</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-03-17T10:07:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-11T01:25:41.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.4 (23/Jun/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Yanick Rochon (yanick)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>ZendX_JQuery</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6126">ZF-6126</a></li>
            <li><a href="/issues/browse/ZF-5841">ZF-5841</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When adding a JQuery slider form element, the slider will reset itself to 0 when the 'change' event is called. The fault line is</p>

<pre class="literal">
   $sliderUpdateFn .= sprintf('    %s("#%s").attr("value", %s("#%s-slider").slider("value", %d));'.PHP_EOL,
</pre>

<p>when the last %d is simply removed, the bug doesn't repeat itself and everyone is happy!</p>

<pre class="literal">
   $sliderUpdateFn .= sprintf('    %s("#%s").attr("value", %s("#%s-slider").slider("value"));'.PHP_EOL,
</pre>

<p>I actually don't know why that last %d is there as it is replaced by the handle index ($i) in the for... loop.</p>

<p>...or perhaps I am missing the point, but removing the last %d surely solve this problem.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Yanick Rochon (yanick) on 2009-03-19T14:16:27.000+0000</p> 
        <div class="body">
            <p>An update ot the API, .slider("value", 0) sets the slider to 0 and return it (0). While .slider("value") simply returns the slider value.</p>

<p>Moreover, the line mentionned above may be replaced by this one</p>

<pre class="literal">
   $sliderUpdateFn .= sprintf('    %s("#%s").attr("value", ui.value);'.PHP_EOL,
</pre>

<p>which is clearer and cleaner.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-03-25T10:28:00.000+0000</p> 
        <div class="body">
            <p>I'll handle the issue as follows, in 1.8 the jQuery requirements will be raised to 1.3 and UI 1.7 for the CDN access. I'll fix this bug for 1.8 then and offer a backwards compability mode (somehow), by introducing a version value on the jQuery helper, which is used for comparisons of this kind.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-06-11T01:25:32.000+0000</p> 
        <div class="body">
            <p>Bug is fixed in trunk and merged back into 1.8 release branch.</p>

<p>Use:</p>

<pre class="highlight"><code>
$view-&gt;jQuery()-&gt;setUiVersion("1.7.2");
$view-&gt;jQuery()-&gt;setUiVersion("1.5.3");
</code></pre>

<p>to decide which javascript generation mode should be enabled for the request. The Slider then generates the correct Javascript depending on your library version.</p>

        </div>
    </div>
    </div>

