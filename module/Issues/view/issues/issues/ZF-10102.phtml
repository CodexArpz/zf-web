<h2>ZF-10102: Zend_Loader error when running unittests with Adobe Flash Builde</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Unit Tests: Problem</dd>

    <dt>Created:</dt>
    <dd>2010-07-04T09:46:13.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-05-28T21:41:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Daniel Minett (minett)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
            <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13187/EmployeeService.php">EmployeeService.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>[function.include-once]: failed to open stream: Permission denied in C:\xampp\php\PEAR\Zend\Loader.php on line 135</p>

<p>But there is no error.</p>

<p>Using this with Adobe Flash Builder.  Using localhost.  (XAMPP)</p>

<p>Full code:</p>

&lt;?php 
/** 
 * This sample service contains functions that illustrate typical
 * service operations. This code is for prototyping only. 
 *  
 *  Authenticate users before allowing them to call these methods. 
 */ 

class EmployeeService { 
  var $username = "test"; 
  var $password = "test"; 
  var $server = "localhost"; 
  var $port = "3306"; 
  var $databasename = "testdrive_db"; 
  var $tablename = "employees"; 
  
  var $connection; 
  public function __construct() { 
    $this-&gt;connection = mysqli_connect( 
                       $this-&gt;server,  
                       $this-&gt;username,  
                       $this-&gt;password, 
                       $this-&gt;databasename, 
                       $this-&gt;port 
                       ); 
    
    $this-&gt;throwExceptionOnError($this-&gt;connection); 
  } 

  public function getEmployees() {
     $stmt = mysqli_prepare($this-&gt;connection,
          "SELECT
              employees.id,
              employees.firstname,
              employees.lastname,
              employees.title,
              employees.departmentid,
              employees.officephone,
              employees.cellphone,
              employees.email,
              employees.street,
              employees.city,
              employees.state,
              employees.zipcode,
              employees.office,
              employees.photofile
           FROM employees");     
         
      $this-&gt;throwExceptionOnError();

      mysqli_stmt_execute($stmt);
      $this-&gt;throwExceptionOnError();

      $rows = array();
      mysqli_stmt_bind_result($stmt, $row-&gt;id, $row-&gt;firstname,
                    $row-&gt;lastname, $row-&gt;title, $row-&gt;departmentid,
                    $row-&gt;officephone, $row-&gt;cellphone, $row-&gt;email,  
                    $row-&gt;street, $row-&gt;city, $row-&gt;state, 
                    $row-&gt;zipcode, $row-&gt;office, $row-&gt;photofile);

      while (mysqli_stmt_fetch($stmt)) {
          $rows[] = $row;
          $row = new stdClass();
          mysqli_stmt_bind_result($stmt,  $row-&gt;id, $row-&gt;firstname,
                    $row-&gt;lastname, $row-&gt;title, $row-&gt;departmentid,
                    $row-&gt;officephone, $row-&gt;cellphone, $row-&gt;email,  
                    $row-&gt;street, $row-&gt;city, $row-&gt;state, 
                    $row-&gt;zipcode, $row-&gt;office, $row-&gt;photofile);
      }

      mysqli_stmt_free_result($stmt);
      mysqli_close($this-&gt;connection);

      return $rows;
  }  

  public function getDepartments() {
     $stmt = mysqli_prepare($this-&gt;connection,
          "SELECT
              departments.id,
              departments.name,
              departments.manager,
              departments.costcenter,
              departments.businessunit,
          departments.budget,
          departments.actualexpenses,
          departments.estsalary,
              departments.actualsalary,
              departments.esttravel,
              departments.actualtravel,
          departments.estsupplies,
              departments.actualsupplies,
              departments.estcontractors,
              departments.actualcontractors
           FROM departments");
      $this-&gt;throwExceptionOnError();

      mysqli_stmt_execute($stmt);
      $this-&gt;throwExceptionOnError();

      $rows = array();
      mysqli_stmt_bind_result($stmt, $row-&gt;id, $row-&gt;name,
                    $row-&gt;manager, $row-&gt;costcenter, $row-&gt;businessunit,
            $row-&gt;budget, $row-&gt;actualexpenses,$row-&gt;estsalary, $row-&gt;actualsalary,
            $row-&gt;esttravel, $row-&gt;actualtravel,$row-&gt;estsupplies, $row-&gt;actualsupplies,
                    $row-&gt;estcontractors, $row-&gt;actualcontractors);

      while (mysqli_stmt_fetch($stmt)) {
          $rows[] = $row;
          $row = new stdClass();
          mysqli_stmt_bind_result($stmt, $row-&gt;id, $row-&gt;name,
                         $row-&gt;manager, $row-&gt;costcenter, $row-&gt;businessunit,
                         $row-&gt;budget, $row-&gt;actualexpenses,$row-&gt;estsalary, $row-&gt;actualsalary,
            $row-&gt;esttravel, $row-&gt;actualtravel,$row-&gt;estsupplies, $row-&gt;actualsupplies,
                    $row-&gt;estcontractors, $row-&gt;actualcontractors);
      }

      mysqli_stmt_free_result($stmt);
      mysqli_close($this-&gt;connection);

      return $rows;
  }  


  public function getEmployeesByID($itemID) {
     $stmt = mysqli_prepare($this-&gt;connection,
          "SELECT
              employees.title,
              employees.street,
              employees.id,
              employees.firstname,
              employees.lastname,
              employees.cellphone,
              employees.departmentid,
              employees.zipcode,
              employees.office,
              employees.email,
              employees.state,
              employees.officephone,
              employees.photofile,
              employees.city
           FROM employees where employees.id=?");
      $this-&gt;throwExceptionOnError();
          
      mysqli_stmt_bind_param($stmt, 'i', $itemID);
      $this-&gt;throwExceptionOnError();

      mysqli_stmt_execute($stmt);
      $this-&gt;throwExceptionOnError();

      $rows = array();
      mysqli_stmt_bind_result($stmt, $row-&gt;title, $row-&gt;street, $row-&gt;id, 
                              $row-&gt;firstname, $row-&gt;lastname, $row-&gt;cellphone,
                              $row-&gt;departmentid, $row-&gt;zipcode, $row-&gt;office, 
                              $row-&gt;email, $row-&gt;state, $row-&gt;officephone ,
                              $row-&gt;photofile, $row-&gt;city);

      if (mysqli_stmt_fetch($stmt)) {
                  return $row;
      } else {
                  return null;
          }

      mysqli_stmt_free_result($stmt);
      mysqli_close($this-&gt;connection);

  }  

  public function getEmployeesByName($searchStr) {
     $stmt = mysqli_prepare($this-&gt;connection,
          "SELECT
              employees.title,
              employees.street,
              employees.id,
              employees.firstname,
              employees.lastname,
              employees.cellphone,
              employees.departmentid,
              employees.zipcode,
              employees.office,
              employees.email,
              employees.state,
              employees.officephone,
              employees.photofile,
              employees.city
           FROM employees where employees.lastName LIKE ?");
      $this-&gt;throwExceptionOnError();
          
      mysqli_stmt_bind_param($stmt, 's', $searchStr);
      $this-&gt;throwExceptionOnError();

      mysqli_stmt_execute($stmt);
      $this-&gt;throwExceptionOnError();

      $rows = array();
      mysqli_stmt_bind_result($stmt, $row-&gt;title, $row-&gt;street, $row-&gt;id, 
                              $row-&gt;firstname, $row-&gt;lastname, $row-&gt;cellphone,
                              $row-&gt;departmentid, $row-&gt;zipcode, $row-&gt;office, 
                              $row-&gt;email, $row-&gt;state, $row-&gt;officephone ,
                              $row-&gt;photofile, $row-&gt;city);

      while (mysqli_stmt_fetch($stmt)) {
          $rows[] = $row;
          $row = new stdClass();
          mysqli_stmt_bind_result($stmt, $row-&gt;title, $row-&gt;street, $row-&gt;id, 
                              $row-&gt;firstname, $row-&gt;lastname, $row-&gt;cellphone,
                              $row-&gt;departmentid, $row-&gt;zipcode, $row-&gt;office, 
                              $row-&gt;email, $row-&gt;state, $row-&gt;officephone ,
                              $row-&gt;photofile, $row-&gt;city);
      }

      mysqli_stmt_free_result($stmt);
      mysqli_close($this-&gt;connection);

      return $rows;

  }  

   public function createEmployee($item) {
    $stmt = mysqli_prepare($this-&gt;connection,
        "INSERT INTO employees (
            firstname,lastname,title,departmentid,officephone,cellphone,    
            email,street,city,state,zipcode,office,photofile) 
        VALUES (?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?)");
    $this-&gt;throwExceptionOnError();
    
    mysqli_bind_param($stmt, 'sssisssssssss', $item-&gt;firstname, $item-&gt;lastname,
        $item-&gt;title, $item-&gt;departmentid, $item-&gt;officephone, $item-&gt;cellphone,
        $item-&gt;email, $item-&gt;street, $item-&gt;city, $item-&gt;state,
        $item-&gt;zipcode, $item-&gt;office, $item-&gt;photofile
    );
    $this-&gt;throwExceptionOnError();

    mysqli_stmt_execute($stmt);
    $this-&gt;throwExceptionOnError();
    
    $autoid = mysqli_stmt_insert_id($stmt);
    
    mysqli_stmt_free_result($stmt);
    mysqli_close($this-&gt;connection);
    
    return $autoid;
  }

  public function deleteEmployee($itemID) {
    $stmt = mysqli_prepare($this-&gt;connection,
        "DELETE FROM employees WHERE id = ?");
    $this-&gt;throwExceptionOnError();
    
    mysqli_bind_param($stmt, 'i', $itemID);

    mysqli_stmt_execute($stmt);
    $this-&gt;throwExceptionOnError();

    mysqli_stmt_free_result($stmt);
    mysqli_close($this-&gt;connection);
  }

  public function updateEmployee($item) {
    $stmt = mysqli_prepare($this-&gt;connection,
        "UPDATE employees SET
            firstname=?,lastname=?,title=?,departmentid=?,officephone=?,cellphone=?,    
            email=?,street=?,city=?,state=?,zipcode=?,office=?,photofile=?
            WHERE id=?");
    $this-&gt;throwExceptionOnError();

    mysqli_bind_param($stmt, 'sssisssssssssi', $item-&gt;firstname, $item-&gt;lastname,
        $item-&gt;title, $item-&gt;departmentid, $item-&gt;officephone, $item-&gt;cellphone,
        $item-&gt;email, $item-&gt;street, $item-&gt;city, $item-&gt;state,
        $item-&gt;zipcode, $item-&gt;office, $item-&gt;photofile,$item-&gt;id
    );
    $this-&gt;throwExceptionOnError();

    mysqli_stmt_execute($stmt);
    $this-&gt;throwExceptionOnError();

    mysqli_stmt_free_result($stmt);
    mysqli_close($this-&gt;connection);
  }

/** 
  * Utitity function to throw an exception if an error occurs 
  * while running a mysql command. 
  */ 
  private function throwExceptionOnError($link = null) { 
    if($link == null) { 
      $link = $this-&gt;connection; 
    } 
    if(mysqli_error($link)) { 
      $msg = mysqli_errno($link) . ": " . mysqli_error($link); 
      throw new Exception('MySQL Error - '. $msg); 
    }         
  } 
 
} 
?&gt;

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-07-04T09:51:21.000+0000</p> 
        <div class="body">
            <p>Updated title/summary in order to reflect contents of the issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-07-04T11:41:53.000+0000</p> 
        <div class="body">
            <p>The error is clearly spelled out, actually: your script does not have permission to perform a filesystem operation. Check to ensure all ZF files are readable by the user executing the script (world readable permissions are perfectly fine here).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Minett (minett) on 2010-07-04T12:12:34.000+0000</p> 
        <div class="body">
            <p>How do I go about doing this?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Minett (minett) on 2010-07-04T12:41:53.000+0000</p> 
        <div class="body">
            <p>This is the error Adobe Flash Builder displays:</p>

<p>Make sure that Zend Framework is installed correctly and the parameter "amf.production" is not set to true in the amf_config.ini file located in the project output folder. 
Warning: include_once(C:\xampp\htdocs\TestDrive\services\EmployeeService.php) [function.include-once]: failed to open stream: Permission denied in C:\xampp\php\PEAR\Zend\Loader.php on line 135</p>

<p>Warning: include_once() [function.include]: Failed opening 'EmployeeService.php' for inclusion (include_path='C:/xampp/htdocs/TestDrive/services.;.;\xampp\php\PEAR;C:/xampp/htdocs/ZendFramework/library') in C:\xampp\php\PEAR\Zend\Loader.php on line 135
 /0/onStatusÿÿÿÿ�SIflex.messaging.messages.ErrorMessageextendedDatafaultCodefaultDetailfaultStringrootCausecorrelationIdclientIddestinationmessageIdtimestamptimeToLiveheaders bodyŽM#0 C:\xampp\php\PEAR\Zend\Amf\Adobe\Introspector.php(96): Zend_Loader::loadClass('EmployeeService', Array)#1 [internal function]: Zend_Amf_Adobe_Introspector-&gt;introspect('EmployeeService', Array)#2 [internal function]: ReflectionMethod-&gt;invokeArgs(Object(Zend_Amf_Adobe_Introspector), Array)#3 C:\xampp\php\PEAR\Zend\Server\Reflection\Function\Abstract.php(368): call_user_func_array(Array, Array)#4 [internal function]: Zend_Server_Reflection_Function_Abstract-&gt;__call('invokeArgs', Array)#5 C:\xampp\php\PEAR\Zend\Amf\Server.php(356): Zend_Server_Reflection_Method-&gt;invokeArgs(Object(Zend_Amf_Adobe_Introspector), Array)#6 C:\xampp\php\PEAR\Zend\Amf\Server.php(550): Zend_Amf_Server-&gt;<em>dispatch('introspect', Array, 'Zend_Amf_Adobe</em>...')#7 C:\xampp\php\PEAR\Zend\Amf\Server.php(626): Zend_Amf_Server-&gt;_handle(Object(Zend_Amf_Request_Http))#8 C:\xampp\htdocs\SCPortal-debug\gateway.php(69): Zend_Amf_Server-&gt;handle()#9 {main}�=File "EmployeeService.php" does not exist or class "EmployeeService" was not found in the fileI9D1F5F2F-040F-55B9-C24F-8D673950E1E4I51D34C0F-78F3-7D88-E31D-000024686B02I0768145F-FEA5-6028-0BF8-000036CDA707127827244400</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mohd Sopian (offhegoes) on 2010-10-07T19:31:33.000+0000</p> 
        <div class="body">
            <p>I have facing the same problem.. looking forward for a solution for this issue.. would like to thanks in davance for those who do help..</p>

<p>Thanks again.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2011-05-28T21:41:50.000+0000</p> 
        <div class="body">
            <p>Please add the steps to reproduce, including the copy/paste of the phpunit test run so we can understand how to replicate the issue.  If it still exists, we can re-open.</p>

        </div>
    </div>
    </div>

