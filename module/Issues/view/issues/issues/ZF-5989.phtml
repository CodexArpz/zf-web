<h2>ZF-5989: Fatal error: Class 'Zend_XmlRpc_Value_Scalar' not found</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-03-11T01:40:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-22T11:01:47.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Lars Strojny (lars)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_XmlRpc_Client</li>
            <li>Zend_XmlRpc_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Fatal error  "Fatal error: Class 'Zend_XmlRpc_Value_Scalar' not found in /usr/share/php/Zend/XmlRpc/Value/Base64.php on line 37" is thrown when trying to include/work with/'class_exists-ing'  class Zend_XmlRpc_Value_Scalar or some class which is derived from it.</p>

<p>This error seems not to be rare - try to google it:  <a href="http://www.google.com/search?q=Fatal+error:+Class+'Zend_XmlRpc_Value_Scalar'+not+found">http://google.com/search/â€¦</a></p>

<p>I suppose, that it is caused because of 'circular dependencies'.<br />
File Zend/XmlRpc/Value/String.php  requires Zend/XmlRpc/Value/Scalar.php; Zend/XmlRpc/Value/Scalar.php requires Zend/XmlRpc/Value.php; and Zend/XmlRpc/Value.php requires Zend/XmlRpc/Value/String.php. In the Zend/XmlRpc/Value.php  is the Zend/XmlRpc/Value/Base64.php as the first included file, which depends on Zend_XmlRpc_Value_Scalar class, and that is probably why in fatal error description is said: "... not found in /usr/share/php/Zend/XmlRpc/Value/Base64.php on line 37"</p>

<p>When this chain is broken (for example by commenting out all includes in Zend/XmlRpc/Value.php), it works. Moreover, because of autoloading feature is enabled, all classes are also available, so all seems to work correct.</p>

<p>Here is sample PHP test code, which demonstrates this issue:</p>

<pre class="highlight"><code>

&lt;?php

  // -- set include_path:
        $libsPath = realpath(dirname(__FILE__).'/libs');
        set_include_path($libsPath . PATH_SEPARATOR . get_include_path());

  // -- enable autoload:
        require_once 'Zend/Loader.php';
        Zend_Loader::registerAutoload();


  // -- demonstration, that autoloading feature is working:
        $mail = new Zend_Mail();
        $config = new Zend_Config(array('foo' =&gt; 'bar'));

        Zend_Debug::dump($mail, 'MAIL: ');
        Zend_Debug::dump($config, 'CONFIG: ');

  // -- cases, which will fail. Try to comment it out to determine, that it seriously cause the error.

  // -- 1) statical require statement:
        require_once 'Zend/XmlRpc/Value/Scalar.php';  // &lt;-- will throw fatal error

  // -- 2) test if class exists:
        Zend_Debug::dump(class_exists('Zend_XmlRpc_Value_Scalar'), 'CLASS EXISTS? ');  // &lt;-- will throw fatal error

  // -- 3) Use of some derived class from Zend_XmlRpc_Value_Scalar:
        $xmlString = new Zend_XmlRpc_Value_String("Hello World!");


  // -- just for test, if script came here:
        echo "Successfully ended...";

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Drew Bertola (drewb) on 2009-04-07T20:14:23.000+0000</p> 
        <div class="body">
            <p>I'm seeing problems like this with Zend_Db_Statement_Pdo...</p>

<p>PHP Fatal error:  Zend_Db_Statement_Pdo::require_once() [<a href="function.require">function.require</a>]: Failed opening required 'Zend/Db/Statement/Exception.php' (include_path='../library:../application:.:/usr/share/<a>pear:/usr/share/php</a>') in /project/trunk/library/Zend/Db/Statement/Pdo.php on line 237</p>

<p>I'm running version 1.5 on this project.</p>

<p>The bootstrap uses ini_set('include_path', ....) rather than set_include_path(...).  Oddly enough, when I use absolute paths for my include directories, I get a different error:</p>

<p>PHP Fatal error:  Exception thrown without a stack frame in Unknown on line 0</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lars Strojny (lars) on 2009-08-22T11:01:17.000+0000</p> 
        <div class="body">
            <p>Fixed in {{r17756}}</p>

        </div>
    </div>
    </div>

