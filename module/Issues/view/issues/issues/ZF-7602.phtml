<h2>ZF-7602: Patch to add IteratorAggregate like behaviour to Zend_Paginator</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-08-15T02:04:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-16T05:30:10.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.1 (11/Aug/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12141/zf7602.diff">zf7602.diff</a></li>
            <li><a href="/issues/secure/attachment/12142/zf7602_adapteraggregate_interface.php">zf7602_adapteraggregate_interface.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The IteratorAggregate Interface is a nice way to write Iterators that contain only small deviations from any existing iterator.</p>

<p>I have a patch to propose the same for Zend_Paginator, an interface called "Zend_Paginator_AdapterAggregate" which has the method getPaginatorAdapter() that creates a Paginator Adapter.</p>

<p>This interface must be supported in two locations of Zend_Paginator, the factory method and the constructor.</p>

<p>Here is the testcode, that shows the behaviour:</p>

<pre class="highlight"><code>
class Zend_Paginator_TestArrayAggregate implements Zend_Paginator_AdapterAggregate
{
    public function getPaginatorAdapter()
    {
        return new Zend_Paginator_Adapter_Array(array(1, 2, 3, 4));
    }
}

class Zend_PaginatorTest extends PHPUnit_Framework_TestCase
{
//...
    public function testAcceptAndHandlePaginatorAdapterAggregateDataInFactory()
    {
        $p = Zend_Paginator::factory(new Zend_Paginator_TestArrayAggregate());

        $this-&gt;assertEquals(1, count($p));
        $this-&gt;assertType('Zend_Paginator_Adapter_Array', $p-&gt;getAdapter());
        $this-&gt;assertEquals(4, count($p-&gt;getAdapter()));
    }

    public function testAcceptAndHandlePaginatorAdapterAggreageInConstructor()
    {
        $p = new Zend_Paginator(new Zend_Paginator_TestArrayAggregate());

        $this-&gt;assertEquals(1, count($p));
        $this-&gt;assertType('Zend_Paginator_Adapter_Array', $p-&gt;getAdapter());
        $this-&gt;assertEquals(4, count($p-&gt;getAdapter()));
    }

    public function testInvalidDataInConstructor_ThrowsException()
    {
        $this-&gt;setExpectedException("Zend_Paginator_Exception");

        $p = new Zend_Paginator(array());
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-08-15T02:08:23.000+0000</p> 
        <div class="body">
            <p>Here are the diff of the existing code, plus the new interface</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-08-16T05:30:07.000+0000</p> 
        <div class="body">
            <p>Resolved in trunk in r.17630. Merged to release-1.9 in r.17631</p>

        </div>
    </div>
    </div>

