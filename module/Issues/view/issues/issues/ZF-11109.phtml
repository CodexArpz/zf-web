<h2>ZF-11109: Find Zend_Json_Expr objects</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-02-23T02:02:22.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-02-23T19:22:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Max van der Stam (mvdstam)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json_Server</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In it's current state, the Zend_Json_Server_Response class does not contain a way to find Zend_Json_Expr objects when returning data (with the toJson method, called automatically by default by Zend_Json_Server).</p>

<p>It would be very helpful to have a "findJsonExpr" flag within the Zend_Json_Server_Response class, that would be either true or false by default depending on the performance-wise implications such functionality brings.</p>

<p>The current public method toJson has the following implementation:</p>

<pre class="highlight"><code>
/**
     * Cast to JSON
     *
     * @return string
     */
    public function toJson()
    {
        if ($this-&gt;isError()) {
            $response = array(
                'result' =&gt; null,
                'error'  =&gt; $this-&gt;getError()-&gt;toArray(),
                'id'     =&gt; $this-&gt;getId(),
            );
        } else {
            $response = array(
                'result' =&gt; $this-&gt;getResult(),
                'id'     =&gt; $this-&gt;getId(),
                'error'  =&gt; null,
            );
        }

        if (null !== ($version = $this-&gt;getVersion())) {
            $response['jsonrpc'] = $version;
        }

        require_once 'Zend/Json.php';
        return Zend_Json::encode($response);
    }
</code></pre>

<p>Proposal:</p>

<pre class="highlight"><code>
/**
     * Cast to JSON
     *
     * @return string
     */
    public function toJson()
    {
        if ($this-&gt;isError()) {
            $response = array(
                'result' =&gt; null,
                'error'  =&gt; $this-&gt;getError()-&gt;toArray(),
                'id'     =&gt; $this-&gt;getId(),
            );
        } else {
            $response = array(
                'result' =&gt; $this-&gt;getResult(),
                'id'     =&gt; $this-&gt;getId(),
                'error'  =&gt; null,
            );
        }

        if (null !== ($version = $this-&gt;getVersion())) {
            $response['jsonrpc'] = $version;
        }

        require_once 'Zend/Json.php';
        return Zend_Json::encode($response, false, array("findJsonExpr" =&gt; $this-&gt;_findJsonExpr)); //_findJsonExpr is a protected member (bool)
    }
</code></pre>

<p>Right now, I have to disable auto-emit in Zend_Json_Server, retrieve the response object and do the whole routine above after sending the correct headers, with the exception of the last line.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

