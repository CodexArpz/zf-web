<h2>ZF-4032: Paginator DBselect adapter not propperly counting rows when using DISTINCT()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-22T07:34:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-08-17T22:04:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.1 (15/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Dae Daluz (dae)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using the Zend_Paginator_Adapter_DBselect() on a select statement as such;</p>

<p>$select = $this-&gt;db-&gt;select()
-&gt;from("IPLog", "DISTINCT(IP)");</p>

<p>or</p>

<p>$select = $this-&gt;db-&gt;select()
-&gt;from("IPLog", "IP")
-&gt;DISTINCT(true);</p>

<p>the counting of rows goes wrong, since in my case there's 2 unique IP's in the table, but I get 43 since there's 43 rows in total. This causes my paginator controls to show more pages then there really are. The problem seems to be that the count() method of the DBselect adapter resets the columns, without checking for result limitting expressions.</p>

<p>//update;</p>

<p>Thanks updating to latest svn and using the group by did the trick, doesn't work with 1.6.0RC2 though, so any change made after that did the trick.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-08-22T07:37:21.000+0000</p> 
        <div class="body">
            <p>Could you please try this with the latest version from the SVN? There have been a lot of improvements to the DbSelect adapter since RC2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-08-22T08:44:41.000+0000</p> 
        <div class="body">
            <p>I've managed to write a fix for this for the simple usecase where you would want to select only one column. Full support for multiple columns is somewhat more complicated. Please note that I've not committed the fix just yet.</p>

<p>An alternate solution is to use GROUP BY instead of DISTINCT, so I'm inclined to use that fact as a solution to this issue. What would be a usecase where DISTINCT is preferred over GROUP BY?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-08-22T14:01:42.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 10981</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Regis Leroy (regilero) on 2008-10-23T16:27:36.000+0000</p> 
        <div class="body">
            <p>For me this is not completly fixed (tested with 1.6.1).
I had to change a distinct in Group By for a query  using several tables where one off the fields of the select were present in several tables of the request.
I obtained something like:
  SELECT COUNT(DISTINCT ce_fiche_id,ce_fiche_foo,ce_fiche_bar) AS zend_paginator_row_count FROM <code>ce_fiche</code>
  LEFT JOIN <code>ce_suivi_fiche</code> ON <code>ce_suivi_fiche</code>.ce_fiche_id = <code>ce_fiche</code>.ce_fiche_id 
 WHERE ....
==&gt; this count query cannot work because ce_fiche_id is ambigous. 
Initial query was of this form (simplified, more complex in reality and getting the group by working was not so simple):
  SELECT DISTINCT <code>ce_fiche</code>.<code>ce_fiche_id</code> AS <code>Id</code>, 
 <code>ce_fiche</code>.<code>ce_fiche_foo</code> AS <code>foo</code>, 
 <code>ce_fiche</code>.<code>ce_fiche_bar</code> AS <code>Bar</code>,
 FROM <code>ce_fiche</code> 
 LEFT JOIN <code>ce_suivi_fiche</code> ON <code>ce_suivi_fiche</code>.ce_fiche_id = <code>ce_fiche</code>.ce_fiche_id 
 ORDER BY 1 ASC LIMIT 10;</p>

<p>weel, why removing table names?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by GUYARD Vincent (vguyard) on 2011-08-17T22:04:02.000+0000</p> 
        <div class="body">
            <p>The bug is still here !!!</p>

<p>The query below is an example :</p>

<pre><code>    $query = parent::select(true)-&gt;setIntegrityCheck(false)-&gt;distinct(true)
        -&gt;from(array('fu1'=&gt;$this-&gt;_name), null)
            -&gt;join(array('b'=&gt;Model_Table_Blabla::$name), 'b.facebook_uid = fu1.facebook_uid', null)
            -&gt;join(array('v'=&gt;Model_Table_Vote::$name), 'v.id_blabla = b.id_blabla', null)
            -&gt;join(array('fu2'=&gt;$this-&gt;_name), 'v.facebook_uid = fu2.facebook_uid')
                -&gt;where('fu1.facebook_uid = ?', $array['facebook_user']-&gt;getFacebookUid());
</code></pre>

        </div>
    </div>
    </div>

