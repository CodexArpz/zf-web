<h2>ZF-9229: Zend File Transfer Mimetype by Browser</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-22T00:29:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-24T10:47:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_File_Transfer</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When uploading a file with a post. The mime-type was always 'application/octet-stream'.
The function mime_content_type is deprecated and doesn't work on my server.
To get the mimetype send by the browser, I add a function in the Abstract adapter.</p>

<p>File: /File/Transfer/Adapter/Abstract.php
Line: 1294
Code: if (empty($result) &amp;&amp; (function_exists('mime_content_type'){ ... }
Insert after:</p>

<p>if( empty($result) &amp;&amp; isset($value['type']) ) {
   $result = $value['type'];
}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-23T14:46:18.000+0000</p> 
        <div class="body">
            <p>As described in the manual, using the mimetype which is sent from the client is very unsecure.</p>

<p>For security reasons the clients mimetype will never be used.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stefan Straakenbroek (souldude) on 2010-02-24T01:13:36.000+0000</p> 
        <div class="body">
            <p>Thank you for the reply, i'll ask the host if they will install the fileinfo package</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-24T10:47:52.000+0000</p> 
        <div class="body">
            <p>When you really want to get unsecure you could store the mimetype your client set before any model is invoked and work with this mimetype.</p>

<p>But, as noted before, ZF methods will not use this value for security reasons. Even the Mimetype Validator will not use your value, but the real found mimetype.</p>

<p>In this case you would have to extend the classes you want to use (Zend_File, Zend_Validate, Zend_Filter and so on...) and add this unsecure behaviour in userland.</p>

<p>Note:
This is workflow you should prevent in any case when there is a possibility for you.</p>

        </div>
    </div>
    </div>

