<h2>ZF-148: Zend_View_Helper_* breaks coding standard convention</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-06-26T19:02:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.6.0 (16/Dec/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nick Lo (nicklo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There is an inconsistency with the naming of custom view helpers that goes against the general coding standard convention. Custom view helpers are required to be named as specified in the manual:</p>

<p>"The class name must be Zend_View_Helper_*, where * is the helper name itself. E.g., if you were writing a helper called "specialPurpose", the class name would be "Zend_View_Helper_SpecialPurpose" (note the capitalization)."</p>

<p><a href="http://framework.zend.com/manual/en/zend.view.helpers.html#zend.view.helpers.custom">http://framework.zend.com/manual/en/…</a></p>

<p>Yet the manual also states:</p>

<p>"IMPORTANT: Code that operates with the framework but is not part of the framework, e.g. code written by a framework end-user and not Zend or one of the framework's partner companies, must never start with "Zend_"."</p>

<p>The latter naming convention should really also apply to view helpers for much the same reason it was specified in the first place.</p>

<p><a href="http://framework.zend.com/manual/en/coding-standard.naming-conventions.html">http://framework.zend.com/manual/en/…</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Oliver Saunders (irkengir) on 2006-07-04T18:45:47.000+0000</p> 
        <div class="body">
            <p>I agree with you on this point.</p>

<p>In fact I question the reason you have to define a separate class for every function you want to add.
I opted to extend Zend_View myself and have found it beneficial.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Elisamuel Resto (user00265) on 2006-09-09T09:11:20.000+0000</p> 
        <div class="body">
            <p>Changed the bug category to Docs: Improvement</p>

<p>This pertains to the documentation teams :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-07T14:35:58.000+0000</p> 
        <div class="body">
            <p>It's not just a documentation issue. As the reporter notes, having to specify Zend_View_(Helper|Filter)_XXX as the class name breaks with the coding standards, and also breaks portability (for instance, the helpers and filters could be used with Solar and/or Savant, and vice versa, if the names did not need to follow those conventions.</p>

<p>This is a fairly complex change to implement, but can definitely be done (Solar already has done it, for instance).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:10:27.000+0000</p> 
        <div class="body">
            <p>Changing fix version to unknown.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:24:57.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-28T14:42:33.000+0000</p> 
        <div class="body">
            <p>Solar does this with a two-fold mechanism: setting the directory for helpers and a class prefix to use with the directory. My thought on the matter is to do something similar:</p>

<pre class="highlight"><code>
public function setHelperPath($path, $classPrefix = 'Zend_View_Helper');
</code></pre>

<p>Then, internally, these would be stored as prefix -&gt; path. (This schema would apply for filters as well).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2006-11-28T21:40:48.000+0000</p> 
        <div class="body">
            <p>addHelperPath(), setHelperPath(), addFilterPath(), and setFilterPath() now all take an optional argument, $classPrefix, indicating the prefix to use with helpers/filters in the directory; by default, it uses 'Zend_View_(Helper|Filter)'.</p>

<p>Current as of revision 1913.</p>

        </div>
    </div>
    </div>

