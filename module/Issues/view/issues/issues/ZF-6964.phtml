<h2>ZF-6964: Zend_Soap_AutoDiscover: Allow webservices to return void</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-09T06:35:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Soap_Wsdl</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6689">ZF-6689</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12012/autodiscover-v2.diff">autodiscover-v2.diff</a></li>
            <li><a href="/issues/secure/attachment/11998/autodiscover.diff">autodiscover.diff</a></li>
            <li><a href="/issues/secure/attachment/11996/services.php">services.php</a></li>
            <li><a href="/issues/secure/attachment/11997/test-client.php">test-client.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using AutoDiscover, it is currently not possible to have a method returning nothing (=void).
When the portType is created, it references a message not included in the WSDL.
f.e. the attached dummy-webservice creates a porttype:</p>

<pre class="highlight"><code>
</code></pre>

<p>from this code:</p>

<pre class="highlight"><code>
class TestService {
    /**
     * @param string $data
     * @return void
     */
    public function update($data)
    {
        // do something with $data
        // $operation_failed = true;
        if($operation_failed) {
            throw new SoapFault('Server', 'that did not work!');
        }
    }
}
</code></pre>

<p>without including tns:updateResponse</p>

<p>the fix is easy, AutoDiscover simply has to include an empty message, see patch</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Tim Riemenschneider (t.riemenschneider@detco.de) on 2009-06-09T06:39:56.000+0000</p> 
        <div class="body">
            <p>Testservice and client to reproduce
Patch to fix AutoDiscover.php</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-06-12T10:49:14.000+0000</p> 
        <div class="body">
            <p>This should already be fixed in ZF-6689, which was released with 1.8.3</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Tim Riemenschneider (t.riemenschneider@detco.de) on 2009-06-16T05:24:40.000+0000</p> 
        <div class="body">
            <p>really, was it? ;-)</p>

<p>However I tried svn trunk, which shows a different problem:
Because return-void-functions are mapped to one-way-functions, the client does not wait for the soap-server (which is expected), which means it never gets the exception.
(Unless called with feature SOAP_WAIT_ONE_WAY_CALLS of course)
Ie. one-way-functions are functions that return no information to the caller, however in my use-case the function does return a bit of information: the presense or absense of an exception (SoapFault). (In the past I circumvented this with "@return boolean unused", but that is not clean code ;-) )</p>

<p>I have patched AutoDiscover.php further to check for a "@throws" in the functions/methods doc-block and only handle functions without this tag as one-way-functions. (I have however only tested this with php as client (and the eclipse-ws-explorer, which however waits for one-way-calls))
The patch simply sets isOneWayMessage back to false, the rest of the code does "the right thing" (IMHO) already, ie pass an empty array to addMessage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Daniel Kreuer (dkreuer) on 2009-09-02T01:33:20.000+0000</p> 
        <div class="body">
            <p>This issue isn't fixed because of not generating one-way-operation "style" port bindings.</p>

<p>The port operation is created either one-way or two-way, but the binding is always created two-way.
In ZF1.9.2/Zend/Soap/AutoDiscover.php:417 the binding operation mustn't have the output parameter for one-way operations.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-09-02T03:41:04.000+0000</p> 
        <div class="body">
            <p>re-opened because of said problems.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:52.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

