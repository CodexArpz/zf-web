<h2>ZF2-431: Zend\Session\Container does not allow modification by reference</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs: Task </dd>

    <dt>Created:</dt>
    <dd>2012-07-27T15:23:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-10-08T20:15:05.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Demian Katz (demiankatz)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Session</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Because of the "ArrayObject returns value rather than reference" issue (see, for example, <a href="https://bugs.php.net/bug.php?id=51622">https://bugs.php.net/bug.php?id=51622</a> ), the Zend\Session\Container does not allow certain types of modifications of properties/array elements.</p>

<p>Here are some unit tests and responses that demonstrate the issue:</p>

<pre class="highlight"><code>
    public function testContainerAllowsArrayModification()
    {
        $this-&gt;container['foo'] = 1;
        $this-&gt;assertEquals(1, $this-&gt;container['foo']);
        $this-&gt;container['foo']++;
        $this-&gt;assertEquals(2, $this-&gt;container['foo']);
    }
</code></pre>

<p>There was 1 error:</p>

<p>1) ZendTest\Session\ContainerTest::testContainerAllowsArrayModification
Indirect modification of overloaded element of Zend\Session\Container has no effect</p>

<pre class="highlight"><code>
    public function testContainerAllowsObjectModification()
    {
        $this-&gt;container-&gt;foo = 1;
        $this-&gt;assertEquals(1, $this-&gt;container-&gt;foo);
        $this-&gt;container-&gt;foo++;
        $this-&gt;assertEquals(2, $this-&gt;container-&gt;foo);
    }
</code></pre>

<p>There was 1 failure:</p>

<p>1) ZendTest\Session\ContainerTest::testContainerAllowsObjectModification
Failed asserting that 1 matches expected 2.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-30T20:55:50.000+0000</p> 
        <div class="body">
            <p>Interestingly, you can do the following fine:</p>

<pre class="highlight"><code>
$container += 1;
</code></pre>

<p>Considering that internally we're using an ArrayObject, the liklihood of getting this to work with increment and decrement operators is pretty slim. However, since increment/decrement on assignment works fine, I'd argue we should simply document those use cases.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-30T20:56:22.000+0000</p> 
        <div class="body">
            <p>Updating issue type to "documentation task".</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Demian Katz (demiankatz) on 2012-07-31T12:36:59.000+0000</p> 
        <div class="body">
            <p>Increment/decrement was just the simplest use case I could think of that caused a problem.  Possibly more serious is the problem of appending to existing arrays:</p>

<pre class="highlight"><code>
    public function testContainerAllowsArrayModificationOfArrays()
    {
        $this-&gt;container['foo'] = array();
        $this-&gt;assertEquals(0, count($this-&gt;container['foo']));
        $this-&gt;container['foo'][] = 'bar';
        $this-&gt;assertEquals(1, count($this-&gt;container['foo']));
    }

    public function testContainerAllowsObjectModificationOfArrays()
    {
        $this-&gt;container-&gt;foo = array();
        $this-&gt;assertEquals(0, count($this-&gt;container-&gt;foo));
        $this-&gt;container-&gt;foo[] = 'bar';
        $this-&gt;assertEquals(1, count($this-&gt;container-&gt;foo));
    }
</code></pre>

<p>(These trigger errors equivalent to the ones listed in the ticket above).</p>

<p>I agree that ```.  (You can't use += in this context -- it yields an "Unsupported operand types" fatal error).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-31T13:22:05.000+0000</p> 
        <div class="body">
            <p>Right, but, again, because it's an ArrayObject implementation internally, you <em>can</em> do this:</p>

<pre class="highlight"><code>
$container-&gt;foo-&gt;append('bar');
</code></pre>

<p>As such, I still feel this falls into a documentation issue -- we need to clarify that the container and its members follows ArrayObject behavior, which means you have to treat it as such when using it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Demian Katz (demiankatz) on 2012-07-31T13:48:56.000+0000</p> 
        <div class="body">
            <p>Makes sense -- thanks for the clarification.  (I'm still not totally comfortable with ArrayObject behavior, but that's not ZF's problem!).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2012-10-08T20:15:05.000+0000</p> 
        <div class="body">
            <p>This issue has been closed on Jira and moved to GitHub for issue tracking.  To continue following the resolution of this issues, please visit: <a href="https://github.com/zendframework/zf2/issues/2510">https://github.com/zendframework/zf2/issues/2510</a></p>

        </div>
    </div>
    </div>

