<h2>ZF-6148: Dijit parsing before store creation results in FilteringSelect and ComboBox.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-03-27T20:46:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-14T07:58:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.4 (23/Jun/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dojo</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>This issue duplicates #5987.</p>

<p>I have got JavaScript error: <em>'dojo.data is undefined'</em> after migrating to ZF 1.7.7.
It seems that JavaScript tried to create new instance of dojo.data.ItemFileReadStore, but it is not loaded yet.</p>

<p>ItemFileReadStore instance should be created after page load, using dojo.addOnLoad method.
I think that using <em>prependOnLoad</em> (look at the first comment) instead of <em>addJavascript</em> (in ComboBox.php line 142).</p>

<p>The following code was generated by Dojo View helper:</p>

<pre class="highlight"><code>
dojo.require("dojo.data.ItemFileReadStore");
dojo.require("dijit.form.FilteringSelect");
dojo.require("dijit.form.CurrencyTextBox");
dojo.require("dijit.form.NumberTextBox");
dojo.require("dijit.form.Textarea");
dojo.require("dijit.form.Button");
dojo.require("dijit.Dialog");
dojo.require("dijit.ColorPalette");
dojo.require("dojo.parser");

dojo.addOnLoad(function() {
dojo.forEach(zendDijits, function(info) {
var n = dojo.byId(info.id);
if (null != n) {
dojo.attr(n, dojo.mixin({ id: info.id }, info.params));
}
});
dojo.parser.parse();
});

var manufacturerStore = new dojo.data.ItemFileReadStore({"url":"\/manufacturer\/list"});
var modelStore = new dojo.data.ItemFileReadStore({"url":"\/model\/list"});
var zendDijits = [{"id":"manufacturer","params":{"label":"Manufacturer","store":"manufacturerStore","dijitParams",........}}];
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by St√©phane Legrand (sulu45) on 2009-04-30T09:48:36.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>Just to say that i have exactly the same problem. With this code :</p>

<p>$nom = new Zend_Dojo_Form_Element_FilteringSelect('nom');
      $nom-&gt;setLabel('Nom : ');
      $nom-&gt;setAutoComplete(true);
      $nom-&gt;setStoreId('nom');
      $nom-&gt;setStoreType('dojo.data.ItemFileReadStore');
      $nom-&gt;setStoreParams(array('url' =&gt; '/js/nom.js'));
      $nom-&gt;setAttrib(array('searchAttr' =&gt; 'nom'));
      $nom-&gt;setRequired(true);
      $form-&gt;addElement($nom);</p>

<p>i get the same Javascript error :</p>

<p>dojo.data is undefined</p>

<p>and, of course, an empty select field.</p>

<p>Tested with ZF 1.7.8.</p>

<p>Regards,
Stephane.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Miguel Angel Perez (mangelp) on 2009-06-12T06:20:00.000+0000</p> 
        <div class="body">
            <p>Hello,</p>

<p>ZF 1.8.3 is still affected by this issue despite of #5987 being closed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-06-18T11:22:06.000+0000</p> 
        <div class="body">
            <p>Finally have it working correctly. prependOnLoad() does not work, as that method is used by the dojo view helper inernally just prior to rendering to create the dijits -- which means that the dijit creation happens prior to store creation. I did figure it out, however, based on a comment on ZF-5987 by Erik Wahlstrom, and now have an onLoad event that creates the store and assigns it to the dijit's store attribute. I've tested this locally and the solution is solid.</p>

<p>The changes have been patched to trunk and the 1.8 release branch, and will go out with 1.8.4.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jean-Fabrice (jeanfabrice) on 2009-07-06T05:25:09.000+0000</p> 
        <div class="body">
            <p>this ZF 1.8.4  fix seems to break the following setup, known to work in ZF 1.8.3:
1/ store is statically defined in a view :</p>

<p>2/ filteringselect only sets up store property to targe the statically defined store :
$element-&gt;setDijitParams( array( 'store'      =&gt; 'myStore'  ) );</p>

<p>With this setup and ZF 1.8.4, FilteringSelect appears empty while myStore is populated</p>

<p>Why am I doing things like this ? Because this is the only way I found to have a filteringselect combo working  when loaded into a dojox.dialog (=dojo.dialog + executescript) with a xhrget request.</p>

<p>Jean-fabrice</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jean-Marc Rigade (holon) on 2009-07-09T02:00:59.000+0000</p> 
        <div class="body">
            <p>I have the same problem than Jean-Fabrice.
All my filtering select are empty.
I have some "linked" filteringselect, when I make change on the first list, the second is affected.
Now this dont work at all...</p>

<p>And I've a lot of filtering select in my webapp, what must I do ????</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kevin Craine (craineum) on 2009-07-14T07:58:26.000+0000</p> 
        <div class="body">
            <p>I don't know where else to put this comment,  It probably is a new bug, or there might be a better work around.</p>

<p>In 1.8.4, doing something like this in a view:</p>

<p>echo $this-&gt;filteringSelect(
    'select',
    '20',
    array(
        'store'        =&gt; 'store',
        'storeType'    =&gt; 'dojo.data.ItemFileReadStore',
        'storeParams'  =&gt; array('url' =&gt; '/my/data'))
);</p>

<p>Fails, the 'value' is not set because the store is not loaded when it it parses the input.  With a filteringSelect the input remains a textbox with the value set, but it is not a dojo object, and everything else on the page breaks.  With a comboBox the value and label are set to the identifier value that I am passing instead of the label getting set properly (assuming because combo box allows things not in the store).  I tried putting a 'value' option in the params array, but that doesn't seem to propagate, and even if I test this by hand it still doesn't load properly because of the way things are getting parsed.</p>

<p>Anyone have any idea's?  Besides creating all this stuff by hand?</p>

        </div>
    </div>
    </div>

