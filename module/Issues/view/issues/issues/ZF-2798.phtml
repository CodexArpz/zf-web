<h2>ZF-2798: JOIN requires FROM otherwise it acts just like FROM</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-03-04T04:26:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-08T07:29:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Dimitri van Hees (s481797)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2546">ZF-2546</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Joining tables with {{setIntegrityCheck(false)}} doesn't work without specifying the primary table with {{$select-&gt;from($table)}}. If {{from}} is not specified, {{join}} acts exactly the same as {{from}} and doesn't use it's <em>required</em> parameters at all.</p>

<p>More info about this: <a href="http://framework.zend.com/manual/en/zend.db.table.html#zend.db.table.qry.rows.set.integrity.example">http://framework.zend.com/manual/en/â€¦</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Stephen Crosby (stevecrozz) on 2008-03-04T17:33:30.000+0000</p> 
        <div class="body">
            <p>Steps to reproduce:</p>

<ol><li>Create a table class for a database table that extends Zend_Db_Table_Abstract</li>
<li>Create an accessor function that uses:
$select = $this-&gt;select()
-&gt;setIntegrityCheck(false)
-&gt;joinLeft('tableB', 'tableA.id=tableB.id');
echo $select-&gt;__toString();</li>
</ol><p>reveals that the first table (the one for which the table class was extended) is not part of the query.</p>

<p>(ugly workaround, add another join to force the original table back into the query)
$select = $this-&gt;select()
  -&gt;setIntegrityCheck(false)
  -&gt;joinLeft('tableA', 'tableA.id=tableB.id')
  -&gt;joinLeft('tableB', 'tableA.id=tableB.id');</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:58.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Rupf (simon.rupf) on 2008-07-28T22:47:30.000+0000</p> 
        <div class="body">
            <p>Found another workaround: Instead of the (ugly) join() on the table itself, just use the from().</p>

<p>$select = $this-&gt;select()
$select-&gt;setIntegrityCheck(false);
$select-&gt;from('tableA');
$select-&gt;joinLeft('tableB', 'tableA.id=tableB.id');
echo $select-&gt;__toString();</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-06T10:57:42.000+0000</p> 
        <div class="body">
            <p>This issue has gone unaddressed for too long. I'm reassigning this to Ralph for re-evaluation and categorization.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:25:14.000+0000</p> 
        <div class="body">
            <p>Will evaluate within 2 weeks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-05-18T15:15:56.000+0000</p> 
        <div class="body">
            <p>Fixed in r15632, still need to determine if this is a mini or minor release point feature (this is a new feature, not a bug as the issuer claims since the select object indeed did work as originally designed)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-05-19T06:27:20.000+0000</p> 
        <div class="body">
            <p>To be clear, the fix is that the a parameter ($withFromPart) was added to Zend_Db_Table_Abstract::select($withFromPart = false).  To get an instance of the select object with the from loaded, simply call $table-&gt;select(true).  This feature keeps backwards compatibility as well as provides a solution most people can work with if they need the select object preloaded.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Phil Brown (philbrown) on 2009-07-07T21:10:07.000+0000</p> 
        <div class="body">
            <p>I notice that this issue is marked as fixed in 1.8.2 but looking into Zend_Db_Table_Abstract 1.8.4, the fix appears to be missing.</p>

<pre class="highlight"><code>
/**
 * Returns an instance of a Zend_Db_Table_Select object.
 *
 * @return Zend_Db_Table_Select
 */
public function select()
{
    require_once 'Zend/Db/Table/Select.php';
    return new Zend_Db_Table_Select($this);
}
</code></pre>

<p>The constant Zend_Db_Table_Abstract::SELECT_WITH_FROM_PART is also absent.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-07-08T07:29:10.000+0000</p> 
        <div class="body">
            <p>Changing the fix version - since this is a new feature it will be in 1.9</p>

        </div>
    </div>
    </div>

