<h2>ZF-9996: Module Bootstrapper ignores Default Module setting</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-06-16T06:48:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:09.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13135/Modules.patch">Modules.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>in application.ini, module modX is set to be the default module and prefixDefaultModule parameter is turned on. However the application still looks for a class Default_Bootloader rather than modX_Bootloader.</p>

<p>One of the workarounds is to create a module directory 'default' with a file Bootstrap.php that will have:</p>

<pre class="highlight"><code>
class Default_Bootstrap extends Zend_Application_Module_Bootstrap
{
}
</code></pre>

<p>Our scenario:
Current system has 2 modules, modX and modY, with modX being the default module +for now+. Future development will lead to further development of modY and modZ, with either modY or modZ becoming the default module. Switching between the default modules has to be as "painless" as possible (translation: minimum-to-none code changes)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Serge Khodorkovsky (sergek) on 2010-06-16T06:51:58.000+0000</p> 
        <div class="body">
            <p>The attached patch (Modules.patch) is an alternate solution I've arrived at. Basically during the Module Bootstrapper selection, it checks if the current module is the one selected to be the default module and if the prefixDefaultModule parameter is enabled. If both conditions are true, it switches the current module and module directory to the default one, that is the module specified as default using the defaultModule setting.</p>

        </div>
    </div>
    </div>

