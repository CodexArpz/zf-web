<h2>ZF-9809: Instantiate DAO before parsing of AMF Body. </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-05-05T13:06:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6130">ZF-6130</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Make and modification to Zend_Amf_Server and Zend_Amf_Response so that it will wait for the deserialization of the body parameters until the service class which the amf call is calling is instantiated allowing for the proper VO's to be loaded by the services class before the body is deserialized. Developers will no longer require to add class mapping for value objects(Data transfer object) as they will be instantiated when the service (data access object) is instantiated. Unless they are not a 1 to 1 mapping which would require a classMap to be created.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

