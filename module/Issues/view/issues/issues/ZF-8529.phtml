<h2>ZF-8529: Namespace Package_Subpackage not supported by module Resource Loader</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-12T00:38:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-03-03T23:10:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The module namespace loader only checks if the first segment of the given class matches the resource loaders namespace, however you could have namespaces of the type "Foo_Bar", a simple fix for this is:</p>

<pre class="highlight"><code>
        if (!empty($namespaceTopLevel)) {
            if (strpos($class, $namespaceTopLevel) !== 0) {
                // wrong prefix? we're done
                return false;
            }
        }
</code></pre>

<p>in getClassPath().</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Steven Rosato (ratius) on 2010-09-18T11:49:35.000+0000</p> 
        <div class="body">
            <p>The fix works very well for me. I used this fix as an adhoc implementation of the zf2 ResourceAutoloader in my library and it works with PHP namespaces too (e.g Foo\Bar as a resource namespace).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Rosato (ratius) on 2010-09-19T20:27:29.000+0000</p> 
        <div class="body">
            <p>I saw that this causes issues where multiple ResourceLoader objects added to the autoloader stack will not behave correctly. This is due to the autoloader class breaking on the first matching namespace when getting namespaced autoloaders. I have applied a small fix to resolve this issue to fully support subpackages. I will provide patches containing the required fix and unit tests shortly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Rosato (ratius) on 2011-03-03T23:10:09.000+0000</p> 
        <div class="body">
            <p>I have submitted the patch here <a href="http://pastebin.com/DQHPihHe">http://pastebin.com/DQHPihHe</a></p>

        </div>
    </div>
    </div>

