<h2>ZF-7985: Make arguments in constructor optional for the validators</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-09-30T06:22:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-30T11:40:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There are a lot of validators where you can set the settings of the validator by passing some arguments in the constructor.
For a lot of validator, those arguments are optional.
This makes it easy to create a config with some validators and options and first create a instance of the validator and then looping over the options and call the mutators methods 'set' + ucfirst($optionKey);</p>

<p>However, there are a few validators that require some arguments to be set in the constructor (Barcode, Between, GreaterThan, InArray, Regex, LessThan, File_Sha1, File_Size, File_MimeType, File_Md5, File_ImageSize, File_Hash, File_FilesSize, File_Extension, File_Crc32, File_Count, Db_Abstract)</p>

<p>It would be great if all validator would act the same so that you can create an instance without any arguments and that you can configure everything by calling the mutators.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-30T11:40:18.000+0000</p> 
        <div class="body">
            <p>There is no benefit to integrate something which does already work.
You can provide a config object to every validator.</p>

<p>Validators which require options will not be changed to not require them. This would mean to throw exceptions within isValid() as we would then have to check if this options are properly set.</p>

<p>Throwing exceptions within isValid would themself add a BC break as you would have to rewrite your code to match.</p>

<p>Even then it would be possible with the old code to do what you wrote.
Simply give default settings at initiation and overwrite them with calling the proper setter.</p>

        </div>
    </div>
    </div>

