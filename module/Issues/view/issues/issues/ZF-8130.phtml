<h2>ZF-8130: Rendering filters</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-10-23T01:51:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2013-02-13T17:28:39.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8131">ZF-8131</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>Along with missing post-validation filters, which i understand that is postponed for 2.0 there are other kind of filters which are actually missing.</p>

<p>I am mentioning "rendering filters". What i mean by this ? Let's give you a sample:</p>

<p>Let's suppose we have a form with works with mixed kind of numeric values:
a) id's or phone numbers or other kind of numbers which doesn't have a localized version, just a normalized version
b) amounts (money, quantities, whatever) which have both a localized version and a normalized version.</p>

<p>The mode is going to store of course, the normalized version of the data.</p>

<p>But, the form should rather render the values into localized version, as: 13,454   and not 13456
Of course, before the validation (or after validation with post validation filters which are to come) we can actually filter the input given from the form so we validate and get back the normalized version, instead of localized version.</p>

<p>So, what we are missing now there are filters so we convert the data before rendering into an appropriate format. In my sample, to convert from a normalized version to a localized version.</p>

<p>I don't think there is a "standard" way of doing this now, for values, and we gonna use for now just workarounds, ad make new view helpers, overwrite setDefaults aso.</p>

<p>So please if possible consider if we don't actually need those kind of filters...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-23T12:13:32.000+0000</p> 
        <div class="body">
            <p>Actually, "post rendering" would be considered something for the view layer, and should either be done via view helpers operating on the values directly, or decorators. At this point, there is plenty of infrastructure already for this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-23T12:14:30.000+0000</p> 
        <div class="body">
            <p>A ton of localization view helpers have been added in the last few releases that address this request already.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-23T12:15:52.000+0000</p> 
        <div class="body">
            <p>Actually, "post rendering" would be considered something for the view layer, and should either be done via view helpers operating on the values directly, or decorators. At this point, there is plenty of infrastructure already for this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-10-26T00:22:07.000+0000</p> 
        <div class="body">
            <p>I am a bit confused, in my simple sample what view helper should be used from the "ton of localization view helpers" ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-26T05:10:49.000+0000</p> 
        <div class="body">
            <p>Actually, sorry, I misspoke: there's a ton of localization <em>filters</em> that have been added. Since filters may be invoked trivially from within a view script, there's little reason to add helpers for them:</p>

<pre class="highlight"><code>
&lt;?php echo Zend_Filter::filterStatic($this-&gt;someValue, 'NormalizedToLocalized') ?&gt;
</code></pre>

<p>The point is that the filters contained in Zend_Form are considered normalization filters -- filters that transform a value to a common format for purpose of data storage and/or validation (the classic example is filtering a phone number for only digits prior to doing a validation on it). Typically you store normalized -- <em>not</em> localized -- data in your data store. Normalization is an activity of the model.</p>

<p>Post-filtering, as requested, has to do with <em>output</em>, and I'd argue that tasks specific to output of a value -- unless they are necessary to form display -- should be relegated to the output layer. Localization is certainly one of these areas, as the localized version of a value will vary between users and requests.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-10-26T05:43:17.000+0000</p> 
        <div class="body">
            <p>Thanks Matthew for clarification.</p>

<p>However, i may not explained very good the idea.</p>

<p>I was not talking about post-filtering. I am talking about form rendering filters -  necessary to display the form... Not to display the data from the storage layer...</p>

<p>Let's suppose we have this scenario:
- I want to creare one form with one select element, the multioptions been possible dates into a localized format
- Now, without rendering filters, the dates are rendered on the form with a normalized format now, unless i do some pre-processing after getting the data on the model</p>

<p>Other scenario:
- I want to create a form with a input text, with a certain amount, displayed localized (123,456.67)
- Since model of course that contains a normalized format, now my only way to display a localized formal (as above) would be to do some pre-processing, or maybe use MySQL localization facilities (which is think is bad idea, because is basically moving the computing for output layer into model!!!)</p>

<p>So, i would argue that:
- filtering the data provided to the form is also needed, not just the filtering the data at validation, or after validation (this been proposed for 2.0).
-  This filtering could be logically done on form, not on controller or model...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2009-10-26T06:00:34.000+0000</p> 
        <div class="body">
            <p>One more case, this approach looks logical i think:
- a field into the model has the one date stored as timestamp
- i get the record from the model
- i populate the form with the record data
- at rendering the RENDERING FILTER is transforming the date to a localized format: mm/dd//yyyy or so and it displays into the text field the date into this format
- user is making the adjustements to the data (including date) and it saves the form
- before validation, we are filtering using some NORMAL (current filters of Zend_Form) filters, let's say for StripTags, Trim, aso
- validation is checking that the data is into mm/dd//yyyy format
- after validation, the NEW FILTERS PROPOSED FOR 2.0 are changing the data back to timestamp, from mm/dd//yyyy format
- the data is saved to the model</p>

<p>So i think is logical that we need 3 types of filters:
- rendering filter
- pre-validation filter (existing filters)
- post-validation filters (proposed for 2.0)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-08-06T08:30:48.000+0000</p> 
        <div class="body">
            <p>Filters are filters... for the filter itself there should be no change if it's being used pre-validation or post-validation. It's still the same filter. How it works just depends on the used parameters.</p>

<p>What we need is a way to define when the filter has to be processed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Cristian Bichis (avantis) on 2010-08-06T08:38:11.000+0000</p> 
        <div class="body">
            <p>Yes, correct.</p>

<p>Just would be nice to have added some ways to run filters at different points into all the Form processing.</p>

        </div>
    </div>
    </div>

