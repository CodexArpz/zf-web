<h2>ZF-204: Properly supporting table aliases in Zend_Db_Select</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-07-07T05:03:47.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-121">ZF-121</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10034/Select-patch.diff">Select-patch.diff</a></li>
            <li><a href="/issues/secure/attachment/10284/zend-db.patch">zend-db.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In SQL queries tables are almost always joined to another. Sometimes they are aliased to improve readability or to allow subsequent joins of the same table or self-joins. Zend_Db_Select doesn't really support or understand table aliases, but this patch makes it right.</p>

<p>h2. Examples</p>

<p>Getting columns from a self-join:</p>

<pre class="literal">

would result in:

</pre>

<p>This patch makes the result become:</p>

<pre class="literal">

It also allows for an alias be specified with an array of [table =&gt; alias] form (result is same as previous):

</pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mislav Marohni? (mislav) on 2006-07-07T05:05:30.000+0000</p> 
        <div class="body">
            <p>This patch modifies some internals to make Zend_Db_Select a little bit smarter</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-07-07T17:31:03.000+0000</p> 
        <div class="body">
            <p>Also see [ZF-121].</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:14:33.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-05T17:02:21.000+0000</p> 
        <div class="body">
            <p>Recategorize in Zend_Db_Select component.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-29T11:57:10.000+0000</p> 
        <div class="body">
            <p>Comment: we need to use an additional optional parameter to the from() clause for the correlation name.  The string 'foo AS bar' is actually a legal SQL identifier if one uses delimited identifiers.</p>

<p>That is:</p>

<pre class="highlight"><code>
SELECT *
FROM "foo AS bar"
</code></pre>

<p>is legal and has different meaning from:</p>

<pre class="highlight"><code>
SELECT *
FROM foo AS bar
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-29T11:59:14.000+0000</p> 
        <div class="body">
            <p>Ah, now I understand the patch.  Never mind, using an associative array is fine with me.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-08T20:48:14.000+0000</p> 
        <div class="body">
            <p>Implemented in revision 3320.</p>

<p>Tables are now tracked by their correlation name, not their physical name.  The correlation name must be unique in a query, but the table name can be duplicated, e.g. for self-joins.</p>

<p>Columns in the select-list are prepended by their correlation name.</p>

<p>You can specify correlation names by passing a one-element associative array in place of a string for the table name:</p>

<pre class="highlight"><code>
$select-&gt;from( array('table1' =&gt; 'alias') );
</code></pre>

<p>If you pass a simple string for the table name, Zend_Db_Select generates a correlation name for you, and tries to make sure it is unique in this query, to support self-joins.</p>

<p>If you have a column that shouldn't be prepended by a correlation name, use '' as the name.  For example:</p>

<pre class="highlight"><code>
$select-&gt;from( '', 'count(*)');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Gibson (jollytoad) on 2007-02-26T10:01:19.000+0000</p> 
        <div class="body">
            <p>I've just upgraded the framework to v0.8.0, and this concept is causing me issues.
(I'm using PostgreSQL, and make a lot of use of it's schema facility)</p>

<p>I think the associative array (table =&gt; correlation) would be much more useful the other way round,
ie (correlation =&gt; table), otherwise we cannot use Zend_Db_Expr() as a table name.</p>

<p>For example, previously I was using schema qualified tables and aliases in the following manner:</p>

<p>$adapter-&gt;select()-&gt;from("myschema.mytable t", array('t.mycol1','t.mycol2'))</p>

<p>Now to continue doing this and take advantage of the correlation feature, whilst avoiding my
qualified table name from being quoted, i'd have to do:</p>

<p>-&gt;from(array(new Zend_Db_Expr("myschema.mytable") =&gt; 't'), array('mycol1', 'mycol2'))</p>

<p>Only, this wont work because PHP doesn't allow the object as the key.</p>

<p>Also, PostgreSQL supports table returning functions, so statements like:
   SELECT t.* FROM myfunc('stuff') t;
are not unusual in that database system. Which would require use of Zend_Db_Expr().</p>

<p>For further details see:
<a href="http://www.postgresql.org/docs/8.2/interactive/functions-srf.html">http://postgresql.org/docs/8.2/…</a>
<a href="http://www.postgresql.org/docs/8.2/interactive/xfunc-sql.html#AEN36424">http://postgresql.org/docs/8.2/…</a></p>

<p>Now I know this is probably not portable anyway, portability between dbms' isn't my concern.
Yet I still find select() very useful for building up dynamic queries, and this is making it less
useful for me.</p>

<p>I'd like to suggest switching to ($correlationName =&gt; $tableName), but it's probably too late for this.
(or is it?)
So how about a two value array ($tableName, $correlationName) - this would allow use of
Zend_Db_Expr() as a table name.</p>

<p>If we can agree on something, I can do the work and supply the patch.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-26T11:00:48.000+0000</p> 
        <div class="body">
            <p>Hi Mark, yes I think it's worthwhile to swap the order of the associative array.  I regret that we released ZF 0.8 and this will cause some headache, but we're still in Preview Release after all.</p>

<p>It's even more important to make the alias first in the case of array("alias" =&gt; "column"), which I haven't implemented yet.</p>

<p>The issue of supporting schema names has come up, and also many people want to be able to specify "table.column" without using a Zend_Db_Expr.  My proposal is that Zend_Db_Select parse any identifier as "[[schema.]table.]column]" and quote each one separately.</p>

<p>It would mean if anyone has an identifier in their database containing a dot, they would have to use Zend_Db_Expr to override the quoting behavior, but this should be an extremely rare case.</p>

<p>I'll probably implement both solutions above soon.  I'll log separate JIRA issues for them so I can track them.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-26T11:02:23.000+0000</p> 
        <div class="body">
            <p>In the meantime, the workaround is that you have to write SQL queries yourself as strings, and then use $db-&gt;query() to run them.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Gibson (jollytoad) on 2007-02-26T12:21:28.000+0000</p> 
        <div class="body">
            <p>This patch swaps the table and correlation names,
and quotes qualified identifiers properly.
It's fixed my problems anyway. Hope it may be of use.</p>

        </div>
    </div>
    </div>

