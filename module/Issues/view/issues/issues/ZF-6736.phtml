<h2>ZF-6736: Allow writing the response body into a stream</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-05-20T00:49:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-24T14:14:31.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Kristof Coomans (cyberwolf)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Stanislav Malyshev (stas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Http_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-6729">ZF-6729</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently the response body is stored as a string inside the response object. When it concerns big responses, like file downloads, this can take up quite some memory and you might go over PHP's memory limit.</p>

<p>To avoid such situations it would be nice to be able to write the body (after processing the transfer-encoding, NOT the raw body) directly into a PHP stream / file.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-05-20T01:13:54.000+0000</p> 
        <div class="body">
            <p>File download should not pass throught the MVC system, but should directly be served by the WebServer (Apache's mod_xsendfile is good for that) 
Even if the dispatching may end on a file to be served, then it should send a 3xx HTTP response code to make the browser equest for it directly.</p>

<p>Am I wrong or did I miss something ? Perhaps you have a use-case to provide ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Coomans (cyberwolf) on 2009-05-20T02:33:12.000+0000</p> 
        <div class="body">
            <p>Hi Julien</p>

<p>I think you missed the point, or I lacked in making my issue report clear enough, as I am talking not about MVC but about responses to requests made with Zend_Http_Client.</p>

<p>$client = new Zend_Http_client('<a href="http://example.com/somefile">http://example.com/somefile</a>');
$response = $client-&gt;request();</p>

<p>The full raw HTTP response body is now as a string inside the protected member variable $response-&gt;body, using up memory.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by julien PAULI (doctorrock83) on 2009-05-20T03:12:47.000+0000</p> 
        <div class="body">
            <p>Yes yes, all my fault of not reading deeply the subject.</p>

<p>So I agree with your issue, if I can provide some patch, I would ;-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-07-05T03:26:23.000+0000</p> 
        <div class="body">
            <p>This doesnt make sense imho, since the raw response is put together in one piece anyways for processing you have the complete response at one point in time no matter what and can reach memory limit with that.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Coomans (cyberwolf) on 2009-07-05T03:53:48.000+0000</p> 
        <div class="body">
            <p>Hi Benjamin, that's exactly my point, that in certain cases you would not want to have the raw response kept in memory but instead written to a stream (a file stream for example) as the data gradually comes in.</p>

<p>Downloading bigger files from Amazon S3 on a limited PHP environment is now impossible exactly because of the current implementation.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stanislav Malyshev (stas) on 2009-11-16T17:18:50.000+0000</p> 
        <div class="body">
            <p>I think I know how to make it work.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Stanislav Malyshev (stas) on 2009-11-24T14:14:29.000+0000</p> 
        <div class="body">
            <p>Solution checked into trunk.</p>

        </div>
    </div>
    </div>

