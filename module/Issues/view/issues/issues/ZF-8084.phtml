<h2>ZF-8084: Segmentation Fault with Zend_Paginator_Adapter_Iterator + Zend_Cache</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-17T03:29:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-25T01:43:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.7 (11/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Paginator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12320/ZF-8084.patch">ZF-8084.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you use the iterator adapter and a serializing cache like the following you will crash php:</p>

<pre class="highlight"><code>
&lt;?php


set_include_path('/tmp/zf/trunk/library/');
require_once 'Zend/Loader/Autoloader.php';
$autoloader = Zend_Loader_Autoloader::getInstance();
$view = new Zend_View();

try {
    $frontendOptions    = array(
        'caching' =&gt; true,
        'lifetime' =&gt; 72000,
        'automatic_serialization' =&gt; true
    );
    $backendOptions = array(
        'cache_dir' =&gt; '/tmp/invite_vcfront' // Directory where to put the cache files
    );
    $cache = Zend_Cache::factory('Core','File', $frontendOptions,$backendOptions);
    Zend_Paginator::setCache($cache);

    $it = new ArrayIterator(array('test' =&gt; 'test', 'test2' =&gt; 'test2'));
    $paginator = Zend_Paginator::factory($it);
    $paginator-&gt;setItemCountPerPage(10);
    $paginator-&gt;setCurrentPageNumber(1);
    $paginator-&gt;setView($view);
    // var_dump($paginator-&gt;getIterator());
    foreach($paginator as $page){
        echo var_dump($page)."\n";
    }

} catch (Exception $e) {
    echo $e;
}

echo "END\n";
</code></pre>

<p>First run (not cached)</p>

<pre class="literal">
php test.php
string(4) "test"

string(5) "test2"

END

</pre>

<p>Second run (cached)</p>

<pre class="literal">
php test.php
Segmentation fault
</pre>

<p>After cleaning cache this restarts on first run</p>

<p>The problem is that Zend_Paginator caches an instance of LimitIterator where is a bug in php:
<a href="http://bugs.php.net/bug.php?id=49906">http://bugs.php.net/bug.php?id=49906</a></p>

<p>To solve this I created a new class Zend_Paginator_SerializableLimitIterator.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2009-10-17T03:41:20.000+0000</p> 
        <div class="body">
            <p>added patch</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2009-10-22T14:23:17.000+0000</p> 
        <div class="body">
            <p>patch implemented in r18670
(added testcase Zend_Paginator_Adapter_IteratorTest::testGetItemsSerializable)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Carlos Buenosvinos (carlos.buenosvinos) on 2009-11-25T00:49:43.000+0000</p> 
        <div class="body">
            <p>"unserialize" DocBlock says "@paran". It should be "@param"</p>

        </div>
    </div>
    </div>

