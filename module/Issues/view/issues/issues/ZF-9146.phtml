<h2>ZF-9146: Zend_Xmlrpc_Client converts null to array instead of a struct</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-11T05:39:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-20T05:07:36.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Jan Pieper (jpieper)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_XmlRpc_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If a remote method has an optional parameter, which defaults to null and a client actually try to pass null for that parameter, the Zend_XmlRpc_Client converts null into the data type expected by the remote method. This causes null to be converted into an array which in turn causes a signature mismatch.</p>

<p>The client shouldn't do that when null is given as an optional parameter.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jan Pieper (jpieper) on 2010-11-20T05:07:36.000+0000</p> 
        <div class="body">
            <p>This isn't a bug. You need to add "null" to the @param tag.</p>

<pre class="highlight"><code>/**
 * @param array $list
 * @return string
 */
public function doSomething($list = null) {
    // ...
}</code></pre>

<pre class="highlight"><code>/**
 * @param array|null $list
 * @return string
 */
public function doSomething($list = null) {
    // ...
}</code></pre>

        </div>
    </div>
    </div>

