<h2>ZF-656: MVC Plugin Interface/Abstract Class incorrect</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-12-17T16:09:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:34.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.7.0 (18/Jan/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Lee Saferite (lsaferite)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The Zend_Controller_Plugin_Abstract class has the following code</p>

<pre class="highlight"><code>
 /**
  * Called before Zend_Controller_Front begins evaluating the
  * request against its routes.
  *
  * @return void
  */
 public function routeStartup()
 {}
</code></pre>

<p>The routeStartup function has no definition to allow $request objects to be passed across.</p>

<p>However, in Zend_Controller_Front you have this call</p>

<pre class="highlight"><code>
/**
   * Notify plugins of router startup
   */
$this-&gt;_plugins-&gt;routeStartup($request);
</code></pre>

<p>While I know that PHP will not have any issue with this, it is bad form.</p>

<p>Additionally, the plug-in architecture has the idea that the Request and Response objects are set on the plugin, yet you also pass the Request object in many of the plugin calls, isn't this an unnecessary duplication?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Lee Saferite (lsaferite) on 2006-12-17T16:10:55.000+0000</p> 
        <div class="body">
            <p>BTW:  I am using trunk  r2401</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-15T06:54:24.000+0000</p> 
        <div class="body">
            <p>bq. Additionally, the plug-in architecture has the idea that the Request and Response objects are set on the plugin, yet you also pass the Request object in many of the plugin calls, isn't this an unnecessary duplication?</p>

<p>The plugin broker, which implements the plugin interface has the request and response object set in it once dispatch() begins. However, since plugins may be registered with the plugin broker at any point, including prior to routing and dispatching starting as well as after, it doesn't make sense to register the request and response objects with the individual plugins -- thus the objects are passed to the calls.</p>

<p>I'll update the interface to reflect the latter.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2007-01-15T06:57:52.000+0000</p> 
        <div class="body">
            <p>All type hinting corrected in revision 2767</p>

        </div>
    </div>
    </div>

