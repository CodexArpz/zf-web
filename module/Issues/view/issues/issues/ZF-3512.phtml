<h2>ZF-3512: Improper handling of unsigned int values in quote()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-06-25T13:48:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-06-08T05:27:04.000+0000</dd>

    <dt>Status:</dt>
    <dd>Reopened</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Andrew Ballard (aballard)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Adapter_Mysqli</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12738/ZF-3512-TESTS.patch">ZF-3512-TESTS.patch</a></li>
            <li><a href="/issues/secure/attachment/12730/ZF-3512.patch">ZF-3512.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The default quote() method of the parent class (Zend_Db_Adapter_Abstract) uses the following cast operations to ensure that the value is a valid 32-bit integer.</p>

<pre><code>            case Zend_Db::INT_TYPE: // 32-bit integer
                return (string) intval($value);
                break;
</code></pre>

<p>This works for signed integers, but for fields declared as UNSIGNED in MySQL, this turns valid values between 2147483648 and 4294967296 into '2147483647'.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-06T18:58:48.000+0000</p> 
        <div class="body">
            <p>I think a possible solution would be to add Zend_Db::UNSIGNED_TYPE type,
add
                case Zend_Db::UNSIGNED_TYPE: // Unsigned integer
                    $quotedValue = sprintf('%u', $value);
                    break;
to Zend_Db_Adapter_Abstract::quote()</p>

<p>and implement in all adapters.</p>

<p>Ralph if you want I can write a patch, i'm almost done with it, but time for bed now.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-09T19:10:19.000+0000</p> 
        <div class="body">
            <p>Here's a patch. Passes all current unit tests.</p>

<p>UNSIGNED_TYPE might not be the best name for the constant,
as this patch only implements integers as unsigned types. But would extending it
to other datatypes be necessary? Maybe for consequence and completeness sake...</p>

<p>Am I taking the right actions to take on bugs like this?
If not, someone please slap me ;)</p>

<p>If this is the right way and this patch is ok, I'll write tests for it tomorrow! 
Let me know :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-09T19:26:34.000+0000</p> 
        <div class="body">
            <p>I looked at the activity log and it didn't really look like anyone was working on this? So I took the liberty of assigning it to myself. Someone please review!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-14T19:07:26.000+0000</p> 
        <div class="body">
            <p>Tests</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-14T19:08:47.000+0000</p> 
        <div class="body">
            <p>Please review</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Holger Schletz (hschletz) on 2010-02-25T00:32:16.000+0000</p> 
        <div class="body">
            <p>Unsigned integers are not part of the SQL standard and not available on all DBMS. How will this patch affect compatibility with DBMS that don't support it, like PostgreSQL? Is it wise to implement it in their respective adapters?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mickael Perraud (mikaelkael) on 2010-02-25T07:37:02.000+0000</p> 
        <div class="body">
            <p>Why this issue is 'Fixed' as there is no associated SVN commit?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-25T12:09:45.000+0000</p> 
        <div class="body">
            <p>Sorry guys, I was confused with the workflow of my work when I put the status of this issue to Resolved.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-25T12:35:40.000+0000</p> 
        <div class="body">
            <p>Not committed into repo</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maghiel Dijksman (maghiel) on 2010-02-25T12:41:01.000+0000</p> 
        <div class="body">
            <p>Assigned to automatic, please review and commit attached patches</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2011-06-08T05:27:04.000+0000</p> 
        <div class="body">
            <p>The constant Zend_Db::UNSIGNED_TYPE is very confusing because UNSIGNED is an additional flag of 'all' numeric data types.
I think it would better to throw an exception if the value to quote has non numeric characters or how do you quote $db-&gt;quote('abc', Zend_Db::INT_TYPE);</p>

        </div>
    </div>
    </div>

