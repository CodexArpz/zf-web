<h2>ZF-8042: Bug with explodeDn function in Ldap.php</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-09T18:22:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-10T12:04:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chernigov Pavel (bpeg)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Stefan Gehrig (sgehrig)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Ldap</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Function Zend_Ldap::explodeDn() execute checkDn function and return boolean result.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Stefan Gehrig (sgehrig) on 2009-10-10T12:04:10.000+0000</p> 
        <div class="body">
            <p>This is not an issue. Zend_Ldap::explodeDn() is a backwards-compatibility method. It has been in Zend_Ldap from the very beginning.</p>

<p>During refactoring I moved DN-related functions to Zend_Ldap_Dn and named the method that checks if a given string is a vlid DN Zend_Ldap_Dn::checkDn(). As this is exactly the funtionality provided be the legacy  Zend_Ldap::explodeDn(), the latter only proxies to the former. Zend_Ldap::explodeDn() is just kept for backwards-compatibility but is marked "deprecated".</p>

        </div>
    </div>
    </div>

