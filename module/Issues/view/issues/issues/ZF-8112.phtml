<h2>ZF-8112: htmlspecialchars() expects parameter 1 to be string, array given</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-10-21T04:50:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-16T08:50:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.5 (27/Oct/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8113">ZF-8113</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Source File:    Zend\View\Abstract.php : 850
Function Name:  htmlspecialchars
Error String:   htmlspecialchars() expects parameter 1 to be string, array given<br />
Error Type: E_WARNING</p>

<p>Function Name: htmlspecialchars
Function Arguments:
  1. array ( 
    'isEmpty' =&gt; 'Value is required and can\'t be empty',
  )
  2. 2
  3. 'utf-8'</p>

<p>BackTrace:</p>

<p>htmlspecialchars()
Zend_View::escape() at Zend\View\Abstract.php : 850 
Zend_View::formErrors() at Zend\View\Helper\FormErrors.php : 80 
Zend_View_Helper_FormErrors::formErrors()
Zend_View::__call() at Zend\View\Abstract.php : 342 
Zend_View::render() at Zend\Form\Decorator\Errors.php : 60 
Zend_Form_Decorator_Errors::render() at Zend\Form.php : 2626 
Default_forms_UserForm::__toString() at Zend\Form.php : 2641</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2009-10-21T05:53:13.000+0000</p> 
        <div class="body">
            <p>Could you supply some code to reproduce this issue, or the use-case in which is was produced.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Krzysztof Szatanik (diabl0) on 2009-10-21T10:22:54.000+0000</p> 
        <div class="body">
            <pre><code>public function testAction() {

    $this-&gt;_helper-&gt;layout-&gt;disableLayout();
    $this-&gt;getFrontController()-&gt;setParam( 'noViewRenderer', true );

    $form = new Zend_Form ( );
    $form-&gt;addElement ( 'text', 'test', array (
          'required' =&gt; true, 
          'label' =&gt; 'Test' 
    ) );
    $form-&gt;addElement ( 'submit', 'submit', array (
          'label' =&gt; 'Submit' 
    ) );

    $form-&gt;setMethod ( 'post' );

    $form-&gt;addDecorator ( 'Errors', array( 'class' =&gt; 'my-errors') );

    if ($this-&gt;getRequest ()-&gt;isPost ()) {
        if ($form-&gt;isValid ( $this-&gt;getRequest ()-&gt;getPost () )) {
            echo 'ok';
        }
    }

    echo $form;
}
</code></pre>

<p>Submit empty form to trigger "required" error</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-10-21T10:51:04.000+0000</p> 
        <div class="body">
            <p>This duplicates the findings in ZF-4915, which is currently resolved in trunk and the 1.9 release branch; changes will be released in 1.9.5.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lars Gierth (lgierth) on 2009-11-16T08:17:20.000+0000</p> 
        <div class="body">
            <p>This is not being fixed in 1.9.5.</p>

<p>htmlspecialchars() is still failing in connection with the NotEmpty validator.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Lars Gierth (lgierth) on 2009-11-16T08:50:17.000+0000</p> 
        <div class="body">
            <p>This is the form I'm trying to use, I switched to Zend_Validate_StringLength instead of NotEmpty.</p>

<p>class Conference_Form_Site_Speaker_Register extends Zend_Form
{
    /**
     *
     * Conference_Form_Site_Speaker_Register::init
     *
     * @return void
     */
    public function init()
    {
        $this-&gt;setAttrib('id', 'form-speaker-register');</p>

<pre><code>    $surname = new Zend_Form_Element_Text(array(
        'name' =&gt; 'surname',
        'id' =&gt; 'form-speaker-register-surname',
        'label' =&gt; 'Surname',
        'class' =&gt; 'text'
    ));
    $surname-&gt;setRequired(true)
            -&gt;addValidator('stringLength', false, array(1));
    $this-&gt;addElement($surname);

    $forename = new Zend_Form_Element_Text(array(
        'name' =&gt; 'forename',
        'id' =&gt; 'form-speaker-register-forename',
        'label' =&gt; 'Forename',
        'class' =&gt; 'text'
    ));
    $forename-&gt;setRequired(true)
             -&gt;addValidator('stringLength', false, array(1));
    $this-&gt;addElement($forename);

    $company = new Zend_Form_Element_Text(array(
        'name' =&gt; 'company',
        'id' =&gt; 'form-speaker-register-company',
        'label' =&gt; 'Company',
        'class' =&gt; 'text'
    ));
    $company-&gt;setRequired(true)
            -&gt;addValidator('stringLength', false, array(1));
    $this-&gt;addElement($company);

    $email = new Zend_Form_Element_Text(array(
        'name' =&gt; 'email',
        'id' =&gt; 'form-speaker-register-email',
        'label' =&gt; 'E-mail address',
        'class' =&gt; 'text'
    ));
    $email-&gt;setRequired(true)
          -&gt;addValidator('EmailAddress');
    $this-&gt;addElement($email);

    $website = new Zend_Form_Element_Text(array(
        'name' =&gt; 'website',
        'id' =&gt; 'form-speaker-register-website',
        'label' =&gt; 'Website',
        'class' =&gt; 'text'
    ));
    $website-&gt;setRequired(true)
            -&gt;setAllowEmpty(true);
    $this-&gt;addElement($website);

    $password = new Zend_Form_Element_Password(array(
        'name' =&gt; 'password',
        'id' =&gt; 'form-speaker-register-password',
        'label' =&gt; 'Password',
        'class' =&gt; 'text'
    ));
    $password-&gt;setRequired(true)
             -&gt;addValidator('stringLength', false, array(5));
    $this-&gt;addElement($password);

    $picture = new Zend_Form_Element_File(array(
        'name' =&gt; 'picture',
        'id' =&gt; 'form-speaker-register-picture',
        'label' =&gt; 'Picture',
        'class' =&gt; 'picture'
    ));
    $picture-&gt;setRequired(true);
    $this-&gt;addElement($picture);

    $abstract = new Zend_Form_Element_Textarea(array(
        'name' =&gt; 'abstract',
        'id' =&gt; 'form-speaker-register-abstract',
        'label' =&gt; 'Abstract',
        'class' =&gt; 'text_area'
    ));
    $abstract-&gt;setRequired(true)
             -&gt;setAllowEmpty(true);
    $this-&gt;addElement($abstract);

    $this-&gt;addElement('submit', 'submit', array(
        'id' =&gt; 'form-speaker-register-submit',
        'class' =&gt; 'submit'
    ));
}

public function __toString()
{
    $this-&gt;setDecorators(array(
        'Errors',
        'FormElements',
        'Form',
    ));

    return parent::__toString();
}
</code></pre>

<p>}</p>

        </div>
    </div>
    </div>

