<h2>ZF2-66: Error in the class Zend\Db\Table\AbstractTable in the method getReference().</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-09-08T09:31:35.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-22T09:02:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nilov Andrey (nilov)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabio B. Silva (fabio.bat.silva)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Db</li>
            <li>AbstractTable</li>
            <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Error in the class Zend\Db\Table\AbstractTable in the method getReference(). On line 468 there is no processing of the table class name (do not add a slash at the beginning), which is why there is a difference between "get_class($this)" and "$tableClassname" and resulting in the table class name is not in the "$_referenceMap" and throws exception: "Reference rule \" $ ruleKey \ "does not reference table $ tableClassname".</p>

<p>Solution:
Make the processing of the variable $tableClassname at the beginning of the method.</p>

<pre class="highlight"><code>
    /**
     * @param string $tableClassname
     * @param string $ruleKey OPTIONAL
     * @return array
     * @throws \Zend\Db\Table\Exception
     */
    public function getReference($tableClassname, $ruleKey = null)
    {
        $tableClassname = '\\' . ltrim($tableClassname, '\\');
        $thisClass = get_class($this);
        if ($thisClass === 'Zend\Db\Table\Table') {
            $thisClass = $this-&gt;_definitionConfigName;
        }
        $refMap = $this-&gt;_getReferenceMapNormalized();
        if ($ruleKey !== null) {
            if (!isset($refMap[$ruleKey])) {
                throw new Exception("No reference rule \"$ruleKey\" from table $thisClass to table $tableClassname");
            }
            if ($refMap[$ruleKey][self::REF_TABLE_CLASS] != $tableClassname) {
                throw new Exception("Reference rule \"$ruleKey\" does not reference table $tableClassname");
            }
            return $refMap[$ruleKey];
        }
        foreach ($refMap as $reference) {
            if ($reference[self::REF_TABLE_CLASS] == $tableClassname) {
                return $reference;
            }
        }
        throw new Exception("No reference from table $thisClass to table $tableClassname");
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Nilov Andrey (nilov) on 2011-09-08T13:18:34.000+0000</p> 
        <div class="body">
            <p>Solution:</p>

<pre class="highlight"><code>
    /**
     * @param string $tableClassname
     * @param string $ruleKey OPTIONAL
     * @return array
     * @throws \Zend\Db\Table\Exception
     */
    public function getReference($tableClassname, $ruleKey = null)
    {
        $tableClassname = '\\' . ltrim($tableClassname, '\\');
        $thisClass = get_class($this);
        if ($thisClass === 'Zend\Db\Table\Table') {
            $thisClass = $this-&gt;_definitionConfigName;
        }
        $refMap = $this-&gt;_getReferenceMapNormalized();
        if ($ruleKey !== null) {
            if (!isset($refMap[$ruleKey])) {
                throw new Exception("No reference rule \"$ruleKey\" from table $thisClass to table $tableClassname");
            }
            if ($refMap[$ruleKey][self::REF_TABLE_CLASS] != $tableClassname) {
                throw new Exception("Reference rule \"$ruleKey\" does not reference table $tableClassname");
            }
            return $refMap[$ruleKey];
        }
        foreach ($refMap as $reference) {
            if ($reference[self::REF_TABLE_CLASS] == $tableClassname) {
                return $reference;
            }
        }
        throw new Exception("No reference from table $thisClass to table $tableClassname");
    }

</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benoît Durand (intiilapa) on 2011-09-11T06:11:01.000+0000</p> 
        <div class="body">
            <p>Add code tags.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabio B. Silva (fabio.bat.silva) on 2011-11-21T19:59:17.000+0000</p> 
        <div class="body">
            <p>Fixed : <a href="https://github.com/zendframework/zf2/pull/619">https://github.com/zendframework/zf2/pull/619</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2011-11-22T09:02:42.000+0000</p> 
        <div class="body">
            <p>I would not worry with fix of issues Zend\Db because this go be refactoring in version 2 still ;).
<a href="http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Zend+Db">http://framework.zend.com/wiki/display/…</a>.
<a href="https://github.com/ralphschindler/zf2-db">https://github.com/ralphschindler/zf2-db</a>.</p>

        </div>
    </div>
    </div>

