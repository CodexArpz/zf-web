<h2>ZF-1728: 'findParentRow( )' will not work with some '_referenceMap' arrays</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-07-16T22:24:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-01-23T18:44:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.2 (25/Sep/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Paulo Nei (paulonei)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If the '_referenceMap' array in table definition have omited the key 'refColumns' or have defined the array element without another array (with a string literal), the method findParentRow( ) in the row class will not work (will throw: "Fatal error: Uncaught exception 'Zend_Db_Statement_Exception' with message 'SQLSTATE[42S22]: Column not found: 1054 Unknown column '' in 'where clause'' in ... " )</p>

<p>Some code to reproduce it:</p>

<pre class="highlight"><code>
// Class definitions
class DependentTable extends Zend_Db_Table
{
    protected $_name = 'DependentTable';
   
    protected $_referenceMap  = array(
        'SomeRule' =&gt; array(
            'columns'           =&gt; 'idRefTable',
            'refTableClass'     =&gt; 'RefTable',
        // OMITED: 'refColumns'        =&gt; array('id') 
           // DECLARED WITHOUT ARRAY (not always a problem):    'refColumns'        =&gt; 'id' 
        ) );

}

class RefTable extends Zend_Db_Table
{
    protected $_name = 'RefTable';
    protected $_dependentTables = array('DependentTable');
}

// Error code:
    $dependentTable = new DependentTable();
    $dependentRow = $dependentTable-&gt;createRow();
    $dependentRow-&gt;idRefTable = 1;
    $refRow = $dependentRow-&gt;findParentRow( 'RefTable');
    
    Zend_Debug::dump($refRow);

// SQL:

create table RefTable
(
id int unsigned not null auto_increment primary key
);

create table DependentTable
(
id int unsigned not null auto_increment primary key,
idRefTable int unsigned not null REFERENCES RefTable(id)
);

insert into RefTable values();

insert into DependentTable values(null, 1);


</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-17T13:54:18.000+0000</p> 
        <div class="body">
            <p>Assign to Bill Karwin.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-07-31T17:51:01.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 5943.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-01-23T18:44:43.000+0000</p> 
        <div class="body">
            <p>Updating Fix Version to follow issue tracker convention.</p>

        </div>
    </div>
    </div>

