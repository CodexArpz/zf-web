<h2>ZF-8905: Zend_Db_Table_Select::from() $name Argument Support Zend_Db_Table_Abstract and Array Together</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-22T09:45:23.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, Zend_Db_Table_Select::from()'s $name argument allows either (but not limited to):
* A Zend_Db_Table_Abstract instance, which is useful in that the programming doesn't need to know the DB object's name.
* An array, which allows table aliases to be used in join() $cond, and other related.</p>

<p>Unfortunately, these aren't supported together.  Ideally, code should be able to be written like this:</p>

<pre class="highlight"><code>
class Table1 extends Zend_Db_Table_Abstract { /*Table1 Defined*/ }
class Table2 extends Zend_Db_Table_Abstract { /*Table2 Defined*/ }

$db = Zend_Db::factory();

$table1 = new Table1($db);
$table2 = new Table2($db);

$select = $table1
    -&gt;select()
    -&gt;from(array('t1'=&gt;$table1))
    -&gt;joinInner(array('t2'=&gt;$table2), 't1.pk = t2.fk', array())
    -&gt;where('t2.foo = ?', "bar")
;
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by twk (twk) on 2010-09-25T09:24:05.000+0000</p> 
        <div class="body">
            <p>Supporting parameters like array('t1'=&gt;$table1) would be useful.
To support this (and current supporting types), code beginning at line 769 should be like following. (based on logic in Zend_Db_Select::from(), which might be removed if you do this)</p>

<pre class="highlight"><code>
$correlationName = null;
if (is_array($name)) {
    // Must be array($correlationName =&gt; $tableName) or array($ident, ...)
    foreach ($name as $_correlationName =&gt; $_tableName) {
        $name = $_tableName;
        if (is_string($_correlationName)) {
            $correlationName = $_correlationName;
        }
        break;
    }
}

if (empty($name)) {
    $correlationName = $tableName = '';
} else if ($name instanceof Zend_Db_Table_Abstract) {
    $info = $name-&gt;info();
    $tableName = $info[Zend_Db_Table_Abstract::NAME];
    if ($schema === null &amp;&amp; isset($info[Zend_Db_Table_Abstract::SCHEMA])) {
        $schema = $info[Zend_Db_Table_Abstract::SCHEMA];
    }
    if ($correlationName === null) {
        $correlationName = $this-&gt;_uniqueCorrelation($tableName);
    }
} else if ($name instanceof Zend_Db_Expr|| $name instanceof Zend_Db_Select) {
    $tableName = $name;
    if ($correlationName === null) {
        $correlationName = $this-&gt;_uniqueCorrelation('t');
    }
} else if (preg_match('/^(.+)\s+AS\s+(.+)$/i', $name, $m)) {
    $tableName = $m[1];
    if ($correlationName === null) {
        $correlationName = $m[2];
    }
} else {
    $tableName = $name;
    if ($correlationName === null) {
        $correlationName = $this-&gt;_uniqueCorrelation($tableName);
    }
}
</code></pre>

        </div>
    </div>
    </div>

