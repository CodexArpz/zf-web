<h2>ZF-10314: Relations autodiscover</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-08-14T01:17:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-08-21T12:20:02.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Cristian Bichis (avantis)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello,</p>

<p>I am wondering if won't be a good addon to Zend_Db_Table to have relations auto-discover from metadata.</p>

<p>By example in case of InnoDb tables i find redundant to add the relationships both on tables and on Zend_Db_Table...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2010-08-21T12:20:02.000+0000</p> 
        <div class="body">
            <p>This is something I've researched in the past.  I am gonna close this b/c it is no small undertaking.  Something like this would either need to be discussed as a solution for 2.0, or a full proposal submitted for.</p>

<p>The problem, in short, is that even if you have relations that are formed in databases that support FK constraints, the FK itself does not give a developer any context.  As for an example, think about how junction tables are used in 1-1, 1-M, and M-M relationships and how many FK's are required to build each conceptual relationship.</p>

<p>I'd be interested to hear your ideas after the 2.0 Zend\Db adapter becomes more stable.</p>

<p>-ralph</p>

        </div>
    </div>
    </div>

