<h2>ZF-7239: Zend_Translate does not work if both caching and the array adapter are used</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-07-10T05:18:14.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-10T06:49:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If using Zend_Translate, the Zend_Translate_Adapter_Array and caching enabled, only the first translation is actually loaded and used:</p>

<p>Zend_Translate::setCache(...);</p>

<p>$translate = new Zend_Translate('array',
  array("hello" =&gt; "Hello"),
  "en"
);</p>

<p>$translate-&gt;addTranslation(
  array("hello" =&gt; "Howdy"),
  "en_US"
);</p>

<p>$translate-&gt;setLocale("en_US");
echo $translate-&gt;_("hello"); // BROKEN, produces "No translation for the language 'en_US' available." error</p>

<p>$translate-&gt;setLocale("en");
echo $translate-&gt;_("hello"); // WORKS, outputs "Hello"</p>

<p>$translate-&gt;setLocale("en_AU");
echo $translate-&gt;_("hello"); // WORKS, outputs "Hello"</p>

<p>This happens because Zend_Translate-&gt;_addTranslationData generates cache keys using the following expression:</p>

<p>'Zend_Translate_' . preg_replace('/[^a-zA-Z0-9_]/', '<em>', $data) . '</em>' . $this-&gt;toString()</p>

<p>This generates identical keys in the case of the array adapter, because in this case $data is an array.  (The other adapters generally provide filenames as $data, which are unique, so this isn't a problem for them.)</p>

<p>One fix is to use md5(json_encode($data)) in place of preg_replace(...) in the event that $data is an array.</p>

<p>(I realise that there's very little point in using cache and the array adapter at the same time, but the framework I'm using does Zend_Translate::setCache(...) before my code runs.  In my case the "fix" is to do Zend_Translate::removeCache().)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-07-10T06:14:45.000+0000</p> 
        <div class="body">
            <p>Duplicate of already fixed issue. Look into trunk and incubator for a fixed version.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Stillwell (mjs) on 2009-07-10T06:35:17.000+0000</p> 
        <div class="body">
            <p>Thanks.  Though it looks like the fix has only made it to incubator only for what it's worth--?  For future reference, the change to incubator appeared in r16247.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-07-10T06:49:17.000+0000</p> 
        <div class="body">
            <p>ZF-2400/r16247 is actually blocking all commits for Zend_Translate.</p>

<p>This new feature changes how things work internally and adds plural support. About 8 issues are fixed within this version.</p>

<p>But it is under code review since 1.May and not accepted for now. We still have to wait until it's accepted.</p>

        </div>
    </div>
    </div>

