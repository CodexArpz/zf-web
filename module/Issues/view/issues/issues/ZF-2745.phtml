<h2>ZF-2745: Add ViewRenderer inflection awareness to Zend_View</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-02-27T22:04:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-29T20:40:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently, there are two different conventions for resolving view scripts:</p>

<ul><li>With the ViewRenderer, the action alone is enough for resolving most view scripts; in fact, unless you call out to special methods of the ViewRenderer such as renderScript(), you never need to consider the controller directory or view suffix.</li>
<li>Inside the view script itself, however, you need to be aware of the controller directory and view suffix, as well as where other view scripts and partials reside within the view script paths.</li>
</ul><p>We should add functionality to Zend_View to allow view script resolution using the ViewRenderer or separate this coupling into a separate class that both the ViewRenderer and Zend_View could utilize. This could be on by default, unless no controller directories are found in Zend_Controller_Front (or unless the developer has disabled such functionality).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Arthur Kang (arthurkang) on 2008-02-28T01:31:33.000+0000</p> 
        <div class="body">
            <p>Two things I think could be useful when addressing this:</p>

<h1>Optionally, be able to <em>not</em> use script resolution and access methods similar to renderScript() if you want to include specific views.</h1>

<h1>Add the directory of the calling file to the include path so subsequent nested calls don't have to specify the entire path again.  For example, in a view, if we do $this-&gt;render('../../some/far/off/place/outside/include/path/testfile.suf') and in testfile.suf, we do a $this-&gt;render('test2.phtml') where test2.phtml is located in the ../../some/far/off/place/outside/include/path/ directory.  Basically, if we could add that directory to the include path and continue to use the new script resolution, that would be great.  So, we could use $this-&gt;render('test2') in testfile.suf and it would work.  Maybe in render method of Zend_View/Abstract or maybe in _run method of Zend_View.  Anyways, in one of those final methods for rendering, you could push the include path to include dirname($script).</h1>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:33:29.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:56.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-04-22T10:35:35.000+0000</p> 
        <div class="body">
            <p>Updating project management info.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-24T12:54:08.000+0000</p> 
        <div class="body">
            <p>This should actually be done in a helper, not within Zend_View itself. Doing it in a helper allows Zend_View to maintain minimal dependencies, and helpers are the appropriate place to provide coupling to other components.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-24T12:54:32.000+0000</p> 
        <div class="body">
            <p>This needs a full proposal before development.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:22:39.000+0000</p> 
        <div class="body">
            <p>If you need ViewRenderer awareness inside your view script, why now just use Zend_Controller_Action_HelperBroker::getStaticHelper('ViewRenderer') to retrieve it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-29T15:26:16.000+0000</p> 
        <div class="body">
            <p>Can this issue be closed as "Wont' Fix"?  AFAIK, there are no plans to implement this in 1.12, and Ralph has provided a possible workaround (though providing a convenience view helper would make things cleaner)</p>

        </div>
    </div>
    </div>

