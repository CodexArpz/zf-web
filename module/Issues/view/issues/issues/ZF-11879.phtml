<h2>ZF-11879: Zend_Locale_Format precision incorrect</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-11-09T18:35:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-11-09T20:51:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Eric Hokanson (pceric)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In Zend_Locale_Format the precision option seems to be broken for some locales.  Here is an example in German:</p>

<p>echo Zend_Locale_Format::toNumber(53.3333333333333333333) returns 53,3333333333333333333</p>

<p>which is correct but</p>

<p>echo Zend_Locale_Format::toNumber(53.3333333333333333333, array('precision' =&gt; 1)) returns 533.333.333.333.330,0</p>

<p>which isn't even close.</p>

<p>This is seen on PHP 5.3.8 with BCMath enabled and ZF 1.11.11.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Eric Hokanson (pceric) on 2011-11-09T19:10:20.000+0000</p> 
        <div class="body">
            <p>Drilling down a bit further it appears to be an interaction between PHP's setlocale() and ZF.  Since we are in the process of migrating code from one to the other we are currently making use of both.  It looks as if Zend_Locale_Format should be made aware of setlocale()'s settings.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Eric Hokanson (pceric) on 2011-11-09T20:18:59.000+0000</p> 
        <div class="body">
            <p>After some team debugging the issue is the overuse of Zend_Locale_Math::normalize in toNumber.  The first use is fine and handles the setlocale() case but then it is called over and over during the execution of toNumber.  After the first call it strips the wrong decimal_point/thousands_sep and butchers the number resulting in the wrong output.</p>

        </div>
    </div>
    </div>

