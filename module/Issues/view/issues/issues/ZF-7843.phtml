<h2>ZF-7843: Zend_Validate_NotEmpty and null values</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-14T01:48:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-15T10:12:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.3 (22/Sep/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Since ZF 1.9.0 when you  try to validate a null value with Zend_Validate_NotEmpty you get the INVALID error message instead of the IS_EMPTY error message.</p>

<p>If you try:</p>

<pre class="literal">
$value     = null;
$validator = new Zend_Validate_NotEmpty();

Zend_Debug::dump($validator-&gt;isValid($value));
Zend_Debug::dump($validator-&gt;getErrors());
Zend_Debug::dump($validator-&gt;getMessages());
</pre>

<p>since ZF 1.9.0 it results in:</p>

<pre class="literal">
bool(false)

array(1) {
 [0] =&gt; string(15) "notEmptyInvalid"
}

array(1) {
 ["notEmptyInvalid"] =&gt; string(76) "Invalid type given, value should be float, string, array, boolean or integer"
}
</pre>

<p>before ZF 1.9.0 it would result in:</p>

<pre class="literal">
bool(false)

array(1) {
 [0] =&gt; string(7) "isEmpty"
}

array(1) {
 ["isEmpty"] =&gt; string(36) "Value is required and can't be empty"
}
</pre>

<p>I believe the expected behavior is to get the IS_EMPTY and not the INVALID error type.</p>

<p>A fix for this would be to check that the value is not null before checking its type (in Zend/Validate/NotEmpty.php on line 56)</p>

<pre class="literal">
if (null !== $value &amp;&amp; !is_string($value) &amp;&amp; !is_int($value) &amp;&amp; !is_float($value) &amp;&amp; !is_bool($value) &amp;&amp;
    !is_array($value)) {
    $this-&gt;_error(self::INVALID);
    return false;
} 
</pre>

<p>This issue might be related to #ZF-7631</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-14T11:09:45.000+0000</p> 
        <div class="body">
            <p>No it's not dependend...
Validating objects does not make sense as objects are ALWAYS filled and can not be empty.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-14T11:11:30.000+0000</p> 
        <div class="body">
            <p>Tested with next mini release.
Unable to reproduce. Probably already fixed in past.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Carpentier (hurkyl) on 2009-09-15T02:31:37.000+0000</p> 
        <div class="body">
            <p>I just checked and you're right, it has been fixed in <a href="http://framework.zend.com/code/browse/Standard_Library/standard/trunk/library/Zend/Validate/NotEmpty.php?r=18092">r18092</a></p>

<p>Right between when I posted the issue and last time I checked the repository.</p>

<p>Thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-15T10:12:20.000+0000</p> 
        <div class="body">
            <p>No problem... it's fixed, and that's all what counts ;-)</p>

        </div>
    </div>
    </div>

