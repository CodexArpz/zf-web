<h2>ZF-839: Notices in Zend_Db_Adapter_Pdo_Mysql::describeTable()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-02-01T01:58:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I think, this patch will help</p>

<pre class="highlight"><code>
Index: library/Zend/Db/Adapter/Pdo/Mysql.php
===================================================================
--- library/Zend/Db/Adapter/Pdo/Mysql.php   (revision 3131)
+++ library/Zend/Db/Adapter/Pdo/Mysql.php   (working copy)
@@ -87,17 +87,31 @@
      */
     public function describeTable($tableName, $schemaName = null)
     {
-        $sql = "DESCRIBE $tableName";
+       // row defaults
+           $row_defaults = array(
+               'length'    =&gt; null,
+               'precision' =&gt; null,
+               'scale'     =&gt; null,
+           );
+
+           $sql = "DESCRIBE $tableName";
         $result = $this-&gt;fetchAll($sql);
         $desc = array();
         foreach ($result as $key =&gt; $row) {
-            if (preg_match('/^((?:var)?char)\((\d+)\)/', $row['type'], $matches)) {
+        
+           // set defaults to row
+           $row = array_merge($row_defaults, $row);
+               
+           if (preg_match('/^((?:var)?char)\((\d+)\)/', $row['type'], $matches)) {
                 $row['type'] = $matches[1];
                 $row['length'] = $matches[2];
             } else if (preg_match('/^decimal\((\d+),(\d+)\)/', $row['type'], $matches)) {
                 $row['type'] = 'decimal';
                 $row['precision'] = $matches[1];
                 $row['scale'] = $matches[2];
+            } else if (preg_match('/^((?:big|medium|small)?int)\((\d+)\)/', $row['type'], $matches)) {
+                $row['type'] = $matches[1];
+                $row['precision'] = $matches[2];
             }
             $desc[$row['field']] = array(
                 'SCHEMA_NAME' =&gt; null,
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Sergey Belov (arikon) on 2007-02-01T02:12:45.000+0000</p> 
        <div class="body">
            <p>Sorry, I forgot. There must be additional 'UNSIGNED ' flag in</p>

<pre class="highlight"><code>
It is actual for some data type, like INT (SMALLINT, MEDUIMINT, BIGINT, INT) and DOUBLE types. May be for more types.

I think it can be done like this:
</code></pre>

<h1>Index: library/Zend/Db/Adapter/Pdo/Mysql.php</h1>

<p>--- library/Zend/Db/Adapter/Pdo/Mysql.php   (revision 3131)
+++ library/Zend/Db/Adapter/Pdo/Mysql.php   (working copy)
@@ -87,10 +87,26 @@
      */
     public function describeTable($tableName, $schemaName = null)
     {
-        $sql = "DESCRIBE $tableName";
+       // row defaults
+           $row_defaults = array(
+               'length'    =&gt; null,
+               'precision' =&gt; null,
+               'scale'     =&gt; null,
+               'unsigned'  =&gt; null,
+           );
+
+           $sql = "DESCRIBE $tableName";
         $result = $this-&gt;fetchAll($sql);
         $desc = array();
         foreach ($result as $key =&gt; $row) {
+<br />
+           // set defaults to row
+           $row = array_merge($row_defaults, $row);
+
+            if (preg_match('/((?:unsigned))/', $row['type'], $matches)) {
+                $row['unsigned'] = (bool) (strtoupper($matches[1]) == 'UNSIGNED');
+            }
+
             if (preg_match('/^((?:var)?char)((\d+))/', $row['type'], $matches)) {
                 $row['type'] = $matches[1];
                 $row['length'] = $matches[2];
@@ -98,7 +114,11 @@
                 $row['type'] = 'decimal';
                 $row['precision'] = $matches[1];
                 $row['scale'] = $matches[2];
+            } else if (preg_match('/^((?:big|medium|small)?int)((\d+))/', $row['type'], $matches)) {
+               $row['type'] = $matches[1];
+                $row['precision'] = $matches[2];
             }
+
             $desc[$row['field']] = array(
                 'SCHEMA_NAME' =&gt; null,
                 'TABLE_NAME'  =&gt; $tableName,
@@ -109,6 +129,7 @@
                 'LENGTH'      =&gt; $row['length'],
                 'PRECISION'   =&gt; $row['precision'],
                 'SCALE'       =&gt; $row['scale'],
+                'UNSIGNED'    =&gt; $row['unsigned'],
                 'PRIMARY'     =&gt; (bool) (strtoupper($row['key']) == 'PRI')
             );
         }
```</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-02T12:59:30.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 3152.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Sergey Belov (arikon) on 2007-02-02T14:59:09.000+0000</p> 
        <div class="body">
            <p>Thanks a lot!
I understand your comment about "size" of INT types. Useful information, I dint't know about that.</p>

        </div>
    </div>
    </div>

