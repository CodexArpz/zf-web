<h2>ZF-35: ZF Version check (TRAC#22)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-06-19T23:02:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.7.0 (18/Jan/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Zend Framework (zend_framework)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><a href="http://framework.zend.com/developer/ticket/22">http://framework.zend.com/developer/ticket/22</a></p>

<p>sometimes it is a must to check, what ZF version is running, where your applications shares one ZF installation ..</p>

<p>it would be nice, to have a method, where you can check the installed ZF version against a required version,</p>

<p>e.g. if ZendVersion::check("0.3.15") then output "need at least ZF 0.3.15" -- die();</p>

<pre class="highlight"><code>
    class ZendVersion
    {
        static $version = "0.1.13";
        function check($version, $strict = false)
        {
            list($main, $major, $minor) = explode(".", $version);
            list($zf_main, $zf_major, $zf_minor) = explode(".", ZendVersion::$version);
            if (!$strict) {
                return ($minor*10+$major*1000+$main*10000) &lt;= ($zf_minor*10+$zf_major*1000+$zf_main*10000); 
            } else {
                return ($minor*10+$major*1000+$main*10000) == ($zf_minor*10+$zf_major*1000+$zf_main*10000);
            }
        }
    }

</code></pre>

<p>simple test</p>

<pre class="highlight"><code>
    $tests = array();
    $tests["0.1.12"] = true;
    $tests["0.1.13"] = true;
    $tests["0.1.14"] = false;
    $tests["1.1.14"] = false;
    echo "ZF version " . ZendVersion::$version . "\n";
    foreach ($tests as $key=&gt;$value)
    {
        echo "checking for '" . $key . "' ";
        if ($value == true)
        {
            echo "true .. ? ";
        } else
        {
            echo "false .. ? ";
        }
        if ($value == ZendVersion::check($key))
        {
            echo "OK";
        } else
        {
            echo "FAILED";
        }
        echo "\n";
    }
</code></pre>

<p>test output</p>

<pre class="highlight"><code>
ZF version 0.1.13
checking for '0.1.12' true .. ? OK
checking for '0.1.13' true .. ? OK
checking for '0.1.14' false .. ? OK
checking for '1.1.14' false .. ? OK
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:13:46.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-16T13:29:22.000+0000</p> 
        <div class="body">
            <p>Here are some thoughts:</p>

<ul><li>This class should be Zend_Version; the file Version.php should live under the Zend directory.</li>
<li>This class should be final; there is no reason to subclass it.</li>
<li>check() method should not assume version strings are in NN.NN.NN format.  It's possible that version strings may be more complex.  I suggest splitting on any non-alphanumeric character into an array, not three scalars.</li>
<li>Need method isEqual($version, $strict = false)</li>
<li>Need method isGreaterThan($version)</li>
<li>Need method isLessThan($version)</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-16T13:31:00.000+0000</p> 
        <div class="body">
            <p>Reformat code in description to be less wide.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-01-17T15:40:31.000+0000</p> 
        <div class="body">
            <p>Hmmm .. I have a different, simpler approach, requiring less code.
If anyone objects, please let me know asap.
See the Fisheye link for the changeset and patch.</p>

        </div>
    </div>
    </div>

