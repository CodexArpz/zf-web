<h2>ZF-4441: Zend_Db_Select::union doesn't implement Zend_Db_Select and string as noted in docblock</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-10-01T10:31:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-17T14:09:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Select</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The docblock says that you can use a string, array, or Zend_Db_Select object as the first parameter with union, but the code does this right away:</p>

<pre class="highlight"><code>
        if (!is_array($select)) {
            $select = array();
        }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-11-25T14:57:54.000+0000</p> 
        <div class="body">
            <p>Do you have any potential use cases for an api that would support both string and Zend_Db_Select?</p>

<p>-ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by C Snover (snover) on 2008-11-30T12:36:00.000+0000</p> 
        <div class="body">
            <p>Initially I had been trying to use a Zend_Db_Select object, actually. I was expecting to be able to do something similar to</p>

<pre class="highlight"><code>
$union = $factoryB-&gt;select()-&gt;join('related', 'related.related_id = object.object_id', array())
                            -&gt;where('related.related_id = ?')
                            -&gt;setIntegrityCheck(false);

$select = $factoryA-&gt;select()-&gt;join('related', 'related.related_id = object.object_id', array())
                             -&gt;where('related.related_id = ?')
                             -&gt;union($union)
                             -&gt;setIntegrityCheck(false);

return $factoryA-&gt;fetchAll($select);
</code></pre>

<p>This would be also a case where I might want to UNION a string that was custom-written for the second set of results. I didn't really expect that I need to have a fresh Zend_Db_Select object that gets called with UNION and an array.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-09-17T14:09:08.000+0000</p> 
        <div class="body">
            <p>Fixed as duplicate of ZF-4772</p>

        </div>
    </div>
    </div>

