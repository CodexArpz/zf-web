<h2>ZF-7350: Make Zend_Loader_PluginLoader to prefix agnostic (namespaces)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-07-22T06:31:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-04-26T07:39:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.2 (24/Feb/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-11330">ZF-11330</a></li>
            <li><a href="/issues/browse/ZF-7907">ZF-7907</a></li>
            <li><a href="/issues/browse/ZF-12173">ZF-12173</a></li>
            <li><a href="/issues/browse/ZF-9604">ZF-9604</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12792/zf-7350-2.patch">zf-7350-2.patch</a></li>
            <li><a href="/issues/secure/attachment/12793/zf-7350-3.patch">zf-7350-3.patch</a></li>
            <li><a href="/issues/secure/attachment/12095/zf-7350.patch">zf-7350.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Loader_PluginLoader appends '_' to the prefixes added to it, preventing the use of namespaces classes as plugins.
Making it prefix-agnostic allows it to load namespaced classes, by specification of a "My\View\Helper\" prefix.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2009-07-22T06:34:49.000+0000</p> 
        <div class="body">
            <p>Quick and dirty fix to allow the use of namespaced view helpers.
This works only because since view helpers cannot be in subfolders and the basename is directly appended to the path. For other classes path calculation could be wrong.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Rosato (ratius) on 2009-08-09T19:26:07.000+0000</p> 
        <div class="body">
            <p>The provided fix works well and does not seem to break the tests though that one must always append the \ at the end of the namespace prefix for exemple in resource loading in an ini file:</p>

<p>pluginPaths["My\Application\Resource\"] = "My/Application/Resource"</p>

<p>To optionnally provide the ending backslash strstr($prefix, '\') could be used but then again non subnamespaces would fail at that using</p>

<p>$pluginLoader-&gt;addPrefixPath('My', 'Path/To/My'); //My is a namespace</p>

<p>still the only quick solution remain but an end backslash must be provided.</p>

<p>$pluginLoader-&gt;addPrefixPath('My\', 'Path/To/My'); //My is a namespace</p>

<p>Don't know your thoughts on that maybe Giorgio's solution may prove the only one not breaking anything.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Rosato (ratius) on 2009-08-09T19:29:28.000+0000</p> 
        <div class="body">
            <p>Edit (correction): though that one must always append the "\ \"</p>

<p>[second code snippet]:</p>

<p>and $pluginLoader-&gt;addPrefixPath('My\ \', 'Path/To/My'); //My is a namespace</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andy Thompson (at465) on 2010-02-07T11:46:58.000+0000</p> 
        <div class="body">
            <p>I also came across this issue as I'm starting to write my applications using proper namespaces. I tackled the issue using the same method. I can't see it having any problems considering \ has never been used as a class name character, and looking at the end character seems the most logical way to do this.</p>

<p>Since Zend_Loader has been modified to support PHP 5.3 namespaces in 1.10, I was hoping this could be implemented as a minor release?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Steven Rosato (ratius) on 2010-02-08T11:20:44.000+0000</p> 
        <div class="body">
            <p>I'm still watching and hoping for this as it is my only patch that I need to apply each time Zend upgrades. It does not break unit tests and I, too, think it should be implemented in a minor release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2010-02-23T07:55:24.000+0000</p> 
        <div class="body">
            <p>Updated patch for Zend Framework 1.10.1; hope this will be integrated soon.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-02-23T09:24:53.000+0000</p> 
        <div class="body">
            <p>Giorgio -- any chance I can get a unit test from you as well?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Giorgio Sironi (giorgiosironi) on 2010-02-23T11:21:27.000+0000</p> 
        <div class="body">
            <p>zf-7350-3: patch to use against /trunk with unit test added to PluginLoaderTest and necessary changes to Zend_Loader_PluginLoader. It incorporates the previous ones.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-02-23T11:50:44.000+0000</p> 
        <div class="body">
            <p>Patch applied to trunk and 1.10 release branch. Modified slightly to add a conditional to skip the test when PHP version is &lt; 5.3.0.</p>

        </div>
    </div>
    </div>

