<h2>ZF-5026: CLONE -Zend_Loader improperly tries to load class &quot;parent&quot;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-22T10:13:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-08T00:30:17.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><a href="http://framework.zend.com/issues/browse/ZF-4781">http://framework.zend.com/issues/browse/ZF-4781</a></p>

<p>I think you misunderstand. The only way to call the parent class in that case (without eval because the arguments are variable) is to use the call_user_func_array function in the fashion I mentioned. However, Zend::Loader improperly tries to load a class named "parent" in the process.  REGARDLESS of the Zend::Loader call, the parent::find() function WORKS and calls the parent as it should.</p>

<p>Warning: Zend_Loader::include_once(parent.php): failed to open stream: No such file or directory in \Zend\Loader.php on line 83
Warning: Zend_Loader::include_once(): Failed opening 'parent.php' for inclusion (include_path='.;C:\inetpub\PHP\5.2.6\pear;C:\Inetpub\PHP\5.2.6\PEAR\') in \Zend\Loader.php on line 83</p>

<p>Example class:</p>

<p>class MyTable extends Zend_Db_Table_Abstract {
    public function find()
    {
        $args = func_get_args();
        $r = call_user_func_array( array( $this, 'parent::find' ), $args );
        return $r-&gt;current();
    }
}</p>

<p>However, the call does not fail and the result is returned properly from the parent "find" function.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-22T10:57:46.000+0000</p> 
        <div class="body">
            <p>Again, the issue is a PHP one. PHP is seeing "parent" and thinking it needs to load a class -- and, since you have autoloading on, it attempts to do so. The warning you see is a normal one that should occur when the file it's looking for does not exist.</p>

<p>Meanwhile, PHP then merrily dereferences parent to the appropriate object.</p>

<p>This is behavior that needs to be corrected at the PHP level, not the framework level.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-22T10:58:01.000+0000</p> 
        <div class="body">
            <p>Upstream issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Sharpe (andrewsharpe79) on 2009-11-07T23:51:13.000+0000</p> 
        <div class="body">
            <p>While the issue may be upstream it would be useful to provide a workaround that we can use in the meantime.  The OP says that the call succeeds but I'm having trouble with this in a PHPUnit environment when Zend_Loader fails to include the file, causing an error in my test.</p>

<p>I cannot find a way to override find and have parent::find called successfully in a testing environment, any pointers appreciated (even RTFM with a reference to the M!).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Andrew Sharpe (andrewsharpe79) on 2009-11-08T00:30:17.000+0000</p> 
        <div class="body">
            <p>Workaround: use '@' to suppress warnings</p>

<p>$args = func_get_args();
@call_user_func_array(array($this, 'parent::find'), $args);</p>

        </div>
    </div>
    </div>

