<h2>ZF-180: Zend_Db_Table_Row: __get function maps incorrectly to _data</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-07-01T05:16:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I am unsure whether this is a problem with the pdo fetch function or if the problem is in the Zend_Db_Table_Row class.
I'm guessing the first since I see that if you don't supply a data index in the config parameter to the constructor you use the array keys from $this-&gt;_info['cols'] as keys for the $this-&gt;_data member.</p>

<p>I changed the __get function to look for $camel in $this-&gt;_data instead of $under to get it to work, but it seems my array keys in $this-&gt;_data member is messed up: Shouldn't _data contain array('ID' =&gt; 35, 'FirmaID' =&gt; 0) ?</p>

<p>Zend_Db_Table_Row Object
(
    [_data:protected] =&gt; Array
        (
            [id] =&gt; 35
            [firmaid] =&gt; 0
            ...
        )
    [_info:protected] =&gt; Array
        (
            [name] =&gt; cPerson
            [cols] =&gt; Array
                (
                    [ID] =&gt; id
                    [FirmaID] =&gt; firmaid
             ...
                )
            [primary] =&gt; ID
        )
)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bjarte Kalstveit Vebjørnsen (bjarte) on 2006-07-01T07:58:59.000+0000</p> 
        <div class="body">
            <p>Sorry, I should have done some checks with PDO first.
I see you force lower-case in the Zend_Db_Adapter_Pdo_Abstract, 
so the problem is in the Zend_Db_Table_Row's __get function then ?</p>

<p>return $this-&gt;_data[$under];</p>

<p>should be:</p>

<p>return $this-&gt;_data[$camel];</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Godden (xeo) on 2006-07-02T07:38:08.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>I belive i have expiranced the same problem today please allow me to explain:</p>

<p>I have noticed that the array $this-&gt;_info['cols'] on line 93 of Row.php returns a array of database field names mapped to lower case copies of these field names.</p>

<p>This array is then searched for the supplied field name in $camel and $under is assigned the true field names returned from the DB.</p>

<p>However all of $this_data's keys/fieldnames are lower case to same as $this-&gt;info['cols'], this results in a error as $under is set to the true field names not a lower case version.</p>

<p>Example:</p>

<p>$camel = "clientid"</p>

<p>$this-&gt;_info['cols'] = Array ("ClientID" = "clientid")</p>

<p>$under = "ClientID"</p>

<p>$this-&gt;_data = Array ("clientid" = "1")</p>

<p>so we get an error when:</p>

<p>return $this-&gt;_data[$under]; AKA ($this-&gt;_data['ClientID'])</p>

<p>I have temp patched this on my copy by placing
$under = strltolower($under);</p>

<p>however i belive there is a far better way to fix this just not got the time at the mo.</p>

<p>Hope all that makes sence</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bjarte Kalstveit Vebjørnsen (bjarte) on 2006-07-03T15:52:06.000+0000</p> 
        <div class="body">
            <p>Yup,</p>

<p>Seems you have same problem as I.
Kinda hard to know what the right solution is as the docs doesn't say anything about upper-case field names only lower-case with underscores. 
Since it says you should use camelCase instead of underscores to access the row properties it made me thinking it would make a whole lot more sense to do $row-&gt;ClientID than $row-&gt;clientid. 
Thats what i initalially expected it to do when i started with zend_db_table, but it threw an exception at me.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Shannon Wynter (freman) on 2006-09-06T06:22:25.000+0000</p> 
        <div class="body">
            <p>I'm also experiencing this.</p>

<p>my table contains ID, Name, Username, Host</p>

<p>if I call $row-&gt;Name I get "exception 'Zend_Db_Table_Row_Exception' with message 'column 'Name' not in row'"</p>

<p>if I call $row-&gt;Name I get "Notice: Undefined index: Name in /home/freman/Documents/code/phprdiffbackup/trunk/htdocs/library/Zend/Db/Table/Row.php on line 96"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Charles Bump (cool_bump) on 2006-09-07T14:18:28.000+0000</p> 
        <div class="body">
            <p>I also experienced this issue and resolved it by making the following modifications:</p>

<p>======================================
The Zend_Db_Inflector's camelize method, IMO should not run unless the name actually has underscores in it.  If it does run, it automatically returns a lowercase version of the name which causes some mismatching of field names:</p>

<h2>Index: library/Zend/Db/Inflector.php</h2>

<pre><code>  */
 public function camelize($name)
 {
</code></pre>

<p>+        if (strpos($name, '_') &lt;= 0) {
+            return $name;
+        }
         // lowercase all, underscores to spaces, and prefix with underscore.
         // (the prefix is to keep the first letter from getting uppercased</p>

<h2>         // in the next statement.)</h2>

<p>In addition, the describeTable method in Zend_Db_Adapter_Pdo_Mysql does not work properly if the ATTR_CASE attribute is set to anything except CASE_LOWER.  This is because, by default, MySQL capitalizes the field names in the description and this must then be lowercased to create the description array.</p>

<h2>Index: library/Zend/Db/Adapter/Pdo/Mysql.php</h2>

<pre><code>    $descr = array();
    foreach ($result as $key =&gt; $val) {
</code></pre>

<p>+            $val = array_change_key_case($val);
            $descr[$val['field']] = array(
                'name'    =&gt; $val['field'],</p>

<h2>                'type'    =&gt; $val['type'],</h2>

<p>I hope this helps . . . .</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:14:33.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-05T17:06:24.000+0000</p> 
        <div class="body">
            <p>Recategorize as Zend_Db_Table component.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-15T23:40:02.000+0000</p> 
        <div class="body">
            <p>As of revision 3995, the use of inflectors has been eliminated from Zend_Db_Table.</p>

        </div>
    </div>
    </div>

