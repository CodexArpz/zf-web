<h2>ZF-12076: Zend_Application_Bootstrap_BootstrapAbstract::_loadPluginResource() should not register plugin resource by itself</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2012-02-29T16:34:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-29T16:59:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Grimalovsky (flying)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>{{Zend_Application_Bootstrap_BootstrapAbstract::_loadPluginResource()}} currently do more then it is expected from method named "load" since it is not just load and return plugin resource, but also registers it into {{$_pluginResources}} member variable. This behavior makes loading plugin resources without registering them impossible.</p>

<p>Correct behavior for this method would be simple loading of requested plugin resource.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-02-29T16:59:48.000+0000</p> 
        <div class="body">
            <p>While the name might be misleading, the point of loading plugin resources is also to register them so they are available.</p>

        </div>
    </div>
    </div>

