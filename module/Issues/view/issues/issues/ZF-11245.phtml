<h2>ZF-11245: Zend_Form::loadDefaultDecorators() is called too late in constructor</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-03-31T07:03:42.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-04-01T00:10:53.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I've a subclass that extends the <em>Zend_Form</em> class. In my <em>My_Class::init()</em> method, I sets a "Description" decorator like this:</p>

<pre class="highlight"><code>
    public function init()
    {
        $this-&gt;setName('loginForm');
        $this-&gt;setElementsBelongTo('loginForm');

        $this-&gt;setDescription('Authentication')
            -&gt;addDecorator('Description', array('placement' =&gt; 'prepend'));

        ...
    }
</code></pre>

<p>Unfortunately, When the Form is rendered, only the part belong to the Description is displayed. I've searched, and it's seem that the call of <em>Zend_Form::loadDefaultDecorators()</em> is made too late (just after the init() method) in the constructor because <em>Zend_Form::loadDefaultDecorators()</em> load defaults decorators only if no one is already set:</p>

<pre class="highlight"><code>
    public function loadDefaultDecorators()
    {
        if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
            return $this;
        }

        $decorators = $this-&gt;getDecorators();
        if (empty($decorators)) {
            $this-&gt;addDecorator('FormElements')
                 -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dl', 'class' =&gt; 'zend_form'))
                 -&gt;addDecorator('Form');
        }
        return $this;
    }
</code></pre>

<p>The problem seem to be fixed when the call <em>Zend_Form::loadDefaultDecorators()</em> is made before the <em>Zend_Form::init()</em> method. Now, maybe it's a wrong way to fix this issue... Of course, I can process like this:</p>

<pre class="highlight"><code>
    public function init()
    {
        $this-&gt;setName('loginForm');
        $this-&gt;setElementsBelongTo('loginForm');

        // Force to load Form default decorators
        $this-&gt;loadDefaultDecorators();

        $this-&gt;setDescription('Authentication')
            -&gt;addDecorator('Description', array('placement' =&gt; 'prepend'));

        ...
    }
</code></pre>

<p>but that seem to be a bad workaround since we have now a double call of the <em>Zend_Form::loadDefaultDecorators()</em> method.</p>

<p>Sorry for my poor English, I'm French.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-03-31T12:38:11.000+0000</p> 
        <div class="body">
            <p>This is by design. loadDefaultDecorators() occurs after init() to allow init() to override the default decorators.</p>

<p>You can simply call $this-&gt;loadDefaultDecorators() in your init() method (as you've done in your last example) if you wish to use those as the base and simply add to them.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent declercq (nuxwin) on 2011-03-31T22:28:48.000+0000</p> 
        <div class="body">
            <p>ok, thanks you for the answer here. For me that seem to be wrong and not conform to the default behavior. Indeed, when we use the <em>Zend_Form</em> class without extending it, default decorators are always loaded, and if we want not them, we can use the <em>Zend_Form::setDisableLoadDefaultDecorators()</em> setter to set the appropriate flag.
To resume, in case where we use the init() method in subclass, the default behavior is changed. That seem to be an inconsistency in the implementation.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-03-31T23:01:49.000+0000</p> 
        <div class="body">
            <p>setDisableLoadDefaultDecorators() is intended for use cases where you do not wish to use decorators at all. loadDefaultDecorators() is intended for cases where there are no decorators already instantiated (nor disabled) by the end of object construction; its purpose is to allow developers to lazily override via init() or configuration.</p>

<p>Again, the behavior is intended and documented; changing it at this time would introduce a very large backwards compatibility break.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Laurent declercq (nuxwin) on 2011-04-01T00:10:53.000+0000</p> 
        <div class="body">
            <p>No problem ; It was just my opinion. I known your competences and I trust you.</p>

        </div>
    </div>
    </div>

