<h2>ZF-11310: Tmp/cache dir security considerations</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-04-20T14:37:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-09T20:22:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In the proposal for a default directory structure [1] there's a data/cache dir, this however is not mentioned in the quickstart guide, and I'm not sure zend_tool creates this while creating a new project.</p>

<p>The problem arises on sytems where there are multiple websites each running as their own user because the cache files do not have some sort of unique identifier on a per-project basis, which may result in e.g. write errors for zend_locale cache.</p>

<p>It also is a problem when multiple websites of several people/businesses run on the same server with all the same tmp file because one may be able to spoof someone else's caches.</p>

<p>Solution:
If you agree this is a potential security issue, my suggestion would be to by default create a data/cache dir using zend_tool, document its usage in the quickstart guide, as well as perhaps in zend_cache, and to set the default tmp dir to this folder in the .htaccess file zend_tool creates.</p>

<p>Thanks go out to MvdS for noticing.</p>

<p>[1] <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend+Framework+Default+Project+Structure+-+Wil+Sinclair">http://framework.zend.com/wiki/display/…</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2011-04-20T17:28:41.000+0000</p> 
        <div class="body">
            <p>Just adding a clarification that this impacts on host servers due to their insecure configuration (one user should not be able to read/write another user's files!). As such it is NOT a Zend Framework security issue. Zend_Tool may elect to use a unique cache directory configuration setting for Zend_Tool (which makes sense anyway to avoid cache conflicts) but server operators should note you can manually configure the cache directory as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2011-04-20T17:34:07.000+0000</p> 
        <div class="body">
            <p>Agreed. It's not that ZF is doing something wrong, but we could protect the users better by actually setting a default tmp dir ourselves if the specified tmp dir equals sys_get_tmp</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Môshe van der Sterre (môshevds) on 2011-04-29T00:38:48.000+0000</p> 
        <div class="body">
            <p>I like to clarify why this is a security issue, I discussed this with Dolf Schimmel, but I don't think the potential impact is clear from the description. Also, Pádraic Brady notes that this is an issue with an insecure host configuration, however, this is not the case.</p>

<p>It is correct that this issue is only relevant for the default ZF configuration, but it is not documented as an insecure default.</p>

<p>I noticed this issue on a test-server, with 2 distinct users both running the same ZF application, the application of one of the users became inaccessible as a result (local denial of service). I do not directly see a way to exploit this beyond the denial of service, but as the contents of many cache files are serialized objects, this might also be possible.</p>

<p>The /tmp directory (and other system-wide tmp directories) have filemode 1777, this means world writable (the 777 part) with the restricted deletion flag (the 1) set. This particular filemode means any user can 'claim' a file, without fear that another user will delete it. Without this behaviour the tmp directory would be obviously insecure. However this also means no application can rely on using any specific filename in the tmp directory, as another user or application may have claimed it already.</p>

<p>This is also the point that makes ZF vulnerable to at least the local denial of service. ZF does not gracefully handle a failure to open the cache file, and it has no provisions to randomize the filename or check the owner before using it.</p>

<p>The real way to fix this issue is to implement some sort of 'mktemp' behaviour. However, changing the default to not use /tmp at all (as proposed) will definitely fix the problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-01-09T20:22:29.000+0000</p> 
        <div class="body">
            <p>Is that an issue of Zend_Cache or Zend_Tool ?</p>

        </div>
    </div>
    </div>

