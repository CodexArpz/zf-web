<h2>ZF-7853: Problem with highlightMatches() function</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-09-16T00:55:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:42.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12284/EDPS+presentation+redacted.pptx">EDPS presentation redacted.pptx</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Specific example of error follows:</p>

<p>I have a .pptx document that contains this text string: "... Data Protection Module Karen Brown, DPO Johnny McSweeney ...". The document appears to be indexed correctly.</p>

<p>Using both quoted and un-quoted strings, if I do a search for "Karen" or "Karen Brown", the results come back fine, and using the highlightMatches() function, the keywords are highlighted. However, if I do a search for "Module Karen Brown" I get the following error:</p>

<p>[Notice] Trying to get property of non-object
POST /SilverStripe/search-lucene/</p>

<p>Line 293 in D:\wamp\www\ZendFramework-1.9.1\library\Zend\Search\Lucene\Document\Html.php
Source</p>

<p>284  foreach ($matchedTokens as $token) {
285      // Cut text after matched token
286      $node-&gt;splitText($token-&gt;getEndOffset());
287
288       // Cut matched node
289      $matchedWordNode = $node-&gt;splitText($token-&gt;getStartOffset());
290
291      // Retrieve HTML string representation for highlihted word
292       $fullCallbackparamsList = $params;
293      array_unshift($fullCallbackparamsList, $matchedWordNode-&gt;nodeValue);
294      $highlightedWordNodeSetHtml = call_user_func_array($callback, $fullCallbackparamsList);
295
296      // Transform HTML string to a DOM representation and automatically transform retrieved string
297      // into valid XHTML (It's automatically done by loadHTML() method)
298      $highlightedWordNodeSetDomDocument = new DOMDocument('1.0', 'UTF-8');
299      $success = @$highlightedWordNodeSetDomDocument-&gt;</p>

<p>My totally stripped down output code looks a bit like this:</p>

<p>foreach ($results as $result) {
   $myVar = $query-&gt;highlightMatches($result-&gt;body);
   echo $myVar;
}</p>

<p>If I alter: $myVar = $query-&gt;highlightMatches($result-&gt;body);
to: $myVar = $result-&gt;body;
the error no longer occurs, but of course, the keywords are no longer highlighted.</p>

<p>This is just one specific example, but I get similar difficulties with .xlsx and .docx documents, and random combinations of search terms.</p>

<p>Interestingly, I don't get the same problem with documents created from database queries.</p>

<p>(NB. I originally sent this issue to Maarten Balliauw, who suggested I submit it to the Issue Tracker as it affects multiple lucene modules.)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2009-10-05T06:47:01.000+0000</p> 
        <div class="body">
            <p>My first idea was that it's utf-8 processing related problem (DOMText::splitText() method needs binary offset instead of character offset), but it was wrong. I think I have found and fixed problem, so it will be commited soon.
BTW could you prepare test document and attach it to the issue?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-05T07:17:56.000+0000</p> 
        <div class="body">
            <p>Hi Alexander</p>

<p>I can't unfortunately give you the <em>actual</em> document as it's confidential to the business of this office. Instead, I've prepared a very cut-down single page version of the same document, which contains the bits that were giving me problems. I hope that's enough to be getting on with.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-05T07:19:23.000+0000</p> 
        <div class="body">
            <p>Cut-down version of test file.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2009-10-05T09:55:44.000+0000</p> 
        <div class="body">
            <p>Michael, I've tried document you attached to the issue and haven't got a error.</p>

<p>Could you give a ZF version number you use now? Similar problem was fixed earlier.</p>

<p>Second question is a way you get $query. Does it only:</p>

<pre class="highlight"><code>
$query = Zend_Search_Lucene_Search_QueryParser::parse('Module Karen Brown');
</code></pre>

<p>???</p>

<p>BTW My test code:</p>

<pre class="highlight"><code>
$doc = Zend_Search_Lucene_Document_Pptx::loadPptxFile($pathToTestPptxFile, true);

$index = Zend_Search_Lucene::create('index');
$index-&gt;addDocument($doc);

$query = Zend_Search_Lucene_Search_QueryParser::parse('Module Karen Brown');

$results = $index-&gt;find($query);
foreach ($results as $result) { $myVar = $query-&gt;highlightMatches($result-&gt;body); echo $myVar; }
</code></pre>

<p>Moreover, this code may be reduced to the following:</p>

<pre class="highlight"><code>
$doc = Zend_Search_Lucene_Document_Pptx::loadPptxFile($pathToTestPptxFile, true);
$query = Zend_Search_Lucene_Search_QueryParser::parse('Module Karen Brown');
var_dump($query-&gt;highlightMatches($doc-&gt;body));
</code></pre>

<p>Please try it in your environment.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-08T05:29:18.000+0000</p> 
        <div class="body">
            <p>Hi Alexander</p>

<p>Am using: ZendFramework-1.9.1</p>

<p>My indexing code looks like this:</p>

<p>$doc = Zend_Search_Lucene_Document_Pptx::loadPptxFile($doc_filenameandpath, true);
$doc-&gt;addField(Zend_Search_Lucene_Field::Keyword('key', $doc_filename));
... other addFields()...
$index-&gt;addDocument($doc);</p>

<p>My search code looks like this:
(note that $searchString would contain, in this example, 'Module Karen Brown' or 'Karen Brown', etc)</p>

<p>$userQuery = Zend_Search_Lucene_Search_QueryParser::parse($searchString);
$query = new Zend_Search_Lucene_Search_Query_Boolean(); 
$query-&gt;addSubquery($userQuery, true); 
$index = Zend_Search_Lucene::open($pathToIndexes . $indexName . '\');<br />
$results = $index-&gt;find($query);</p>

<p>The major difference appears to be that I pass the string into Zend_Search_Lucene_Search_QueryParser and then pass that into Zend_Search_Lucene_Search_Query_Boolean(). You are doing it all in one step.</p>

<p>I'll convert my code to look more like yours, but do you think this is significant when we're talking about highlightMatches()?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-08T08:09:41.000+0000</p> 
        <div class="body">
            <p>Alexander</p>

<p>Nope, it's just the same.</p>

<p>If I condense my original three lines:</p>

<pre><code>$userQuery = Zend_Search_Lucene_Search_QueryParser::parse($searchString);
$query = new Zend_Search_Lucene_Search_Query_Boolean(); 
$query-&gt;addSubquery($userQuery, true /* required */); 
</code></pre>

<p>to this single line:</p>

<pre><code>$query = Zend_Search_Lucene_Search_QueryParser::parse($searchString);
</code></pre>

<p>I get exactly the same error in exactly the same circumstances.</p>

<p>m\</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-09T00:31:13.000+0000</p> 
        <div class="body">
            <p>Could it actually be the word "Module" that is causing the problem? Is it some kind of reserved word..?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-09T00:33:44.000+0000</p> 
        <div class="body">
            <p>I mentioned that because:</p>

<p>"Modul Karen Brown" does not cause the error,
"Module aren Brown" does cause the error.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michael Casey (junglefish) on 2009-10-14T06:27:16.000+0000</p> 
        <div class="body">
            <p>Hi Alexander</p>

<p>This issue is no longer an issue :-)</p>

<p>I moved the application I was building to a new server, ready for its official release. On the new server, this problem has entirely disappeared!</p>

<p>What is strange is that I'm using the same code, which has simply been copied across, and I'm even using the same test file! The only difference is in the server infrastructure (one was an XP workstation and the other is a Windows 2003 server) and I'm fairly certain that can't have been the issue.</p>

<p>But anyway, as it appears you can't replicate the issue, and it's no longer a concern for me, I guess I'm happy for the issue to be closed.</p>

<p>Thanks for your help.</p>

<p>m\</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:42.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

