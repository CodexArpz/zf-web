<h2>ZF-9431: Zend_Cache_Manager should be a singleton</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-03-16T03:16:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-16T08:25:18.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently it is quite complicated to access the cache manager from the model or the view. Maybe we should consider making the cache manager a singleton?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2010-03-16T03:22:07.000+0000</p> 
        <div class="body">
            <p>The cache manager is stored in the frontcontroller after you set it up through zend_app. The frontcontroller happens to be a singleton already: Zend_Controller_Front::getInstance()-&gt;getParam('bootstrap')-&gt;getResource('cachemanager');</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-03-16T04:26:53.000+0000</p> 
        <div class="body">
            <p>Singletons are incredibly tricky to test against, and lead to undocumented dependencies and unexpected side-effects. For this reason, we have already mandated that in 2.0, we will not use singletons except for resources that are truly singular in nature (e.g., the autoloader).</p>

<p>We will <em>not</em> add any more singletons between now and then.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Pádraic Brady (padraic) on 2010-03-16T04:41:21.000+0000</p> 
        <div class="body">
            <p>Just to echo Matthew - singletons tend to ask for trouble. On the concept that the class instance is hard to retrieve, if you need to force it into a singleton style, use Zend_Registry to store it. This is cleaner than even using the FrontController access method Dolf describes since there's no guarantee the FrontController will always be a singleton itself. You can do this from your Bootstrap with a custom Resource method (just make sure the custom method pre-checks that the Cachemanager resource is bootstrapped).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Goran Juric (gog) on 2010-03-16T08:24:58.000+0000</p> 
        <div class="body">
            <p>Thank you for your comments. I was aware that you can fetch the cache manager from the front controller, but it looks kinda clumsy.</p>

<p>A will close this issue, but regarding your comment Pádraic, I do believe that there should be an option for all of the stock resources to register the resource in the registry automatically. But this a story for another issue or the mailing list.</p>

        </div>
    </div>
    </div>

