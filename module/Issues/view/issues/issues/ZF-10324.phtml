<h2>ZF-10324: Additional parameters with ZendAMF-call result in Uncaught exception 'Zend_Amf_Exception' with message 'Undefined string reference:...'</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-16T12:05:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:00.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Joey van Dijk (joeyvandijk)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Today I found out that ZendAmf does <em>not</em> support the use of <em>more than 1</em> parameters when using</p>

<pre><code> *NetConnection.call('Service.function',responder,new VOPost(), new VOFile());*
</code></pre>

<p>Because when I use a customVO like:</p>

<pre class="highlight"><code>
&lt;?php
class VOFile
{
    public $_explicitType = 'vo.medium.VOFile';

    public $data;
    public $name;// + extension
    public $compressed;
    public $type;

    public function VOFile($name,$data,$type,$compressed = false)
    {
        $this-&gt;name = $name;
        $this-&gt;data = $data;
        $this-&gt;type = $type;
        $this-&gt;compressed = (bool)$compressed;
    }

    public function getASClassName()
    {
        return $this-&gt;$_explicitType;
    }
}
?&gt;
</code></pre>

<p>its giving me an error when I send this VO from Flash (with jpg inside data-property) to ZendAMF.</p>

<pre class="highlight"><code>
package
{
    import flash.net.registerClassAlias;
    import flash.utils.ByteArray;
    [RemoteClass(alias="vo.medium.VOFile")]
 
    public class VOFile
    {
       public var data:ByteArray;
       public var name:String;
       public var type:String;
       public var compressed:Boolean;      
        
       public function VOFile(){}
        
       public static function register():void
       {      
          registerClassAlias("vo.medium.VOFile", VOFile);
       }        
    }
}
</code></pre>

<p>The identifiers are exactly the same, but I am getting the following error:</p>

<pre class="literal"> 
[16-Aug-2010 20:14:27] PHP Fatal error:  Uncaught exception 'Zend_Amf_Exception' with message 'Undefined string reference: 6' in /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf3/Deserializer.php:186
Stack trace:
#0 /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf3/Deserializer.php(372): Zend_Amf_Parse_Amf3_Deserializer-&gt;readString()
#1 /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf3/Deserializer.php(103): Zend_Amf_Parse_Amf3_Deserializer-&gt;readObject()
#2 /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf0/Deserializer.php(293): Zend_Amf_Parse_Amf3_Deserializer-&gt;readTypeMarker()
#3 /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf0/Deserializer.php(130): Zend_Amf_Parse_Amf0_Deserializer-&gt;readAmf3TypeMarker()
#4 /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf0/Deserializer.php(217): Zend_Amf_Parse_Amf0_Deserializer-&gt;readTypeMarker()
#5 /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Parse/Amf0/Deserializer.php(106): Zend_Amf_Parse_Amf0_Deserializer-&gt;readArray()
#6 /Users/gebru in /Users/gebruiker/work/php/PH29/frameworks/Zend/Amf/Request.php on line 176
</pre>

<p>Which only occurs when I am using two simple custom made VOs (like above) and send them as 2 parameters (like shown above) with my NetConnection.call. If I remove the second parameter I am getting <em>no</em> exception/error!!
As you can see I am using pure Actionscript 3 projects (no flex) and the latest version of 1.10.7. 
All classes are correctly imported (require_once) and mapped (recognized because 1 parameter with same VO works).</p>

<p>I am still not sure whats the root cause: <em>mapping</em> the VOs or an <em>deserialization</em> error in ZendAMF? I am using the same FP10 compiled (Flex SDK3.5a) swf-file from which all above mentioned calls are made without changes to class mappings or paths.
The strange thing is that the process is not even arriving at my Service.function in PHP/ZendAMF because when I log (with Zend_Log) I am not seeing anything happening even when I am uncommenting all my code except the return-value.</p>

<p>So I have not found posts online or here at zend.com about this kind of issues and I would like to know what could be wrong with adding parameters to AMF-function calls. Let me know if I need to provide more information.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Joey van Dijk (joeyvandijk) on 2010-08-25T01:49:49.000+0000</p> 
        <div class="body">
            <p>Further research shows me that it gives these errors only when two typed objects are given as parameters. Strings and integers are allowed even with one custom VO but not with multiple custom VOs.</p>

        </div>
    </div>
    </div>

