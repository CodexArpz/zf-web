<h2>ZF-8538: DB adapter could provide a date format string</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-12-13T10:05:24.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-07-21T16:15:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Sylvain DIDELOT (neck)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>As discussed there: <a href="http://n4.nabble.com/Zend-Date-and-MySQL-datetime-td645665.html">http://n4.nabble.com/Zend-Date-and-MySQL-datetime-â€¦</a></p>

<p>it would be useful if database adapters could provide a method to retrieve a format string corresponding to their date storage format.</p>

<p>Currently we have to do this (taking mysql date format as example):</p>

<pre class="highlight"><code> 
$date = new Zend_Date($dateFromDb, 'YYYY-MM-dd HH:mm:ss');
</code></pre>

<p>or this:</p>

<pre class="highlight"><code>
$dateToDb = $date-&gt;toString('YYYY-MM-dd HH:mm:ss');
</code></pre>

<p>What would be great is:</p>

<pre class="highlight"><code>
$date = new Zend_Date($dateFromDb, $dbAdapter-&gt;getDateFormat());
</code></pre>

<p>or this:</p>

<pre class="highlight"><code>
$dateToDb = $date-&gt;toString($dbAdapter-&gt;getDateFormat());
</code></pre>

<p>It does not require much more code nor makes Zend_Date heavier, but it saves the hassle to know the format you need and more interesting makes the code easier to port across different DB backend.</p>

<p>Sorry if anything like that exists already, did a search and nothing came up.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Pieter Kokx (kokx) on 2009-12-13T10:30:53.000+0000</p> 
        <div class="body">
            <p>I don't think that this exists already. At least, i didn't found it too.</p>

<p>Great idea, but it could be better that DB adapters will accept Zend_Date objects, and adding a parameter for queries to return Zend_Date objects instead of plane dates?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Claude Duvergier (cduv) on 2011-07-21T16:15:56.000+0000</p> 
        <div class="body">
            <p>I'm running into the same <em>problem</em>. I was using <em>incorrectly</em> using {{Zend_Date::ISO_8601}} (eg. '2011-07-29T00:00:00+02:00') which is working fine with MySQL 5.5 but not with MySQL 5.0 (don't support the timezone part in a {{SELECT}} statement).</p>

<p>If find the idea to add a concept of {{Zend_Date}} into {{Zend_Db}} quite useful.</p>

<p>The {{Zend_Db_Adapter_Abstract}} could easily be adapted as follows (but all {Zend_Db}} adapters would need to be updated too):</p>

<pre class="highlight"><code>
abstract class Zend_Db_Adapter_Abstract
{
    /**
     * Set date column Zend_Date format
     * 
     * @param string $format
     * 
     * @return void
     * 
     * @see Zend_Date
     */
    abstract public function setDateFormat($format);
    
    /**
     * Set datetime column Zend_Date format
     * 
     * @param string $format
     * 
     * @return void
     * 
     * @see Zend_Date
     */
    abstract public function setDateTimeFormat($format);
    
    /**
     * Get date column Zend_Date format
     * 
     * @return string
     * 
     * @see Zend_Date
     */
    abstract public function getDateFormat($format);
    
    /**
     * Get datetime column Zend_Date format
     * 
     * @return string
     * 
     * @see Zend_Date
     */
    abstract public function getDateTimeFormat($format);
}
{</code></pre>

        </div>
    </div>
    </div>

