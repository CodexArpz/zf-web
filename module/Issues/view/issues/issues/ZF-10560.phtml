<h2>ZF-10560: Add 'memcached' Support to Zend_Cache_Backend</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-10-15T09:09:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-10-18T10:44:04.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.11.1 (30/Nov/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13340/memcached2.patch">memcached2.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Cache_Backend does not support Memcached from the 'memcached' extension side.
This has been brought up several times, however, I have one called "Memcached2" that provides the memcached extension availability.  This was somewhat forked from the current Zend_Cache_Backend_Memcached, with some slight modifications to support what Memcached does.</p>

<p>This has the same tests that the current Zend_Cache_Backend_Memcached does and passes all of them.</p>

<p>Attached is the patch file.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mike Willbanks (digitalstruct) on 2010-10-15T09:11:46.000+0000</p> 
        <div class="body">
            <p>Patch for Memcached2.</p>

<p>Changes:
M       tests/TestConfiguration.php.dist
M       tests/Zend/Cache/SkipTests.php
M       tests/Zend/Cache/AllTests.php
A       tests/Zend/Cache/Memcached2BackendTest.php
A       library/Zend/Cache/Backend/Memcached2.php</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mike Willbanks (digitalstruct) on 2010-10-15T09:12:29.000+0000</p> 
        <div class="body">
            <p>Please apply patch or what changes you need ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-10-15T09:48:19.000+0000</p> 
        <div class="body">
            <p>Thanks for your patch but this is a new backend and would need a proposal.
Additionally 1.11 beta is released and therefore no new features will get in.</p>

<p>The current refactoring of the cache component for zf2 contains an adapter for ext/memcached
-&gt; <a href="http://framework.zend.com/wiki/display/ZFPROP/Zend+Cache+2.0+-+Marc+Bennewitz">http://framework.zend.com/wiki/display/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-10-15T10:07:54.000+0000</p> 
        <div class="body">
            <p>Marc -- adapters can come in as feature improvements in the tracker, so long as they are straight-forward. (This differs from the policy for filters, as they operate standalone.) Also, while we are technically in beta, our concept of beta is fairly fluid; we allow minor feature additions so long as they create new functionality and do not change existing functionality, and are trivial in scope.</p>

<p>How different is the attached adapter from what you've done for ZF2? If the differences are minimal or non-existent, I can see use cases for having this in the 1.X series.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-10-15T10:49:55.000+0000</p> 
        <div class="body">
            <p>metthew - this differs from last upgrade to 1.10 there was an alpha before ;)
OK than I'll review and commit it this weekend but the name "Memcached2" seems improper to me. The other backend "Memcached" based on ext/memcache is blocking the name but ext/memcached is based on libmemcached and I would like to name it "Libmemcached" until zf2 - that do you think ?.</p>

<p>ps: Zend Cache 2 has a complete different structure and comparing isn't simply possible.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mike Willbanks (digitalstruct) on 2010-10-15T11:09:19.000+0000</p> 
        <div class="body">
            <p>That name would likely be better ;)<br />
/me kicks current Memcached for being named evil.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-10-16T08:30:01.000+0000</p> 
        <div class="body">
            <p>Commited your patch in r23136 (trunk) with some changes:
 - renamed to Libmemcached
 - added logging on failed calls of set
 - removed memcached option constants
 - changed client config to allow constant values of Memcached::OPT_*
   and override default Memcached configuration on constructor</p>

<p>Please take a look into it - Thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kazusuke Sasezaki (sasezaki) on 2010-10-16T09:35:59.000+0000</p> 
        <div class="body">
            <p>r23136 Libmemcached.php Copyright is "2005-2008" ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-10-16T09:45:40.000+0000</p> 
        <div class="body">
            <p>changed - thanks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mike Willbanks (digitalstruct) on 2010-10-16T10:17:58.000+0000</p> 
        <div class="body">
            <p>r23136 - Libmemcached.php</p>

<p>Constructor:
If the client option is not found in the else condition during the constructor, it should either raise an exception or log a message.  This is really while it is looking for the client constant option.  Also when setting the client option it will return true or false, we could also add logging to that.</p>

<p>Not really absolutely needed but could be added to give the developer a better idea if something is going wrong.</p>

<p>Really like the way you implemented the client options.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-10-16T19:14:52.000+0000</p> 
        <div class="body">
            <p>adding logging</p>

<p>Additionally if I remove the sleep(1) on tests tearDown() all tests passed on my test machine.
-&gt; Is that really needed ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mike Willbanks (digitalstruct) on 2010-10-16T19:31:08.000+0000</p> 
        <div class="body">
            <p>I don't really think it is needed.  With the tests I started off with the same tests that were contained in the current memcached class and started to extend them.  Since that one had a sleep(1) i kept it in since I didn't know if there was a CI server that would have required it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-10-18T10:43:20.000+0000</p> 
        <div class="body">
            <p>merged to 1.11 branch in r23154</p>

<ul><li>I leave the sleep(1) on tearDown()</li>
</ul>
        </div>
    </div>
    </div>

