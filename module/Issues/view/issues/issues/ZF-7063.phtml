<h2>ZF-7063: Zend_Loader_Autoloader::getClassAutoloaders() incorrectly detects module namespaces...</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-06-21T05:26:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-21T04:30:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Tim Lockwood (stinkyweezl)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>My application is structured as follows...</p>

<p>application
   modules
      admin
      sales
      sales-admin</p>

<p>In Zend_Loader_Autoloader (line 308), it detects the namespace incorrectly and returns the wrong autoloader for all classes in sales-admin (instead bringing back those from Sales.</p>

<p>Proposed fix is to replace line 308
if (0 === strpos($class, $ns)) {</p>

<p>with the following
if (0 === strpos($class, $ns.'_')) {</p>

<p>This seems to fix things, but I'm not entirely sure if that's going to cover it... maybe a little regex would be more helpful...</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ben Fox (wildfoxmedia) on 2009-07-14T01:18:37.000+0000</p> 
        <div class="body">
            <p>I would just like to add that I am having the same issue with 2 modules/namespaces of my own.</p>

<p>news &amp; news-aggregator</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Hinikato Dubrai (hinikato) on 2009-08-20T16:45:33.000+0000</p> 
        <div class="body">
            <p>Yes, I have the same problem too. If two modules begin with the same prefix, then Zend_Loader_Autoloader will return invalid result.</p>

<p>For example, if we have "foo" module and "foo-bar" module, Zend_Loader_Autoloader will return autoloaders for the first module ("foo").</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Hinikato Dubrai (hinikato) on 2009-08-20T17:12:40.000+0000</p> 
        <div class="body">
            <p>This is bug example:</p>

<pre class="highlight"><code>
new Zend_Application_Module_Autoloader(array('namespace' =&gt; 'Foo', 'basePath' =&gt; dirname(__FILE__)));
new Zend_Application_Module_Autoloader(array('namespace' =&gt; 'FooBar', 'basePath' =&gt; dirname(__FILE__)));
$autoloaders = Zend_Loader_Autoloader::getInstance()-&gt;getClassAutoloaders('FooBar_Model');
Zend_Debug::dump($autoloaders[0]-&gt;getNamespace());
// Will output: string(3) "Foo"
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-08-21T04:30:19.000+0000</p> 
        <div class="body">
            <p>This was fixed for 1.9.1 (see ZF-7473)</p>

        </div>
    </div>
    </div>

