<h2>ZF-11684: Zend_Cache_Backend_File large memory usage for cleaning</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-08-18T16:23:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-01-09T20:19:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Cristian Radu (indy2kro)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
            <li>cache</li>
            <li>caching</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Class Zend_Cache_Backend_File uses in its _clean() function glob() like this:</p>

<pre class="highlight"><code> 
$glob = @glob($dir . $prefix . '--*');
</code></pre>

<p>This means that all results from a cache folder are stored in memory. For a folder that has many cache files this can lead to memory overflow.</p>

<p>A simple fix for this can be to replace the glob mechanism with simple preg_match:</p>

<pre class="highlight"><code>
        $handle = opendir($dir);

        if (!$handle) {
            return false;
        }

        $prefixEscaped = str_replace('/', '\/', $prefix);

        while (false !== ($fileName = readdir($handle))) {
            if (!preg_match('/^' . $prefixEscaped . '\-\-/', $fileName)) {
                continue;
            }

            $file = $dir . $fileName;

            // ...
        }

        closedir($handle);
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2012-01-09T20:19:22.000+0000</p> 
        <div class="body">
            <p>On ZF2 it's already fixed by using the class GlobIterator instead of the raw glob function.
But the GlobIterator isn't available before PHP 5.3.</p>

<p>Using opendir + preg_match could help but it's in as glob in definition.</p>

        </div>
    </div>
    </div>

