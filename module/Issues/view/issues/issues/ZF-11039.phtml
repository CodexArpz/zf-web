<h2>ZF-11039: Problem using customBackendNaming with Zend_Cache_Manager</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-02-04T19:50:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-26T06:17:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ramon Henrique Ornelas (ramon)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14325/ZF-11039.patch">ZF-11039.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>You can't use Cache classes with customBackendNaming in the Zend_Cache_Manager because its getCache method calls Zend_Cache:factor without passing customFrontendNaming and customBackendNaming parameters. It should be</p>

<p>$this-&gt;_caches[$name] = Zend_Cache::factory(
                $this-&gt;_optionTemplates[$name]['frontend']['name'],
                $this-&gt;_optionTemplates[$name]['backend']['name'],
                isset($this-&gt;_optionTemplates[$name]['frontend']['options']) ? $this-&gt;_optionTemplates[$name]['frontend']['options'] : array(),
                isset($this-&gt;_optionTemplates[$name]['backend']['options']) ? $this-&gt;_optionTemplates[$name]['backend']['options'] : array(),
                isset($this-&gt;_optionTemplates[$name]['frontend']['customFontendNaming']) ? $this-&gt;_optionTemplates[$name]['frontend']['customFontendNaming'] : false ,
                isset($this-&gt;_optionTemplates[$name]['backend']['customBackendNaming']) ? $this-&gt;_optionTemplates[$name]['backend']['customBackendNaming'] : false
            );</p>

<p>This allow you to configure the cache in application.ini like</p>

<p>resources.cachemanager.config.backend.name=Zend_Cache_Backend_ZendServer_ShMem
resources.cachemanager.config.backend.customBackendNaming=true</p>

<p>A ready made temple for the ZendServer backends would be even better, allowing you to do just
resources.cachemanager.config.backend.name=ZendServer_ShMem</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ramon Henrique Ornelas (ramon) on 2011-02-05T22:03:18.000+0000</p> 
        <div class="body">
            <p>@bill 
Not was described no information essential to reproduce bug. 
I see this issue but how an improvement.</p>

<p>Greetings
Ramon</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frederik Eychenie (feychenie) on 2011-02-27T16:56:35.000+0000</p> 
        <div class="body">
            <p>Using customBackendNaming or customFrontendNaming with cachamanager works in 1.11.3. Update your ZF !</p>

<p>If someone could close this issue..</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Markus Perl (_mex_) on 2011-03-29T08:49:45.000+0000</p> 
        <div class="body">
            <p>The bug still exists in 1.11.4.</p>

<p>The parameters customFrontendNaming and customBackendNaming are still ignored in the _mergeOptions Method in the Zend_Cache_Manager class.</p>

<p>To fix this issue, i had to add the following lines in this method:</p>

<pre class="highlight"><code>
        if (isset($options['frontend']['customFrontendNaming'])) {
            $current['frontend']['customFrontendNaming'] = $options['frontend']['customFrontendNaming'];
 }
 if (isset($options['backend']['customBackendNaming'])) {
            $current['backend']['customBackendNaming'] = $options['backend']['customBackendNaming'];
 }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Renan de Lima (renanbr) on 2011-05-26T15:03:55.000+0000</p> 
        <div class="body">
            <p>a solution for this problem (it solve my problem), it needs tests for others situations</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Barnes (abarnes) on 2011-09-16T08:51:30.000+0000</p> 
        <div class="body">
            <p>I can confirm this bug still exists in 1.11.9 and that Markus's fix above works.</p>

<p>To replicate if you are using Zend Server (CE or standard) add the following to your application.ini:</p>

<pre class="literal">
resources.cachemanager.default.frontend.name                            = Core
resources.cachemanager.default.frontend.options.lifetime                = 5
resources.cachemanager.default.frontend.options.automatic_serialization = true
resources.cachemanager.default.frontend.customFrontendNaming            = false
resources.cachemanager.default.backend.name                             = ZendServer_ShMem
resources.cachemanager.default.backend.customBackendNaming              = true
</pre>

<p>On a side note if the file Zend/Cache/Backend/ZendServer/ShMem.php was renamed to Shmem.php I would guess we wouldn't need to set the customBackendNaming on Linux environments?  <em>Not tested</em></p>

        </div>
    </div>
    </div>

