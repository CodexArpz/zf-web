<h2>ZF-2379: Add interface to add references to the ZDT</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-01-04T04:46:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-08T07:21:47.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11032/zdta.diff">zdta.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The current way of adding references to a ZDTA subclass is by providing an array.
This is a very verbose and non-intuitive way of setting up the relation, which forces the developer to remember array keys that are actually only interesting for the ZDTA class.
I want to suggest adding a method to add a relation to the ZDT instance, which will make the process more intuitive and less error-prone.</p>

<pre class="highlight"><code>
    /**
     * Add a reference to the reference map
     *
     * @param string $ruleKey
     * @param string|array $columns
     * @param string $refTableClass
     * @param string|array $refColumns
     * @param string $onDelete
     * @param string $onUpdate
     * @return Zend_Db_Table_Abstract
     */
    public function addReference($ruleKey, $columns, $refTableClass, $refColumns, $onDelete = null, $onUpdate = null)
    {
        $reference = array(self::COLUMNS         =&gt; $columns,
                           self::REF_TABLE_CLASS =&gt; $refTableClass,
                           self::REF_COLUMNS     =&gt; $refColumns);

        if (!empty($onDelete)) {
            $reference[self::ON_DELETE] = $onDelete;
        }

        if (!empty($onUpdate)) {
            $reference[self::ON_UPDATE] = $onUpdate;
        }

        $this-&gt;_referenceMap[$ruleKey] = $reference;

        return $this;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-01-04T04:48:27.000+0000</p> 
        <div class="body">
            <p>Added diff file</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-02-14T04:44:25.000+0000</p> 
        <div class="body">
            <p>Updated code to use the class constants.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:56.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:12:04.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-01-08T07:21:46.000+0000</p> 
        <div class="body">
            <p>Resolved in r. 13553</p>

        </div>
    </div>
    </div>

