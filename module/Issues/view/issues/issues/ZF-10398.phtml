<h2>ZF-10398: Adding actions to controller generate sintax errors in controller</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-30T05:00:04.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-05-12T03:43:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Caragata Cosmin-Mihail (cosmin0103)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Reflection</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/13288/ZF-10398-tests-and-fix.diff">ZF-10398-tests-and-fix.diff</a></li>
            <li><a href="/issues/secure/attachment/13287/ZF-10398-tests.diff">ZF-10398-tests.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have added many actions to a controller .
 Whenever I have added another action to the controller the code in the actions  moves to the right</p>

<p>AND</p>

<p>in the actions where the functions ends with 2 breckets like<br />
       public funtion addAction { if (3&gt;4){ } }
 one brecket is deleted and generates a sintax error .</p>

<p>This happens every time i add an action !
 I have tested on several versions.</p>

<p>Example  1 - before adding action</p>

<p>class TestController extends Zend_Controller_Action
{</p>

<pre><code>public function init()
{
    require_once (APPLICATION_PATH.'\models\masina.class.php');
    require_once (APPLICATION_PATH.'\models\angajat.class.php');
    require_once (APPLICATION_PATH.'\models\Forms.php');
    require_once (APPLICATION_PATH.'\models\Test1.php');
    require_once (APPLICATION_PATH.'\models\statie.class.php');
    require_once (APPLICATION_PATH.'\models\ruta.class.php');
    require_once (APPLICATION_PATH.'\models\traseu.class.php');
}

public function indexAction()
{
    $x = new Application_Model_Test1();
                                    $trasee = $x -&gt; getTraseeActive();
}

public function listruteAction()
{
    $x = new Application_Model_Test1();
                                                            $trasee = $x -&gt; getTraseeActive();

                                                            foreach ($trasee as $t )
                                                                    {

                                                                     $rute [$t['id_ruta'] ] = "ok" ; 

                                                                    }

                                                                    echo "RUTE:&lt;BR&gt;";
                                                                    foreach ($rute as $r =&gt; $x )
                                                                       {
                                                                       echo "&lt;a href='listtrasee?ruta=$r' &gt;  $r  &lt;/a&gt; &lt;br&gt; ";
        }
}

public function listtraseeAction()
{
    $ruta  =  $this-&gt;_request-&gt;getQuery("ruta") ;
                                                            echo "Ruta selectata este :  "  . $ruta  . "&lt;BR&gt;" ;

                                                            $x = new Application_Model_Test1();
                                                            $trasee = $x -&gt; getTraseeActive();

                                                            echo "Trasee pentru aceasta ruta : &lt;BR&gt; &lt;br&gt; " ;
                                                            foreach ($trasee as $t )
                                                                {

                                                                if ($t['id_ruta']==$ruta )
                                                                 {              
                                                                    echo "&amp;nbsp ID traseu: &lt;a href='listmasini?id_traseu={$t['id_traseu']}' &gt;" . $t['id_traseu'] ." &lt;/a&gt; &lt;BR&gt;";
                                                                    echo "&amp;nbsp Nume complet:" . $t['nume_traseu'] ."&lt;BR&gt;";
                                                                    echo "&amp;nbsp Valabilitate:" . $t['valabilitate'] ."&lt;BR&gt;";
                                                                    echo "-------------------------------------&lt;br&gt;";
                                                                 }

                                                                }

                                                            // action body
}
</code></pre>

<p>}</p>

<hr /><p>Example 2 - after executing zf create action newaction test(missing action , even more text moving to the right)</p>

<p>class TestController extends Zend_Controller_Action
{</p>

<pre><code>public function init()
{
    require_once (APPLICATION_PATH.'\models\masina.class.php');
            require_once (APPLICATION_PATH.'\models\angajat.class.php');
            require_once (APPLICATION_PATH.'\models\Forms.php');
            require_once (APPLICATION_PATH.'\models\Test1.php');
            require_once (APPLICATION_PATH.'\models\statie.class.php');
            require_once (APPLICATION_PATH.'\models\ruta.class.php');
            require_once (APPLICATION_PATH.'\models\traseu.class.php');
}

public function indexAction()
{
    $x = new Application_Model_Test1();
                                            $trasee = $x -&gt; getTraseeActive();
}

public function listruteAction()
{
    $x = new Application_Model_Test1();
                                                                    $trasee = $x -&gt; getTraseeActive();

                                                                    foreach ($trasee as $t )
                                                                            {

                                                                             $rute [$t['id_ruta'] ] = "ok" ; 

                                                                            }

                                                                            echo "RUTE:&lt;BR&gt;";
                                                                            foreach ($rute as $r =&gt; $x )
                                                                               {
                                                                               echo "&lt;a href='listtrasee?ruta=$r' &gt;  $r  &lt;/a&gt; &lt;br&gt; ";
}

public function listtraseeAction()
{
    $ruta  =  $this-&gt;_request-&gt;getQuery("ruta") ;
                                                                    echo "Ruta selectata este :  "  . $ruta  . "&lt;BR&gt;" ;

                                                                    $x = new Application_Model_Test1();
                                                                    $trasee = $x -&gt; getTraseeActive();

                                                                    echo "Trasee pentru aceasta ruta : &lt;BR&gt; &lt;br&gt; " ;
                                                                    foreach ($trasee as $t )
                                                                        {

                                                                        if ($t['id_ruta']==$ruta )
                                                                         {              
                                                                            echo "&amp;nbsp ID traseu: &lt;a href='listmasini?id_traseu={$t['id_traseu']}' &gt;" . $t['id_traseu'] ." &lt;/a&gt; &lt;BR&gt;";
                                                                            echo "&amp;nbsp Nume complet:" . $t['nume_traseu'] ."&lt;BR&gt;";
                                                                            echo "&amp;nbsp Valabilitate:" . $t['valabilitate'] ."&lt;BR&gt;";
                                                                            echo "-------------------------------------&lt;br&gt;";
                                                                         }

                                                                        }

                                                                    // action body
}
</code></pre>

<p>}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-03T19:28:53.000+0000</p> 
        <div class="body">
            <p>I was able to replicate at least part of this problem.</p>

<p>If I start with a simple controller:
&lt;?php</p>

<p>class IndexController extends Zend_Controller_Action
{
    public function indexAction()
    {
        if (2&gt;3) {}
    }
}</p>

<p>And run the following command:</p>

<p>$ zf.sh create action two
Creating an action named two inside controller at /var/www/tmp/application/controllers/IndexController.php
Updating project profile '/var/www/tmp/.zfproject.xml'
Creating a view script for the two action method at /var/www/tmp/application/views/scripts/index/two.phtml
Updating project profile '/var/www/tmp/.zfproject.xml'</p>

<p>My controller now looks like this:</p>

<p>&lt;?php</p>

<p>class IndexController extends Zend_Controller_Action
{</p>

<pre><code>public function indexAction()
{
    if (2&gt;3) {
}

public function twoAction()
{
    // action body
}
</code></pre>

<p>}</p>

<p>Note the parse error in indexAction.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-03T20:41:51.000+0000</p> 
        <div class="body">
            <p>Found cause is Zend_Reflection_Method::getBody(). It does not properly strip the method's opening or closing tags if code exists on the same line as the opening brace, or the code ends in a curly brace.</p>

<p>Attached patch including three new unit tests, two of which fail:
 - testGetBodyReturnsCorrectContentWithCodeOnOpeningBraceLine
 - testGetBodyReturnsCorrectContentWithClosingBrace</p>

<p>I will work on a fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Konr Ness (konrness) on 2010-09-03T21:59:38.000+0000</p> 
        <div class="body">
            <p>Attached patch that resolves issues with modified code causing parse errors in the following scenarios:
 - having method with code that exists on same line as method's opening brace
 - having method with code that ends in curly brace
 - having method with code on same line as method's closing brace</p>

<p>Caragata Cosmin-Mihail, can you apply this patch and see if it resolves the issue?</p>

<p>If not, please provide example controller (preferrably smaller than first example) and the command you ran so I can replicate problem?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Caragata Cosmin-Mihail (cosmin0103) on 2010-09-05T23:27:08.000+0000</p> 
        <div class="body">
            <p>I have updated Zend/Reflection/Method.php :: getBody  to this like you said  :
 public function getBody()
    {
        $lines = array_slice(
            file($this-&gt;getDeclaringClass()-&gt;getFileName(), FILE_IGNORE_NEW_LINES),
            $this-&gt;getStartLine(),
            ($this-&gt;getEndLine() - $this-&gt;getStartLine()),
            true
        );</p>

<pre><code>    $firstLine = array_shift($lines);

    if (trim($firstLine) !== '{') {
        // if line has method's opening curly brace and more code, remove first curly brace (leaving spaces intact)
        if (substr(ltrim($firstLine), 0, 1) == '{') {
            //$firstLine = preg_replace('/{/', '', $firstLine, 1);
            $firstLine = substr(ltrim($firstLine), 1);
        }
         array_unshift($lines, $firstLine);
     }

     $lastLine = array_pop($lines);

     if (trim($lastLine) !== '}') {
        // if line has code and the method's closing curly brace, remove trailing spaces and last curly brace
        if (substr(rtrim($lastLine), -1, 1) == '}') {
            $lastLine = substr(rtrim($lastLine), 0, -1);
        }
         array_push($lines, $lastLine);
     }

    // just in case we had code on the bracket lines
    return rtrim(ltrim(implode("\n", $lines), '{'), '}');
    return implode("\n", $lines);

}
</code></pre>

<p>}</p>

<p>*Created a new project 
*Created a controller named test1
*Added 2 actions:
*zf create action action1 test1
*zf create action action2 test1 (I use windows xp btw)
*Edited the first action like this</p>

&lt;?php

class Test1Controller extends Zend_Controller_Action
{

    public function init()
    {
        /* Initialize action controller here */
    }

    public function indexAction()
    {
        // action body
    }

    public function action1Action()
    {
        if (1&gt;2)
        {}
    }

    public function action2Action()
    {
        // action body
    }


}  ?&gt;

<p>*Added 1 more action  action3 
*zf craete action action 3 test1</p>

&lt;?php

class Test1Controller extends Zend_Controller_Action
{

    public function init()
    {
        /* Initialize action controller here */
    }

    public function indexAction()
    {
        // action body
    }

    public function action1Action()
    {
        if (1&gt;2)
                {
    } 

    public function action2Action()
    {
        // action body
    }

    public function action3Action()
    {
        // action body
    }


} ?&gt;

<p>*notice the missing brecket in action1 - problem persists even with the update</p>

<p>*I have re-edited  action1 to
  public function action1Action()
    {
        if (1&gt;2)
        {
        }
        //
    }</p>

<ul><li>notice the "//" characters added </li>
<li>after running:  zf crate action action4 test1
&lt;?php

class Test1Controller extends Zend_Controller_Action
{

    public function init()
    {
        /* Initialize action controller here */
    }

    public function indexAction()
    {
        // action body
    }

    public function action1Action()
    {
        if (1&gt;2)
                {
                }
                //
    }

    public function action2Action()
    {
        // action body
    }

    public function action3Action()
    {
        // action body
    }

    public function action4Action()
    {
        // action body
    }
}?&gt;</li>
</ul><p>*notice that the brecket is not missing anymore
*in fact , if any characters are in between the 2 breckets the brecket won't be deleted - this happens without the update too
*ALTOUGH the ident problem still persists</p>

<p>*My Conclusion: 
*With or without the update the "missing brecket" problem persists
*With or without the update the ident problem persists
*Can aviod the missing brecket if ANY characters inserted between the breckets but the ident problem persists(added neutral code like"//" or ";" but any code is ok) 
*The position of the 2 breckets doesn't matter \
    *I have tested this too:
     public function action1Action()
    {        if (1&gt;2)                {}    }</p>

<p>*BTW I'm using Xp sp3 , Xampp Lite server , zend 1.10.8</p>

<p>Hope this helps you find the solution .Thank you for the reply.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-05-12T03:43:24.000+0000</p> 
        <div class="body">
            <p>Duplicate of ZF-9502</p>

        </div>
    </div>
    </div>

