<h2>ZF-3983: Zend cache (backend FILE) not optimized</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Performance Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-18T08:05:25.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-08-29T12:53:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend cache (Backend File)  has major -&gt;get() and -&gt;save() methods to handle cache operations. So, we have some custom logic sripts (sql quieries and ...) between these methods. If our custom script (between methods) requires some time to handle result for caching (i mean for saving) , while the site has many user requests, some of simultaneous user requests cause script logics dublicate executing. I have tested this and got log with double cache saving. I thinks, this is not optimal. I suggest create some mechanism: when first script tries -&gt;get() cache and gets status for cache revalidating, it should set flag in progress or just change expire time, and then do script logic for saving new result  to cache. This way, other simultaneous requests will get previos cache resuls, before new result will be updated. By the way, I tried to modify Cache Backend  File class, i meant to add some new functionalyt to it, but all necessary methods have private types:)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-08-29T12:53:44.000+0000</p> 
        <div class="body">
            <p>same thing than  #ZF-2685</p>

        </div>
    </div>
    </div>

