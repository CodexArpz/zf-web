<h2>ZF2-96: Locator Dispatch Security</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-11-01T22:47:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-20T13:58:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Mvc</li>
            <li>Dispatch</li>
            <li>Locator</li>
            <li>Security</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>i dont like this row:</p>

<p><a href="https://github.com/zendframework/zf2/blob/master/library/Zend/Mvc/Application.php#L288">https://github.com/zendframework/zf2/â€¦</a></p>

<p>try {
controller = $locator-&gt;get($controllerName);
} catch (ClassNotFoundException $exception) {</p>

<p>i use a selfwritten DiC, if the -&gt;get function is called, my DiC build a graph and create all (nested) instances - so all constructors are called. i dont want the frontend-user to be able to call the constructors of the classes managed in the DiC.</p>

<p>may an alternative would be a function like $locator-&gt;getClassname() and using reflection to figure out if the class implements Dispatchable</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-07-26T20:04:24.000+0000</p> 
        <div class="body">
            <p>[~padraic] ping</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-26T20:43:01.000+0000</p> 
        <div class="body">
            <p>This should be resolved as of RC1.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-08-18T08:57:20.000+0000</p> 
        <div class="body">
            <p>If IIRC this was already fixed.</p>

<p>[~timglabisch] Can you verify again?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-08-20T13:58:44.000+0000</p> 
        <div class="body">
            <p>This was fixed prior to RC1, and a fix for DI was included in RC2. The solution was to require a whitelist of controllers that the controller loader (and DI container) can instantiate; any that fall outside that will be ignored, resulting in a 404.</p>

        </div>
    </div>
    </div>

