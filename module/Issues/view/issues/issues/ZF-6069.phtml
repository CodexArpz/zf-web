<h2>ZF-6069: Wrong header encoding</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-03-19T10:51:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-18T02:37:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Christian (cptbrauser)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Mail::_encodeHeader() does not work correctly for some combinations of charset and string length.</p>

<p>As described in RFC 2047:
<a href="http://www.faqs.org/rfcs/rfc2047.html">http://www.faqs.org/rfcs/rfc2047.html</a>
An 'encoded-word' may not be more than 75 characters long, including
   'charset', 'encoding', 'encoded-text', and delimiters.  If it is
   desirable to encode more text than will fit in an 'encoded-word' of
   75 characters, multiple 'encoded-word's (separated by CRLF SPACE) may
   be used.</p>

<p>This CRLF SPACE was added only for the message itself, but not including meta prefix and postfix (charset, encoding) as it should. Try to send a mail using charset="utf-8" (1. constructor parameter for Zend_Mail) and a subject like this:</p>

<p>Neue Nachricht im Stat@las: RE: RE: Nachrichten im Postausgang l√∂schen</p>

<p>You'll get</p>

<pre class="highlight"><code>
=?utf-8?Q?Neue=20Nachricht=20im=20Stat@las:=20RE=5F=20RE=5F=20Nachrichten=20im=20Postausgang=20l=C3=B6sche= n?=
</code></pre>

<p>As you can see, there's a whitespace at the end of this string. This is in fact a CRLF created by Zend_Mime::encodeQuotedPrintable($value) in _encodeHeader() after exactly 76 chars:</p>

<p>Neue Nachricht im Stat@las: RE: RE: Nachrichten im Postausgang l=C3=B6sche=
n</p>

<p>The following bugfix works, but I think it's not that beautiful:</p>

<pre class="highlight"><code>
    protected function _encodeHeader($value)
    {
        if (Zend_Mime::isPrintable($value)) {
            return $value;
        } else {
            $quotedValue  = Zend_Mime::encodeQuotedPrintable($value, 9999); // do NOT add CRLF now
            $quotedValue  = str_replace(array('?', ' ', '_'), array('=3F', '=20', '=5F'), $quotedValue);
            $encodedValue = '=?' . $this-&gt;_charset . '?Q?' . $quotedValue . '?=';
            $encodedValue = wordwrap($encodedValue); // add CRLF now
            return $encodedValue;
        }
    }
</code></pre>

<p>(sorry, missing new lines here in code, no idea how to fix that)</p>

<p>wordwrap() is used instead of chunk_split(), because it may destroy an entity occurence at position 76 of the string.</p>

<p>Edit:
See a discussion here (German):
<a href="http://phpforum.de/forum/showthread.php?p=1297240">http://phpforum.de/forum/showthread.php?p=1297240</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2009-04-04T03:25:48.000+0000</p> 
        <div class="body">
            <p>add code tag in the discription</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-06-12T13:22:01.000+0000</p> 
        <div class="body">
            <p>Which version was used to get this bug?</p>

<p>It seems it is not 1.8, which includes a bugfix for these problems. Can you verify this problem still occurs?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2009-09-18T02:37:27.000+0000</p> 
        <div class="body">
            <p>Veryfing the code in the bug comment I saw that this snippet is from a version &lt; 1.8 of Zend Framework, however the Mail HEader encoding Bug was fixed with 1.8.2 or something, so please upgrade to that specific version and re-open the issue if this is still occurring.</p>

        </div>
    </div>
    </div>

