<h2>ZF-6790: Control AMF serialization depth of an object tree</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-05-24T16:09:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:32.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In our project we want to control how far the Zend_Amf_Serializer digs in an object tree. Because in some cases we can have a very deep tree dumped in the AMF stream... For instance, something like this would be awesome :</p>

<pre class="highlight"><code> 
$server = new Zend_Amf_Server();
$server-&gt;serializationDepth = 3;
echo ($server-&gt;handle());
</code></pre>

<p>Besides, rather than just replacing too-deep objects by null, the serializer could replace them by an object indicating that the object has to be loaded (kind of lazy-loading)</p>

<p>I am not sure if there are already patterns for these behaviors (I did not find any on Java's RMI... but I am certainly no expert).</p>

<p>Thanks,</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:32.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

