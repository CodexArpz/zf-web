<h2>ZF-3945: Zend_Form::addDefaultElementValidators() and similar</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-08-13T12:19:06.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:43.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jaka Jancar (jaka)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3237">ZF-3237</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I think it would make sense to add the option to Zend_Form to automatically add some filters/validators to elements created through it.</p>

<p>Example:
 - Create form
 - Set whitespace trimmer as the default form filter
 - Add elements "through" the form (addElement with text element name or createElement) with some filters of their own, i.e. an email field with an email validator
 - The default form element filters get prepended to the list of element-specific filters. For the email field, the value would first get trimmed and then validated as an email.</p>

<p>What do you think?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jaka Jancar (jaka) on 2008-08-13T12:23:45.000+0000</p> 
        <div class="body">
            <p>Actually, in Zend_Form::createElement()'s docComment it says:</p>

<p>??Elements created with this method will not be attached to the form, but will contain element settings as specified in the form object (including plugin loader prefix paths, default decorators, etc.).??</p>

<p>Default decorators? I don't think that's being done at all?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-09-09T08:36:48.000+0000</p> 
        <div class="body">
            <p>I don't think that doc comment really makes sense. Adding the plugin loader prefix paths does, but forms and form elements don't use the same decorators. By that, I mean that each has decorators specific to itself; Zend_Form was designed to have its own decorators not decorators that it propagates to the form elements added to it.</p>

<p>I would like to see a way of configuring default decorators, filters, and validators to set for elements added to a form that didn't require subclassing Zend_Form, though. Perhaps this could be done by configuring and passing in a Zend_Form_Element instance?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:43.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

