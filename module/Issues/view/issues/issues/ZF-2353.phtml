<h2>ZF-2353: Default view script path returns in spite of setScriptPath()</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-12-24T14:52:19.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-10T10:58:24.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm injecting my prepared view instance to the ViewRenderer in the bootsrap. I try to reset the view script path to my own via setScriptPath(), however during dispatch the dafault script path returns to the stack as the first entry.</p>

<p>Reproduction:</p>

<pre class="highlight"><code>
&lt;?php

require_once('library/Zend/Loader.php');
Zend_Loader::registerAutoload();

$frontController = Zend_Controller_Front::getInstance()-&gt;setControllerDirectory('controllers');

$view = new Zend_View();
$view-&gt;setScriptPath('views/anything');
Zend_Controller_Action_HelperBroker::getStaticHelper('ViewRenderer')-&gt;setView($view);

Zend_Debug::dump($view-&gt;getScriptPaths());

$frontController-&gt;dispatch();

Zend_Debug::dump($view-&gt;getScriptPaths());

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-14T11:48:36.000+0000</p> 
        <div class="body">
            <p>Can you give the debug output as you receive it, so I can better diagnose? I'm really not sure what the issue is; it may be intended behaviour, it may not, but I need to see that output, as well as a better description of what you expect the behaviour to be.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-03-23T13:03:25.000+0000</p> 
        <div class="body">
            <p>Sorry for the delay. Here's the output:</p>

<pre class="highlight"><code>
array(1) {
  [0] =&gt; string(15) "views/anything/"
}

Caught exception: script 'index/index.phtml' not found in path (Test/views/scripts/:views/anything/)

array(2) {
  [0] =&gt; string(19) "Test/views/scripts/"
  [1] =&gt; string(15) "views/anything/"
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-04-22T10:16:09.000+0000</p> 
        <div class="body">
            <p>The behavior you present is the expected and designed behavior. Paths in Zend_View are done as a LIFO stack, and new paths added are placed at the top of the stack. If a script is not found in one path, the next path is searched.</p>

<p>If you want or need different behavior, please extend Zend_View to provide it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joó Ádám (ceriak) on 2008-04-22T13:45:59.000+0000</p> 
        <div class="body">
            <p>But the new path is not added but set (setScriptPath())! It should delete all the previously set paths, shouldn't it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-10T10:58:04.000+0000</p> 
        <div class="body">
            <p>The ViewRenderer calls addBasePath(), not setScriptPath().</p>

        </div>
    </div>
    </div>

