<h2>ZF-7519: WARNING gets risen in Zend_Search_Lucene_Document_Html when using $query-&gt;highlightMatches() with Highlighter_Default</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-08-07T10:32:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-21T08:12:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Reopened</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7736">ZF-7736</a></li>
            <li><a href="/issues/browse/ZF-6574">ZF-6574</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12183/HtmlHighlightSavetyCheck.patch">HtmlHighlightSavetyCheck.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>After searching a big index with a <em>xxx</em> search term (xxx standing for any short and common phrase), and calling $query-&gt;highlightMatches() on all the strings stored in the result,</p>

<p>I sometimes got WARNINGs caused by
class Zend_Search_Lucene_Document_Html
line 400:
$wordsToHighlight = call_user_func_array('array_merge', $wordsToHighlightList);</p>

<p>because $wordsToHighlightList() was an empty array.</p>

<p>Writing a custom highlighter extending Zend_Search_Lucene_Search_Highlighter_Default I was able towork around this by not calling</p>

<p>$this-&gt;_doc-&gt;highlight($words, $color);</p>

<p>if $words as an empty array to begin with</p>

<p>I have not found out when and why 
Zend_Search_Lucene_Search_Highlighter::highlight() was called with an empty array as parameter. when using the $query-&gt;highlightMatches() function.</p>

<p>I do think this indicates a problem deeper down.</p>

<p>However Zend_Search_Lucene_Search_Highlighter_Default() should probably catch that case and/or
Zend_Search_Lucene_Document_Html::highlightMatches() should.</p>

<p>I had this problem with 1.8.2. however the code differences between 1.8.2and 1.9 are superficial and mostly deal with handling binary access to index files on disk, so I do belief all later versions are affected, too.</p>

<p>I also encountered extreme performance issues using $query-&gt;highlightMatches() (as in 30 seconds to highlight matches in around 100 words, using a 28k document index and roughly 100k terms in the index, doubling the search time.)</p>

<p>Result highlighting also seems to have issues if there are multi byte characters in the source. (highlighted areas are offset by the amount of multibyte characters prior to that position)</p>

<p>I finally fixed the issue for me by not using $highlightMatches , but writing my own highlighting routine based on $query-&gt;rewrite()-&gt;optimize()-&gt;-&gt;getQueryTerms() and comparing them to
tokens from $analyzer-&gt;tokenize("to be highlighted result text") ... -&gt;getTermtext() which i then can trace to source string positions.</p>

<p>Its way more performant than $query-&gt;highlightMatches(), produces more accurate results, doesnt cause the above bug, and works with non HTML source.</p>

<p>Important info:</p>

<p>I had used an analyzer that stored multiple tokens for the same position in source string (synonyme indexer)
I assume the original bug was caused by more than one of the indexed tokens for the same word in tobehighlighted / originally indexed text matched the search pattern. But that's a wild guess.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Corvus Corax (corvuscorax) on 2009-08-07T10:33:56.000+0000</p> 
        <div class="body">
            <p>the <em>xxx</em> is supposed to be xxx as  in lucene query languag.
unfortunately this bug tracker software made that bold
"<em>xxx</em>"</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Corvus Corax (corvuscorax) on 2009-09-02T06:22:35.000+0000</p> 
        <div class="body">
            <p>patch ZF-7736 should fix this issue, since the highlighter will always be called with non-empty arguments.</p>

<p>However it might still be good practice to catch the case of an empty argument in the highlighter itself.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Corvus Corax (corvuscorax) on 2009-09-02T07:11:06.000+0000</p> 
        <div class="body">
            <p>This patch should make the highlight function safe, it checks for emptyness before giving it to user_func_array('array_merge')...</p>

<p>I wonder - what purpose has this specific construct anyway? Why use call_user-func_array?</p>

<p>Could any code comments shed some light on that?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:56.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Corvus Corax (corvuscorax) on 2012-11-21T08:12:49.000+0000</p> 
        <div class="body">
            <p>Bug has been closed by default in "Bulk change". However patch is already attached to bug, what has been missing is a maintainer</p>

        </div>
    </div>
    </div>

