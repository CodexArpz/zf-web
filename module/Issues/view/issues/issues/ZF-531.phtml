<h2>ZF-531: Search is too slow</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-11-10T14:49:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.6.0 (16/Dec/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/10150/Filesystem.php">Filesystem.php</a></li>
            <li><a href="/issues/secure/attachment/10149/sl-index-opt.tar.gz">sl-index-opt.tar.gz</a></li>
            <li><a href="/issues/secure/attachment/10148/sl-index.tar.gz">sl-index.tar.gz</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It's initially reported by Garth Gillespie in FW-General mailing list: <a href="http://framework.zend.com/wiki/display/ZFMLGEN/mail/9328">http://framework.zend.com/wiki/display/â€¦</a></p>

<p>Search for two-terms multi-term query through 40K records index takes 40-90 seconds.</p>

<p>Test system is dual Xeon 2.4 with 2GB ram.</p>

<p>The same query takes ~1.5 seconds in other environment and on less powerful system.</p>

<p>Number of hits is ~8000.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Garth Gillespie (garth.gillespie) on 2006-11-10T16:25:26.000+0000</p> 
        <div class="body">
            <p>Thanks Alex.</p>

<p>I have made two new indexes for testing, one optimized, one not.</p>

<p>They can be downloaded at</p>

<p>(not optimized)
<a href="http://www.superlawyers.com:8080/sl-index.tar.gz">http://www.superlawyers.com:8080/sl-index.tar.gz</a></p>

<p>(optimized)
<a href="http://www.superlawyers.com:8080/sl-index-opt.tar.gz">http://superlawyers.com/sl-index-opt.tar.gz/</a></p>

<p>Both indexes open locally with Luke.</p>

<p>Test search times on website</p>

<p>unoptimized index</p>

<p>+altanta - 63 seconds - 1772 results
+los +angeles - 170 seconds - 4096 results
+los +angeles +barbanel - 1.03 seconds - 2 results</p>

<p>optimized index</p>

<p>+altanta - 16 seconds - 1141 results
+los +angeles - 20 seconds - 1462 results
+los +angeles +barbanel - .4 seconds - 1 results</p>

<p>i can't explain the different result amounts between the indexes.</p>

<p>system is dual xeon 2.4 - 2gb ram - kernel 2.6.9</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Garth Gillespie (garth.gillespie) on 2006-11-10T16:27:43.000+0000</p> 
        <div class="body">
            <p>I'll also add, I did upgrade to php 5.2 - so I do not have Optimizer being loaded ...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-11-13T06:05:40.000+0000</p> 
        <div class="body">
            <p>As I see unoptimized and optimized indices are different. Both indices are OK</p>

<p>I made another optimized index by optimizing sl-index.tar.gz index.
I'll attach sl-index.tar.gz and its optimized version to the issue.</p>

<p>'+los +angeles' query takes ~1.4 seconds with unoptimized index and ~1.14 with optimized.</p>

<p>I've prepared special version of library/Zend/Search/Lucene/Storage/File/FileSystem.php file, which calculates overall IO time.
This calculation takes time itself and increases query execution time:
'+los +angeles' unoptimized index - 1.4 =&gt; 2.8sec   calculated IO time - ~0.8sec
'+los +angeles' optimized index - 1.14 =&gt; 2.3sec   calculated IO time - ~0.6sec</p>

<h2>to get calculated IO time use:</h2>

<h2>echo "IO time: " . (Zend_Search_Lucene_Storage_File_Filesystem::$zendSearchLuceneIOTime) . "\n";</h2>

<p>Please test attached FileSystem.php file with your queries.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-11-13T06:11:08.000+0000</p> 
        <div class="body">
            <p>Unoptimized index</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-11-13T06:14:31.000+0000</p> 
        <div class="body">
            <p>Optimized index</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-11-13T06:16:13.000+0000</p> 
        <div class="body">
            <p>library/Zend/Search/Lucene/Storage/File/Filesystem.php</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Garth Gillespie (garth.gillespie) on 2006-11-13T11:25:13.000+0000</p> 
        <div class="body">
            <p>Hi Alexander,</p>

<p>Using your optimized index and modified Filesystem.php I get ..</p>

<p>'+los +angeles' optimized index =&gt; Overall Search Time - 106.22253298759 sec -- IO time: 0.38657212257385</p>

<p>I don't think this is an IO issue.</p>

<p>Did you see my question about Zend Optimizer?  Could that make a difference?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Garth Gillespie (garth.gillespie) on 2006-11-13T11:42:56.000+0000</p> 
        <div class="body">
            <p>Just an observation:</p>

<p>When I enter enough search terms to get a small result set (&lt;100) - the search times are good (&lt;2 sec).</p>

<p>Is there anything about how the result sets are handled that might be problematic on some systems?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Garth Gillespie (garth.gillespie) on 2006-11-13T14:43:02.000+0000</p> 
        <div class="body">
            <p>Further tests:</p>

<p>I setup another linux environment on my local machine.  Intel Core 2 Duo - 2.13Ghz and 2GB ram.</p>

<p>Apache (2.2.3) and PHP (5.2.0) configured as they are on the server</p>

<p>'+los +angeles' optimized index =&gt; Overall Search Time - 37.82331609726 sec - IO time: 0.14364194869995 (+4000) results</p>

<p>while faster than our server, still too slow for production.</p>

<p>my php configure is ...</p>

<p>./configure -v --with-apxs2=/usr/local/apache2/bin/apxs \
--with-mysql=/usr/lib --with-config-file-path=/etc/httpd \
--with-regex=php --with-gettext --with-gd \
--with-libxml-dir=/usr/lib \
--enable-memcache \
--without-sqlite --enable-sockets \
--with-expat-dir=/usr --with-zlib \
--with-iconv --with-xsl --enable-bcmath \
--with-curl=/usr/local/lib</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:26:54.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.6.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-11-14T15:25:58.000+0000</p> 
        <div class="body">
            <p>I've got the the same behavior (search too slow) with PHP V5.2. So I've reproduced the problem.</p>

<p>PHP 5.1.3RC3 - ~1sec
PHP 5.2.1-dev - 95sec</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2006-11-14T19:07:22.000+0000</p> 
        <div class="body">
            <p>The problem was in objects comparison.</p>

<p>Zend_Search_Lucene::find() method uses array_multisort() to sort hits array. array_multisort() compares array entries to sort them in appropriate order.
If entries in the first array (actually scores array) are equal, it tries to compare entries from the next array. It was hits array.</p>

<p>Each hit object has a protected property, which refers to the index object. Index is large and complex object, which refers to several others large and complex objects :)
Index reference is always the same for the same hits set. Thus all index object properties were compared recursively! :)</p>

<p>Something was changed in PHP object comparison behavior for PHP 5.2
Comparison of the first listed object property (which is actually 'protected $_index;' property) is involved before any other. It causes this nightmare.</p>

<p>I've added ids array to list of compared arrays. Ids are always unique, so objects will never be compared.
It solves the problem. It also make this sorting faster for PHP 5.1.x</p>

<p>Fix is committed into SVN and also will be available with next <a href="http://framework.zend.com/download/snapshot">nightly snapshot</a>.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Garth Gillespie (garth.gillespie) on 2006-11-14T20:17:00.000+0000</p> 
        <div class="body">
            <p>You rock Alexander.</p>

<p>'+los +angeles' optimized index =&gt; Overall Search Time - 1.6485729217529 sec - IO time: 0.31546688079834 (+4000) results</p>

<p>Thanks very much.  You can close this issue!</p>

<p>-Garth</p>

        </div>
    </div>
    </div>

