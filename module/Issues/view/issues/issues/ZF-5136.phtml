<h2>ZF-5136: Namespaces</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2008-12-02T04:53:45.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-02T08:09:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marek (xorock)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Dom_Query</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I know that Zend_Dom_Query is supposed  to be a simple component but do You plan to add namespaces support? Simple XML is not so simple when You have to query big document with multiple NSes provided. External project like phpquery also does not have it.
The action is described in <a href="http://www.w3.org/TR/css3-namespace/">http://www.w3.org/TR/css3-namespace/</a> document.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-12-02T08:07:57.000+0000</p> 
        <div class="body">
            <p>Currently, there are no plans to do so. Zend_Dom_Query was originally developed to support Zend_Test_PHPUnit, and for use as a general purpose screen scraper. Its CSS selector notation makes sense primarily in terms of (X)HTML markup.</p>

<p>Refactoring to support namespaces is beyond the realm of the issue tracker, and would require a proposal -- and somebody interested and willing to see it through. If you would like this support, I encourage you to create a proposal and/or find somebody interested in coding the support to do so.</p>

        </div>
    </div>
    </div>

