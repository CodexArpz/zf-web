<h2>ZF-11486: ZendAMF large result performance</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-06-16T17:26:26.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-06-16T19:36:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Wade Arnold (wadearnold)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Amf</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Using the latest 1.11.7 release.</p>

<p>MySQL database table consisting of 9 string columns and one ID (int) column. 1600 rows.
AMFPHP takes 200ms, ZendAMF takes 5 seconds. I've tried returning back an array instead. No performance increase.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-06-16T18:31:21.000+0000</p> 
        <div class="body">
            <p>Can you provide a sample row that we can use to better try and reproduce the issue?</p>

<p>Also, have you stripped require_once calls and replaced with autoloading? Are you using an opcode cache?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Masten (doobywho) on 2011-06-16T19:33:30.000+0000</p> 
        <div class="body">
            <p>No opcode cache in my debugging environment currently, although I have tried and it didn't make a difference with this.</p>

<p>This particular service call doesn't have any require_once calls.</p>

<p>I've attached two database table examples. I use an join to link the insurance company table to the state table. The tables are located in two different databases as well.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Masten (doobywho) on 2011-06-16T19:36:38.000+0000</p> 
        <div class="body">
            <p>Ok, nevermind... I can't attach files. so here you go.</p>

<p>CREATE TABLE <code>states</code> (
  <code>id</code> int(11) NOT NULL AUTO_INCREMENT COMMENT 'State ID',
  <code>full_name</code> varchar(45) DEFAULT NULL COMMENT 'Full name of state',
  <code>abbr</code> varchar(5) DEFAULT NULL COMMENT 'Abbreviation for state',
  <code>active</code> tinyint(1) DEFAULT '1' COMMENT 'Is this state active?',
  PRIMARY KEY (<code>id</code>)
) ENGINE=InnoDB AUTO_INCREMENT=63 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='State link table';</p>

<p>insert into <code>states</code> values('1','TEXAS','TX','1');</p>

<p>CREATE TABLE <code>insurance_company</code> (
  <code>id</code> int(10) unsigned NOT NULL AUTO_INCREMENT,
  <code>Carrier Code</code> varchar(6) DEFAULT NULL,
  <code>Plan Type</code> varchar(3) DEFAULT NULL,
  <code>Plan name</code> varchar(60) DEFAULT NULL,
  <code>Address 1</code> varchar(60) DEFAULT NULL,
  <code>Address 2</code> varchar(45) DEFAULT NULL,
  <code>City</code> varchar(45) DEFAULT NULL,
  <code>Zip</code> varchar(10) DEFAULT NULL,
  <code>States_id</code> int(11) NOT NULL,
  PRIMARY KEY (<code>id</code>,<code>States_id</code>),
  KEY <code>States_id</code> (<code>States_id</code>)
) ENGINE=InnoDB AUTO_INCREMENT=1485 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='Insurance Companies';</p>

<p>insert into <code>insurance_company</code> values('1','AETNA','PI','AETNA HMO','PO BOX 981106',null,'EL PASO','79998','1');</p>

<p>My database of insurance companies has about 1600 rows.</p>

        </div>
    </div>
    </div>

