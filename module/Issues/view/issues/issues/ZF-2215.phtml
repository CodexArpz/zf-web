<h2>ZF-2215: Zend_Rest_Client adds last given argument as arg1 </h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-11-18T06:16:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-28T02:12:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Satoru Yoshida (satoruyoshida)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Rest_Client</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-4089">ZF-4089</a></li>
            <li><a href="/issues/browse/ZF-2044">ZF-2044</a></li>
            <li><a href="/issues/browse/ZF-2467">ZF-2467</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using named arguments Zend_Rest_Client adds an additional argument named arg1 to the call. In combination with Zend_Rest_Server the first given argument is overwritten by the last one.</p>

<pre class="highlight"><code>
$client = new Zend_Rest_Client('<a href="http://www.example.com/rest/">http://www.example.com/rest/</a>');
$client-&gt;method('divide');
$client-&gt;one(4);
$client-&gt;two(3);

$erg =  $client-&gt;get();
</code></pre>

<p>get() uses this URL:</p>

<pre class="highlight"><code>
/rest/?method=divide&amp;arg1=3&amp;one=4&amp;two=3&amp;rest=1
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2008-05-07T09:18:55.000+0000</p> 
        <div class="body">
            <p>Had the same issue.
Solved the problem by commenting out one line of Zend/Rest/Client.php. See below: $this-&gt;_data['arg1']  = $args[0];</p>

<pre><code>public function __call($method, $args)
{
    $methods = array('post', 'get', 'delete', 'put');

    if (in_array(strtolower($method), $methods)) {
        if (!isset($args[0])) {
            $args[0] = $this-&gt;_uri-&gt;getPath();
        }
        $this-&gt;_data['rest'] = 1;
        $data = array_slice($args, 1) + $this-&gt;_data;
        $response = $this-&gt;{'rest' . $method}($args[0], $data);
        return new Zend_Rest_Client_Result($response-&gt;getBody());
    } else {
        // More than one arg means it's definitely a Zend_Rest_Server
        if (sizeof($args) == 1) {
            $this-&gt;_data[$method] = $args[0];
            //$this-&gt;_data['arg1']  = $args[0];
        } else {
            $this-&gt;_data['method'] = $method;
            if (sizeof($args) &gt; 0) {
                foreach ($args as $key =&gt; $arg) {
                    $key = 'arg' . $key;
                    $this-&gt;_data[$key] = $arg;
                }
            }
        }
        return $this;
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Herbert G. Fischer (hgfischer) on 2008-06-04T11:46:55.000+0000</p> 
        <div class="body">
            <p>Looks like issues ZF-2467, ZF-2215, ZF-2044 are all related to this problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2008-06-10T02:04:47.000+0000</p> 
        <div class="body">
            <p>This issue is still existing in v1.5.2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2008-08-25T02:25:27.000+0000</p> 
        <div class="body">
            <p>...and is still existing in v1.5.3...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-10-09T06:24:57.000+0000</p> 
        <div class="body">
            <p>Does it depend on ZF-4089, doesn't it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2008-10-17T16:17:37.000+0000</p> 
        <div class="body">
            <p>Sorry, but the changes in v1.6.2 doesn't fix this issue.
Have a look at the original description.
When stepping through a debugger one can see that the first call $client-&gt;method('divide'); results in $this-&gt;_data['method'] being set to 'method' on line 240.
$this-&gt;_data['arg1'] is set to 'divide' on line 241.</p>

<p>Maybe the whole call sequence used in the original description is wrong. But I have my doubts.
When writing line 240 as $this-&gt;_data[$method] = $args[0]; and omitting line 241 the call sequence used in the original desription of this issue will work as expected. And it doesn't seem to have any problematic side effects.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2008-10-18T02:42:16.000+0000</p> 
        <div class="body">
            <p>I have to correct my last comment.
The described workaround doesn't work if the call uses exactly one parameter.
So it seems that Zend_Rest_Client cannot be used with the call sequence described above by Carsten Möhrke.
The reason why I also had problems with this is because I followed a chapter in the (german) book about Zend Framework written by Carsten Möhrke.</p>

<p>So there are two options:</p>

<h1>1: Zend_Rest_Client is intended to support a call sequence where one uses a call of e.g. client-&gt;method('divide') and setting named parameters the way Carsten Möhrke did above. Then this issue is still unresolved.</h1>

<h1>2: Zend_Rest_Client is <em>not</em> intended to support a call sequence as in Carsten Möhrke's above example.</h1>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-10-20T06:07:00.000+0000</p> 
        <div class="body">
            <p>Thank You for Your detailed explanation , Johannes Schlimm.</p>

<p>Now, I understand if we call functions twice more before post(), get(), delete() or put(), it causes wrong uri parameter.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by old of Satoru Yoshida (yoshida@zend.co.jp) on 2008-10-20T23:28:25.000+0000</p> 
        <div class="body">
            <p>Solved in r12048</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:07.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

