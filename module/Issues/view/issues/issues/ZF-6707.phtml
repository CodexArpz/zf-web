<h2>ZF-6707: Zend_Application_Resource_Modules with setFallbackAutoloader turned on causes failure</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-17T15:27:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-06-24T21:20:21.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Application</li>
            <li>Zend_Loader</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you have setFallbackAutoloader turned on:</p>

<pre class="highlight"><code>
$autoloader = Zend_Loader_Autoloader::getInstance()-&gt;setFallbackAutoloader(true);
</code></pre>

<p>Then the call to class_exists() in Zend_Application_Resource_Modules to load the {Module}_Bootstrap class will fail.</p>

<p>Here is the patch to correct the issue:</p>

<pre class="highlight"><code>
Index: Modules.php
===================================================================
--- Modules.php (revision 15619)
+++ Modules.php (working copy)
@@ -38,8 +38,8 @@
 
     /**
      * Constructor
-     * 
-     * @param  mixed $options 
+     *
+     * @param  mixed $options
      * @return void
      */
     public function __construct($options = null)
@@ -68,7 +68,7 @@
             }
 
             $bootstrapClass = $this-&gt;_formatModuleName($module) . '_Bootstrap';
-            if (!class_exists($bootstrapClass)) {
+            if (!class_exists($bootstrapClass, false)) {
                 $bootstrapPath  = $front-&gt;getModuleDirectory($module) . '/Bootstrap.php';
                 if (file_exists($bootstrapPath)) {
                     include_once $bootstrapPath;
@@ -90,7 +90,7 @@
 
     /**
      * Get bootstraps that have been run
-     * 
+     *
      * @return ArrayObject
      */
     public function getExecutedBootstraps()
@@ -100,8 +100,8 @@
 
     /**
      * Format a module name to the module class prefix
-     * 
-     * @param  string $name 
+     *
+     * @param  string $name
      * @return string
      */
     protected function _formatModuleName($name)
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Chris Jones (leeked) on 2009-05-17T15:28:11.000+0000</p> 
        <div class="body">
            <p>Updating title to be more descriptive</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Miroslav Kubelik (koubel) on 2009-06-17T05:07:09.000+0000</p> 
        <div class="body">
            <p>Yes, this is very annoing and it doesn't have any useful workaround, maybe enable fallback autoloader at the end of module_bootstrap,
I'm voting for it please. Patch seems very easy. It's still in 1.8.3.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2009-06-24T21:20:19.000+0000</p> 
        <div class="body">
            <p>Fixed with solution for ZF-7002</p>

        </div>
    </div>
    </div>

