<h2>ZF-9142: Zend_Validate::is() no longer loads validator</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-02-11T03:54:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-02-19T12:12:56.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                David Muir (dmuir)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>&lt;?php Zend_Validate::is($email, 'EmailAddress'); ?&gt;
results in:
Fatal error: require() [function.require]: Failed opening required 'EmailAddress.php'</p>

<p>The culprit is on line 200:
if (!class_exists($className)) {</p>

<p>It should be:
if (!class_exists($className, false)) {</p>

<p>otherwise __autoload gets called</p>

<p>It worked in previous versions if Zend_Validate was the only namespace available, but the new version tries to load the className without a namespace first.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by David Muir (dmuir) on 2010-02-11T04:39:19.000+0000</p> 
        <div class="body">
            <p>Removed "It is not an issue if there is no __autoload function declared or if spl_autoload is used instead." as it is not true.
I still get a fatal error even when spl_autoload is used.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jake McGraw (jakemcgraw) on 2010-02-16T09:57:20.000+0000</p> 
        <div class="body">
            <p>I can confirm this bug, occurring in ZF 1.10.0</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-16T12:17:45.000+0000</p> 
        <div class="body">
            <p>This is unlogical.
class_exists will never throw an fatal error because of "require()".
Please give a complete stacktrace for reproduction.</p>

<p>When your set autoloader does not load the file, then Zend_Loader tries to load it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jake McGraw (jakemcgraw) on 2010-02-16T12:32:39.000+0000</p> 
        <div class="body">
            <p>[16-Feb-2010 12:37:34] PHP Warning:  include_once(Int.php) [<a href="function.include-once">function.include-once</a>]: failed to open stream: No such file or directory in /usr/share/pear/
Zend/Loader.php on line 146
[16-Feb-2010 12:37:34] PHP Stack trace:
[16-Feb-2010 12:37:34] PHP   1. {main}() /data/sandboxes/jmcgraw/stable/<a href="www.foobar.com/admin/campaign/index.php:0">www.foobar.com/admin/campaign/index.php:0</a>
[16-Feb-2010 12:37:34] PHP   2. require() /data/sandboxes/jmcgraw/stable/<a href="www.foobar.com/admin/campaign/index.php:3">www.foobar.com/admin/campaign/index.php:3</a>
[16-Feb-2010 12:37:34] PHP   3. Zend_Controller_Front-&gt;dispatch() /data/sandboxes/jmcgraw/stable/includes/zend_framework_app/campaign/bootstrap/default.php:227
[16-Feb-2010 12:37:34] PHP   4. Zend_Controller_Dispatcher_Standard-&gt;dispatch() /usr/share/pear/Zend/Controller/Front.php:954
[16-Feb-2010 12:37:34] PHP   5. Zend_Controller_Action-&gt;__construct() /usr/share/pear/Zend/Controller/Dispatcher/Standard.php:262
[16-Feb-2010 12:37:34] PHP   6. TargetingController-&gt;init() /usr/share/pear/Zend/Controller/Action.php:133
[16-Feb-2010 12:37:34] PHP   7. CampaignSandboxController-&gt;init() /data/sandboxes/jmcgraw/stable/includes/zend_framework_app/campaign/controllers/TargetingController.php:72
[16-Feb-2010 12:37:34] PHP   8. CampaignController-&gt;init() /data/sandboxes/jmcgraw/stable/includes/zend_framework_app/campaign/library/CampaignSandboxController.php:97
[16-Feb-2010 12:37:34] PHP   9. Zend_Validate::is() /data/sandboxes/jmcgraw/stable/includes/zend_framework_app/campaign/library/CampaignController.php:76
[16-Feb-2010 12:37:34] PHP  10. class_exists() /usr/share/pear/Zend/Validate.php:200
[16-Feb-2010 12:37:34] PHP  11. Zend_Loader_Autoloader::autoload() /usr/share/pear/Zend/Loader/Autoloader.php:0
[16-Feb-2010 12:37:34] PHP  12. call_user_func() /usr/share/pear/Zend/Loader/Autoloader.php:130
[16-Feb-2010 12:37:34] PHP  13. Zend_Loader_Autoloader-&gt;_autoload() /usr/share/pear/Zend/Loader/Autoloader.php:0
[16-Feb-2010 12:37:34] PHP  14. call_user_func() /usr/share/pear/Zend/Loader/Autoloader.php:474
[16-Feb-2010 12:37:34] PHP  15. Zend_Loader::loadClass() /usr/share/pear/Zend/Loader/Autoloader.php:0
[16-Feb-2010 12:37:34] PHP  16. Zend_Loader::loadFile() /usr/share/pear/Zend/Loader.php:94</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-16T12:45:31.000+0000</p> 
        <div class="body">
            <p>Additionally wether Zend_Loader nor Zend_Validate are using the method require.</p>

<p>The question is what sort of code you integrated on your side which throws an "require()" error. ZF itself only uses require_once. You can check this simply by searching for require within Zend_Validate and Zend_Loader</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-16T13:13:38.000+0000</p> 
        <div class="body">
            <p>Thank you for the stacktrace.</p>

<p>There is one thing which did not happen before 1.10.
Using "class_exists()" should ONLY return a true or false.</p>

<p>Otherwise this would mean that class_exists() does no longer wook which is itself an failure.</p>

<p>It seems that this is a problem of Zend_Loader.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2010-02-16T13:14:29.000+0000</p> 
        <div class="body">
            <p>As I already discussed with Matthew Weier O'Phinney in ZF-9082: The documentation [<a href="http://framework.zend.com/manual/en/performance.classloading.html">http://framework.zend.com/manual/en/…</a>], section "Strip require_once calls with find and sed" seems to be wrong (regarding ZF 10.0.0 and ZF 10.0.1). Because all occurrences of require_once("Zend/Loader.php"); are also being commented out. And it seems that's at least one time too much.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jake McGraw (jakemcgraw) on 2010-02-16T13:20:12.000+0000</p> 
        <div class="body">
            <p>Just wanted to let you know, this issue is NOT present in 1.9.7. We rolled back after upgrading using the zfcampus PEAR channel.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Johannes Schlimm (schlimmer) on 2010-02-16T13:21:45.000+0000</p> 
        <div class="body">
            <p>Also please have a look at the documentation of class_exists in the PHP manual [<a href="http://www.php.net/manual/de/function.class-exists.php">http://php.net/manual/de/…</a>]. As of PHP 5.0.0 it has a second parameter autoload wich defaults to true. If this second parameter isn't explicitly set to false, class_exists will try to load the class, using whatever is defined to (auto)load classes.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-16T13:51:07.000+0000</p> 
        <div class="body">
            <p>Stripping require_once is not the case for this issue.</p>

<p>Regarding the footprint of class_exists: I knew this. The point is that it's intentionally to look if a autoloader is able to load the class. And only when the autoloader fails, THEN Zend_Validate will use it's set namespace directories. This way was also available within 1.9.7 which you mentioned.</p>

<p>Disallowing the autoloader to search for the class means also that you must change your own code as you must set the namespace manually instead of letting the autoloader doing his work.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Muir (dmuir) on 2010-02-16T19:13:05.000+0000</p> 
        <div class="body">
            <p>The fatal error was because I was using require in my autoloader. Thanks Johannes for pointing me to Matthew's comment in ZF-9082.</p>

<p>{quote}
This way was also available within 1.9.7 which you mentioned.
{quote}</p>

<p>Yes, the problem showed up previously if other namespaces were added to Zend_Validate. But now the problem is worse as it shows up every time (unless the non-namespaced validator actually does exist).</p>

<pre class="highlight"><code>
require 'Zend/Loader/Autoloader.php';
$autoloader = Zend_Loader_Autoloader::getInstance();
$autoloader-&gt;setFallbackAutoloader(true);

echo Zend_Validate::is('1', 'Int');
</code></pre>

<p>The solutions are:</p>

<p>Suppress warnings (which I'd consider to be a bad idea)</p>

<pre class="highlight"><code>
$autoloader-&gt;suppressNotFoundWarnings(true);
</code></pre>

<p>Don't use Zend_Validate::is() and instead use the validation classes directly</p>

<pre class="highlight"><code>
$validate = new Zend_Validate_Int();
$validate-&gt;isValid('1');
</code></pre>

<p>Or specify the namespace explicitly</p>

<pre class="highlight"><code>
Zend_Validate::is('1', 'Zend_Validate_Int'));
</code></pre>

<p>Kind of defeats the purpose of using Zend_Validate::is() and is, according to you, exactly what you're trying to avoid by having class_exists call the autoloader.</p>

<p>I don't really see a way around it though.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-02-19T12:12:56.000+0000</p> 
        <div class="body">
            <p>Fixed with r21097</p>

        </div>
    </div>
    </div>

