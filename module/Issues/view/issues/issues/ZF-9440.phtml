<h2>ZF-9440: Zend_CodeGenerator_Php_Property_DefaultValue fails to render multidimensional array with TYPE_ARRAY set</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-17T01:40:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:37:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_CodeGenerator</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12909/fixZF-9440.diff">fixZF-9440.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using Zend_CodeGenerator_Php_Property_DefaultValue and setting a multidimensional array as the value and setting Zend_CodeGenerator_Php_Property_DefaultValue::TYPE_ARRAY as type i get:</p>

<p>Fatal error: Call to a member function setArrayDepth() on a non-object in /home/developer/projects/zftrunk/library/Zend/CodeGenerator/Php/Property/DefaultValue.php on line 294</p>

<p>Based on this i wrote an additional unittest to show this behavior</p>

<pre class="highlight"><code>
public function testPropertyDefaultValueCanHandleMultidimensionalArray()
{
    $propDefaultValue = new Zend_CodeGenerator_Php_Property_DefaultValue();
    $propDefaultValue-&gt;setValue(array('foo' =&gt; array('bar' =&gt; 'baz'), 'bar' =&gt; array('foo' =&gt; 'baz')));
    $expected = 'array(
    \'foo\' =&gt; array(\'bar\' =&gt; \'baz\'),
    \'bar\' =&gt; array(\'foo\' =&gt; \'baz\')
    );';
    $this-&gt;assertEquals($expected, $propDefaultValue-&gt;generate());
    $propDefaultValue-&gt;setType(Zend_CodeGenerator_Php_Property_DefaultValue::TYPE_ARRAY);
    $this-&gt;assertEquals($expected, $propDefaultValue-&gt;generate());
}
</code></pre>

<p>The first assertion works fine as TYPE_AUTO is used and a special handling for TYPE_ARRAY is then activated. (DefaultValue.php line 243)
The second assertion dies with mentioned error.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michael Pr√ºfer (m.pruefer) on 2010-03-17T01:49:57.000+0000</p> 
        <div class="body">
            <p>I made a patch which resolves the problem for me.</p>

        </div>
    </div>
    </div>

