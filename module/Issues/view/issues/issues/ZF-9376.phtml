<h2>ZF-9376: Memcache::delete reports notice with memcached 1.4.4</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-03-09T03:07:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-09T11:28:04.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.3 (01/Apr/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>
$mc = new Memcache();
$mc-&gt;addServer('127.0.0.1', 11211, false, 1, 1, 15, true, null);

$mc-&gt;set('test', 'testdata');
var_dump($mc-&gt;get('test'));
$mc-&gt;delete('test');
var_dump($mc-&gt;get('test'));
</code></pre>

<pre class="highlight"><code>
string(8) "testdata"
PHP Notice:  MemcachePool::delete(): Server 127.0.0.1 (tcp 11211, udp 0) failed with: CLIENT_ERROR bad command line format.  Usage: delete  [noreply]
 (0) in /tmp/test.php on line 8
bool(false)
</code></pre>

<p>Changing this to $mc-&gt;delete('test', 0); will fix this issue:</p>

<pre class="highlight"><code>
$mc = new Memcache();
$mc-&gt;addServer('127.0.0.1', 11211, false, 1, 1, 15, true, null);

$mc-&gt;set('test', 'testdata');
var_dump($mc-&gt;get('test'));
$mc-&gt;delete('test', 0);
var_dump($mc-&gt;get('test'));
</code></pre>

<pre class="highlight"><code>
string(8) "testdata"
bool(false)
</code></pre>

<p><a href="http://code.google.com/p/memcached/wiki/ReleaseNotes144">http://code.google.com/p/memcached/â€¦</a> :
Fixes
Add partial backwards compatibility for delete with timeout 0</p>

<p>Before version 1.4.0, there was an optional argument to delete that would allow a client to specify that a deleted object should exist in the cache after the deletion occurred such that add operations would fail even though objects did not appear in the cache.</p>

<p>This feature was removed completely in 1.4.0, but a parser bug caused it to slip through. The bug was fixed in 1.4.3. If anyone was attempting to use it legitimately in the 1.4 series, it would simply not work as expected.</p>

<p>The 1.4.4 backwards compatibility change allows specifically the value of 0 (i.e. non-lingering delete), while continuing to reject others. This will satisfy clients that always wish to send a value even when they do not wish the item to linger.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-03-09T11:28:03.000+0000</p> 
        <div class="body">
            <p>fixed in r21420 (trunk) &amp; r21421 (1.10 branch)</p>

        </div>
    </div>
    </div>

