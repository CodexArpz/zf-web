<h2>ZF-9485: Invalid Docblocks throughout whole codebase</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Docs:  Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-03-19T20:08:11.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-04T12:49:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.5 (26/May/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Commonly I see syntax like:</p>

<p>@return PDO_Statement|Zend_Db_Statement
Everytime I get your updates I go in and change to:</p>

<p>@return Zend_Db_Statement | PDO_Statement
Is it a lot to ask for a valid doc block that works with my IDE's code completion? I don't know that your method is even valid.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (josh.ribakoff@gmail.com) on 2010-03-19T20:12:23.000+0000</p> 
        <div class="body">
            <p>Found that example in Zend_Db_Select (line 678).</p>

<p>Why not have one select subclass for PDO people, and another subclass for Zend_Db people, so everyone's code completions work everywhere consistently?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2010-03-20T05:56:45.000+0000</p> 
        <div class="body">
            <p>The OR operator is a valid annotation, and is actually primarily for use with phpDocumentor in compiling our API docs. I'm actually unsure if adding spaces around the operator will work with phpDocumentor; my recollection is that it may not.</p>

<p>Would you be willing to do a test to see if phpDocumentor respects whitespace around the OR operator? If it does, we can fix this with some simple find+sed scripts.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Josh Ribakoff (josh.ribakoff@gmail.com) on 2010-03-20T13:33:31.000+0000</p> 
        <div class="body">
            <p>I went and read up on this:</p>

<p>" If you want to explicitly show multiple possible return types, list them pipe-delimited without spaces (e.g. "@return int|string")."</p>

<p>I guess we should not deviate from that even if it happens to work, because we would have no guarantee of forwards compatibility.</p>

<p>It would be nice if the ZF team could put together a list of "recommended IDEs" though. (I'm sure Zend inc. would not turn down the chance to put their own product on that list)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-05-04T12:49:13.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue.</p>

<p>As mentioned above we should not change the docblocks as the standard is used (without spaces)</p>

        </div>
    </div>
    </div>

