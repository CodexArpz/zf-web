<h2>ZF-7685: Querying the index with special characters and wildcards</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-08-25T08:06:12.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:51.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7688">ZF-7688</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have an index with a Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8Num_CaseInsensitive analyzer.</p>

<p>When I query the index with the query "foo_bar*" (without quotes) I get the following exception: 
Zend_Search_Lucene_Search_QueryParserException' with message 'Wildcard search is supported only for non-multiple word terms' in Zend/Search/Lucene/Search/Query/Preprocessing/Term.php:182</p>

<p>I get no exception when I query with the query "foo bar*".</p>

<p>I've looked within Term.php and in the first example with "foo_bar*" as query, the analyzer tokenizes the query index into 'foo' and 'bar' but in the second example to only 'bar'. The first example given me therefor an exception because on line 180:
{{
if (count($tokens) &gt; 1) {
throw exception;
}
}}</p>

<p>I'm a bit confused on how the analyzer works because if the analyzer tokenizes words in cases of characters like an underscore or an '@'-sign <em>and</em> with plain spaces I would expect to get an exception in both cases. For some reason, it doesn't seem to tokenize the query "foo bar*" into 2 tokens where I would've expected it.</p>

<p>Now, to work around this I could rerun the analyzer to check if the query got tokenized into multiple tokens. If the only 1 token is found i could append a wildcard (because my app requires it that way) and otherwise I should not append it.</p>

<p>Is this just a limitation of the module or doesn't the analyzer work properly?
Please shine some light into this one :) Thanks!</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Corvus Corax (corvuscorax) on 2009-08-30T18:48:20.000+0000</p> 
        <div class="body">
            <p>the other bug has all the comments ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:51.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

