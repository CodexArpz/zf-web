<h2>ZF-4343: Setting request object to front controller in MVC app doesn't work</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-09-21T10:06:48.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-07T20:42:11.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ashley Kitson (akzincdig)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Consider the following code:</p>

<pre><code>$front = Zend_Controller_Front::getInstance();
$request = new Zend_Controller_Request_Http();
$request-&gt;setModuleName('system')
        -&gt;setControllerName('install')
        -&gt;setActionName('index');
$front-&gt;setRequest($request);
$front-&gt;dispatch();
</code></pre>

<p>I would expect, from reading the documentation, that the system/install/index module/controller/action would be run on dispatch.  It doesn't.</p>

<p>If I replace the request instantiation with</p>

<pre><code>$request = new Zend_Controller_Request_Http("http://myserver.com/system/install/index");
</code></pre>

<p>The correct page is displayed</p>

<p>I shouldn't need to know about my base url to set a request object programmatically or do I?</p>

<p>Anyway I think this is a bug because I cannot use the set...Name() functionality as I believe was intended and documented.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-11-07T20:42:02.000+0000</p> 
        <div class="body">
            <p>Actually ,the request object you pass in <em>is</em> used.</p>

<p>The issue here is that the <em>router</em> overwrites all parameters with the defaults found during routing. The default route defines the index controller and index action as defaults and sets them if nothing is matched -- overwriting the values set prior to dispatch.</p>

<p>The only ways to get around this at this time are to:
* Remove the default route from the router
* Override the default route such that it does not contain default values
* Define a null router that does nothing</p>

        </div>
    </div>
    </div>

