<h2>ZF-7260: Zend_Tool Features for 1.9</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-07-14T06:29:27.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-23T13:42:45.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Tool</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <ul><li><p>-<em>PHP Config processing</em>-
** -<em>Should we use specific keys to do ini_set at zf.php startup time</em>-
*** -<em>include_path</em>-
*** -<em>error_settings, etc (downside is that we can only change runtime values)</em>-</p></li>
<li><p><em>Zend_Tool Configuration</em>
** <em>Local storage will be inside $ZF_HOME</em>
*** -<em>$ZF_HOME known as $HOME/.zf/ (unless env var says otherwise)</em>-
**** -<em>should we support both $HOME/zf.ini and $ZF_HOME/zf.ini ?</em>-
*** -$client-&gt;getConfig()-&gt;getRealPath('profiles/default.xml') would return the full path to $ZF_HOME/profiles/default.xml if it exists or false-</p></li>
<li><p>-<em>zf.php</em>-
** -<em>Will process the ini first as parse_ini()</em>-
*** -<em>this will allow us to extract php settings</em>-
*** -<em>Will be processed a second time when Zend_Tool_Client_Configuration (or _Options) has a chance to get the file and run.  This will use Zend_Config and will  be Zend_Config writable</em>-</p></li>
<li><p>Provider changes
** any delete() actions will check to see if a force option is set in ini, if so then it will not ask if its ok to delete something
** -Provider will check the directory for profiles/default.xml-
** -Provider will support --profile-name $name, where $name is profiles/$name.xml-
** Module Provider will check directory for profiles/modules.xml before attempting to clone the application node.</p></li>
<li><p>Context changes
** search for known key for content on specific context actions
*** create(), for example, should look for context.htaccess.create.content OR context.htaccess.create.codeGenerator
**** key would be a path to a file that has either a codeGenerator script (user would have to know to use the provied $codeGenerator object, and know its type)
*** other actions should always look for a codeGenerator</p></li>
<li><p><em>Setup Script</em>
** <em>Should only live in svn</em>
** <em>Its purpose:</em>
*** <em>setup (interactively) $ZF_HOME</em>
*** copy the default.xml &amp; module.xml profiles
*** <em>create the stock zf.ini file</em>
*** <em>interactively get values and confirm values</em>
**** include_path
**** loaders
**** Zend Framework path</p></li>
<li><p>Zend_Tool new Loader
** There will be a new loader introduced, it will take paths and recurse them.
** Functionality will be pulled from includPathLoader, and IncludePathLoader will extend this loader. (Or a base loader will be used)
** Loader will check for config values:
*** client.loader.paths[]</p></li>
</ul>
    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-07-15T06:50:55.000+0000</p> 
        <div class="body">
            <p>Added notes, bold is for alpha release</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-09-23T13:42:38.000+0000</p> 
        <div class="body">
            <p>Closing issue.</p>

        </div>
    </div>
    </div>

