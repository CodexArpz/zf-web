<h2>ZF-11932: Zend_Json::encode checks for method &quot;toJson&quot; on objects - Zend_Json_Encoder does not.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-12-09T23:04:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-02-26T16:12:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Eric Thompson (etoreo)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Json</li>
            <li>View_Helper</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-9521">ZF-9521</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Json::encode checks for and uses the method "toJson" on the passed object (if its an object and the method exists).  This is a very handy trick.  However, when used from the Json view helper, the Zend_Json_Encoder::_encodeValue() method does not make the same check.</p>

<p>Here is my fix (added first two lines to function):</p>

<pre class="highlight"><code>
    protected function _encodeValue(&amp;$value)
    {
        if (is_object($value) &amp;&amp; method_exists($value, 'toJson')) {
            return $value-&gt;toJson();
        } else if (is_object($value)) {
            return $this-&gt;_encodeObject($value);
        } else if (is_array($value)) {
            return $this-&gt;_encodeArray($value);
        }

        return $this-&gt;_encodeDatum($value);
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-02-26T16:12:38.000+0000</p> 
        <div class="body">
            <p>This is fixed in SVN trunk and will (hopefully) be included in the next release.  For more details see ZF-9521</p>

        </div>
    </div>
    </div>

