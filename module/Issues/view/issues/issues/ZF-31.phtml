<h2>ZF-31: PostgreSQL: implement describeTable() method</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-06-19T22:57:14.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Zend Framework (zend_framework)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p><a href="http://framework.zend.com/developer/ticket/15">http://framework.zend.com/developer/ticket/15</a></p>

<p>Zend_Db_Adapter_Pdo_Pgsql:: describeTable() is currently calling an non-existing method $this-&gt;_describeTable</p>

<pre class="highlight"><code>
    public function describeTable($table)
    {
        $sql = "SELECT * FROM $table LIMIT 1";
        return $this-&gt;_describeTable($sql);
    }
</code></pre>

<p>it should be something like:</p>

<pre class="highlight"><code>

     /**
     * Returns the column descriptions for a table.
     *
     * @return array
     */
    public function describeTable($table)
    {

    $sql = "SELECT a.attnum, a.attname AS field, t.typname AS type, "
             . "a.attnotnull AS isnotnull, "
             . "( SELECT 't' "
             . "FROM pg_index "
             . "WHERE c.oid = pg_index.indrelid "
             . "AND pg_index.indkey[0] = a.attnum "
             . "AND pg_index.indisprimary = 't') AS pri, "
             . "(SELECT pg_attrdef.adsrc "
             . "FROM pg_attrdef "
             . "WHERE c.oid = pg_attrdef.adrelid "
             . "AND pg_attrdef.adnum=a.attnum) AS default "
             . "FROM pg_attribute a, pg_class c, pg_type t "
             . "WHERE c.relname = '{$table}' "
             . "AND a.attnum &gt; 0 "
             . "AND a.attrelid = c.oid "
             . "AND a.atttypid = t.oid "
             . "ORDER BY a.attnum ";

        $result = $this-&gt;fetchAll($sql);
        $descr = array();
        foreach ($result as $key =&gt; $val) {
            $descr[$val['field']] = array(
                'name'    =&gt; $val['field'],
                'type'    =&gt; $val['type'],
                'notnull' =&gt; (bool) ($val['isnotnull'] === ''),
                'default' =&gt; $val['default'],
                'primary' =&gt; (bool) ($val['pri'] == 't'),
            );
        }
        return $descr;
    } 

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Zend Framework (zend_framework) on 2006-06-19T22:57:21.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>I did something similar for Pdo_Mssql. Just in case you are not aware, the type in the returned array needs to return the length in brackets if it's a varchar. At some point, I expect a length field to be added though :)</p>

<p>Regards,</p>

<p>Rob...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:14:32.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-12-26T18:43:00.000+0000</p> 
        <div class="body">
            <p>Rephrase summary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-02-02T23:00:13.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 3129.</p>

        </div>
    </div>
    </div>

