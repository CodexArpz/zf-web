<h2>ZF-1308: Coding standards compliance, including private method names</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Task</dd>

    <dt>Created:</dt>
    <dd>2007-04-23T15:37:50.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-26T12:56:07.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.4 (26/Feb/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Simone Carletti (weppos)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Service_Audioscrobbler</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The private {{Zend_Service_Audioscrobbler::getInfo()}} method does not follow coding standards for <a href="http://framework.zend.com/wiki/x/PQ">private and protected method names</a>:</p>

<p>Though function names may not contain the underscore character, class methods that are declared as protected or private must begin with a single underscore, as in the following example:</p>

<pre class="highlight"><code>
class Zend_Foo 
{ 
    protected function _fooBar() 
    { 
        // ... 
    } 
}
</code></pre>

<p>Other members of this component, such as {{$testing}} and {{$testing_response}} also should be modified to comply with coding standards.</p>

<p>I should also recommend considering whether {{private}} is the appropriate designation for such class members. Though sometimes appropriate to use {{private}}, it is generally the case that making class members {{protected}} allows for an appropriate public API while providing for extensibility through class inheritance.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-01-08T03:15:53.000+0000</p> 
        <div class="body">
            <p>I contacted Chris, I'm going to take in charge this fix. :)</p>

<p>@ Darby</p>

<p>Considering that those methods/variables were declared as protected, I assume it's safe to change their scope/name for the next ZF release (1.5). There shouldn't be any BC issue.</p>

<p>Do you agree?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2008-01-08T08:19:51.000+0000</p> 
        <div class="body">
            <p>Well, I do not agree that there is <em>no</em> BC issue. Obviously people who have extended the class could be affected. However, because the likelihood of such extension for this component seems minimal, and because the BC impact deals only with naming (e.g., not behavioral changes to class logic), I do not see insurmountable problems arising with making the changes for 1.5. Thanks for looking at this, Simone! :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-01-08T08:40:07.000+0000</p> 
        <div class="body">
            <blockquote>
  <p>Obviously people who have extended the class could be affected.</p>
</blockquote>

<p>Perhaps I confused PHP behavior with Java... but as far I remember (in PHP) child classes haven't access to parent private methods but only to protected or public ones.
But may be I'm wrong, I'm going to run more tests.</p>

<blockquote>
  <p>I do not see insurmountable problems arising with making the changes for 1.5.</p>
</blockquote>

<p>Great, I'm going to fix this ticket asap.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2008-01-08T08:47:01.000+0000</p> 
        <div class="body">
            <p>bq. Perhaps I confused PHP behavior with Java... but as far I remember (in PHP) child classes haven't access to parent private methods but only to protected or public ones. But may be I'm wrong, I'm going to run more tests.</p>

<p>Yes, of course, I meant that renaming protected methods could affect extending classes.</p>

<p>Thanks again! :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-01-08T09:39:34.000+0000</p> 
        <div class="body">
            <p>fixed in r7364</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simone Carletti (weppos) on 2008-01-29T14:39:00.000+0000</p> 
        <div class="body">
            <p>Merged to branch/release-1.0 (r7688), target changed to mini release.</p>

        </div>
    </div>
    </div>

