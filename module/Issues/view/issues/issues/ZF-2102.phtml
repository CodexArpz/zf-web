<h2>ZF-2102: Add ability to set the class used for statement objects (Zend_Db_Adapter_Pdo_Abstract/Zend_Db_Statement_Pdo)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2007-10-26T08:37:36.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:39:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jack Sleight (jacksleight)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Simon Mundy (peptolab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When running a SELECT query through one of the PDO adapters a Zend_Db_Statement_Pdo object is returned. However if you were to extend Zend_Db_Statement_Pdo with your own class, there is presently no way tell Zend_Db_Adapter_Pdo_Abstract to use that class for new statement objects, as it is hard coded into Zend_Db_Adapter_Pdo_Abstract::prepare().</p>

<p>Could we add the facility to set the class used for new statement objects?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-11-07T13:43:44.000+0000</p> 
        <div class="body">
            <p>It seems as if you could simply extend the pdo adapter class with a class of your own, overriding the {{prepare()}} method, is this not the case, and if not, why?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jack Sleight (jacksleight) on 2007-11-07T13:51:15.000+0000</p> 
        <div class="body">
            <p>Oh you can, and that's exactly what I've done for now. I just thought it would be beneficial to have a way to do it built right in, rather than have to extend the class yourself. Much like you can set the row class in Zend_Db_Table. This would be particularly useful if you needed to do it with more than one type of adapter.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-11-07T13:58:51.000+0000</p> 
        <div class="body">
            <p>I agree that we should have such support without extending the class. I've lowered the priority to minor, however, since an easy workaround is available.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:29.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:59.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:12:06.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Simon Mundy (peptolab) on 2008-05-30T18:53:03.000+0000</p> 
        <div class="body">
            <p>Resolved in r9577</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:39:19.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

