<h2>ZF-268: Zend_Config - get node structure</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2006-07-18T06:27:43.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.2.0 (29/Oct/06)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nikola Mitic (nikolam)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Config</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In config.xml you can have lots of configurations for different pages, users...</p>

<p>Idea is to send exact xml node to component (not whole xml config)</p>

<p>to do that I create function</p>

<p>public function getNodeStructure($what){</p>

<p>return $this-&gt;userConfig-&gt;getNodeStructure($what);
}</p>

<p>and extends  class Zend_Config</p>

<p>class Vast_Config extends Zend_Config 
{</p>

<pre><code>public function __construct($array, $allowModifications = false)
{

    parent::__construct($array, $allowModifications);

}

public function getNodeStructure($nodeName){

    return $this-&gt;_data[$nodeName];

}
</code></pre>

<p>}</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2006-07-19T17:49:13.000+0000</p> 
        <div class="body">
            <p>I'm not quite sure what you want to do that isn't already possible?</p>

        </div>
    </div>
    </div>

