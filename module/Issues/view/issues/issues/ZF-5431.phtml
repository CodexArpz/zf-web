<h2>ZF-5431: using &quot;$arr[] = $var&quot; instead of &quot;array_push($arr, $var)&quot;</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Sub-task</dd>

    <dt>Created:</dt>
    <dd>2009-01-08T09:52:59.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-01-29T10:33:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marc Bennewitz (GIATA mbH) (mben)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>    </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        
    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2009-01-08T09:54:59.000+0000</p> 
        <div class="body">
            <p>bechmark:</p>

<pre class="highlight"><code>
echo '"array_push($arr, $var)" vs. "$arr[] = $var" (add 1 var)'."\n";
$max = 100000;
$var = true;

echo ' array_push($arr, $var): ';
$arr = array();
$start = microtime(true);
for ($i=0; $i&lt;$max; $i++) {
    array_push($arr, $var);
}
$end = microtime(true);
echo ($end-$start)."\n";

echo ' $arr[] = $var         : ';
$arr = array();
$start = microtime(true);
for ($i=0; $i&lt;$max; $i++) {
    $arr[] = $var;
}
$end = microtime(true);
echo ($end-$start)."\n";
echo "--------------------------------\n";



echo '"array_push($arr, $var)" vs. "$arr[] = $var" (add 10 vars)'."\n";
$max = 100000;
$var = true;

echo ' array_push($arr, $var): ';
$arr = array();
$start = microtime(true);
for ($i=0; $i&lt;$max; $i++) {
    array_push($arr, $var, $var, $var, $var, $var, $var, $var, $var, $var, $var);
}
$end = microtime(true);
echo ($end-$start)."\n";

echo ' $arr[] = $var         : ';
$arr = array();
$start = microtime(true);
for ($i=0; $i&lt;$max; $i++) {
    $arr[] = $var; $arr[] = $var; $arr[] = $var; $arr[] = $var; $arr[] = $var;
    $arr[] = $var; $arr[] = $var; $arr[] = $var; $arr[] = $var; $arr[] = $var;
}
$end = microtime(true);
echo ($end-$start)."\n";
</code></pre>

<p>output:</p>

<pre class="highlight"><code>
"array_push($arr, $var)" vs. "$arr[] = $var" (add 1 var)
 array_push($arr, $var): 0.0417320728302
 $arr[] = $var         : 0.021378993988
--------------------------------
"array_push($arr, $var)" vs. "$arr[] = $var" (add 10 vars)
 array_push($arr, $var): 0.147557020187
 $arr[] = $var         : 0.155264139175
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T09:38:10.000+0000</p> 
        <div class="body">
            <p>Whats the issue here?  The usage of one or the other has always been a negligible difference.  Please add more commentary as to what you are advocating.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (GIATA mbH) (mben) on 2009-01-29T01:45:42.000+0000</p> 
        <div class="body">
            <p>to add one element to an array the function is twice as slowly as the operator.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-29T10:33:40.000+0000</p> 
        <div class="body">
            <p>This is not a performance issue.  The performance difference between [] and array_push is negligible at best and both methods are valid for different reasons.</p>

<p>Bracket notation is useful for adding values to a variable (whether it has been initialized as an array or not). $i = null; $i[] = 'foo'; will not throw a notice, where as array_push($i, 'foo') will throw a E_WARN that the first argument must be an array.</p>

<p>Also, array_push() will return the count of all the elements which in some situations might be useful.  Ultimately, its up to the component developer which method better suites the needs of the component.</p>

        </div>
    </div>
    </div>

