<h2>ZF2-435: Data in Zend\Writer\Feed\Entry extensions bleeds between entries</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2012-07-31T16:08:00.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-07-31T17:03:55.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Demian Katz (demiankatz)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Feed</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>If you define a Zend\Writer\Feed\Entry extension that stores data, a single instance of the plug-in is created and shared between all entries.  This means that if you save data to the extension on one entry, that data may also show up as part of subsequent entries if they do not explicitly reset or overwrite it.</p>

<p>One possible workaround: clone the extensions in the Zend\Feed\Writer\Entry::_loadExtensions method:</p>

<pre class="highlight"><code>
    protected function _loadExtensions()
    {
        $all     = Writer::getExtensions();
        $manager = Writer::getExtensionManager();
        $exts    = $all['entry'];
        foreach ($exts as $ext) {
            $this-&gt;_extensions[$ext] = clone($manager-&gt;get($ext));
            $this-&gt;_extensions[$ext]-&gt;setEncoding($this-&gt;getEncoding());
        }
   }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-31T16:39:12.000+0000</p> 
        <div class="body">
            <p>Do we need to worry about feed extensions as well? or just entry extensions?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-31T16:39:46.000+0000</p> 
        <div class="body">
            <p>Also, is there an issue in the Reader API as well?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-31T16:48:45.000+0000</p> 
        <div class="body">
            <p>Actually... can you provide a test case or usage example demonstrating the issue? I'm having trouble seeing what's happening, or even why the behavior may have changed (if indeed, it has). Thanks!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-07-31T17:03:55.000+0000</p> 
        <div class="body">
            <p>Resolved in IRC. Reporter was using setService() to add custom extensions -- but since the ExtensionManager does not share instances by default, this meant anytime that service was requested, the default was returned. Switching to use setInvokableClass() instead solved the problem.</p>

        </div>
    </div>
    </div>

