<h2>ZF-1970: Implement ArrayAccess in Zend_Db_Table_Rowset_Abstract</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2007-09-19T17:26:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-11-13T14:10:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.0 (17/Nov/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Jack Sleight (jacksleight)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Jurrien Stutterheim (norm2782)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-2013">ZF-2013</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm not sure if there was a reason this wasn't implemented, but if there's not could we add the ArrayAccess interface to Zend_Db_Table_Rowset_Abstract?</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jack Sleight (jacksleight) on 2007-09-19T17:35:15.000+0000</p> 
        <div class="body">
            <p>Actually perhaps this isn't required. I wanted it in order to get around a problem I was having, but I've thought of a much better solution now. Still, if there is a valid use for it it might not be a bad idea.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-09-20T08:13:57.000+0000</p> 
        <div class="body">
            <p>Assigning to [~bkarwin] to initiate issue review.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darby Felton (darby) on 2007-11-07T15:21:32.000+0000</p> 
        <div class="body">
            <p>Hmm, it's tempting to agree that ArrayAccess implementation would be helpful, but I wonder if we can see some use cases and evidence of support for doing so from others? Put another way, perhaps people can tell us why they need it?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jack Sleight (jacksleight) on 2007-11-07T16:15:16.000+0000</p> 
        <div class="body">
            <p>To be honest I don't need this in any code I'm currently working on any more. But I can certianly imagine situations where you might want to pull out one or more rows. And given that there isn't even a method to set the iterator pointer, the only way to interact with a Rowset object presently is via a loop, starting from the first row.</p>

<p>Hopefully others will post some specific use cases.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Justin Plock (jplock) on 2008-01-10T14:58:49.000+0000</p> 
        <div class="body">
            <p>ZF-2013 has a patch attached</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:55.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T13:11:55.000+0000</p> 
        <div class="body">
            <p>This doesn't appear to have been fixed in 1.5.0. Please update if this is not correct.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jurrien Stutterheim (norm2782) on 2008-10-16T05:28:22.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 11987</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-11-13T14:10:29.000+0000</p> 
        <div class="body">
            <p>Changing issues in preparation for the 1.7.0 release.</p>

        </div>
    </div>
    </div>

