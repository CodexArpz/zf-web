<h2>ZF-2375: Zend_Db_Statement_Mysqli::_execute() causes too much memory to be allocated.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-01-02T16:27:53.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-09-02T10:38:52.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.6.0 (02/Sep/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Luiz Fernando Furtado (kgbfernando)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_Db_Statement_Mysqli::_execute() calls mysqli_stmt_bind_result() *before* calling mysqli_stmt_execute(), and it does not call mysqli_stmt_store_result() or mysqli_stmt_free_result().</p>

<p>See these two links for reference:
* <a href="http://us.php.net/manual/en/function.mysqli-stmt-bind-result.php#57564">http://us.php.net/manual/en/â€¦</a>
* <a href="http://bugs.php.net/bug.php?id=32013">http://bugs.php.net/bug.php?id=32013</a></p>

<p>Modify the following test case to set the library path and to use the correct database connection parameters.</p>

<pre class="highlight"><code>
&lt;?php

set_include_path(implode(PATH_SEPARATOR, array(
    '/opt/software/ZendFramework/1.0.3/library'
,   get_include_path()
)));

require_once 'Zend/Loader.php';
Zend_Loader::registerAutoload();

try {
    $dbh = Zend_Db::factory('mysqli', array(
        'host'     =&gt; '127.0.0.1',
        'username' =&gt; 'phpunit',
        'password' =&gt; 'phpunit',
        'dbname'   =&gt; 'test'
    )); 
    $dbh-&gt;getConnection();
} catch (Zend_Exception $e) {
    echo $e-&gt;getMessage();
    exit;
}

$dbh-&gt;query("DROP TABLE IF EXISTS `zend_testcase`");
$dbh-&gt;query("
    CREATE TABLE `zend_testcase` (
        `column_a` tinytext
    ,   `column_b` text
    ,   `column_c` mediumtext
    )
");
$dbh-&gt;query("INSERT INTO `zend_testcase` VALUES('a', 'b', 'c')");

$mem = memory_get_usage();
$dbh-&gt;query("SELECT `column_a` FROM `zend_testcase`");
echo "Memory Used(TINYTEXT  ): " . (memory_get_usage() - $mem) . "\n";

$mem = memory_get_usage();
$dbh-&gt;query("SELECT `column_b` FROM `zend_testcase`");
echo "Memory Used(TEXT      ): " . (memory_get_usage() - $mem) . "\n";

$mem = memory_get_usage();
$dbh-&gt;query("SELECT `column_c` FROM `zend_testcase`");
echo "Memory Used(MEDIUMTEXT): " . (memory_get_usage() - $mem) . "\n";

$dbh-&gt;query('DROP TABLE IF EXISTS `zend_testcase`');

?&gt;
</code></pre>

<p>The output shows that the memory used corresponds roughly to the maximum size of the data-type being selected, which is what can be expected when not using mysqli_stmt_store_result() based on the bug report linked above.</p>

<pre class="highlight"><code>
Memory Used(TINYTEXT  ): 1516
Memory Used(TEXT      ): 65324
Memory Used(MEDIUMTEXT): 16711680
</code></pre>

<p>If the sequence of events in Zend_Db_Statement_Mysqli::_execute is updated, and a call to mysqli_stmt_store_result() is added, the memory usage drops significantly:</p>

<pre class="highlight"><code>
Memory Used(TINYTEXT  ): 1296
Memory Used(TEXT      ): 20
Memory Used(MEDIUMTEXT): 0
</code></pre>

<p>If this approach is used, calls to mysqli_stmt_free_result will also have to be added in the appropriate places.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:57.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Luiz Fernando Furtado (kgbfernando) on 2008-04-04T14:58:17.000+0000</p> 
        <div class="body">
            <p>Changed the order of code in _execute method and  added a call to mysqli_store_result.
Changed to _closeCursor added a call to mysqli_free_result.</p>

<p>Fixed 1.5 branch at 9146, and trunk at 9138 and 9139.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-09-02T10:38:52.000+0000</p> 
        <div class="body">
            <p>Updating for the 1.6.0 release.</p>

        </div>
    </div>
    </div>

