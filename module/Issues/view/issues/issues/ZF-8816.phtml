<h2>ZF-8816: Plural translation returns only one letter</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-01-14T06:15:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-09-03T07:47:23.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>Next Major Release ()</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It returns only the letter at position {$rule} in the $plural[0] string.
We want it to return the string at index {$rule} in the $plural array.</p>

<p>We have to change [$plural[0]][$rule] to [$plural[$rule]] on line 566,567,580 and 581</p>

<pre class="highlight"><code>
        $locale = (string) $locale;
        if (isset($this-&gt;_translate[$locale][$messageId])) {
            // return original translation
            if ($plural === null) {
                return $this-&gt;_translate[$locale][$messageId];
            }

            $rule = Zend_Translate_Plural::getPlural($number, $locale);
            if (isset($this-&gt;_translate[$locale][$plural[$rule]])) { // was [$plural[0]][$rule]
                return $this-&gt;_translate[$locale][$plural[$rule]]; // was [$plural[0]][$rule]
            }
        } else if (strlen($locale) != 2) {
            // faster than creating a new locale and separate the leading part
            $locale = substr($locale, 0, -strlen(strrchr($locale, '_')));

            if (isset($this-&gt;_translate[$locale][$messageId])) {
                // return regionless translation (en_US -&gt; en)
                if ($plural === null) {
                    return $this-&gt;_translate[$locale][$messageId];
                }

                $rule = Zend_Translate_Plural::getPlural($number, $locale);
                if (isset($this-&gt;_translate[$locale][$plural[$rule]])) { // was [$plural[0]][$rule]
                    return $this-&gt;_translate[$locale][$plural[$rule]]; // was [$plural[0]][$rule]
                }
            }
        }
</code></pre>

<pre class="highlight"><code>
&lt;?php 
    $no = new Zend_Translate(
        'gettext',
        APPLICATION_PATH.'/configs/no.mo',
        'no'
    );
    
    $en = new Zend_Translate(
        'gettext',
        APPLICATION_PATH.'/configs/en.mo',
        'en'
    );
    
    for ( $number=0; $number&lt;=2; $number++ ){
        echo 'no: ' . $number . ' ' . $no-&gt;translate(array(_('car'),_('cars'),$number)) .'<br />';
        echo 'en: ' . $number . ' ' . $en-&gt;translate(array(_('car'),_('cars'),$number)) .'<br />';
    }
?&gt;
</code></pre>

<pre class="highlight"><code>
no: 0 i
en: 0 a
no: 1 b
en: 1 c
no: 2 i
en: 2 a
</code></pre>

<p>The gettext mo/po files were generated with Poedit:</p>

<p>the "no" gettext file contains:
car =&gt; bil
cars =&gt; biler</p>

<p>the "en" gettext file contains:
car =&gt; car
cars =&gt; cars</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-14T07:44:01.000+0000</p> 
        <div class="body">
            <p>Please give a reproducable example.
We will not change the core without knowing why.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jone Hop (joho) on 2010-01-14T09:06:13.000+0000</p> 
        <div class="body">
            <p>Example appended to the description.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-14T11:07:58.000+0000</p> 
        <div class="body">
            <p>I can not verify this behaviour
Seems like your mo file is broken.</p>

<p>Your change eliminates plural notation for gettext and makes singular working like plurals. But plurals are noted differently within the gettext standard than plurals. So your change breaks this feature for others.</p>

<p>Maybe the po file you compiled the mo from is broken.
See the file "/Translate/Adapter/_files/translation_en.mo" which adds plurals for the message5.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-14T11:14:22.000+0000</p> 
        <div class="body">
            <p>I just verified that you get this issue when the po/mo file does not use plurals, but when you make multiple singulars and what them to be used as plural.</p>

<p>This does not work and there is no way to make it work.
Plurals have to be defined within poEdit (or whatever program you use) explicitely. Otherwise the translations are simply added as singular.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-01-14T12:21:56.000+0000</p> 
        <div class="body">
            <p>Closing as non-issue
False mo files can not be corrected. See description above.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Menno Dekker (menno.dekker@erasmusmc.nl) on 2011-08-22T08:44:44.000+0000</p> 
        <div class="body">
            <p>I encountered this issue. I will explain what happens:
I have used regular translate on 'week' and 'weeks' so both are in my po/mo file. Now I switched to plural, but poedit didn't pickup the plural (others that were not translated before are picked up!!). I know my PO file is missing the correct plural, but Zend doesn't see this and falsely returns just one letter (index) from the word it finds. The problem is in the isset check on line 764. When used on an array, it checks if the key exists, when used on a string (in my case) it will return the n'th char from the string. When my patch is applied, it will correctly be reported as missing.</p>

<p>I don't know how to attach a diff here so I will just paste it for Zend/Translate/Adapter.php :</p>

<pre class="highlight"><code>
Index: Adapter.php
===================================================================
--- Adapter.php (revision 24397)
+++ Adapter.php (working copy)
@@ -758,8 +758,9 @@
             }
 
             $rule = Zend_Translate_Plural::getPlural($number, $locale);
-            if (isset($this-&gt;_translate[$locale][$plural[0]][$rule])) {
+            if (is_array($this-&gt;_translate[$locale][$plural[0]]) &amp;&amp; isset($this-&gt;_translate[$locale][$plural[0]][$rule])) {
                 $this-&gt;_routed = array();
+
                 return $this-&gt;_translate[$locale][$plural[0]][$rule];
             }
         } else if (strlen($locale) != 2) {
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2011-09-03T07:46:49.000+0000</p> 
        <div class="body">
            <p>Fixed in ZF2 with <a href="https://github.com/zendframework/zf2/pull/368">GH-368</a></p>

        </div>
    </div>
    </div>

