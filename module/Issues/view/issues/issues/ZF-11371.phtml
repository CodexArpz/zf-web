<h2>ZF-11371: Exception in case of optional Headers</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-05-13T14:39:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-16T19:18:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Postponed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nawar Nory (nawar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Dolf Schimmel (Freeaqingme) (freak)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
            <li>validating</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Part.php throws an exception in case of the optional header of "Subject" is not seen in the list of headers of a mail file in the Maildir type of mailboxes.</p>

<p>The functions of getHeader() or headerExists() should handle this gracefully by ignoring it all these optional headers. Subject header is an optional field as described in RFC 2822.</p>

<pre class="highlight"><code>
PHP Fatal error:  Uncaught exception 'Zend_Mail_Exception' with message 'no Header with Name subject or subject found' in /usr/share/php/Zend/Mail/Part.php:347
Stack trace:
#0 /usr/share/php/Zend/Mail/Part.php(418): Zend_Mail_Part-&gt;getHeader('subject', 'string')
#1 /var/www/email/mail_parser.php(247): Zend_Mail_Part-&gt;__get('subject')
#2 {main}
  thrown in /usr/share/php/Zend/Mail/Part.php on line 347
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-05-18T18:43:19.000+0000</p> 
        <div class="body">
            <p>Part of the reason that Subject is considered a required field is due to how mail() works in PHP; subject is a required parameter of that method. As such, if you're using the Sendmail Zend_Mail transport, we have to require it.</p>

<p>One option would be to have it default to an empty string, however.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-02-24T12:19:11.000+0000</p> 
        <div class="body">
            <p>Can this be considered just a documentation issue? (ie: informing developers that subject is a required field despite RFC2822)
Or should the default-value behavior be implemented?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gonzalo Sainz-Trapaga (gomox) on 2012-05-30T16:30:02.000+0000</p> 
        <div class="body">
            <p>This is not a problem when <em>sending</em> mail but when <em>receiving</em> it. Mails will come in without a subject and accessing $this-&gt;subject raises an Exception.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by J B (dubnut) on 2012-06-28T22:08:48.000+0000</p> 
        <div class="body">
            <p>Bump for this... It's not a matter of sending, but of receiving: if you're trying to do any work with reading contents of a mail folder and somewhere in there is an email without a subject, the exception will cause things to crash out...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by stephen (farzher) on 2012-08-16T19:06:18.000+0000</p> 
        <div class="body">
            <p>I was reading emails in a loop, this crashed my application.
This should not throw an exception.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by stephen (farzher) on 2012-08-16T19:18:14.000+0000</p> 
        <div class="body">
            <p>For anyone who needs a quick fix, you can do this:</p>

<p>try {
    $data['subject'] = $message-&gt;subject;
} catch(Exception $e) {
    $data['subject'] = '';
}</p>

        </div>
    </div>
    </div>

