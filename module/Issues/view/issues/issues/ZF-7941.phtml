<h2>ZF-7941: Allow to instanciate Zend_Tranlate without file/directory</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-09-24T01:32:15.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-25T06:37:40.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Marc Thomas (existenz)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It could be pratical to be able to instanciate a Zend_Translate object without having to specify a filename or directory.
For the moment, the first way I find is to pass into parameters a file without content.</p>

<p>Example of use : instanciate Zend_Translate in its own resource plugin (to configure it : type of file, language, ...)., but populate it later, in an other class, which does not matter with Zend_Translate configuration.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-09-24T17:19:45.000+0000</p> 
        <div class="body">
            <p>Why don't you then also instantiate it in an other class?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Thomas (existenz) on 2009-09-24T23:57:49.000+0000</p> 
        <div class="body">
            <p>To benefit from resource plugin functionalities . This resource plugin does this work and my other class (another resource plugin specific to modular functionalities) add translation file, if needed, to the current Zend_Translate instance (stored in bootstrap registry).
Bad approach ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-25T00:28:03.000+0000</p> 
        <div class="body">
            <p>So you have no basic module or translation when no module is attached at all ?
Bad approach ? :-)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Thomas (existenz) on 2009-09-25T00:53:45.000+0000</p> 
        <div class="body">
            <p>eheh !
My resource plugin takes into account each module functionnalities, among them the application core. So this class is always called, with or without module attached (at all).
All languages files are located in the same directory (not in /modules/), then the class parses 'default' module and others (which are detected as activated (in DB)). By loading translation files in resource plugin just for the core ("default" module), I would need to not take into account these files when I will load the rest (files linked to other modules), whereas it's simpler to load all of them in the same time, without having two processes in two classes (with three levels of tree structure of each file (translation overloading system) I would have to externalize the process elsewhere if it is shared)
(sorry if my english is not impressive)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-25T06:37:36.000+0000</p> 
        <div class="body">
            <p>Added with r18410
Warnings have to be switched off explicitly.</p>

        </div>
    </div>
    </div>

