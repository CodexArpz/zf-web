<h2>ZF-11664: Allow manually setting Zend_Navigation_Page_Mvc::isActive</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2011-08-12T05:03:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-01T01:21:01.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.0 (27/Aug/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Martin Minka (k2s)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Navigation</li>
            <li>FixForZF1.12</li>
            <li>state:patch-ready-for-review</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
            <li>zf-crteam-review</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/14732/Mvc.php.patch">Mvc.php.patch</a></li>
            <li><a href="/issues/secure/attachment/14733/MvcTest.php.patch">MvcTest.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Calling setActive(false) on navigation page will still let isActive() execute internal mechanism to detect if page is active.
Solution would be if setActive($active) would support 3 value true/false/null, where null should be default null.</p>

<p>My implementation:</p>

<pre class="highlight"><code>
&lt;?php
class XTZend_Navigation_Page_Mvc extends Zend_Navigation_Page_Mvc
{
    protected $_active = null;

    public function isActive($recursive = false)
    {
        if (is_null($this-&gt;_active)) {
            return parent::isActive($recursive);
        }

        return $this-&gt;_active;
    }
}
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-08-13T13:26:20.000+0000</p> 
        <div class="body">
            <p>I will look at this.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-08-13T14:18:24.000+0000</p> 
        <div class="body">
            <p>Hi Martin,
your implementation breaks the option to check to recursively:</p>

<pre class="highlight"><code>
/**
 * @group ZF-11664
 */
public function testIsActiveWithoutAndWithRecursiveOption()
{
    // Parent
    $page = new Zend_Navigation_Page_Mvc(array(
        'controller' =&gt; 'index',
        'action'     =&gt; 'index',
    ));

    // Child
    $page-&gt;addPage(new Zend_Navigation_Page_Mvc(array(
        'controller' =&gt; 'index',
        'action'     =&gt; 'foo',
    )));

    // Front controller
    $this-&gt;_front-&gt;getRequest()-&gt;setParams(array(
        'controller' =&gt; 'index',
        'action'     =&gt; 'foo'
    ));

    $this-&gt;assertFalse($page-&gt;isActive());

    $this-&gt;assertTrue($page-&gt;isActive(true));
}
</code></pre>

<pre class="highlight"><code>
There was 1 failure:

1) Zend_Navigation_Page_MvcTest::testIsActiveWithoutAndWithRecursiveOption
Failed asserting that  is true.
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Minka (k2s) on 2011-08-15T09:23:50.000+0000</p> 
        <div class="body">
            <p>I think it is because my code could return NULL which is then compared in unit test with === to FALSE.
Following code will always return TRUE or FALSE.</p>

<pre class="highlight"><code>
&lt;?php
class XTZend_Navigation_Page_Mvc extends Zend_Navigation_Page_Mvc
{
    protected $_active = null;

    public function isActive($recursive = false)
    {
        if (is_null($this-&gt;_active)) {
            return (parent::isActive($recursive)===true);
        }

        return ($this-&gt;_active===true);
    }
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-08-15T10:14:06.000+0000</p> 
        <div class="body">
            <p>Now ``` is never "false" and the all the code from Zend_Navigation_Page_Mvc::isActive() executed.
Your fix brings no changes to the old behavior.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Minka (k2s) on 2011-08-15T14:53:49.000+0000</p> 
        <div class="body">
            <p>sorry, I don't understand what you mean. Does it not fix the "passing test" issue or you mean that it is not changing the fact that current Zend_Navigation_Page accepts only $page-&gt;setActive(true), but ignores $page-&gt;setActive(false);</p>

<p>Maybe I explained it not good enough, but my suggested code was/is only proposal how to change it, the main point is that $page-&gt;setActive(false); should work the same way as $page-&gt;setActive(true);. If it was set manualy it should not execute all the detection code in Zend_Navigation_Page_Mvc.</p>

<p>current implementation:</p>

<pre class="highlight"><code>
$page-&gt;setActive(true);
$b = $page-&gt;isActive(); // always TRUE, evaluation code in Zend_Navigation_Page_Mvc not executed

// but
$page-&gt;setActive(false);
$b = $page-&gt;isActive(); // you don't know the result, it will always execute the evaluation code in Zend_Navigation_Page_Mvc
</code></pre>

<p>my suggestion:</p>

<pre class="highlight"><code>
$page-&gt;setActive(true);
$b = $page-&gt;isActive(); // always TRUE, evaluation code in Zend_Navigation_Page_Mvc not executed

// but
$page-&gt;setActive(false);
$b = $page-&gt;isActive(); // always FALSE, , evaluation code in Zend_Navigation_Page_Mvc not executed

// and
$page-&gt;setActive(null); // the default behaviour, because $_active = null;
$b = $page-&gt;isActive(); // you don't know the result, it will execute the evaluation code in Zend_Navigation_Page_Mvc
</code></pre>

<p>I am not sure what exactly should be returned if $page-&gt;isActive(true), but it is more natural to return TRUE/FALSE if it was set manualy without to cascade. If the programmer wants to cascade, he should not set it manualy with setActive();</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-08-15T15:45:56.000+0000</p> 
        <div class="body">
            <p>Hi Martin,
thanks for your explanation. Here is another unit test:</p>

<pre class="highlight"><code>
/**
 * @group ZF-11664
 */
public function testSetActiveAndIsActive()
{
    // Page
    $page = new Zend_Navigation_Page_Mvc(array(
        'controller' =&gt; 'foo',
        'action'     =&gt; 'bar',
    ));

    // Front controller
    $this-&gt;_front-&gt;getRequest()-&gt;setParams(array(
        'controller' =&gt; 'foo',
        'action'     =&gt; 'bar'
    ));

    $this-&gt;assertTrue($page-&gt;isActive()); // Result: TRUE

    $page-&gt;setActive(false);
    $this-&gt;assertFalse($page-&gt;isActive()); // Result: TRUE
}
</code></pre>

<pre class="highlight"><code>
There were 1 failures:

1) Zend_Navigation_Page_MvcTest::testSetActiveAndIsActive
Failed asserting that  is false.
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2011-11-14T20:12:03.000+0000</p> 
        <div class="body">
            <p>Fix and unit tests added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-06-01T01:20:55.000+0000</p> 
        <div class="body">
            <p>Fixed in trunk (1.12.0): r24857</p>

        </div>
    </div>
    </div>

