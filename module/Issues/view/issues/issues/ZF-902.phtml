<h2>ZF-902: Zend_Measure_Area: spurious units output (extra character)</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-02-12T14:03:01.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:49.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Gavin (gavin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Measure</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>$unit = new Zend_Measure_Area(125, Zend_Measure_Area::SQUARE_FOOT);

echo $unit, "\n";

// produces:
125 ftÂ²

// this produces the same result as above
$unit = new Zend_Measure_Area(125, Zend_Measure_Area::SQUARE_FOOT, 'en_US');
</code></pre>

<p>However, it should yield "125 ft²".</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-02-12T14:33:28.000+0000</p> 
        <div class="body">
            <p>This is no problem of Zend_Measure but of the console you are viewing the output.</p>

<p>I get in both cases the expected output of</p>

<p>TEST1:125 ft² 
TEST2:125 ft²</p>

<p>The unit signs themself are utf8 coded like all other locale aware output.</p>

<p>If using a browser as output you may want to add</p>

<p></p>

<p>On console output you have to use a utf8 aware console, otherwise you will get no correct output.
Your given example looks like with a non utf8 aware console.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-02-12T14:39:32.000+0000</p> 
        <div class="body">
            <p>In the ZF, we have standardized on the assumption that developers will render debugging output in browsers using something like:</p>

<p></p>

<p>However, for output to end users (not developers), we have not agreed to require UTF8.  Any ideas for how to workaround this problem?</p>

<p>At the moment, I am thinking about suggesting a property n Zend_Measure_Abstract to set the desired charset for output.
UTF8 output is not the "default" for most *nix installations, including Cygwin, in North America.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-02-12T15:04:03.000+0000</p> 
        <div class="body">
            <p>98% of all units are not UTF8...</p>

<p>For the 2% which include UTF8 signs there is no solution...
The Angstrom sign Å, or the Senary Sign ⑹ for example can not be supported by non utf8.</p>

<p>For these units there will be no unitsign if we decide to not use utf8 output...</p>

<p>Btw:
You will have UTF8 problems with ALL locale aware classes, because input is utf8 and also output is utf8... also the parsing and the underlaying data is utf8... this was known and accepted by discussing my locale proposals.</p>

<p>This is also relevant for Zend_Date, Zend_Locale, Zend_Currency and Zend_Translate.</p>

<p>All this classes parse and produce UTF8 signs and have the same problematic because Umlaute or Arabic signs are impossible to display in non-utf8 environments.</p>

<p>Well... if we are not able to use utf8 inputs and outputs we would have to delete this classes from the framework because locale awareness means also utf8.</p>

<p>Think of generating an arabic formatted number... the modern arabic numbers and number seperators are also not supported by non utf8 environments.</p>

<p>ASCII is not enough for this cases.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-02-13T14:47:40.000+0000</p> 
        <div class="body">
            <p>I did not say "we can not use UTF8".  I only said "we have not agreed to require UTF8".</p>

<p>There are numerous situations where UTF8 does not have to be forced onto the developer by outputting UTF8 characters.</p>

<p>However, the devteam voted to place the burden on the developer to transcode any UTF8 output.  For example, anyone not using the UTF8 character set will need to filter the output to transcode these UTF8 characters, when using square feet with Zend_Locale_Area, or any measurement using superscripts in the unit type names, or any of the other cases you list above.</p>

        </div>
    </div>
    </div>

