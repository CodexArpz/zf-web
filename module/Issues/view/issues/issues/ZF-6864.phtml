<h2>ZF-6864: Plugin Broker increases memory usage when Zend_Layout is enabled</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-30T03:54:20.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-11-13T04:05:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
            <li>Zend_Layout</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When Zend_Layout is enabled, the response gets copied in different places. This causes the memory usage to increase depending on the size of the page, controllers dispatched and, maybe, plugins registered.</p>

<p>It only happens after an action controller is dispatched. You can debug it by adding print_r($this-&gt;_plugins) to the Zend_Controller_Plugin_Broker::postDispatch() method, or, after the front controller dispatches the request:</p>

<p>{php}
$dispatcher-&gt;dispatch($this-&gt;_request, $this-&gt;_response);
print_r($this-&gt;_plugins);
{php}</p>

<p>I would suggest not storing an instance of the front controller in Zend_Layout_Controller_Action_Helper and Zend_Controller_Action. And once that's done, focusing on the Zend_Controller_Plugin_Broker::setResponse() method, who's responsible for looping through all the plugins and setting the response.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-08-07T09:48:12.000+0000</p> 
        <div class="body">
            <p>Can you maybe point out where the response object is copied (and thus cloned? I don't see it.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-08-11T08:12:49.000+0000</p> 
        <div class="body">
            <p>I'm closing this issue as incomplete. Please note that assigning an object two other object does NOT copy it, but merely assigns (as the verb 'assigning' suggests). An object gets only copied when using the CLONE statement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by fc (federico.cargnelutti) on 2009-11-12T02:54:11.000+0000</p> 
        <div class="body">
            <p>Hi,</p>

<p>Why did you close this issue? You did the same thing with another issue I reported (<a href="http://framework.zend.com/issues/browse/ZF-7105">http://framework.zend.com/issues/browse/ZF-7105</a>) without understanding what the problem was.</p>

<p>What I'm reporting here has nothing to do with cloning objects. You can reproduce this by enabling the layout and adding</p>

<p>print_r($this-&gt;_plugins); die;</p>

<p>to the Front Controller after it dispatches the request (ZF 1.7.1, Line 934 / ZF 1.9.0 Line 946).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-11-12T06:46:18.000+0000</p> 
        <div class="body">
            <p>I closed the issue because I did ask you a relevant question, and until now there's still not been given any answer, while that answer is critical for identifying the issue. What the closing of issues is concerned; whenever I close an issue without writing a fix and committing that to trunk, I always discuss on IRC with other ZF contributors to make sure I'm not the only one who thinks it's worth closing. That goes for this issue as well as #ZF-7105.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-11-12T07:12:49.000+0000</p> 
        <div class="body">
            <p>After having discussed this once again on IRC (sigh), we decided you should really point out where any (response) object is copied (file/methodnames/etc). If there's no response given within 24 hours, I will close this issue (indefinitely, I hope).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dolf Schimmel (Freeaqingme) (freak) on 2009-11-12T08:34:55.000+0000</p> 
        <div class="body">
            <p>Reassigning as discussed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-11-12T10:20:15.000+0000</p> 
        <div class="body">
            <p>Federico, you're missing something important.</p>

<p>Objects are passed by reference. Storing the reference takes essentially no new memory.</p>

<p>However, when you perform operations such as print_r, var_dump, or var_export, or analyse object structures in xdebug/zend debugger... you're now reproducing the entire object tree and dumping it. This leads to things like circular references -- which is what is consuming memory.</p>

<p>The better way to test this is to determine the amount of memory usage after a request is complete using memory_get_peak_usage() (and <em>not</em> utilizing print_r, var_dump, or var_export during the request). If you can verify that memory consumption is substantially different in that case, we can examine it more closely.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by fc (federico.cargnelutti) on 2009-11-13T02:17:22.000+0000</p> 
        <div class="body">
            <blockquote>
  <p>If there's no response given within 24 hours, I will close this issue (indefinitely, I hope).</p>
</blockquote>

<p>Dolf, can you stop talking about closing issues please. You are obsessed with closing issues. Not reading them, closing them. This is an issue tracker! We are here to analyze problems, discuss solutions, contribute ideas and share findings. If you don't care about a specific problem or you don't understand it, move to the next one. But don't close it mate.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-11-13T04:05:28.000+0000</p> 
        <div class="body">
            <p>Federico, can you reply to my comment, please?</p>

        </div>
    </div>
    </div>

