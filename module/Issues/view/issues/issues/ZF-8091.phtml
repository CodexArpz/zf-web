<h2>ZF-8091: Zend_GData_Apps could implement singleton...</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-10-18T08:24:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-21T16:19:57.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Radek Antoniuk (warden)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Trevor Johns (tjohns)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Gdata</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm using Zend_GData_Apps as my main authentication mechanism for the application and I am reusing that object later on to manage Google Apps Domain.
Currently, however, there is no method to store the persist the authenticated GData object (at least I didn't find any way apart from keeping the object in Zend_Session).
It would be quite ok to keep it the session, but the thing is that in the object you have a clear text user/password combination to the service.
I think google relies on an authentication token, and that this can be forgotten for later on requests.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Trevor Johns (tjohns) on 2009-10-19T00:50:42.000+0000</p> 
        <div class="body">
            <p>You can extract the authentication token from the Zend_Gdata_Apps object, and then store that.</p>

<p>I'd prefer to avoid singletons whenever possible. What if a user wants to interact with two accounts simultaneously?</p>

<p>I'm going to close this as Won't Fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Radek Antoniuk (warden) on 2009-10-19T05:29:13.000+0000</p> 
        <div class="body">
            <p>I'm okay with that, then the class could provide a clear method for extracting the authentication token or a serializing method to save in the session. What do you think?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Trevor Johns (tjohns) on 2009-10-21T15:03:01.000+0000</p> 
        <div class="body">
            <p>This is already implemented.</p>

<p>See Zend_Gdata_HttpClient::getClientLoginToken() and getAuthSubToken():</p>

<p><a href="http://framework.zend.com/apidoc/core/Zend_Gdata/Gdata/Zend_Gdata_HttpClient.html">http://framework.zend.com/apidoc/core/â€¦</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Radek Antoniuk (warden) on 2009-10-21T16:19:57.000+0000</p> 
        <div class="body">
            <p>Thanks for that.
I'm just wondering now... it would be quite ok just to store the whole Zend_Gdata_Gapps object in session after authentication, provided that the password would not be stored in Zend_Gdata_Gapps::$_httpClient::$paramsPost and lastRequest.
So, maybe after successful authentication, it should do:
Zend_Gdata_Gapps::getHttpClient()-&gt;resetParameters() 
and
Zend_Gdata_Gapps::getHttpClient()-&gt;setLastRequest(""); // this method does not exist</p>

<p>what do you think?</p>

        </div>
    </div>
    </div>

