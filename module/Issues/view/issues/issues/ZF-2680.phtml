<h2>ZF-2680: Zend_View_Helper_FormElement incorrectly assumes all HTML attributes have values</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-02-18T18:27:33.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-02-24T18:26:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Mark Maynereid (mim)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Zend_View_Helper_FormElement incorrectly assumes all HTML attributes have values but this is not so (eg. readonly, disabled etc.).</p>

<p>Here's my patch for it:</p>

<pre class="highlight"><code>
Index: library/Zend/View/Helper/FormElement.php
===================================================================
--- library/Zend/View/Helper/FormElement.php    (revision 8123)
+++ library/Zend/View/Helper/FormElement.php    (working copy)
@@ -42,7 +42,9 @@
      * @access public
      *
      * @param array $attribs From this array, each key-value pair is
-     * converted to an attribute name and value.
+     * converted to an attribute name and value. Attribute types
+     * to be rendered without associated values are enabled/disabled
+     * with a boolean true/false value.
      *
      * @return string The XHTML for the attributes.
      */
@@ -54,8 +56,12 @@
             if (is_array($val)) {
                 $val = implode(' ', $val);
             }
-            $val = $this-&gt;view-&gt;escape($val);
-            $xhtml .= " $key=\"$val\"";
+            if (is_bool($val)) {
+                $xhtml .= true === $val ? " $key" : '';
+            } else {
+                $val = $this-&gt;view-&gt;escape($val);
+                $xhtml .= " $key=\"$val\"";
+            }
         }
         return $xhtml;
     }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Mark Maynereid (mim) on 2008-02-20T21:00:41.000+0000</p> 
        <div class="body">
            <p>I just discovered the actual terminology I was groping for is "boolean attributes" and in my ignorance missed it in the docs first time round. I thought only the minimised form existed. Here is the HTML reference I should have seen (apols):</p>

<p><a href="http://www.w3.org/TR/html401/intro/sgmltut.html#h-3.3.4.2">http://w3.org/TR/html401/â€¦</a></p>

<p>and here for XHTML:</p>

<p><a href="http://www.w3.org/TR/xhtml1/#C_10">http://www.w3.org/TR/xhtml1/#C_10</a></p>

<p>Going by the user agent comments, there still might be a case for the patch but I sense not, and I need to get used to writing checked="checked" etc.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-20T21:41:05.000+0000</p> 
        <div class="body">
            <p>Mark -- you may want to check out recent SVN; the Checkbox element now operates basically as a boolean, and you do not need to specify the 'checked' attribute with it (it determines it based on the value). Let me know if this resolves the issue for you.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Maynereid (mim) on 2008-02-21T09:48:48.000+0000</p> 
        <div class="body">
            <p>Thanks Matthew. Yes that insulates me from the issue altogether on checkboxes.</p>

<p>I get the impression that ZF general policy is to render the full form boolean attribute so perhaps for a better example where I cannot rely on ZF code deciding, If I want say, a readonly attribute, I should actually set an element's attribute as readonly=readonly for best practice and not worry about  w3.org's browser support for full form booleans as it probably not even a concern any more?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Maynereid (mim) on 2008-02-24T18:26:54.000+0000</p> 
        <div class="body">
            <p>I think this is not really an issue going by the comments. So would like to close it.</p>

        </div>
    </div>
    </div>

