<h2>ZF-10733: Improvment of element addAttrib(...) -&gt; create native methods for each attribute</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2010-11-23T09:10:10.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-08T16:31:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Brückner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>(This suggestion is maybe better for ZF2)</p>

<p>The problem with the addAttrib method is that it is used for all different HTML attributes.</p>

<p>I would suggest to implement for the most common attributes a native function:
$elem-&gt;setSize(10);
$elem-&gt;setMaxLength(20)
$elem-&gt;setClass('...');
...</p>

<p>The method's itself would be easy to implement
public function setSize($size = 10){
    $this-&gt;setAttrib('size', $size);
}</p>

<p>Note:
The methods would be vary for the different form elements.
Because a checkbox don't have the "size" attribute.</p>

<p>But this would improve following things:
* Ease the learning curve (<a href="http://framework.zend.com/wiki/display/ZFDEV2/Zend+Framework+2.0+Requirements?focusedCommentId=22642913#ZendFramework2.0Requirements-Easethelearningcurve">http://framework.zend.com/wiki/display/…</a>)
* IDE can suggest you, which attributes are possible for the current element (in IDE an code)
* If a attribute change, refactoring get's simplier -&gt; refactoring a method is easier than just simple text
* (optional): Adding validators when it's clear, behind the method:
 public function setMaxLength($length){
     $this-&gt;setAttribute('maxlength', $length);
     $this-&gt;addValidator(new Zend_Validate_Lenght(array('max' =&gt; $length));
 }</p>

<p>Disadvantage:
* Code gets harder to maintain</p>

<p>Much work behind it, but I thing it would be a very good improvment.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2010-11-23T10:03:07.000+0000</p> 
        <div class="body">
            <p>I think, there is no need, because you can use "overloading":</p>

<pre class="highlight"><code>
$element-&gt;size = 10;
$element-&gt;class = 'notice';
</code></pre>

<p>[<a href="http://framework.zend.com/apidoc/core/Zend_Form/Element/Zend_Form_Element.html#__set">http://framework.zend.com/apidoc/core/…</a>]</p>

<p>There are too many attributes and HTML5 is coming!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Keckeis (thadafinser) on 2010-11-23T23:11:20.000+0000</p> 
        <div class="body">
            <p>Sure you can also use this method.
But exactly this is my point.</p>

<p>When you are new to the ZF you have first to crawl the documentation or the source code to find out, that this is possible.
If there are clear methods, the questions go away, because you see what you can do (and not intend or read what it is possible).</p>

<p>Maybe the definition from "Ease the learning curve" should be clear defined befor implmenting this feature.</p>

<p>The argument that there are "too many" attributes don't count in my oppinion:
<a href="http://www.w3.org/TR/html401/interact/forms.html#h-17.6">http://w3.org/TR/html401/…</a></p>

<p>For select, optgroup, option there are only 7 additional attributes (not counting "name").</p>

<p>HTML5 is still not completely defined, and much applications will still have HTMl4 several years (IE6-IE8 will not support it!).
Further HTML5 form elements are not complete different from HTML4.</p>

<p>Maybe thinking about this feature multiple times, but also from different view ports!</p>

<p>I think above in my listing there are some very good arguments for this feature.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Hodgins (mjh_ca) on 2010-11-23T23:50:11.000+0000</p> 
        <div class="body">
            <p>@Martin: How would you approach compatibility among various versions of HTML?  Some attributes are deprecated, others added.. So depending on the doctype, you'd have setter functions for attributes that are not valid under that doctype.  In this sense, adding these functions would be less clear rather than more clear -- i.e. a user would call a set function, assuming it is taking care of generating valid HTML, but then the element would output invalid HTML...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2010-11-24T02:23:01.000+0000</p> 
        <div class="body">
            <p>@Martin
??But exactly this is my point.??
I understand completely what you want.</p>

<p>??When you are new to the ZF you have first to crawl the documentation or the source code to find out, that this is possible. If there are clear methods, the questions go away, because you see what you can do (and not intend or read what it is possible).??
This is also a problem of the documentation (Reference guide and API). The review of documentation is a topic for version 2.
Currently, the description is just too poor and too short: (API)</p>

<p>{quote}
__set
Overloading: set object property
{quote}</p>

<p>[<a href="http://framework.zend.com/apidoc/1.11/Zend_Form/Element/Zend_Form_Element.html#__set">http://framework.zend.com/apidoc/1.11/…</a>]</p>

<p>??Further HTML5 form elements are not complete different from HTML4.??
True, but it adds even more attributes.</p>

<p>??I think above in my listing there are some very good arguments for this feature.??
Right, but I also agree with Marc.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Martin Keckeis (thadafinser) on 2010-11-24T10:07:38.000+0000</p> 
        <div class="body">
            <p>@Marc:
It's already implmented in ZF.
The doctype comes in play how the tags get closed:
<a href="http://akrabat.com/zend-framework/top-tip-xhtml-with-zend-form-elements/">http://akrabat.com/zend-framework/…</a></p>

<p>Currently you can say HTML4 form elements are the standard (with the difference of closing in XHTML)</p>

<p>Anyway it will be a problem with the gap from HTML4 to HTML5.
There are a lot different elements or attributes - <a href="http://diveintohtml5.org/forms.html">http://diveintohtml5.org/forms.html</a></p>

<p>Supporting both will sure be necessary. How will it be done there?
If there is a solution, there will also be a solution for this problem.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Richard Tuin (richardtuin) on 2011-01-20T13:56:23.000+0000</p> 
        <div class="body">
            <p>Element attributes other than name and value are in fact just metadata, as defined in the <a href="http://framework.zend.com/wiki/display/ZFDEV2/Zend_Form+2.0#Zend_Form2.0-Makethemetadata%2Fbehaviorseparationexplicit">Zend\Form</a> proposals (ZF 2.0).</p>

<p>In my opinion metadata should be flexible and undefined.
Making seperate setter/getter methods for attributes defined in web standards would suggest separation from the underlying data structure.
Making this just a matter of good documentation.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Brückner (frosch) on 2012-06-08T16:30:54.000+0000</p> 
        <div class="body">
            <p>Have a look at the version 2 and the complete new <a href="https://github.com/zendframework/zf2/blob/master/library/Zend/Form">Zend\Form component</a>.</p>

        </div>
    </div>
    </div>

