<h2>ZF-7413: strpos() operations on objects cause segfaults</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-07-29T11:15:44.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-07T12:16:54.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.1 (11/Aug/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12112/zend_locale_strpos_fix.patch">zend_locale_strpos_fix.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It has come to my attention that Zend_Date() causes a segfault when you pass another Zend_Date object to its constructor.  After some debugging I realized that this segfault is caused by Zend_Locale calling strpos() on that Zend_Date object in _prepareLocale().</p>

<p>I realize that this is probably really a PHP bug, but it seems cleaner if _prepareLocale() casts $locale to a string first before performing any string operations on it.</p>

<p>I was able to reproduce this by executing the following command:</p>

<pre class="literal">
php -r 'require_once "Zend/Date.php"; $x = new Zend_Date(); $y = new Zend_Date($x);'
</pre>

<p>Note that I'm only able to reproduce this problem on one out of three servers I've tested this on.  I was able to reproduce it under 32-bit Debian Linux 5.0.  I was not able to reproduce it under 64-bit Debian Linux 4.0 or 5.0.</p>

<p>I am attaching a patch that will fix the segmentation fault by casting $locale to a string at an earlier point.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-07-29T11:55:33.000+0000</p> 
        <div class="body">
            <p>Which PHP release are you using on Debian ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2009-07-29T12:00:55.000+0000</p> 
        <div class="body">
            <p>5.2.9 on all three servers that I've tested.  The PHP packages were provided by dotdeb.org (the server that produced the segfault had the 5.2.9-0.dotdeb.2 packages installed).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-07-30T14:48:21.000+0000</p> 
        <div class="body">
            <p>This seems to be the related PHP bug: <a href="http://bugs.php.net/bug.php?id=47522">http://bugs.php.net/bug.php?id=47522</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-08-07T11:48:52.000+0000</p> 
        <div class="body">
            <p>The reason of this segfault seem to be the huge memory footprint used when initiating date objects.</p>

<p>Some performance increasements have been implemented which prevent that this error occurs in this place.</p>

<p>Still, ZF is not able to solve a PHP internal error. The given code should have worked even with the used memory.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alex Adriaanse (alexadriaanse) on 2009-08-07T12:16:53.000+0000</p> 
        <div class="body">
            <p>Understood.  But wouldn't it be cleaner to move the string cast up a few lines anyway?  The workaround seems easy and clean.</p>

        </div>
    </div>
    </div>

