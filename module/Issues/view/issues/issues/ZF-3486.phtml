<h2>ZF-3486: Zend_Db_Table should allow for concrete instantiation</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-06-19T18:45:55.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-07-31T20:32:50.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Moxley Stratton (moxley)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-3347">ZF-3347</a></li>
            <li><a href="/issues/browse/ZF-2286">ZF-2286</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>There is already a Zend_Db_Table_Abstract, and Zend_Db_Table is an empty class. If Zend_Db_Table was concrete, I could do this without any issues:</p>

<pre class="highlight"><code>
$categoryTable = new Zend_Db_Table(array(
                                       'db'      =&gt; 'db',
                                       'name'    =&gt; 'category',
                                       'primary' =&gt; 'id'));
</code></pre>

<p>It seems like a mistake.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Turland (elazar) on 2008-08-11T13:20:47.000+0000</p> 
        <div class="body">
            <p>I believe what is now Zend_Db_Table_Abstract used to be Zend_Db_Table. I think it was moved to make it consistent with naming conventions throughout the rest of the framework and that it was kept as an abstract class to maintain backward compatibility.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Moxley Stratton (moxley) on 2008-08-11T13:38:32.000+0000</p> 
        <div class="body">
            <p>Couple points for clarification:</p>

<p>1) Turning an abstract into a concrete class shouldn't affect backward compatibility
2) An abstract Zend_Db_Table class is inconsistent with other similar classes in ZendFW where a class was split into an abstract and concrete. For example: Zend_Db_Table_Row_Abstract (abstract) and Zend_Db_Table_Row (concrete). Another example: Zend_Db_Table_Rowset_Abstract (abstract) and Zend_Db_Table_Rowset (concrete).</p>

<p>Someone probably forgot to remove the 'abstract' keyword from the Zend_Db_Table definition when it was split into two classes.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ryan Mauger (bittarman) on 2008-12-03T13:08:43.000+0000</p> 
        <div class="body">
            <p>The class also has @depreciated version 0.9 for some reason, should it be there?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T10:54:39.000+0000</p> 
        <div class="body">
            <p>Changed title</p>

<p>this would also require some better loadClass() handling inside row and rowset.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-07-17T08:37:57.000+0000</p> 
        <div class="body">
            <p>Fixed for ZF 1.9 as of r16802</p>

        </div>
    </div>
    </div>

