<h2>ZF-3934: clean of Zend_Cache with File Backend does not work as expected</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-08-12T12:47:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-28T02:58:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                frank habermann (lordlamer)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Fabien MARTY (fab)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The clean function with CLEANING_MODE_MATCHING_TAG and CLEANING_MODE_NOT_:MATCHING_TAG with File Backend does not work as expected. I think i found a logical problem in this class.</p>

<p>Example:</p>

<pre class="highlight"><code>
$cache-&gt;save($huge_data, 'myUniqueID', array('tagA', 'tagB', 'tagC'));
$cache-&gt;clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG, array('tagX', 'tagC'));
</code></pre>

<p>My logic says that the cache wit id 'myUniqueID' should be cleared. But try it out. It will not be deleted If the first of the tags will not be found the hole entry will not be deleted in the backend.</p>

<p>So i changed the following here in file Zend/Cache/Backend/File.php from line 508 to 531</p>

<pre class="highlight"><code>
                    case Zend_Cache::CLEANING_MODE_MATCHING_TAG:
                        $matching = false;
                        foreach ($tags as $tag) {
                            if (in_array($tag, $metadatas['tags'])) {
                                $matching = true;
                                break;
                            }
                        }
                        if ($matching) {
                            $result = ($result) &amp;&amp; ($this-&gt;remove($id));
                        }
                        break;
                    case Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG:
                        $matching = true;
                        foreach ($tags as $tag) {
                            if (in_array($tag, $metadatas['tags'])) {
                                $matching = false;
                                break;
                            }
                        }
                        if ($matching) {
                            $result = ($result) &amp;&amp; $this-&gt;remove($id);
                        }                       
                        break;
</code></pre>

<p>After changing this the function works as expected.</p>

<hr /><p>a third parameter to the clean function would be fine to affect if AND or OR is used by CLEANING_MODE_MATCHING_TAG and CLEANING_MODE_NOT_MATCHING_TAG</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2008-08-13T00:48:07.000+0000</p> 
        <div class="body">
            <p>No it works as expected</p>

<p>when you use "$cache-&gt;clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG, array('tagX', 'tagC'));" you want to clean cache records which are tagged with tagX <strong>AND</strong> tagC</p>

<p>if you want to clean cache records which are tagged with  tagX <strong>OR</strong> tagC, you have to do (two lines)</p>

<pre class="highlight"><code>
"$cache-&gt;clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG, array('tagX')"; "$cache-&gt;clean(Zend_Cache::CLEANING_MODE_MATCHING_TAG, array('tagC')";
</code></pre>

<p>It's a choice (because you can do AND and OR). If we choosed your solution, it would be impossible to make an AND</p>

        </div>
    </div>
    </div>

