<h2>ZF-8598: Zend_Validate_File_IsImage class constant inheritance issue</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-12-21T14:08:41.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-26T12:38:12.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Chris Morrell (inxilpro)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate_File</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-8111">ZF-8111</a></li>
            <li><a href="/issues/browse/ZF-8943">ZF-8943</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12529/trunk.diff">trunk.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>The use of class constants in Zend_Validate_File_IsImage is incorrect.  See the following code example:</p>

<pre class="highlight"><code>
&lt;?php 

class Dad
{
    const HAIR_COLOR = "Brown";
    const EYE_COLOR = "Blue";
    public function getHairColor()
    {
        return self::HAIR_COLOR;
    }
    public function getShirtColor()
    {
        return self::SHIRT_COLOR;
    }
}

class Son extends Dad
{
    const HAIR_COLOR = "Red";
    public function getChildHairColor()
    {
        return self::HAIR_COLOR;
    }
    public function getEyeColor()
    {
        return self::EYE_COLOR;
    }
}

$son = new Son();
echo $son-&gt;getHairColor(); // Echoes "Brown"
echo $son-&gt;getChildHairColor(); // Echoes "Red"
echo $son-&gt;getEyeColor(); // Echoes "Blue"
</code></pre>

<p>Because Zend_Validate_File_IsImage redefines constants that are then used in the parent Zend_Validate_File_MimeType class, certain errors have blank messages.</p>

<p>For example, on line 317 of Zend/Validate/File/MimeType:</p>

<pre class="highlight"><code>
if (empty($this-&gt;_type)) {
    return $this-&gt;_throw($file, self::NOT_DETECTED);
}
</code></pre>

<p>{{self::NOT_DETECTED}} refers to 'fileMimeTypeNotDetected' which 'fileIsImageNotDetected' in Zend_Validate_File_IsImage.  And because the $_messageTemplates property has been overwritten in Zend_Validate_File_IsImage, the method looks for $this-&gt;_messageTemplates['fileMimeTypeNotDetected'] which no longer exists.</p>

<p>The solution would be to remove these constants from the top of Zend_Validate_File_IsImage, as the are already defined in the parent:</p>

<pre class="highlight"><code>
const FALSE_TYPE   = 'fileIsImageFalseType';
const NOT_DETECTED = 'fileIsImageNotDetected';
const NOT_READABLE = 'fileIsImageNotReadable';
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Chris Morrell (inxilpro) on 2009-12-21T14:22:27.000+0000</p> 
        <div class="body">
            <p>Attached is a patch to fix this issue.  It just removes those constant definitions.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-12-22T14:29:07.000+0000</p> 
        <div class="body">
            <p>Unable to reproduce</p>

<p>Wether on 5.2 nor on 5.3 the unittests show that a false message content is thrown.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Joakim Nyg√•rd (jokke) on 2010-01-12T04:08:57.000+0000</p> 
        <div class="body">
            <p>The problem is late static binding in PHP 5.2 as explained in this related issue</p>

        </div>
    </div>
    </div>

