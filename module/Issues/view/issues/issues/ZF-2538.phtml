<h2>ZF-2538: Zend_Filter_Inflector::filter() fails with all numeric folder on Windows</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-01-31T14:10:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-03-21T16:25:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.0 (17/Mar/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Rob Allen (rob)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter_Inflector</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>I think we've found a bug in Zend_Filter_Inflector::filter() when using Windows and a module directory that contains a folder consisting entirely of numbers.</p>

<p>The problem manifests itself on line 150 of Inflector.php:</p>

<p>$inflectedTarget = preg_replace(array_keys($processedParts), array_values($processedParts), $this-&gt;_target);</p>

<p>In our case input data is:
$processedParts:
    array(2) {
     ["#:suffix#"] =&gt; "phtml"
     ["#:moduleDir#"] =&gt; "D:\htdocs\HEAD\24074\app\modules\default"
    }</p>

<p>$this-&gt;_target :
    ":moduleDir/views"</p>

<p>And the result is:</p>

<p>$inflectedTarget:
    "D:\htdocs\HEAD074\app\modules\default/views"</p>

<p>If we use a module dir of "D:/htdocs/HEAD/24074/app/modules" then the problem goes away.
Similarly a module dir of "D:\htdocs\HEAD\a24074\app\modules\default" also works.</p>

<p>Note that it doesn't matter what the number is, in all cases, the first two digits, along with the precending backslash are removed. I suspect it's related to  preg_replace's parameter substitution.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2008-02-04T15:30:02.000+0000</p> 
        <div class="body">
            <p>Assigning to Ralph</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Miroslav Kubelik (koubel) on 2008-02-05T02:07:18.000+0000</p> 
        <div class="body">
            <p>Yes, I found the same problem, simple workaround is (tested only on windows)</p>

<pre class="highlight"><code>
$ diff -Naur \
 /c/Program\ Files/Apache\ Group/Apache2/htdocs/zftrunk/library/Zend/Filter/Inflector.php.orig  \
 /c/Program\ Files/Apache\ Group/Apache2/htdocs/zftrunk/library/Zend/Filter/Inflector.php 
--- /c/Program Files/Apache Group/Apache2/htdocs/zftrunk/library/Zend/Filter/Inflector.php.orig Tue Dec 11 14:29:34 2007
+++ /c/Program Files/Apache Group/Apache2/htdocs/zftrunk/library/Zend/Filter/Inflector.php      Tue Feb  5 08:00:54 2008
@@ -443,6 +443,7 @@
                    $processedParts['#'.$pregQuotedTargetReplacementIdentifier.$ruleName.'#'] = $processedPart;
                }
            } elseif (is_string($ruleValue)) {
+                $ruleValue=str_replace("\\","\\\\",$ruleValue);
                 $processedParts['#'.$pregQuotedTargetReplacementIdentifier.$ruleName.'#'] = $ruleValue;
             }
        }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2008-02-15T11:20:33.000+0000</p> 
        <div class="body">
            <p>FIxed in r8036.</p>

<p>Added str_replace() to disable possible backreference like syntax inside replacement strings.</p>

<p>-ralph</p>

        </div>
    </div>
    </div>

