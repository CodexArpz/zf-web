<h2>ZF-209: Function names and use of TRUE and FALSE</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Coding Standards Violation</dd>

    <dt>Created:</dt>
    <dd>2006-07-08T12:40:08.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Chris Shiflett (chris)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Filter</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I'm slightly confused by function names given meaning numbers. It seems sometimes 'digit' is used and other times 'number'.  Also they are shortened.</p>

<p>Functions:
isDigits() isAlnum() getDigits() getAlnum()
Should be
isNumeric() isAlphanumeric() getNumbers() getAlphanumerics()</p>

<p>Also TRUE and FALSE seems to have been used routinely over true and false, personally I think the former is misleading as it implies they are constants and not language keywords. From what I can see the Zend Coding Standard doesn't specify which is acceptable.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Jayson Minard (jayson) on 2006-07-09T01:18:29.000+0000</p> 
        <div class="body">
            <p>general cleanup.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Oliver Saunders (irkengir) on 2006-07-09T04:44:57.000+0000</p> 
        <div class="body">
            <p>Great, seeing as someone has been assigned to this I should probably point out some other issues:</p>

<pre class="highlight"><code>
    public static function isBetween($value, $min, $max, $inc = true)
    {
        if ($value &gt; $min &amp;&amp; 
            $value &lt; $max) {
            return true;
        }

        if ($value &gt;= $min &amp;&amp;
            $value &lt;= $max &amp;&amp;
            $inc) {
                return true;
        }
        
        return false;
    }
</code></pre>

<pre class="highlight"><code>
    public static function isBetween($value, $min, $max, $inclusive = true)
    {
        if ($value &gt; $min &amp;&amp; $value &lt; $max) {
            return true;
        }

        if ($inclusive) {
            if ($value &gt;= $min &amp;&amp; $value &lt;= $max) {
                return true;
            }
        }
        
        return false;
    }
</code></pre>

<pre class="highlight"><code>
    public static function isGreaterThan($value, $min)
    {
        return ($value &gt; $min);
    }
</code></pre>

<pre class="highlight"><code>
    public static function isGreaterThan($value, $min)
    {
        return $value &gt; $min;
    }
</code></pre>

<pre class="highlight"><code>
    public static function isInt($value)
    {
        $locale = localeconv();

        $value = str_replace($locale['decimal_point'], '.', $value);
        $value = str_replace($locale['thousands_sep'], '', $value);

        return (strval(intval($value)) == $value);
    }
</code></pre>

<pre class="highlight"><code>
    public static function isInt($value)
    {
        $locale = localeconv();

        $value = str_replace($locale['decimal_point'], '.', $value);
        $value = str_replace($locale['thousands_sep'], '', $value);
        //parentesis around cast necessary here? not sure
        return ((string)(int)$value) == $value; 
    }
</code></pre>

<pre class="highlight"><code>
    public static function isName($value)
    {
        return (bool) !preg_match('/[^[:alpha:]\ \-\']/', $value);
    }
</code></pre>

<pre class="highlight"><code>
What is this really checking because it sure as hell ain't checking 
if its somebody's name, that would be near impossible?
</code></pre>

<pre class="highlight"><code>
    public static function isPhone($value, $country = 'US')
    {
        if (!ctype_digit($value)) {
            return FALSE;
        }

        switch ($country)
        {
            case 'US':
                if (strlen($value) != 10) {
                    return FALSE;
                }

                $areaCode = substr($value, 0, 3);

                $areaCodes = array(201, 202, 203, 204, 205, 206, 207, 208,
                                   209, 210, 212, 213, 214, 215, 216, 217,
                                   218, 219, 224, 225, 226, 228, 229, 231,
                                   234, 239, 240, 242, 246, 248, 250, 251,
                                   252, 253, 254, 256, 260, 262, 264, 267,
                                   268, 269, 270, 276, 281, 284, 289, 301,
                                   302, 303, 304, 305, 306, 307, 308, 309,
                                   310, 312, 313, 314, 315, 316, 317, 318,
....
</code></pre>

<pre class="highlight"><code>
Are you planning on supporting every country? Here, I'd hope not.
You should probably rename to IsUsaPhone() and implement select countries only, 
i.e the ones with a phone naming system that is simple enough to get right.
</code></pre>

<p>That's it!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mark Evans (sparky) on 2006-07-12T11:18:52.000+0000</p> 
        <div class="body">
            <p>Hi Jayson</p>

<p>If you want I can take care of this whilst I am finishing some other fixes in Zend_Filter.</p>

<p>Please advise</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-09-25T19:44:21.000+0000</p> 
        <div class="body">
            <p>Reassigning from Jayson to Bill Karwin, pending further triage.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-08T12:10:16.000+0000</p> 
        <div class="body">
            <p>Assigning to Darby.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:18:21.000+0000</p> 
        <div class="body">
            <p>Changing fix version to unknown.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:23:34.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.9.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Chris Shiflett (chris) on 2006-11-25T20:45:59.000+0000</p> 
        <div class="body">
            <p>I disagree with the suggested changes to the naming convention. Digits is a very specific way to describe what's happening. The reason for Alnum is to remain consistent with the naming of the character type functions, which developers should already be familiar with.</p>

<p>I agree about the isName() comment. I'll remove that method, barring any objections.</p>

        </div>
    </div>
    </div>

