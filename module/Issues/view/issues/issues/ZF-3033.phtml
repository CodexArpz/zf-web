<h2>ZF-3033: _loadNorm() not working as designed.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-04-03T07:26:16.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-08-31T09:03:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                jim sloan (jsloan)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Alexander Veremyev (alexander)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Search_Lucene</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11425/Zend_search_omnifind.tar.gz">Zend_search_omnifind.tar.gz</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In Zend_Search_Lucene_Index_SegmentInfo the private function _loadNorm($fieldNum) does not use the parameter passed in $fieldNum.</p>

<p>It loops over the $this-&gt;_fields array with a foreach that assigns a new value to $fieldNum.</p>

<pre><code>        foreach ($this-&gt;_fields as $fieldNum =&gt; $fieldInfo) {
            if ($fieldInfo-&gt;isIndexed) {
                $this-&gt;_norms[$fieldNum] = $normfFile-&gt;readBytes($this-&gt;_docCount);
            }
        }
</code></pre>

<p>This is corrupting the $_norms array by adding empty elements to the array. I think that the intention is to load only the normalization data for the field being searched so the following line would suffice</p>

<p>$this-&gt;_norms[$fieldNum] = $normfFile-&gt;readBytes($this-&gt;_docCount);</p>

<p>I discovered this problem when using the Lucene collections created by the IBM Omnifind Yahoo! edition search engine. 
I posted more info here: <a href="http://www.zfforums.com/zend-framework-components-13/mail-formats-search-14/ibm-omnifind-yahoo-edition-797.html#post2243">http://zfforums.com/zend-framework-components-13/â€¦</a></p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-04-18T16:29:51.000+0000</p> 
        <div class="body">
            <p>Please evaluate and categorize/assign as necessary.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2008-07-18T10:50:55.000+0000</p> 
        <div class="body">
            <p>Great thanks for  your report!
I also looked through the details in your post at ZFForum.</p>

<p>The bug is in some other place..</p>

<pre class="highlight"><code>
foreach ($this-&gt;_fields as $fNum =&gt; $fieldInfo) {
    if ($fieldInfo-&gt;isIndexed) {
        $this-&gt;_norms[$fNum] = $normfFile-&gt;readBytes($this-&gt;_docCount);
    }
}
</code></pre>

<p>Iterates through all fields and this is correct. I've changed $fieldNum variable name to $fNum, to increase code readability and make everyone not confused with two differed meaning of input variable $fieldNum and iterating variable $fNum</p>

<p>If index segment uses single norms file, then all norms are stored within .nrm file instead of set of files (.f0, .f1, .f3, ...)
All norms are read at once at first request in this case.</p>

<p>That looks like .nrm file doesn't have enough data or Zend_Search_Lucene has some bug in some other place.</p>

<p>Could you attach your index to the issue for test purposes?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by jim sloan (jsloan) on 2008-07-28T06:57:34.000+0000</p> 
        <div class="body">
            <p>The problem is still observed in 1.6RC1 so I have included the following for testing:
+ /IndexSource  (HTML source)
+ /collections  (Omnifind collection)
+ /library-1.6RC1 Search (Zend/Search) 
+ /Search_Omnifind_index.php (demo searches for 'test' and returns 1 hit; this matches the result set when the same search is run on Omnifind)</p>

<p>I have patched /library-1.6RC1/Zend/Search/Lucene/Index/Segmentinfo.php so that the demo works with the Omnifind collection (line 951)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by jim sloan (jsloan) on 2008-09-09T05:45:18.000+0000</p> 
        <div class="body">
            <p>Just installed 1.6.0 and this problem is not occurring!</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Alexander Veremyev (alexander) on 2008-09-10T09:51:42.000+0000</p> 
        <div class="body">
            <p>OK Good.</p>

<p>There were some changes within Zend_Search_Lucene code before 1.6 release, so it could be fixed earlie.</p>

<p>Nevertheless, I keep issue opened since it has to be checked. Just decrease priority to Minor.</p>

        </div>
    </div>
    </div>

