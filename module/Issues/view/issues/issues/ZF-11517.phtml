<h2>ZF-11517: unwanted Label decorator gets added when creating Form from Config object</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-06-30T09:42:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-07T20:48:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.12.1 (18/Dec/12)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Frank Br√ºckner (frosch)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
            <li>FixForZF1.12.1</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-10065">ZF-10065</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/15052/Radio.php.patch">Radio.php.patch</a></li>
            <li><a href="/issues/secure/attachment/15053/RadioTest.php.patch">RadioTest.php.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Here is the scenario :</p>

<p>You create an array describing the form, listing the decorators you want to associate to your element.
You create a Zend Config object from this array.
You create a Zend Form from the Zend Config object.</p>

<p>At this point, your form element holds the decorators you assigned it, plus a Label decorator.</p>

<p>here's some testcase code :</p>

<pre class="highlight"><code>
$options = array('1' =&gt; 'answer1',
                 '2' =&gt; 'answer2',
                );

$elements['element_3'] = array('type'    =&gt; 'radio',
                               'options' =&gt; array(
                                   'required'     =&gt; true,
                                   'multiOptions' =&gt; $options,
                                   'decorators'   =&gt; array(
    'ViewHelper',
    'Errors',
    array(array('wrapper' =&gt; 'HtmlTag'), array('tag'   =&gt; 'div',
                                               'class' =&gt; 'content',
                                               )),
    array(array('Fieldset' =&gt; 'HtmlTag'), array('tag'      =&gt; 'fieldset',
                                                'data-role' =&gt; 'controlgroup',
                                                )),
    )
                                                       ),
                                                   );

$elements['formSubmit'] = array('type'    =&gt; 'submit',
                                'options' =&gt; array('label'      =&gt; 'valider',
                                                   'decorators' =&gt; array(
                                        'ViewHelper',
                                        'Errors'
                                    )
                                                )
                                );

$configArray = array('elements'          =&gt; $elements,'decorators'        =&gt; array('FormElements',
                                                  array('HtmlTag', array('tag' =&gt; 'div')),
                                                  'Form')
                     );

$config = new \Zend_Config($configArray);
$form   = new \Zend_Form($config);
var_dump($form);die();
</code></pre>

<p>I noticed this on the Radio element, it might be the case with other elements too.</p>

<p>You can prevent this behaviour by explicitely setting disableLoadDefaultDecorators to true on your element in the config array/config object.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T10:38:12.000+0000</p> 
        <div class="body">
            <p>Zend_Config removed as affected components</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T10:48:34.000+0000</p> 
        <div class="body">
            <p>This is the normal behavior:</p>

<pre class="highlight"><code>
/**
 * Load default decorators
 *
 * Disables "for" attribute of label if label decorator enabled.
 *
 * @return Zend_Form_Element_Radio
 */
public function loadDefaultDecorators()
{
    if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
        return $this;
    }
    parent::loadDefaultDecorators();
    $this-&gt;addDecorator('Label', array('tag' =&gt; 'dt',
                                       'disableFor' =&gt; true));
    return $this;
}
</code></pre>

<p>I see no problem and the solution have you already given.</p>

<pre class="highlight"><code>
$elements['element_3'] = array(
    'type'    =&gt; 'radio',
    'options' =&gt; array(
        'required'     =&gt; true,
        'multiOptions' =&gt; $options,
        'decorators' =&gt; array(
            'ViewHelper',
            'Errors',
            array(
                array(
                    'wrapper' =&gt; 'HtmlTag',
                ),
                array(
                    'tag'   =&gt; 'div',
                    'class' =&gt; 'content',
                ),
            ),
            array(
                array(
                    'Fieldset' =&gt; 'HtmlTag',
                ),
                array(
                    'tag'       =&gt; 'fieldset',
                    'data-role' =&gt; 'controlgroup',
                ),
            ),
        ),
        'disableLoadDefaultDecorators' =&gt; true,
    ),
);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthieu Larcher (mattso) on 2011-06-30T11:07:46.000+0000</p> 
        <div class="body">
            <p>This is not the exptected behaviour.
When you manually declare a set of decorators on your form element, the usual behaviour is to automatically disable default decorators. 
For example when you use $element-&gt;setDecorators(array(...)), you don't get any default decorators added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T11:30:33.000+0000</p> 
        <div class="body">
            <p>Hi Matthieu,
I know what you mean. Here is an example for a fix:</p>

<pre class="highlight"><code>
public function loadDefaultDecorators()
{
    if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
        return $this;
    }
    parent::loadDefaultDecorators();
            
    $labelDecorator = $this-&gt;getDecorator('Label');        
    if (false !== $labelDecorator) {
        $labelDecorator-&gt;setOption('disableFor', true);
    }
    
    return $this;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthieu Larcher (mattso) on 2011-06-30T11:44:55.000+0000</p> 
        <div class="body">
            <p>Kai,
Thanks for you proposal, I guess it would do the trick. On the other hand, wouldn't it be more appropriate just not to go through the loadDefaultDecorators method when decorators have been defined ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T11:56:08.000+0000</p> 
        <div class="body">
            <p>See the parent method:</p>

<pre class="highlight"><code>
/**
 * Load default decorators
 *
 * @return Zend_Form_Element
 */
public function loadDefaultDecorators()
{
    if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
        return $this;
    }

    $decorators = $this-&gt;getDecorators();
    if (empty($decorators)) {
        $getId = create_function('$decorator',
                                 'return $decorator-&gt;getElement()-&gt;getId()
                                         . "-element";');
        $this-&gt;addDecorator('ViewHelper')
             -&gt;addDecorator('Errors')
             -&gt;addDecorator('Description', array('tag' =&gt; 'p', 'class' =&gt; 'description'))
             -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dd',
                                             'id'  =&gt; array('callback' =&gt; $getId)))
             -&gt;addDecorator('Label', array('tag' =&gt; 'dt'));
    }
    return $this;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T15:02:48.000+0000</p> 
        <div class="body">
            <p>My solution does not work because it breaks a test:</p>

<pre class="highlight"><code>
/**
 * @group ZF-9682
 */
public function testCustomLabelDecorator()
{
    $form = new Zend_Form();
    $form-&gt;addElementPrefixPath('My_Decorator', dirname(__FILE__) . '/../_files/decorators/', 'decorator');

    $form-&gt;addElement($this-&gt;element);

    $element = $form-&gt;getElement('foo');

    $this-&gt;assertType('My_Decorator_Label', $element-&gt;getDecorator('Label'));
}
</code></pre>

<p>ZF-9682</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T15:19:25.000+0000</p> 
        <div class="body">
            <p>An unit test:</p>

<pre class="highlight"><code>
/**
 * @group ZF-11517
 */
public function testRenderingWithIndividualDecoratorsAsConstructorOptionsWithoutLabel()
{
    $element = new Zend_Form_Element_Radio(array(
        'name'         =&gt; 'foo',
        'multiOptions' =&gt; array(
            'bar'  =&gt; 'Bar',
            'baz'  =&gt; 'Baz',
        ),
        'decorators' =&gt; array(
            'ViewHelper',
            'Errors',
            array(
                array(
                    'wrapper' =&gt; 'HtmlTag',
                ),
                array(
                    'tag' =&gt; 'div',
                ),
            ),
            array(
                array(
                    'fieldset' =&gt; 'HtmlTag',
                ),
                array(
                    'tag' =&gt; 'fieldset',
                ),
            ),
        ),
    ));

    $this-&gt;assertFalse($element-&gt;getDecorator('Label'));

    $html = $element-&gt;render($this-&gt;getView());
    $this-&gt;assertNotContains('¬†', $html);
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kai Uwe (kaiuwe) on 2011-06-30T15:21:51.000+0000</p> 
        <div class="body">
            <p>Proposal 1:</p>

<pre class="highlight"><code>
/**
 * Load default decorators
 *
 * Disables "for" attribute of label if label decorator enabled.
 *
 * @return Zend_Form_Element_Radio
 */
public function loadDefaultDecorators()
{
    if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
        return $this;
    }

    $decorators = $this-&gt;getDecorators();
    if (empty($decorators)) {
        $getId = create_function('$decorator',
                                 'return $decorator-&gt;getElement()-&gt;getId()
                                         . "-element";');
        $this-&gt;addDecorator('ViewHelper')
             -&gt;addDecorator('Errors')
             -&gt;addDecorator('Description', array('tag' =&gt; 'p', 'class' =&gt; 'description'))
             -&gt;addDecorator('HtmlTag', array('tag' =&gt; 'dd',
                                             'id'  =&gt; array('callback' =&gt; $getId)))
             -&gt;addDecorator('Label', array('tag' =&gt; 'dt', 'disableFor' =&gt; true));
    }
    return $this;
}
</code></pre>

<p>Proposal 2:</p>

<pre class="highlight"><code>
/**
 * Load default decorators
 *
 * Disables "for" attribute of label if label decorator enabled.
 *
 * @return Zend_Form_Element_Radio
 */
public function loadDefaultDecorators()
{
    if ($this-&gt;loadDefaultDecoratorsIsDisabled()) {
        return $this;
    }

    parent::loadDefaultDecorators();

    if (isset($this-&gt;_decorators['Label'])
        &amp;&amp; !isset($this-&gt;_decorators['Label']['options']['disableFor']))
    {
         $this-&gt;_decorators['Label']['options']['disableFor'] = true;
    }

    return $this;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Frank Br√ºckner (frosch) on 2012-05-04T15:25:32.000+0000</p> 
        <div class="body">
            <p>Patch and unit tests added.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-07T20:48:15.000+0000</p> 
        <div class="body">
            <p>Patch applied to trunk (25108) and release-1.12 (25109)</p>

        </div>
    </div>
    </div>

