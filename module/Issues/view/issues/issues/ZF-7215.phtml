<h2>ZF-7215: Zend_Cache_Frontend_Function::call() returns NULL under high load</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-07-07T05:23:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-03-01T10:09:19.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                oscar (oscar)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Sometimes under high load the call to Zend_Cache_Frontend_Function::call() returns NULL.</p>

<p>Looking at the source code below seems that it is possible if the cache expires between the calls $this-&gt;test() and $this-&gt;load().</p>

<pre class="highlight"><code>
     /**
     * Main method : call the specified function or get the result from cache
     *
     * @param  string $name             Function name
     * @param  array  $parameters       Function parameters
     * @param  array  $tags             Cache tags
     * @param  int    $specificLifetime If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)
     * @param  int   $priority         integer between 0 (very low priority) and 10 (maximum priority) used by some particular backends             
     * @return mixed Result
     */
    public function call($name, $parameters = array(), $tags = array(), $specificLifetime = false, $priority = 8)
    {
        $cacheBool1 = $this-&gt;_specificOptions['cache_by_default'];
        $cacheBool2 = in_array($name, $this-&gt;_specificOptions['cached_functions']);
        $cacheBool3 = in_array($name, $this-&gt;_specificOptions['non_cached_functions']);
        $cache = (($cacheBool1 || $cacheBool2) &amp;&amp; (!$cacheBool3));
        if (!$cache) {
            // We do not have not cache
            return call_user_func_array($name, $parameters);
        }
        $id = $this-&gt;_makeId($name, $parameters);
        if ($this-&gt;test($id)) {
            // A cache is available
            $result = $this-&gt;load($id);
            $output = $result[0];
            $return = $result[1];
        } else {
            // A cache is not available
            ob_start();
            ob_implicit_flush(false);
            $return = call_user_func_array($name, $parameters);
            $output = ob_get_contents();
            ob_end_clean();
            $data = array($output, $return);
            $this-&gt;save($data, $id, $tags, $specificLifetime, $priority);
        }
        echo $output;
        return $return;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-07-07T05:57:45.000+0000</p> 
        <div class="body">
            <p>Assigning to Alex</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-03-01T10:09:18.000+0000</p> 
        <div class="body">
            <p>duplicates ZF-5514</p>

        </div>
    </div>
    </div>

