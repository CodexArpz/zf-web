<h2>ZF-8403: Zend_Form_Element::_filterValue() change remove param $key and make public</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-11-26T23:21:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:59.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Vyacheslav Dobromyslov (bbg)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Form</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Look at the method Zend_Form_Element::_filterValue().</p>

<pre class="highlight"><code>
    /**
     * Filter a value
     *
     * @param  string $value
     * @param  string $key
     * @return void
     */
    protected function _filterValue(&amp;$value, &amp;$key)
    {
        foreach ($this-&gt;getFilters() as $filter) {
            $value = $filter-&gt;filter($value);
        }
    }

    /**
     * Retrieve filtered element value
     *
     * @return mixed
     */
    public function getValue()
    {
        $valueFiltered = $this-&gt;_value;

        if ($this-&gt;isArray() &amp;&amp; is_array($valueFiltered)) {
            array_walk_recursive($valueFiltered, array($this, '_filterValue'));
        } else {
            $this-&gt;_filterValue($valueFiltered, $valueFiltered);
        }

        return $valueFiltered;
    }
</code></pre>

<p>The method <em>_filterValue</em> is used for filtering arrays and stand alone values both.
Variable <em>$key</em> is not used in <em>_filterValue</em> method. It's mentioned according to <em>array_walk_recursive</em> recommendation, but it's not actually required.
Also it would be better to make the method public. Now if you want to filter some value using the element filters You have to do:</p>

<pre class="highlight"><code>
$element-&gt;setValue($someValue)-&gt;getValue()
</code></pre>

<p>But I don't want to change original element value.</p>

<p>So I propose this:</p>

<pre class="highlight"><code>
    /**
     * Filter a value
     *
     * @param  string $value
     * @return Zend_Form_Element
     */
    public function filterValue(&amp;$value)
    {
        foreach ($this-&gt;getFilters() as $filter) {
            $value = $filter-&gt;filter($value);
        }
        return $this;
    }

    /**
     * Retrieve filtered element value
     *
     * @return mixed
     */
    public function getValue()
    {
        $valueFiltered = $this-&gt;_value;

        if ($this-&gt;isArray() &amp;&amp; is_array($valueFiltered)) {
            array_walk_recursive($valueFiltered, array($this, 'filterValue'));
        } else {
            $this-&gt;filterValue($valueFiltered);
        }

        return $valueFiltered;
    }
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:59.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

