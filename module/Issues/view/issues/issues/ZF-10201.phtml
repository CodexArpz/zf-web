<h2>ZF-10201: Zend_Validate_Regex will fail for certain valid regular expressions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-07-21T23:37:32.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-11-22T11:41:30.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.7 (28/Jul/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Have created a form using the following element</p>

<pre class="highlight"><code>
$this-&gt;addElement("password", "pass_word", array(
 "label"=&gt;"Password",
 "required"=&gt;true,
 "validators"=&gt;array(
  array("Regex", true, array("[a-zA-Z0-9~!@$%^&amp;*]{5,15}"))
 )
));
</code></pre>

<p>I get the following error rendered in my browser</p>

<p>"Internal error while using the pattern '[a-zA-Z0-9~!@$%^&amp;*]{5,15}'"</p>

<p>The regular expression matches correctly if I use a java pattern matching tool (Part of jEdit)</p>

<p>I have tracked the fault back to Zend/Validate/Regex.php Line 107</p>

<pre class="highlight"><code>
/**
 * Sets the pattern option
 *
 * @param  string $pattern
 * @throws Zend_Validate_Exception if there is a fatal error in pattern matching
 * @return Zend_Validate_Regex Provides a fluent interface
*/
public function setPattern($pattern)
{
 $this-&gt;_pattern = (string) $pattern;
 $status         = @preg_match($this-&gt;_pattern, "Test"); **** This is line 107 ****
 if (false === $status) {
  require_once 'Zend/Validate/Exception.php';
  throw new Zend_Validate_Exception("Internal error while using the pattern '$this-&gt;_pattern'");
 }

 return $this;
}
</code></pre>

<p>As you can see the subject of preg_match will never pass my regular expression. I know that workarounds exist. I could daisy chain the regex validator with the stringLength validator or I could alter my regex</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Hendri Smit (hendri.smit) on 2010-07-22T02:57:05.000+0000</p> 
        <div class="body">
            <p>Your regex pattern doesn't have any delimiters so it is invalid. That's why the exception is thrown.
The preg_match function will only return false if the pattern is incorrect. It returns 0 if no match was found.</p>

<p>This is not a bug. Read <a href="http://php.net/manual/en/book.pcre.php">http://php.net/manual/en/book.pcre.php</a> for more info on regular expressions in PHP.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Feighen Oosterbroek (noondaysun) on 2010-07-23T03:32:01.000+0000</p> 
        <div class="body">
            <p>I know. I had posted the bug by the time I had realised why it was returning false, and couldn't find a way to resolve the bug myself</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-07-24T06:43:41.000+0000</p> 
        <div class="body">
            <p>Closing as non issue according to the responses</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2010-11-22T11:41:30.000+0000</p> 
        <div class="body">
            <p>Correct fix version as it has been deleted unintentionally by another user</p>

        </div>
    </div>
    </div>

