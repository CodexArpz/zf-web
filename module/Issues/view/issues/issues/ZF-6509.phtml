<h2>ZF-6509: Zend_Cache with Zend_Translate omits language label in cache filenames resulting in translations not working</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-03T11:57:05.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-28T09:27:08.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.9.0 (31/Jul/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                TeOSuRf (teosurf)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Translate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>1)No bug with Zend Framework v1.7.2.
2)Bug with Zend Framework v1.8.0dev.</p>

<p>I use a very simple translate config with array adapter:</p>

<pre><code>    $frontendOptions = array(
            'lifetime' =&gt; 30,
            'automatic_serialization' =&gt; true);
    // cache_dir: directory where to put the cache files
    $backendOptions = array(
            'cache_dir' =&gt; $this-&gt;_root . '/var/tmp/');
    // getting a Zend_Cache_Core object
    $this-&gt;_cache = Zend_Cache::factory(
            'Core',
            'File',
            $frontendOptions,
            $backendOptions);
    Zend_Registry::set('cache', $this-&gt;_cache);


    $english = array('title' =&gt; 'title');
    $italian= array('title' =&gt; 'titolo');
    $german= array('title' =&gt; 'Titel');

    Zend_Translate::setCache(Zend_Registry::get('cache'));
    $translate = new Zend_Translate('array', $english, 'en');
    $translate-&gt;addTranslation($italian, 'it');
    $translate-&gt;addTranslation($german, 'de');
</code></pre>

<p>Cache files (content of ..../var/tmp/):
Case 1) :
zend_cache---internal-metadatas---Zend_Translate_Array_de_Array
zend_cache---internal-metadatas---Zend_Translate_Array_en_Array
zend_cache---internal-metadatas---Zend_Translate_Array_it_Array
zend_cache---internal-metadatas---Zend_Translate_Array_Options
zend_cache---Zend_Translate_Array_de_Array
zend_cache---Zend_Translate_Array_en_Array
zend_cache---Zend_Translate_Array_it_Array
zend_cache---Zend_Translate_Array_Options</p>

<p>Case 2) :
zend_cache---internal-metadatas---Zend_Translate_Array_Array
zend_cache---internal-metadatas---Zend_Translate_Array_Options
zend_cache---Zend_Translate_Array_Array
zend_cache---Zend_Translate_Array_Options</p>

<p>In case 2) only the first loaded translation works.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-05-03T12:41:53.000+0000</p> 
        <div class="body">
            <p>The reason for this behaviour is that you don't give a file but only the content of the file to the adapter.
The cachename holds the filename (translation files are cached based on their path and filename).
The old behaviour did not work for 2/3 of usecases and specially for multilingual files.</p>

<p>So to have it working correct there are 2 ways for you:</p>

<ul><li>Load the array from within a file (that's ho the manual describes the array adapter)</li>
<li>Load only the one single array you want to use actually... no user needs to have a site simultanly in 2 or more languages.</li>
</ul>
        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by TeOSuRf (teosurf) on 2009-05-03T18:41:14.000+0000</p> 
        <div class="body">
            <p>Thank you very much, loading the array from within a file works perfectly.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Fabien MARTY (fab) on 2009-05-04T13:27:58.000+0000</p> 
        <div class="body">
            <p>remove Zend_Cache as affected component (not a Zend_Cache issue)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-06-27T10:01:11.000+0000</p> 
        <div class="body">
            <p>In Incubator since r16247, waiting for code review of ZF-2400</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bert Van Hauwaert (becoded) on 2009-07-02T04:38:07.000+0000</p> 
        <div class="body">
            <p>It doesn't seem right that this doesn't work anymore when you give the content to the adapter.
There is an example in the manuel, to just give the data. So it should work that way also.
I'm using an custom adapter that loads the data from MySQL, so I don't have a file. But now I can't cache anymore because of this change.</p>

<pre class="highlight"><code>
$english = array(
    'message1' =&gt; 'message1',
    'message2' =&gt; 'message2',
    'message3' =&gt; 'message3');

$german = array(
    'message1' =&gt; 'Nachricht1',
    'message2' =&gt; 'Nachricht2',
    'message3' =&gt; 'Nachricht3');

$translate = new Zend_Translate('array', $english, 'en');
$translate-&gt;addTranslation($deutsch, 'de');
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-07-02T04:53:37.000+0000</p> 
        <div class="body">
            <p>You may have noted that this issue is marked as "in progress" which means that it's not resolved in core.
You may have also noted that this issue is fixed within incubator and actually blocked by another issue.</p>

<p>Please read previous comment before adding a own comment.
Giving someone help to make his application work should always be allowed even if it's not the fix itself.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-07-20T12:14:17.000+0000</p> 
        <div class="body">
            <p>Accepted and integrated into core with r16883.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jonas Marien (jmarien) on 2009-08-28T07:29:50.000+0000</p> 
        <div class="body">
            <p>Caching still didn't work - even when applying the above mentioned version.</p>

<p>We had to add the locale to the cache key to make caching work as it should:</p>

<pre class="highlight"><code>
$id = 'Zend_Translate_' . (string) $locale. '_'. md5(serialize($data)) . '_' . $this-&gt;toString();
</code></pre>

<p>instead of:</p>

<pre class="highlight"><code>
$id = 'Zend_Translate_' . md5(serialize($data)) . '_' . $this-&gt;toString();
</code></pre>

<p>in Zend_Translate_Adapter.</p>

<p>It helped for us, so someone else might be interested too in this fix.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jonas Marien (jmarien) on 2009-08-28T07:31:46.000+0000</p> 
        <div class="body">
            <p>Again, now with markup as it should (I hope):</p>

<pre class="highlight"><code>
$id = 'Zend_Translate_' . (string) $locale. '_'. md5(serialize($data)) . '_' . $this-&gt;toString();
</code></pre>

<p>instead of:</p>

<pre class="highlight"><code>
$id = 'Zend_Translate_' . md5(serialize($data)) . '_' . $this-&gt;toString();
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-08-28T09:27:07.000+0000</p> 
        <div class="body">
            <p>Your proposed change re-introduces the problem that caching does not work with multilimgual translation files.</p>

<p>Locale and Caching must not be fixed to each other. As $data referrs to the filename/path this is the better way than using the locale. Additionally your change introduces problems when someone uses multiple files for the same locale.</p>

<p>Our unittests show that things work as expected with release 1.9. The problem described in this issue does no longer exist with the mentioned release.</p>

<p>As you said "Applying" I think that you did not use the release but only this single release. You should note that before and after that also changes occured. And changes could have been done in other components as well (Zend_Cache).</p>

<p>Feel free to give reproducable information that this problem is not fixed with 1.9 and we will reopen it.</p>

        </div>
    </div>
    </div>

