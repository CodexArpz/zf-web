<h2>ZF-7954: Add a collection of context sensitive validators</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2009-09-24T19:40:03.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-09-25T04:07:38.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It would be great to have a series of context sensitive validators.</p>

<p>Since the context isn't supported by regular validation chains, and used mainly by forms, maybe they should be under Zend_Form_Validate instead to reduce confusion, or does that just make it worse?</p>

<p>Some useful validators that would be great if they had context sensitive alternatives:</p>

<p>Db_RecordExists
Db_NoRecordExists
Between
GreaterThan
LessThan
Identical
NotEmpty
Regex</p>

<p>Let me know if this should go through the proposal process instead.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-25T00:15:41.000+0000</p> 
        <div class="body">
            <p>No, this is nonsense.</p>

<p>Validators themself should not take care of context. Context is only a way of Zend_Form to prevent problems on actual API of Zend_Form.</p>

<p>What should a identical validator for example to with a context ?
Identical means that token and value are 100% identical. A context would only be usefull when it has to check only a part, which means that it would then no longer be identical but only partitial. Same goes for other validators.</p>

<p>And we can not add context to the interface as this would mean that all validators can not be used standalone anymore, or have problems when you change Zend_Forms API or extend it with a own implementation.</p>

<p>Actually there is already a proposal which aims to solve this problem because context was added a few months ago to Zend_Form.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-09-25T00:17:26.000+0000</p> 
        <div class="body">
            <p>Closing as won't fix.</p>

<p>The existing proposal has another way to solve this problem, than extending all validators, or breaking the API. It will not create duplicate validators nor will it change existing validators.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Muir (dmuir) on 2009-09-25T01:23:27.000+0000</p> 
        <div class="body">
            <p>I'm not proposing that all the validators be extended, as many of them don't make sense to validate against the context.</p>

<p>Here's an example of what a context sensitive Identical validator would look like (which would come in very handy with a registration form that asks you to enter the password twice):</p>

<pre class="highlight"><code>
$form-&gt;addElements(array(
    'password' =&gt; array(
        'type' =&gt; 'text',
        'options' =&gt; array(
            'label' =&gt; 'Password'
        )
    ),
    'password_confirm' =&gt; array(
        'type' =&gt; 'text',
        'options' =&gt; array(
            'label' =&gt; 'Password Confirm',
            'validators' =&gt; array(
                array('Identical', true, array('%password%'))
            )
        )
    )
));
</code></pre>

<p>In this case, the token %password% gets replaced with the value from the password value in the context.</p>

<p>But as you say, there's a proposal that is supposed to fix all this. Could you provide a link to the proposal? I know Matthew is working on refactoring Zend_Form, but his proposal hasn't been updated in a year and a half, and the other proposals are much older.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by David Muir (dmuir) on 2009-09-25T03:43:16.000+0000</p> 
        <div class="body">
            <p>Sorry, had a brain fart. Was looking for Zend_Form related proposals, not Zend_Validate. I'm assuming you're referring to Zend_Validate/Filter_Builder? (<a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Validate_Builder+-+Bryce+Lohr">http://framework.zend.com/wiki/display/â€¦</a>)
It does solve some issues, but would need to be supported by Zend_Form to make it applicable.</p>

        </div>
    </div>
    </div>

