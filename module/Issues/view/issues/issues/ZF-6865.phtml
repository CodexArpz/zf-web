<h2>ZF-6865: Zend_Navigation view helper support for multiple instances</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-05-30T07:29:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-05-11T15:16:27.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Robin Skoglund (robinsk)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Navigation</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Current implementation of Zend_Navigation view helper only support to handle one instance of Zend_Navigation. Its should serve multiple of navigation instances, similar to placeholder concept. most of the websites contains more than one navigation.</p>

<p>lets say</p>

<pre class="highlight"><code> 
$main = new Zend_Navigation();
$sidebar = new Zend_Navigation();
$view-&gt;navigation($main);  // sets the default
$view-&gt;navigation("sidebar", $sidebar); //sets the sidebar view
//etc .. for footer, rightclick menu :)
//easy after that access the navigation in the view
$this-&gt;navigation("sidebar") ; //access the side bar navigation
$this-&gt;navigation(); // access the default navigation
</code></pre>

<p>Thanks</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Robin Skoglund (robinsk) on 2009-06-13T04:42:39.000+0000</p> 
        <div class="body">
            <p>This sounds interesting. Does anyone else have any comments?</p>

<p>What you're requesting needs modifications in the proxy helper that might not be backwards compatible. By the way, is this feature intended for all helpers, or just the proxy helper?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mina R Waheeb (syncer) on 2009-06-13T10:50:06.000+0000</p> 
        <div class="body">
            <p>We can achieve this with backwards compatible by change the type check in the proxy view helper method signature like the below prototype</p>

<pre class="highlight"><code>
public function navigation(Zend_Navigation_Container $container = null)
// to
public function navigation($container = null, Zend_Navigation_Container $nav = null)
// and add new array to navigation proxy view helper $containers
// if $nav is null then 
//    if $container is a string then call setContainer(containers[$container])
//    if $container is Zend_Navigation_Container then call  setContainer($container)
// else
//    $container must be string then store $nav in the $containers array 
//    then call setContainer(containers[$container])
</code></pre>

<p>I believe by this way there is no need to change all the helpers because the mechanism to change the container already exist.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by John John (chetzoff) on 2009-06-14T08:42:42.000+0000</p> 
        <div class="body">
            <p>Because of the mentioned problem, at the moment I have to refuse to use this component, because on my site I have 3 menus with different content. Hope that this issue will be resolved  as fast as possible  in the next version.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mina R Waheeb (syncer) on 2009-06-14T09:24:40.000+0000</p> 
        <div class="body">
            <p>more readable prototype \</p>

<pre class="highlight"><code>
public function navigation($container = 'default', Zend_Navigation_Container $navigation = null) {
    if($navigation != null) {
         $this-&gt;_containers[$container] = $navigation;
    } elseif ($container instanceof Zend_Navigation_Container) {
         $this-&gt;_containers['default'] = $navigation = $container;
    } elseif (isset($this-&gt;_containers[$container])) {
         $navigation = $this-&gt;_containers[$container];
    } elseif($container == 'default') {
         // Maybe better modify getContainer to getContainer($id = null)
         // to allow multi-navs to be stored in Zend_Registry by resources etc...
         // Keys for example: Zend_Navigation_Default, Zend_Navigation_Sidebar, Zend_Navigation_Footer ..
         $this-&gt;_containers[$container] = $navigation = $this-&gt;getContainer();
    } else {
         $this-&gt;_containers[$container] = $navigation = new Zend_Navigation();
    }
    if (null !== $navigation) {
         $this-&gt;setContainer($navigation);
    }
    return $this;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Mina R Waheeb (syncer) on 2009-07-04T10:02:43.000+0000</p> 
        <div class="body">
            <p>any news?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ashley Simons (ashleysimons) on 2009-08-04T06:39:33.000+0000</p> 
        <div class="body">
            <p>I quickly tried creating a custom view helper that extends the pre built view helper (merely calling the navigation method from my custom view helper's appropriate method) to no avail.</p>

<p>So when I have some time I'll look into both the view helper and zend_navigation to see what methods I'll need to override. However with this line of thought, its hard to be confident about the future compatibility side of things.</p>

<p>I need multiple instances of zend_navigation, per page on my multiple module project.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Szteliga (websafe) on 2009-08-24T06:07:34.000+0000</p> 
        <div class="body">
            <p>I would like to see this resolved, because i think it is  natural to use Zend_Navigation for site's main navigation and a separate instance of Zend_Navigation for a language selection menu or any other kind of "menu" not directly related to site's main navigation.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robin Skoglund (robinsk) on 2009-08-24T06:17:56.000+0000</p> 
        <div class="body">
            <p>I have not put any work/thoughts into this issue since my last comment. I'm still awaiting more community feedback on possible solutions and requirements.</p>

<p>To be honest, this is not exactly a major issue/drawback with the view helper. You can always store as many container instances you like, e.g. in a registry, and simply render menus for those separately.</p>

<p>Example:</p>

<pre class="highlight"><code>
&lt;?php
$topNav = Zend_Registry::get('myTopNav');
$sideNav = Zend_Registry::get('mySideNav');
echo $this-&gt;navigation()-&gt;menu()-&gt;renderMenu($topNav);
echo $this-&gt;navigation()-&gt;menu()-&gt;renderMenu($sideNav);
</code></pre>

<p>If you want to take it further, you could store the containers in the proxy helper dynamically, and simply do:</p>

<pre class="highlight"><code>
&lt;?php
$proxy = $this-&gt;navigation();
echo $proxy-&gt;menu($proxy-&gt;topNav);
echo $proxy-&gt;menu($proxy-&gt;sideNav);
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Troy Marker (tlmarker) on 2009-09-15T20:36:08.000+0000</p> 
        <div class="body">
            <p>I have been trying to get two menu to render on the same page, but i am haveing many problems. I tried Mr. Skoglung's example from above, but am not able to get it to work. Here is what I am doing. Being both menus will be the same on through the application i am putting this code in the Bootstrap.php file for the application:
<code>
Zend_Registry::set('utility',$container-&gt;findByLabel('Page 1'));
Zend_Registry::set('main',$container-&gt;findByLabel('Page 2'));
</code>
And this code I am putting in the layout script:
<code>
&lt;?php echo $this-&gt;navigation()-&gt;menu()-&gt;renderMenu(Zend_Registry::get('utility')); ?&gt;
&lt;?php echo $this-&gt;navigation()-&gt;menu()-&gt;renderMenu(Zend_Registry::get('main'));  ?&gt;
</code>
The container I am using is something I copied out of the online documentation online. For the sake of completeness, I will post it here:
<code>
$container = new Zend_Navigation(array(    array(        'label' =&gt; 'Page 1',        'uri'   =&gt; 'page-1',        'foo'   =&gt; 'bar',        'pages' =&gt; array(            array(                'label' =&gt; 'Page 1.1',                'uri'   =&gt; 'page-1.1',                'foo'   =&gt; 'bar',            ),            array(                'label' =&gt; 'Page 1.2',                'uri'   =&gt; 'page-1.2',                'class' =&gt; 'my-class',            ),            array(                'type'   =&gt; 'uri',                'label'  =&gt; 'Page 1.3',                'uri'    =&gt; 'page-1.3',                'action' =&gt; 'about'            )        )    ),    array(        'label'      =&gt; 'Page 2',        'id'         =&gt; 'page_2_and_3',        'class'      =&gt; 'my-class',        'module'     =&gt; 'page2',        'controller' =&gt; 'index',        'action'     =&gt; 'page1'    ),    array(        'label'      =&gt; 'Page 3',        'id'         =&gt; 'page_2_and_3',        'module'     =&gt; 'page3',        'controller' =&gt; 'index'    )));
</code></p>

<p>Onces I have this working, I would like to add ACL to it to display only certain parts of the menu.</p>

<p>The above code render the first menu, but not the second. I am at a loss. I have tryin several thing to no avail. Any help would be greatly apreciated.</p>

<p>Thank you in advance.
Troy</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Robin Skoglund (robinsk) on 2009-10-16T15:36:47.000+0000</p> 
        <div class="body">
            <p>Closing this issue now to clean up the issue tracker. For general help, consult the mailing lists or IRC.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2009-12-08T11:46:31.000+0000</p> 
        <div class="body">
            <p>I would be grateful, if you could add the described possibility.</p>

<p>The current implementation is not really good and seperated menus are used quite often I think.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Julian Pustkuchen (anybody) on 2009-12-08T11:58:20.000+0000</p> 
        <div class="body">
            <p>I'd like to add, that this extension would make sense for example for the use of breadcrumbs.</p>

<p>Now if you have several navigations, only the one added to the view will work for breadcrumbs. That's not really nice...</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Phil Brown (philbrown) on 2009-12-17T21:37:16.000+0000</p> 
        <div class="body">
            <p>Robin, regarding your example</p>

<pre class="highlight"><code>
&lt;?php
$proxy = $this-&gt;navigation();
echo $proxy-&gt;menu($proxy-&gt;topNav);
echo $proxy-&gt;menu($proxy-&gt;sideNav);
</code></pre>

<p>given the absence of __get and __set magic methods in the proxy helper, I can only assume you're directly assigning new, public properties. Don't you think this is a little hacky (it's one of those PHP "features" I've never been happy with)? Perhaps you could implement the aforementioned magic methods to manipulate a protected $_namedContainers array for named navigation containers.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Philipp Feigl (pfeigl) on 2010-05-11T15:16:26.000+0000</p> 
        <div class="body">
            <p>For anyone else trying to get it accomplished, this seems to be a good way to do it:</p>

<pre class="highlight"><code>
$this-&gt;navigation()-&gt;menu()-&gt;render($navigationContainerObject)
</code></pre>

<p>calling render (or even renderMenu) directly with an navigation container does not change the internal navigation object of the view helper and simply renders whatever is provided.</p>

        </div>
    </div>
    </div>

