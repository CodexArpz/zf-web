<h2>ZF-3609: Convenience functions on Zend_Gdata_App_Base, extra guard clauses</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-07-08T16:38:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:14.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Darien Hager (hagerd)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Gdata</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11380/gdata_app_base.patch">gdata_app_base.patch</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I've added three convenience functions to help cut down on certain checks.</p>

<p>Patch an examples to follow.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Darien Hager (hagerd) on 2008-07-08T16:39:37.000+0000</p> 
        <div class="body">
            <p>Here's an example of how Zend_Gdata_Calendar_ListEntry::getDom() looks before and after these functions:</p>

<pre class="highlight"><code>
public function getDOM($doc = null)
{
    $element = parent::getDOM($doc);
    if ($this-&gt;_accessLevel != null) {
        $element-&gt;appendChild($this-&gt;_accessLevel-&gt;getDOM($element-&gt;ownerDocument));
    }
    if ($this-&gt;_color != null) {
        $element-&gt;appendChild($this-&gt;_color-&gt;getDOM($element-&gt;ownerDocument));
    }
    if ($this-&gt;_hidden != null) {
        $element-&gt;appendChild($this-&gt;_hidden-&gt;getDOM($element-&gt;ownerDocument));
    }
    if ($this-&gt;_selected != null) {
        $element-&gt;appendChild($this-&gt;_selected-&gt;getDOM($element-&gt;ownerDocument));
    }
    if ($this-&gt;_timezone != null) {
        $element-&gt;appendChild($this-&gt;_timezone-&gt;getDOM($element-&gt;ownerDocument));
    }
    if ($this-&gt;_where != null) {
        foreach ($this-&gt;_where as $where) {
            $element-&gt;appendChild($where-&gt;getDOM($element-&gt;ownerDocument));
        }
    }
    return $element;
}
</code></pre>

<pre class="highlight"><code>
public function getDOM($doc = null)
{
    $element = parent::getDOM($doc);
    self::setDomChild($element,$this-&gt;_accessLevel);
    self::setDomChild($element,$this-&gt;_color);
    self::setDomChild($element,$this-&gt;_hidden);
    self::setDomChild($element,$this-&gt;_selected);
    self::setDomChild($element,$this-&gt;_timezone);
    self::setDomChildren($element,$this-&gt;_where);
    return $element;
}
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darien Hager (hagerd) on 2008-07-08T16:40:22.000+0000</p> 
        <div class="body">
            <p>Suggested guard clauses and convenience functions, as patched against the 1.5.2 release</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Jochen Hartmann (jhartmann) on 2008-07-08T16:51:46.000+0000</p> 
        <div class="body">
            <p>Darien,</p>

<p>Thanks for this patch. Much cleaner this way. One thing that may be even better is to just have a</p>

<pre>

self::setDomChildren($element, $value)

</pre>

<p>method that takes an array as an argument. This way we can pass a single element with value or an array.</p>

<p>Let me know what you think
Thanks
- Jochen</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Darien Hager (hagerd) on 2008-08-13T10:22:03.000+0000</p> 
        <div class="body">
            <p>I suppose. The only problem there is the behavior when the second argument is null.</p>

<p>If you're setting a single item, it means "missing", and means it should be skipped.
If you're trying to do an array, it'd be an outright error.</p>

<p>Just musing here...  what if your second argument is an object which implements getDom() but also has an array interface implemented? is_array() will differentiate between them handily, but it may not be clear which behavior is desired.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:14.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

