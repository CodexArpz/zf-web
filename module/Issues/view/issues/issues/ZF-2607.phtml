<h2>ZF-2607: Add method to Zend_Db_Adapter_Abstract to retrieve last used statement object</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2008-02-09T19:21:34.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-08-28T02:48:16.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ralph Schindler (ralph)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-7707">ZF-7707</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/11134/Abstract.php">Abstract.php</a></li>
            <li><a href="/issues/secure/attachment/11133/Abstract.php">Abstract.php</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Add method to Zend_Db_Adapter_Abstract to retrieve last used statement object.</p>

<p>This would allow users to call the errorCode and errorInfo PDO methods if a query fails and additional infos are needed.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Ota Mares (ota) on 2008-02-09T19:27:16.000+0000</p> 
        <div class="body">
            <p>Modified Zend_Db_Adapter_Abstract class with new method getStatement.</p>

<p>The PDO statement gets safed when the query method is executed (see line 415).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ota Mares (ota) on 2008-02-09T19:31:17.000+0000</p> 
        <div class="body">
            <p>Fixed typo ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-25T20:43:55.000+0000</p> 
        <div class="body">
            <p>Please categorize/fix as needed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benjamin Eberlei (beberlei) on 2008-09-05T11:30:19.000+0000</p> 
        <div class="body">
            <p>It would also be possible to add the PDOStatement/Exception/ErrorInfo as additional parameters to the statement exception. and make it retrievable by additional getPDOException method or something.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2009-01-06T10:50:41.000+0000</p> 
        <div class="body">
            <p>No action on this issue for too long. I'm reassigning to Ralph for re-evaluation and categorization.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-01-10T11:12:13.000+0000</p> 
        <div class="body">
            <p>Will evaluate within 2 weeks</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ralph Schindler (ralph) on 2009-08-27T15:55:39.000+0000</p> 
        <div class="body">
            <p>Keeping a reference to the last statement has the potential of creating a memory leak in Zend_Db, since Zend_Db_Adapter::query() actually gives you the statement, its the job of the developer to keep track of it.</p>

<p>There should be no relation between the adapter and the statement. Please reopen if you have a use case that might be considered.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ota Mares (ota) on 2009-08-28T02:47:09.000+0000</p> 
        <div class="body">
            <p>Please look at the following code example. There is no other way to check what kind of error i have than comparing the string value of the exception (And thats an ugly solution to solve it).
The Zend_Db_Adapter_Abstract::insert() method does not return the statement object and there is no way to retrieve it, thats why i asked for a get method.</p>

<pre class="highlight"><code>
$trys = 5;

do {
    try {
        // just a dumbed down example
        $id = 12345;
        $db-&gt;insert('table', array('id' =&gt; $id));
    }
    catch(Zend_Db_Statement_Exception $e) {

        // duplicate value error, regenerate id and retry insert
        if (false !== strpos($e-&gt;getMessage(), '1062 Duplicate entry') &amp;&amp; $trys &gt; 0) {
            $trys--;
        }
        // general mysql error, throw the exception again
        else {
            throw $e;
        }
    }
}
// do until trys are used up
while($trys &gt; 0);
</code></pre>

        </div>
    </div>
    </div>

