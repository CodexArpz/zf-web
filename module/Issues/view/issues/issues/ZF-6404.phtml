<h2>ZF-6404: Minor improvement to Zend_Controller_Router_Route_* classes to make them suitable for using in Zend_Controller_Router_Route_Chain</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-04-23T22:17:54.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-04-26T15:01:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.8.0 (30/Apr/09)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Ben Scholzen (dasprid)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently (version 1.8) it's impossible to use <em>assemble</em> when using route Chain without side-effects. Chain's assemble method checks what variables each chain node injected into assembled url:</p>

<pre class="highlight"><code>
    public function assemble($data = array(), $reset = false, $encode = false)
    {
        $value = '';

        foreach ($this-&gt;_routes as $key =&gt; $route) {
            if ($key &gt; 0) {
                $value .= $this-&gt;_separators[$key];
            }

            $value .= $route-&gt;assemble($data, $reset, $encode);
// Check begins here vvvvv
            if (method_exists($route, 'getVariables')) {
                $variables = $route-&gt;getVariables();

                foreach ($variables as $variable) {
                    $data[$variable] = null;
                }
            }
        }

        return $value;
    }
</code></pre>

<p>Note for getVariables method. Everything seemed to be great for now BUT only <em>Hostname</em> route seemed to implement this method so when we trying to chain few Zend_Controller_Router_Route objects together with last of them having '*' in pattern, or chaining Zend_Controller_Router_Route with Zend_Controller_Router_Module we have all of our params wich was already in url from first Route elements doubled by the last one:</p>

<pre class="highlight"><code>
        $lngRoute = new Zend_Controller_Router_Route(
            ':language',
            array(
                'language'      =&gt;  'none',
            ),
            array(
                'language'      =&gt;  '[a-z]{2}'
            )
        );
// App_Controller_Router_Route_Module -- workaroud to ZF-6399
        $route_module = new App_Controller_Router_Route_Module(
            array(),
            $dispatcher,
            $request
        );

        $chain = new Zend_Controller_Router_Route_Chain();
        $chain-&gt;chain($lngRoute);
        $chain-&gt;chain($route_module);
        $router-&gt;addRoute('default', $chain);


...........

        $router-&gt;assemble(array('language' =&gt; 'en', 'module' =&gt; 'user', 'controller' =&gt; 'register', 'action' =&gt; 'action'));
// EXPECTED: /en/user/register/action
// CURRENT OUTPUT: /en/user/register/action/language/en
</code></pre>

<p>That happens because Zend_Controller_Router_Route DO NOT define getVariables method.</p>

<p>so it seemed to me that all Rute_* classes should be reworked with getVariables method added (more of it: it would be great to add this method to Abstract Route class).</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2009-04-24T06:04:22.000+0000</p> 
        <div class="body">
            <p>Assigning to dasprid</p>

        </div>
    </div>
    </div>

