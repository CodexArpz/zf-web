<h2>ZF-8856: Zend_Cache_Backend_Memcached bad performance on adding setting keys</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Performance Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-01-18T04:33:31.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-01-24T16:18:06.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Marc Bennewitz (private) (mabe)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Cache</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-5702">ZF-5702</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In the Zend_Cache_Backend_Memcached-&gt;save method it tries memcache-&gt;add and if it fails does a memcache-&gt;set.
The comment just above this code says that set() seems slower.</p>

<p>My tests indicate that add() and set() is almost identical in speed.</p>

<p>Also, if done in this way we assume that the cache-keys doesn't already exist most of the time (that add() doesn't fail).
If add() fails, the saving of a cache will take double time.</p>

<p>I propose to just call memcache-&gt;set(), and not do add() at all. This will give consistent speed on saving the cache.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-01-21T12:40:23.000+0000</p> 
        <div class="body">
            <p>Yes, on replacing items all memcache requests are send twice.
But in inserting new one the requests are send once but memcache isn't really faster because memcache have to check if the item exits anyway.</p>

<p>Therefor a simple set is enough.</p>

<p>I'm planing to integrate some new functionality (like add, replace, multiple interface etc.) but there few toto's:
(<a href="http://framework.zend.com/wiki/display/ZFPROP/Zend_Cache+refactoring+-+Marc+Bennewitz">http://framework.zend.com/wiki/display/â€¦</a>)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-01-22T11:24:18.000+0000</p> 
        <div class="body">
            <p>The add method was implemented by another issue:</p>

<blockquote>
  <p>save() performs a replace() when it's intending to do a set(), and replace() apparently doesn't work on older (&lt;= 1.2.3) versions of memcached.</p>
</blockquote>

<p>But I can't find any verifications for this testimony:</p>

<blockquote>
  <p>set() is rather slow in memcached</p>
</blockquote>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-01-22T11:36:49.000+0000</p> 
        <div class="body">
            <p>If replace doesn't work with memcached &lt;= 1.2.3, I don't now why replace() is used within touch() ?!??!
Can't find this replace() bug within memcached changelog. I will try to test out it within the next days.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Marc Bennewitz (private) (mabe) on 2010-01-24T16:18:05.000+0000</p> 
        <div class="body">
            <p>I tested the replace command with memcached 1.2.3 but it works fine.</p>

<p>Fixed in r20590 (trunk) &amp; r20591 (1.10 branch)</p>

        </div>
    </div>
    </div>

