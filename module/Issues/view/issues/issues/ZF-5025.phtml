<h2>ZF-5025: Wrong filesize validation</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-11-22T05:55:46.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-21T05:48:13.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.7.1 (01/Dec/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Ruslan Kornev (woto)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate_File</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hello, first of all sorry for bad English. It's my second submit here, sorry if something isn't right.</p>

<p>Old style does not working</p>

<p>'validators' =&gt; array(
    array('Size', false, array(1, 1048576))
    )</p>

<p>--</p>

<p>This style works
'validators' =&gt; array(
    array('Size', false, array('min' =&gt; '3', 'max' =&gt; '9'))
    )</p>

<p>--</p>

<p>But:</p>

<ol><li>When file is zero size error message looks  like this
"Minimum expected size for file '0b.txt' is '0' but '0' detected"</li>
<li>When file size more than max allowed we got throw error
0 string(1311) "The maximum must be greater than or equal to the minimum filesize, but 0 &lt; 3<br />exception 'Zend_Validate_Exception' with message 'The maximum must be greater than or equal to the minimum filesize, but 0 &lt; 3' in /var/www/!project/library/Zend/Validate/File/Size.php:235
Stack trace:
#0 /var/www/!project/library/Zend/Validate/File/Size.php(303): Zend_Validate_File_Size-&gt;setMax('9B')
#1 /var/www/!project/library/Zend/File/Transfer/Adapter/Abstract.php(589): Zend_Validate_File_Size-&gt;isValid('/tmp/phpwPiifq', Array)
#2 /var/www/!project/library/Zend/Form/Element/File.php(435): Zend_File_Transfer_Adapter_Abstract-&gt;isValid('file')
#3 /var/www/!project/library/Zend/Form.php(1987): Zend_Form_Element_File-&gt;isValid(Array, Array)
#4 /var/www/!project/modules/default/controllers/FilesController.php(1058): Zend_Form-&gt;isValid(Array)
#5 /var/www/!project/library/Zend/Controller/Action.php(503): FilesController-&gt;uploadAction()
#6 /var/www/!project/library/Zend/Controller/Dispatcher/Standard.php(285): Zend_Controller_Action-&gt;dispatch('uploadAction')
#7 /var/www/!project/library/Zend/Controller/Front.php(934): Zend_Controller_Dispatcher_Standard-&gt;dispatch(Object(Zend_Controller_Request_Http), Object(Zend_Controller_Response_Http))
#8 /var/www/!project/index.php(91): Zend_Controller_Front-&gt;dispatch()
#9 {main}"</li>
</ol><p>--</p>

<p>This validator works good with all aviable variants
'validators' =&gt; array(
    array('Size', false, array('min' =&gt; '3KB', 'max' =&gt; '9KB'))
    )</p>

<p>--</p>

<p>I think one of the problem is error in size naming convention look here</p>

<p>protected function _toByteString($size)
{
    $sizes = array('B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');
    for ($i=0; $size &gt;= 1024 &amp;&amp; $i &lt; 9; $i++) {
        $size /= 1024;
    }
    return round($size, 2) . $sizes[$i];
}</p>

<p>--</p>

<p>And here</p>

<p>protected function _fromByteString($size)
{
    if (is_numeric($size)) {
        return (integer) $size;
    }</p>

<pre><code>$type  = trim(substr($size, -2));
$value = substr($size, 0, -2);
switch (strtoupper($type)) {
    case 'YB':
        $value *= (1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024);
        break;
    case 'ZB':
        $value *= (1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024);
        break;
    case 'EB':
        $value *= (1024 * 1024 * 1024 * 1024 * 1024 * 1024);
        break;
    case 'PB':
        $value *= (1024 * 1024 * 1024 * 1024 * 1024);
        break;
    case 'TB':
        $value *= (1024 * 1024 * 1024 * 1024);
        break;
    case 'GB':
        $value *= (1024 * 1024 * 1024);
        break;
    case 'MB':
        $value *= (1024 * 1024);
        break;
    case 'KB':
        $value *= 1024;
        break;
    default:
        break;
}

return $value;
</code></pre>

<p>}</p>

<p>--</p>

<p>Byte ('B') is one character
$value = substr($size, 0, -2);</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-11-23T13:06:18.000+0000</p> 
        <div class="body">
            <p>For a description on how to migrate your script please look into the migration chapter of Zend_File_Transfer:
<a href="http://framework.zend.com/manual/en/zend.file.transfer.migration.html#zend.file.transfer.migration.fromonesixtooneseven">http://framework.zend.com/manual/en/â€¦</a></p>

<p>For your first problem:</p>

<p>When I assign a size validator with "0" as option I get no error returned when I upload a file with 0 bytes...
There is no exception, no error... it simply works.</p>

<p>The other problem of false error message has been fixed.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-11-23T13:06:41.000+0000</p> 
        <div class="body">
            <p>Fixed with r12791</p>

        </div>
    </div>
    </div>

