<h2>ZF2-111: the forward() plugin is not updating the RouteMatch with the controller name.</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-12-05T20:23:09.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-06-14T21:05:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Matthew Weier O'Phinney (matthew)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Mvc\Controller</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi there,
I'm using forward plugin like this:
$result = $this-&gt;forward()-&gt;dispatch('another-controller', array('action' =&gt; 'anotheraction'));
But i got the following error: Script "index/anotheraction.phtml" not found in path
(my script view is here: another-controller/anotheraction.phtml)</p>

<p>Moreover when i disable layout in 'anotheraction', layout is also disabled is my 'mainaction'</p>

<p>code from \Application\View\Listener::renderLayout():
[code]
...
$layout   = $this-&gt;view-&gt;render($this-&gt;layout, $vars);
if($this-&gt;view-&gt;layout()-&gt;isEnabled()) {
$response-&gt;setContent($layout);
} else {
$response-&gt;setContent($vars['content']);<br />
} 
...
[code]</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2012-01-03T21:55:49.000+0000</p> 
        <div class="body">
            <p>This is a problem of scope. When you call forward(), you end up creating a new RouteMatch which is passed on to the new controller. However, when execution is returned to the originating controller, the original RouteMatch object is used. Since the view listener is listening on the Application::dispatch event, this means that it looks only at the original RouteMatch.</p>

<p>We're hoping to solve this soon as we're planning to attack the view layer in an upcoming milestone.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Maks 3w (maks3w) on 2012-06-14T21:05:48.000+0000</p> 
        <div class="body">
            <p>This issue is now obsolete because the code implied has been refactored.</p>

        </div>
    </div>
    </div>

