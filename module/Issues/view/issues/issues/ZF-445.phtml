<h2>ZF-445: Name Filter: Column Names in camelCaps not Accessible?</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2006-10-15T08:09:21.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2008-12-19T13:53:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.9.0 (17/Mar/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-50">ZF-50</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>It appears I am unable, using Zend db, to access columns named in camelCaps.</p>

<p>Example:</p>

<p>Table "users" with three columns - "name," "password," and "passwordHash"</p>

<p>--------- code after -------------------</p>

<pre class="highlight"><code>
$params = array ('host'     =&gt; $host,
                 'username' =&gt; $username,
                 'password' =&gt; $password,
                 'dbname'   =&gt; $dbname);

$db = Zend_Db::factory('PDO_MYSQL', $params);

// set the default adapter for all Zend_Db_Table objects
require_once 'Zend/Db/Table.php';
Zend_Db_Table::setDefaultAdapter($db);

// connect to a table in the database
class Users extends Zend_Db_Table {}
$table = new Users();

// fetch many records from the table
$rowset = $table-&gt;fetchAll();

// display them all
foreach ($rowset as $row) {
    // $row is a Zend_Db_Table_Row object
    print_r($row);
    echo "</code></pre><p><code>"  
    . htmlspecialchars($row-&gt;name) . " "
    . htmlspecialchars($row-&gt;password)
    . htmlspecialchars($row-&gt;passwordHash)
    . ".</code></p><code>\n";
}

?&gt;
</code>

<p>----------------- end code --------------------</p>

<p>Output is:</p>

<p>the print_r line gives me :</p>

<pre class="highlight"><code>
Zend_Db_Table_Row Object ( [_data:protected] =&gt; Array ( [id] =&gt; 1 [name] =&gt; johndoe [password] =&gt; johndoespassword [access] =&gt; 10 [passwordhash] =&gt;
 2o34iu23o4iu2oi3u4 ) [_db:protected] =&gt; Zend_Db_Adapter_Pdo_Mysql Object ( [_pdoType:protected] =&gt; mysql [_config:protected] =&gt; Array ( [host] =&gt; mysql.xxxxxxxxxxx.org [username] =&gt; xxxxxx    [password] =&gt; xxxxxxx   [dbname] =&gt; xxxx_xxxxx) [_fetchMode:protected] =&gt; 2 [_profiler:protected] =&gt; Zend_Db_Profiler Object ( [_queryProfiles:protected] =&gt; Array ( ) [_enabled:protected] =&gt; [_filterElapsedSecs:protected] =&gt; [_filterTypes:protected] =&gt; ) [_connection:protected] =&gt; PDO Object ( ) ) [_table:protected] =&gt; Users Object ( [_db:protected] =&gt; Zend_Db_Adapter_Pdo_Mysql Object ( [_pdoType:protected] =&gt; mysql [_config:protected] =&gt; Array ( [host] =&gt; mysql.xxxxxxx.org [username] =&gt; xxxxxxxxx[password] =&gt; xxxxxxx[dbname] =&gt; xxxx_xxxxxx) [_fetchMode:protected] =&gt; 2 [_profiler:protected] =&gt; Zend_Db_Profiler Object ( [_queryProfiles:protected] =&gt; Array ( ) [_enabled:protected] =&gt; [_filterElapsedSecs:protected] =&gt; [_filterTypes:protected] =&gt; ) [_connection:protected] =&gt; PDO Object ( ) ) [_name:protected] =&gt; users [_cols:protected] =&gt; Array ( [id] =&gt; id [name] =&gt; name [password] =&gt; password [access] =&gt; access [passwordHash] =&gt; passwordhash ) [_primary:protected] =&gt; id ) [_info:protected] =&gt; Array ( [name] =&gt; users [cols] =&gt; Array ( [id] =&gt; id [name] =&gt; name [password] =&gt; password [access] =&gt; access [passwordHash] =&gt; passwordhash ) [primary] =&gt; id ) ) 
</code></pre>

<p>Okay, interesting -- the camelCapped column, "passwordHash" is being lowercased to "passwordhash" in one array, but case is preserved the array further down.</p>

<p>so, no suprise then, when the call to "htmlspecialchars($row-&gt;passwordHash)" gives me a burp:</p>

<pre class="highlight"><code>
Fatal error: Uncaught exception 'Zend_Db_Table_Row_Exception' with message 'column 'passwordHash' not in row' in /home/.xxxxxx/xxxxx/xxxxx.xxxxxx.org/Zend/Db/Table/Row.php:98 Stack trace: #0 /home/.xxxxxx/xxxxx/xxxxx.xxxxxx.org/test.php(80): Zend_Db_Table_Row::__get('passwordHash') #1 {main} thrown in /home/.xxxxxx/xxxxx/xxxxx.xxxxxx.org/Zend/Db/Table/Row.php on line 98
</code></pre>

<p>So --- I ought to be able to clear the exception and get the column value by lowercasing my call - "htmlspecialchars($row-&gt;passwordhash)"  No?</p>

<p>Yes and no.  No exception is thrown, but ---  neither is a value:</p>

<pre class="highlight"><code>
Zend_Db_Table_Row Object ( [_data:protected] =&gt; Array ( [id] =&gt; 1 [name] =&gt; johndoe [password] =&gt; johndoespassword [access] =&gt; 10 [passwordhash] =&gt; 2o34iu23o4iu2oi3u4 ) [_db:protected] =&gt; Zend_Db_Adapter_Pdo_Mysql Object ( [_pdoType:protected] =&gt; mysql [_config:protected] =&gt; Array ( [host] =&gt; xxxx.xxxxxxx.org [username] =&gt; xxxxxxx[password] =&gt; xxxxxxx[dbname] =&gt; xxx_xxxxx) [_fetchMode:protected] =&gt; 2 [_profiler:protected] =&gt; Zend_Db_Profiler Object ( [_queryProfiles:protected] =&gt; Array ( ) [_enabled:protected] =&gt; [_filterElapsedSecs:protected] =&gt; [_filterTypes:protected] =&gt; ) [_connection:protected] =&gt; PDO Object ( ) ) [_table:protected] =&gt; Users Object ( [_db:protected] =&gt; Zend_Db_Adapter_Pdo_Mysql Object ( [_pdoType:protected] =&gt; mysql [_config:protected] =&gt; Array ( [host] =&gt; xxx.xxxxxxxx.org [username] =&gt; xxxxxxxx[password] =&gt; xxxxxxxxx[dbname] =&gt; xxxx_xxx) [_fetchMode:protected] =&gt; 2 [_profiler:protected] =&gt; Zend_Db_Profiler Object ( [_queryProfiles:protected] =&gt; Array ( ) [_enabled:protected] =&gt; [_filterElapsedSecs:protected] =&gt; [_filterTypes:protected] =&gt; ) [_connection:protected] =&gt; PDO Object ( ) ) [_name:protected] =&gt; users [_cols:protected] =&gt; Array ( [id] =&gt; id [name] =&gt; name [password] =&gt; password [access] =&gt; access [passwordHash] =&gt; passwordhash ) [_primary:protected] =&gt; id ) [_info:protected] =&gt; Array ( [name] =&gt; users [cols] =&gt; Array ( [id] =&gt; id [name] =&gt; name [password] =&gt; password [access] =&gt; access [passwordHash] =&gt; passwordhash ) [primary] =&gt; id ) )

johndoe johndoespassword.
                                                       ^^^^^^    (where's htmlspecialchars($row-&gt;passwordhash)?
</code></pre>

<p>So, what?  The column is not accessible under the framework?  I'm not really at liberty to change column names to conform to the framework -- well, that's not completely honest; I could - but not without requiring man hours of changes elsewhere.  Shouldn't the framework permit me to access all columns with mySQL legal names?</p>

<p>Bug, or Operator Error?</p>

<p>Regards</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2006-10-25T12:58:05.000+0000</p> 
        <div class="body">
            <p>This issue is not exactly a duplicate, but when ZF-50 is solved, this issue will also be solved.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2006-11-13T15:22:38.000+0000</p> 
        <div class="body">
            <p>Changing fix version to 0.8.0.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-01-05T17:06:26.000+0000</p> 
        <div class="body">
            <p>Recategorize as Zend_Db_Table component.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-15T23:41:42.000+0000</p> 
        <div class="body">
            <p>As of revision 3995, the use of inflectors has been eliminated from Zend_Db_Table.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-03-15T23:42:04.000+0000</p> 
        <div class="body">
            <p>Resolved in revision 3995.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-12-19T13:53:25.000+0000</p> 
        <div class="body">
            <p>Bookkeeping. Closing old issues and assigning them to the person who ultimately resolved the issue.</p>

        </div>
    </div>
    </div>

