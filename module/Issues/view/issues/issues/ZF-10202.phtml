<h2>ZF-10202: Zend_Session::start() refuses to handle already opened sessions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2010-07-22T01:01:56.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-03-13T18:38:44.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Adam Lundrigan (adamlundrigan)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Session</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>One cannot use other session handling frameworks when using components of ZF that utilize Zend_Session_Namespace to store session information. Starting a new session namespace immediatly calls Zend_Session::start() which itself throws an Exception if a PHP session has already been startet. An actual workaround for this is to fool Zend_Session by simulating a unit-test situation, but this is an ugly hack anyway.</p>

<pre class="highlight"><code>
Zend_Session::$_unitTestEnabled = true;
Zend_Session::start();
Zend_Session::$_unitTestEnabled = false;
</code></pre>

<p>It could be useful for the upcoming framework to relax the session handling a little bit. This would also encourage the ZF 2.0 component vision as stated in the requirements document [<a href="http://framework.zend.com/wiki/display/ZFDEV2/Zend+Framework+2.0+Requirements#ZendFramework2.0Requirements-Providemechanismsforusingjustthepartsoftheframeworkneeded">http://framework.zend.com/wiki/display/â€¦</a>].</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Michael Stubblefield (nomadhacker) on 2010-08-20T10:09:51.000+0000</p> 
        <div class="body">
            <p>I strongly agree.  One of the selling points of Zend is that you're supposed to be able to use the library without having to use their model, or use it within existing applications.</p>

<p>Why does a PHP notice get turned into an exception?  Why can't Zend just use an existing session like PHP core language itself does?</p>

<p>Even a configuration option to use an existing session would be an improvement.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Adam Lundrigan (adamlundrigan) on 2012-03-13T18:38:44.000+0000</p> 
        <div class="body">
            <p>This behaviour cannot be changed for ZFv1.</p>

        </div>
    </div>
    </div>

