<h2>ZF-8156: Zend_Validate_Identical : __construct method doesn't take an array</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Improvement</dd>

    <dt>Created:</dt>
    <dd>2009-10-27T02:01:29.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-10-28T00:56:28.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.10.0 (27/Jan/10)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Karl Delandsheere (karl~ofthedead)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Validate</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Hi,</p>

<p>Imho, the component should take an array too, in its __construct method to allow the use with array configured elements. With the last SVN version of the file, it doesn't work anymore for me.</p>

<p>Here's my code :</p>

<pre class="highlight"><code>$this-&gt;addElement( 'checkbox', 'confirm', array(
    'label' =&gt; '#__label::confirm_your_will_to_remove_this__#',
    'validators' =&gt; array(
        array(
            'validator' =&gt; 'Identical',
            'options' =&gt; array(
                'token' =&gt; '1',
                'messages' =&gt; array(
                    'notSame' =&gt; '#__error::you_have_to_confirm_your_will__#'
                )
            )
        )
    ),
    'required' =&gt; true
) );</code></pre>

<p>And when I Zend_Debug::dump( ...-&gt;getToken() ), I get this :</p>

<pre class="highlight"><code>array(1) {
  ["token"] =&gt; string(1) "1"
}</code></pre>

<p>when it should be :</p>

<p>```</p>

<p>I don't figure out why it does this like that now, with the 1.9.4, everything's ok.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Karl Delandsheere (karl~ofthedead) on 2009-10-27T02:44:54.000+0000</p> 
        <div class="body">
            <p>Maybe something like this ?</p>

<pre class="highlight"><code>public function __construct($token = null)
{
    if ($token instanceof Zend_Config) {
        $token = $token-&gt;toArray();
    }

    if ( is_array( $token ) ) {
        if (array_key_exists('token', $token)) {
            $token = $token['token'];
        } else {
            require_once 'Zend/Validate/Exception.php';
            throw new Zend_Validate_Exception("Missing option 'token'");
        }
    }

    if (null !== $token) {
        $this-&gt;setToken($token);
    }
}</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-27T07:52:46.000+0000</p> 
        <div class="body">
            <p>Out of curiosity, what do you want to archive ?
Comparing "1" with an object will not work... this will never return true.</p>

<p>Why do you expect that you must give array("token" =&gt; xxxx) as parameter ?
It is no-where documented this way.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-27T11:43:53.000+0000</p> 
        <div class="body">
            <p>Sorry to say that, but it could not have worked since below 1.6. I did not check before this release.</p>

<p>The messages are stripped by Zend_Form. All remaining options are set as is to the validator.</p>

<p>This means you have set 
```
as token.</p>

<p>When you would simply set '1' instead of array(xxx), then you would have the expected behaviour.</p>

<p>Note that the identical validator validates now "ANY" datastructure for identical-ness. Previously all inputs were converted to string. For Arrays this meant that you had "array" which produced wrong behaviour.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Karl Delandsheere (karl~ofthedead) on 2009-10-27T13:37:23.000+0000</p> 
        <div class="body">
            <p>So you tell me that there's no way to customize the messages ? It sounds weird to me, because it was working like that for me without any problem.</p>

<p>Since months, I generated my forms by passing an array or a Zend_Config object containing all my options, including the custom messages. It stopped working when I updated Zend from the SVN this morning.</p>

<p>If I understand what you are saying, how do I write my array of options to specify my custom messages ?</p>

<p>See you.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-27T14:30:58.000+0000</p> 
        <div class="body">
            <p>Your issue was about "token" not being recognised as input for configuration.</p>

<p>It was not about customizing messages.</p>

<p>When your problem is that "messages" is not recognised as parameter within the validator, then you should use the correct notation. Because in this case Zend_Validate is not the problem, as you are using Zend_Form and it is Zend_Form which sets the messages on the validator.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Karl Delandsheere (karl~ofthedead) on 2009-10-27T15:01:58.000+0000</p> 
        <div class="body">
            <p>My issue was about "token", yes, but as I didn't understand that it is Zend_Form which sets the messages on the validator, I tought it was an issue. I understand better now that Zend_Form does that messages setting stuff.</p>

<p>But in this case, why do you allow passing a Zend_Config object? I don't really understand why if the expected behaviour is to pass only the token (so one and ONLY ONE value), and why a Zend_Config object and not an array or not both. In this case, why bothering to check if this is a Zend_Config object?</p>

<p>See you.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-27T15:56:59.000+0000</p> 
        <div class="body">
            <p>Just because you don't understand features which are documented and available for other use cases does not mean that this features are useless.</p>

<p>Please note that the feature you are disapointed about is available only for 1.10 and above, and not for 1.9.5 as reported by you.</p>

<p>So what is your issue about ?</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Karl Delandsheere (karl~ofthedead) on 2009-10-27T21:54:49.000+0000</p> 
        <div class="body">
            <p>Hey, I'm not disapointed and I don't say this features is useless. It's not because I'm asking "why" that I think it's useless or wrong.</p>

<p>You answered my question above and so my issue wasn't an issue. End of the issue. Sorry bothering you with my questions, I didn't think I was so misplaced.</p>

<p>Bye.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2009-10-28T00:56:24.000+0000</p> 
        <div class="body">
            <p>Implemented with r18724.
Rewrote manual.</p>

<p>Note that the origin of this issue is no issue as already mentioned. You need to set the options for Zend_Form properly to get translated messages.</p>

        </div>
    </div>
    </div>

