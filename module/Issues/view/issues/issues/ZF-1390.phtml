<h2>ZF-1390: PHP Notice in _setupPrimaryKey() when table primary key is defined</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2007-05-15T15:45:37.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:44:10.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.0.0 RC1 (28/May/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Nicolas Gavalda (farf)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Bill Karwin (bkarwin)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db_Table</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Since r4791, when a primary key is explicitly declared in a Table sub-class as a string or as an array, PHP throws a notice "Undefined offset: 1 in C:\WWW\ZendFramework\library\Zend\Db\Table\Abstract.php on line 645" in the Zend_Db_Table_Abstract::_setupPrimaryKey() method.
It should also affect the Zend_Db_Table_Abstract::insert() method, as the $pkIdentity calculation is the same as in _setupPrimaryKey, but I haven't tested.</p>

<pre class="highlight"><code>
class Items extends Zend_Db_Table_Abstract
{
    protected $_name    = 'items';
    protected $_primary = 'id';

    ...
}
</code></pre>

<p>Possible workarounds : declare _primary as "array('1' =&gt; 'id')", override _identity with "protected $_identity = 0", or redefine the _setupPrimaryKey() method in the sub-class.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Bill Karwin (bkarwin) on 2007-05-16T18:06:04.000+0000</p> 
        <div class="body">
            <p>Fixed in revision 4829.</p>

        </div>
    </div>
    </div>

