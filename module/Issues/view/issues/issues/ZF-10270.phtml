<h2>ZF-10270: Class name for view helper in default folder structure doesn't follow 'application' naming scheme</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2010-08-05T21:45:58.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T21:38:01.000+0000</dd>

    <dt>Status:</dt>
    <dd>Open</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Peter Sharp (stryks)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_View</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>I have found the standard naming conventions very helpful when it comes to classes stored in the default folder structure.  I can look at a class named Application_Model_User and know I'm looking at a model class located in application\model\user.php.</p>

<p>Anything Zend_? can normally be assumed to come from Library\Zend and likewise for custom or third party libraries.</p>

<p>However, this does not seem to apply to the default view helper location (application\views\helpers).  The above logic suggests that classes stored here should be Application_View_Helper_Something, however it appears that, in order to be detected without (re)specifying a HelperPath, the helpers stored in that location need to be named Zend_View_Helper_Something.</p>

<p>This just seems to be against the zend framework naming conventions, and I think it would be good to have changed to bring in line with pretty much everything else.</p>

<p>Cheers</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>
    <p class="comments">No comments to display</p>
    
</div>

