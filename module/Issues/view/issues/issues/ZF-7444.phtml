<h2>ZF-7444: Add new method &quot;combine()&quot; which aggregates two named conditions -&gt; Infinitly nested/complex conditions</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Patch</dd>

    <dt>Created:</dt>
    <dd>2009-08-02T04:05:38.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:52:48.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Benjamin Eberlei (beberlei)
            </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
        <li><a href="/issues/secure/attachment/12121/zf7444_code.diff">zf7444_code.diff</a></li>
            <li><a href="/issues/secure/attachment/12122/zf7444_tests.diff">zf7444_tests.diff</a></li>
        </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Currently Zend_Db_Select does not allow infinitly complex conditions in the where clause. Its not really possible having a combination of OR and AND Statements.</p>

<p>I propose a solution, which is derived from the "sfPropelFinder" plugin: <a href="http://www.symfony-project.org/plugins/sfPropelFinderPlugin/0_3_0?tab=plugin_readme">http://symfony-project.org/plugins/â€¦</a></p>

<p>Its a new method combine(), which aggregates two or more named conditions into one, using either AND or OR as operation. Here are the unittests of the patch, which show 3 use-cases:</p>

<pre class="highlight"><code>
    public function testSelectTwoAndThenOr()
    {
        $select = $this-&gt;_db-&gt;select();
        $select-&gt;from("zfproducts")
               -&gt;where("name = Foo")
               -&gt;where("name = Bar")
               -&gt;orWhere("name = Baz");
        $sql = preg_replace('/\\s+/', ' ', $select-&gt;__toString());
        $this-&gt;assertEquals('SELECT "zfproducts".* FROM "zfproducts" WHERE (((name = Foo) AND (name = Bar)) OR (name = Baz))', $sql);
    }

    public function testSelectWhereTwoNamedCombineOr()
    {
        $select = $this-&gt;_db-&gt;select();
        $select-&gt;from("zfproducts")
               -&gt;where("name = Foo", null, null, 'cond1')
               -&gt;where("name = Bar", null, null, 'cond2')
               -&gt;combine(array('cond1', 'cond2'), 'or');
        $sql = preg_replace('/\\s+/', ' ', $select-&gt;__toString());
        $this-&gt;assertEquals('SELECT "zfproducts".* FROM "zfproducts" WHERE ((name = Foo) OR (name = Bar))', $sql);
    }

    public function testSelectWhereCombineNamedCombine()
    {
        $select = $this-&gt;_db-&gt;select();
        $select-&gt;from("zfproducts")
               -&gt;where("name = Foo", null, null, 'cond1')
               -&gt;where("name = Bar", null, null, 'cond2')
               -&gt;combine(array('cond1', 'cond2'), 'and', 'cond3')
               -&gt;where("name = Baz", null, null, 'cond4')
               -&gt;where('name = Lala', null, null, 'cond5')
               -&gt;combine(array('cond4', 'cond5'), 'and', 'cond6')
               -&gt;combine(array('cond3', 'cond6'), 'or');
        $sql = preg_replace('/\\s+/', ' ', $select-&gt;__toString());
        $this-&gt;assertEquals('SELECT "zfproducts".* FROM "zfproducts" WHERE (((name = Foo) AND (name = Bar)) OR ((name = Baz) AND (name = Lala)))', $sql);
    }
</code></pre>

<p>Test 1 shows, that the proposed change is fully backwards compatible with the "orWhere" condition. Maybe that can be deprecated for 2.0 then.</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Juan Antonio Plaza (jplaza) on 2009-12-05T22:11:21.000+0000</p> 
        <div class="body">
            <p>This would be a great update for 2.0! I've been needing this feature since the start on my new project on ZF.
I don't like using raw queries anymore.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:52:48.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

