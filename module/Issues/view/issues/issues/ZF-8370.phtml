<h2>ZF-8370: Zend_Db_Adapter_Pdo_*::beginTransaction() throws PDOException</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2009-11-22T07:12:39.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2012-11-20T20:53:25.000+0000</dd>

    <dt>Status:</dt>
    <dd>Closed</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
        None
                    </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Db</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When an Exception is thrown from an underlying database connection method (like PDO), none of the Zend_Db_Adapter_*'s seem to catch it (and throw a Zend_Db_Exception of their own). So, in my case, Zend_Db_Adapter_Pdo_Mysql::beginTransaction() throws a PDOException when called on a connection that has a transaction already active.</p>

<p>It seems to me that those methods should catch the underlying exception and throw a Zend_Db_Exception, because I should not have to be aware of the underlying database connector of my Zend_Db_Adapter in the code using the adapter. At this time, I'll have to check for a PDOException in my client code, which becomes useless when switching Adapters to some non-PDO adapter.</p>

<p>Is there any logic behind this behavior or should I just patch it? (My CLA is already sent)</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2012-11-20T20:53:25.000+0000</p> 
        <div class="body">
            <p>Bulk change of all issues last updated before 1st January 2010 as "Won't Fix".</p>

<p>Feel free to re-open and provide a patch if you want to fix this issue.</p>

        </div>
    </div>
    </div>

