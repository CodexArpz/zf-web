<h2>ZF-2840: Zend_OpenId</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Unit Tests: Problem</dd>

    <dt>Created:</dt>
    <dd>2008-03-10T05:51:30.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2010-04-10T11:00:15.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>1.5.3 (28/Jul/08)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Dmitry Stogov (dmitry)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_OpenId</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>Three unit tests errors occur if ext/gmp and ext/bcmath extension are disabled:</p>

<pre class="highlight"><code>
1) testAssociate(Zend_OpenId_ConsumerTest)
Zend_OpenId_Exception: The system doesn't have proper big integer extension
/home/cawa/ZendFramework/branch/release-1.5/library/Zend/OpenId.php:608
/home/cawa/ZendFramework/branch/release-1.5/library/Zend/OpenId/Consumer.php:476
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/ConsumerTest.php:1001
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/ConsumerTest.php:400
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/AllTests.php:43
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/AllTests.php:63

2) testIsUniqueNonce(Zend_OpenId_Consumer_Storage_FileTest)
date(): It is not safe to rely on the system's timezone settings. Please use the date.timezone setting, the TZ environment variable or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected 'America/Los_Angeles' for 'PDT/-7.0/DST' instead
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/Consumer/Storage/FileTest.php:226
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/AllTests.php:43
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/AllTests.php:63

3) testAssociate(Zend_OpenId_ProviderTest)
Zend_OpenId_Exception: The system doesn't have proper big integer extension
/home/cawa/ZendFramework/branch/release-1.5/library/Zend/OpenId.php:608
/home/cawa/ZendFramework/branch/release-1.5/library/Zend/OpenId/Provider.php:451
/home/cawa/ZendFramework/branch/release-1.5/library/Zend/OpenId/Provider.php:337
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/ProviderTest.php:587
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/AllTests.php:43
/home/cawa/ZendFramework/branch/release-1.5/tests/Zend/OpenId/AllTests.php:63
</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Wil Sinclair (wil) on 2008-03-21T17:05:33.000+0000</p> 
        <div class="body">
            <p>This issue should have been fixed for the 1.5 release.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-05-19T12:17:32.000+0000</p> 
        <div class="body">
            <p>To prevent the big int issue when no big int extension is available,
you could simply use the Zend_Locale_Math class which was created to allow big int usage without having a big int extension available.</p>

<p>Look if it fit's your need in this case, and give me response if not so we can look if we can extend it to fit also your needs.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Michelangelo van Dam (dragonbe) on 2008-05-19T12:41:03.000+0000</p> 
        <div class="body">
            <p>Using Zend Framework 1.5.2 I still get the same problems as originally quoted here. Thomas has provided some information on the elements that have triggered this. Can you have a look at it again please.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Ozgur Cem Sen (ozgurcemsen) on 2008-05-30T14:02:43.000+0000</p> 
        <div class="body">
            <p>I also came across the same problem using 1.5.2</p>

<p>Been debating what the behavior should be ! Users should still be able to openid without the big int, right ? Or not ?  :)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-06-17T00:03:37.000+0000</p> 
        <div class="body">
            <p>It is not possible to reuse Zend_Locale_Math for OpenID as it doesn't provide necessary precision.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-06-17T00:06:53.000+0000</p> 
        <div class="body">
            <p>Skip tests in case of unavailable big-math extension. Zend_OpenId is not able to work without them.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2008-06-17T00:53:36.000+0000</p> 
        <div class="body">
            <p>Just for information...</p>

<p>How much precision do you need ?
And would it work if you increase the precision to what you need ?</p>

<p>Orinally there was a precision limit of 200 then we reduced it to 20 and now it's at 10 because the expectation from the devteam was that generally no one needs such a high precision.
How ever, Zend_Locale_Math was designed to allow BCMath calculations without the extension as Zend_Locale itself is in need of it and must be available even without the extension.</p>

<p>If Zend_OpenId would work with a higher precision I would also increase it within Zend_Locale_Math.
Keep in mind that Zend_Locale_Math itself uses bcmath when available but has a buildin fallback if it's not available.
So there is no performance issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Dmitry Stogov (dmitry) on 2008-06-17T01:30:54.000+0000</p> 
        <div class="body">
            <p>OpenID needs at least 1024-bit precision, but Zend_Locale_Match_PhpMath works with regular (long/double) numbers which can't provide more than 64-bit precision.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Kristof Coomans (cyberwolf) on 2010-04-10T11:00:11.000+0000</p> 
        <div class="body">
            <p>It would be nice if this exception would be more verbose ('The system doesn't have proper big integer extension' does not tell you what to do to solve the problem), or at least if it was documented in the manual that Zend_OpenID requires either BCMath or GMP. Currently, <a href="http://framework.zend.com/manual/en/zend.openid.introduction.html">http://framework.zend.com/manual/en/â€¦</a> only mentions "Zend_OpenId takes advantage of the GMP extension, where available. Consider enabling the GMP extension for enhanced performance when using Zend_OpenId."</p>

        </div>
    </div>
    </div>

