<h2>ZF-3588: Incorrect encoding of unicode subjects</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2008-07-06T08:15:57.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2009-05-04T05:28:29.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
                Eran Galperin (erangalp)
            </dd>

    <dt>Assignee:</dt>
    <dd>
                Nico Edtinger (nico)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Mail</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-1688">ZF-1688</a></li>
            <li><a href="/issues/browse/ZF-3912">ZF-3912</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>When using Zend_Mail with utf-8 encoding and hebrew characters, the subject is incorrectly encoded causing artifacts to appear. I've tracked this to the protected method _encodeHeader(), line 393 in Zend_Mail:</p>

<pre class="highlight"><code>
protected function _encodeHeader($value)
    {
      if (Zend_Mime::isPrintable($value)) {
          return $value;
      } else {
          $quotedValue = Zend_Mime::encodeQuotedPrintable($value);
          $quotedValue = str_replace(array('?', ' '), array('=3F', '=20'), $quotedValue);
          return '=?' . $this-&gt;_charset . '?Q?' . $quotedValue . '?=';
      }
    }
</code></pre>

<p>Replacing the quoting method to encodeBase64() of Zend_Mime seems to fix the issue. Meaning:</p>

<pre class="highlight"><code>
protected function _encodeHeader($value)
    {
      if (Zend_Mime::isPrintable($value)) {
          return $value;
      } else {
            return '=?' . $this-&gt;_charset . '?B?' . Zend_Mime::encodeBase64($value) . '?=';
      }
    }
</code></pre>

<p>Will return a correctly formatted utf-8 subject. I'm not an expert on Mime so I can't tell if this is the best solution. However it should be fixed to correctly format utf-8 subjects</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by SÃ©bastien Gallet (haijin) on 2008-08-01T00:42:29.000+0000</p> 
        <div class="body">
            <p>That issue is also present in 1.5.3 and 1.6.0 rc1.</p>

<p>Here is another fix without using the base64 encoding.
It's not perfect either but it corrects the issue.</p>

<pre class="highlight"><code> 
    protected function _encodeHeader($value)
    {
      if (Zend_Mime::isPrintable($value)) {
          return $value;
      } else {
          $quotedValue = Zend_Mime::encodeQuotedPrintable($value);
          $quotedValue = str_replace(array('?', ' ', '_', '=' . Zend_Mime::LINEEND),
              array('=3F', '=20', '=5F', ''), $quotedValue);
          return '=?' . $this-&gt;_charset . '?Q?' . $quotedValue . '?=';
      }
    }
</code></pre>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Levan Cheishvili (levan) on 2009-05-04T05:28:27.000+0000</p> 
        <div class="body">
            <p>It is still not working with some hebrew letters  / or combinations of letters in ZF 1.7.1.
I am using Zend_Mail from ZF 1.7.1. I had to apply the above given patch, and now it is working.
When are you going to update ZF with this patch?</p>

        </div>
    </div>
    </div>

