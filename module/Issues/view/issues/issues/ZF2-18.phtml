<h2>ZF2-18: Extending Zend_Log using namespaces</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>Bug</dd>

    <dt>Created:</dt>
    <dd>2011-06-06T20:56:02.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2011-12-22T19:38:20.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul></ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Evan Coury (evan.pro)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend\Log</li>
            <li>zf-crteam-padraic</li>
            <li>zf-crteam-priority</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
        <li><a href="/issues/browse/ZF-11450">ZF-11450</a></li>
        </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <p>In Zend_Log::factory in line 139 (ZF 1.11) an instance of Zend_Log is created with $log = new self;.</p>

<p>Let me give a use-case to explain:</p>

<p>somewhere at bootstrapping:</p>

<pre class="highlight"><code>
$autoloader = Zend_Loader_Autloader::getInstance();
$autoloader-&gt;registerNamespace("My_");
$autoloader-&gt;setFallbackAutoloader(true);
</code></pre>

<p>extending Zend_Log:</p>

<pre class="highlight"><code>
My_Log extends Zend_Log {

 public function log($message, $priority, $extras = null) {
     // do something else
     parent::log($message, $priority, $extras);
 }

}
</code></pre>

<p>Also at bootstrapping:</p>

<pre class="highlight"><code>
$logger = My_Log::factory(...);
</code></pre>

<p>So the My_Log::log method never will be called -&gt; $log = new self;</p>

<p>First option is to override the Zend_Log::factory and replace $log = new self to $log = new My_Log, but this is urgh.
Better code this:</p>

<pre class="highlight"><code>
$log = new static;
</code></pre>

<p>With this pice of code it is possible to get, due to late static binding, a instance of My_Log, and not Zend_Log...</p>

<p>What do u think?</p>

<p>Tested with ZF 1.8 - 1.11 - works fine (of course &gt; PHP5.3)</p>

<p>cheers</p>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Benoît Durand (intiilapa) on 2011-06-06T21:06:04.000+0000</p> 
        <div class="body">
            <p>@Eric ZF1 must be compatible with PHP 5.2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Matthew Weier O'Phinney (matthew) on 2011-06-06T21:15:21.000+0000</p> 
        <div class="body">
            <p>I'm going to move this issue to the ZF2 issue tracker, as LSB is only available in PHP &gt;= 5.3, and ZF1's minimum version is 5.2.6. There may be other ways to potentially support this in 5.2, but the proper way is using LSB.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benoît Durand (intiilapa) on 2011-06-07T04:55:52.000+0000</p> 
        <div class="body">
            <p>All factory methods of logger, writers, filtesr, and formatters are being refactored within ZF2.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Eric Andre (eandre) on 2011-06-07T08:55:23.000+0000</p> 
        <div class="body">
            <p>Okay, i dont respect the compatibility. So thanks for regarding this issue.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Benoît Durand (intiilapa) on 2011-09-03T08:26:39.000+0000</p> 
        <div class="body">
            <p>Once the common API (puggable, configurator, etc.) will have been decided for the core components of ZF2, Logger will adopt it. Being able to extend any core component is a requirement for this solution.</p>

<p>It is also possible to consider including events in order to customize the logging.</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Evan Coury (evan.pro) on 2011-12-21T22:14:42.000+0000</p> 
        <div class="body">
            <p>I see no reason for us to wait until after we refactor for the new configuration style to make this change. LSB is the correct way to handle a situation like this, and it's a simple enough change. I went ahead and issued a PR for this: <a href="https://github.com/zendframework/zf2/pull/680">https://github.com/zendframework/zf2/pull/680</a></p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Rob Allen (rob) on 2011-12-22T19:38:20.000+0000</p> 
        <div class="body">
            <p>Merged to master</p>

        </div>
    </div>
    </div>

