<h2>ZF-702: Zend_Locale_Format : supporting number scripts in getNumber / isNumber / getFloat / ...etc</h2>

<dl class="metadata">
    <dt>Issue Type:</dt>
    <dd>New Feature</dd>

    <dt>Created:</dt>
    <dd>2006-12-29T20:06:51.000+0000</dd>

    <dt>Last Updated:</dt>
    <dd>2007-07-05T14:43:37.000+0000</dd>

    <dt>Status:</dt>
    <dd>Resolved</dd>

    <dt>Fix version(s):</dt>
    <dd><ul>        <li>0.8.0 (21/Feb/07)</li>
    </ul></dd>

    <dt>Reporter:</dt>
    <dd>
        None
                    </dd>

    <dt>Assignee:</dt>
    <dd>
                Thomas Weidner (thomas)
            </dd>

    <dt>Tags:</dt>
    <dd><ul>        <li>Zend_Locale</li>
        </ul></dd>

    <dt>Related issues:</dt>
    <dd><ul>
    </ul></dd>

    <dt>Attachments:</dt>
    <dd><ul>
    </ul></dd>
</dl>

<div class="description">
    <h3>Description</h3>

    <div class="body">
        <pre class="highlight"><code>
Index: Format.php
===================================================================
--- Format.php  (revision 2551)
+++ Format.php  (working copy)
@@ -101,18 +101,32 @@
      * @param $input  - string
      * @param $locale - OPTIONAL locale 
      * @param $precision - OPTIONAL precision of float value
+     * @param $script - OPTIONAL the script of the numbers
      * @return string
      */
-    public static function getNumber($input, $precision = false, $locale = false)
+    public static function getNumber($input, $precision = false, $locale = false, $script = false)
     {
         if (!is_string($input))
             return $input;
 
-        if (!is_int($precision) and ($locale == false)) {
-            $locale    = $precision;
-            $precision = false;
+        if (!is_int($precision) and ($script == false) ) {
+            
+            if ($locale == false) {
+                $script    = $precision;
+                $locale    = false;
+                $precision = false;                
+            } else {
+                $script    = $locale;
+                $locale    = $precision;
+                $precision = false;
+            }
+            
         }
 
+        if ($script !== false){
+            $input = self::toNumberSystem($input, $script, 'Engl');
+        }
+        
         // Get correct signs for this locale
         $symbols = Zend_Locale_Data::getContent($locale,'numbersymbols');
 
@@ -268,10 +282,16 @@
      * 
      * @param  $input  - localized number string
      * @param  $locale - OPTIONAL locale
+     * @param  $script - OPTIONAL the script of the numbers
      * @return boolean
      */
-    public static function isNumber($input, $locale = false)
+    public static function isNumber($input, $locale = false, $script = false)
     {
+
+        if ($script !== false){
+            $input = self::toNumberSystem($input, $script, 'Engl');
+        }
+        
         // Get correct signs for this locale
         $symbols = Zend_Locale_Data::getContent($locale,'numbersymbols');
 
@@ -291,11 +311,12 @@
      * @param $input     - string
      * @param $locale    - OPTIONAL locale 
      * @param $precision - OPTIONAL precision of float value
+     * @param $script    - OPTIONAL the script of the numbers
      * @return float
      */
-    public static function getFloat($input, $precision = false, $locale = false)
+    public static function getFloat($input, $precision = false, $locale = false, $script = false)
     {
-        return floatval(self::getNumber($input, $precision, $locale));
+        return floatval(self::getNumber($input, $precision, $locale, $script));
     }
 
 
@@ -320,11 +341,12 @@
      * 
      * @param  $input  - localized number string
      * @param  $locale - OPTIONAL locale
+     * @param  $script - OPTIONAL the script of the numbers
      * @return boolean
      */
-    public static function isFloat($value, $locale = false)
+    public static function isFloat($value, $locale = false, $script = false)
     {
-        return self::isNumber($value, $locale);
+        return self::isNumber($value, $locale, $script);
     }
 
 
@@ -342,11 +364,12 @@
      * 
      * @param $input     - string
      * @param $locale    - OPTIONAL locale 
+     * @param $script    - OPTIONAL the script of the numbers
      * @return float
      */
-    public static function getInteger($input, $locale = false)
+    public static function getInteger($input, $locale = false, $script = false)
     {
-        return intval(self::getFloat($input, 0, $locale));
+        return intval(self::getFloat($input, 0, $locale, $script));
     }
 
 
@@ -368,11 +391,12 @@
      * 
      * @param  $input  - localized number string
      * @param  $locale - OPTIONAL locale
+     * @param  $script - OPTIONAL the script of the numbers
      * @return boolean
      */
-    public static function isInteger($value, $locale = false)
+    public static function isInteger($value, $locale = false, $script = false)
     {
-        return self::isNumber($value, $locale);
+        return self::isNumber($value, $locale, $script);
     }
 
 
@@ -580,10 +604,16 @@
      * @param string $date    date string
      * @param string $format  date type CLDR format !!!
      * @param locale $locale  OPTIONAL locale of date string
+     * @param string $script  OPTIONAL the script of the numbers
      * @return array
      */
-    public static function getDate($date, $format = false, $locale = false)
+    public static function getDate($date, $format = false, $locale = false, $script = false)
     {
+    
+        if ($script !== false){
+            $date = self::toNumberSystem($date, $script, 'Engl');
+        }
+    
         if ($format === false) {
             $format = Zend_Locale_Data::getContent($locale, 'defdateformat', 'gregorian');
             $format = $format['default'];
@@ -602,10 +632,16 @@
      * @param string $date    date string
      * @param string $format  date type CLDR format !!!
      * @param locale $locale  OPTIONAL locale of date string
+     * @param string $script  OPTIONAL the script of the numbers
      * @return boolean
      */
-    public static function isDate($date, $format = false, $locale = false)
+    public static function isDate($date, $format = false, $locale = false, $script = false)
     {
+    
+        if ($script !== false){
+            $date = self::toNumberSystem($date, $script, 'Engl');
+        }
+        
         try {
             $date = self::getDate($date, $format, $locale);
         } catch (Exception $e) {
@@ -623,10 +659,16 @@
      * @param string $time    time string
      * @param string $format  time type CLDR format !!!
      * @param locale $locale  OPTIONAL locale of time string
+     * @param string $script  OPTIONAL the script of the numbers
      * @return array
      */
-    public static function getTime($time, $format = false, $locale = false)
+    public static function getTime($time, $format = false, $locale = false, $script = false)
     {
+    
+        if ($script !== false){
+            $time = self::toNumberSystem($time, $script, 'Engl');
+        }
+        
         if ($format === false) {
             $format = Zend_Locale_Data::getContent($locale, 'deftimeformat', 'gregorian');
             $format = $format['default'];
@@ -647,10 +689,16 @@
      * @param string $time    time string
      * @param string $format  time type CLDR format !!!
      * @param locale $locale  OPTIONAL locale of time string
+     * @param string $script  OPTIONAL the script of the numbers
      * @return boolean
      */
     public static function isTime($time, $format = false, $locale = false)
     {
+    
+        if ($script !== false){
+            $time = self::toNumberSystem($time, $script, 'Engl');
+        }
+        
         try {
             $date = self::getTime($time, $format, $locale);
         } catch (Exception $e) {

</code></pre>

    </div>
</div>

<div class="comments">
    <h3>Comments</h3>

    <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-01-05T14:21:51.000+0000</p> 
        <div class="body">
            <p>Changing issue type to "new feature", since this is a cool, new feature and not just a patch ;)</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Gavin (gavin) on 2007-01-19T16:10:04.000+0000</p> 
        <div class="body">
            <p>The API change above is not part of the proposal.  After releasing 0.7, we have reviewed this proposed change.</p>

<p>I think we should not add the optional $script parameter to the API methods in Format.php for toNumber(), isNumber(), getNumber(), getFloat(), toFloat(), isFloat(), getInteger(), isInteger(), toInteger(), _parseDate(), isDate(), getTime(), and isTime().</p>

<p>It is sufficient and simpler for developers to explicitly write:</p>

<p>```</p>

<p>The changes overcomplicate the API with no real added benefit (the code above is easy to write, easy for tools to work with, and easy to understand).</p>

        </div>
    </div>
        <div class="comment">
        <p class="metadata">Posted by Thomas Weidner (thomas) on 2007-01-19T16:10:48.000+0000</p> 
        <div class="body">
            <p>Integrated with SVN 2905 within all Zend_Locale_Format functions</p>

        </div>
    </div>
    </div>

